/**
 */
package xtendCode.prov.impl;

import javax.xml.namespace.QName;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.BasicFeatureMap;
import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.FeatureMap;
import org.eclipse.emf.ecore.util.InternalEList;

import xtendCode.prov.Activity;
import xtendCode.prov.Agent;
import xtendCode.prov.Alternate;
import xtendCode.prov.Association;
import xtendCode.prov.Attribution;
import xtendCode.prov.Bundle;
import xtendCode.prov.BundleConstructor;
import xtendCode.prov.Collection;
import xtendCode.prov.Communication;
import xtendCode.prov.Delegation;
import xtendCode.prov.Derivation;
import xtendCode.prov.EmptyCollection;
import xtendCode.prov.End;
import xtendCode.prov.Entity;
import xtendCode.prov.Generation;
import xtendCode.prov.Influence;
import xtendCode.prov.Invalidation;
import xtendCode.prov.Membership;
import xtendCode.prov.Organization;
import xtendCode.prov.Other;
import xtendCode.prov.PAttribute;
import xtendCode.prov.Person;
import xtendCode.prov.Plan;
import xtendCode.prov.PrimarySource;
import xtendCode.prov.ProvPackage;
import xtendCode.prov.Quotation;
import xtendCode.prov.Revision;
import xtendCode.prov.SoftwareAgent;
import xtendCode.prov.Specialization;
import xtendCode.prov.Start;
import xtendCode.prov.Usage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Bundle Constructor</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link xtendCode.prov.impl.BundleConstructorImpl#getGroup <em>Group</em>}</li>
 *   <li>{@link xtendCode.prov.impl.BundleConstructorImpl#getEntity <em>Entity</em>}</li>
 *   <li>{@link xtendCode.prov.impl.BundleConstructorImpl#getActivity <em>Activity</em>}</li>
 *   <li>{@link xtendCode.prov.impl.BundleConstructorImpl#getWasGeneratedBy <em>Was Generated By</em>}</li>
 *   <li>{@link xtendCode.prov.impl.BundleConstructorImpl#getUsed <em>Used</em>}</li>
 *   <li>{@link xtendCode.prov.impl.BundleConstructorImpl#getWasInformedBy <em>Was Informed By</em>}</li>
 *   <li>{@link xtendCode.prov.impl.BundleConstructorImpl#getWasStartedBy <em>Was Started By</em>}</li>
 *   <li>{@link xtendCode.prov.impl.BundleConstructorImpl#getWasEndedBy <em>Was Ended By</em>}</li>
 *   <li>{@link xtendCode.prov.impl.BundleConstructorImpl#getWasInvalidatedBy <em>Was Invalidated By</em>}</li>
 *   <li>{@link xtendCode.prov.impl.BundleConstructorImpl#getWasDerivedFrom <em>Was Derived From</em>}</li>
 *   <li>{@link xtendCode.prov.impl.BundleConstructorImpl#getWasRevisionOf <em>Was Revision Of</em>}</li>
 *   <li>{@link xtendCode.prov.impl.BundleConstructorImpl#getWasQuotedFrom <em>Was Quoted From</em>}</li>
 *   <li>{@link xtendCode.prov.impl.BundleConstructorImpl#getHadPrimarySource <em>Had Primary Source</em>}</li>
 *   <li>{@link xtendCode.prov.impl.BundleConstructorImpl#getAgent <em>Agent</em>}</li>
 *   <li>{@link xtendCode.prov.impl.BundleConstructorImpl#getPerson <em>Person</em>}</li>
 *   <li>{@link xtendCode.prov.impl.BundleConstructorImpl#getOrganization <em>Organization</em>}</li>
 *   <li>{@link xtendCode.prov.impl.BundleConstructorImpl#getSoftwareAgent <em>Software Agent</em>}</li>
 *   <li>{@link xtendCode.prov.impl.BundleConstructorImpl#getWasAttributedTo <em>Was Attributed To</em>}</li>
 *   <li>{@link xtendCode.prov.impl.BundleConstructorImpl#getWasAssociatedWith <em>Was Associated With</em>}</li>
 *   <li>{@link xtendCode.prov.impl.BundleConstructorImpl#getActedOnBehalfOf <em>Acted On Behalf Of</em>}</li>
 *   <li>{@link xtendCode.prov.impl.BundleConstructorImpl#getWasInfluencedBy <em>Was Influenced By</em>}</li>
 *   <li>{@link xtendCode.prov.impl.BundleConstructorImpl#getBundle <em>Bundle</em>}</li>
 *   <li>{@link xtendCode.prov.impl.BundleConstructorImpl#getSpecializationOf <em>Specialization Of</em>}</li>
 *   <li>{@link xtendCode.prov.impl.BundleConstructorImpl#getAlternateOf <em>Alternate Of</em>}</li>
 *   <li>{@link xtendCode.prov.impl.BundleConstructorImpl#getCollection <em>Collection</em>}</li>
 *   <li>{@link xtendCode.prov.impl.BundleConstructorImpl#getEmptyCollection <em>Empty Collection</em>}</li>
 *   <li>{@link xtendCode.prov.impl.BundleConstructorImpl#getHadMember <em>Had Member</em>}</li>
 *   <li>{@link xtendCode.prov.impl.BundleConstructorImpl#getPlan <em>Plan</em>}</li>
 *   <li>{@link xtendCode.prov.impl.BundleConstructorImpl#getOther <em>Other</em>}</li>
 *   <li>{@link xtendCode.prov.impl.BundleConstructorImpl#getInternalElementGroup <em>Internal Element Group</em>}</li>
 *   <li>{@link xtendCode.prov.impl.BundleConstructorImpl#getInternalElement <em>Internal Element</em>}</li>
 *   <li>{@link xtendCode.prov.impl.BundleConstructorImpl#getId <em>Id</em>}</li>
 *   <li>{@link xtendCode.prov.impl.BundleConstructorImpl#getAnyAttribute <em>Any Attribute</em>}</li>
 * </ul>
 *
 * @generated
 */
public class BundleConstructorImpl extends MinimalEObjectImpl.Container implements BundleConstructor {
	/**
	 * The cached value of the '{@link #getGroup() <em>Group</em>}' attribute list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getGroup()
	 * @generated
	 * @ordered
	 */
	protected FeatureMap group;

	/**
	 * The default value of the '{@link #getId() <em>Id</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getId()
	 * @generated
	 * @ordered
	 */
	protected static final QName ID_EDEFAULT = null;

	/**
	 * The cached value of the '{@link #getId() <em>Id</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getId()
	 * @generated
	 * @ordered
	 */
	protected QName id = ID_EDEFAULT;

	/**
	 * The cached value of the '{@link #getAnyAttribute() <em>Any Attribute</em>}' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getAnyAttribute()
	 * @generated
	 * @ordered
	 */
	protected EList<PAttribute> anyAttribute;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BundleConstructorImpl() {
		super();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	protected EClass eStaticClass() {
		return ProvPackage.Literals.BUNDLE_CONSTRUCTOR;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public FeatureMap getGroup() {
		if (group == null) {
			group = new BasicFeatureMap(this, ProvPackage.BUNDLE_CONSTRUCTOR__GROUP);
		}
		return group;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EList<Entity> getEntity() {
		return getGroup().list(ProvPackage.Literals.BUNDLE_CONSTRUCTOR__ENTITY);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EList<Activity> getActivity() {
		return getGroup().list(ProvPackage.Literals.BUNDLE_CONSTRUCTOR__ACTIVITY);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EList<Generation> getWasGeneratedBy() {
		return getGroup().list(ProvPackage.Literals.BUNDLE_CONSTRUCTOR__WAS_GENERATED_BY);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EList<Usage> getUsed() {
		return getGroup().list(ProvPackage.Literals.BUNDLE_CONSTRUCTOR__USED);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EList<Communication> getWasInformedBy() {
		return getGroup().list(ProvPackage.Literals.BUNDLE_CONSTRUCTOR__WAS_INFORMED_BY);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EList<Start> getWasStartedBy() {
		return getGroup().list(ProvPackage.Literals.BUNDLE_CONSTRUCTOR__WAS_STARTED_BY);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EList<End> getWasEndedBy() {
		return getGroup().list(ProvPackage.Literals.BUNDLE_CONSTRUCTOR__WAS_ENDED_BY);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EList<Invalidation> getWasInvalidatedBy() {
		return getGroup().list(ProvPackage.Literals.BUNDLE_CONSTRUCTOR__WAS_INVALIDATED_BY);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EList<Derivation> getWasDerivedFrom() {
		return getGroup().list(ProvPackage.Literals.BUNDLE_CONSTRUCTOR__WAS_DERIVED_FROM);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EList<Revision> getWasRevisionOf() {
		return getGroup().list(ProvPackage.Literals.BUNDLE_CONSTRUCTOR__WAS_REVISION_OF);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EList<Quotation> getWasQuotedFrom() {
		return getGroup().list(ProvPackage.Literals.BUNDLE_CONSTRUCTOR__WAS_QUOTED_FROM);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EList<PrimarySource> getHadPrimarySource() {
		return getGroup().list(ProvPackage.Literals.BUNDLE_CONSTRUCTOR__HAD_PRIMARY_SOURCE);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EList<Agent> getAgent() {
		return getGroup().list(ProvPackage.Literals.BUNDLE_CONSTRUCTOR__AGENT);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EList<Person> getPerson() {
		return getGroup().list(ProvPackage.Literals.BUNDLE_CONSTRUCTOR__PERSON);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EList<Organization> getOrganization() {
		return getGroup().list(ProvPackage.Literals.BUNDLE_CONSTRUCTOR__ORGANIZATION);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EList<SoftwareAgent> getSoftwareAgent() {
		return getGroup().list(ProvPackage.Literals.BUNDLE_CONSTRUCTOR__SOFTWARE_AGENT);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EList<Attribution> getWasAttributedTo() {
		return getGroup().list(ProvPackage.Literals.BUNDLE_CONSTRUCTOR__WAS_ATTRIBUTED_TO);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EList<Association> getWasAssociatedWith() {
		return getGroup().list(ProvPackage.Literals.BUNDLE_CONSTRUCTOR__WAS_ASSOCIATED_WITH);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EList<Delegation> getActedOnBehalfOf() {
		return getGroup().list(ProvPackage.Literals.BUNDLE_CONSTRUCTOR__ACTED_ON_BEHALF_OF);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EList<Influence> getWasInfluencedBy() {
		return getGroup().list(ProvPackage.Literals.BUNDLE_CONSTRUCTOR__WAS_INFLUENCED_BY);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EList<Bundle> getBundle() {
		return getGroup().list(ProvPackage.Literals.BUNDLE_CONSTRUCTOR__BUNDLE);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EList<Specialization> getSpecializationOf() {
		return getGroup().list(ProvPackage.Literals.BUNDLE_CONSTRUCTOR__SPECIALIZATION_OF);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EList<Alternate> getAlternateOf() {
		return getGroup().list(ProvPackage.Literals.BUNDLE_CONSTRUCTOR__ALTERNATE_OF);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EList<Collection> getCollection() {
		return getGroup().list(ProvPackage.Literals.BUNDLE_CONSTRUCTOR__COLLECTION);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EList<EmptyCollection> getEmptyCollection() {
		return getGroup().list(ProvPackage.Literals.BUNDLE_CONSTRUCTOR__EMPTY_COLLECTION);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EList<Membership> getHadMember() {
		return getGroup().list(ProvPackage.Literals.BUNDLE_CONSTRUCTOR__HAD_MEMBER);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EList<Plan> getPlan() {
		return getGroup().list(ProvPackage.Literals.BUNDLE_CONSTRUCTOR__PLAN);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EList<Other> getOther() {
		return getGroup().list(ProvPackage.Literals.BUNDLE_CONSTRUCTOR__OTHER);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public FeatureMap getInternalElementGroup() {
		return (FeatureMap)getGroup().<FeatureMap.Entry>list(ProvPackage.Literals.BUNDLE_CONSTRUCTOR__INTERNAL_ELEMENT_GROUP);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EList<EObject> getInternalElement() {
		return getInternalElementGroup().list(ProvPackage.Literals.BUNDLE_CONSTRUCTOR__INTERNAL_ELEMENT);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public QName getId() {
		return id;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setId(QName newId) {
		QName oldId = id;
		id = newId;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, ProvPackage.BUNDLE_CONSTRUCTOR__ID, oldId, id));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EList<PAttribute> getAnyAttribute() {
		if (anyAttribute == null) {
			anyAttribute = new EObjectContainmentEList<PAttribute>(PAttribute.class, this, ProvPackage.BUNDLE_CONSTRUCTOR__ANY_ATTRIBUTE);
		}
		return anyAttribute;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
		switch (featureID) {
			case ProvPackage.BUNDLE_CONSTRUCTOR__GROUP:
				return ((InternalEList<?>)getGroup()).basicRemove(otherEnd, msgs);
			case ProvPackage.BUNDLE_CONSTRUCTOR__ENTITY:
				return ((InternalEList<?>)getEntity()).basicRemove(otherEnd, msgs);
			case ProvPackage.BUNDLE_CONSTRUCTOR__ACTIVITY:
				return ((InternalEList<?>)getActivity()).basicRemove(otherEnd, msgs);
			case ProvPackage.BUNDLE_CONSTRUCTOR__WAS_GENERATED_BY:
				return ((InternalEList<?>)getWasGeneratedBy()).basicRemove(otherEnd, msgs);
			case ProvPackage.BUNDLE_CONSTRUCTOR__USED:
				return ((InternalEList<?>)getUsed()).basicRemove(otherEnd, msgs);
			case ProvPackage.BUNDLE_CONSTRUCTOR__WAS_INFORMED_BY:
				return ((InternalEList<?>)getWasInformedBy()).basicRemove(otherEnd, msgs);
			case ProvPackage.BUNDLE_CONSTRUCTOR__WAS_STARTED_BY:
				return ((InternalEList<?>)getWasStartedBy()).basicRemove(otherEnd, msgs);
			case ProvPackage.BUNDLE_CONSTRUCTOR__WAS_ENDED_BY:
				return ((InternalEList<?>)getWasEndedBy()).basicRemove(otherEnd, msgs);
			case ProvPackage.BUNDLE_CONSTRUCTOR__WAS_INVALIDATED_BY:
				return ((InternalEList<?>)getWasInvalidatedBy()).basicRemove(otherEnd, msgs);
			case ProvPackage.BUNDLE_CONSTRUCTOR__WAS_DERIVED_FROM:
				return ((InternalEList<?>)getWasDerivedFrom()).basicRemove(otherEnd, msgs);
			case ProvPackage.BUNDLE_CONSTRUCTOR__WAS_REVISION_OF:
				return ((InternalEList<?>)getWasRevisionOf()).basicRemove(otherEnd, msgs);
			case ProvPackage.BUNDLE_CONSTRUCTOR__WAS_QUOTED_FROM:
				return ((InternalEList<?>)getWasQuotedFrom()).basicRemove(otherEnd, msgs);
			case ProvPackage.BUNDLE_CONSTRUCTOR__HAD_PRIMARY_SOURCE:
				return ((InternalEList<?>)getHadPrimarySource()).basicRemove(otherEnd, msgs);
			case ProvPackage.BUNDLE_CONSTRUCTOR__AGENT:
				return ((InternalEList<?>)getAgent()).basicRemove(otherEnd, msgs);
			case ProvPackage.BUNDLE_CONSTRUCTOR__PERSON:
				return ((InternalEList<?>)getPerson()).basicRemove(otherEnd, msgs);
			case ProvPackage.BUNDLE_CONSTRUCTOR__ORGANIZATION:
				return ((InternalEList<?>)getOrganization()).basicRemove(otherEnd, msgs);
			case ProvPackage.BUNDLE_CONSTRUCTOR__SOFTWARE_AGENT:
				return ((InternalEList<?>)getSoftwareAgent()).basicRemove(otherEnd, msgs);
			case ProvPackage.BUNDLE_CONSTRUCTOR__WAS_ATTRIBUTED_TO:
				return ((InternalEList<?>)getWasAttributedTo()).basicRemove(otherEnd, msgs);
			case ProvPackage.BUNDLE_CONSTRUCTOR__WAS_ASSOCIATED_WITH:
				return ((InternalEList<?>)getWasAssociatedWith()).basicRemove(otherEnd, msgs);
			case ProvPackage.BUNDLE_CONSTRUCTOR__ACTED_ON_BEHALF_OF:
				return ((InternalEList<?>)getActedOnBehalfOf()).basicRemove(otherEnd, msgs);
			case ProvPackage.BUNDLE_CONSTRUCTOR__WAS_INFLUENCED_BY:
				return ((InternalEList<?>)getWasInfluencedBy()).basicRemove(otherEnd, msgs);
			case ProvPackage.BUNDLE_CONSTRUCTOR__BUNDLE:
				return ((InternalEList<?>)getBundle()).basicRemove(otherEnd, msgs);
			case ProvPackage.BUNDLE_CONSTRUCTOR__SPECIALIZATION_OF:
				return ((InternalEList<?>)getSpecializationOf()).basicRemove(otherEnd, msgs);
			case ProvPackage.BUNDLE_CONSTRUCTOR__ALTERNATE_OF:
				return ((InternalEList<?>)getAlternateOf()).basicRemove(otherEnd, msgs);
			case ProvPackage.BUNDLE_CONSTRUCTOR__COLLECTION:
				return ((InternalEList<?>)getCollection()).basicRemove(otherEnd, msgs);
			case ProvPackage.BUNDLE_CONSTRUCTOR__EMPTY_COLLECTION:
				return ((InternalEList<?>)getEmptyCollection()).basicRemove(otherEnd, msgs);
			case ProvPackage.BUNDLE_CONSTRUCTOR__HAD_MEMBER:
				return ((InternalEList<?>)getHadMember()).basicRemove(otherEnd, msgs);
			case ProvPackage.BUNDLE_CONSTRUCTOR__PLAN:
				return ((InternalEList<?>)getPlan()).basicRemove(otherEnd, msgs);
			case ProvPackage.BUNDLE_CONSTRUCTOR__OTHER:
				return ((InternalEList<?>)getOther()).basicRemove(otherEnd, msgs);
			case ProvPackage.BUNDLE_CONSTRUCTOR__INTERNAL_ELEMENT_GROUP:
				return ((InternalEList<?>)getInternalElementGroup()).basicRemove(otherEnd, msgs);
			case ProvPackage.BUNDLE_CONSTRUCTOR__INTERNAL_ELEMENT:
				return ((InternalEList<?>)getInternalElement()).basicRemove(otherEnd, msgs);
			case ProvPackage.BUNDLE_CONSTRUCTOR__ANY_ATTRIBUTE:
				return ((InternalEList<?>)getAnyAttribute()).basicRemove(otherEnd, msgs);
		}
		return super.eInverseRemove(otherEnd, featureID, msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object eGet(int featureID, boolean resolve, boolean coreType) {
		switch (featureID) {
			case ProvPackage.BUNDLE_CONSTRUCTOR__GROUP:
				if (coreType) return getGroup();
				return ((FeatureMap.Internal)getGroup()).getWrapper();
			case ProvPackage.BUNDLE_CONSTRUCTOR__ENTITY:
				return getEntity();
			case ProvPackage.BUNDLE_CONSTRUCTOR__ACTIVITY:
				return getActivity();
			case ProvPackage.BUNDLE_CONSTRUCTOR__WAS_GENERATED_BY:
				return getWasGeneratedBy();
			case ProvPackage.BUNDLE_CONSTRUCTOR__USED:
				return getUsed();
			case ProvPackage.BUNDLE_CONSTRUCTOR__WAS_INFORMED_BY:
				return getWasInformedBy();
			case ProvPackage.BUNDLE_CONSTRUCTOR__WAS_STARTED_BY:
				return getWasStartedBy();
			case ProvPackage.BUNDLE_CONSTRUCTOR__WAS_ENDED_BY:
				return getWasEndedBy();
			case ProvPackage.BUNDLE_CONSTRUCTOR__WAS_INVALIDATED_BY:
				return getWasInvalidatedBy();
			case ProvPackage.BUNDLE_CONSTRUCTOR__WAS_DERIVED_FROM:
				return getWasDerivedFrom();
			case ProvPackage.BUNDLE_CONSTRUCTOR__WAS_REVISION_OF:
				return getWasRevisionOf();
			case ProvPackage.BUNDLE_CONSTRUCTOR__WAS_QUOTED_FROM:
				return getWasQuotedFrom();
			case ProvPackage.BUNDLE_CONSTRUCTOR__HAD_PRIMARY_SOURCE:
				return getHadPrimarySource();
			case ProvPackage.BUNDLE_CONSTRUCTOR__AGENT:
				return getAgent();
			case ProvPackage.BUNDLE_CONSTRUCTOR__PERSON:
				return getPerson();
			case ProvPackage.BUNDLE_CONSTRUCTOR__ORGANIZATION:
				return getOrganization();
			case ProvPackage.BUNDLE_CONSTRUCTOR__SOFTWARE_AGENT:
				return getSoftwareAgent();
			case ProvPackage.BUNDLE_CONSTRUCTOR__WAS_ATTRIBUTED_TO:
				return getWasAttributedTo();
			case ProvPackage.BUNDLE_CONSTRUCTOR__WAS_ASSOCIATED_WITH:
				return getWasAssociatedWith();
			case ProvPackage.BUNDLE_CONSTRUCTOR__ACTED_ON_BEHALF_OF:
				return getActedOnBehalfOf();
			case ProvPackage.BUNDLE_CONSTRUCTOR__WAS_INFLUENCED_BY:
				return getWasInfluencedBy();
			case ProvPackage.BUNDLE_CONSTRUCTOR__BUNDLE:
				return getBundle();
			case ProvPackage.BUNDLE_CONSTRUCTOR__SPECIALIZATION_OF:
				return getSpecializationOf();
			case ProvPackage.BUNDLE_CONSTRUCTOR__ALTERNATE_OF:
				return getAlternateOf();
			case ProvPackage.BUNDLE_CONSTRUCTOR__COLLECTION:
				return getCollection();
			case ProvPackage.BUNDLE_CONSTRUCTOR__EMPTY_COLLECTION:
				return getEmptyCollection();
			case ProvPackage.BUNDLE_CONSTRUCTOR__HAD_MEMBER:
				return getHadMember();
			case ProvPackage.BUNDLE_CONSTRUCTOR__PLAN:
				return getPlan();
			case ProvPackage.BUNDLE_CONSTRUCTOR__OTHER:
				return getOther();
			case ProvPackage.BUNDLE_CONSTRUCTOR__INTERNAL_ELEMENT_GROUP:
				if (coreType) return getInternalElementGroup();
				return ((FeatureMap.Internal)getInternalElementGroup()).getWrapper();
			case ProvPackage.BUNDLE_CONSTRUCTOR__INTERNAL_ELEMENT:
				return getInternalElement();
			case ProvPackage.BUNDLE_CONSTRUCTOR__ID:
				return getId();
			case ProvPackage.BUNDLE_CONSTRUCTOR__ANY_ATTRIBUTE:
				return getAnyAttribute();
		}
		return super.eGet(featureID, resolve, coreType);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@SuppressWarnings("unchecked")
	@Override
	public void eSet(int featureID, Object newValue) {
		switch (featureID) {
			case ProvPackage.BUNDLE_CONSTRUCTOR__GROUP:
				((FeatureMap.Internal)getGroup()).set(newValue);
				return;
			case ProvPackage.BUNDLE_CONSTRUCTOR__ENTITY:
				getEntity().clear();
				getEntity().addAll((java.util.Collection<? extends Entity>)newValue);
				return;
			case ProvPackage.BUNDLE_CONSTRUCTOR__ACTIVITY:
				getActivity().clear();
				getActivity().addAll((java.util.Collection<? extends Activity>)newValue);
				return;
			case ProvPackage.BUNDLE_CONSTRUCTOR__WAS_GENERATED_BY:
				getWasGeneratedBy().clear();
				getWasGeneratedBy().addAll((java.util.Collection<? extends Generation>)newValue);
				return;
			case ProvPackage.BUNDLE_CONSTRUCTOR__USED:
				getUsed().clear();
				getUsed().addAll((java.util.Collection<? extends Usage>)newValue);
				return;
			case ProvPackage.BUNDLE_CONSTRUCTOR__WAS_INFORMED_BY:
				getWasInformedBy().clear();
				getWasInformedBy().addAll((java.util.Collection<? extends Communication>)newValue);
				return;
			case ProvPackage.BUNDLE_CONSTRUCTOR__WAS_STARTED_BY:
				getWasStartedBy().clear();
				getWasStartedBy().addAll((java.util.Collection<? extends Start>)newValue);
				return;
			case ProvPackage.BUNDLE_CONSTRUCTOR__WAS_ENDED_BY:
				getWasEndedBy().clear();
				getWasEndedBy().addAll((java.util.Collection<? extends End>)newValue);
				return;
			case ProvPackage.BUNDLE_CONSTRUCTOR__WAS_INVALIDATED_BY:
				getWasInvalidatedBy().clear();
				getWasInvalidatedBy().addAll((java.util.Collection<? extends Invalidation>)newValue);
				return;
			case ProvPackage.BUNDLE_CONSTRUCTOR__WAS_DERIVED_FROM:
				getWasDerivedFrom().clear();
				getWasDerivedFrom().addAll((java.util.Collection<? extends Derivation>)newValue);
				return;
			case ProvPackage.BUNDLE_CONSTRUCTOR__WAS_REVISION_OF:
				getWasRevisionOf().clear();
				getWasRevisionOf().addAll((java.util.Collection<? extends Revision>)newValue);
				return;
			case ProvPackage.BUNDLE_CONSTRUCTOR__WAS_QUOTED_FROM:
				getWasQuotedFrom().clear();
				getWasQuotedFrom().addAll((java.util.Collection<? extends Quotation>)newValue);
				return;
			case ProvPackage.BUNDLE_CONSTRUCTOR__HAD_PRIMARY_SOURCE:
				getHadPrimarySource().clear();
				getHadPrimarySource().addAll((java.util.Collection<? extends PrimarySource>)newValue);
				return;
			case ProvPackage.BUNDLE_CONSTRUCTOR__AGENT:
				getAgent().clear();
				getAgent().addAll((java.util.Collection<? extends Agent>)newValue);
				return;
			case ProvPackage.BUNDLE_CONSTRUCTOR__PERSON:
				getPerson().clear();
				getPerson().addAll((java.util.Collection<? extends Person>)newValue);
				return;
			case ProvPackage.BUNDLE_CONSTRUCTOR__ORGANIZATION:
				getOrganization().clear();
				getOrganization().addAll((java.util.Collection<? extends Organization>)newValue);
				return;
			case ProvPackage.BUNDLE_CONSTRUCTOR__SOFTWARE_AGENT:
				getSoftwareAgent().clear();
				getSoftwareAgent().addAll((java.util.Collection<? extends SoftwareAgent>)newValue);
				return;
			case ProvPackage.BUNDLE_CONSTRUCTOR__WAS_ATTRIBUTED_TO:
				getWasAttributedTo().clear();
				getWasAttributedTo().addAll((java.util.Collection<? extends Attribution>)newValue);
				return;
			case ProvPackage.BUNDLE_CONSTRUCTOR__WAS_ASSOCIATED_WITH:
				getWasAssociatedWith().clear();
				getWasAssociatedWith().addAll((java.util.Collection<? extends Association>)newValue);
				return;
			case ProvPackage.BUNDLE_CONSTRUCTOR__ACTED_ON_BEHALF_OF:
				getActedOnBehalfOf().clear();
				getActedOnBehalfOf().addAll((java.util.Collection<? extends Delegation>)newValue);
				return;
			case ProvPackage.BUNDLE_CONSTRUCTOR__WAS_INFLUENCED_BY:
				getWasInfluencedBy().clear();
				getWasInfluencedBy().addAll((java.util.Collection<? extends Influence>)newValue);
				return;
			case ProvPackage.BUNDLE_CONSTRUCTOR__BUNDLE:
				getBundle().clear();
				getBundle().addAll((java.util.Collection<? extends Bundle>)newValue);
				return;
			case ProvPackage.BUNDLE_CONSTRUCTOR__SPECIALIZATION_OF:
				getSpecializationOf().clear();
				getSpecializationOf().addAll((java.util.Collection<? extends Specialization>)newValue);
				return;
			case ProvPackage.BUNDLE_CONSTRUCTOR__ALTERNATE_OF:
				getAlternateOf().clear();
				getAlternateOf().addAll((java.util.Collection<? extends Alternate>)newValue);
				return;
			case ProvPackage.BUNDLE_CONSTRUCTOR__COLLECTION:
				getCollection().clear();
				getCollection().addAll((java.util.Collection<? extends Collection>)newValue);
				return;
			case ProvPackage.BUNDLE_CONSTRUCTOR__EMPTY_COLLECTION:
				getEmptyCollection().clear();
				getEmptyCollection().addAll((java.util.Collection<? extends EmptyCollection>)newValue);
				return;
			case ProvPackage.BUNDLE_CONSTRUCTOR__HAD_MEMBER:
				getHadMember().clear();
				getHadMember().addAll((java.util.Collection<? extends Membership>)newValue);
				return;
			case ProvPackage.BUNDLE_CONSTRUCTOR__PLAN:
				getPlan().clear();
				getPlan().addAll((java.util.Collection<? extends Plan>)newValue);
				return;
			case ProvPackage.BUNDLE_CONSTRUCTOR__OTHER:
				getOther().clear();
				getOther().addAll((java.util.Collection<? extends Other>)newValue);
				return;
			case ProvPackage.BUNDLE_CONSTRUCTOR__INTERNAL_ELEMENT_GROUP:
				((FeatureMap.Internal)getInternalElementGroup()).set(newValue);
				return;
			case ProvPackage.BUNDLE_CONSTRUCTOR__ID:
				setId((QName)newValue);
				return;
			case ProvPackage.BUNDLE_CONSTRUCTOR__ANY_ATTRIBUTE:
				getAnyAttribute().clear();
				getAnyAttribute().addAll((java.util.Collection<? extends PAttribute>)newValue);
				return;
		}
		super.eSet(featureID, newValue);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void eUnset(int featureID) {
		switch (featureID) {
			case ProvPackage.BUNDLE_CONSTRUCTOR__GROUP:
				getGroup().clear();
				return;
			case ProvPackage.BUNDLE_CONSTRUCTOR__ENTITY:
				getEntity().clear();
				return;
			case ProvPackage.BUNDLE_CONSTRUCTOR__ACTIVITY:
				getActivity().clear();
				return;
			case ProvPackage.BUNDLE_CONSTRUCTOR__WAS_GENERATED_BY:
				getWasGeneratedBy().clear();
				return;
			case ProvPackage.BUNDLE_CONSTRUCTOR__USED:
				getUsed().clear();
				return;
			case ProvPackage.BUNDLE_CONSTRUCTOR__WAS_INFORMED_BY:
				getWasInformedBy().clear();
				return;
			case ProvPackage.BUNDLE_CONSTRUCTOR__WAS_STARTED_BY:
				getWasStartedBy().clear();
				return;
			case ProvPackage.BUNDLE_CONSTRUCTOR__WAS_ENDED_BY:
				getWasEndedBy().clear();
				return;
			case ProvPackage.BUNDLE_CONSTRUCTOR__WAS_INVALIDATED_BY:
				getWasInvalidatedBy().clear();
				return;
			case ProvPackage.BUNDLE_CONSTRUCTOR__WAS_DERIVED_FROM:
				getWasDerivedFrom().clear();
				return;
			case ProvPackage.BUNDLE_CONSTRUCTOR__WAS_REVISION_OF:
				getWasRevisionOf().clear();
				return;
			case ProvPackage.BUNDLE_CONSTRUCTOR__WAS_QUOTED_FROM:
				getWasQuotedFrom().clear();
				return;
			case ProvPackage.BUNDLE_CONSTRUCTOR__HAD_PRIMARY_SOURCE:
				getHadPrimarySource().clear();
				return;
			case ProvPackage.BUNDLE_CONSTRUCTOR__AGENT:
				getAgent().clear();
				return;
			case ProvPackage.BUNDLE_CONSTRUCTOR__PERSON:
				getPerson().clear();
				return;
			case ProvPackage.BUNDLE_CONSTRUCTOR__ORGANIZATION:
				getOrganization().clear();
				return;
			case ProvPackage.BUNDLE_CONSTRUCTOR__SOFTWARE_AGENT:
				getSoftwareAgent().clear();
				return;
			case ProvPackage.BUNDLE_CONSTRUCTOR__WAS_ATTRIBUTED_TO:
				getWasAttributedTo().clear();
				return;
			case ProvPackage.BUNDLE_CONSTRUCTOR__WAS_ASSOCIATED_WITH:
				getWasAssociatedWith().clear();
				return;
			case ProvPackage.BUNDLE_CONSTRUCTOR__ACTED_ON_BEHALF_OF:
				getActedOnBehalfOf().clear();
				return;
			case ProvPackage.BUNDLE_CONSTRUCTOR__WAS_INFLUENCED_BY:
				getWasInfluencedBy().clear();
				return;
			case ProvPackage.BUNDLE_CONSTRUCTOR__BUNDLE:
				getBundle().clear();
				return;
			case ProvPackage.BUNDLE_CONSTRUCTOR__SPECIALIZATION_OF:
				getSpecializationOf().clear();
				return;
			case ProvPackage.BUNDLE_CONSTRUCTOR__ALTERNATE_OF:
				getAlternateOf().clear();
				return;
			case ProvPackage.BUNDLE_CONSTRUCTOR__COLLECTION:
				getCollection().clear();
				return;
			case ProvPackage.BUNDLE_CONSTRUCTOR__EMPTY_COLLECTION:
				getEmptyCollection().clear();
				return;
			case ProvPackage.BUNDLE_CONSTRUCTOR__HAD_MEMBER:
				getHadMember().clear();
				return;
			case ProvPackage.BUNDLE_CONSTRUCTOR__PLAN:
				getPlan().clear();
				return;
			case ProvPackage.BUNDLE_CONSTRUCTOR__OTHER:
				getOther().clear();
				return;
			case ProvPackage.BUNDLE_CONSTRUCTOR__INTERNAL_ELEMENT_GROUP:
				getInternalElementGroup().clear();
				return;
			case ProvPackage.BUNDLE_CONSTRUCTOR__ID:
				setId(ID_EDEFAULT);
				return;
			case ProvPackage.BUNDLE_CONSTRUCTOR__ANY_ATTRIBUTE:
				getAnyAttribute().clear();
				return;
		}
		super.eUnset(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean eIsSet(int featureID) {
		switch (featureID) {
			case ProvPackage.BUNDLE_CONSTRUCTOR__GROUP:
				return group != null && !group.isEmpty();
			case ProvPackage.BUNDLE_CONSTRUCTOR__ENTITY:
				return !getEntity().isEmpty();
			case ProvPackage.BUNDLE_CONSTRUCTOR__ACTIVITY:
				return !getActivity().isEmpty();
			case ProvPackage.BUNDLE_CONSTRUCTOR__WAS_GENERATED_BY:
				return !getWasGeneratedBy().isEmpty();
			case ProvPackage.BUNDLE_CONSTRUCTOR__USED:
				return !getUsed().isEmpty();
			case ProvPackage.BUNDLE_CONSTRUCTOR__WAS_INFORMED_BY:
				return !getWasInformedBy().isEmpty();
			case ProvPackage.BUNDLE_CONSTRUCTOR__WAS_STARTED_BY:
				return !getWasStartedBy().isEmpty();
			case ProvPackage.BUNDLE_CONSTRUCTOR__WAS_ENDED_BY:
				return !getWasEndedBy().isEmpty();
			case ProvPackage.BUNDLE_CONSTRUCTOR__WAS_INVALIDATED_BY:
				return !getWasInvalidatedBy().isEmpty();
			case ProvPackage.BUNDLE_CONSTRUCTOR__WAS_DERIVED_FROM:
				return !getWasDerivedFrom().isEmpty();
			case ProvPackage.BUNDLE_CONSTRUCTOR__WAS_REVISION_OF:
				return !getWasRevisionOf().isEmpty();
			case ProvPackage.BUNDLE_CONSTRUCTOR__WAS_QUOTED_FROM:
				return !getWasQuotedFrom().isEmpty();
			case ProvPackage.BUNDLE_CONSTRUCTOR__HAD_PRIMARY_SOURCE:
				return !getHadPrimarySource().isEmpty();
			case ProvPackage.BUNDLE_CONSTRUCTOR__AGENT:
				return !getAgent().isEmpty();
			case ProvPackage.BUNDLE_CONSTRUCTOR__PERSON:
				return !getPerson().isEmpty();
			case ProvPackage.BUNDLE_CONSTRUCTOR__ORGANIZATION:
				return !getOrganization().isEmpty();
			case ProvPackage.BUNDLE_CONSTRUCTOR__SOFTWARE_AGENT:
				return !getSoftwareAgent().isEmpty();
			case ProvPackage.BUNDLE_CONSTRUCTOR__WAS_ATTRIBUTED_TO:
				return !getWasAttributedTo().isEmpty();
			case ProvPackage.BUNDLE_CONSTRUCTOR__WAS_ASSOCIATED_WITH:
				return !getWasAssociatedWith().isEmpty();
			case ProvPackage.BUNDLE_CONSTRUCTOR__ACTED_ON_BEHALF_OF:
				return !getActedOnBehalfOf().isEmpty();
			case ProvPackage.BUNDLE_CONSTRUCTOR__WAS_INFLUENCED_BY:
				return !getWasInfluencedBy().isEmpty();
			case ProvPackage.BUNDLE_CONSTRUCTOR__BUNDLE:
				return !getBundle().isEmpty();
			case ProvPackage.BUNDLE_CONSTRUCTOR__SPECIALIZATION_OF:
				return !getSpecializationOf().isEmpty();
			case ProvPackage.BUNDLE_CONSTRUCTOR__ALTERNATE_OF:
				return !getAlternateOf().isEmpty();
			case ProvPackage.BUNDLE_CONSTRUCTOR__COLLECTION:
				return !getCollection().isEmpty();
			case ProvPackage.BUNDLE_CONSTRUCTOR__EMPTY_COLLECTION:
				return !getEmptyCollection().isEmpty();
			case ProvPackage.BUNDLE_CONSTRUCTOR__HAD_MEMBER:
				return !getHadMember().isEmpty();
			case ProvPackage.BUNDLE_CONSTRUCTOR__PLAN:
				return !getPlan().isEmpty();
			case ProvPackage.BUNDLE_CONSTRUCTOR__OTHER:
				return !getOther().isEmpty();
			case ProvPackage.BUNDLE_CONSTRUCTOR__INTERNAL_ELEMENT_GROUP:
				return !getInternalElementGroup().isEmpty();
			case ProvPackage.BUNDLE_CONSTRUCTOR__INTERNAL_ELEMENT:
				return !getInternalElement().isEmpty();
			case ProvPackage.BUNDLE_CONSTRUCTOR__ID:
				return ID_EDEFAULT == null ? id != null : !ID_EDEFAULT.equals(id);
			case ProvPackage.BUNDLE_CONSTRUCTOR__ANY_ATTRIBUTE:
				return anyAttribute != null && !anyAttribute.isEmpty();
		}
		return super.eIsSet(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public String toString() {
		if (eIsProxy()) return super.toString();

		StringBuilder result = new StringBuilder(super.toString());
		result.append(" (group: ");
		result.append(group);
		result.append(", id: ");
		result.append(id);
		result.append(')');
		return result.toString();
	}

} //BundleConstructorImpl
