/**
 */
package xtendCode.prov;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EObject;

import org.eclipse.emf.ecore.util.FeatureMap;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Document</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link xtendCode.prov.Document#getGroup <em>Group</em>}</li>
 *   <li>{@link xtendCode.prov.Document#getEntity <em>Entity</em>}</li>
 *   <li>{@link xtendCode.prov.Document#getActivity <em>Activity</em>}</li>
 *   <li>{@link xtendCode.prov.Document#getWasGeneratedBy <em>Was Generated By</em>}</li>
 *   <li>{@link xtendCode.prov.Document#getUsed <em>Used</em>}</li>
 *   <li>{@link xtendCode.prov.Document#getWasInformedBy <em>Was Informed By</em>}</li>
 *   <li>{@link xtendCode.prov.Document#getWasStartedBy <em>Was Started By</em>}</li>
 *   <li>{@link xtendCode.prov.Document#getWasEndedBy <em>Was Ended By</em>}</li>
 *   <li>{@link xtendCode.prov.Document#getWasInvalidatedBy <em>Was Invalidated By</em>}</li>
 *   <li>{@link xtendCode.prov.Document#getWasDerivedFrom <em>Was Derived From</em>}</li>
 *   <li>{@link xtendCode.prov.Document#getWasRevisionOf <em>Was Revision Of</em>}</li>
 *   <li>{@link xtendCode.prov.Document#getWasQuotedFrom <em>Was Quoted From</em>}</li>
 *   <li>{@link xtendCode.prov.Document#getHadPrimarySource <em>Had Primary Source</em>}</li>
 *   <li>{@link xtendCode.prov.Document#getAgent <em>Agent</em>}</li>
 *   <li>{@link xtendCode.prov.Document#getPerson <em>Person</em>}</li>
 *   <li>{@link xtendCode.prov.Document#getOrganization <em>Organization</em>}</li>
 *   <li>{@link xtendCode.prov.Document#getSoftwareAgent <em>Software Agent</em>}</li>
 *   <li>{@link xtendCode.prov.Document#getWasAttributedTo <em>Was Attributed To</em>}</li>
 *   <li>{@link xtendCode.prov.Document#getWasAssociatedWith <em>Was Associated With</em>}</li>
 *   <li>{@link xtendCode.prov.Document#getActedOnBehalfOf <em>Acted On Behalf Of</em>}</li>
 *   <li>{@link xtendCode.prov.Document#getWasInfluencedBy <em>Was Influenced By</em>}</li>
 *   <li>{@link xtendCode.prov.Document#getBundle <em>Bundle</em>}</li>
 *   <li>{@link xtendCode.prov.Document#getSpecializationOf <em>Specialization Of</em>}</li>
 *   <li>{@link xtendCode.prov.Document#getAlternateOf <em>Alternate Of</em>}</li>
 *   <li>{@link xtendCode.prov.Document#getCollection <em>Collection</em>}</li>
 *   <li>{@link xtendCode.prov.Document#getEmptyCollection <em>Empty Collection</em>}</li>
 *   <li>{@link xtendCode.prov.Document#getHadMember <em>Had Member</em>}</li>
 *   <li>{@link xtendCode.prov.Document#getPlan <em>Plan</em>}</li>
 *   <li>{@link xtendCode.prov.Document#getOther <em>Other</em>}</li>
 *   <li>{@link xtendCode.prov.Document#getInternalElementGroup <em>Internal Element Group</em>}</li>
 *   <li>{@link xtendCode.prov.Document#getInternalElement <em>Internal Element</em>}</li>
 *   <li>{@link xtendCode.prov.Document#getBundleContent <em>Bundle Content</em>}</li>
 *   <li>{@link xtendCode.prov.Document#getId <em>Id</em>}</li>
 * </ul>
 *
 * @see xtendCode.prov.ProvPackage#getDocument()
 * @model extendedMetaData="name='Document' kind='elementOnly'"
 * @generated
 */
public interface Document extends EObject {
	/**
	 * Returns the value of the '<em><b>Group</b></em>' attribute list.
	 * The list contents are of type {@link org.eclipse.emf.ecore.util.FeatureMap.Entry}.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Group</em>' attribute list isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Group</em>' attribute list.
	 * @see xtendCode.prov.ProvPackage#getDocument_Group()
	 * @model unique="false" dataType="org.eclipse.emf.ecore.EFeatureMapEntry" many="true"
	 *        extendedMetaData="kind='group' name='group:0'"
	 * @generated
	 */
	FeatureMap getGroup();

	/**
	 * Returns the value of the '<em><b>Entity</b></em>' containment reference list.
	 * The list contents are of type {@link xtendCode.prov.Entity}.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Entity</em>' containment reference list isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Entity</em>' containment reference list.
	 * @see xtendCode.prov.ProvPackage#getDocument_Entity()
	 * @model containment="true" transient="true" volatile="true" derived="true"
	 *        extendedMetaData="kind='element' name='entity' namespace='##targetNamespace' group='#group:0'"
	 * @generated
	 */
	EList<Entity> getEntity();

	/**
	 * Returns the value of the '<em><b>Activity</b></em>' containment reference list.
	 * The list contents are of type {@link xtendCode.prov.Activity}.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Activity</em>' containment reference list isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Activity</em>' containment reference list.
	 * @see xtendCode.prov.ProvPackage#getDocument_Activity()
	 * @model containment="true" transient="true" volatile="true" derived="true"
	 *        extendedMetaData="kind='element' name='activity' namespace='##targetNamespace' group='#group:0'"
	 * @generated
	 */
	EList<Activity> getActivity();

	/**
	 * Returns the value of the '<em><b>Was Generated By</b></em>' containment reference list.
	 * The list contents are of type {@link xtendCode.prov.Generation}.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Was Generated By</em>' containment reference list isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Was Generated By</em>' containment reference list.
	 * @see xtendCode.prov.ProvPackage#getDocument_WasGeneratedBy()
	 * @model containment="true" transient="true" volatile="true" derived="true"
	 *        extendedMetaData="kind='element' name='wasGeneratedBy' namespace='##targetNamespace' group='#group:0'"
	 * @generated
	 */
	EList<Generation> getWasGeneratedBy();

	/**
	 * Returns the value of the '<em><b>Used</b></em>' containment reference list.
	 * The list contents are of type {@link xtendCode.prov.Usage}.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Used</em>' containment reference list isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Used</em>' containment reference list.
	 * @see xtendCode.prov.ProvPackage#getDocument_Used()
	 * @model containment="true" transient="true" volatile="true" derived="true"
	 *        extendedMetaData="kind='element' name='used' namespace='##targetNamespace' group='#group:0'"
	 * @generated
	 */
	EList<Usage> getUsed();

	/**
	 * Returns the value of the '<em><b>Was Informed By</b></em>' containment reference list.
	 * The list contents are of type {@link xtendCode.prov.Communication}.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Was Informed By</em>' containment reference list isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Was Informed By</em>' containment reference list.
	 * @see xtendCode.prov.ProvPackage#getDocument_WasInformedBy()
	 * @model containment="true" transient="true" volatile="true" derived="true"
	 *        extendedMetaData="kind='element' name='wasInformedBy' namespace='##targetNamespace' group='#group:0'"
	 * @generated
	 */
	EList<Communication> getWasInformedBy();

	/**
	 * Returns the value of the '<em><b>Was Started By</b></em>' containment reference list.
	 * The list contents are of type {@link xtendCode.prov.Start}.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Was Started By</em>' containment reference list isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Was Started By</em>' containment reference list.
	 * @see xtendCode.prov.ProvPackage#getDocument_WasStartedBy()
	 * @model containment="true" transient="true" volatile="true" derived="true"
	 *        extendedMetaData="kind='element' name='wasStartedBy' namespace='##targetNamespace' group='#group:0'"
	 * @generated
	 */
	EList<Start> getWasStartedBy();

	/**
	 * Returns the value of the '<em><b>Was Ended By</b></em>' containment reference list.
	 * The list contents are of type {@link xtendCode.prov.End}.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Was Ended By</em>' containment reference list isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Was Ended By</em>' containment reference list.
	 * @see xtendCode.prov.ProvPackage#getDocument_WasEndedBy()
	 * @model containment="true" transient="true" volatile="true" derived="true"
	 *        extendedMetaData="kind='element' name='wasEndedBy' namespace='##targetNamespace' group='#group:0'"
	 * @generated
	 */
	EList<End> getWasEndedBy();

	/**
	 * Returns the value of the '<em><b>Was Invalidated By</b></em>' containment reference list.
	 * The list contents are of type {@link xtendCode.prov.Invalidation}.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Was Invalidated By</em>' containment reference list isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Was Invalidated By</em>' containment reference list.
	 * @see xtendCode.prov.ProvPackage#getDocument_WasInvalidatedBy()
	 * @model containment="true" transient="true" volatile="true" derived="true"
	 *        extendedMetaData="kind='element' name='wasInvalidatedBy' namespace='##targetNamespace' group='#group:0'"
	 * @generated
	 */
	EList<Invalidation> getWasInvalidatedBy();

	/**
	 * Returns the value of the '<em><b>Was Derived From</b></em>' containment reference list.
	 * The list contents are of type {@link xtendCode.prov.Derivation}.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Was Derived From</em>' containment reference list isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Was Derived From</em>' containment reference list.
	 * @see xtendCode.prov.ProvPackage#getDocument_WasDerivedFrom()
	 * @model containment="true" transient="true" volatile="true" derived="true"
	 *        extendedMetaData="kind='element' name='wasDerivedFrom' namespace='##targetNamespace' group='#group:0'"
	 * @generated
	 */
	EList<Derivation> getWasDerivedFrom();

	/**
	 * Returns the value of the '<em><b>Was Revision Of</b></em>' containment reference list.
	 * The list contents are of type {@link xtendCode.prov.Revision}.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Was Revision Of</em>' containment reference list isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Was Revision Of</em>' containment reference list.
	 * @see xtendCode.prov.ProvPackage#getDocument_WasRevisionOf()
	 * @model containment="true" transient="true" volatile="true" derived="true"
	 *        extendedMetaData="kind='element' name='wasRevisionOf' namespace='##targetNamespace' group='#group:0'"
	 * @generated
	 */
	EList<Revision> getWasRevisionOf();

	/**
	 * Returns the value of the '<em><b>Was Quoted From</b></em>' containment reference list.
	 * The list contents are of type {@link xtendCode.prov.Quotation}.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Was Quoted From</em>' containment reference list isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Was Quoted From</em>' containment reference list.
	 * @see xtendCode.prov.ProvPackage#getDocument_WasQuotedFrom()
	 * @model containment="true" transient="true" volatile="true" derived="true"
	 *        extendedMetaData="kind='element' name='wasQuotedFrom' namespace='##targetNamespace' group='#group:0'"
	 * @generated
	 */
	EList<Quotation> getWasQuotedFrom();

	/**
	 * Returns the value of the '<em><b>Had Primary Source</b></em>' containment reference list.
	 * The list contents are of type {@link xtendCode.prov.PrimarySource}.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Had Primary Source</em>' containment reference list isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Had Primary Source</em>' containment reference list.
	 * @see xtendCode.prov.ProvPackage#getDocument_HadPrimarySource()
	 * @model containment="true" transient="true" volatile="true" derived="true"
	 *        extendedMetaData="kind='element' name='hadPrimarySource' namespace='##targetNamespace' group='#group:0'"
	 * @generated
	 */
	EList<PrimarySource> getHadPrimarySource();

	/**
	 * Returns the value of the '<em><b>Agent</b></em>' containment reference list.
	 * The list contents are of type {@link xtendCode.prov.Agent}.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Agent</em>' containment reference list isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Agent</em>' containment reference list.
	 * @see xtendCode.prov.ProvPackage#getDocument_Agent()
	 * @model containment="true" transient="true" volatile="true" derived="true"
	 *        extendedMetaData="kind='element' name='agent' namespace='##targetNamespace' group='#group:0'"
	 * @generated
	 */
	EList<Agent> getAgent();

	/**
	 * Returns the value of the '<em><b>Person</b></em>' containment reference list.
	 * The list contents are of type {@link xtendCode.prov.Person}.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Person</em>' containment reference list isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Person</em>' containment reference list.
	 * @see xtendCode.prov.ProvPackage#getDocument_Person()
	 * @model containment="true" transient="true" volatile="true" derived="true"
	 *        extendedMetaData="kind='element' name='person' namespace='##targetNamespace' group='#group:0'"
	 * @generated
	 */
	EList<Person> getPerson();

	/**
	 * Returns the value of the '<em><b>Organization</b></em>' containment reference list.
	 * The list contents are of type {@link xtendCode.prov.Organization}.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Organization</em>' containment reference list isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Organization</em>' containment reference list.
	 * @see xtendCode.prov.ProvPackage#getDocument_Organization()
	 * @model containment="true" transient="true" volatile="true" derived="true"
	 *        extendedMetaData="kind='element' name='organization' namespace='##targetNamespace' group='#group:0'"
	 * @generated
	 */
	EList<Organization> getOrganization();

	/**
	 * Returns the value of the '<em><b>Software Agent</b></em>' containment reference list.
	 * The list contents are of type {@link xtendCode.prov.SoftwareAgent}.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Software Agent</em>' containment reference list isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Software Agent</em>' containment reference list.
	 * @see xtendCode.prov.ProvPackage#getDocument_SoftwareAgent()
	 * @model containment="true" transient="true" volatile="true" derived="true"
	 *        extendedMetaData="kind='element' name='softwareAgent' namespace='##targetNamespace' group='#group:0'"
	 * @generated
	 */
	EList<SoftwareAgent> getSoftwareAgent();

	/**
	 * Returns the value of the '<em><b>Was Attributed To</b></em>' containment reference list.
	 * The list contents are of type {@link xtendCode.prov.Attribution}.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Was Attributed To</em>' containment reference list isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Was Attributed To</em>' containment reference list.
	 * @see xtendCode.prov.ProvPackage#getDocument_WasAttributedTo()
	 * @model containment="true" transient="true" volatile="true" derived="true"
	 *        extendedMetaData="kind='element' name='wasAttributedTo' namespace='##targetNamespace' group='#group:0'"
	 * @generated
	 */
	EList<Attribution> getWasAttributedTo();

	/**
	 * Returns the value of the '<em><b>Was Associated With</b></em>' containment reference list.
	 * The list contents are of type {@link xtendCode.prov.Association}.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Was Associated With</em>' containment reference list isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Was Associated With</em>' containment reference list.
	 * @see xtendCode.prov.ProvPackage#getDocument_WasAssociatedWith()
	 * @model containment="true" transient="true" volatile="true" derived="true"
	 *        extendedMetaData="kind='element' name='wasAssociatedWith' namespace='##targetNamespace' group='#group:0'"
	 * @generated
	 */
	EList<Association> getWasAssociatedWith();

	/**
	 * Returns the value of the '<em><b>Acted On Behalf Of</b></em>' containment reference list.
	 * The list contents are of type {@link xtendCode.prov.Delegation}.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Acted On Behalf Of</em>' containment reference list isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Acted On Behalf Of</em>' containment reference list.
	 * @see xtendCode.prov.ProvPackage#getDocument_ActedOnBehalfOf()
	 * @model containment="true" transient="true" volatile="true" derived="true"
	 *        extendedMetaData="kind='element' name='actedOnBehalfOf' namespace='##targetNamespace' group='#group:0'"
	 * @generated
	 */
	EList<Delegation> getActedOnBehalfOf();

	/**
	 * Returns the value of the '<em><b>Was Influenced By</b></em>' containment reference list.
	 * The list contents are of type {@link xtendCode.prov.Influence}.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Was Influenced By</em>' containment reference list isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Was Influenced By</em>' containment reference list.
	 * @see xtendCode.prov.ProvPackage#getDocument_WasInfluencedBy()
	 * @model containment="true" transient="true" volatile="true" derived="true"
	 *        extendedMetaData="kind='element' name='wasInfluencedBy' namespace='##targetNamespace' group='#group:0'"
	 * @generated
	 */
	EList<Influence> getWasInfluencedBy();

	/**
	 * Returns the value of the '<em><b>Bundle</b></em>' containment reference list.
	 * The list contents are of type {@link xtendCode.prov.Bundle}.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Bundle</em>' containment reference list isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Bundle</em>' containment reference list.
	 * @see xtendCode.prov.ProvPackage#getDocument_Bundle()
	 * @model containment="true" transient="true" volatile="true" derived="true"
	 *        extendedMetaData="kind='element' name='bundle' namespace='##targetNamespace' group='#group:0'"
	 * @generated
	 */
	EList<Bundle> getBundle();

	/**
	 * Returns the value of the '<em><b>Specialization Of</b></em>' containment reference list.
	 * The list contents are of type {@link xtendCode.prov.Specialization}.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Specialization Of</em>' containment reference list isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Specialization Of</em>' containment reference list.
	 * @see xtendCode.prov.ProvPackage#getDocument_SpecializationOf()
	 * @model containment="true" transient="true" volatile="true" derived="true"
	 *        extendedMetaData="kind='element' name='specializationOf' namespace='##targetNamespace' group='#group:0'"
	 * @generated
	 */
	EList<Specialization> getSpecializationOf();

	/**
	 * Returns the value of the '<em><b>Alternate Of</b></em>' containment reference list.
	 * The list contents are of type {@link xtendCode.prov.Alternate}.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Alternate Of</em>' containment reference list isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Alternate Of</em>' containment reference list.
	 * @see xtendCode.prov.ProvPackage#getDocument_AlternateOf()
	 * @model containment="true" transient="true" volatile="true" derived="true"
	 *        extendedMetaData="kind='element' name='alternateOf' namespace='##targetNamespace' group='#group:0'"
	 * @generated
	 */
	EList<Alternate> getAlternateOf();

	/**
	 * Returns the value of the '<em><b>Collection</b></em>' containment reference list.
	 * The list contents are of type {@link xtendCode.prov.Collection}.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Collection</em>' containment reference list isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Collection</em>' containment reference list.
	 * @see xtendCode.prov.ProvPackage#getDocument_Collection()
	 * @model containment="true" transient="true" volatile="true" derived="true"
	 *        extendedMetaData="kind='element' name='collection' namespace='##targetNamespace' group='#group:0'"
	 * @generated
	 */
	EList<Collection> getCollection();

	/**
	 * Returns the value of the '<em><b>Empty Collection</b></em>' containment reference list.
	 * The list contents are of type {@link xtendCode.prov.EmptyCollection}.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Empty Collection</em>' containment reference list isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Empty Collection</em>' containment reference list.
	 * @see xtendCode.prov.ProvPackage#getDocument_EmptyCollection()
	 * @model containment="true" transient="true" volatile="true" derived="true"
	 *        extendedMetaData="kind='element' name='emptyCollection' namespace='##targetNamespace' group='#group:0'"
	 * @generated
	 */
	EList<EmptyCollection> getEmptyCollection();

	/**
	 * Returns the value of the '<em><b>Had Member</b></em>' containment reference list.
	 * The list contents are of type {@link xtendCode.prov.Membership}.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Had Member</em>' containment reference list isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Had Member</em>' containment reference list.
	 * @see xtendCode.prov.ProvPackage#getDocument_HadMember()
	 * @model containment="true" transient="true" volatile="true" derived="true"
	 *        extendedMetaData="kind='element' name='hadMember' namespace='##targetNamespace' group='#group:0'"
	 * @generated
	 */
	EList<Membership> getHadMember();

	/**
	 * Returns the value of the '<em><b>Plan</b></em>' containment reference list.
	 * The list contents are of type {@link xtendCode.prov.Plan}.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Plan</em>' containment reference list isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Plan</em>' containment reference list.
	 * @see xtendCode.prov.ProvPackage#getDocument_Plan()
	 * @model containment="true" transient="true" volatile="true" derived="true"
	 *        extendedMetaData="kind='element' name='plan' namespace='##targetNamespace' group='#group:0'"
	 * @generated
	 */
	EList<Plan> getPlan();

	/**
	 * Returns the value of the '<em><b>Other</b></em>' containment reference list.
	 * The list contents are of type {@link xtendCode.prov.Other}.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Other</em>' containment reference list isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Other</em>' containment reference list.
	 * @see xtendCode.prov.ProvPackage#getDocument_Other()
	 * @model containment="true" transient="true" volatile="true" derived="true"
	 *        extendedMetaData="kind='element' name='other' namespace='##targetNamespace' group='#group:0'"
	 * @generated
	 */
	EList<Other> getOther();

	/**
	 * Returns the value of the '<em><b>Internal Element Group</b></em>' attribute list.
	 * The list contents are of type {@link org.eclipse.emf.ecore.util.FeatureMap.Entry}.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Internal Element Group</em>' attribute list isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Internal Element Group</em>' attribute list.
	 * @see xtendCode.prov.ProvPackage#getDocument_InternalElementGroup()
	 * @model unique="false" dataType="org.eclipse.emf.ecore.EFeatureMapEntry" many="true" transient="true" volatile="true" derived="true"
	 *        extendedMetaData="kind='group' name='internalElement:group' namespace='##targetNamespace' group='#group:0'"
	 * @generated
	 */
	FeatureMap getInternalElementGroup();

	/**
	 * Returns the value of the '<em><b>Internal Element</b></em>' containment reference list.
	 * The list contents are of type {@link org.eclipse.emf.ecore.EObject}.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Internal Element</em>' containment reference list isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Internal Element</em>' containment reference list.
	 * @see xtendCode.prov.ProvPackage#getDocument_InternalElement()
	 * @model containment="true" transient="true" changeable="false" volatile="true" derived="true"
	 *        extendedMetaData="kind='element' name='internalElement' namespace='##targetNamespace' group='internalElement:group'"
	 * @generated
	 */
	EList<EObject> getInternalElement();

	/**
	 * Returns the value of the '<em><b>Bundle Content</b></em>' containment reference list.
	 * The list contents are of type {@link xtendCode.prov.BundleConstructor}.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Bundle Content</em>' containment reference list isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Bundle Content</em>' containment reference list.
	 * @see xtendCode.prov.ProvPackage#getDocument_BundleContent()
	 * @model containment="true" transient="true" volatile="true" derived="true"
	 *        extendedMetaData="kind='element' name='bundleContent' namespace='##targetNamespace' group='#group:0'"
	 * @generated
	 */
	EList<BundleConstructor> getBundleContent();

	/**
	 * Returns the value of the '<em><b>Id</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Id</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Id</em>' attribute.
	 * @see #setId(String)
	 * @see xtendCode.prov.ProvPackage#getDocument_Id()
	 * @model id="true"
	 * @generated
	 */
	String getId();

	/**
	 * Sets the value of the '{@link xtendCode.prov.Document#getId <em>Id</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Id</em>' attribute.
	 * @see #getId()
	 * @generated
	 */
	void setId(String value);

} // Document
