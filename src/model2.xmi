<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:PapyrusJava="http://www.eclipse.org/papyrus/PapyrusJava/1" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:standard="http://www.eclipse.org/uml2/5.0.0/UML/Profile/Standard" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML">
  <uml:Model xmi:id="_8PRrkAOoEembt-LQJVhh1g" name="GelJ_UML_2">
    <packageImport xmi:type="uml:PackageImport" xmi:id="_8ecwAAOoEembt-LQJVhh1g">
      <importedPackage xmi:type="uml:Model" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#_0"/>
    </packageImport>
    <packagedElement xmi:type="uml:Interaction" xmi:id="_8VqAYAOoEembt-LQJVhh1g" name="Interaction1">
      <ownedAttribute xmi:type="uml:Property" xmi:id="_RchagAOrEembC_jgwtKO0Q" name=""/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_VQbJ8QOrEembC_jgwtKO0Q" name=""/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_WCHsoQOrEembC_jgwtKO0Q" name=""/>
      <lifeline xmi:type="uml:Lifeline" xmi:id="_RcgMYAOrEembC_jgwtKO0Q" name="" represents="_RchagAOrEembC_jgwtKO0Q"/>
      <lifeline xmi:type="uml:Lifeline" xmi:id="_T_gUoAOrEembC_jgwtKO0Q" name=""/>
      <lifeline xmi:type="uml:Lifeline" xmi:id="_VQbJ8AOrEembC_jgwtKO0Q" name="" represents="_VQbJ8QOrEembC_jgwtKO0Q" coveredBy="_gMTMMAOsEembC_jgwtKO0Q _gMSlIAOsEembC_jgwtKO0Q"/>
      <lifeline xmi:type="uml:Lifeline" xmi:id="_WCHsoAOrEembC_jgwtKO0Q" name="" represents="_WCHsoQOrEembC_jgwtKO0Q"/>
      <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_gMTMMAOsEembC_jgwtKO0Q" name="ActionExecutionSpecification24Start" covered="_VQbJ8AOrEembC_jgwtKO0Q" execution="_gMSlIAOsEembC_jgwtKO0Q"/>
      <fragment xmi:type="uml:ActionExecutionSpecification" xmi:id="_gMSlIAOsEembC_jgwtKO0Q" name="ActionExecutionSpecification24" covered="_VQbJ8AOrEembC_jgwtKO0Q" start="_gMTMMAOsEembC_jgwtKO0Q"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_EAAuQBUTEemIe6OhVnSywA" name="src">
      <packagedElement xmi:type="uml:Package" xmi:id="_EA1NoBUTEemIe6OhVnSywA" name="db">
        <packagedElement xmi:type="uml:Package" xmi:id="_EA2bwBUTEemIe6OhVnSywA" name="Classes">
          <packagedElement xmi:type="uml:Class" xmi:id="_EBAMwBUTEemIe6OhVnSywA" name="UnfinishedExperiment" visibility="public">
            <ownedAttribute xmi:type="uml:Property" xmi:id="_EBQEYBUTEemIe6OhVnSywA" name="id" visibility="private" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_EFfEIBUTEemIe6OhVnSywA" name="name" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_EFiHcBUTEemIe6OhVnSywA" name="step" visibility="private" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_EFlx0BUTEemIe6OhVnSywA" name="study" visibility="private" type="_EFkjsBUTEemIe6OhVnSywA" isUnique="false"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EF9lQBUTEemIe6OhVnSywA" name="UnfinishedExperiment" specification="_EFqDQBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    this.id = id;&#xD;
    this.name = name;&#xD;
    this.study = study;&#xD;
    this.step = step;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EGES8BUTEemIe6OhVnSywA" name="getId" specification="_EGAokBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    return id;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EGJygBUTEemIe6OhVnSywA" name="setId" specification="_EGGvMBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    this.id = id;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EGOrABUTEemIe6OhVnSywA" name="getName" specification="_EGLnsBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    return name;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EGUxoBUTEemIe6OhVnSywA" name="setName" specification="_EGRHQBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    this.name = name;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EGaRMBUTEemIe6OhVnSywA" name="toString" specification="_EGXN4BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    return &quot;UnfinishedExperiment{&quot; + &quot;name=&quot; + name + '}';&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EGfJsBUTEemIe6OhVnSywA" name="getStudy" specification="_EGcGYBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    return study;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EGjbIBUTEemIe6OhVnSywA" name="setStudy" specification="_EGg-4BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    this.study = study;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EGo6sBUTEemIe6OhVnSywA" name="setStep" specification="_EGl3YBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    this.step = step;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EGtMIBUTEemIe6OhVnSywA" name="getStep" specification="_EGrW8BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    return step;&#xD;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EFqDQBUTEemIe6OhVnSywA" name="UnfinishedExperiment" visibility="public" method="_EF9lQBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EFxYABUTEemIe6OhVnSywA" name="id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EF4FsBUTEemIe6OhVnSywA" name="name"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EF5T0BUTEemIe6OhVnSywA" name="step">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EF6h8BUTEemIe6OhVnSywA" name="study" type="_EFkjsBUTEemIe6OhVnSywA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EGAokBUTEemIe6OhVnSywA" name="getId" visibility="public" method="_EGES8BUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EGDE0BUTEemIe6OhVnSywA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EGGvMBUTEemIe6OhVnSywA" name="setId" visibility="public" method="_EGJygBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EGIkYBUTEemIe6OhVnSywA" name="id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EGLnsBUTEemIe6OhVnSywA" name="getName" visibility="public" method="_EGOrABUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EGNc4BUTEemIe6OhVnSywA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EGRHQBUTEemIe6OhVnSywA" name="setName" visibility="public" method="_EGUxoBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EGTjgBUTEemIe6OhVnSywA" name="name"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EGXN4BUTEemIe6OhVnSywA" name="toString" visibility="public" method="_EGaRMBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EGYcABUTEemIe6OhVnSywA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EGcGYBUTEemIe6OhVnSywA" name="getStudy" visibility="public" method="_EGfJsBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EGdUgBUTEemIe6OhVnSywA" type="_EFkjsBUTEemIe6OhVnSywA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EGg-4BUTEemIe6OhVnSywA" name="setStudy" visibility="public" method="_EGjbIBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EGiNABUTEemIe6OhVnSywA" name="study" type="_EFkjsBUTEemIe6OhVnSywA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EGl3YBUTEemIe6OhVnSywA" name="setStep" visibility="public" method="_EGo6sBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EGnFgBUTEemIe6OhVnSywA" name="step">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EGrW8BUTEemIe6OhVnSywA" name="getStep" visibility="public" method="_EGtMIBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EGr-ABUTEemIe6OhVnSywA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_EFkjsBUTEemIe6OhVnSywA" name="Study" visibility="public">
            <ownedAttribute xmi:type="uml:Property" xmi:id="_EMBxABUTEemIe6OhVnSywA" name="id" visibility="private" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_EMENQBUTEemIe6OhVnSywA" name="name" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_EMGpgBUTEemIe6OhVnSywA" name="date" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_EMJFwBUTEemIe6OhVnSywA" name="path" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_EMLiABUTEemIe6OhVnSywA" name="comments" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_EMOlUBUTEemIe6OhVnSywA" name="user" visibility="private" type="_EMN-QBUTEemIe6OhVnSywA" isUnique="false"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EMfEABUTEemIe6OhVnSywA" name="Study" specification="_EMRooBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    this.id = id;&#xD;
    this.name = name;&#xD;
    this.date = date;&#xD;
    this.path = path;&#xD;
    this.comments = comments;&#xD;
    this.user = user;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EMiHUBUTEemIe6OhVnSywA" name="getId" specification="_EMfrEBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    return id;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EMmYwBUTEemIe6OhVnSywA" name="setId" specification="_EMj8gBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    this.id = id;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EMrRQBUTEemIe6OhVnSywA" name="getName" specification="_EMoN8BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    return name;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EMwJwBUTEemIe6OhVnSywA" name="setName" specification="_EMtGcBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    this.name = name;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EMz0IBUTEemIe6OhVnSywA" name="getDate" specification="_EMx-8BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    return date;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EM23cBUTEemIe6OhVnSywA" name="setDate" specification="_EM1pUBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    this.date = date;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EM4soBUTEemIe6OhVnSywA" name="getPath" specification="_EM3egBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    return path;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EM8-EBUTEemIe6OhVnSywA" name="setPath" specification="_EM6h0BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    this.path = path;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ENAocBUTEemIe6OhVnSywA" name="getComments" specification="_EM-zQBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    return comments;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ENDEsBUTEemIe6OhVnSywA" name="setComments" specification="_ENB2kBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    this.comments = comments;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ENFg8BUTEemIe6OhVnSywA" name="getUser" specification="_ENES0BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    return user;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ENIkQBUTEemIe6OhVnSywA" name="setUser" specification="_ENGvEBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    this.user = user;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ENKZcBUTEemIe6OhVnSywA" name="toString" specification="_ENJLUBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    return &quot;Study{&quot; + &quot;name=&quot; + name + &quot;, date=&quot; + date + '}';&#xD;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EMRooBUTEemIe6OhVnSywA" name="Study" visibility="public" method="_EMfEABUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EMWhIBUTEemIe6OhVnSywA" name="id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EMXvQBUTEemIe6OhVnSywA" name="name"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EMZkcBUTEemIe6OhVnSywA" name="date"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EMaykBUTEemIe6OhVnSywA" name="path"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EMcnwBUTEemIe6OhVnSywA" name="comments"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EMd14BUTEemIe6OhVnSywA" name="user" type="_EMN-QBUTEemIe6OhVnSywA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EMfrEBUTEemIe6OhVnSywA" name="getId" visibility="public" method="_EMiHUBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EMg5MBUTEemIe6OhVnSywA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EMj8gBUTEemIe6OhVnSywA" name="setId" visibility="public" method="_EMmYwBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EMlKoBUTEemIe6OhVnSywA" name="id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EMoN8BUTEemIe6OhVnSywA" name="getName" visibility="public" method="_EMrRQBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EMpcEBUTEemIe6OhVnSywA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EMtGcBUTEemIe6OhVnSywA" name="setName" visibility="public" method="_EMwJwBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EMu7oBUTEemIe6OhVnSywA" name="name"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EMx-8BUTEemIe6OhVnSywA" name="getDate" visibility="public" method="_EMz0IBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EMzNEBUTEemIe6OhVnSywA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EM1pUBUTEemIe6OhVnSywA" name="setDate" visibility="public" method="_EM23cBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EM2QYBUTEemIe6OhVnSywA" name="date"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EM3egBUTEemIe6OhVnSywA" name="getPath" visibility="public" method="_EM4soBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EM4FkBUTEemIe6OhVnSywA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EM6h0BUTEemIe6OhVnSywA" name="setPath" visibility="public" method="_EM8-EBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EM7v8BUTEemIe6OhVnSywA" name="path"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EM-zQBUTEemIe6OhVnSywA" name="getComments" visibility="public" method="_ENAocBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EM_aUBUTEemIe6OhVnSywA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_ENB2kBUTEemIe6OhVnSywA" name="setComments" visibility="public" method="_ENDEsBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ENCdoBUTEemIe6OhVnSywA" name="comments"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_ENES0BUTEemIe6OhVnSywA" name="getUser" visibility="public" method="_ENFg8BUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ENE54BUTEemIe6OhVnSywA" type="_EMN-QBUTEemIe6OhVnSywA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_ENGvEBUTEemIe6OhVnSywA" name="setUser" visibility="public" method="_ENIkQBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ENH9MBUTEemIe6OhVnSywA" name="user" type="_EMN-QBUTEemIe6OhVnSywA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_ENJLUBUTEemIe6OhVnSywA" name="toString" visibility="public" method="_ENKZcBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ENJyYBUTEemIe6OhVnSywA" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_EHPXoBUTEemIe6OhVnSywA" name="Comparison" visibility="public">
            <ownedAttribute xmi:type="uml:Property" xmi:id="_EHRz4BUTEemIe6OhVnSywA" name="id" visibility="private" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_EHU3MBUTEemIe6OhVnSywA" name="name" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_EHczABUTEemIe6OhVnSywA" name="date" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_EHfPQBUTEemIe6OhVnSywA" name="similarityMethod" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_EHiSkBUTEemIe6OhVnSywA" name="linkage" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_EHku0BUTEemIe6OhVnSywA" name="tolerance" visibility="private" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_EHnyIBUTEemIe6OhVnSywA" name="comments" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_EHqOYBUTEemIe6OhVnSywA" name="study" visibility="private" type="_EFkjsBUTEemIe6OhVnSywA" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_EHt4wBUTEemIe6OhVnSywA" name="lanes" visibility="private" type="_EHtRsBUTEemIe6OhVnSywA" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_EHw8EBUTEemIe6OhVnSywA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_EHyKMBUTEemIe6OhVnSywA" value="*"/>
              <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_EHyxQBUTEemIe6OhVnSywA" name="defaultValue">
                <language>JAVA</language>
                <body>new ArrayList&lt;>()</body>
              </defaultValue>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EINA8BUTEemIe6OhVnSywA" name="Comparison" specification="_EH3CsBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    this.id = id;&#xD;
    this.name = name;&#xD;
    this.date = date;&#xD;
    this.similarityMethod = similarityMethod;&#xD;
    this.linkage = linkage;&#xD;
    this.tolerance = tolerance;&#xD;
    this.comments = comments;&#xD;
    this.study = study;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EIRSYBUTEemIe6OhVnSywA" name="getId" specification="_EIO2IBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    return id;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EIWx8BUTEemIe6OhVnSywA" name="setId" specification="_EITuoBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    this.id = id;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EIbDYBUTEemIe6OhVnSywA" name="getName" specification="_EIYnIBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    return name;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EIgi8BUTEemIe6OhVnSywA" name="setName" specification="_EIeGsBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    this.name = name;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EIk0YBUTEemIe6OhVnSywA" name="getDate" specification="_EIiYIBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    return date;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EIriEBUTEemIe6OhVnSywA" name="setDate" specification="_EInQoBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    this.date = date;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EIwakBUTEemIe6OhVnSywA" name="getSimilarityMethod" specification="_EItXQBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    return similarityMethod;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EI16IBUTEemIe6OhVnSywA" name="setSimilarityMethod" specification="_EIyPwBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    this.similarityMethod = similarityMethod;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EI3IQRUTEemIe6OhVnSywA" name="getLinkage" specification="_EI2hMBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    return linkage;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EI49cBUTEemIe6OhVnSywA" name="setLinkage" specification="_EI3vUBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    this.linkage = linkage;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EI5kghUTEemIe6OhVnSywA" name="getTolerance" specification="_EI5kgBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    return tolerance;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EI6yoBUTEemIe6OhVnSywA" name="setTolerance" specification="_EI6LkBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    this.tolerance = tolerance;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EI8n0BUTEemIe6OhVnSywA" name="getComments" specification="_EI6yoRUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    return comments;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EJCHYBUTEemIe6OhVnSywA" name="setComments" specification="_EI_rIBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    this.comments = comments;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EJGY0BUTEemIe6OhVnSywA" name="getStudy" specification="_EJD8kBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    return study;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EJL4YBUTEemIe6OhVnSywA" name="setStudy" specification="_EJJcIBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    this.study = study;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EJPiwBUTEemIe6OhVnSywA" name="addLane" specification="_EJNtkBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    if (lanes.contains(l)) {&#xD;
    } else {&#xD;
        lanes.add(l);&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EJTNIBUTEemIe6OhVnSywA" name="deleteLane" specification="_EJR_ABUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    lanes.remove(l);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EJZTwBUTEemIe6OhVnSywA" name="getLanes" specification="_EJVpYBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    return lanes;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EJeMQBUTEemIe6OhVnSywA" name="toString" specification="_EJbI8BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    return name;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EJkS4BUTEemIe6OhVnSywA" name="printInfo" specification="_EJgogBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    String res = &quot;&lt;html>Comparison &quot; + name + &quot;:&lt;br>&quot;;&#xD;
    res = res + &quot;   Date: &quot; + date + &quot;&lt;br>&quot;;&#xD;
    res = res + &quot;   Similarity Method: &quot; + similarityMethod + &quot;&lt;br>&quot;;&#xD;
    res = res + &quot;   Linkage Method: &quot; + linkage + &quot;&lt;br>&quot;;&#xD;
    res = res + &quot;   Tolerance: &quot; + tolerance + &quot;%&lt;br>&quot;;&#xD;
    if (comments != null) {&#xD;
        res = res + &quot;   Comments: &quot; + comments + &quot;&lt;/html>&quot;;&#xD;
    }&#xD;
    return res;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EJrAkBUTEemIe6OhVnSywA" name="setLanes" specification="_EJmIEBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    this.lanes = lanes;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EJ64MBUTEemIe6OhVnSywA" name="toNewComparison" specification="_EJuD4BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    NewComparison nc = new NewComparison(study.getId());&#xD;
    nc.setName(name);&#xD;
    nc.setComments(comments);&#xD;
    nc.setLinkage(linkage);&#xD;
    nc.setSimilaritymethod(similarityMethod);&#xD;
    nc.setTolerance(tolerance);&#xD;
    nc.setNonSelectedExperiments(exps);&#xD;
    ArrayList&lt;Experiment> selectedexperiments = new ArrayList&lt;Experiment>();&#xD;
    for (LaneDB l : lanes) {&#xD;
        for (Experiment e : exps) {&#xD;
            if (l.getExperiment().getId() == e.getId() &amp;&amp; !selectedexperiments.contains(e)) {&#xD;
                selectedexperiments.add(e);&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    nc.setSelectedExperiments(selectedexperiments);&#xD;
    nc.setNonSelectedLanes(new ArrayList&lt;LaneDB>());&#xD;
    nc.setSelectedLanes(new ArrayList&lt;LaneDB>());&#xD;
    for (Experiment e : selectedexperiments) {&#xD;
        ArrayList&lt;LaneDB> newlanes = getlanesexperiment(e.getId(), true);&#xD;
        for (LaneDB l : newlanes) {&#xD;
            nc.getNonSelectedLanes().add(l);&#xD;
            for (LaneDB l1 : lanes) {&#xD;
                if (l.getId() == l1.getId()) {&#xD;
                    nc.getSelectedLanes().add(l);&#xD;
                }&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    nc.setMarkers(containmarkers(lanes));&#xD;
    return nc;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EKCM8BUTEemIe6OhVnSywA" name="containmarkers" specification="_EJ9UcBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    for (LaneDB l : lanes) {&#xD;
        if (l.isIsMarker()) {&#xD;
            return true;&#xD;
        }&#xD;
    }&#xD;
    return false;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EKijQBUTEemIe6OhVnSywA" name="generateDendrogram" specification="_EKLW4BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Lane[] selectedlanes = new Lane[c.getLanes().size()];&#xD;
    for (int i = 0; i &lt; selectedlanes.length; i++) {&#xD;
        LaneDB l = c.getLanes().get(i);&#xD;
        selectedlanes[i] = LaneDBtoLaneIJ(l);&#xD;
        selectedlanes[i].setName(&quot;&quot;);&#xD;
        for (String field : fields) {&#xD;
            String name = selectedlanes[i].getName();&#xD;
            switch(field) {&#xD;
                case &quot;Genus&quot;:&#xD;
                    selectedlanes[i].setName(name + l.getGenus() + &quot;\t\t&quot;);&#xD;
                    break;&#xD;
                case &quot;Species&quot;:&#xD;
                    selectedlanes[i].setName(name + l.getSpecies() + &quot;\t\t&quot;);&#xD;
                    break;&#xD;
                case &quot;Strain Number&quot;:&#xD;
                    selectedlanes[i].setName(name + l.getStrainNumber() + &quot;\t\t&quot;);&#xD;
                    break;&#xD;
                case &quot;Country&quot;:&#xD;
                    selectedlanes[i].setName(name + l.getCountry() + &quot;\t\t&quot;);&#xD;
                    break;&#xD;
                case &quot;MLST&quot;:&#xD;
                    selectedlanes[i].setName(name + l.getMSLT() + &quot;\t\t&quot;);&#xD;
                    break;&#xD;
                case &quot;isMarker&quot;:&#xD;
                    selectedlanes[i].setName(name + l.isIsMarker() + &quot;\t\t&quot;);&#xD;
                    break;&#xD;
                case &quot;Experiment&quot;:&#xD;
                    selectedlanes[i].setName(name + l.getExperiment().getName() + &quot;\t\t&quot;);&#xD;
                    break;&#xD;
                case &quot;Comments&quot;:&#xD;
                    selectedlanes[i].setName(name + l.getComments() + &quot;\t\t&quot;);&#xD;
                    break;&#xD;
                default:&#xD;
                    selectedlanes[i].setName(name + l.getLaneaddedinfo().get(field) + &quot;\t\t&quot;);&#xD;
                    break;&#xD;
            }&#xD;
        }&#xD;
        selectedlanes[i].setName(&quot;Exp. &quot; + selectedlanes[i].getName() + l.getId());&#xD;
    }&#xD;
    double[] stds = selectedlanes[0].getStdpositionbands();&#xD;
    double tolerance_aux = stds[0] - stds[stds.length - 1];&#xD;
    double tolerance = tolerance_aux * c.getTolerance() / 100;&#xD;
    int similaritymethod = 0;&#xD;
    LaneComparison lc;&#xD;
    switch(c.getSimilarityMethod()) {&#xD;
        case &quot;Dice&quot;:&#xD;
            lc = new Dice(tolerance);&#xD;
            similaritymethod = 0;&#xD;
            break;&#xD;
        case &quot;Jaccard&quot;:&#xD;
            lc = new Jaccard(tolerance);&#xD;
            similaritymethod = 1;&#xD;
            break;&#xD;
        case &quot;Jeffrey's X&quot;:&#xD;
            lc = new Jeffrey(tolerance);&#xD;
            similaritymethod = 2;&#xD;
            break;&#xD;
        case &quot;Ochiai&quot;:&#xD;
            lc = new Ochiai(tolerance);&#xD;
            similaritymethod = 3;&#xD;
            break;&#xD;
        case &quot;Band difference&quot;:&#xD;
            lc = new BandDifference(tolerance);&#xD;
            similaritymethod = 4;&#xD;
            break;&#xD;
        case &quot;Pearson correlation&quot;:&#xD;
            lc = new PearsonCorrelation();&#xD;
            similaritymethod = 5;&#xD;
            break;&#xD;
        case &quot;Cosine coefficient&quot;:&#xD;
            lc = new CosineCorrelation();&#xD;
            similaritymethod = 6;&#xD;
            break;&#xD;
        case &quot;Euclidean distance&quot;:&#xD;
            lc = new EuclideanDistance();&#xD;
            simtable = true;&#xD;
            similaritymethod = 7;&#xD;
            break;&#xD;
        case &quot;Manhattan distance&quot;:&#xD;
            lc = new ManhattanDistance();&#xD;
            similaritymethod = 8;&#xD;
            simtable = true;&#xD;
            break;&#xD;
        default:&#xD;
            lc = new PearsonCorrelation();&#xD;
            similaritymethod = 5;&#xD;
            break;&#xD;
    }&#xD;
    int clustering_alg = 0;&#xD;
    switch(c.getLinkage()) {&#xD;
        case &quot;Single linkage&quot;:&#xD;
            clustering_alg = SINGLE;&#xD;
            break;&#xD;
        case &quot;Complete linkage&quot;:&#xD;
            clustering_alg = COMPLETE;&#xD;
            break;&#xD;
        case &quot;UPGMA&quot;:&#xD;
            clustering_alg = UPGMA;&#xD;
            break;&#xD;
        case &quot;Mean linkage&quot;:&#xD;
            clustering_alg = MEAN;&#xD;
            break;&#xD;
        case &quot;UPGMC&quot;:&#xD;
            clustering_alg = UPGMC;&#xD;
            break;&#xD;
        case &quot;Ward&quot;:&#xD;
            clustering_alg = WARD;&#xD;
            break;&#xD;
        default:&#xD;
            break;&#xD;
    }&#xD;
    double[][] similaritytable = lc.CompareLanes(selectedlanes);&#xD;
    ArrayList Similaritylist = new ArrayList();&#xD;
    ArrayList Distancelist = new ArrayList();&#xD;
    String headings = &quot;Strain Number\t&quot;;&#xD;
    for (int i = 0; i &lt; similaritytable.length - 1; i++) {&#xD;
        String name = selectedlanes[i].getName().replaceAll(&quot;\t&quot;, &quot; &quot;);&#xD;
        headings = headings + name.substring(4, name.lastIndexOf(&quot; &quot;)) + &quot;\t&quot;;&#xD;
    }&#xD;
    String name = selectedlanes[similaritytable.length - 1].getName().replaceAll(&quot;\t&quot;, &quot; &quot;);&#xD;
    headings = headings + name.substring(4, name.lastIndexOf(&quot; &quot;));&#xD;
    for (int i = 0; i &lt; similaritytable[0].length; i++) {&#xD;
        name = selectedlanes[i].getName().replaceAll(&quot;\t&quot;, &quot; &quot;);&#xD;
        String row = name.substring(4, name.lastIndexOf(&quot; &quot;)) + &quot;\t&quot;;&#xD;
        String row1 = name.substring(4, name.lastIndexOf(&quot; &quot;)) + &quot;\t&quot;;&#xD;
        for (int j = 0; j &lt; similaritytable.length - 1; j++) {&#xD;
            row = row + (1 - similaritytable[i][j]) + &quot;\t&quot;;&#xD;
            row1 = row1 + similaritytable[i][j] + &quot;\t&quot;;&#xD;
        }&#xD;
        row = row + (1 - similaritytable[i][similaritytable.length - 1]);&#xD;
        row1 = row1 + similaritytable[i][similaritytable.length - 1];&#xD;
        Similaritylist.add(row);&#xD;
        Distancelist.add(row1);&#xD;
    }&#xD;
    if (simtable) {&#xD;
        TextWindow textWindow = new TextWindow(&quot;Similarity Table&quot;, headings, Similaritylist, 600, 400);&#xD;
        textWindow.setVisible(true);&#xD;
    }&#xD;
    TextPanel textPanel = new TextPanel(&quot;Similarity Table&quot;);&#xD;
    textPanel.setColumnHeadings(headings);&#xD;
    textPanel.append(Similaritylist);&#xD;
    TextPanel textPanelDistance = new TextPanel(&quot;Distance Table&quot;);&#xD;
    textPanelDistance.setColumnHeadings(headings);&#xD;
    textPanelDistance.append(Distancelist);&#xD;
    if (similaritymethod != 7 &amp;&amp; similaritymethod != 8) {&#xD;
        WekaClustering wc = new WekaClustering(clustering_alg, similaritytable, selectedlanes, similaritymethod, invert, output, Color.BLUE, fields);&#xD;
        String newick = wc.computeandvisualisecluster(pw);&#xD;
        String path = System.getProperty(&quot;user.dir&quot;) + &quot;/GelJDBImages/&quot; + c.getStudy().getId() + &quot;/&quot; + c.getStudy().getUser().getUsername() + &quot;/comparisons/&quot; + c.getId() + &quot;/&quot;;&#xD;
        File f = new File(path);&#xD;
        if (!f.exists()) {&#xD;
            f.mkdir();&#xD;
        }&#xD;
        String simmatrix = path + &quot;simmatrix.xls&quot;;&#xD;
        textPanel.saveAs(simmatrix);&#xD;
        String distancematrix = path + &quot;distancematrix.xls&quot;;&#xD;
        textPanelDistance.saveAs(distancematrix);&#xD;
        String newickFile = path + &quot;newick.txt&quot;;&#xD;
        PrintWriter writer = new PrintWriter(newickFile, &quot;UTF-8&quot;);&#xD;
        writer.println(newick.substring(7) + &quot;;&quot;);&#xD;
        writer.close();&#xD;
        ImagePlus imp = IJ.getImage();&#xD;
        IJ.saveAsTiff(imp, path + &quot;dendrogram.tif&quot;);&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EK4hgBUTEemIe6OhVnSywA" name="generateDendrogram" specification="_EKrtMBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    int similaritymethod = 0;&#xD;
    LaneComparisonArrays lc = null;&#xD;
    double[][] similaritytable = null;&#xD;
    boolean first = true;&#xD;
    ArrayList&lt;ArrayList&lt;Lane>> selectedLanes = new ArrayList&lt;ArrayList&lt;Lane>>();&#xD;
    Lane[] firstselectedlanes = null;&#xD;
    int clustering_alg = 0;&#xD;
    switch(c.getLinkage()) {&#xD;
        case &quot;Single linkage&quot;:&#xD;
            clustering_alg = SINGLE;&#xD;
            break;&#xD;
        case &quot;Complete linkage&quot;:&#xD;
            clustering_alg = COMPLETE;&#xD;
            break;&#xD;
        case &quot;UPGMA&quot;:&#xD;
            clustering_alg = UPGMA;&#xD;
            break;&#xD;
        case &quot;Mean linkage&quot;:&#xD;
            clustering_alg = MEAN;&#xD;
            break;&#xD;
        case &quot;UPGMC&quot;:&#xD;
            clustering_alg = UPGMC;&#xD;
            break;&#xD;
        case &quot;Ward&quot;:&#xD;
            clustering_alg = WARD;&#xD;
            break;&#xD;
        default:&#xD;
            break;&#xD;
    }&#xD;
    Enumeration&lt;ArrayList&lt;LaneDB>> enumExperimentLanes = experimentLanes.elements();&#xD;
    String headings = &quot;Strain Number\t&quot;;&#xD;
    while (enumExperimentLanes.hasMoreElements()) {&#xD;
        ArrayList&lt;LaneDB> lanes = enumExperimentLanes.nextElement();&#xD;
        Collections.sort(lanes, new Comparator&lt;LaneDB>() {&#xD;
&#xD;
            @Override&#xD;
            public int compare(LaneDB object1, LaneDB object2) {&#xD;
                return object1.getStrainNumber().compareTo(object2.getStrainNumber());&#xD;
            }&#xD;
        });&#xD;
        Lane[] selectedlanes = new Lane[lanes.size()];&#xD;
        ArrayList&lt;Lane> tempSelectedLanes = new ArrayList&lt;Lane>();&#xD;
        for (int i = 0; i &lt; selectedlanes.length; i++) {&#xD;
            LaneDB l = lanes.get(i);&#xD;
            selectedlanes[i] = LaneDBtoLaneIJ(l);&#xD;
            tempSelectedLanes.add(selectedlanes[i]);&#xD;
            selectedlanes[i].setName(&quot;&quot;);&#xD;
            for (String field : fields) {&#xD;
                String name = selectedlanes[i].getName();&#xD;
                switch(field) {&#xD;
                    case &quot;Genus&quot;:&#xD;
                        selectedlanes[i].setName(name + l.getGenus() + &quot;\t\t&quot;);&#xD;
                        break;&#xD;
                    case &quot;Species&quot;:&#xD;
                        selectedlanes[i].setName(name + l.getSpecies() + &quot;\t\t&quot;);&#xD;
                        break;&#xD;
                    case &quot;Strain Number&quot;:&#xD;
                        selectedlanes[i].setName(name + l.getStrainNumber() + &quot;\t\t&quot;);&#xD;
                        break;&#xD;
                    case &quot;Country&quot;:&#xD;
                        selectedlanes[i].setName(name + l.getCountry() + &quot;\t\t&quot;);&#xD;
                        break;&#xD;
                    case &quot;MLST&quot;:&#xD;
                        selectedlanes[i].setName(name + l.getMSLT() + &quot;\t\t&quot;);&#xD;
                        break;&#xD;
                    default:&#xD;
                        selectedlanes[i].setName(name + l.getLaneaddedinfo().get(field) + &quot;\t\t&quot;);&#xD;
                        break;&#xD;
                }&#xD;
            }&#xD;
            selectedlanes[i].setName(&quot;     &quot; + selectedlanes[i].getName() + l.getId());&#xD;
        }&#xD;
        if (first) {&#xD;
            firstselectedlanes = selectedlanes;&#xD;
            first = false;&#xD;
        }&#xD;
        selectedLanes.add(tempSelectedLanes);&#xD;
        double[] stds = selectedlanes[0].getStdpositionbands();&#xD;
        double tolerance_aux = stds[0] - stds[stds.length - 1];&#xD;
        double tolerance = tolerance_aux * c.getTolerance() / 100;&#xD;
        switch(c.getSimilarityMethod()) {&#xD;
            case &quot;Dice&quot;:&#xD;
                lc = new DiceArrays(tolerance);&#xD;
                similaritymethod = 0;&#xD;
                break;&#xD;
            case &quot;Jaccard&quot;:&#xD;
                lc = new JaccardArrays(tolerance);&#xD;
                similaritymethod = 1;&#xD;
                break;&#xD;
            case &quot;Jeffrey's X&quot;:&#xD;
                lc = new JeffreyArrays(tolerance);&#xD;
                similaritymethod = 2;&#xD;
                break;&#xD;
            case &quot;Ochiai&quot;:&#xD;
                lc = new OchiaiArrays(tolerance);&#xD;
                similaritymethod = 3;&#xD;
                break;&#xD;
            case &quot;Band difference&quot;:&#xD;
                lc = new BandDifferenceArrays(tolerance);&#xD;
                similaritymethod = 4;&#xD;
                break;&#xD;
            case &quot;Pearson correlation&quot;:&#xD;
                lc = new PearsonCorrelationArrays();&#xD;
                similaritymethod = 5;&#xD;
                break;&#xD;
            case &quot;Cosine coefficient&quot;:&#xD;
                lc = new CosineCorrelationArrays();&#xD;
                similaritymethod = 6;&#xD;
                break;&#xD;
            case &quot;Euclidean distance&quot;:&#xD;
                lc = new EuclideanDistanceArrays();&#xD;
                simtable = true;&#xD;
                similaritymethod = 7;&#xD;
                break;&#xD;
            case &quot;Manhattan distance&quot;:&#xD;
                lc = new ManhattanDistanceArrays();&#xD;
                similaritymethod = 8;&#xD;
                simtable = true;&#xD;
                break;&#xD;
            default:&#xD;
                lc = new PearsonCorrelationArrays();&#xD;
                similaritymethod = 5;&#xD;
                break;&#xD;
        }&#xD;
    }&#xD;
    ArrayList&lt;ArrayList&lt;Lane>> finalselectedLanes = new ArrayList&lt;ArrayList&lt;Lane>>();&#xD;
    for (int j = 0; j &lt; selectedLanes.get(0).size(); j++) {&#xD;
        ArrayList&lt;Lane> templanes = new ArrayList&lt;Lane>();&#xD;
        for (int i = 0; i &lt; selectedLanes.size(); i++) {&#xD;
            templanes.add(selectedLanes.get(i).get(j));&#xD;
        }&#xD;
        finalselectedLanes.add(templanes);&#xD;
    }&#xD;
    similaritytable = lc.CompareLanes(finalselectedLanes);&#xD;
    ArrayList Similaritylist = new ArrayList();&#xD;
    ArrayList Distancelist = new ArrayList();&#xD;
    for (int i = 0; i &lt; similaritytable.length - 1; i++) {&#xD;
        String name = firstselectedlanes[i].getName().replaceAll(&quot;\t&quot;, &quot; &quot;);&#xD;
        headings = headings + name.substring(4, name.lastIndexOf(&quot; &quot;)) + &quot;\t&quot;;&#xD;
    }&#xD;
    String name = firstselectedlanes[similaritytable.length - 1].getName().replaceAll(&quot;\t&quot;, &quot; &quot;);&#xD;
    headings = headings + name.substring(4, name.lastIndexOf(&quot; &quot;));&#xD;
    for (int i = 0; i &lt; similaritytable[0].length; i++) {&#xD;
        name = firstselectedlanes[i].getName().replaceAll(&quot;\t&quot;, &quot; &quot;);&#xD;
        String row = name.substring(4, name.lastIndexOf(&quot; &quot;)) + &quot;\t&quot;;&#xD;
        String row1 = name.substring(4, name.lastIndexOf(&quot; &quot;)) + &quot;\t&quot;;&#xD;
        for (int j = 0; j &lt; similaritytable.length - 1; j++) {&#xD;
            row = row + (1 - similaritytable[i][j]) + &quot;\t&quot;;&#xD;
            row1 = row1 + similaritytable[i][j] + &quot;\t&quot;;&#xD;
        }&#xD;
        row = row + (1 - similaritytable[i][similaritytable.length - 1]);&#xD;
        row1 = row1 + similaritytable[i][similaritytable.length - 1];&#xD;
        Similaritylist.add(row);&#xD;
        Distancelist.add(row1);&#xD;
    }&#xD;
    if (simtable) {&#xD;
        TextWindow textWindow = new TextWindow(&quot;Similarity Table&quot;, headings, Similaritylist, 600, 400);&#xD;
        textWindow.setVisible(true);&#xD;
    }&#xD;
    TextPanel textPanel = new TextPanel(&quot;Similarity Table&quot;);&#xD;
    textPanel.setColumnHeadings(headings);&#xD;
    textPanel.append(Similaritylist);&#xD;
    TextPanel textPanelDistance = new TextPanel(&quot;Distance Table&quot;);&#xD;
    textPanelDistance.setColumnHeadings(headings);&#xD;
    textPanelDistance.append(Distancelist);&#xD;
    if (similaritymethod != 7 &amp;&amp; similaritymethod != 8) {&#xD;
        WekaClustering wc = new WekaClustering(clustering_alg, similaritytable, firstselectedlanes, similaritymethod, invert, output, Color.BLUE, fields);&#xD;
        String newick = wc.computeandvisualisecluster(pw);&#xD;
        String path = System.getProperty(&quot;user.dir&quot;) + &quot;/GelJDBImages/&quot; + c.getStudy().getId() + &quot;/&quot; + c.getStudy().getUser().getUsername() + &quot;/comparisons/&quot; + c.getId() + &quot;/&quot;;&#xD;
        File f = new File(path);&#xD;
        if (!f.exists()) {&#xD;
            f.mkdir();&#xD;
        }&#xD;
        String simmatrix = path + &quot;simmatrix.xls&quot;;&#xD;
        textPanel.saveAs(simmatrix);&#xD;
        String distancematrix = path + &quot;distancematrix.xls&quot;;&#xD;
        textPanelDistance.saveAs(distancematrix);&#xD;
        String newickFile = path + &quot;newick.txt&quot;;&#xD;
        PrintWriter writer = new PrintWriter(newickFile, &quot;UTF-8&quot;);&#xD;
        writer.println(newick.substring(7) + &quot;;&quot;);&#xD;
        writer.close();&#xD;
        ImagePlus imp = IJ.getImage();&#xD;
        IJ.saveAsTiff(imp, path + &quot;dendrogram.tif&quot;);&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ELEuwBUTEemIe6OhVnSywA" name="generateOcurrenceMatrix" specification="_EK7k0BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Lane[] selectedlanes = new Lane[c.getLanes().size()];&#xD;
    for (int i = 0; i &lt; selectedlanes.length; i++) {&#xD;
        LaneDB l = c.getLanes().get(i);&#xD;
        selectedlanes[i] = LaneDBtoLaneIJ(l);&#xD;
        selectedlanes[i].setName(&quot;&quot;);&#xD;
        for (String field : fields) {&#xD;
            String name = selectedlanes[i].getName();&#xD;
            switch(field) {&#xD;
                case &quot;Genus&quot;:&#xD;
                    selectedlanes[i].setName(name + l.getGenus() + &quot;\t\t&quot;);&#xD;
                    break;&#xD;
                case &quot;Species&quot;:&#xD;
                    selectedlanes[i].setName(name + l.getSpecies() + &quot;\t\t&quot;);&#xD;
                    break;&#xD;
                case &quot;Strain Number&quot;:&#xD;
                    selectedlanes[i].setName(name + l.getStrainNumber() + &quot;\t\t&quot;);&#xD;
                    break;&#xD;
                case &quot;Country&quot;:&#xD;
                    selectedlanes[i].setName(name + l.getCountry() + &quot;\t\t&quot;);&#xD;
                    break;&#xD;
                case &quot;MLST&quot;:&#xD;
                    selectedlanes[i].setName(name + l.getMSLT() + &quot;\t\t&quot;);&#xD;
                    break;&#xD;
                case &quot;isMarker&quot;:&#xD;
                    selectedlanes[i].setName(name + l.isIsMarker() + &quot;\t\t&quot;);&#xD;
                    break;&#xD;
                case &quot;Experiment&quot;:&#xD;
                    selectedlanes[i].setName(name + l.getExperiment().getName() + &quot;\t\t&quot;);&#xD;
                    break;&#xD;
                case &quot;Comments&quot;:&#xD;
                    selectedlanes[i].setName(name + l.getComments() + &quot;\t\t&quot;);&#xD;
                    break;&#xD;
                default:&#xD;
                    selectedlanes[i].setName(name + l.getLaneaddedinfo().get(field) + &quot;\t\t&quot;);&#xD;
                    break;&#xD;
            }&#xD;
        }&#xD;
        selectedlanes[i].setName(&quot;Exp. &quot; + selectedlanes[i].getName() + l.getId());&#xD;
    }&#xD;
    double[] stds = selectedlanes[0].getStdpositionbands();&#xD;
    double tolerance_aux = stds[0] - stds[stds.length - 1];&#xD;
    double tolerance = tolerance_aux * c.getTolerance() / 100;&#xD;
    ArrayList&lt;Double> mws = getMWs(selectedlanes, tolerance);&#xD;
    int[][] similaritytable = createOccurrenceMatrix(selectedlanes, tolerance, mws);&#xD;
    ArrayList list = new ArrayList();&#xD;
    String headings = &quot;mw \t&quot;;&#xD;
    for (int i = 0; i &lt; selectedlanes.length - 1; i++) {&#xD;
        String name = selectedlanes[i].getName().replaceAll(&quot;\t&quot;, &quot; &quot;);&#xD;
        headings = headings + name.substring(4, name.lastIndexOf(&quot; &quot;)) + &quot;\t&quot;;&#xD;
    }&#xD;
    String name = selectedlanes[selectedlanes.length - 1].getName().replaceAll(&quot;\t&quot;, &quot; &quot;);&#xD;
    headings = headings + name.substring(4, name.lastIndexOf(&quot; &quot;));&#xD;
    for (int i = 0; i &lt; mws.size(); i++) {&#xD;
        name = &quot;&quot; + mws.get(i);&#xD;
        String row = name + &quot;\t&quot;;&#xD;
        for (int j = 0; j &lt; selectedlanes.length - 1; j++) {&#xD;
            row = row + (1 - similaritytable[i][j]) + &quot;\t&quot;;&#xD;
        }&#xD;
        row = row + similaritytable[i][selectedlanes.length - 1];&#xD;
        list.add(row);&#xD;
    }&#xD;
    TextWindow textWindow = new TextWindow(&quot;Occurrence Matrix&quot;, headings, list, 600, 400);&#xD;
    textWindow.setVisible(true);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ELRjEBUTEemIe6OhVnSywA" name="insertSortMWs" specification="_ELHyEBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    ArrayList&lt;Double> res = new ArrayList&lt;Double>();&#xD;
    if (mws.size() == 0) {&#xD;
        res.add(mw);&#xD;
        return res;&#xD;
    }&#xD;
    int i = 0;&#xD;
    boolean b = true;&#xD;
    while (b &amp;&amp; (i &lt; mws.size())) {&#xD;
        if (mws.get(i) + tolerance &lt; mw) {&#xD;
            b = false;&#xD;
            res.add(mw);&#xD;
        } else if (mws.get(i) - tolerance &lt; mw) {&#xD;
            b = false;&#xD;
        } else {&#xD;
            res.add(mws.get(i));&#xD;
            i++;&#xD;
        }&#xD;
    }&#xD;
    if (b == true) {&#xD;
        res.add(mw);&#xD;
    } else {&#xD;
        for (int j = i; j &lt; mws.size(); j++) {&#xD;
            res.add(mws.get(j));&#xD;
        }&#xD;
    }&#xD;
    return res;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ELgzoBUTEemIe6OhVnSywA" name="getMWs" specification="_ELXpsBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    ArrayList&lt;Double> result = new ArrayList&lt;Double>();&#xD;
    for (int i = 0; i &lt; selectedlanes.length; i++) {&#xD;
        double stds[] = selectedlanes[i].getStdpositionbands();&#xD;
        for (int j = 0; j &lt; stds.length; j++) {&#xD;
            result = insertSortMWs(result, stds[j], tolerance);&#xD;
        }&#xD;
    }&#xD;
    return result;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ELuPABUTEemIe6OhVnSywA" name="createOccurrenceMatrix" specification="_ELj28BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    int[][] matrix = new int[mws.size()][selectedlanes.length];&#xD;
    for (int i = 0; i &lt; selectedlanes.length; i++) {&#xD;
        double[] stds = selectedlanes[i].getStdpositionbands();&#xD;
        for (int j = 0; j &lt; mws.size(); j++) {&#xD;
            int k = 0;&#xD;
            boolean b = true;&#xD;
            while (b &amp;&amp; k &lt; stds.length) {&#xD;
                if ((stds[k] + tolerance > mws.get(j)) &amp;&amp; (stds[k] - tolerance &lt; mws.get(j))) {&#xD;
                    matrix[j][i] = 1;&#xD;
                    b = false;&#xD;
                } else {&#xD;
                    k++;&#xD;
                }&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    return matrix;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EL9fkBUTEemIe6OhVnSywA" name="generateDendrograms" specification="_ELwrQBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Lane[] selectedlanes = new Lane[c.getLanes().size()];&#xD;
    for (int i = 0; i &lt; selectedlanes.length; i++) {&#xD;
        LaneDB l = c.getLanes().get(i);&#xD;
        selectedlanes[i] = LaneDBtoLaneIJ(l);&#xD;
        selectedlanes[i].setName(&quot;&quot;);&#xD;
        for (String field : fields) {&#xD;
            String name = selectedlanes[i].getName();&#xD;
            switch(field) {&#xD;
                case &quot;Genus&quot;:&#xD;
                    selectedlanes[i].setName(name + l.getGenus() + &quot;\t\t&quot;);&#xD;
                    break;&#xD;
                case &quot;Species&quot;:&#xD;
                    selectedlanes[i].setName(name + l.getSpecies() + &quot;\t\t&quot;);&#xD;
                    break;&#xD;
                case &quot;Strain Number&quot;:&#xD;
                    selectedlanes[i].setName(name + l.getStrainNumber() + &quot;\t\t&quot;);&#xD;
                    break;&#xD;
                case &quot;Country&quot;:&#xD;
                    selectedlanes[i].setName(name + l.getCountry() + &quot;\t\t&quot;);&#xD;
                    break;&#xD;
                case &quot;MLST&quot;:&#xD;
                    selectedlanes[i].setName(name + l.getMSLT() + &quot;\t\t&quot;);&#xD;
                    break;&#xD;
                case &quot;isMarker&quot;:&#xD;
                    selectedlanes[i].setName(name + l.isIsMarker() + &quot;\t\t&quot;);&#xD;
                    break;&#xD;
                case &quot;Experiment&quot;:&#xD;
                    selectedlanes[i].setName(name + l.getExperiment().getName() + &quot;\t\t&quot;);&#xD;
                    break;&#xD;
                case &quot;Comments&quot;:&#xD;
                    selectedlanes[i].setName(name + l.getComments() + &quot;\t\t&quot;);&#xD;
                    break;&#xD;
                default:&#xD;
                    selectedlanes[i].setName(name + l.getLaneaddedinfo().get(field) + &quot;\t\t&quot;);&#xD;
                    break;&#xD;
            }&#xD;
        }&#xD;
        selectedlanes[i].setName(&quot;Exp. &quot; + selectedlanes[i].getName() + l.getId());&#xD;
    }&#xD;
    double[] stds = selectedlanes[0].getStdpositionbands();&#xD;
    double tolerance_aux = stds[0] - stds[stds.length - 1];&#xD;
    double tolerance = tolerance_aux * c.getTolerance() / 100;&#xD;
    int similaritymethod = 0;&#xD;
    int clustering_alg = 0;&#xD;
    switch(c.getLinkage()) {&#xD;
        case &quot;Single linkage&quot;:&#xD;
            clustering_alg = SINGLE;&#xD;
            break;&#xD;
        case &quot;Complete linkage&quot;:&#xD;
            clustering_alg = COMPLETE;&#xD;
            break;&#xD;
        case &quot;UPGMA&quot;:&#xD;
            clustering_alg = UPGMA;&#xD;
            break;&#xD;
        case &quot;Mean linkage&quot;:&#xD;
            clustering_alg = MEAN;&#xD;
            break;&#xD;
        case &quot;UPGMC&quot;:&#xD;
            clustering_alg = UPGMC;&#xD;
            break;&#xD;
        case &quot;Ward&quot;:&#xD;
            clustering_alg = WARD;&#xD;
            break;&#xD;
        default:&#xD;
            break;&#xD;
    }&#xD;
    for (int i = 0; i &lt; 7; i++) {&#xD;
        for (int j = 0; j &lt; 6; j++) {&#xD;
            LaneComparison lc;&#xD;
            switch(i) {&#xD;
                case 0:&#xD;
                    lc = new Dice(tolerance);&#xD;
                    similaritymethod = 0;&#xD;
                    output = 0;&#xD;
                    break;&#xD;
                case 1:&#xD;
                    lc = new Jaccard(tolerance);&#xD;
                    similaritymethod = 1;&#xD;
                    output = 0;&#xD;
                    break;&#xD;
                case 2:&#xD;
                    lc = new Jeffrey(tolerance);&#xD;
                    similaritymethod = 2;&#xD;
                    output = 0;&#xD;
                    break;&#xD;
                case 3:&#xD;
                    lc = new Ochiai(tolerance);&#xD;
                    similaritymethod = 3;&#xD;
                    output = 0;&#xD;
                    break;&#xD;
                case 4:&#xD;
                    lc = new BandDifference(tolerance);&#xD;
                    similaritymethod = 4;&#xD;
                    output = 0;&#xD;
                    break;&#xD;
                case 5:&#xD;
                    lc = new PearsonCorrelation();&#xD;
                    similaritymethod = 5;&#xD;
                    output = 1;&#xD;
                    break;&#xD;
                case 6:&#xD;
                    lc = new CosineCorrelation();&#xD;
                    similaritymethod = 6;&#xD;
                    output = 1;&#xD;
                    break;&#xD;
                default:&#xD;
                    lc = new PearsonCorrelation();&#xD;
                    similaritymethod = 5;&#xD;
                    break;&#xD;
            }&#xD;
            double[][] similaritytable = lc.CompareLanes(selectedlanes);&#xD;
            output = 3;&#xD;
            WekaClustering wc = new WekaClustering(j, similaritytable, selectedlanes, similaritymethod, invert, output, Color.BLUE, fields);&#xD;
            wc.computeandvisualisecluster(pw);&#xD;
            String image = &quot;/home/joheras/Desktop/&quot;;&#xD;
            File f = new File(image);&#xD;
            if (!f.exists()) {&#xD;
                f.mkdir();&#xD;
            }&#xD;
            ImagePlus imp = IJ.getImage();&#xD;
            IJ.saveAsTiff(imp, image + &quot;dendrogram-&quot; + i + &quot;-&quot; + j + &quot;.tif&quot;);&#xD;
            imp.close();&#xD;
        }&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EH3CsBUTEemIe6OhVnSywA" name="Comparison" visibility="public" method="_EINA8BUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EH9JUBUTEemIe6OhVnSywA" name="id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EH_lkBUTEemIe6OhVnSywA" name="name"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EICB0BUTEemIe6OhVnSywA" name="date"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EID3ABUTEemIe6OhVnSywA" name="similarityMethod"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EIGTQBUTEemIe6OhVnSywA" name="linkage"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EIIIcBUTEemIe6OhVnSywA" name="tolerance">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EIJ9oBUTEemIe6OhVnSywA" name="comments"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EILLwBUTEemIe6OhVnSywA" name="study" type="_EFkjsBUTEemIe6OhVnSywA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EIO2IBUTEemIe6OhVnSywA" name="getId" visibility="public" method="_EIRSYBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EIQEQBUTEemIe6OhVnSywA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EITuoBUTEemIe6OhVnSywA" name="setId" visibility="public" method="_EIWx8BUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EIU8wBUTEemIe6OhVnSywA" name="id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EIYnIBUTEemIe6OhVnSywA" name="getName" visibility="public" method="_EIbDYBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EIacUBUTEemIe6OhVnSywA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EIeGsBUTEemIe6OhVnSywA" name="setName" visibility="public" method="_EIgi8BUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EIfU0BUTEemIe6OhVnSywA" name="name"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EIiYIBUTEemIe6OhVnSywA" name="getDate" visibility="public" method="_EIk0YBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EIkNUBUTEemIe6OhVnSywA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EInQoBUTEemIe6OhVnSywA" name="setDate" visibility="public" method="_EIriEBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EIqT8BUTEemIe6OhVnSywA" name="date"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EItXQBUTEemIe6OhVnSywA" name="getSimilarityMethod" visibility="public" method="_EIwakBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EIvMcBUTEemIe6OhVnSywA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EIyPwBUTEemIe6OhVnSywA" name="setSimilarityMethod" visibility="public" method="_EI16IBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EI0sABUTEemIe6OhVnSywA" name="similarityMethod"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EI2hMBUTEemIe6OhVnSywA" name="getLinkage" visibility="public" method="_EI3IQRUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EI3IQBUTEemIe6OhVnSywA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EI3vUBUTEemIe6OhVnSywA" name="setLinkage" visibility="public" method="_EI49cBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EI4WYBUTEemIe6OhVnSywA" name="linkage"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EI5kgBUTEemIe6OhVnSywA" name="getTolerance" visibility="public" method="_EI5kghUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EI5kgRUTEemIe6OhVnSywA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EI6LkBUTEemIe6OhVnSywA" name="setTolerance" visibility="public" method="_EI6yoBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EI6LkRUTEemIe6OhVnSywA" name="tolerance">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EI6yoRUTEemIe6OhVnSywA" name="getComments" visibility="public" method="_EI8n0BUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EI7ZsBUTEemIe6OhVnSywA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EI_rIBUTEemIe6OhVnSywA" name="setComments" visibility="public" method="_EJCHYBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EJA5QBUTEemIe6OhVnSywA" name="comments"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EJD8kBUTEemIe6OhVnSywA" name="getStudy" visibility="public" method="_EJGY0BUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EJFKsBUTEemIe6OhVnSywA" type="_EFkjsBUTEemIe6OhVnSywA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EJJcIBUTEemIe6OhVnSywA" name="setStudy" visibility="public" method="_EJL4YBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EJKqQBUTEemIe6OhVnSywA" name="study" type="_EFkjsBUTEemIe6OhVnSywA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EJNtkBUTEemIe6OhVnSywA" name="addLane" visibility="public" method="_EJPiwBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EJO7sBUTEemIe6OhVnSywA" name="l" type="_EHtRsBUTEemIe6OhVnSywA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EJR_ABUTEemIe6OhVnSywA" name="deleteLane" visibility="public" method="_EJTNIBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EJR_ARUTEemIe6OhVnSywA" name="l" type="_EHtRsBUTEemIe6OhVnSywA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EJVpYBUTEemIe6OhVnSywA" name="getLanes" visibility="public" method="_EJZTwBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EJW3gBUTEemIe6OhVnSywA" type="_EHtRsBUTEemIe6OhVnSywA" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_EJXekBUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_EJYFoBUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EJbI8BUTEemIe6OhVnSywA" name="toString" visibility="public" method="_EJeMQBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EJc-IBUTEemIe6OhVnSywA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EJgogBUTEemIe6OhVnSywA" name="printInfo" visibility="public" method="_EJkS4BUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EJidsBUTEemIe6OhVnSywA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EJmIEBUTEemIe6OhVnSywA" name="setLanes" visibility="public" method="_EJrAkBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EJn9QBUTEemIe6OhVnSywA" name="lanes" type="_EHtRsBUTEemIe6OhVnSywA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_EJpLYBUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_EJpycBUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EJuD4BUTEemIe6OhVnSywA" name="toNewComparison" visibility="public" method="_EJ64MBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EJ1_sBUTEemIe6OhVnSywA" direction="return"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EJ304BUTEemIe6OhVnSywA" name="exps" type="_EJs1wBUTEemIe6OhVnSywA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_EJ5DABUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_EJ5qEBUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EJ9UcBUTEemIe6OhVnSywA" name="containmarkers" visibility="private" isStatic="true" method="_EKCM8BUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EJ-ikBUTEemIe6OhVnSywA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EJ_wsBUTEemIe6OhVnSywA" name="lanes" type="_EHtRsBUTEemIe6OhVnSywA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_EKAXwBUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_EKA-0BUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EKLW4BUTEemIe6OhVnSywA" name="generateDendrogram" visibility="public" isStatic="true" method="_EKijQBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EKNMEBUTEemIe6OhVnSywA" name="c" type="_EHPXoBUTEemIe6OhVnSywA"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EKNzIBUTEemIe6OhVnSywA" name="output">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EKPoUBUTEemIe6OhVnSywA" name="fields">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_EKQ2cBUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_EKSEkBUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EKSroBUTEemIe6OhVnSywA" name="simtable">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EKUg0BUTEemIe6OhVnSywA" name="pw"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EKVu8BUTEemIe6OhVnSywA" name="invert">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EKrtMBUTEemIe6OhVnSywA" name="generateDendrogram" visibility="public" isStatic="true" method="_EK4hgBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EKsUQBUTEemIe6OhVnSywA" name="c" type="_EHPXoBUTEemIe6OhVnSywA"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EKuJcBUTEemIe6OhVnSywA" name="experimentLanes"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EKvXkBUTEemIe6OhVnSywA" name="output">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EKwlsBUTEemIe6OhVnSywA" name="fields">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_EKxMwBUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_EKxz0BUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EKya4BUTEemIe6OhVnSywA" name="simtable">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EKzpABUTEemIe6OhVnSywA" name="pw"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EK03IBUTEemIe6OhVnSywA" name="invert">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EK7k0BUTEemIe6OhVnSywA" name="generateOcurrenceMatrix" visibility="public" isStatic="true" method="_ELEuwBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EK8y8BUTEemIe6OhVnSywA" name="c" type="_EHPXoBUTEemIe6OhVnSywA"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EK-oIBUTEemIe6OhVnSywA" name="fields">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_EK_PMBUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_EK_2QBUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_ELHyEBUTEemIe6OhVnSywA" name="insertSortMWs" visibility="private" isStatic="true" method="_ELRjEBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ELJnQBUTEemIe6OhVnSywA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_KgG0cPaLEeW5KOK8aDMdgA"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ELK1YBUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ELLccBUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ELMDgBUTEemIe6OhVnSywA" name="mws">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_KgG0cPaLEeW5KOK8aDMdgA"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ELNRoBUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ELN4sBUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ELPG0BUTEemIe6OhVnSywA" name="mw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ELQU8BUTEemIe6OhVnSywA" name="tolerance">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_ELXpsBUTEemIe6OhVnSywA" name="getMWs" visibility="private" isStatic="true" method="_ELgzoBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ELaF8BUTEemIe6OhVnSywA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_KgG0cPaLEeW5KOK8aDMdgA"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ELbUEBUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ELb7IBUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ELdwUBUTEemIe6OhVnSywA" name="selectedlanes">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ELeXYBUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ELe-cBUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ELgMkBUTEemIe6OhVnSywA" name="tolerance">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_ELj28BUTEemIe6OhVnSywA" name="createOccurrenceMatrix" visibility="private" isStatic="true" method="_ELuPABUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ELlFEBUTEemIe6OhVnSywA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ELmTMBUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ELm6QBUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ELnhUBUTEemIe6OhVnSywA" name="selectedlanes">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ELovcBUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ELpWgBUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ELp9kBUTEemIe6OhVnSywA" name="tolerance">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ELrLsBUTEemIe6OhVnSywA" name="mws">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_KgG0cPaLEeW5KOK8aDMdgA"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ELsZ0BUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ELtA4BUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_ELwrQBUTEemIe6OhVnSywA" name="generateDendrograms" visibility="public" isStatic="true" method="_EL9fkBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ELygcBUTEemIe6OhVnSywA" name="c" type="_EHPXoBUTEemIe6OhVnSywA"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ELzukBUTEemIe6OhVnSywA" name="output">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EL1jwBUTEemIe6OhVnSywA" name="fields">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_EL2x4BUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_EL3Y8BUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EL4nEBUTEemIe6OhVnSywA" name="mat">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EL51MBUTEemIe6OhVnSywA" name="pw"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EL7DUBUTEemIe6OhVnSywA" name="invert">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_EHtRsBUTEemIe6OhVnSywA" name="LaneDB" visibility="public">
            <ownedAttribute xmi:type="uml:Property" xmi:id="_ENUKcBUTEemIe6OhVnSywA" name="id" visibility="private" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_ENXNwBUTEemIe6OhVnSywA" name="genus" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_ENaREBUTEemIe6OhVnSywA" name="species" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_ENctUBUTEemIe6OhVnSywA" name="strainNumber" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_ENfJkBUTEemIe6OhVnSywA" name="country" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_ENg-wBUTEemIe6OhVnSywA" name="MSLT" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_ENhl0BUTEemIe6OhVnSywA" name="isMarker" visibility="private" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_f-GnEPaLEeW5KOK8aDMdgA"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_ENiM4BUTEemIe6OhVnSywA" name="comments" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_ENiM4RUTEemIe6OhVnSywA" name="experiment" visibility="private" type="_EJs1wBUTEemIe6OhVnSywA" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_ENiz8BUTEemIe6OhVnSywA" name="laneaddedinfo" visibility="private" isUnique="false">
              <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_ENiz8RUTEemIe6OhVnSywA" name="defaultValue">
                <language>JAVA</language>
                <body>new Hashtable&lt;>()</body>
              </defaultValue>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ENz5sBUTEemIe6OhVnSywA" name="LaneDB" specification="_ENiz8hUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    this.id = id;&#xD;
    this.genus = genus;&#xD;
    this.species = species;&#xD;
    this.strainNumber = strainNumber;&#xD;
    this.country = country;&#xD;
    this.MSLT = MSLT;&#xD;
    this.isMarker = isMarker;&#xD;
    this.comments = comments;&#xD;
    this.experiment = experiment;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EN1H0BUTEemIe6OhVnSywA" name="getId" specification="_EN0gwBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    return id;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EN2V8BUTEemIe6OhVnSywA" name="setId" specification="_EN1u4BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    this.id = id;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EN29ABUTEemIe6OhVnSywA" name="getGenus" specification="_EN2V8RUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    return genus;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EN4yMBUTEemIe6OhVnSywA" name="setGenus" specification="_EN29ARUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    this.genus = genus;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EN8ckBUTEemIe6OhVnSywA" name="getSpecies" specification="_EN6nYBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    return species;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EOAG8BUTEemIe6OhVnSywA" name="setSpecies" specification="_EN-RwBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    this.species = species;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EODKQBUTEemIe6OhVnSywA" name="getStrainNumber" specification="_EOBVEBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    return strainNumber;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EOE_cBUTEemIe6OhVnSywA" name="setStrainNumber" specification="_EODxUBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    this.strainNumber = strainNumber;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EOFmgRUTEemIe6OhVnSywA" name="getCountry" specification="_EOE_cRUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    return country;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EOG0oRUTEemIe6OhVnSywA" name="setCountry" specification="_EOGNkBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    this.country = country;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EOICwBUTEemIe6OhVnSywA" name="getMSLT" specification="_EOHbsBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    return MSLT;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EOLGEBUTEemIe6OhVnSywA" name="setMSLT" specification="_EOIp0BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    this.MSLT = MSLT;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EOPXgBUTEemIe6OhVnSywA" name="getComments" specification="_EOMUMBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    return comments;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EOTB4BUTEemIe6OhVnSywA" name="setComments" specification="_EORMsBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    this.comments = comments;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EOU3EBUTEemIe6OhVnSywA" name="getExperiment" specification="_EOTo8BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    return experiment;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EOXTUBUTEemIe6OhVnSywA" name="setExperiment" specification="_EOWFMBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    this.experiment = experiment;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EOa9sBUTEemIe6OhVnSywA" name="getLaneaddedinfo" specification="_EOZIgBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    return laneaddedinfo;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EOfPIBUTEemIe6OhVnSywA" name="setLaneaddedinfo" specification="_EOcy4BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    this.laneaddedinfo = laneaddedinfo;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EOi5gBUTEemIe6OhVnSywA" name="addnewinfo" specification="_EOgdQBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    laneaddedinfo.put(fieldname, fieldvalue);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EOl80BUTEemIe6OhVnSywA" name="isIsMarker" specification="_EOkusBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    return isMarker;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EOoZEBUTEemIe6OhVnSywA" name="setIsMarker" specification="_EOnK8BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    this.isMarker = isMarker;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EOt4oBUTEemIe6OhVnSywA" name="allsamemarker" specification="_EOqOQBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    boolean samemarker = true;&#xD;
    if (lanes.isEmpty()) {&#xD;
        return true;&#xD;
    }&#xD;
    int marker = lanes.get(0).getExperiment().getMarker().getId();&#xD;
    for (LaneDB l : lanes) {&#xD;
        if (marker != l.getExperiment().getMarker().getId()) {&#xD;
            return false;&#xD;
        }&#xD;
    }&#xD;
    return samemarker;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EO3CkBUTEemIe6OhVnSywA" name="searchlanesstring" specification="_EOvt0BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    ArrayList&lt;LaneDB> res = new ArrayList&lt;>();&#xD;
    for (LaneDB l : lanes) {&#xD;
        if (l.searchinfo().contains(s.toUpperCase())) {&#xD;
            res.add(l);&#xD;
        }&#xD;
    }&#xD;
    return res;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EO7UABUTEemIe6OhVnSywA" name="searchinfo" specification="_EO43wBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    String res = genus + species + strainNumber + country + MSLT + comments;&#xD;
    Enumeration&lt;String> keys = laneaddedinfo.keys();&#xD;
    while (keys.hasMoreElements()) {&#xD;
        String k = keys.nextElement();&#xD;
        res = res + laneaddedinfo.get(k);&#xD;
    }&#xD;
    return res.toUpperCase();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EPIvYBUTEemIe6OhVnSywA" name="computesimilarlanes" specification="_EO9JMBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    ArrayList&lt;LaneDBwithsimilarity> similarlanes = new ArrayList&lt;>();&#xD;
    Lane[] selectedlanes = new Lane[lanes.size()];&#xD;
    for (int i = 0; i &lt; selectedlanes.length; i++) {&#xD;
        LaneDB l = lanes.get(i);&#xD;
        selectedlanes[i] = LaneDBtoLaneIJ(l);&#xD;
    }&#xD;
    Lane mainlane = LaneDBtoLaneIJ(lane);&#xD;
    double[] stds = selectedlanes[0].getStdpositionbands();&#xD;
    double tolerance_aux = stds[0] - stds[stds.length - 1];&#xD;
    double tol = tolerance_aux * tolerance / 100;&#xD;
    LaneComparison lc;&#xD;
    switch(simmethod) {&#xD;
        case &quot;Dice&quot;:&#xD;
            lc = new Dice(tol);&#xD;
            break;&#xD;
        case &quot;Jaccard&quot;:&#xD;
            lc = new Jaccard(tol);&#xD;
            break;&#xD;
        case &quot;Jeffrey's X&quot;:&#xD;
            lc = new Jeffrey(tol);&#xD;
            break;&#xD;
        case &quot;Ochiai&quot;:&#xD;
            lc = new Ochiai(tol);&#xD;
            break;&#xD;
        case &quot;Band difference&quot;:&#xD;
            lc = new BandDifference(tol);&#xD;
            break;&#xD;
        case &quot;Pearson correlation&quot;:&#xD;
            lc = new PearsonCorrelation();&#xD;
            break;&#xD;
        case &quot;Cosine coefficient&quot;:&#xD;
            lc = new CosineCorrelation();&#xD;
            break;&#xD;
        case &quot;Euclidean distance&quot;:&#xD;
            lc = new EuclideanDistance();&#xD;
            break;&#xD;
        case &quot;Manhattan distance&quot;:&#xD;
            lc = new ManhattanDistance();&#xD;
            break;&#xD;
        default:&#xD;
            lc = new PearsonCorrelation();&#xD;
            break;&#xD;
    }&#xD;
    for (int i = 0; i &lt; selectedlanes.length; i++) {&#xD;
        double sim = lc.Compare2Lanes(mainlane, selectedlanes[i]);&#xD;
        // The species must be the same&#xD;
        if ((1 - sim) * 100 >= similarity &amp;&amp; lane.getId() != lanes.get(i).getId() &amp;&amp; (lane.getSpecies().equals(lanes.get(i).getSpecies()))) {&#xD;
            similarlanes.add(new LaneDBwithsimilarity(lanes.get(i), (1 - sim) * 100));&#xD;
        }&#xD;
    }&#xD;
    return similarlanes;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EPQrMBUTEemIe6OhVnSywA" name="showlanes" specification="_EPJ9gBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Lane mainlane = LaneDBtoLaneIJ(lane);&#xD;
    Lane[] selectedlanes = new Lane[lanes.size() + 1];&#xD;
    int height = mainlane.getImp().getHeight();&#xD;
    int width = mainlane.getImp().getWidth() + 50;&#xD;
    selectedlanes[0] = mainlane;&#xD;
    for (int i = 0; i &lt; selectedlanes.length - 1; i++) {&#xD;
        LaneDB l = lanes.get(i).getLane();&#xD;
        selectedlanes[i + 1] = LaneDBtoLaneIJ(l);&#xD;
        width = width + selectedlanes[i + 1].getImp().getWidth() + 50;&#xD;
        if (height &lt; selectedlanes[i + 1].getImp().getHeight()) {&#xD;
            height = selectedlanes[i + 1].getImp().getHeight();&#xD;
        }&#xD;
    }&#xD;
    ImagePlus impl = NewImage.createImage(&quot;Lanes&quot;, width + 100, height + 100, 0, 24, 0);&#xD;
    impl.show();&#xD;
    ImageProcessor ip1 = impl.getProcessor();&#xD;
    ip1.setColor(Color.white);&#xD;
    ip1.fill();&#xD;
    ImagePlus[] images = getImagesfromfinallanes(selectedlanes, 0, Color.BLUE, false);&#xD;
    ip1.setColor(Color.black);&#xD;
    for (int i = 0; i &lt; selectedlanes.length; i++) {&#xD;
        ImagePlus imp2 = images[i].duplicate();&#xD;
        ImageProcessor ip = imp2.getProcessor();&#xD;
        ip1.insert(ip, (int) ((i + 0.5) * 100 - (images[i].getWidth() / 2)), 0);&#xD;
        ip1.setFont(new Font(&quot;SansSerif&quot;, Font.PLAIN, 10));&#xD;
        String info = &quot;&quot;;&#xD;
        if (i == 0) {&#xD;
            info = lane.getGenus() + &quot;\n&quot; + lane.getSpecies() + &quot;\n&quot; + lane.getStrainNumber() + &quot;\n&quot; + lane.getExperiment().getName() + &quot;\n&quot; + lane.getExperiment().getStudy().getName() + &quot;\n&quot; + &quot;(selected lane)&quot;;&#xD;
        } else {&#xD;
            info = lanes.get(i - 1).getLane().getGenus() + &quot;\n&quot; + lanes.get(i - 1).getLane().getSpecies() + &quot;\n&quot; + lanes.get(i - 1).getLane().getStrainNumber() + &quot;\n&quot; + lanes.get(i - 1).getLane().getExperiment().getName() + &quot;\n&quot; + lanes.get(i - 1).getLane().getExperiment().getStudy().getName() + &quot;\n&quot; + &quot;Sim: &quot; + (int) lanes.get(i - 1).getSimilarity() + &quot;%&quot;;&#xD;
        }&#xD;
        ip1.drawString(info, (int) ((i + 0.5) * 100 - (images[i].getWidth() / 2)), height + 15);&#xD;
    }&#xD;
    impl.updateAndDraw();&#xD;
    impl.getWindow().toFront();&#xD;
    int n = JOptionPane.showConfirmDialog(null, &quot;Do you want to save this comparison?&quot;, &quot;Save&quot;, JOptionPane.YES_NO_OPTION);&#xD;
    if (n == JOptionPane.YES_OPTION) {&#xD;
        IJ.saveAsTiff(impl, null);&#xD;
    }&#xD;
    return impl;&#xD;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_ENiz8hUTEemIe6OhVnSywA" name="LaneDB" visibility="public" method="_ENz5sBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ENmeUBUTEemIe6OhVnSywA" name="id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ENoTgBUTEemIe6OhVnSywA" name="genus"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ENphoBUTEemIe6OhVnSywA" name="species"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ENr94BUTEemIe6OhVnSywA" name="strainNumber"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ENtzEBUTEemIe6OhVnSywA" name="country"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ENvoQBUTEemIe6OhVnSywA" name="MSLT"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ENw2YBUTEemIe6OhVnSywA" name="isMarker">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_f-GnEPaLEeW5KOK8aDMdgA"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ENyEgBUTEemIe6OhVnSywA" name="comments"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ENyrkBUTEemIe6OhVnSywA" name="experiment" type="_EJs1wBUTEemIe6OhVnSywA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EN0gwBUTEemIe6OhVnSywA" name="getId" visibility="public" method="_EN1H0BUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EN0gwRUTEemIe6OhVnSywA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EN1u4BUTEemIe6OhVnSywA" name="setId" visibility="public" method="_EN2V8BUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EN1u4RUTEemIe6OhVnSywA" name="id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EN2V8RUTEemIe6OhVnSywA" name="getGenus" visibility="public" method="_EN29ABUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EN2V8hUTEemIe6OhVnSywA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EN29ARUTEemIe6OhVnSywA" name="setGenus" visibility="public" method="_EN4yMBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EN3kEBUTEemIe6OhVnSywA" name="genus"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EN6nYBUTEemIe6OhVnSywA" name="getSpecies" visibility="public" method="_EN8ckBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EN71gBUTEemIe6OhVnSywA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EN-RwBUTEemIe6OhVnSywA" name="setSpecies" visibility="public" method="_EOAG8BUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EN_f4BUTEemIe6OhVnSywA" name="species"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EOBVEBUTEemIe6OhVnSywA" name="getStrainNumber" visibility="public" method="_EODKQBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EOCjMBUTEemIe6OhVnSywA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EODxUBUTEemIe6OhVnSywA" name="setStrainNumber" visibility="public" method="_EOE_cBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EOEYYBUTEemIe6OhVnSywA" name="strainNumber"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EOE_cRUTEemIe6OhVnSywA" name="getCountry" visibility="public" method="_EOFmgRUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EOFmgBUTEemIe6OhVnSywA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EOGNkBUTEemIe6OhVnSywA" name="setCountry" visibility="public" method="_EOG0oRUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EOG0oBUTEemIe6OhVnSywA" name="country"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EOHbsBUTEemIe6OhVnSywA" name="getMSLT" visibility="public" method="_EOICwBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EOHbsRUTEemIe6OhVnSywA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EOIp0BUTEemIe6OhVnSywA" name="setMSLT" visibility="public" method="_EOLGEBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EOJ38BUTEemIe6OhVnSywA" name="MSLT"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EOMUMBUTEemIe6OhVnSywA" name="getComments" visibility="public" method="_EOPXgBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EOOJYBUTEemIe6OhVnSywA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EORMsBUTEemIe6OhVnSywA" name="setComments" visibility="public" method="_EOTB4BUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EORzwBUTEemIe6OhVnSywA" name="comments"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EOTo8BUTEemIe6OhVnSywA" name="getExperiment" visibility="public" method="_EOU3EBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EOUQABUTEemIe6OhVnSywA" type="_EJs1wBUTEemIe6OhVnSywA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EOWFMBUTEemIe6OhVnSywA" name="setExperiment" visibility="public" method="_EOXTUBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EOWsQBUTEemIe6OhVnSywA" name="experiment" type="_EJs1wBUTEemIe6OhVnSywA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EOZIgBUTEemIe6OhVnSywA" name="getLaneaddedinfo" visibility="public" method="_EOa9sBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EOZvkBUTEemIe6OhVnSywA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EOcy4BUTEemIe6OhVnSywA" name="setLaneaddedinfo" visibility="public" method="_EOfPIBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EOeBABUTEemIe6OhVnSywA" name="laneaddedinfo"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EOgdQBUTEemIe6OhVnSywA" name="addnewinfo" visibility="public" method="_EOi5gBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EOhEUBUTEemIe6OhVnSywA" name="fieldname"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EOiScBUTEemIe6OhVnSywA" name="fieldvalue"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EOkusBUTEemIe6OhVnSywA" name="isIsMarker" visibility="public" method="_EOl80BUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EOlVwBUTEemIe6OhVnSywA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_f-GnEPaLEeW5KOK8aDMdgA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EOnK8BUTEemIe6OhVnSywA" name="setIsMarker" visibility="public" method="_EOoZEBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EOnyABUTEemIe6OhVnSywA" name="isMarker">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_f-GnEPaLEeW5KOK8aDMdgA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EOqOQBUTEemIe6OhVnSywA" name="allsamemarker" visibility="public" isStatic="true" method="_EOt4oBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EOq1UBUTEemIe6OhVnSywA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EOsDcBUTEemIe6OhVnSywA" name="lanes" type="_EHtRsBUTEemIe6OhVnSywA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_EOsqgBUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_EOtRkBUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EOvt0BUTEemIe6OhVnSywA" name="searchlanesstring" visibility="public" isStatic="true" method="_EO3CkBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EOw78BUTEemIe6OhVnSywA" type="_EHtRsBUTEemIe6OhVnSywA" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_EOxjABUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_EOyKEBUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EOzYMBUTEemIe6OhVnSywA" name="lanes" type="_EHtRsBUTEemIe6OhVnSywA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_EOz_QBUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_EO0mUBUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EO10cBUTEemIe6OhVnSywA" name="s"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EO43wBUTEemIe6OhVnSywA" name="searchinfo" visibility="private" method="_EO7UABUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EO6F4BUTEemIe6OhVnSywA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EO9JMBUTEemIe6OhVnSywA" name="computesimilarlanes" visibility="public" isStatic="true" method="_EPIvYBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EO--YBUTEemIe6OhVnSywA" type="_EO-XUBUTEemIe6OhVnSywA" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_EPAMgBUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_EPAzkBUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EPCBsBUTEemIe6OhVnSywA" name="lane" type="_EHtRsBUTEemIe6OhVnSywA"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EPDP0BUTEemIe6OhVnSywA" name="lanes" type="_EHtRsBUTEemIe6OhVnSywA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_EPD24BUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_EPEd8BUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EPFsEBUTEemIe6OhVnSywA" name="simmethod"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EPGTIBUTEemIe6OhVnSywA" name="tolerance">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EPG6MBUTEemIe6OhVnSywA" name="similarity">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EPJ9gBUTEemIe6OhVnSywA" name="showlanes" visibility="public" isStatic="true" method="_EPQrMBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EPO2ABUTEemIe6OhVnSywA" direction="return"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EPO2ARUTEemIe6OhVnSywA" name="lane" type="_EHtRsBUTEemIe6OhVnSywA"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EPPdEBUTEemIe6OhVnSywA" name="lanes" type="_EO-XUBUTEemIe6OhVnSywA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_EPQEIBUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_EPQEIRUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_EJs1wBUTEemIe6OhVnSywA" name="Experiment" visibility="public">
            <ownedAttribute xmi:type="uml:Property" xmi:id="_ERanUBUTEemIe6OhVnSywA" name="id" visibility="private" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_ERccgBUTEemIe6OhVnSywA" name="name" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_ERdqoBUTEemIe6OhVnSywA" name="date" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_EReRsBUTEemIe6OhVnSywA" name="imagename" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_ERgG4BUTEemIe6OhVnSywA" name="comments" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_ERh8EBUTEemIe6OhVnSywA" name="study" visibility="private" type="_EFkjsBUTEemIe6OhVnSywA" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_ERjKMBUTEemIe6OhVnSywA" name="user" visibility="private" type="_EMN-QBUTEemIe6OhVnSywA" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_ERk_YBUTEemIe6OhVnSywA" name="marker" visibility="private" type="_EQG_wBUTEemIe6OhVnSywA" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_ERmNgBUTEemIe6OhVnSywA" name="calibrationMethod" visibility="private" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ERzB0BUTEemIe6OhVnSywA" name="Experiment" specification="_ERoCsBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    this.id = id;&#xD;
    this.name = name;&#xD;
    this.date = date;&#xD;
    this.imagename = imagename;&#xD;
    this.calibrationMethod = calibrationMethod;&#xD;
    this.comments = comments;&#xD;
    this.study = study;&#xD;
    this.user = user;&#xD;
    this.marker = marker;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ER1eEBUTEemIe6OhVnSywA" name="getId" specification="_ER0P8BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    return id;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ER36UBUTEemIe6OhVnSywA" name="setId" specification="_ER2FIBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    this.id = id;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ER6WkBUTEemIe6OhVnSywA" name="getName" specification="_ER5IcBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    return name;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ER9Z4BUTEemIe6OhVnSywA" name="setName" specification="_ER8LwBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    this.name = name;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ER_2IBUTEemIe6OhVnSywA" name="getDate" specification="_ER-A8BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    return date;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ESCSYBUTEemIe6OhVnSywA" name="setDate" specification="_ESBEQBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    this.date = date;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ESEuoBUTEemIe6OhVnSywA" name="getImagename" specification="_ESDggBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    return imagename;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ESGj0BUTEemIe6OhVnSywA" name="setImagename" specification="_ESFVsBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    this.imagename = imagename;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ESJAEBUTEemIe6OhVnSywA" name="getComments" specification="_ESHx8BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    return comments;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ESMDYBUTEemIe6OhVnSywA" name="setComments" specification="_ESKOMBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    this.comments = comments;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ESOfoBUTEemIe6OhVnSywA" name="getStudy" specification="_ESNRgBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    return study;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ESQ74BUTEemIe6OhVnSywA" name="setStudy" specification="_ESPtwBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    this.study = study;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ESSxERUTEemIe6OhVnSywA" name="getUser" specification="_ESSKABUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    return user;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ESVNUBUTEemIe6OhVnSywA" name="setUser" specification="_EST_MBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    this.user = user;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ESXpkBUTEemIe6OhVnSywA" name="getMarker" specification="_ESWbcBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    return marker;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ESas4BUTEemIe6OhVnSywA" name="setMarker" specification="_ESY3sBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    this.marker = marker;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ESdJIBUTEemIe6OhVnSywA" name="toString" specification="_ESbT8BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    return name;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ESflYBUTEemIe6OhVnSywA" name="printInfo" specification="_ESeXQBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    String res = &quot;&lt;html>Experiment &quot; + name + &quot;:&lt;br>&quot;;&#xD;
    res = res + &quot;   author: &quot; + user.getName() + &quot; &quot; + user.getSurname() + &quot;&lt;br>&quot;;&#xD;
    res = res + &quot;   date: &quot; + date + &quot;&lt;br>&quot;;&#xD;
    res = res + &quot;   image: &quot; + imagename + &quot;&lt;br>&quot;;&#xD;
    if (comments != null) {&#xD;
        res = res + &quot;   Comments: &quot; + comments + &quot;&lt;/html>&quot;;&#xD;
    }&#xD;
    return res;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EShakRUTEemIe6OhVnSywA" name="getCalibrationMethod" specification="_ESgzgBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    return calibrationMethod;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ESiBoRUTEemIe6OhVnSywA" name="setCalibrationMethod" specification="_EShakhUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    this.calibrationMethod = calibrationMethod;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ESjPwRUTEemIe6OhVnSywA" name="allwithsamemarker" specification="_ESiosBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    for (int i = 0; i &lt; exps.size(); i++) {&#xD;
        if (exps.get(i).getMarker().getId() != exps.get(0).getMarker().getId()) {&#xD;
            return false;&#xD;
        }&#xD;
    }&#xD;
    return true;&#xD;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_ERoCsBUTEemIe6OhVnSywA" name="Experiment" visibility="public" method="_ERzB0BUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ERrtEBUTEemIe6OhVnSywA" name="id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ERsUIBUTEemIe6OhVnSywA" name="name"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ERtiQBUTEemIe6OhVnSywA" name="date"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ERuJUBUTEemIe6OhVnSywA" name="imagename"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ERuJURUTEemIe6OhVnSywA" name="calibrationMethod">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ERv-gBUTEemIe6OhVnSywA" name="comments"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ERwlkBUTEemIe6OhVnSywA" name="study" type="_EFkjsBUTEemIe6OhVnSywA"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ERxMoBUTEemIe6OhVnSywA" name="marker" type="_EQG_wBUTEemIe6OhVnSywA"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ERxzsBUTEemIe6OhVnSywA" name="user" type="_EMN-QBUTEemIe6OhVnSywA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_ER0P8BUTEemIe6OhVnSywA" name="getId" visibility="public" method="_ER1eEBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ER03ABUTEemIe6OhVnSywA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_ER2FIBUTEemIe6OhVnSywA" name="setId" visibility="public" method="_ER36UBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ER3TQBUTEemIe6OhVnSywA" name="id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_ER5IcBUTEemIe6OhVnSywA" name="getName" visibility="public" method="_ER6WkBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ER5vgBUTEemIe6OhVnSywA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_ER8LwBUTEemIe6OhVnSywA" name="setName" visibility="public" method="_ER9Z4BUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ER8y0BUTEemIe6OhVnSywA" name="name"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_ER-A8BUTEemIe6OhVnSywA" name="getDate" visibility="public" method="_ER_2IBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ER_PEBUTEemIe6OhVnSywA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_ESBEQBUTEemIe6OhVnSywA" name="setDate" visibility="public" method="_ESCSYBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ESBrUBUTEemIe6OhVnSywA" name="date"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_ESDggBUTEemIe6OhVnSywA" name="getImagename" visibility="public" method="_ESEuoBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ESEHkBUTEemIe6OhVnSywA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_ESFVsBUTEemIe6OhVnSywA" name="setImagename" visibility="public" method="_ESGj0BUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ESF8wBUTEemIe6OhVnSywA" name="imagename"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_ESHx8BUTEemIe6OhVnSywA" name="getComments" visibility="public" method="_ESJAEBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ESIZABUTEemIe6OhVnSywA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_ESKOMBUTEemIe6OhVnSywA" name="setComments" visibility="public" method="_ESMDYBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ESLcUBUTEemIe6OhVnSywA" name="comments"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_ESNRgBUTEemIe6OhVnSywA" name="getStudy" visibility="public" method="_ESOfoBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ESN4kBUTEemIe6OhVnSywA" type="_EFkjsBUTEemIe6OhVnSywA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_ESPtwBUTEemIe6OhVnSywA" name="setStudy" visibility="public" method="_ESQ74BUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ESQU0BUTEemIe6OhVnSywA" name="study" type="_EFkjsBUTEemIe6OhVnSywA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_ESSKABUTEemIe6OhVnSywA" name="getUser" visibility="public" method="_ESSxERUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ESSxEBUTEemIe6OhVnSywA" type="_EMN-QBUTEemIe6OhVnSywA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EST_MBUTEemIe6OhVnSywA" name="setUser" visibility="public" method="_ESVNUBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ESUmQBUTEemIe6OhVnSywA" name="user" type="_EMN-QBUTEemIe6OhVnSywA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_ESWbcBUTEemIe6OhVnSywA" name="getMarker" visibility="public" method="_ESXpkBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ESXCgBUTEemIe6OhVnSywA" type="_EQG_wBUTEemIe6OhVnSywA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_ESY3sBUTEemIe6OhVnSywA" name="setMarker" visibility="public" method="_ESas4BUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ESaF0BUTEemIe6OhVnSywA" name="marker" type="_EQG_wBUTEemIe6OhVnSywA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_ESbT8BUTEemIe6OhVnSywA" name="toString" visibility="public" method="_ESdJIBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ESciEBUTEemIe6OhVnSywA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_ESeXQBUTEemIe6OhVnSywA" name="printInfo" visibility="public" method="_ESflYBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ESe-UBUTEemIe6OhVnSywA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_ESgzgBUTEemIe6OhVnSywA" name="getCalibrationMethod" visibility="public" method="_EShakRUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EShakBUTEemIe6OhVnSywA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EShakhUTEemIe6OhVnSywA" name="setCalibrationMethod" visibility="public" method="_ESiBoRUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ESiBoBUTEemIe6OhVnSywA" name="calibrationMethod">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_ESiosBUTEemIe6OhVnSywA" name="allwithsamemarker" visibility="public" isStatic="true" method="_ESjPwRUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ESiosRUTEemIe6OhVnSywA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ESioshUTEemIe6OhVnSywA" name="exps" type="_EJs1wBUTEemIe6OhVnSywA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ESiosxUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ESjPwBUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_EMN-QBUTEemIe6OhVnSywA" name="User" visibility="public">
            <ownedAttribute xmi:type="uml:Property" xmi:id="_EQ4b0BUTEemIe6OhVnSywA" name="id" visibility="private" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_EQ5p8BUTEemIe6OhVnSywA" name="username" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_EQ7fIBUTEemIe6OhVnSywA" name="name" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_EQ8tQBUTEemIe6OhVnSywA" name="surname" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_EQ97YBUTEemIe6OhVnSywA" name="lab" visibility="private" type="_EPTugBUTEemIe6OhVnSywA" isUnique="false"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ERCz4BUTEemIe6OhVnSywA" name="User" specification="_EQ_wkBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    this.id = id;&#xD;
    this.username = username;&#xD;
    this.name = name;&#xD;
    this.surname = surname;&#xD;
    this.lab = lab;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ERCz4xUTEemIe6OhVnSywA" name="getId" specification="_ERCz4RUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    return id;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ERECABUTEemIe6OhVnSywA" name="setId" specification="_ERCz5BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    this.id = id;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ERHFUBUTEemIe6OhVnSywA" name="getUsername" specification="_ERFQIBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    return username;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ERKIoBUTEemIe6OhVnSywA" name="setUsername" specification="_ERITcBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    this.username = username;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ERNL8BUTEemIe6OhVnSywA" name="getName" specification="_ERL90BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    return name;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ERQ2UBUTEemIe6OhVnSywA" name="setName" specification="_EROaEBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    this.name = name;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ERT5oBUTEemIe6OhVnSywA" name="getSurname" specification="_ERSEcBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    return surname;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ERVHwhUTEemIe6OhVnSywA" name="setSurname" specification="_ERVHwBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    this.surname = surname;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ERVu0hUTEemIe6OhVnSywA" name="getLab" specification="_ERVu0BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    return lab;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ERVu1RUTEemIe6OhVnSywA" name="setLab" specification="_ERVu0xUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    this.lab = lab;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ERWV4xUTEemIe6OhVnSywA" name="equals" specification="_ERWV4BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    if (obj == null) {&#xD;
        return false;&#xD;
    }&#xD;
    if (getClass() != obj.getClass()) {&#xD;
        return false;&#xD;
    }&#xD;
    final User other = (User) obj;&#xD;
    if (this.id != other.id) {&#xD;
        return false;&#xD;
    }&#xD;
    if (!Objects.equals(this.username, other.username)) {&#xD;
        return false;&#xD;
    }&#xD;
    if (!Objects.equals(this.name, other.name)) {&#xD;
        return false;&#xD;
    }&#xD;
    if (!Objects.equals(this.surname, other.surname)) {&#xD;
        return false;&#xD;
    }&#xD;
    if (!Objects.equals(this.lab, other.lab)) {&#xD;
        return false;&#xD;
    }&#xD;
    return true;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ERW88hUTEemIe6OhVnSywA" name="toString" specification="_ERW88BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    return &quot;username: &quot; + this.username;&#xD;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EQ_wkBUTEemIe6OhVnSywA" name="User" visibility="public" method="_ERCz4BUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ERBlwBUTEemIe6OhVnSywA" name="id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ERBlwRUTEemIe6OhVnSywA" name="username"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ERCM0BUTEemIe6OhVnSywA" name="name"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ERCM0RUTEemIe6OhVnSywA" name="surname"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ERCM0hUTEemIe6OhVnSywA" name="lab" type="_EPTugBUTEemIe6OhVnSywA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_ERCz4RUTEemIe6OhVnSywA" name="getId" visibility="public" method="_ERCz4xUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ERCz4hUTEemIe6OhVnSywA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_ERCz5BUTEemIe6OhVnSywA" name="setId" visibility="public" method="_ERECABUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ERDa8BUTEemIe6OhVnSywA" name="id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_ERFQIBUTEemIe6OhVnSywA" name="getUsername" visibility="public" method="_ERHFUBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ERGeQBUTEemIe6OhVnSywA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_ERITcBUTEemIe6OhVnSywA" name="setUsername" visibility="public" method="_ERKIoBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ERJhkBUTEemIe6OhVnSywA" name="username"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_ERL90BUTEemIe6OhVnSywA" name="getName" visibility="public" method="_ERNL8BUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ERL90RUTEemIe6OhVnSywA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EROaEBUTEemIe6OhVnSywA" name="setName" visibility="public" method="_ERQ2UBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ERQPQBUTEemIe6OhVnSywA" name="name"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_ERSEcBUTEemIe6OhVnSywA" name="getSurname" visibility="public" method="_ERT5oBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ERTSkBUTEemIe6OhVnSywA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_ERVHwBUTEemIe6OhVnSywA" name="setSurname" visibility="public" method="_ERVHwhUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ERVHwRUTEemIe6OhVnSywA" name="surname"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_ERVu0BUTEemIe6OhVnSywA" name="getLab" visibility="public" method="_ERVu0hUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ERVu0RUTEemIe6OhVnSywA" type="_EPTugBUTEemIe6OhVnSywA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_ERVu0xUTEemIe6OhVnSywA" name="setLab" visibility="public" method="_ERVu1RUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ERVu1BUTEemIe6OhVnSywA" name="lab" type="_EPTugBUTEemIe6OhVnSywA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_ERWV4BUTEemIe6OhVnSywA" name="equals" visibility="public" method="_ERWV4xUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ERWV4RUTEemIe6OhVnSywA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ERWV4hUTEemIe6OhVnSywA" name="obj"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_ERW88BUTEemIe6OhVnSywA" name="toString" visibility="public" method="_ERW88hUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ERW88RUTEemIe6OhVnSywA" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_EO-XUBUTEemIe6OhVnSywA" name="LaneDBwithsimilarity" visibility="public">
            <ownedAttribute xmi:type="uml:Property" xmi:id="_EQk50BUTEemIe6OhVnSywA" name="lane" visibility="private" type="_EHtRsBUTEemIe6OhVnSywA" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_EQmvABUTEemIe6OhVnSywA" name="similarity" visibility="private" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EQrngBUTEemIe6OhVnSywA" name="LaneDBwithsimilarity" specification="_EQn9IBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    this.lane = lane;&#xD;
    this.similarity = similarity;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EQuDwBUTEemIe6OhVnSywA" name="getLane" specification="_EQs1oBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    return lane;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EQwgABUTEemIe6OhVnSywA" name="setLane" specification="_EQvR4BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    this.lane = lane;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EQyVMRUTEemIe6OhVnSywA" name="getSimilarity" specification="_EQxuIBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    return similarity;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EQ1YgBUTEemIe6OhVnSywA" name="setSimilarity" specification="_EQ0KYBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    this.similarity = similarity;&#xD;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EQn9IBUTEemIe6OhVnSywA" name="LaneDBwithsimilarity" visibility="public" method="_EQrngBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EQrAcBUTEemIe6OhVnSywA" name="lane" type="_EHtRsBUTEemIe6OhVnSywA"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EQrAcRUTEemIe6OhVnSywA" name="similarity">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EQs1oBUTEemIe6OhVnSywA" name="getLane" visibility="public" method="_EQuDwBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EQtcsBUTEemIe6OhVnSywA" type="_EHtRsBUTEemIe6OhVnSywA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EQvR4BUTEemIe6OhVnSywA" name="setLane" visibility="public" method="_EQwgABUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EQv48BUTEemIe6OhVnSywA" name="lane" type="_EHtRsBUTEemIe6OhVnSywA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EQxuIBUTEemIe6OhVnSywA" name="getSimilarity" visibility="public" method="_EQyVMRUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EQyVMBUTEemIe6OhVnSywA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EQ0KYBUTEemIe6OhVnSywA" name="setSimilarity" visibility="public" method="_EQ1YgBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EQ0xcBUTEemIe6OhVnSywA" name="similarity">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_EPTugBUTEemIe6OhVnSywA" name="Lab" visibility="public">
            <ownedAttribute xmi:type="uml:Property" xmi:id="_EPU8oBUTEemIe6OhVnSywA" name="id" visibility="private" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_EPWx0BUTEemIe6OhVnSywA" name="name" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_EPYnABUTEemIe6OhVnSywA" name="city" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_EPZOEBUTEemIe6OhVnSywA" name="country" visibility="private" isUnique="false"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EPiYABUTEemIe6OhVnSywA" name="Lab" specification="_EPbDQBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    this.id = id;&#xD;
    this.name = name;&#xD;
    this.city = city;&#xD;
    this.country = country;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EPlbUBUTEemIe6OhVnSywA" name="getId" specification="_EPkNMBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    return id;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EPoeoBUTEemIe6OhVnSywA" name="setId" specification="_EPmpcBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    this.id = id;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EPswEBUTEemIe6OhVnSywA" name="getName" specification="_EPq64BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    return name;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EPwacBUTEemIe6OhVnSywA" name="setName" specification="_EPulQBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    this.name = name;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EPy2sBUTEemIe6OhVnSywA" name="getCountry" specification="_EPxokBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    return country;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EP2hEBUTEemIe6OhVnSywA" name="setCountry" specification="_EP0r4BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    this.country = country;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EP8nsBUTEemIe6OhVnSywA" name="equals" specification="_EP6LcBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    if (obj == null) {&#xD;
        return false;&#xD;
    }&#xD;
    if (getClass() != obj.getClass()) {&#xD;
        return false;&#xD;
    }&#xD;
    final Lab other = (Lab) obj;&#xD;
    if (this.id != other.id) {&#xD;
        return false;&#xD;
    }&#xD;
    if (!Objects.equals(this.name, other.name)) {&#xD;
        return false;&#xD;
    }&#xD;
    if (!Objects.equals(this.country, other.country)) {&#xD;
        return false;&#xD;
    }&#xD;
    return true;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EQA5IBUTEemIe6OhVnSywA" name="getCity" specification="_EP-c4BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    return city;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EQEjgBUTEemIe6OhVnSywA" name="setCity" specification="_EQCuUBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    this.city = city;&#xD;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EPbDQBUTEemIe6OhVnSywA" name="Lab" visibility="public" method="_EPiYABUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EPeGkBUTEemIe6OhVnSywA" name="id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EPetoBUTEemIe6OhVnSywA" name="name"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EPgi0BUTEemIe6OhVnSywA" name="city"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EPhw8BUTEemIe6OhVnSywA" name="country"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EPkNMBUTEemIe6OhVnSywA" name="getId" visibility="public" method="_EPlbUBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EPk0QBUTEemIe6OhVnSywA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EPmpcBUTEemIe6OhVnSywA" name="setId" visibility="public" method="_EPoeoBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EPn3kBUTEemIe6OhVnSywA" name="id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EPq64BUTEemIe6OhVnSywA" name="getName" visibility="public" method="_EPswEBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EPsJABUTEemIe6OhVnSywA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EPulQBUTEemIe6OhVnSywA" name="setName" visibility="public" method="_EPwacBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EPvzYBUTEemIe6OhVnSywA" name="name"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EPxokBUTEemIe6OhVnSywA" name="getCountry" visibility="public" method="_EPy2sBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EPyPoBUTEemIe6OhVnSywA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EP0r4BUTEemIe6OhVnSywA" name="setCountry" visibility="public" method="_EP2hEBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EP1S8BUTEemIe6OhVnSywA" name="country"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EP6LcBUTEemIe6OhVnSywA" name="equals" visibility="public" method="_EP8nsBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EP6ygBUTEemIe6OhVnSywA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EP8AoBUTEemIe6OhVnSywA" name="obj"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EP-c4BUTEemIe6OhVnSywA" name="getCity" visibility="public" method="_EQA5IBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EP_rABUTEemIe6OhVnSywA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EQCuUBUTEemIe6OhVnSywA" name="setCity" visibility="public" method="_EQEjgBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EQD8cBUTEemIe6OhVnSywA" name="city"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_EQG_wBUTEemIe6OhVnSywA" name="Marker" visibility="public">
            <ownedAttribute xmi:type="uml:Property" xmi:id="_EQHm0BUTEemIe6OhVnSywA" name="id" visibility="private" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_EQJcABUTEemIe6OhVnSywA" name="name" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_EQLRMBUTEemIe6OhVnSywA" name="file" visibility="private" isUnique="false"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EQR-4BUTEemIe6OhVnSywA" name="Marker" specification="_EQNGYBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    this.id = id;&#xD;
    this.name = name;&#xD;
    this.file = file;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EQT0EBUTEemIe6OhVnSywA" name="getId" specification="_EQR-4RUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    return id;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EQWQUBUTEemIe6OhVnSywA" name="setId" specification="_EQVCMBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    this.id = id;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EQZToBUTEemIe6OhVnSywA" name="getName" specification="_EQXecBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    return name;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EQcW8BUTEemIe6OhVnSywA" name="setName" specification="_EQahwBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    this.name = name;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EQfaQBUTEemIe6OhVnSywA" name="getFile" specification="_EQdlEBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    return file;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EQidkBUTEemIe6OhVnSywA" name="setFile" specification="_EQgoYBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    this.file = file;&#xD;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EQNGYBUTEemIe6OhVnSywA" name="Marker" visibility="public" method="_EQR-4BUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EQPioBUTEemIe6OhVnSywA" name="id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EQQJsBUTEemIe6OhVnSywA" name="name"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EQRX0BUTEemIe6OhVnSywA" name="file"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EQR-4RUTEemIe6OhVnSywA" name="getId" visibility="public" method="_EQT0EBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EQSl8BUTEemIe6OhVnSywA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EQVCMBUTEemIe6OhVnSywA" name="setId" visibility="public" method="_EQWQUBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EQVpQBUTEemIe6OhVnSywA" name="id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EQXecBUTEemIe6OhVnSywA" name="getName" visibility="public" method="_EQZToBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EQYskBUTEemIe6OhVnSywA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EQahwBUTEemIe6OhVnSywA" name="setName" visibility="public" method="_EQcW8BUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EQbv4BUTEemIe6OhVnSywA" name="name"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EQdlEBUTEemIe6OhVnSywA" name="getFile" visibility="public" method="_EQfaQBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EQezMBUTEemIe6OhVnSywA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EQgoYBUTEemIe6OhVnSywA" name="setFile" visibility="public" method="_EQidkBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EQh2gBUTEemIe6OhVnSywA" name="file"/>
            </ownedOperation>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_GuZAEBUTEemIe6OhVnSywA" name="Interface">
          <packagedElement xmi:type="uml:Class" xmi:id="_GucqcBUTEemIe6OhVnSywA" name="EditViewLaneDB" visibility="public">
            <ownedAttribute xmi:type="uml:Property" xmi:id="_Guhi8BUTEemIe6OhVnSywA" name="l" visibility="private" type="_EHtRsBUTEemIe6OhVnSywA" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_Guj_MBUTEemIe6OhVnSywA" name="edit" visibility="private" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_GumbcBUTEemIe6OhVnSywA" name="gelj" visibility="private" type="_Gul0YBUTEemIe6OhVnSywA" isUnique="false"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GuyBoBUTEemIe6OhVnSywA" name="EditViewLaneDB" specification="_Guo3sBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    this.l = l;&#xD;
    this.edit = edit;&#xD;
    this.gelj = gelj;&#xD;
    Menu m = new Menu();&#xD;
    String windowname = IJ.getImage().getTitle();&#xD;
    m.setWindowname(windowname);&#xD;
    Lane[] lanes = new Lane[1];&#xD;
    lanes[0] = LaneDBtoLaneIJ(l);&#xD;
    m.setStudyid(l.getExperiment().getStudy().getId());&#xD;
    m.setExperimentid(l.getExperiment().getId());&#xD;
    m.setUsername(l.getExperiment().getUser().getUsername());&#xD;
    m.setCalibrationmethod(l.getExperiment().getCalibrationMethod());&#xD;
    m.setMarker(l.getExperiment().getMarker().getName());&#xD;
    m.finallanes = lanes;&#xD;
    Roi[] rois = new Roi[1];&#xD;
    rois[0] = lanes[0].getRoi();&#xD;
    m.setLanes(rois);&#xD;
    if (IJ.getInstance() == null) {&#xD;
        new ImageJ(NO_SHOW);&#xD;
    }&#xD;
    BandManager bm = null;&#xD;
    if (edit) {&#xD;
        Lane[] markers = getmarkerlanesexperiment(l.getExperiment().getId());&#xD;
        bm = new BandManager(m, true);&#xD;
        ImagePlus imp = WindowManager.getCurrentImage();&#xD;
        ImageWindow iw = imp.getWindow();&#xD;
        BandManagerCanvas cc = new BandManagerCanvas(imp);&#xD;
        ImageWindow iw2 = new ImageWindow(imp, cc);&#xD;
        iw2.toFront();&#xD;
        iw.dispose();&#xD;
        bm.delete_without_asking(true);&#xD;
        if (m.finallanes != null) {&#xD;
            for (int i = 0; i &lt; m.finallanes.length; i++) {&#xD;
                int[] positionbands = m.finallanes[i].getPositionbands();&#xD;
                if (positionbands != null) {&#xD;
                    for (int b : positionbands) {&#xD;
                        Roi r0 = m.finallanes[i].getRoi();&#xD;
                        int r0x = r0.getBounds().x;&#xD;
                        int r0y = r0.getBounds().y;&#xD;
                        int w = r0.getBounds().width;&#xD;
                        Rectangle r = new Rectangle(r0x, r0y + b, w, 2);&#xD;
                        Roi r1 = rectangleintersectionroi(r0, r);&#xD;
                        r1.setFillColor(m.getColour());&#xD;
                        bm.add(imp, r1, 0, i);&#xD;
                        bm.showAll(0);&#xD;
                    }&#xD;
                }&#xD;
            }&#xD;
        }&#xD;
        bm.setLaneid(l.getId());&#xD;
        bm.setMarkersedit(markers);&#xD;
        bm.setVisible(false);&#xD;
        EditOneLane be = new EditOneLane(imp, bm, gelj);&#xD;
    } else {&#xD;
        bm = m.bandmanagerfunctionality();&#xD;
        bm.setVisible(true);&#xD;
        ImagePlus imp = IJ.getImage();&#xD;
        //            imp.show();&#xD;
        ImagePlus imp2 = imp.flatten();&#xD;
        imp.close();&#xD;
        imp2.show();&#xD;
        imp2.getWindow().setAlwaysOnTop(true);&#xD;
        imp2.setTitle(&quot;Selected lane&quot;);&#xD;
        bm.setVisible(false);&#xD;
        m.dispose();&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Gu4vUBUTEemIe6OhVnSywA" name="LaneDBtoLaneIJ" specification="_Guz20BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    String folderlanepath = System.getProperty(&quot;user.dir&quot;) + &quot;/GelJDBImages/&quot; + l.getExperiment().getStudy().getId() + &quot;/&quot; + l.getExperiment().getUser().getUsername() + &quot;/experiments/&quot; + l.getExperiment().getId() + &quot;/lanes/&quot; + l.getId() + &quot;/&quot;;&#xD;
    //        IJ.open(folderlanepath + l.getId() + &quot;.tiff&quot;);&#xD;
    Opener o = new Opener();&#xD;
    ImagePlus imp = o.openImage(folderlanepath + l.getId() + &quot;.tiff&quot;);&#xD;
    //        ImagePlus imp = IJ.getImage();&#xD;
    Roi roi = RoiDecoder.open(folderlanepath + l.getId() + &quot;.roi&quot;);&#xD;
    double[] profile = readdoublearrayfile(folderlanepath + l.getId() + &quot;.curve&quot;);&#xD;
    int[] positionbands = readintarrayfile(folderlanepath + l.getId() + &quot;.bands&quot;);&#xD;
    int[] positionbands2 = readintarrayfile(folderlanepath + l.getId() + &quot;.bands2&quot;);&#xD;
    double[] stdpositionbands = readdoublearrayfile(folderlanepath + l.getId() + &quot;.mw&quot;);&#xD;
    Lane lane = new Lane(imp, l.getGenus(), roi, profile, positionbands, stdpositionbands);&#xD;
    lane.setIsstandard(l.isIsMarker());&#xD;
    lane.setPositionbands2(positionbands2);&#xD;
    imp.changes = false;&#xD;
    imp.close();&#xD;
    return lane;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GvBSMBUTEemIe6OhVnSywA" name="readintarrayfile" specification="_Gu7yoBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    String workingfile = path;&#xD;
    Path p = Paths.get(workingfile);&#xD;
    Charset c = Charset.defaultCharset();&#xD;
    List&lt;String> lines = Files.readAllLines(p, c);&#xD;
    int[] res = new int[lines.size()];&#xD;
    for (int i = 0; i &lt; lines.size(); i++) {&#xD;
        res[i] = Integer.parseInt(lines.get(i));&#xD;
    }&#xD;
    return res;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GvKcIBUTEemIe6OhVnSywA" name="readdoublearrayfile" specification="_GvDucBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    String workingfile = path;&#xD;
    Path p = Paths.get(workingfile);&#xD;
    Charset c = Charset.defaultCharset();&#xD;
    List&lt;String> lines = Files.readAllLines(p, c);&#xD;
    if (lines.size() == 0) {&#xD;
        double[] res = new double[1];&#xD;
        res[0] = -1;&#xD;
        return res;&#xD;
    }&#xD;
    double[] res = new double[lines.size()];&#xD;
    for (int i = 0; i &lt; lines.size(); i++) {&#xD;
        res[i] = Double.parseDouble(lines.get(i));&#xD;
    }&#xD;
    return res;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GvRJ0BUTEemIe6OhVnSywA" name="getmarkerlanesexperiment" specification="_GvLqQBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    ArrayList&lt;LaneDB> lanes = getstandardsexperiment(id);&#xD;
    Lane[] markers = new Lane[lanes.size()];&#xD;
    for (int i = 0; i &lt; lanes.size(); i++) {&#xD;
        markers[i] = LaneDBtoLaneIJ(lanes.get(i));&#xD;
    }&#xD;
    return markers;&#xD;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_Guo3sBUTEemIe6OhVnSywA" name="EditViewLaneDB" visibility="public" method="_GuyBoBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_GutJIBUTEemIe6OhVnSywA" name="l" type="_EHtRsBUTEemIe6OhVnSywA"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_GuuXQBUTEemIe6OhVnSywA" name="edit">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_GuvlYBUTEemIe6OhVnSywA" name="gelj" type="_Gul0YBUTEemIe6OhVnSywA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_Guz20BUTEemIe6OhVnSywA" name="LaneDBtoLaneIJ" visibility="public" isStatic="true" method="_Gu4vUBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_Gu1sABUTEemIe6OhVnSywA" direction="return"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_Gu26IBUTEemIe6OhVnSywA" name="l" type="_EHtRsBUTEemIe6OhVnSywA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_Gu7yoBUTEemIe6OhVnSywA" name="readintarrayfile" visibility="public" isStatic="true" method="_GvBSMBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_Gu9AwBUTEemIe6OhVnSywA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Gu9n0BUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Gu-O4BUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_Gu_dABUTEemIe6OhVnSywA" name="path"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_GvDucBUTEemIe6OhVnSywA" name="readdoublearrayfile" visibility="public" isStatic="true" method="_GvKcIBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_GvFjoBUTEemIe6OhVnSywA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_GvGxwBUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_GvHY0BUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_GvIm8BUTEemIe6OhVnSywA" name="path"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_GvLqQBUTEemIe6OhVnSywA" name="getmarkerlanesexperiment" visibility="private" method="_GvRJ0BUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_GvM4YBUTEemIe6OhVnSywA" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_GvNfcBUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_GvOGgBUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_GvPUoBUTEemIe6OhVnSywA" name="id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_Gul0YBUTEemIe6OhVnSywA" name="Main" visibility="public">
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G-Fo8BUTEemIe6OhVnSywA" name="studyid" visibility="public" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G-G3EBUTEemIe6OhVnSywA" name="userid" visibility="public" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G-IsQBUTEemIe6OhVnSywA" name="experiments" visibility="private" type="_EJs1wBUTEemIe6OhVnSywA" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_G-J6YBUTEemIe6OhVnSywA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_G-KhcBUTEemIe6OhVnSywA" value="*"/>
              <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_G-LIgBUTEemIe6OhVnSywA" name="defaultValue">
                <language>JAVA</language>
                <body>new ArrayList&lt;>()</body>
              </defaultValue>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G-M9sBUTEemIe6OhVnSywA" name="comparisons" visibility="private" type="_EHPXoBUTEemIe6OhVnSywA" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_G-NkwBUTEemIe6OhVnSywA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_G-NkwRUTEemIe6OhVnSywA" value="*"/>
              <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_G-NkwhUTEemIe6OhVnSywA" name="defaultValue">
                <language>JAVA</language>
                <body>new ArrayList&lt;>()</body>
              </defaultValue>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G-Oy4BUTEemIe6OhVnSywA" name="lanes" visibility="private" type="_EHtRsBUTEemIe6OhVnSywA" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_G-QBABUTEemIe6OhVnSywA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_G-QoEBUTEemIe6OhVnSywA" value="*"/>
              <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_G-RPIBUTEemIe6OhVnSywA" name="defaultValue">
                <language>JAVA</language>
                <body>new ArrayList&lt;>()</body>
              </defaultValue>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G-TEUBUTEemIe6OhVnSywA" name="templanes" visibility="private" type="_EHtRsBUTEemIe6OhVnSywA" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_G-U5gBUTEemIe6OhVnSywA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_G-WHoBUTEemIe6OhVnSywA" value="*"/>
              <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_G-WusBUTEemIe6OhVnSywA" name="defaultValue">
                <language>JAVA</language>
                <body>new ArrayList&lt;>()</body>
              </defaultValue>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G-Yj4BUTEemIe6OhVnSywA" name="additionalfields" visibility="private" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_G-aZEBUTEemIe6OhVnSywA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_G-bAIBUTEemIe6OhVnSywA" value="*"/>
              <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_G-bnMBUTEemIe6OhVnSywA" name="defaultValue">
                <language>JAVA</language>
                <body>new ArrayList&lt;>()</body>
              </defaultValue>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G-c1UBUTEemIe6OhVnSywA" name="firsttime" visibility="private" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_G-eqgBUTEemIe6OhVnSywA" name="defaultValue">
                <language>JAVA</language>
                <body>true</body>
              </defaultValue>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G-jjABUTEemIe6OhVnSywA" name="rootNode" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G-pCkBUTEemIe6OhVnSywA" name="treeModel" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G-q3wBUTEemIe6OhVnSywA" name="rootNodeComp" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G-re0BUTEemIe6OhVnSywA" name="treeModelComp" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G-uiIBUTEemIe6OhVnSywA" name="ij" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G-vJMBUTEemIe6OhVnSywA" name="twiceinarow" visibility="private" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_G-vJMRUTEemIe6OhVnSywA" name="defaultValue">
                <language>JAVA</language>
                <body>false</body>
              </defaultValue>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HDS5EBUTEemIe6OhVnSywA" name="jAnnotateItem" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HDUuQBUTEemIe6OhVnSywA" name="jButton1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HDXKgBUTEemIe6OhVnSywA" name="jButton2" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HDY_sBUTEemIe6OhVnSywA" name="jMItransform" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HDbb8BUTEemIe6OhVnSywA" name="jMenu1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HDcDABUTEemIe6OhVnSywA" name="jMenu2" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HDcqEBUTEemIe6OhVnSywA" name="jMenu3" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HDefQBUTEemIe6OhVnSywA" name="jMenu4" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HDfGUBUTEemIe6OhVnSywA" name="jMenu5" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HDhikBUTEemIe6OhVnSywA" name="jMenuBar1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HDj-0BUTEemIe6OhVnSywA" name="jMenuGenetic" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HDl0ABUTEemIe6OhVnSywA" name="jMenuItem1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HDnpMBUTEemIe6OhVnSywA" name="jMenuItem2" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HDo3UBUTEemIe6OhVnSywA" name="jMenuItem5" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HDqsgBUTEemIe6OhVnSywA" name="jMenuItem6" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HDtIwBUTEemIe6OhVnSywA" name="jMenuItem7" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HDvlABUTEemIe6OhVnSywA" name="jMenuItem8" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HDyBQBUTEemIe6OhVnSywA" name="jMenuMemory" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HDz2cBUTEemIe6OhVnSywA" name="jPanel1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HD1roBUTEemIe6OhVnSywA" name="jPanel2" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HD25wBUTEemIe6OhVnSywA" name="jPanel3" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HD4u8BUTEemIe6OhVnSywA" name="jPanel5" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HD7LMBUTEemIe6OhVnSywA" name="jSave" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HD9AYBUTEemIe6OhVnSywA" name="jScrollPane1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HD-1kBUTEemIe6OhVnSywA" name="jScrollPane2" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HEADsBUTEemIe6OhVnSywA" name="jScrollPane3" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HEAqwBUTEemIe6OhVnSywA" name="jScrollPane4" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HECf8BUTEemIe6OhVnSywA" name="jSeparator1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HEE8MBUTEemIe6OhVnSywA" name="jSeparator2" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HEFjQBUTEemIe6OhVnSywA" name="jSeparator3" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HEKbwBUTEemIe6OhVnSywA" name="jSeparator4" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HEMQ8BUTEemIe6OhVnSywA" name="jSeparator5" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HEOtMBUTEemIe6OhVnSywA" name="jSeparator6" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HEP7UBUTEemIe6OhVnSywA" name="jSeparator7" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HERJcBUTEemIe6OhVnSywA" name="jToolBar1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HES-oBUTEemIe6OhVnSywA" name="jToolBar2" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HEUMwBUTEemIe6OhVnSywA" name="jToolBar3" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HEVa4BUTEemIe6OhVnSywA" name="jToolBar5" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HEa6cBUTEemIe6OhVnSywA" name="jXImageView2" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HEdWsBUTEemIe6OhVnSywA" name="jbAddField" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HEfL4BUTEemIe6OhVnSywA" name="jbAdvancedSearchLanes" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HEhBEBUTEemIe6OhVnSywA" name="jbDeleteExp" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HEjdUBUTEemIe6OhVnSywA" name="jbDeleteLane" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HElSgBUTEemIe6OhVnSywA" name="jbDuplicateComp" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HEnuwBUTEemIe6OhVnSywA" name="jbDuplicateExp" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HEpj8BUTEemIe6OhVnSywA" name="jbEditlane" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HEqyEBUTEemIe6OhVnSywA" name="jbExportNewick" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HEsnQBUTEemIe6OhVnSywA" name="jbFindSimilarLanes" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HEvDgBUTEemIe6OhVnSywA" name="jbImport" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HEvqkBUTEemIe6OhVnSywA" name="jbNewComp" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HExfwBUTEemIe6OhVnSywA" name="jbNewExp" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HEzU8BUTEemIe6OhVnSywA" name="jbSearchComp" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HE1xMBUTEemIe6OhVnSywA" name="jbSearchExp" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HE2_UBUTEemIe6OhVnSywA" name="jbShowMW" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HE40gBUTEemIe6OhVnSywA" name="jbSimMatrix" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HE6psBUTEemIe6OhVnSywA" name="jbViewComp" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HE9F8BUTEemIe6OhVnSywA" name="jbdeletecomp" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HE-7IBUTEemIe6OhVnSywA" name="jbdeletefield" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HFyzcBUTEemIe6OhVnSywA" name="jbeditexpcomp" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HFyzcRUTEemIe6OhVnSywA" name="jbexport" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HFzagBUTEemIe6OhVnSywA" name="jbimportexpfile" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HFzagRUTEemIe6OhVnSywA" name="jbmodifycomp" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HF0BkBUTEemIe6OhVnSywA" name="jmMarkers" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HF0BkRUTEemIe6OhVnSywA" name="jmOpenStudy" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HF0ooBUTEemIe6OhVnSywA" name="jmannotate" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HF0ooRUTEemIe6OhVnSywA" name="jmiAddPopulationField" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HF1PsBUTEemIe6OhVnSywA" name="jmiCloseStudy" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HF3E4BUTEemIe6OhVnSywA" name="jmiDeleteStudy" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HF7WUBUTEemIe6OhVnSywA" name="jmiEditStudy" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HF9LgBUTEemIe6OhVnSywA" name="jmiExit" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HF9ykBUTEemIe6OhVnSywA" name="jmiExportGenetics" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HF_nwBUTEemIe6OhVnSywA" name="jmiNewStudy" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HGBc8BUTEemIe6OhVnSywA" name="jmiUnfinished" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HGD5MBUTEemIe6OhVnSywA" name="jmiaddmarker" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HGIKoBUTEemIe6OhVnSywA" name="jsMainPane" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HGJ_0BUTEemIe6OhVnSywA" name="jspLeftPane" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HGL1ABUTEemIe6OhVnSywA" name="jspRightPane" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HGQGcBUTEemIe6OhVnSywA" name="jtComparisons" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HGSisBUTEemIe6OhVnSywA" name="jtExperiments" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HGU-8BUTEemIe6OhVnSywA" name="jtLanes" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HGZ3cBUTEemIe6OhVnSywA" name="jxsearchlane" visibility="private" isUnique="false"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G-xlcRUTEemIe6OhVnSywA" name="Main" specification="_G-vJMhUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    initComponents();&#xD;
    jsMainPane.setDividerLocation(0.3);&#xD;
    jspLeftPane.setDividerLocation(0.7);&#xD;
    jspRightPane.setDividerLocation(1.0);&#xD;
    //        initialiseexperimentstree();&#xD;
    //        initialisecomparisonstree();&#xD;
    //        this.studyid = studyid;       &#xD;
    //        updateexperiments(true);&#xD;
    //        updatecomparisons(true);&#xD;
    //        updatelanes(true);&#xD;
    this.userid = userid;&#xD;
    ArrayList&lt;Study> studies = getStudies(userid);&#xD;
    if (studies.isEmpty()) {&#xD;
        jmOpenStudy.setEnabled(false);&#xD;
    //            jMenu3.setEnabled(false);&#xD;
    }&#xD;
    this.setExtendedState(JFrame.MAXIMIZED_BOTH);&#xD;
    activateemptytoolbar();&#xD;
    loadPopulationGeneticsPlugins();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G-yMgBUTEemIe6OhVnSywA" name="initialiseexperimentstree" specification="_G-xlchUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    rootNode = new DefaultMutableTreeNode(&quot;Experiments&quot;);&#xD;
    treeModel = new DefaultTreeModel(rootNode);&#xD;
    treeModel.addTreeModelListener(new MyTreeModelListener());&#xD;
    jtExperiments.setModel(treeModel);&#xD;
    jtExperiments.setEditable(true);&#xD;
    jtExperiments.getSelectionModel().setSelectionMode(TreeSelectionModel.SINGLE_TREE_SELECTION);&#xD;
    jtExperiments.addTreeSelectionListener(this);&#xD;
    jtExperiments.setShowsRootHandles(true);&#xD;
    jtExperiments.setRootVisible(true);&#xD;
    jtExperiments.setCellRenderer(new ExperimentsRenderer());&#xD;
    ToolTipManager.sharedInstance().registerComponent(jtExperiments);&#xD;
// Mouse moved&#xD;
//        jtExperiments.addMouseMotionListener(new MouseMotionAdapter() {&#xD;
//            public void mouseMoved(MouseEvent e) {&#xD;
//                int x = (int) e.getPoint().getX();&#xD;
//                int y = (int) e.getPoint().getY();&#xD;
//                TreePath path = jtExperiments.getPathForLocation(x, y);&#xD;
//                Rectangle pathBounds = jtExperiments.getUI().getPathBounds(jtExperiments, path);&#xD;
//                if (pathBounds != null &amp;&amp; pathBounds.contains(e.getX(), e.getY())) {&#xD;
//                    JPopupMenu menu = new JPopupMenu();&#xD;
//                    DefaultMutableTreeNode node = (DefaultMutableTreeNode) path.getLastPathComponent();&#xD;
//                    Experiment experiment = (Experiment) node.getUserObject();&#xD;
//                    JTextArea jt = new JTextArea(experiment.printInfo());&#xD;
//                    jt.setEditable(false);&#xD;
//                    menu.add(jt);&#xD;
//                    menu.show(jtExperiments, pathBounds.x, pathBounds.y + pathBounds.height);&#xD;
//                }&#xD;
//            }&#xD;
//&#xD;
//        });&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G-yMghUTEemIe6OhVnSywA" name="initialisecomparisonstree" specification="_G-yMgRUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    rootNodeComp = new DefaultMutableTreeNode(&quot;Comparisons&quot;);&#xD;
    treeModelComp = new DefaultTreeModel(rootNodeComp);&#xD;
    treeModelComp.addTreeModelListener(new MyTreeModelListener());&#xD;
    jtComparisons.setModel(treeModelComp);&#xD;
    jtComparisons.setEditable(true);&#xD;
    jtComparisons.getSelectionModel().setSelectionMode(TreeSelectionModel.SINGLE_TREE_SELECTION);&#xD;
    jtComparisons.addTreeSelectionListener(this);&#xD;
    jtComparisons.setShowsRootHandles(true);&#xD;
    jtComparisons.setRootVisible(true);&#xD;
    jtComparisons.setCellRenderer(new ComparisonRenderer());&#xD;
    ToolTipManager.sharedInstance().registerComponent(jtComparisons);&#xD;
//        jtComparisons.addMouseMotionListener(new MouseMotionAdapter() {&#xD;
//            public void mouseMoved(MouseEvent e) {&#xD;
//                int x = (int) e.getPoint().getX();&#xD;
//                int y = (int) e.getPoint().getY();&#xD;
//                TreePath path = jtComparisons.getPathForLocation(x, y);&#xD;
//                Rectangle pathBounds = jtComparisons.getUI().getPathBounds(jtComparisons, path);&#xD;
//                if (pathBounds != null &amp;&amp; pathBounds.contains(e.getX(), e.getY())) {&#xD;
//                    JPopupMenu menu = new JPopupMenu();&#xD;
//                    DefaultMutableTreeNode node = (DefaultMutableTreeNode) path.getLastPathComponent();&#xD;
//                    Comparison comp = (Comparison) node.getUserObject();&#xD;
//                    JTextArea jt = new JTextArea(comp.printInfo());&#xD;
//                    jt.setEditable(false);&#xD;
//                    menu.add(jt);&#xD;
//                    menu.show(jtComparisons, pathBounds.x, pathBounds.y + pathBounds.height);&#xD;
//                }&#xD;
//            }&#xD;
//&#xD;
//        });&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G-0owRUTEemIe6OhVnSywA" name="addExperiment" specification="_G-yzkBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    DefaultMutableTreeNode childNode = new DefaultMutableTreeNode(child);&#xD;
    if (parent == null) {&#xD;
        parent = rootNode;&#xD;
    }&#xD;
    //It is key to invoke this on the TreeModel, and NOT DefaultMutableTreeNode&#xD;
    treeModel.insertNodeInto(childNode, parent, parent.getChildCount());&#xD;
    //Make sure the user can see the lovely new node.&#xD;
    if (shouldBeVisible) {&#xD;
        jtExperiments.scrollPathToVisible(new TreePath(childNode.getPath()));&#xD;
    }&#xD;
    return childNode;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G-9LoBUTEemIe6OhVnSywA" name="addComparison" specification="_G-3sEBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    DefaultMutableTreeNode childNode = new DefaultMutableTreeNode(child);&#xD;
    if (parent == null) {&#xD;
        parent = rootNodeComp;&#xD;
    }&#xD;
    //It is key to invoke this on the TreeModel, and NOT DefaultMutableTreeNode&#xD;
    treeModelComp.insertNodeInto(childNode, parent, parent.getChildCount());&#xD;
    //Make sure the user can see the lovely new node.&#xD;
    if (shouldBeVisible) {&#xD;
        jtComparisons.scrollPathToVisible(new TreePath(childNode.getPath()));&#xD;
    }&#xD;
    return childNode;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G_CEIBUTEemIe6OhVnSywA" name="updateexperiments" specification="_G-_A0BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    if (all) {&#xD;
        experiments = getExperiments(studyid);&#xD;
        clearExp();&#xD;
    }&#xD;
    if (experiments.isEmpty()) {&#xD;
        jtExperiments.setRootVisible(false);&#xD;
        disablenoexperiment();&#xD;
    } else {&#xD;
        jtExperiments.setRootVisible(true);&#xD;
    }&#xD;
    for (Experiment e : experiments) {&#xD;
        addExperiment(rootNode, e, true);&#xD;
    }&#xD;
    if (clean) {&#xD;
        cleanlanes();&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G_GVkRUTEemIe6OhVnSywA" name="updatecomparisons" specification="_G_D5UBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    if (all) {&#xD;
        comparisons = getComparisons(studyid);&#xD;
        clearComp();&#xD;
    }&#xD;
    if (comparisons.isEmpty()) {&#xD;
        jtComparisons.setRootVisible(false);&#xD;
        if (!experiments.isEmpty()) {&#xD;
            disablenocomparison();&#xD;
        } else {&#xD;
            disablenoexperiment();&#xD;
        }&#xD;
    } else {&#xD;
        jtComparisons.setRootVisible(true);&#xD;
    }&#xD;
    for (Comparison c : comparisons) {&#xD;
        addComparison(rootNodeComp, c, true);&#xD;
    }&#xD;
    if (clean) {&#xD;
        cleanlanes();&#xD;
        activateemptytoolbar();&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G_G8oRUTEemIe6OhVnSywA" name="clearComp" specification="_G_G8oBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    rootNodeComp.removeAllChildren();&#xD;
    treeModelComp.reload();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G_HjsRUTEemIe6OhVnSywA" name="clearExp" specification="_G_HjsBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    rootNode.removeAllChildren();&#xD;
    treeModel.reload();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G_IKwBUTEemIe6OhVnSywA" name="updateselectedlanes" specification="_G_HjshUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    for (int i = 0; i &lt; lanes.size(); i++) {&#xD;
        lanes.set(i, getLane(lanes.get(i).getId()));&#xD;
    }&#xD;
    String[] names0 = { &quot;Genus&quot;, &quot;Species&quot;, &quot;Strain Number&quot;, &quot;Country&quot;, &quot;MLST&quot;, &quot;isMarker&quot;, &quot;Experiment&quot;, &quot;Comments&quot; };&#xD;
    String[] names = new String[names0.length + additionalfields.size()];&#xD;
    for (int i = 0; i &lt; names0.length; i++) {&#xD;
        names[i] = names0[i];&#xD;
    }&#xD;
    for (int i = 0; i &lt; additionalfields.size(); i++) {&#xD;
        names[i + names0.length] = additionalfields.get(i);&#xD;
    }&#xD;
    Object[][] data = new Object[lanes.size()][names.length];&#xD;
    // We update the table&#xD;
    for (int i = 0; i &lt; lanes.size(); i++) {&#xD;
        data[i][0] = lanes.get(i).getGenus();&#xD;
        data[i][1] = lanes.get(i).getSpecies();&#xD;
        data[i][2] = lanes.get(i).getStrainNumber();&#xD;
        data[i][3] = lanes.get(i).getCountry();&#xD;
        data[i][4] = lanes.get(i).getMSLT();&#xD;
        data[i][5] = lanes.get(i).isIsMarker();&#xD;
        data[i][6] = lanes.get(i).getExperiment().getName();&#xD;
        data[i][7] = lanes.get(i).getComments();&#xD;
        for (int j = 0; j &lt; additionalfields.size(); j++) {&#xD;
            data[i][8 + j] = lanes.get(i).getLaneaddedinfo().get(additionalfields.get(j));&#xD;
        }&#xD;
    }&#xD;
    // Operations to change the model, we disable the edition of the date&#xD;
    DefaultTableModel model = new DefaultTableModel(data, names) {&#xD;
&#xD;
        @Override&#xD;
        public boolean isCellEditable(int rowIndex, int mColIndex) {&#xD;
            if (mColIndex == 6 || mColIndex == 5) {&#xD;
                return false;&#xD;
            } else {&#xD;
                return true;&#xD;
            }&#xD;
        }&#xD;
&#xD;
        @Override&#xD;
        public Class getColumnClass(int columnIndex) {&#xD;
            if (columnIndex == 5) {&#xD;
                return java.lang.Boolean.class;&#xD;
            } else {&#xD;
                return java.lang.Object.class;&#xD;
            }&#xD;
        }&#xD;
    };&#xD;
    model.addTableModelListener(this);&#xD;
    jtLanes.setModel(model);&#xD;
    jtLanes.getSelectionModel().addListSelectionListener(new ListSelectionListener() {&#xD;
&#xD;
        @Override&#xD;
        public void valueChanged(ListSelectionEvent event) {&#xD;
            if (jtLanes.getSelectedRow() > -1) {&#xD;
                if (!twiceinarow) {&#xD;
                    if (jtComparisons.getSelectionPath() == null) {&#xD;
                        viewlane();&#xD;
                    }&#xD;
                }&#xD;
                twiceinarow = !twiceinarow;&#xD;
            }&#xD;
            if (jtLanes.getSelectedRow() > 0) {&#xD;
                jbEditlane.setEnabled(true);&#xD;
                jbDeleteLane.setEnabled(true);&#xD;
                jbShowMW.setEnabled(true);&#xD;
                jbFindSimilarLanes.setEnabled(true);&#xD;
            }&#xD;
        }&#xD;
    });&#xD;
    TableColumn countriescolumn = jtLanes.getColumnModel().getColumn(3);&#xD;
    countriescolumn.setCellEditor(new DefaultCellEditor(generatecountriescombobox()));&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G_Ix0RUTEemIe6OhVnSywA" name="cleanlanes" specification="_G_Ix0BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    String[] names0 = { &quot;Genus&quot;, &quot;Species&quot;, &quot;Strain Number&quot;, &quot;Country&quot;, &quot;MLST&quot;, &quot;isMarker&quot;, &quot;Experiment&quot;, &quot;Comments&quot; };&#xD;
    String[] names = new String[names0.length + additionalfields.size()];&#xD;
    for (int i = 0; i &lt; names0.length; i++) {&#xD;
        names[i] = names0[i];&#xD;
    }&#xD;
    for (int i = 0; i &lt; additionalfields.size(); i++) {&#xD;
        names[i + names0.length] = additionalfields.get(i);&#xD;
    }&#xD;
    Object[][] data = new Object[lanes.size()][names.length];&#xD;
    // Operations to change the model, we disable the edition of the date&#xD;
    DefaultTableModel model = new DefaultTableModel(data, names);&#xD;
    model.addTableModelListener(this);&#xD;
    jtLanes.setModel(model);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G_JY4RUTEemIe6OhVnSywA" name="activateemptytoolbar" specification="_G_JY4BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    jbeditexpcomp.setVisible(false);&#xD;
    jbDeleteLane.setVisible(false);&#xD;
    jbEditlane.setVisible(false);&#xD;
    jbShowMW.setVisible(false);&#xD;
    //        jbViewLane.setVisible(false);&#xD;
    jbAddField.setVisible(false);&#xD;
    jbdeletefield.setVisible(false);&#xD;
    jbFindSimilarLanes.setVisible(false);&#xD;
    jxsearchlane.setVisible(false);&#xD;
    jbAdvancedSearchLanes.setVisible(false);&#xD;
    jSeparator1.setVisible(false);&#xD;
    jSeparator2.setVisible(false);&#xD;
    jSeparator3.setVisible(false);&#xD;
    //        jSeparator4.setVisible(false);&#xD;
    jbexport.setVisible(false);&#xD;
    jbexport.setEnabled(false);&#xD;
    jbDeleteExp.setVisible(false);&#xD;
    jbDeleteExp.setEnabled(false);&#xD;
    jbViewComp.setVisible(false);&#xD;
    jbViewComp.setEnabled(false);&#xD;
    jbExportNewick.setVisible(false);&#xD;
    jbExportNewick.setEnabled(false);&#xD;
    jbSimMatrix.setVisible(false);&#xD;
    jbSimMatrix.setEnabled(false);&#xD;
    jbeditexpcomp.setEnabled(false);&#xD;
    jbDeleteLane.setEnabled(false);&#xD;
    jbEditlane.setEnabled(false);&#xD;
    jbShowMW.setEnabled(false);&#xD;
    //        jbViewLane.setEnabled(false);&#xD;
    jbAddField.setEnabled(false);&#xD;
    jbdeletefield.setEnabled(false);&#xD;
    jbFindSimilarLanes.setEnabled(false);&#xD;
    jxsearchlane.setEnabled(false);&#xD;
    jbAdvancedSearchLanes.setEnabled(false);&#xD;
    jToolBar3.setVisible(false);&#xD;
    jtLanes.setVisible(false);&#xD;
    jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(&quot;&quot;));&#xD;
    jtExperiments.clearSelection();&#xD;
    jtComparisons.clearSelection();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G_J_8RUTEemIe6OhVnSywA" name="activateexperimentstoolbar" specification="_G_J_8BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    jbeditexpcomp.setVisible(true);&#xD;
    jbeditexpcomp.setEnabled(true);&#xD;
    jbeditexpcomp.setToolTipText(&quot;Modify properties of the experiment&quot;);&#xD;
    jbDeleteExp.setVisible(true);&#xD;
    jbDeleteExp.setEnabled(true);&#xD;
    jbmodifycomp.setVisible(false);&#xD;
    jbmodifycomp.setEnabled(false);&#xD;
    jbdeletecomp.setVisible(false);&#xD;
    jbdeletecomp.setEnabled(false);&#xD;
    jbDeleteLane.setVisible(false);&#xD;
    jbEditlane.setVisible(true);&#xD;
    jbEditlane.setEnabled(false);&#xD;
    jbShowMW.setVisible(true);&#xD;
    jbShowMW.setEnabled(false);&#xD;
    //        jbViewLane.setVisible(true);&#xD;
    jbAddField.setVisible(true);&#xD;
    jbdeletefield.setVisible(true);&#xD;
    jbFindSimilarLanes.setVisible(true);&#xD;
    jbFindSimilarLanes.setEnabled(false);&#xD;
    jxsearchlane.setVisible(true);&#xD;
    jbAdvancedSearchLanes.setVisible(true);&#xD;
    jSeparator1.setVisible(true);&#xD;
    jSeparator2.setVisible(true);&#xD;
    jSeparator3.setVisible(true);&#xD;
    //        jSeparator4.setVisible(true);&#xD;
    jbexport.setVisible(true);&#xD;
    jbexport.setEnabled(true);&#xD;
    jbViewComp.setVisible(false);&#xD;
    jbViewComp.setEnabled(false);&#xD;
    jbExportNewick.setVisible(false);&#xD;
    jbExportNewick.setEnabled(false);&#xD;
    jbSimMatrix.setVisible(false);&#xD;
    jbSimMatrix.setEnabled(false);&#xD;
    jbeditexpcomp.setEnabled(true);&#xD;
    //        jbDeleteLane.setEnabled(false);&#xD;
    //        jbEditlane.setEnabled(true);&#xD;
    //        jbViewLane.setEnabled(true);&#xD;
    jbAddField.setEnabled(true);&#xD;
    jbdeletefield.setEnabled(true);&#xD;
    //        jbFindSimilarLanes.setEnabled(true);&#xD;
    jxsearchlane.setEnabled(true);&#xD;
    jbAdvancedSearchLanes.setEnabled(true);&#xD;
    DefaultMutableTreeNode node = (DefaultMutableTreeNode) jtExperiments.getLastSelectedPathComponent();&#xD;
    Experiment exp = (Experiment) node.getUserObject();&#xD;
    jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Experiment &quot; + exp.getName()));&#xD;
    jbDeleteExp.setToolTipText(&quot;Delete experiment &quot; + exp.getName());&#xD;
    jbexport.setToolTipText(&quot;Export experiment &quot; + exp.getName());&#xD;
    jToolBar3.setVisible(true);&#xD;
    jtLanes.setVisible(true);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G_KnABUTEemIe6OhVnSywA" name="activatecomparisontoolbar" specification="_G_J_8hUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    jbeditexpcomp.setVisible(false);&#xD;
    jbeditexpcomp.setEnabled(false);&#xD;
    jbDeleteExp.setVisible(false);&#xD;
    jbDeleteExp.setEnabled(false);&#xD;
    jbmodifycomp.setVisible(true);&#xD;
    jbmodifycomp.setEnabled(true);&#xD;
    jbdeletecomp.setVisible(true);&#xD;
    jbdeletecomp.setEnabled(true);&#xD;
    jbDeleteLane.setVisible(true);&#xD;
    jbDeleteLane.setEnabled(false);&#xD;
    jbEditlane.setVisible(false);&#xD;
    jbShowMW.setVisible(false);&#xD;
    //        jbViewLane.setVisible(true);&#xD;
    jbAddField.setVisible(false);&#xD;
    jbdeletefield.setVisible(false);&#xD;
    jbFindSimilarLanes.setVisible(true);&#xD;
    jbFindSimilarLanes.setEnabled(false);&#xD;
    jxsearchlane.setVisible(true);&#xD;
    jbViewComp.setVisible(true);&#xD;
    jbViewComp.setEnabled(true);&#xD;
    jbExportNewick.setVisible(true);&#xD;
    jbExportNewick.setEnabled(true);&#xD;
    jbSimMatrix.setVisible(true);&#xD;
    jbSimMatrix.setEnabled(true);&#xD;
    jbAdvancedSearchLanes.setVisible(true);&#xD;
    jSeparator1.setVisible(true);&#xD;
    jSeparator2.setVisible(true);&#xD;
    jSeparator3.setVisible(false);&#xD;
    //        jSeparator4.setVisible(true);&#xD;
    jbexport.setVisible(false);&#xD;
    jbexport.setEnabled(false);&#xD;
    jbeditexpcomp.setEnabled(true);&#xD;
    //        jbDeleteLane.setEnabled(true);&#xD;
    //        jbEditlane.setEnabled(false);&#xD;
    //        jbViewLane.setEnabled(true);&#xD;
    jbAddField.setEnabled(false);&#xD;
    jbdeletefield.setEnabled(false);&#xD;
    //        jbFindSimilarLanes.setEnabled(true);&#xD;
    jxsearchlane.setEnabled(true);&#xD;
    jbAdvancedSearchLanes.setEnabled(true);&#xD;
    DefaultMutableTreeNode node = (DefaultMutableTreeNode) jtComparisons.getLastSelectedPathComponent();&#xD;
    Comparison comp = (Comparison) node.getUserObject();&#xD;
    jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Comparison &quot; + comp.getName()));&#xD;
    jbDeleteExp.setToolTipText(&quot;Delete comparison &quot; + comp.getName());&#xD;
    jToolBar3.setVisible(true);&#xD;
    jtLanes.setVisible(true);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G_L1IBUTEemIe6OhVnSywA" name="updatelanes" specification="_G_LOEBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    if (all) {&#xD;
        lanes = getLanes(studyid);&#xD;
        templanes = lanes;&#xD;
    }&#xD;
    //        additionalfields = getAdditionalFields(studyid);&#xD;
    String[] names0 = { &quot;Genus&quot;, &quot;Species&quot;, &quot;Strain Number&quot;, &quot;Country&quot;, &quot;MLST&quot;, &quot;isMarker&quot;, &quot;Experiment&quot;, &quot;Comments&quot; };&#xD;
    String[] names = new String[names0.length + additionalfields.size()];&#xD;
    for (int i = 0; i &lt; names0.length; i++) {&#xD;
        names[i] = names0[i];&#xD;
    }&#xD;
    for (int i = 0; i &lt; additionalfields.size(); i++) {&#xD;
        names[i + names0.length] = additionalfields.get(i);&#xD;
    }&#xD;
    Object[][] data = new Object[lanes.size()][names.length];&#xD;
    // We update the table&#xD;
    for (int i = 0; i &lt; lanes.size(); i++) {&#xD;
        data[i][0] = lanes.get(i).getGenus();&#xD;
        data[i][1] = lanes.get(i).getSpecies();&#xD;
        data[i][2] = lanes.get(i).getStrainNumber();&#xD;
        data[i][3] = lanes.get(i).getCountry();&#xD;
        data[i][4] = lanes.get(i).getMSLT();&#xD;
        data[i][5] = lanes.get(i).isIsMarker();&#xD;
        data[i][6] = lanes.get(i).getExperiment().getName();&#xD;
        data[i][7] = lanes.get(i).getComments();&#xD;
        for (int j = 0; j &lt; additionalfields.size(); j++) {&#xD;
            data[i][8 + j] = lanes.get(i).getLaneaddedinfo().get(additionalfields.get(j));&#xD;
        }&#xD;
    }&#xD;
    // Operations to change the model, we disable the edition of the date&#xD;
    DefaultTableModel model = new DefaultTableModel(data, names) {&#xD;
&#xD;
        public boolean isCellEditable(int rowIndex, int mColIndex) {&#xD;
            if (mColIndex == 6 || mColIndex == 5) {&#xD;
                return false;&#xD;
            } else {&#xD;
                return true;&#xD;
            }&#xD;
        }&#xD;
&#xD;
        public Class getColumnClass(int columnIndex) {&#xD;
            if (columnIndex == 5) {&#xD;
                return java.lang.Boolean.class;&#xD;
            } else {&#xD;
                return java.lang.Object.class;&#xD;
            }&#xD;
        }&#xD;
    };&#xD;
    model.addTableModelListener(this);&#xD;
    jtLanes.setModel(model);&#xD;
    jtLanes.getSelectionModel().addListSelectionListener(new ListSelectionListener() {&#xD;
&#xD;
        @Override&#xD;
        public void valueChanged(ListSelectionEvent event) {&#xD;
            if (jtLanes.getSelectedRow() > -1) {&#xD;
                if (!twiceinarow) {&#xD;
                    if (jtComparisons.getSelectionPath() == null) {&#xD;
                        viewlane();&#xD;
                    }&#xD;
                }&#xD;
                twiceinarow = !twiceinarow;&#xD;
            }&#xD;
            if (jtLanes.getSelectedRow() > 0) {&#xD;
                jbEditlane.setEnabled(true);&#xD;
                jbDeleteLane.setEnabled(true);&#xD;
                jbShowMW.setEnabled(true);&#xD;
                jbFindSimilarLanes.setEnabled(true);&#xD;
            }&#xD;
        }&#xD;
    });&#xD;
    TableColumn countriescolumn = jtLanes.getColumnModel().getColumn(3);&#xD;
    countriescolumn.setCellEditor(new DefaultCellEditor(generatecountriescombobox()));&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G_NqUBUTEemIe6OhVnSywA" name="updatelanes" specification="_G_McMBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    additionalfields = getAdditionalFields(studyid);&#xD;
    String[] names0 = { &quot;Genus&quot;, &quot;Species&quot;, &quot;Strain Number&quot;, &quot;Country&quot;, &quot;MLST&quot;, &quot;isMarker&quot;, &quot;Experiment&quot;, &quot;Comments&quot; };&#xD;
    String[] names = new String[names0.length + additionalfields.size()];&#xD;
    for (int i = 0; i &lt; names0.length; i++) {&#xD;
        names[i] = names0[i];&#xD;
    }&#xD;
    for (int i = 0; i &lt; additionalfields.size(); i++) {&#xD;
        names[i + names0.length] = additionalfields.get(i);&#xD;
    }&#xD;
    Object[][] data = new Object[newlanes.size()][names.length];&#xD;
    // We update the table&#xD;
    for (int i = 0; i &lt; newlanes.size(); i++) {&#xD;
        data[i][0] = newlanes.get(i).getGenus();&#xD;
        data[i][1] = newlanes.get(i).getSpecies();&#xD;
        data[i][2] = newlanes.get(i).getStrainNumber();&#xD;
        data[i][3] = newlanes.get(i).getCountry();&#xD;
        data[i][4] = newlanes.get(i).getMSLT();&#xD;
        data[i][5] = newlanes.get(i).isIsMarker();&#xD;
        data[i][6] = newlanes.get(i).getExperiment().getName();&#xD;
        data[i][7] = newlanes.get(i).getComments();&#xD;
        for (int j = 0; j &lt; additionalfields.size(); j++) {&#xD;
            data[i][8 + j] = newlanes.get(i).getLaneaddedinfo().get(additionalfields.get(j));&#xD;
        }&#xD;
    }&#xD;
    // Operations to change the model, we disable the edition of the date&#xD;
    DefaultTableModel model = new DefaultTableModel(data, names) {&#xD;
&#xD;
        public boolean isCellEditable(int rowIndex, int mColIndex) {&#xD;
            if (mColIndex == 6 || mColIndex == 5) {&#xD;
                return false;&#xD;
            } else {&#xD;
                return true;&#xD;
            }&#xD;
        }&#xD;
&#xD;
        public Class getColumnClass(int columnIndex) {&#xD;
            if (columnIndex == 5) {&#xD;
                return java.lang.Boolean.class;&#xD;
            } else {&#xD;
                return java.lang.Object.class;&#xD;
            }&#xD;
        }&#xD;
    };&#xD;
    model.addTableModelListener(this);&#xD;
    jtLanes.setModel(model);&#xD;
    jtLanes.getSelectionModel().addListSelectionListener(new ListSelectionListener() {&#xD;
&#xD;
        @Override&#xD;
        public void valueChanged(ListSelectionEvent event) {&#xD;
            if (jtLanes.getSelectedRow() > -1) {&#xD;
                if (!twiceinarow) {&#xD;
                    if (jtComparisons.getSelectionPath() == null) {&#xD;
                        viewlane();&#xD;
                    }&#xD;
                }&#xD;
                twiceinarow = !twiceinarow;&#xD;
            }&#xD;
            if (jtLanes.getSelectedRow() > 0) {&#xD;
                jbEditlane.setEnabled(true);&#xD;
                jbDeleteLane.setEnabled(true);&#xD;
                jbShowMW.setEnabled(true);&#xD;
                jbFindSimilarLanes.setEnabled(true);&#xD;
            }&#xD;
        }&#xD;
    });&#xD;
    TableColumn countriescolumn = jtLanes.getColumnModel().getColumn(3);&#xD;
    countriescolumn.setCellEditor(new DefaultCellEditor(generatecountriescombobox()));&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G_ORYBUTEemIe6OhVnSywA" name="generatecountriescombobox" specification="_G_NqURUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    JComboBox comboBox = new JComboBox();&#xD;
    String[] locales = Locale.getISOCountries();&#xD;
    ArrayList&lt;String> countries = new ArrayList&lt;>();&#xD;
    for (String countryCode : locales) {&#xD;
        Locale obj = new Locale(&quot;&quot;, countryCode);&#xD;
        countries.add(obj.getDisplayCountry());&#xD;
    }&#xD;
    Collections.sort(countries);&#xD;
    for (String country : countries) {&#xD;
        comboBox.addItem(country);&#xD;
    }&#xD;
    return comboBox;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G_PfgBUTEemIe6OhVnSywA" name="tableChanged" specification="_G_ORYRUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    /// Modification in Lanes table &#xD;
    if (jtLanes.getModel().toString().equals(e.getSource().toString())) {&#xD;
        int row = e.getFirstRow();&#xD;
        int column = e.getColumn();&#xD;
        if (column &lt;= 7) {&#xD;
            Object cellValue = jtLanes.getValueAt(row, column);&#xD;
            updateLane(lanes.get(row).getId(), cellValue, column);&#xD;
        } else {&#xD;
            String cellValue = String.valueOf(jtLanes.getValueAt(row, column));&#xD;
            lanes.get(row).addnewinfo(additionalfields.get(column - 8), cellValue);&#xD;
            if (containadditionalfield(lanes.get(row).getId(), additionalfields.get(column - 8))) {&#xD;
                updateLane(lanes.get(row));&#xD;
            } else {&#xD;
                insertLaneAddedInfo(lanes.get(row).getId(), additionalfields.get(column - 8), cellValue);&#xD;
            }&#xD;
        }&#xD;
        updateselectedlanes();&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G_hzYBUTEemIe6OhVnSywA" name="initComponents" specification="_G_PfgRUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    jsMainPane = new javax.swing.JSplitPane();&#xD;
    jspLeftPane = new javax.swing.JSplitPane();&#xD;
    jPanel1 = new javax.swing.JPanel();&#xD;
    jScrollPane2 = new javax.swing.JScrollPane();&#xD;
    jtExperiments = new javax.swing.JTree();&#xD;
    jToolBar1 = new javax.swing.JToolBar();&#xD;
    jbNewExp = new javax.swing.JButton();&#xD;
    jbDuplicateExp = new javax.swing.JButton();&#xD;
    jbimportexpfile = new javax.swing.JButton();&#xD;
    jbImport = new javax.swing.JButton();&#xD;
    jbSearchExp = new javax.swing.JButton();&#xD;
    jPanel2 = new javax.swing.JPanel();&#xD;
    jToolBar2 = new javax.swing.JToolBar();&#xD;
    jbNewComp = new javax.swing.JButton();&#xD;
    jbDuplicateComp = new javax.swing.JButton();&#xD;
    jbSearchComp = new javax.swing.JButton();&#xD;
    jScrollPane3 = new javax.swing.JScrollPane();&#xD;
    jtComparisons = new javax.swing.JTree();&#xD;
    jspRightPane = new javax.swing.JSplitPane();&#xD;
    jPanel3 = new javax.swing.JPanel();&#xD;
    jScrollPane1 = new javax.swing.JScrollPane();&#xD;
    jtLanes = new javax.swing.JTable();&#xD;
    jToolBar3 = new javax.swing.JToolBar();&#xD;
    jbeditexpcomp = new javax.swing.JButton();&#xD;
    jbDeleteExp = new javax.swing.JButton();&#xD;
    jbexport = new javax.swing.JButton();&#xD;
    jbmodifycomp = new javax.swing.JButton();&#xD;
    jbdeletecomp = new javax.swing.JButton();&#xD;
    jbViewComp = new javax.swing.JButton();&#xD;
    jbExportNewick = new javax.swing.JButton();&#xD;
    jbSimMatrix = new javax.swing.JButton();&#xD;
    jSeparator1 = new javax.swing.JToolBar.Separator();&#xD;
    jbEditlane = new javax.swing.JButton();&#xD;
    jbDeleteLane = new javax.swing.JButton();&#xD;
    jbFindSimilarLanes = new javax.swing.JButton();&#xD;
    jbShowMW = new javax.swing.JButton();&#xD;
    jSeparator2 = new javax.swing.JToolBar.Separator();&#xD;
    jbAddField = new javax.swing.JButton();&#xD;
    jbdeletefield = new javax.swing.JButton();&#xD;
    jSeparator3 = new javax.swing.JToolBar.Separator();&#xD;
    jxsearchlane = new org.jdesktop.swingx.JXSearchField();&#xD;
    jbAdvancedSearchLanes = new javax.swing.JButton();&#xD;
    jSeparator6 = new javax.swing.JToolBar.Separator();&#xD;
    jScrollPane4 = new javax.swing.JScrollPane();&#xD;
    jPanel5 = new javax.swing.JPanel();&#xD;
    jToolBar5 = new javax.swing.JToolBar();&#xD;
    jButton1 = new javax.swing.JButton();&#xD;
    jButton2 = new javax.swing.JButton();&#xD;
    jSave = new javax.swing.JButton();&#xD;
    jXImageView2 = new org.jdesktop.swingx.JXImageView();&#xD;
    jMenuBar1 = new javax.swing.JMenuBar();&#xD;
    jMenu1 = new javax.swing.JMenu();&#xD;
    jmiNewStudy = new javax.swing.JMenuItem();&#xD;
    jmOpenStudy = new javax.swing.JMenuItem();&#xD;
    jmiEditStudy = new javax.swing.JMenuItem();&#xD;
    jmiDeleteStudy = new javax.swing.JMenuItem();&#xD;
    jmiCloseStudy = new javax.swing.JMenuItem();&#xD;
    jSeparator5 = new javax.swing.JPopupMenu.Separator();&#xD;
    jmiExit = new javax.swing.JMenuItem();&#xD;
    jMenu2 = new javax.swing.JMenu();&#xD;
    jmannotate = new javax.swing.JMenu();&#xD;
    jmiUnfinished = new javax.swing.JMenuItem();&#xD;
    jAnnotateItem = new javax.swing.JMenuItem();&#xD;
    jMenuGenetic = new javax.swing.JMenu();&#xD;
    jmiAddPopulationField = new javax.swing.JMenuItem();&#xD;
    jSeparator4 = new javax.swing.JPopupMenu.Separator();&#xD;
    jmiExportGenetics = new javax.swing.JMenuItem();&#xD;
    jSeparator7 = new javax.swing.JPopupMenu.Separator();&#xD;
    jMItransform = new javax.swing.JMenuItem();&#xD;
    jMenu3 = new javax.swing.JMenu();&#xD;
    jmMarkers = new javax.swing.JMenu();&#xD;
    jmiaddmarker = new javax.swing.JMenuItem();&#xD;
    jMenuItem5 = new javax.swing.JMenuItem();&#xD;
    jMenu4 = new javax.swing.JMenu();&#xD;
    jMenuItem1 = new javax.swing.JMenuItem();&#xD;
    jMenuItem2 = new javax.swing.JMenuItem();&#xD;
    jMenuMemory = new javax.swing.JMenuItem();&#xD;
    jMenu5 = new javax.swing.JMenu();&#xD;
    jMenuItem7 = new javax.swing.JMenuItem();&#xD;
    jMenuItem8 = new javax.swing.JMenuItem();&#xD;
    jMenuItem6 = new javax.swing.JMenuItem();&#xD;
    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);&#xD;
    setTitle(&quot;GelJ&quot;);&#xD;
    jsMainPane.setDividerLocation(150);&#xD;
    jspLeftPane.setDividerLocation(200);&#xD;
    jspLeftPane.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);&#xD;
    jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Experiments&quot;));&#xD;
    javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode(&quot;root&quot;);&#xD;
    jtExperiments.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));&#xD;
    jtExperiments.setRootVisible(false);&#xD;
    jScrollPane2.setViewportView(jtExperiments);&#xD;
    jToolBar1.setRollover(true);&#xD;
    // NOI18N&#xD;
    jbNewExp.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/GelJImages/experiment-add1b.png&quot;)));&#xD;
    jbNewExp.setToolTipText(&quot;New Experiment&quot;);&#xD;
    jbNewExp.setEnabled(false);&#xD;
    jbNewExp.setFocusable(false);&#xD;
    jbNewExp.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);&#xD;
    jbNewExp.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);&#xD;
    jbNewExp.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbNewExpActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar1.add(jbNewExp);&#xD;
    // NOI18N&#xD;
    jbDuplicateExp.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/GelJImages/experiment-duplicate.png&quot;)));&#xD;
    jbDuplicateExp.setToolTipText(&quot;Duplicate Experiment&quot;);&#xD;
    jbDuplicateExp.setEnabled(false);&#xD;
    jbDuplicateExp.setFocusable(false);&#xD;
    jbDuplicateExp.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);&#xD;
    jbDuplicateExp.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);&#xD;
    jbDuplicateExp.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbDuplicateExpActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar1.add(jbDuplicateExp);&#xD;
    // NOI18N&#xD;
    jbimportexpfile.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/GelJImages/experiment-importb.png&quot;)));&#xD;
    jbimportexpfile.setToolTipText(&quot;Import Experiment from File&quot;);&#xD;
    jbimportexpfile.setEnabled(false);&#xD;
    jbimportexpfile.setFocusable(false);&#xD;
    jbimportexpfile.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);&#xD;
    jbimportexpfile.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);&#xD;
    jbimportexpfile.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbimportexpfileActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar1.add(jbimportexpfile);&#xD;
    // NOI18N&#xD;
    jbImport.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/GelJImages/experiment-import2b.png&quot;)));&#xD;
    jbImport.setToolTipText(&quot;Import Experiment from Study&quot;);&#xD;
    jbImport.setEnabled(false);&#xD;
    jbImport.setFocusable(false);&#xD;
    jbImport.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);&#xD;
    jbImport.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);&#xD;
    jbImport.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbImportActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar1.add(jbImport);&#xD;
    // NOI18N&#xD;
    jbSearchExp.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/images/find.png&quot;)));&#xD;
    jbSearchExp.setToolTipText(&quot;Search Experiments&quot;);&#xD;
    jbSearchExp.setEnabled(false);&#xD;
    jbSearchExp.setFocusable(false);&#xD;
    jbSearchExp.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);&#xD;
    jbSearchExp.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);&#xD;
    jbSearchExp.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbSearchExpActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar1.add(jbSearchExp);&#xD;
    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);&#xD;
    jPanel1.setLayout(jPanel1Layout);&#xD;
    jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane2).addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));&#xD;
    jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup().addGap(0, 0, 0).addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE)));&#xD;
    jspLeftPane.setTopComponent(jPanel1);&#xD;
    jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Comparisons&quot;));&#xD;
    jToolBar2.setRollover(true);&#xD;
    // NOI18N&#xD;
    jbNewComp.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/GelJImages/comparison-addb.png&quot;)));&#xD;
    jbNewComp.setToolTipText(&quot;New Comparison&quot;);&#xD;
    jbNewComp.setEnabled(false);&#xD;
    jbNewComp.setFocusable(false);&#xD;
    jbNewComp.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);&#xD;
    jbNewComp.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);&#xD;
    jbNewComp.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbNewCompActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar2.add(jbNewComp);&#xD;
    // NOI18N&#xD;
    jbDuplicateComp.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/GelJImages/comparison-duplicate.png&quot;)));&#xD;
    jbDuplicateComp.setToolTipText(&quot;Duplicate Comparison&quot;);&#xD;
    jbDuplicateComp.setEnabled(false);&#xD;
    jbDuplicateComp.setFocusable(false);&#xD;
    jbDuplicateComp.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);&#xD;
    jbDuplicateComp.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);&#xD;
    jbDuplicateComp.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbDuplicateCompActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar2.add(jbDuplicateComp);&#xD;
    // NOI18N&#xD;
    jbSearchComp.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/images/find.png&quot;)));&#xD;
    jbSearchComp.setToolTipText(&quot;Search Comparisons&quot;);&#xD;
    jbSearchComp.setEnabled(false);&#xD;
    jbSearchComp.setFocusable(false);&#xD;
    jbSearchComp.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);&#xD;
    jbSearchComp.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);&#xD;
    jbSearchComp.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbSearchCompActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar2.add(jbSearchComp);&#xD;
    treeNode1 = new javax.swing.tree.DefaultMutableTreeNode(&quot;root&quot;);&#xD;
    jtComparisons.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));&#xD;
    jtComparisons.setMaximumSize(new java.awt.Dimension(20, 38));&#xD;
    jtComparisons.setRootVisible(false);&#xD;
    jScrollPane3.setViewportView(jtComparisons);&#xD;
    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);&#xD;
    jPanel2.setLayout(jPanel2Layout);&#xD;
    jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jToolBar2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jScrollPane3));&#xD;
    jPanel2Layout.setVerticalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel2Layout.createSequentialGroup().addComponent(jToolBar2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 483, Short.MAX_VALUE)));&#xD;
    jspLeftPane.setRightComponent(jPanel2);&#xD;
    jsMainPane.setLeftComponent(jspLeftPane);&#xD;
    jspRightPane.setDividerLocation(500);&#xD;
    jspRightPane.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);&#xD;
    jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Lanes&quot;));&#xD;
    jtLanes.setModel(new javax.swing.table.DefaultTableModel(new Object[][] { { null, null, null, null, null, null, null, null }, { null, null, null, null, null, null, null, null }, { null, null, null, null, null, null, null, null }, { null, null, null, null, null, null, null, null } }, new String[] { &quot;Genus&quot;, &quot;Species&quot;, &quot;Strain Number&quot;, &quot;Country&quot;, &quot;MLST&quot;, &quot;isMarker&quot;, &quot;Experiment&quot;, &quot;Comments&quot; }));&#xD;
    jScrollPane1.setViewportView(jtLanes);&#xD;
    jToolBar3.setRollover(true);&#xD;
    // NOI18N&#xD;
    jbeditexpcomp.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/GelJImages/experiment-edit.png&quot;)));&#xD;
    jbeditexpcomp.setToolTipText(&quot;Modify Experiment Properties&quot;);&#xD;
    jbeditexpcomp.setEnabled(false);&#xD;
    jbeditexpcomp.setFocusable(false);&#xD;
    jbeditexpcomp.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);&#xD;
    jbeditexpcomp.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);&#xD;
    jbeditexpcomp.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbeditexpcompActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar3.add(jbeditexpcomp);&#xD;
    // NOI18N&#xD;
    jbDeleteExp.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/GelJImages/experiment-delete.png&quot;)));&#xD;
    jbDeleteExp.setToolTipText(&quot;Delete Experiment&quot;);&#xD;
    jbDeleteExp.setEnabled(false);&#xD;
    jbDeleteExp.setFocusable(false);&#xD;
    jbDeleteExp.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);&#xD;
    jbDeleteExp.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);&#xD;
    jbDeleteExp.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbDeleteExpActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar3.add(jbDeleteExp);&#xD;
    // NOI18N&#xD;
    jbexport.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/GelJImages/experiment-export.png&quot;)));&#xD;
    jbexport.setToolTipText(&quot;Export experiment&quot;);&#xD;
    jbexport.setEnabled(false);&#xD;
    jbexport.setFocusable(false);&#xD;
    jbexport.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);&#xD;
    jbexport.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);&#xD;
    jbexport.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbexportActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar3.add(jbexport);&#xD;
    // NOI18N&#xD;
    jbmodifycomp.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/GelJImages/comparison-edit.png&quot;)));&#xD;
    jbmodifycomp.setToolTipText(&quot;Edit comparison&quot;);&#xD;
    jbmodifycomp.setEnabled(false);&#xD;
    jbmodifycomp.setFocusable(false);&#xD;
    jbmodifycomp.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);&#xD;
    jbmodifycomp.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);&#xD;
    jbmodifycomp.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbmodifycompActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar3.add(jbmodifycomp);&#xD;
    // NOI18N&#xD;
    jbdeletecomp.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/GelJImages/comparison-delete.png&quot;)));&#xD;
    jbdeletecomp.setToolTipText(&quot;Delete comparison&quot;);&#xD;
    jbdeletecomp.setEnabled(false);&#xD;
    jbdeletecomp.setFocusable(false);&#xD;
    jbdeletecomp.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);&#xD;
    jbdeletecomp.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);&#xD;
    jbdeletecomp.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbdeletecompActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar3.add(jbdeletecomp);&#xD;
    // NOI18N&#xD;
    jbViewComp.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/GelJImages/comparison-view.png&quot;)));&#xD;
    jbViewComp.setToolTipText(&quot;View Comparison&quot;);&#xD;
    jbViewComp.setEnabled(false);&#xD;
    jbViewComp.setFocusable(false);&#xD;
    jbViewComp.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);&#xD;
    jbViewComp.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);&#xD;
    jbViewComp.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbViewCompActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar3.add(jbViewComp);&#xD;
    // NOI18N&#xD;
    jbExportNewick.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/GelJImages/newick.png&quot;)));&#xD;
    jbExportNewick.setToolTipText(&quot;Export Dendrogram to Newick format&quot;);&#xD;
    jbExportNewick.setEnabled(false);&#xD;
    jbExportNewick.setFocusable(false);&#xD;
    jbExportNewick.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);&#xD;
    jbExportNewick.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);&#xD;
    jbExportNewick.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbExportNewickActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar3.add(jbExportNewick);&#xD;
    // NOI18N&#xD;
    jbSimMatrix.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/GelJImages/simmatrix.png&quot;)));&#xD;
    jbSimMatrix.setToolTipText(&quot;Export Similarity Matrix&quot;);&#xD;
    jbSimMatrix.setEnabled(false);&#xD;
    jbSimMatrix.setFocusable(false);&#xD;
    jbSimMatrix.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);&#xD;
    jbSimMatrix.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);&#xD;
    jbSimMatrix.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbSimMatrixActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar3.add(jbSimMatrix);&#xD;
    jToolBar3.add(jSeparator1);&#xD;
    // NOI18N&#xD;
    jbEditlane.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/GelJImages/lane_edit.png&quot;)));&#xD;
    jbEditlane.setToolTipText(&quot;Edit bands of a lane&quot;);&#xD;
    jbEditlane.setEnabled(false);&#xD;
    jbEditlane.setFocusable(false);&#xD;
    jbEditlane.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);&#xD;
    jbEditlane.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);&#xD;
    jbEditlane.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbEditlaneActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar3.add(jbEditlane);&#xD;
    // NOI18N&#xD;
    jbDeleteLane.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/GelJImages/lane_delete.png&quot;)));&#xD;
    jbDeleteLane.setToolTipText(&quot;Remove Lane from Comparison&quot;);&#xD;
    jbDeleteLane.setEnabled(false);&#xD;
    jbDeleteLane.setFocusable(false);&#xD;
    jbDeleteLane.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);&#xD;
    jbDeleteLane.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);&#xD;
    jbDeleteLane.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbDeleteLaneActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar3.add(jbDeleteLane);&#xD;
    // NOI18N&#xD;
    jbFindSimilarLanes.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/GelJImages/lane-similarity.png&quot;)));&#xD;
    jbFindSimilarLanes.setToolTipText(&quot;Find Similar Lanes&quot;);&#xD;
    jbFindSimilarLanes.setEnabled(false);&#xD;
    jbFindSimilarLanes.setFocusable(false);&#xD;
    jbFindSimilarLanes.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);&#xD;
    jbFindSimilarLanes.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);&#xD;
    jbFindSimilarLanes.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbFindSimilarLanesActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar3.add(jbFindSimilarLanes);&#xD;
    // NOI18N&#xD;
    jbShowMW.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/GelJImages/standards.png&quot;)));&#xD;
    jbShowMW.setToolTipText(&quot;Show Molecular Weights&quot;);&#xD;
    jbShowMW.setEnabled(false);&#xD;
    jbShowMW.setFocusable(false);&#xD;
    jbShowMW.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);&#xD;
    jbShowMW.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);&#xD;
    jbShowMW.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbShowMWActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar3.add(jbShowMW);&#xD;
    jToolBar3.add(jSeparator2);&#xD;
    // NOI18N&#xD;
    jbAddField.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/images/addfieldb.png&quot;)));&#xD;
    jbAddField.setToolTipText(&quot;Add Field&quot;);&#xD;
    jbAddField.setEnabled(false);&#xD;
    jbAddField.setFocusable(false);&#xD;
    jbAddField.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);&#xD;
    jbAddField.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);&#xD;
    jbAddField.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbAddFieldActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar3.add(jbAddField);&#xD;
    // NOI18N&#xD;
    jbdeletefield.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/images/deletefield.png&quot;)));&#xD;
    jbdeletefield.setToolTipText(&quot;Delete Field&quot;);&#xD;
    jbdeletefield.setEnabled(false);&#xD;
    jbdeletefield.setFocusable(false);&#xD;
    jbdeletefield.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);&#xD;
    jbdeletefield.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);&#xD;
    jbdeletefield.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbdeletefieldActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar3.add(jbdeletefield);&#xD;
    jToolBar3.add(jSeparator3);&#xD;
    jxsearchlane.setHorizontalAlignment(javax.swing.JTextField.RIGHT);&#xD;
    jxsearchlane.setEnabled(false);&#xD;
    jxsearchlane.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jxsearchlaneActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jxsearchlane.addKeyListener(new java.awt.event.KeyAdapter() {&#xD;
&#xD;
        public void keyReleased(java.awt.event.KeyEvent evt) {&#xD;
            jxsearchlaneKeyReleased(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar3.add(jxsearchlane);&#xD;
    // NOI18N&#xD;
    jbAdvancedSearchLanes.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/images/find.png&quot;)));&#xD;
    jbAdvancedSearchLanes.setToolTipText(&quot;Advanced Search of Lanes&quot;);&#xD;
    jbAdvancedSearchLanes.setEnabled(false);&#xD;
    jbAdvancedSearchLanes.setFocusable(false);&#xD;
    jbAdvancedSearchLanes.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);&#xD;
    jbAdvancedSearchLanes.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);&#xD;
    jbAdvancedSearchLanes.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbAdvancedSearchLanesActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar3.add(jbAdvancedSearchLanes);&#xD;
    jToolBar3.add(jSeparator6);&#xD;
    javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);&#xD;
    jPanel3.setLayout(jPanel3Layout);&#xD;
    jPanel3Layout.setHorizontalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 867, Short.MAX_VALUE).addComponent(jToolBar3, javax.swing.GroupLayout.DEFAULT_SIZE, 775, Short.MAX_VALUE));&#xD;
    jPanel3Layout.setVerticalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel3Layout.createSequentialGroup().addComponent(jToolBar3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 414, Short.MAX_VALUE).addContainerGap()));&#xD;
    jspRightPane.setTopComponent(jPanel3);&#xD;
    jToolBar5.setRollover(true);&#xD;
    // NOI18N&#xD;
    jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/images/zoom_in.png&quot;)));&#xD;
    jButton1.setToolTipText(&quot;Zoom in&quot;);&#xD;
    jButton1.setFocusable(false);&#xD;
    jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);&#xD;
    jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);&#xD;
    jButton1.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton1ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar5.add(jButton1);&#xD;
    // NOI18N&#xD;
    jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/images/zoom_out.png&quot;)));&#xD;
    jButton2.setToolTipText(&quot;Zoom out&quot;);&#xD;
    jButton2.setFocusable(false);&#xD;
    jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);&#xD;
    jButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);&#xD;
    jButton2.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton2ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar5.add(jButton2);&#xD;
    // NOI18N&#xD;
    jSave.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/GelJImages/save.png&quot;)));&#xD;
    jSave.setEnabled(false);&#xD;
    jSave.setFocusable(false);&#xD;
    jSave.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);&#xD;
    jSave.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);&#xD;
    jSave.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jSaveActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar5.add(jSave);&#xD;
    javax.swing.GroupLayout jXImageView2Layout = new javax.swing.GroupLayout(jXImageView2);&#xD;
    jXImageView2.setLayout(jXImageView2Layout);&#xD;
    jXImageView2Layout.setHorizontalGroup(jXImageView2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 0, Short.MAX_VALUE));&#xD;
    jXImageView2Layout.setVerticalGroup(jXImageView2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 228, Short.MAX_VALUE));&#xD;
    javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);&#xD;
    jPanel5.setLayout(jPanel5Layout);&#xD;
    jPanel5Layout.setHorizontalGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jToolBar5, javax.swing.GroupLayout.DEFAULT_SIZE, 783, Short.MAX_VALUE).addGroup(jPanel5Layout.createSequentialGroup().addComponent(jXImageView2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addContainerGap()));&#xD;
    jPanel5Layout.setVerticalGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel5Layout.createSequentialGroup().addComponent(jToolBar5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jXImageView2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jScrollPane4.setViewportView(jPanel5);&#xD;
    jspRightPane.setRightComponent(jScrollPane4);&#xD;
    jsMainPane.setRightComponent(jspRightPane);&#xD;
    jMenu1.setText(&quot;File&quot;);&#xD;
    jmiNewStudy.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));&#xD;
    jmiNewStudy.setText(&quot;New Study&quot;);&#xD;
    jmiNewStudy.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jmiNewStudyActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jMenu1.add(jmiNewStudy);&#xD;
    jmOpenStudy.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));&#xD;
    jmOpenStudy.setText(&quot;Open Study&quot;);&#xD;
    jmOpenStudy.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jmOpenStudyActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jMenu1.add(jmOpenStudy);&#xD;
    jmiEditStudy.setText(&quot;Edit Study&quot;);&#xD;
    jmiEditStudy.setEnabled(false);&#xD;
    jmiEditStudy.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jmiEditStudyActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jMenu1.add(jmiEditStudy);&#xD;
    jmiDeleteStudy.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_DELETE, java.awt.event.InputEvent.CTRL_MASK));&#xD;
    jmiDeleteStudy.setText(&quot;Delete Study&quot;);&#xD;
    jmiDeleteStudy.setEnabled(false);&#xD;
    jmiDeleteStudy.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jmiDeleteStudyActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jMenu1.add(jmiDeleteStudy);&#xD;
    jmiCloseStudy.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));&#xD;
    jmiCloseStudy.setText(&quot;Close Study&quot;);&#xD;
    jmiCloseStudy.setEnabled(false);&#xD;
    jmiCloseStudy.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jmiCloseStudyActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jMenu1.add(jmiCloseStudy);&#xD;
    jMenu1.add(jSeparator5);&#xD;
    jmiExit.setText(&quot;Exit&quot;);&#xD;
    jmiExit.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jmiExitActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jMenu1.add(jmiExit);&#xD;
    jMenuBar1.add(jMenu1);&#xD;
    jMenu2.setText(&quot;Tools&quot;);&#xD;
    jmannotate.setText(&quot;Experiments&quot;);&#xD;
    jmiUnfinished.setText(&quot;Unfinished Experiments&quot;);&#xD;
    jmiUnfinished.setEnabled(false);&#xD;
    jmiUnfinished.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jmiUnfinishedActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jmannotate.add(jmiUnfinished);&#xD;
    jAnnotateItem.setText(&quot;Annotate Experiment&quot;);&#xD;
    jAnnotateItem.setEnabled(false);&#xD;
    jAnnotateItem.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jAnnotateItemActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jmannotate.add(jAnnotateItem);&#xD;
    jMenu2.add(jmannotate);&#xD;
    jMenuGenetic.setText(&quot;Population Genetics&quot;);&#xD;
    jmiAddPopulationField.setText(&quot;Add population field&quot;);&#xD;
    jmiAddPopulationField.setEnabled(false);&#xD;
    jmiAddPopulationField.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jmiAddPopulationFieldActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jMenuGenetic.add(jmiAddPopulationField);&#xD;
    jMenuGenetic.add(jSeparator4);&#xD;
    jmiExportGenetics.setText(&quot;Export Data (occurrence matrix)&quot;);&#xD;
    jmiExportGenetics.setEnabled(false);&#xD;
    jmiExportGenetics.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jmiExportGeneticsActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jMenuGenetic.add(jmiExportGenetics);&#xD;
    jMenuGenetic.add(jSeparator7);&#xD;
    jMItransform.setText(&quot;Transform GelJXML file&quot;);&#xD;
    jMItransform.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jMItransformActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jMenuGenetic.add(jMItransform);&#xD;
    jMenu3.setText(&quot;Transform file from...&quot;);&#xD;
    jMenuGenetic.add(jMenu3);&#xD;
    jMenu2.add(jMenuGenetic);&#xD;
    jmMarkers.setText(&quot;Markers&quot;);&#xD;
    jmiaddmarker.setText(&quot;Add Marker&quot;);&#xD;
    jmiaddmarker.setEnabled(false);&#xD;
    jmiaddmarker.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jmiaddmarkerActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jmMarkers.add(jmiaddmarker);&#xD;
    jMenuItem5.setText(&quot;View Markers&quot;);&#xD;
    jMenuItem5.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jMenuItem5ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jmMarkers.add(jMenuItem5);&#xD;
    jMenu2.add(jmMarkers);&#xD;
    jMenu4.setText(&quot;Backups&quot;);&#xD;
    jMenuItem1.setText(&quot;Create backup&quot;);&#xD;
    jMenuItem1.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jMenuItem1ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jMenu4.add(jMenuItem1);&#xD;
    jMenuItem2.setText(&quot;Restore backup&quot;);&#xD;
    jMenuItem2.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jMenuItem2ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jMenu4.add(jMenuItem2);&#xD;
    jMenu2.add(jMenu4);&#xD;
    jMenuMemory.setText(&quot;Increase Memory&quot;);&#xD;
    jMenuMemory.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jMenuMemoryActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jMenu2.add(jMenuMemory);&#xD;
    jMenuBar1.add(jMenu2);&#xD;
    jMenu5.setText(&quot;Help&quot;);&#xD;
    jMenuItem7.setText(&quot;GelJ webpage&quot;);&#xD;
    jMenuItem7.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jMenuItem7ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jMenu5.add(jMenuItem7);&#xD;
    jMenuItem8.setText(&quot;GelJ manual&quot;);&#xD;
    jMenuItem8.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jMenuItem8ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jMenu5.add(jMenuItem8);&#xD;
    jMenuItem6.setText(&quot;About&quot;);&#xD;
    jMenuItem6.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jMenuItem6ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jMenu5.add(jMenuItem6);&#xD;
    jMenuBar1.add(jMenu5);&#xD;
    setJMenuBar(jMenuBar1);&#xD;
    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());&#xD;
    getContentPane().setLayout(layout);&#xD;
    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jsMainPane));&#xD;
    layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jsMainPane));&#xD;
    pack();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G_mE0BUTEemIe6OhVnSywA" name="jbDeleteExpActionPerformed" specification="_G_jokBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbDeleteExpActionPerformed&#xD;
    deleteexp();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G_qWQBUTEemIe6OhVnSywA" name="jbDuplicateCompActionPerformed" specification="_G_n6ABUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbDuplicateCompActionPerformed&#xD;
    duplicatecomparison();&#xD;
    activateemptytoolbar();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G_sygBUTEemIe6OhVnSywA" name="deletecomp" specification="_G_rkYBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    TreePath currentSelection = jtComparisons.getSelectionPath();&#xD;
    if (currentSelection != null) {&#xD;
        int reply = JOptionPane.showConfirmDialog(this, &quot;Do you want to remove this comparison? &quot;, &quot;Delete comparison&quot;, JOptionPane.YES_NO_OPTION);&#xD;
        if (reply == JOptionPane.YES_OPTION) {&#xD;
            DefaultMutableTreeNode currentNode = (DefaultMutableTreeNode) (currentSelection.getLastPathComponent());&#xD;
            MutableTreeNode parent = (MutableTreeNode) (currentNode.getParent());&#xD;
            if (parent != null) {&#xD;
                Comparison comp = (Comparison) currentNode.getUserObject();&#xD;
                deletecomparison(comp.getId());&#xD;
                lanes = new ArrayList&lt;>();&#xD;
                lanes = getLanesComparison(comp.getId());&#xD;
                updatelanes(false);&#xD;
                //                    treeModelComp.removeNodeFromParent(currentNode);&#xD;
                updatecomparisons(true, true);&#xD;
                cleanlanes();&#xD;
                disablelaneoptions();&#xD;
                double scale = jXImageView2.getScale();&#xD;
                jXImageView2.setImage(new BufferedImage(300, 200, TYPE_INT_ARGB));&#xD;
                jXImageView2.setScale(scale);&#xD;
                jToolBar3.setVisible(false);&#xD;
                jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(&quot;&quot;));&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G_vOwBUTEemIe6OhVnSywA" name="deleteexp" specification="_G_uAoBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    TreePath currentSelection = jtExperiments.getSelectionPath();&#xD;
    if (currentSelection != null) {&#xD;
        DefaultMutableTreeNode currentNode = (DefaultMutableTreeNode) (currentSelection.getLastPathComponent());&#xD;
        MutableTreeNode parent = (MutableTreeNode) (currentNode.getParent());&#xD;
        if (parent != null) {&#xD;
            Experiment exp = (Experiment) currentNode.getUserObject();&#xD;
            boolean ce = existscomparisonsexperiment(exp.getId());&#xD;
            if (ce) {&#xD;
                int reply = JOptionPane.showConfirmDialog(this, &quot;Some comparisons include lanes of this experiment.\n&quot; + &quot; If you remove the experiment, such comparisons will also be removed. \n&quot; + &quot;Do you want to remove this experiment?&quot;, &quot;Delete experiment&quot;, JOptionPane.YES_NO_OPTION);&#xD;
                if (reply == JOptionPane.YES_OPTION) {&#xD;
                    deletecomparisonsexperiment(exp.getId());&#xD;
                    deleteexperiment(exp.getId());&#xD;
                    updateexperiments(true, true);&#xD;
                    updatecomparisons(true, true);&#xD;
                    File folder = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/GelJDBImages/&quot; + studyid + &quot;/&quot; + getUser(userid).getUsername() + &quot;/experiments/&quot; + exp.getId());&#xD;
                    Utilities.deleteDir(folder);&#xD;
                    cleanlanes();&#xD;
                    double scale = jXImageView2.getScale();&#xD;
                    jXImageView2.setImage(new BufferedImage(300, 200, TYPE_INT_ARGB));&#xD;
                    jXImageView2.setScale(scale);&#xD;
                    jToolBar3.setVisible(false);&#xD;
                    jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(&quot;&quot;));&#xD;
                }&#xD;
            } else {&#xD;
                int reply = JOptionPane.showConfirmDialog(this, &quot;Do you want to remove this experiment? &quot; + &quot;This will remove all the lanes of the experiment&quot;, &quot;Delete experiment&quot;, JOptionPane.YES_NO_OPTION);&#xD;
                if (reply == JOptionPane.YES_OPTION) {&#xD;
                    deleteexperiment(exp.getId());&#xD;
                    lanes = new ArrayList&lt;>();&#xD;
                    lanes = getLanesComparison(exp.getId());&#xD;
                    updatelanes(false);&#xD;
                    updateexperiments(true, true);&#xD;
                    File folder = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/GelJDBImages/&quot; + studyid + &quot;/&quot; + getUser(userid).getUsername() + &quot;/experiments/&quot; + exp.getId());&#xD;
                    Utilities.deleteDir(folder);&#xD;
                    cleanlanes();&#xD;
                    double scale = jXImageView2.getScale();&#xD;
                    jXImageView2.setImage(new BufferedImage(300, 200, TYPE_INT_ARGB));&#xD;
                    jXImageView2.setScale(scale);&#xD;
                    jToolBar3.setVisible(false);&#xD;
                    jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(&quot;&quot;));&#xD;
                //                        treeModel.removeNodeFromParent(currentNode);&#xD;
                }&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G_y5IBUTEemIe6OhVnSywA" name="jxsearchlaneKeyReleased" specification="_G_xD8BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jxsearchlaneKeyReleased&#xD;
    searchlanes();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G_2jgBUTEemIe6OhVnSywA" name="jbAddFieldActionPerformed" specification="_G_0uUBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbAddFieldActionPerformed&#xD;
    String fieldName = JOptionPane.showInputDialog(&quot;Introduce the name of the new field&quot;);&#xD;
    if (additionalfields.contains(fieldName)) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;There is already a field with that name&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
    } else {&#xD;
        additionalfields.add(fieldName);&#xD;
        updatelanes(false);&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G_608BUTEemIe6OhVnSywA" name="jbdeletefieldActionPerformed" specification="_G_4YsBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbdeletefieldActionPerformed&#xD;
    String[] fields = new String[additionalfields.size()];&#xD;
    if (additionalfields.isEmpty()) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;There is not any additional field to remove&quot;, &quot;Field removal&quot;, JOptionPane.INFORMATION_MESSAGE);&#xD;
    }&#xD;
    for (int i = 0; i &lt; fields.length; i++) {&#xD;
        fields[i] = additionalfields.get(i);&#xD;
    }&#xD;
    String selectedfield = (String) JOptionPane.showInputDialog(this, &quot;Select the field to remove&quot;, &quot;&quot;, INFORMATION_MESSAGE, null, fields, fields[0]);&#xD;
    additionalfields.remove(selectedfield);&#xD;
    updatelanes(false);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G_94QBUTEemIe6OhVnSywA" name="showall" specification="_G_8qIBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    updatelanes(true);&#xD;
    jtComparisons.setSelectionPath(null);&#xD;
    jtExperiments.setSelectionPath(null);&#xD;
    //        jbAdd.setEnabled(true);&#xD;
    jbDeleteLane.setEnabled(false);&#xD;
    jbDeleteLane.setVisible(false);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HABioBUTEemIe6OhVnSywA" name="jbAdvancedSearchLanesActionPerformed" specification="_G__tcBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbAdvancedSearchLanesActionPerformed&#xD;
    SearchLanes sl = new SearchLanes(this);&#xD;
    sl.setVisible(true);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HAD-4BUTEemIe6OhVnSywA" name="addlanetocomparison" specification="_HACwwBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    int[] row = jtLanes.getSelectedRows();&#xD;
    if (row.length == 0) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;Select at least a lane to add&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
        return;&#xD;
    }&#xD;
    ArrayList&lt;LaneDB> selectedlanes = new ArrayList&lt;>();&#xD;
    for (int i = 0; i &lt; row.length; i++) {&#xD;
        selectedlanes.add(templanes.get(row[i]));&#xD;
    }&#xD;
    if (comparisons.isEmpty()) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;First of all, you need to create a comparison.&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
    } else {&#xD;
        Comparison[] comps = new Comparison[comparisons.size()];&#xD;
        for (int i = 0; i &lt; comps.length; i++) {&#xD;
            comps[i] = comparisons.get(i);&#xD;
        }&#xD;
        Comparison selected = (Comparison) JOptionPane.showInputDialog(this, &quot;Select a comparison&quot;, &quot;Select a comparison&quot;, INFORMATION_MESSAGE, null, comps, comps[0]);&#xD;
        ArrayList&lt;LaneDB> temp = selectedlanes;&#xD;
        temp.addAll(selected.getLanes());&#xD;
        if (!allsamemarker(temp)) {&#xD;
            JOptionPane.showMessageDialog(this, &quot;Not all the lanes have been normalised using the same marker&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
            return;&#xD;
        }&#xD;
        insertComparisonLane(selected.getId(), selectedlanes);&#xD;
        updatecomparisons(true, false);&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HAIQUBUTEemIe6OhVnSywA" name="jbDeleteLaneActionPerformed" specification="_HAF0EBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbDeleteLaneActionPerformed&#xD;
    int row = jtLanes.getSelectedRow();&#xD;
    DefaultMutableTreeNode node = (DefaultMutableTreeNode) jtComparisons.getLastSelectedPathComponent();&#xD;
    if (//Nothing is selected.     &#xD;
    node == null) {&#xD;
        return;&#xD;
    }&#xD;
    Comparison comp = (Comparison) node.getUserObject();&#xD;
    int compid = comp.getId();&#xD;
    if (row == -1) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;Select a lane first&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
    } else {&#xD;
        int reply = JOptionPane.showConfirmDialog(this, &quot;Do you want to remove this lane? &quot;, &quot;Delete lane&quot;, JOptionPane.YES_NO_OPTION);&#xD;
        if (reply == JOptionPane.YES_OPTION) {&#xD;
            deletelanecomparison(lanes.get(row).getId(), compid);&#xD;
            lanes = getLanesComparison(compid);&#xD;
            updatelanes(false);&#xD;
        }&#xD;
    }&#xD;
    updatecomparisons(true, false);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HAL6sBUTEemIe6OhVnSywA" name="jbSearchCompActionPerformed" specification="_HAKFgBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbSearchCompActionPerformed&#xD;
    SearchComparison sc = new SearchComparison(this);&#xD;
    sc.setVisible(true);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HAQzMBUTEemIe6OhVnSywA" name="jbNewCompActionPerformed" specification="_HAOW8BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbNewCompActionPerformed&#xD;
    double scale = jXImageView2.getScale();&#xD;
    jXImageView2.setImage(new BufferedImage(300, 200, TYPE_INT_ARGB));&#xD;
    jXImageView2.setScale(scale);&#xD;
    try {&#xD;
        createnewcomparison();&#xD;
    } catch (IOException ex) {&#xD;
        Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);&#xD;
    }&#xD;
    activateemptytoolbar();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HAT2gBUTEemIe6OhVnSywA" name="jxsearchlaneActionPerformed" specification="_HASBUBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jxsearchlaneActionPerformed&#xD;
    searchlanes();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HAYH8BUTEemIe6OhVnSywA" name="jmiExitActionPerformed" specification="_HAVrsBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jmiExitActionPerformed&#xD;
    System.exit(0);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HAdAcBUTEemIe6OhVnSywA" name="jmiNewStudyActionPerformed" specification="_HAakMBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jmiNewStudyActionPerformed&#xD;
    NewStudy ns = new NewStudy(this, true, false, this);&#xD;
    ns.setVisible(false);&#xD;
    if (studyid == -1) {&#xD;
        return;&#xD;
    }&#xD;
    enablefromopenornewstudy();&#xD;
    initialiseexperimentstree();&#xD;
    initialisecomparisonstree();&#xD;
    updateexperiments(true, true);&#xD;
    updatecomparisons(true, true);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HAh48BUTEemIe6OhVnSywA" name="jmiCloseStudyActionPerformed" specification="_HAfcsBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jmiCloseStudyActionPerformed&#xD;
    disablefromclosestudy();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HAmxcBUTEemIe6OhVnSywA" name="jmOpenStudyActionPerformed" specification="_HAkVMBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jmOpenStudyActionPerformed&#xD;
    ArrayList&lt;Study> studies = getStudies(userid);&#xD;
    if (studies.isEmpty()) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;You have not created any study previously&quot;, &quot;&quot;, JOptionPane.INFORMATION_MESSAGE, null);&#xD;
        return;&#xD;
    }&#xD;
    Study s = (Study) JOptionPane.showInputDialog(this, &quot;Select a study&quot;, &quot;Open study&quot;, JOptionPane.QUESTION_MESSAGE, null, studies.toArray(), studies.get(0));&#xD;
    if (s == null) {&#xD;
        return;&#xD;
    }&#xD;
    studyid = s.getId();&#xD;
    enablefromopenornewstudy();&#xD;
    initialiseexperimentstree();&#xD;
    initialisecomparisonstree();&#xD;
    updateexperiments(true, true);&#xD;
    updatecomparisons(true, true);&#xD;
    double scale = jXImageView2.getScale();&#xD;
    jXImageView2.setImage(new BufferedImage(300, 200, TYPE_INT_ARGB));&#xD;
    jXImageView2.setScale(scale);&#xD;
    this.setTitle(&quot;GelJ (&quot; + s.getName() + &quot; )&quot;);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HAsRABUTEemIe6OhVnSywA" name="jmiEditStudyActionPerformed" specification="_HApNsBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jmiEditStudyActionPerformed&#xD;
    NewStudy ns = new NewStudy(this, true, true, this);&#xD;
    ns.setVisible(true);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HAv7YBUTEemIe6OhVnSywA" name="jmiDeleteStudyActionPerformed" specification="_HAuGMBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jmiDeleteStudyActionPerformed&#xD;
    int reply = JOptionPane.showConfirmDialog(this, &quot;Do you want to delete this study?&quot;, &quot;Delete study&quot;, JOptionPane.YES_NO_OPTION);&#xD;
    if (reply == JOptionPane.YES_OPTION) {&#xD;
        int id = studyid;&#xD;
        deletestudy(id);&#xD;
        File folder = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/GelJDBImages/&quot; + id);&#xD;
        Utilities.deleteDir(folder);&#xD;
        disablefromclosestudy();&#xD;
        double scale = jXImageView2.getScale();&#xD;
        jXImageView2.setImage(new BufferedImage(300, 200, TYPE_INT_ARGB));&#xD;
        jXImageView2.setScale(scale);&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HA0M0BUTEemIe6OhVnSywA" name="jbEditlaneActionPerformed" specification="_HAxwkBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbEditlaneActionPerformed&#xD;
    try {&#xD;
        disableall();&#xD;
        editlane();&#xD;
    } catch (IOException ex) {&#xD;
        Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HA4eQBUTEemIe6OhVnSywA" name="jbViewCompActionPerformed" specification="_HA2CABUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbViewCompActionPerformed&#xD;
    viewcomparison();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HA8IoBUTEemIe6OhVnSywA" name="jbFindSimilarLanesActionPerformed" specification="_HA6TcBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbFindSimilarLanesActionPerformed&#xD;
    findsimilarlanes();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HBAaEBUTEemIe6OhVnSywA" name="jmiUnfinishedActionPerformed" specification="_HA990BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jmiUnfinishedActionPerformed&#xD;
    try {&#xD;
        continueunfinished();&#xD;
    } catch (ClassNotFoundException ex) {&#xD;
        Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);&#xD;
    } catch (Exception ex) {&#xD;
        Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HBFSkBUTEemIe6OhVnSywA" name="jbeditexpcompActionPerformed" specification="_HBC2UBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbeditexpcompActionPerformed&#xD;
    editexperiment();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HBI88BUTEemIe6OhVnSywA" name="jButton1ActionPerformed" specification="_HBHHwBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jButton1ActionPerformed&#xD;
    double scale = jXImageView2.getScale();&#xD;
    jXImageView2.setScale(scale * 1.25);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HBMnUBUTEemIe6OhVnSywA" name="jButton2ActionPerformed" specification="_HBKyIBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jButton2ActionPerformed&#xD;
    double scale = jXImageView2.getScale();&#xD;
    jXImageView2.setScale(scale * 0.75);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HBQ4wBUTEemIe6OhVnSywA" name="jMenuItem1ActionPerformed" specification="_HBOcgBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jMenuItem1ActionPerformed&#xD;
    createbackup();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HBVxQBUTEemIe6OhVnSywA" name="jMenuItem2ActionPerformed" specification="_HBTVABUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jMenuItem2ActionPerformed&#xD;
    disablefromclosestudy();&#xD;
    int option = JOptionPane.showConfirmDialog(this, &quot;If you restore a backup, all the new changes introduced in the\n&quot; + &quot;database will be lost. Do you really want to restore a backup?&quot;, &quot;Recover backup&quot;, JOptionPane.YES_NO_OPTION);&#xD;
    if (option == JOptionPane.YES_OPTION) {&#xD;
        try {&#xD;
            restorebackup();&#xD;
        } catch (IOException ex) {&#xD;
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);&#xD;
        }&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HBb34BUTEemIe6OhVnSywA" name="jbexportActionPerformed" specification="_HBY0kBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbexportActionPerformed&#xD;
    TreePath currentSelection = jtExperiments.getSelectionPath();&#xD;
    if (currentSelection != null) {&#xD;
        DefaultMutableTreeNode currentNode = (DefaultMutableTreeNode) (currentSelection.getLastPathComponent());&#xD;
        MutableTreeNode parent = (MutableTreeNode) (currentNode.getParent());&#xD;
        if (parent != null) {&#xD;
            Experiment exp = (Experiment) currentNode.getUserObject();&#xD;
            try {&#xD;
                exportexperiment(exp);&#xD;
            } catch (IOException ex) {&#xD;
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HBgJUBUTEemIe6OhVnSywA" name="jbmodifycompActionPerformed" specification="_HBeUIBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbmodifycompActionPerformed&#xD;
    editcomparison();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HBlB0BUTEemIe6OhVnSywA" name="jbdeletecompActionPerformed" specification="_HBilkBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbdeletecompActionPerformed&#xD;
    deletecomp();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HBoFIBUTEemIe6OhVnSywA" name="jAnnotateItemActionPerformed" specification="_HBm3ABUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jAnnotateItemActionPerformed&#xD;
    TreePath currentSelection = jtExperiments.getSelectionPath();&#xD;
    if (currentSelection != null) {&#xD;
        DefaultMutableTreeNode currentNode = (DefaultMutableTreeNode) (currentSelection.getLastPathComponent());&#xD;
        MutableTreeNode parent = (MutableTreeNode) (currentNode.getParent());&#xD;
        if (parent != null) {&#xD;
            Experiment experiment = (Experiment) currentNode.getUserObject();&#xD;
            String image = System.getProperty(&quot;user.dir&quot;) + &quot;/GelJDBImages/&quot; + experiment.getStudy().getId() + &quot;/&quot; + experiment.getUser().getUsername() + &quot;/experiments/&quot; + experiment.getId() + &quot;/&quot; + experiment.getImagename();&#xD;
            if (ij == null) {&#xD;
                ij = new ImageJ(NO_SHOW);&#xD;
            }&#xD;
            ImagePlus imp = WindowManager.getCurrentImage();&#xD;
            if (imp != null) {&#xD;
                imp.close();&#xD;
            }&#xD;
            imp = IJ.openImage(image);&#xD;
            imp.show();&#xD;
            ImageAnnotation ia = new ImageAnnotation(imp, this);&#xD;
        }&#xD;
    } else {&#xD;
        JOptionPane.showMessageDialog(this, &quot;You must select an experiment to annotate.&quot;);&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HBs9oBUTEemIe6OhVnSywA" name="jmiaddmarkerActionPerformed" specification="_HBqhYBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jmiaddmarkerActionPerformed&#xD;
    Menu m = new Menu();&#xD;
    if (ij == null) {&#xD;
        ij = new ImageJ(NO_SHOW);&#xD;
    }&#xD;
    disableall();&#xD;
    OpenDialog od = new OpenDialog(&quot;Load an image...&quot;);&#xD;
    Opener o = new Opener();&#xD;
    if (od.getPath() != null) {&#xD;
        ImagePlus imp1 = o.openImage(od.getPath());&#xD;
        if (imp1 == null) {&#xD;
            JOptionPane.showMessageDialog(m, &quot;Select a valid image file&quot;, &quot;Error&quot;, JOptionPane.ERROR_MESSAGE);&#xD;
            enableall();&#xD;
            return;&#xD;
        }&#xD;
        imp1.show();&#xD;
        IJ.run(imp1, &quot;Scale to Fit&quot;, &quot;&quot;);&#xD;
        imp1.getWindow().setLocked(true);&#xD;
        m.setWindowname(imp1.getTitle());&#xD;
        ImageWindow iw = imp1.getWindow();&#xD;
        iw.setLocked(false);&#xD;
        LaneManagerCanvas cc = new LaneManagerCanvas(imp1);&#xD;
        ImageWindow iw2 = new ImageWindow(imp1, cc);&#xD;
        iw2.setLocked(true);&#xD;
        iw.dispose();&#xD;
        MarkerSelection_1 s = new MarkerSelection_1(imp1, null, m, this);&#xD;
        imp1.getWindow().toFront();&#xD;
    } else {&#xD;
        enableall();&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HBx2IBUTEemIe6OhVnSywA" name="jMenuItem5ActionPerformed" specification="_HBuy0BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jMenuItem5ActionPerformed&#xD;
    ViewMarkers vm = new ViewMarkers(this, true);&#xD;
    vm.setVisible(true);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HB2HkBUTEemIe6OhVnSywA" name="jMenuItem6ActionPerformed" specification="_HBzrUBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jMenuItem6ActionPerformed&#xD;
    About about = new About(this, true);&#xD;
    about.setVisible(true);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HB4j0RUTEemIe6OhVnSywA" name="jMenuItem7ActionPerformed" specification="_HB38wBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jMenuItem7ActionPerformed&#xD;
    try {&#xD;
        //Set your page url in this string. For eg, I m using URL for Google Search engine&#xD;
        String url = &quot;http://sourceforge.net/projects/gelj/&quot;;&#xD;
        java.awt.Desktop.getDesktop().browse(java.net.URI.create(url));&#xD;
    } catch (java.io.IOException e) {&#xD;
        System.out.println(e.getMessage());&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HB5K4RUTEemIe6OhVnSywA" name="jMenuItem8ActionPerformed" specification="_HB4j0hUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jMenuItem8ActionPerformed&#xD;
    Manual manual = new Manual(this, true);&#xD;
    manual.setVisible(true);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HB5x8hUTEemIe6OhVnSywA" name="jSaveActionPerformed" specification="_HB5x8BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jSaveActionPerformed&#xD;
    DefaultMutableTreeNode node = (DefaultMutableTreeNode) jtComparisons.getLastSelectedPathComponent();&#xD;
    if (//Nothing is selected.     &#xD;
    node == null) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;This option is only available to save dendrograms&quot;, &quot;Save&quot;, JOptionPane.INFORMATION_MESSAGE);&#xD;
        return;&#xD;
    }&#xD;
    Comparison comp = (Comparison) node.getUserObject();&#xD;
    // Here&#xD;
    String image = System.getProperty(&quot;user.dir&quot;) + &quot;/GelJDBImages/&quot; + comp.getStudy().getId() + &quot;/&quot; + comp.getStudy().getUser().getUsername() + &quot;/comparisons/&quot; + comp.getId() + &quot;/dendrogram.tif&quot;;&#xD;
    ImagePlus imp = new ImagePlus(image);&#xD;
    IJ.saveAsTiff(imp, &quot;&quot;);&#xD;
    imp.close();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HB6ZAhUTEemIe6OhVnSywA" name="jbShowMWActionPerformed" specification="_HB6ZABUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbShowMWActionPerformed&#xD;
    try {&#xD;
        showMWofLane();&#xD;
    } catch (IOException ex) {&#xD;
        Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HB7nIBUTEemIe6OhVnSywA" name="jMenuMemoryActionPerformed" specification="_HB7AEBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jMenuMemoryActionPerformed&#xD;
    Memory m = new Memory();&#xD;
    m.run(&quot;&quot;);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HB8OMRUTEemIe6OhVnSywA" name="jbExportNewickActionPerformed" specification="_HB7nIRUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbExportNewickActionPerformed&#xD;
    try {&#xD;
        DefaultMutableTreeNode node = (DefaultMutableTreeNode) jtComparisons.getLastSelectedPathComponent();&#xD;
        if (//Nothing is selected.&#xD;
        node == null) {&#xD;
            JOptionPane.showMessageDialog(this, &quot;Select a comparison to edit&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
            return;&#xD;
        }&#xD;
        Comparison comp = (Comparison) node.getUserObject();&#xD;
        String newickfile = System.getProperty(&quot;user.dir&quot;) + &quot;/GelJDBImages/&quot; + comp.getStudy().getId() + &quot;/&quot; + comp.getStudy().getUser().getUsername() + &quot;/comparisons/&quot; + comp.getId() + &quot;/newick.txt&quot;;&#xD;
        File f = new File(newickfile);&#xD;
        Path p = Paths.get(f.getPath());&#xD;
        Charset c = Charset.defaultCharset();&#xD;
        List&lt;String> lines = Files.readAllLines(p, c);&#xD;
        if (f.exists()) {&#xD;
            SaveDialog sd = new SaveDialog(&quot;Export comparison to newick and nexus format...&quot;, &quot;tree&quot;, &quot;.txt&quot;);&#xD;
            String dir = sd.getDirectory();&#xD;
            String name = sd.getFileName();&#xD;
            if (dir == null || name == null) {&#xD;
                return;&#xD;
            }&#xD;
            File fout = new File(dir + &quot;newick_&quot; + name);&#xD;
            File nexusfile = new File(dir + &quot;nexus_&quot; + name);&#xD;
            PrintWriter writer = new PrintWriter(dir + &quot;nexus_&quot; + name, &quot;UTF-8&quot;);&#xD;
            writer.println(&quot;#NEXUS&quot;);&#xD;
            writer.println(&quot;BEGIN TREES;&quot;);&#xD;
            writer.println(&quot;  TREE tree1 = &quot; + lines.get(0));&#xD;
            writer.println(&quot;END;&quot;);&#xD;
            writer.close();&#xD;
            try {&#xD;
                Files.copy(f.toPath(), fout.toPath(), REPLACE_EXISTING);&#xD;
            } catch (IOException ex) {&#xD;
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);&#xD;
            }&#xD;
        } else {&#xD;
            JOptionPane.showMessageDialog(null, &quot;This comparison was created with a previous version of GelJ\n&quot; + &quot;and hence the newick file was not generated. To solve this problem\n &quot; + &quot;use the \&quot;Edit Comparison\&quot; button but without modifying any parameter.\n&quot; + &quot;This will create the newick file and you will be able to import it.&quot;, &quot;Export dendrogram to newick&quot;, INFORMATION_MESSAGE, null);&#xD;
            return;&#xD;
        }&#xD;
    } catch (IOException ex) {&#xD;
        Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HB_4kBUTEemIe6OhVnSywA" name="jbSimMatrixActionPerformed" specification="_HB9cUBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbSimMatrixActionPerformed&#xD;
    DefaultMutableTreeNode node = (DefaultMutableTreeNode) jtComparisons.getLastSelectedPathComponent();&#xD;
    if (//Nothing is selected.     &#xD;
    node == null) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;Select a comparison to edit&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
        return;&#xD;
    }&#xD;
    Comparison comp = (Comparison) node.getUserObject();&#xD;
    String[] options = { &quot;Similarity matrix&quot;, &quot;Distance matrix&quot; };&#xD;
    int choice = JOptionPane.showOptionDialog(this, &quot;Type of matrix&quot;, &quot;Export Matrix&quot;, JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE, null, options, &quot;Similarity matrix&quot;);&#xD;
    String matrix;&#xD;
    String type;&#xD;
    if (choice == 0) {&#xD;
        matrix = System.getProperty(&quot;user.dir&quot;) + &quot;/GelJDBImages/&quot; + comp.getStudy().getId() + &quot;/&quot; + comp.getStudy().getUser().getUsername() + &quot;/comparisons/&quot; + comp.getId() + &quot;/simmatrix.xls&quot;;&#xD;
        type = &quot;similarityMatrix&quot;;&#xD;
    } else {&#xD;
        matrix = System.getProperty(&quot;user.dir&quot;) + &quot;/GelJDBImages/&quot; + comp.getStudy().getId() + &quot;/&quot; + comp.getStudy().getUser().getUsername() + &quot;/comparisons/&quot; + comp.getId() + &quot;/distancematrix.xls&quot;;&#xD;
        type = &quot;distanceMatrix&quot;;&#xD;
    }&#xD;
    File f = new File(matrix);&#xD;
    if (f.exists()) {&#xD;
        SaveDialog sd = new SaveDialog(&quot;Export matrix&quot;, type, &quot;.xls&quot;);&#xD;
        String dir = sd.getDirectory();&#xD;
        String name = sd.getFileName();&#xD;
        if (dir == null || name == null) {&#xD;
            return;&#xD;
        }&#xD;
        File fout = new File(dir + name);&#xD;
        try {&#xD;
            Files.copy(f.toPath(), fout.toPath(), REPLACE_EXISTING);&#xD;
        } catch (IOException ex) {&#xD;
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);&#xD;
        }&#xD;
    } else {&#xD;
        JOptionPane.showMessageDialog(null, &quot;This comparison was created with a previous version of GelJ\n&quot; + &quot;and hence the similarity matrix was not generated. To solve this problem\n &quot; + &quot;use the \&quot;Edit Comparison\&quot; button but without modifying any parameter.\n&quot; + &quot;This will create the similarity matrix and you will be able to import it.&quot;, &quot;Export similarity matrix&quot;, INFORMATION_MESSAGE, null);&#xD;
        return;&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HCDi8BUTEemIe6OhVnSywA" name="jmiExportGeneticsActionPerformed" specification="_HCBtwBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    if (experiments.isEmpty()) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;Create an experiment first&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
        return;&#xD;
    }&#xD;
    NewComparison nc = new NewComparison(studyid);&#xD;
    nc.setNonSelectedExperiments(experiments);&#xD;
    ArrayList&lt;String> fields = new ArrayList&lt;>();&#xD;
    String[] names0 = { &quot;Genus&quot;, &quot;Species&quot;, &quot;Strain Number&quot;, &quot;Country&quot;, &quot;MLST&quot;, &quot;isMarker&quot;, &quot;Experiment&quot;, &quot;Comments&quot; };&#xD;
    for (String s : names0) {&#xD;
        fields.add(s);&#xD;
    }&#xD;
    for (String s : additionalfields) {&#xD;
        fields.add(s);&#xD;
    }&#xD;
    nc.setNonSelectedFields(fields);&#xD;
    db.PopulationGenetic.Step1 populationgenetics = new db.PopulationGenetic.Step1(nc, true);&#xD;
    populationgenetics.setVisible(true);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HCGmQBUTEemIe6OhVnSywA" name="jmiAddPopulationFieldActionPerformed" specification="_HCExEBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jmiAddPopulationFieldActionPerformed&#xD;
    if (additionalfields.contains(&quot;Population&quot;)) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;You have already added the Population field&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
    } else {&#xD;
        additionalfields.add(&quot;Population&quot;);&#xD;
        updatelanes(false);&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HCJpkBUTEemIe6OhVnSywA" name="jbSearchExpActionPerformed" specification="_HCH0YBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbSearchExpActionPerformed&#xD;
    SearchExperiments se = new SearchExperiments(this);&#xD;
    se.setVisible(true);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HCOiEBUTEemIe6OhVnSywA" name="jbImportActionPerformed" specification="_HCLewBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    if (getExperimentsofOtherStudies(studyid).isEmpty()) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;There is not any experiment to import&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
        return;&#xD;
    }&#xD;
    ImportExperiment ie = new ImportExperiment(studyid, this);&#xD;
    ie.setVisible(true);&#xD;
    enableall();&#xD;
    activateemptytoolbar();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HCSMcBUTEemIe6OhVnSywA" name="jbimportexpfileActionPerformed" specification="_HCPJIBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbimportexpfileActionPerformed&#xD;
    OpenDialog od = new OpenDialog(&quot;Import an experiment...&quot;);&#xD;
    String path = od.getPath();&#xD;
    if (!path.endsWith(&quot;.zip&quot;)) {&#xD;
        JOptionPane.showMessageDialog(null, &quot;You must select a zip file&quot;, &quot;Import experiment&quot;, JOptionPane.ERROR_MESSAGE);&#xD;
    } else {&#xD;
        try {&#xD;
            unzipFunction(path);&#xD;
            File experiment = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/temp-geljdb/experiment.exp&quot;);&#xD;
            File lanesfile = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/temp-geljdb/experiment.lanes&quot;);&#xD;
            File marker = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/temp-geljdb/experiment.marker&quot;);&#xD;
            File user = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/temp-geljdb/experiment.user&quot;);&#xD;
            File addedinfo = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/temp-geljdb/experiment.adds&quot;);&#xD;
            if (!experiment.exists() || !lanesfile.exists() || !marker.exists() || !user.exists()) {&#xD;
                JOptionPane.showMessageDialog(null, &quot;This is not an experiment zip&quot;, &quot;Import experiment&quot;, JOptionPane.ERROR_MESSAGE);&#xD;
                return;&#xD;
            }&#xD;
            /// Reading user and lab&#xD;
            Path p = Paths.get(user.getPath());&#xD;
            Charset c = Charset.defaultCharset();&#xD;
            List&lt;String> linesuser = Files.readAllLines(p, c);&#xD;
            String lineuser = linesuser.get(0).replace(&quot;\&quot;&quot;, &quot;&quot;);&#xD;
            String[] partsuser = lineuser.split(&quot;,&quot;);&#xD;
            Lab l = new Lab(Integer.parseInt(partsuser[5]), partsuser[6], partsuser[7], partsuser[8]);&#xD;
            User u = new User(Integer.parseInt(partsuser[0]), partsuser[1], partsuser[2], partsuser[3], l);&#xD;
            /// Reading marker&#xD;
            p = Paths.get(marker.getPath());&#xD;
            List&lt;String> linemarker = Files.readAllLines(p, c);&#xD;
            String markerline = linemarker.get(0).replace(&quot;\&quot;&quot;, &quot;&quot;);&#xD;
            String[] partsmarker = markerline.split(&quot;,&quot;);&#xD;
            File temp = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/standardfiles/&quot; + partsmarker[1] + &quot;.marker&quot;);&#xD;
            Marker m1 = new Marker(Integer.parseInt(partsmarker[0]), partsmarker[1], temp.getPath());&#xD;
            /// Reading experiment&#xD;
            p = Paths.get(experiment.getPath());&#xD;
            List&lt;String> lines = Files.readAllLines(p, c);&#xD;
            String expline = lines.get(0).replace(&quot;\&quot;&quot;, &quot;&quot;);&#xD;
            String[] parts = expline.split(&quot;,&quot;);&#xD;
            SimpleDateFormat formatter = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;);&#xD;
            java.util.Date utilDate = formatter.parse(parts[2]);&#xD;
            java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());&#xD;
            Experiment e = new Experiment(Integer.parseInt(parts[0]), parts[1], sqlDate, parts[3], Integer.parseInt(parts[4]), parts[5], getStudy(studyid), m1, u);&#xD;
            /// Reading lanes added info&#xD;
            ArrayList&lt;String[]> lanesaddedinfo = new ArrayList&lt;>();&#xD;
            p = Paths.get(addedinfo.getPath());&#xD;
            List&lt;String> linesaddedinfolanes = Files.readAllLines(p, c);&#xD;
            for (String s : linesaddedinfolanes) {&#xD;
                String[] partslanes = s.replace(&quot;\&quot;&quot;, &quot;&quot;).split(&quot;,&quot;);&#xD;
                lanesaddedinfo.add(partslanes);&#xD;
            }&#xD;
            /// Reading lanes&#xD;
            p = Paths.get(lanesfile.getPath());&#xD;
            List&lt;String> lineslanes = Files.readAllLines(p, c);&#xD;
            ArrayList&lt;LaneDB> lanesDB = new ArrayList&lt;>();&#xD;
            for (String s : lineslanes) {&#xD;
                String[] partslanes = s.replace(&quot;\&quot;&quot;, &quot;&quot;).split(&quot;,&quot;);&#xD;
                LaneDB lane = new LaneDB(Integer.parseInt(partslanes[0]), partslanes[1], partslanes[2], partslanes[3], partslanes[4], partslanes[5], Boolean.parseBoolean(partslanes[6]), partslanes[7], e);&#xD;
                for (int i = 0; i &lt; lanesaddedinfo.size(); i++) {&#xD;
                    if (Integer.parseInt(lanesaddedinfo.get(i)[3]) == lane.getId()) {&#xD;
                        lane.addnewinfo(lanesaddedinfo.get(i)[1], lanesaddedinfo.get(i)[2]);&#xD;
                    }&#xD;
                }&#xD;
                lanesDB.add(lane);&#xD;
            }&#xD;
            /// Folder where all information is originally saved&#xD;
            File folderorigin = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/temp-geljdb/GelJDBImages/&quot; + parts[6] + &quot;/&quot; + u.getUsername() + &quot;/experiments/&quot; + e.getId() + &quot;/&quot;);&#xD;
            /// Adding lab to the database if it does not exists&#xD;
            int labid = existslab_id(l.getName(), l.getCity(), l.getCountry());&#xD;
            if (labid != -1) {&#xD;
                l.setId(labid);&#xD;
            } else {&#xD;
                l.setId(lastLabid());&#xD;
                insertLab(l);&#xD;
            }&#xD;
            /// Adding user to the database if it does not exists&#xD;
            User u2 = existssuser(u.getName(), u.getSurname());&#xD;
            if (u2 != null) {&#xD;
                int option = JOptionPane.showConfirmDialog(null, &quot;The imported experiment was created by &quot; + u.getName() + &quot; &quot; + u.getSurname() + &quot;.\nThe database already contains a user called &quot; + u.getName() + &quot; &quot; + u.getSurname() + &quot; from &quot; + u2.getLab().getName() + &quot; (&quot; + u2.getLab().getCity() + &quot; - &quot; + u2.getLab().getCountry() + &quot;).\n&quot; + &quot;Are they the same person?&quot;, &quot;Same user&quot;, JOptionPane.YES_NO_OPTION);&#xD;
                if (option == JOptionPane.YES_OPTION) {&#xD;
                    u = u2;&#xD;
                } else {&#xD;
                    u.setId(lastUserid());&#xD;
                    insertUser(u);&#xD;
                }&#xD;
            } else {&#xD;
                u.setId(lastUserid());&#xD;
                insertUser(u);&#xD;
            }&#xD;
            /// Adding marker to the database if it does not exists&#xD;
            if (m1.getId() != 0 &amp;&amp; m1.getId() != 1 &amp;&amp; m1.getId() != 2) {&#xD;
                int mid = existsmarker_id(m1.getName());&#xD;
                if (mid != -1) {&#xD;
                    m1.setId(mid);&#xD;
                } else {&#xD;
                    m1.setId(lastMarkerid());&#xD;
                    insertMarker(m1);&#xD;
                    File markerorigin = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/temp-geljdb/standardfiles/&quot; + m1.getName() + &quot;.marker&quot;);&#xD;
                    Files.copy(markerorigin.toPath(), temp.toPath());&#xD;
                    File markerorigininfo = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/temp-geljdb/standardfiles/info/&quot; + m1.getName() + &quot;.info&quot;);&#xD;
                    File temp1 = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/standardfiles/info/&quot; + partsmarker[1] + &quot;.info&quot;);&#xD;
                    Files.copy(markerorigininfo.toPath(), temp1.toPath());&#xD;
                    File markeroriginpos = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/temp-geljdb/standardfiles/info/&quot; + m1.getName() + &quot;.pos&quot;);&#xD;
                    File temp2 = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/standardfiles/info/&quot; + partsmarker[1] + &quot;.pos&quot;);&#xD;
                    Files.copy(markeroriginpos.toPath(), temp2.toPath());&#xD;
                }&#xD;
            }&#xD;
            /// Adding experiment to the database&#xD;
            int expidoriginal = e.getId();&#xD;
            e.setId(lastExperimentid());&#xD;
            e.setName(&quot;Imported-&quot; + e.getName());&#xD;
            insertExperiment(e);&#xD;
            /// Making experiment directory&#xD;
            File folderexp = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/GelJDBImages/&quot; + studyid + &quot;/&quot; + e.getUser().getUsername() + &quot;/experiments/&quot; + e.getId() + &quot;/&quot;);&#xD;
            folderexp.mkdir();&#xD;
            /// Copying image file&#xD;
            File imageorigin = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/temp-geljdb/GelJDBImages/&quot; + parts[6] + &quot;/&quot; + u.getUsername() + &quot;/experiments/&quot; + expidoriginal + &quot;/&quot; + e.getImagename());&#xD;
            //                JOptionPane.showMessageDialog(null, imageorigin.getPath());&#xD;
            File imagedestine = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/GelJDBImages/&quot; + studyid + &quot;/&quot; + e.getUser().getUsername() + &quot;/experiments/&quot; + e.getId() + &quot;/&quot; + e.getImagename());&#xD;
            //                JOptionPane.showMessageDialog(null, imagedestine.getPath());&#xD;
            //// Error here&#xD;
            Files.move(imageorigin.toPath(), imagedestine.toPath(), REPLACE_EXISTING);&#xD;
            //                JOptionPane.showMessageDialog(null, &quot;test&quot;);&#xD;
            /// Lanes folder&#xD;
            File folderlanes = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/GelJDBImages/&quot; + studyid + &quot;/&quot; + e.getUser().getUsername() + &quot;/experiments/&quot; + e.getId() + &quot;/lanes/&quot;);&#xD;
            folderlanes.mkdir();&#xD;
            /// Adding lanes to the database&#xD;
            int laneid = lastLaneid();&#xD;
            for (LaneDB l0 : lanesDB) {&#xD;
                int lid = l0.getId();&#xD;
                LaneDB newlane = l0;&#xD;
                newlane.setId(laneid);&#xD;
                insertLane(newlane);&#xD;
                String folderoriginlane = System.getProperty(&quot;user.dir&quot;) + &quot;/temp-geljdb/GelJDBImages/&quot; + parts[6] + &quot;/&quot; + u.getUsername() + &quot;/experiments/&quot; + expidoriginal + &quot;/lanes/&quot; + lid + &quot;/&quot;;&#xD;
                String folderlanepath = System.getProperty(&quot;user.dir&quot;) + &quot;/GelJDBImages/&quot; + studyid + &quot;/&quot; + e.getUser().getUsername() + &quot;/experiments/&quot; + e.getId() + &quot;/lanes/&quot; + laneid + &quot;/&quot;;&#xD;
                File folderlane = new File(folderlanepath);&#xD;
                folderlane.mkdir();&#xD;
                File curveorigin = new File(folderoriginlane + lid + &quot;.curve&quot;);&#xD;
                File curvedestiny = new File(folderlanepath + laneid + &quot;.curve&quot;);&#xD;
                Files.copy(curveorigin.toPath(), curvedestiny.toPath());&#xD;
                File mworigin = new File(folderoriginlane + lid + &quot;.mw&quot;);&#xD;
                File mwdestiny = new File(folderlanepath + laneid + &quot;.mw&quot;);&#xD;
                Files.copy(mworigin.toPath(), mwdestiny.toPath());&#xD;
                File bandsorigin = new File(folderoriginlane + lid + &quot;.bands&quot;);&#xD;
                File bandsdestiny = new File(folderlanepath + laneid + &quot;.bands&quot;);&#xD;
                Files.copy(bandsorigin.toPath(), bandsdestiny.toPath());&#xD;
                File bandsorigin2 = new File(folderoriginlane + lid + &quot;.bands2&quot;);&#xD;
                File bandsdestiny2 = new File(folderlanepath + laneid + &quot;.bands2&quot;);&#xD;
                Files.copy(bandsorigin2.toPath(), bandsdestiny2.toPath());&#xD;
                File imorigin = new File(folderoriginlane + lid + &quot;.tiff&quot;);&#xD;
                File imdestiny = new File(folderlanepath + laneid + &quot;.tiff&quot;);&#xD;
                Files.copy(imorigin.toPath(), imdestiny.toPath());&#xD;
                File roiorigin = new File(folderoriginlane + lid + &quot;.roi&quot;);&#xD;
                File roidestiny = new File(folderlanepath + laneid + &quot;.roi&quot;);&#xD;
                Files.copy(roiorigin.toPath(), roidestiny.toPath());&#xD;
                laneid++;&#xD;
            }&#xD;
            File tempgeldb = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/temp-geljdb&quot;);&#xD;
            deleteDir(tempgeldb);&#xD;
            updateexperiments(true, true);&#xD;
            enableall();&#xD;
            activateemptytoolbar();&#xD;
        } catch (IOException ex) {&#xD;
            Logger.getLogger(ImportExperiment.class.getName()).log(Level.SEVERE, null, ex);&#xD;
        } catch (ParseException ex) {&#xD;
            Logger.getLogger(ImportExperiment.class.getName()).log(Level.SEVERE, null, ex);&#xD;
        }&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HCWd4BUTEemIe6OhVnSywA" name="jbDuplicateExpActionPerformed" specification="_HCUosBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbDuplicateExpActionPerformed&#xD;
    try {&#xD;
        duplicateexperiment();&#xD;
        double scale = jXImageView2.getScale();&#xD;
        jXImageView2.setImage(new BufferedImage(300, 200, TYPE_INT_ARGB));&#xD;
        jXImageView2.setScale(scale);&#xD;
        activateemptytoolbar();&#xD;
    } catch (IOException ex) {&#xD;
        Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HCaIQBUTEemIe6OhVnSywA" name="jbNewExpActionPerformed" specification="_HCYTEBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbNewExpActionPerformed&#xD;
    newexperiment();&#xD;
    activateemptytoolbar();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HCbWYRUTEemIe6OhVnSywA" name="jMItransformActionPerformed" specification="_HCavUBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jMItransformActionPerformed&#xD;
    OpenDialog od = new OpenDialog(&quot;Select a GelJXML file...&quot;);&#xD;
    String name = od.getFileName();&#xD;
    String path = od.getPath();&#xD;
    if (!path.endsWith(&quot;.xml&quot;)) {&#xD;
        JOptionPane.showMessageDialog(null, &quot;You must select an XML file&quot;, &quot;Load a new standard&quot;, JOptionPane.ERROR_MESSAGE);&#xD;
    } else {&#xD;
        if (name.contains(&quot;.&quot;)) {&#xD;
            name = name.substring(0, name.indexOf(&quot;.&quot;));&#xD;
        }&#xD;
        Transformer t = new Transformer(name, path, true);&#xD;
        t.setVisible(true);&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HCb9cRUTEemIe6OhVnSywA" name="duplicateexperiment" specification="_HCb9cBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    TreePath currentSelection = jtExperiments.getSelectionPath();&#xD;
    if (currentSelection != null) {&#xD;
        DefaultMutableTreeNode currentNode = (DefaultMutableTreeNode) (currentSelection.getLastPathComponent());&#xD;
        MutableTreeNode parent = (MutableTreeNode) (currentNode.getParent());&#xD;
        if (parent != null) {&#xD;
            //&#xD;
            Experiment e = (Experiment) currentNode.getUserObject();&#xD;
            Experiment exp = new Experiment(e.getId(), e.getName(), e.getDate(), e.getImagename(), e.getCalibrationMethod(), e.getComments(), e.getStudy(), e.getMarker(), e.getUser());&#xD;
            ImportExperiment.duplicateexperiment(exp, studyid);&#xD;
            updateexperiments(true, true);&#xD;
        }&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HCgO4BUTEemIe6OhVnSywA" name="continueunfinished" specification="_HCckgBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    ArrayList&lt;UnfinishedExperiment> exps = getUnfinishedExperiments(studyid);&#xD;
    if (!exps.isEmpty()) {&#xD;
        disableall();&#xD;
        if (ij == null) {&#xD;
            ij = new ImageJ(NO_SHOW);&#xD;
        }&#xD;
        UnfinishedExperiment ue = (UnfinishedExperiment) JOptionPane.showInputDialog(this, &quot;Select the unfinished experiment&quot;, &quot;Finish experiment&quot;, JOptionPane.QUESTION_MESSAGE, null, exps.toArray(), exps.get(0));&#xD;
        if (ue != null) {&#xD;
            Menu m = new Menu();&#xD;
            disableall();&#xD;
            m.setUser(userid);&#xD;
            Load ld = new Load(m);&#xD;
            String dir = System.getProperty(&quot;user.dir&quot;) + &quot;/GelJDBImages/&quot; + ue.getStudy().getId() + &quot;/&quot; + ue.getStudy().getUser().getUsername() + &quot;/unfinished/&quot;;&#xD;
            String name = ue.getId() + &quot;.zip&quot;;&#xD;
            ld.loadzipfile(dir + name);&#xD;
            //                 Assistant a = new Assistant(m, this);&#xD;
            Image_Assistant a = new Image_Assistant(m, this);&#xD;
            switch(ue.getStep()) {&#xD;
                case 0:&#xD;
                    //                        a.cropimage();&#xD;
                    a.recoverstep0(IJ.getImage());&#xD;
                    break;&#xD;
                case 1:&#xD;
                    //                        a.invertcolour();&#xD;
                    a.recoverstep1(IJ.getImage());&#xD;
                    break;&#xD;
                case 2:&#xD;
                    //                        a.autoadjustbc();&#xD;
                    a.recoverstep2(IJ.getImage());&#xD;
                    break;&#xD;
                case 3:&#xD;
                    //                        a.preprocessimage();&#xD;
                    a.recoverstep3(IJ.getImage());&#xD;
                    break;&#xD;
                case 4:&#xD;
                    //                        a.lightdarkbackground();&#xD;
                    a.recoverstep4(IJ.getImage());&#xD;
                    break;&#xD;
                case 5:&#xD;
                    //                        a.autolanedetection();&#xD;
                    a.recoverstep4(IJ.getImage());&#xD;
                    break;&#xD;
                case 6:&#xD;
                    //                        a.autobanddetection();&#xD;
                    a.recoverstep6(IJ.getImage());&#xD;
                    break;&#xD;
                case 7:&#xD;
                    //                        a.normalisegel();&#xD;
                    a.recoverstep6(IJ.getImage());&#xD;
                    break;&#xD;
                case 8:&#xD;
                    //                        a.normalisegel();&#xD;
                    a.recoverstep6(IJ.getImage());&#xD;
                    break;&#xD;
                //                        break;&#xD;
                default:&#xD;
                    //                        a.cropimage();&#xD;
                    a.recoverstep0(IJ.getImage());&#xD;
                    break;&#xD;
            }&#xD;
            UnfinishedExperimentsQueries.deleteunfinishedexperiment(ue.getId());&#xD;
            IJ.getImage().getWindow().toFront();&#xD;
        } else {&#xD;
            enableall();&#xD;
        }&#xD;
    } else {&#xD;
        JOptionPane.showMessageDialog(this, &quot;There is not any unfinished experiment&quot;);&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HChdABUTEemIe6OhVnSywA" name="findsimilarlanes" specification="_HCg18BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    if (ij != null) {&#xD;
        ij.quit();&#xD;
        ij = null;&#xD;
    }&#xD;
    if (IJ.getInstance() != null) {&#xD;
        IJ.getInstance().quit();&#xD;
        ij = null;&#xD;
    }&#xD;
    int[] row = jtLanes.getSelectedRows();&#xD;
    if (row.length != 1) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;Select a lane to find lanes that are similar&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
        return;&#xD;
    }&#xD;
    LaneDB lane = templanes.get(row[0]);&#xD;
    FindSimilarities fs = new FindSimilarities(lane);&#xD;
    fs.setVisible(true);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HCj5QBUTEemIe6OhVnSywA" name="viewcomparison" specification="_HCjSMBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    if (ij != null) {&#xD;
        ij.quit();&#xD;
        ij = null;&#xD;
    }&#xD;
    if (IJ.getInstance() != null) {&#xD;
        IJ.getInstance().quit();&#xD;
        ij = null;&#xD;
    }&#xD;
    DefaultMutableTreeNode node = (DefaultMutableTreeNode) jtComparisons.getLastSelectedPathComponent();&#xD;
    if (//Nothing is selected.     &#xD;
    node == null) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;Select a comparison to edit&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
        return;&#xD;
    }&#xD;
    Comparison comp = (Comparison) node.getUserObject();&#xD;
    NewComparison nc = comp.toNewComparison(experiments);&#xD;
    ArrayList&lt;String> fields = new ArrayList&lt;>();&#xD;
    String[] names0 = { &quot;Genus&quot;, &quot;Species&quot;, &quot;Strain Number&quot;, &quot;Country&quot;, &quot;MLST&quot;, &quot;isMarker&quot;, &quot;Experiment&quot;, &quot;Comments&quot; };&#xD;
    for (String s : names0) {&#xD;
        fields.add(s);&#xD;
    }&#xD;
    for (String s : additionalfields) {&#xD;
        fields.add(s);&#xD;
    }&#xD;
    nc.setNonSelectedFields(fields);&#xD;
    ViewComparison vc = new ViewComparison(nc, comp);&#xD;
    vc.setVisible(true);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HClucBUTEemIe6OhVnSywA" name="editexperiment" specification="_HClHYBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    DefaultMutableTreeNode node = (DefaultMutableTreeNode) jtExperiments.getLastSelectedPathComponent();&#xD;
    if (//Nothing is selected.     &#xD;
    node == null) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;Select an experiment to edit&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
        return;&#xD;
    }&#xD;
    Experiment exp = (Experiment) node.getUserObject();&#xD;
    NewExperiment ne = new NewExperiment(this, true, exp);&#xD;
    ne.setVisible(true);&#xD;
    lanes = getlanesexperiment(exp.getId(), true);&#xD;
    templanes = lanes;&#xD;
    updatelanes(false);&#xD;
    activateexperimentstoolbar();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HCpY0BUTEemIe6OhVnSywA" name="editlane" specification="_HCnjoBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    if (ij == null) {&#xD;
        ij = new ImageJ(NO_SHOW);&#xD;
    }&#xD;
    ImagePlus imp = WindowManager.getCurrentImage();&#xD;
    if (imp != null) {&#xD;
        imp.close();&#xD;
    }&#xD;
    int[] row = jtLanes.getSelectedRows();&#xD;
    if (row.length == 0) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;Select one lane&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
        return;&#xD;
    }&#xD;
    if (row.length > 1) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;Select only one lane&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
        return;&#xD;
    }&#xD;
    LaneDB lane = templanes.get(row[0]);&#xD;
    if (lane.isIsMarker()) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;Standard lanes cannot be edited&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
        return;&#xD;
    }&#xD;
    IJ.open(System.getProperty(&quot;user.dir&quot;) + &quot;/GelJDBImages/&quot; + studyid + &quot;/&quot; + getUser(userid).getUsername() + &quot;/experiments/&quot; + lane.getExperiment().getId() + &quot;/&quot; + lane.getExperiment().getImagename());&#xD;
    try {&#xD;
        EditViewLaneDB eldb = new EditViewLaneDB(lane, true, this);&#xD;
    } catch (IOException ex) {&#xD;
        Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HCscIBUTEemIe6OhVnSywA" name="showMWofLane" specification="_HCrOABUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    int[] row = jtLanes.getSelectedRows();&#xD;
    if (row.length == 0) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;Select one lane&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
        return;&#xD;
    }&#xD;
    if (row.length > 1) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;Select only one lane&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
        return;&#xD;
    }&#xD;
    LaneDB lane = templanes.get(row[0]);&#xD;
    Lane mainlane = LaneDBtoLaneIJ(lane);&#xD;
    double[] mws = mainlane.getStdpositionbands();&#xD;
    ArrayList list = new ArrayList();&#xD;
    String headings = &quot;Lane\t&quot;;&#xD;
    for (int i = 0; i &lt; mws.length; i++) {&#xD;
        String row1 = &quot;&quot; + mws[i];&#xD;
        list.add(row1);&#xD;
    }&#xD;
    TextWindow textWindow = new TextWindow(&quot;Lane MWs&quot;, headings, list, 600, 400);&#xD;
    textWindow.setVisible(true);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HCuRUBUTEemIe6OhVnSywA" name="viewlane" specification="_HCtqQBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    if (ij != null) {&#xD;
        ij.quit();&#xD;
        ij = null;&#xD;
    }&#xD;
    if (IJ.getInstance() != null) {&#xD;
        IJ.getInstance().quit();&#xD;
    }&#xD;
    ImagePlus imp = WindowManager.getCurrentImage();&#xD;
    if (imp != null) {&#xD;
        imp.close();&#xD;
    }&#xD;
    int[] row = jtLanes.getSelectedRows();&#xD;
    if (row.length == 0) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;Select at least one lane&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
        return;&#xD;
    }&#xD;
    Opener o = new Opener();&#xD;
    String imageName = System.getProperty(&quot;user.dir&quot;) + &quot;/GelJDBImages/&quot; + studyid + &quot;/&quot; + getUser(userid).getUsername() + &quot;/experiments/&quot; + templanes.get(row[0]).getExperiment().getId() + &quot;/&quot; + templanes.get(row[0]).getExperiment().getImagename();&#xD;
    if (imageName.endsWith(&quot;.TIFF&quot;)) {&#xD;
        imageName = imageName.replace(&quot;.TIFF&quot;, &quot;.tif&quot;);&#xD;
    }&#xD;
    if (imageName.endsWith(&quot;.TIF&quot;)) {&#xD;
        imageName = imageName.replace(&quot;.TIF&quot;, &quot;.tif&quot;);&#xD;
    }&#xD;
    imp = o.openImage(imageName);&#xD;
    LaneDB[] lanes = new LaneDB[row.length];&#xD;
    for (int i = 0; i &lt; row.length; i++) {&#xD;
        lanes[i] = templanes.get(row[i]);&#xD;
        String path = System.getProperty(&quot;user.dir&quot;) + &quot;/GelJDBImages/&quot; + studyid + &quot;/&quot; + getUser(userid).getUsername() + &quot;/experiments/&quot; + lanes[i].getExperiment().getId() + &quot;/lanes/&quot; + lanes[i].getId() + &quot;/&quot; + lanes[i].getId() + &quot;.roi&quot;;&#xD;
        Roi roi = RoiDecoder.open(path);&#xD;
        roi.setStrokeWidth(3);&#xD;
        imp.setRoi(roi);&#xD;
        IJ.run(imp, &quot;Add Selection...&quot;, &quot;&quot;);&#xD;
        imp.deleteRoi();&#xD;
    }&#xD;
    ImagePlus imp2 = imp.flatten();&#xD;
    imp.close();&#xD;
    //        imp2.show();&#xD;
    double scale = jXImageView2.getScale();&#xD;
    jXImageView2.setImage(imp2.getImage());&#xD;
    jXImageView2.setScale(scale);&#xD;
    imp2.close();&#xD;
//        try {&#xD;
//            for (int i = 0; i &lt; row.length; i++) {&#xD;
//                new EditViewLaneDB(lanes[i], false);&#xD;
//            }&#xD;
//        } catch (IOException ex) {&#xD;
//            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);&#xD;
//        }&#xD;
//        imp2.getWindow().setAlwaysOnTop(true);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HCwtkBUTEemIe6OhVnSywA" name="newexperiment" specification="_HCwGgBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    if (ij == null) {&#xD;
        ij = new ImageJ(NO_SHOW);&#xD;
    }&#xD;
    ImagePlus imp1 = WindowManager.getCurrentImage();&#xD;
    if (imp1 != null) {&#xD;
        imp1.changes = false;&#xD;
        imp1.close();&#xD;
    }&#xD;
    jtComparisons.setSelectionPath(null);&#xD;
    Menu m = new Menu();&#xD;
    disableall();&#xD;
    m.setUser(userid);&#xD;
    /// Change assistants&#xD;
    //        Image_Assistant a = new ij.workspace.GelJ.Assistant3.Image_Assistant(m, this);&#xD;
    Image_Assistant a = new ij.workspace.GelJ.Assistant4.Image_Assistant(m, this);&#xD;
    a.runAssistant();&#xD;
//        ImageAssistant a = new ImageAssistant(m, this);&#xD;
//        a.runAssistant();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HCyiwBUTEemIe6OhVnSywA" name="searchlanes" specification="_HCx7sBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    String s = jxsearchlane.getText();&#xD;
    ArrayList&lt;LaneDB> newlanes = searchlanesstring(lanes, s);&#xD;
    templanes = newlanes;&#xD;
    updatelanes(newlanes);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HC0_ABUTEemIe6OhVnSywA" name="disablenoexperiment" specification="_HC0X8BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //        jbEditExp.setEnabled(false);&#xD;
    jbDeleteExp.setEnabled(false);&#xD;
    jbSearchExp.setEnabled(false);&#xD;
    jbNewComp.setEnabled(false);&#xD;
    //        jbEditComp.setEnabled(false);&#xD;
    jbViewComp.setEnabled(false);&#xD;
    jbExportNewick.setEnabled(false);&#xD;
    jbSimMatrix.setEnabled(false);&#xD;
    jbDuplicateExp.setEnabled(false);&#xD;
    jbDuplicateComp.setEnabled(false);&#xD;
    //        jbDeleteComp.setEnabled(false);&#xD;
    jbSearchComp.setEnabled(false);&#xD;
    jbAddField.setEnabled(false);&#xD;
    jbdeletefield.setEnabled(false);&#xD;
    jbFindSimilarLanes.setEnabled(false);&#xD;
    jxsearchlane.setEnabled(false);&#xD;
    jbAdvancedSearchLanes.setEnabled(false);&#xD;
    //        jbViewLane.setEnabled(false);&#xD;
    jbEditlane.setEnabled(false);&#xD;
    //        jmiComparison.setEnabled(false);&#xD;
    //        jbAdd.setEnabled(false);&#xD;
    jbDeleteLane.setVisible(false);&#xD;
    jbDeleteLane.setEnabled(false);&#xD;
//        jbAll.setEnabled(false);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HC3bQBUTEemIe6OhVnSywA" name="enablelaneoptionsexperiment" specification="_HC20MBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    jbAddField.setEnabled(true);&#xD;
    jbdeletefield.setEnabled(true);&#xD;
    jbFindSimilarLanes.setEnabled(true);&#xD;
    jxsearchlane.setEnabled(true);&#xD;
    jbAdvancedSearchLanes.setEnabled(true);&#xD;
    //        jbViewLane.setEnabled(true);&#xD;
    jbEditlane.setEnabled(true);&#xD;
    jbShowMW.setEnabled(true);&#xD;
    //        jmiComparison.setEnabled(true);&#xD;
    //        jbAdd.setEnabled(true);&#xD;
    jbDeleteLane.setEnabled(false);&#xD;
    jbDeleteLane.setVisible(false);&#xD;
    jSave.setEnabled(true);&#xD;
//        jbAll.setEnabled(true);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HC3bQhUTEemIe6OhVnSywA" name="enablelaneoptionscomparison" specification="_HC3bQRUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    jbAddField.setEnabled(true);&#xD;
    jbdeletefield.setEnabled(true);&#xD;
    jbFindSimilarLanes.setEnabled(true);&#xD;
    jxsearchlane.setEnabled(true);&#xD;
    jbAdvancedSearchLanes.setEnabled(true);&#xD;
    //        jbViewLane.setEnabled(true);&#xD;
    jbEditlane.setEnabled(true);&#xD;
    jbShowMW.setEnabled(true);&#xD;
    //        jbAdd.setEnabled(false);&#xD;
    jbDeleteLane.setEnabled(true);&#xD;
    jbDeleteLane.setVisible(true);&#xD;
    jSave.setEnabled(true);&#xD;
//        jbAll.setEnabled(true);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HC4CURUTEemIe6OhVnSywA" name="disablelaneoptions" specification="_HC4CUBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    jbAddField.setEnabled(false);&#xD;
    jbdeletefield.setEnabled(false);&#xD;
    jbFindSimilarLanes.setEnabled(false);&#xD;
    jxsearchlane.setEnabled(false);&#xD;
    jbAdvancedSearchLanes.setEnabled(false);&#xD;
    //        jbViewLane.setEnabled(false);&#xD;
    jbEditlane.setEnabled(false);&#xD;
    jbShowMW.setEnabled(false);&#xD;
    //        jbAdd.setEnabled(false);&#xD;
    jbDeleteLane.setEnabled(false);&#xD;
    jbDeleteLane.setVisible(false);&#xD;
//        jbAll.setEnabled(false);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HC4pYRUTEemIe6OhVnSywA" name="disablenocomparison" specification="_HC4pYBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //        jbEditComp.setEnabled(false);&#xD;
    jbViewComp.setEnabled(false);&#xD;
    jbExportNewick.setEnabled(false);&#xD;
    jbSimMatrix.setEnabled(false);&#xD;
    jbDuplicateComp.setEnabled(false);&#xD;
    //        jbDeleteComp.setEnabled(false);&#xD;
    jbSearchComp.setEnabled(false);&#xD;
    jSave.setEnabled(false);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HC5QcBUTEemIe6OhVnSywA" name="enablecomparison" specification="_HC4pYhUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //        jbEditComp.setEnabled(true);&#xD;
    jbViewComp.setEnabled(true);&#xD;
    jbExportNewick.setEnabled(true);&#xD;
    jbSimMatrix.setEnabled(true);&#xD;
    jbDuplicateComp.setEnabled(true);&#xD;
    //        jbDeleteComp.setEnabled(true);&#xD;
    jbSearchComp.setEnabled(true);&#xD;
    jSave.setEnabled(true);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HC6ekBUTEemIe6OhVnSywA" name="enablefromopenornewstudy" specification="_HC5QcRUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //        jmEdit.setEnabled(true);&#xD;
    //        jMenu3.setEnabled(true);&#xD;
    jmOpenStudy.setEnabled(true);&#xD;
    jmiCloseStudy.setEnabled(true);&#xD;
    jbNewExp.setEnabled(true);&#xD;
    jbImport.setEnabled(true);&#xD;
    jbimportexpfile.setEnabled(true);&#xD;
    //        jbEditExp.setEnabled(true);&#xD;
    jbDeleteExp.setEnabled(true);&#xD;
    jbSearchExp.setEnabled(true);&#xD;
    jbDuplicateExp.setEnabled(true);&#xD;
    jbNewComp.setEnabled(true);&#xD;
    //        jbEditComp.setEnabled(true);&#xD;
    jbViewComp.setEnabled(true);&#xD;
    jbExportNewick.setEnabled(true);&#xD;
    jbSimMatrix.setEnabled(true);&#xD;
    jbDuplicateComp.setEnabled(true);&#xD;
    //        jbDeleteComp.setEnabled(true);&#xD;
    jbSearchComp.setEnabled(true);&#xD;
    jmiUnfinished.setEnabled(true);&#xD;
    jmiExportGenetics.setEnabled(true);&#xD;
    jMItransform.setEnabled(true);&#xD;
    jmiAddPopulationField.setEnabled(true);&#xD;
    jAnnotateItem.setEnabled(true);&#xD;
    jmMarkers.setEnabled(true);&#xD;
    jmannotate.setEnabled(true);&#xD;
    jmiaddmarker.setEnabled(true);&#xD;
    jAnnotateItem.setEnabled(true);&#xD;
    jSave.setEnabled(true);&#xD;
    //        jbAll.setEnabled(true);&#xD;
    //        jbAddField.setEnabled(true);&#xD;
    //        jbdeletefield.setEnabled(true);&#xD;
    //        jbFindSimilarLanes.setEnabled(true);&#xD;
    //        jxsearchlane.setEnabled(true);&#xD;
    //        jbAdvancedSearchLanes.setEnabled(true);&#xD;
    //        jbViewLane.setEnabled(true);&#xD;
    //        jbEditlane.setEnabled(true);&#xD;
    //        jmiNewExperiment.setEnabled(true);&#xD;
    //        jmiComparison.setEnabled(true);&#xD;
    jmiDeleteStudy.setEnabled(true);&#xD;
    jmiEditStudy.setEnabled(true);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HC860BUTEemIe6OhVnSywA" name="disablefromclosestudy" specification="_HC8TwBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //        jmEdit.setEnabled(false);&#xD;
    jmiCloseStudy.setEnabled(false);&#xD;
    jbNewExp.setEnabled(false);&#xD;
    jbImport.setEnabled(false);&#xD;
    jbimportexpfile.setEnabled(false);&#xD;
    //        jbEditExp.setEnabled(false);&#xD;
    jbDeleteExp.setEnabled(false);&#xD;
    jbSearchExp.setEnabled(false);&#xD;
    jbNewComp.setEnabled(false);&#xD;
    jbDuplicateExp.setEnabled(false);&#xD;
    //        jbEditComp.setEnabled(false);&#xD;
    jbViewComp.setEnabled(false);&#xD;
    jbExportNewick.setEnabled(false);&#xD;
    jbSimMatrix.setEnabled(false);&#xD;
    jbDuplicateComp.setEnabled(false);&#xD;
    //        jbDeleteComp.setEnabled(false);&#xD;
    jbSearchComp.setEnabled(false);&#xD;
    jmiUnfinished.setEnabled(false);&#xD;
    jmiExportGenetics.setEnabled(false);&#xD;
    jMItransform.setEnabled(true);&#xD;
    jmiAddPopulationField.setEnabled(false);&#xD;
    jAnnotateItem.setEnabled(false);&#xD;
    jmannotate.setEnabled(false);&#xD;
    jmMarkers.setEnabled(false);&#xD;
    //        jbAll.setEnabled(false);&#xD;
    //        jmiNewExperiment.setEnabled(false);&#xD;
    //        jmiComparison.setEnabled(false);&#xD;
    jtExperiments.setModel(null);&#xD;
    jtComparisons.setModel(null);&#xD;
    jtExperiments.setRootVisible(false);&#xD;
    jtComparisons.setRootVisible(false);&#xD;
    jmiDeleteStudy.setEnabled(false);&#xD;
    jbAddField.setEnabled(false);&#xD;
    jbdeletefield.setEnabled(false);&#xD;
    jbFindSimilarLanes.setEnabled(false);&#xD;
    jxsearchlane.setEnabled(false);&#xD;
    jbAdvancedSearchLanes.setEnabled(false);&#xD;
    //        jbViewLane.setEnabled(false);&#xD;
    jbEditlane.setEnabled(false);&#xD;
    jbShowMW.setEnabled(false);&#xD;
    //        jbAdd.setEnabled(false);&#xD;
    jmiaddmarker.setEnabled(false);&#xD;
    jbDeleteLane.setEnabled(false);&#xD;
    jbDeleteLane.setVisible(false);&#xD;
    jmiEditStudy.setEnabled(false);&#xD;
    jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(&quot;&quot;));&#xD;
    cleanlanes();&#xD;
    double scale = jXImageView2.getScale();&#xD;
    jXImageView2.setImage(new BufferedImage(300, 200, TYPE_INT_ARGB));&#xD;
    jXImageView2.setScale(scale);&#xD;
    jToolBar3.setVisible(false);&#xD;
    this.setTitle(&quot;GelJDB&quot;);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HC9h4RUTEemIe6OhVnSywA" name="disableall" specification="_HC9h4BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //        jmEdit.setEnabled(false);&#xD;
    jmiCloseStudy.setEnabled(false);&#xD;
    jbNewExp.setEnabled(false);&#xD;
    jbImport.setEnabled(false);&#xD;
    jbimportexpfile.setEnabled(false);&#xD;
    //        jbEditExp.setEnabled(false);&#xD;
    jbDeleteExp.setEnabled(false);&#xD;
    jbSearchExp.setEnabled(false);&#xD;
    jbNewComp.setEnabled(false);&#xD;
    jbDuplicateExp.setEnabled(false);&#xD;
    //        jbEditComp.setEnabled(false);&#xD;
    jbViewComp.setEnabled(false);&#xD;
    jbExportNewick.setEnabled(false);&#xD;
    jbSimMatrix.setEnabled(false);&#xD;
    jbDuplicateComp.setEnabled(false);&#xD;
    //        jbDeleteComp.setEnabled(false);&#xD;
    jbSearchComp.setEnabled(false);&#xD;
    jmiEditStudy.setEnabled(false);&#xD;
    //        jbAll.setEnabled(false);&#xD;
    jbAddField.setEnabled(false);&#xD;
    jbdeletefield.setEnabled(false);&#xD;
    jbFindSimilarLanes.setEnabled(false);&#xD;
    jxsearchlane.setEnabled(false);&#xD;
    jbAdvancedSearchLanes.setEnabled(false);&#xD;
    //        jmiNewExperiment.setEnabled(false);&#xD;
    //        jmiComparison.setEnabled(false);&#xD;
    //        jmNew.setEnabled(false);&#xD;
    jmOpenStudy.setEnabled(false);&#xD;
    jmiExit.setEnabled(false);&#xD;
    jmiDeleteStudy.setEnabled(false);&#xD;
    //        jbViewLane.setEnabled(false);&#xD;
    jbEditlane.setEnabled(false);&#xD;
    jbShowMW.setEnabled(false);&#xD;
    jmiEditStudy.setEnabled(false);&#xD;
    jmiUnfinished.setEnabled(false);&#xD;
    jmiExportGenetics.setEnabled(false);&#xD;
    jMItransform.setEnabled(true);&#xD;
    jmiAddPopulationField.setEnabled(false);&#xD;
    jAnnotateItem.setEnabled(false);&#xD;
    jmMarkers.setEnabled(false);&#xD;
    jmannotate.setEnabled(false);&#xD;
    jAnnotateItem.setEnabled(false);&#xD;
    jSave.setEnabled(false);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HDAlMBUTEemIe6OhVnSywA" name="enableall" specification="_HC_XEBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //        jmEdit.setEnabled(true);&#xD;
    jmiCloseStudy.setEnabled(true);&#xD;
    jbNewExp.setEnabled(true);&#xD;
    jbImport.setEnabled(true);&#xD;
    jbimportexpfile.setEnabled(true);&#xD;
    //        jbEditExp.setEnabled(true);&#xD;
    jbDeleteExp.setEnabled(true);&#xD;
    jbSearchExp.setEnabled(true);&#xD;
    jbDuplicateExp.setEnabled(true);&#xD;
    jbNewComp.setEnabled(true);&#xD;
    //        jbEditComp.setEnabled(true);&#xD;
    jbViewComp.setEnabled(true);&#xD;
    jbExportNewick.setEnabled(true);&#xD;
    jbSimMatrix.setEnabled(true);&#xD;
    jbDuplicateComp.setEnabled(true);&#xD;
    //        jbDeleteComp.setEnabled(true);&#xD;
    jbSearchComp.setEnabled(true);&#xD;
    jmiUnfinished.setEnabled(true);&#xD;
    jmiExportGenetics.setEnabled(true);&#xD;
    jMItransform.setEnabled(true);&#xD;
    jmiAddPopulationField.setEnabled(true);&#xD;
    jAnnotateItem.setEnabled(true);&#xD;
    jmannotate.setEnabled(true);&#xD;
    jmMarkers.setEnabled(true);&#xD;
    //        jbAll.setEnabled(true);&#xD;
    jbAddField.setEnabled(true);&#xD;
    jbdeletefield.setEnabled(true);&#xD;
    //        jbFindSimilarLanes.setEnabled(true);&#xD;
    jxsearchlane.setEnabled(true);&#xD;
    jbAdvancedSearchLanes.setEnabled(true);&#xD;
    //        jbViewLane.setEnabled(true);&#xD;
    //        jbEditlane.setEnabled(true);&#xD;
    //        jmiNewExperiment.setEnabled(true);&#xD;
    //        jmiComparison.setEnabled(true);&#xD;
    //        jmNew.setEnabled(true);&#xD;
    jmOpenStudy.setEnabled(true);&#xD;
    jmiExit.setEnabled(true);&#xD;
    jmiDeleteStudy.setEnabled(true);&#xD;
    jmiEditStudy.setEnabled(true);&#xD;
    jmiaddmarker.setEnabled(true);&#xD;
    jSave.setEnabled(true);&#xD;
    if (comparisons.isEmpty()) {&#xD;
        if (!experiments.isEmpty()) {&#xD;
            disablenocomparison();&#xD;
        } else {&#xD;
            disablenoexperiment();&#xD;
        }&#xD;
    } else {&#xD;
        enablecomparison();&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HDBzUBUTEemIe6OhVnSywA" name="editcomparison" specification="_HDBMQBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    DefaultMutableTreeNode node = (DefaultMutableTreeNode) jtComparisons.getLastSelectedPathComponent();&#xD;
    if (//Nothing is selected.     &#xD;
    node == null) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;Select a comparison to edit&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
        return;&#xD;
    }&#xD;
    Comparison comp = (Comparison) node.getUserObject();&#xD;
    NewComparison nc = comp.toNewComparison(experiments);&#xD;
    nc.setId(comp.getId());&#xD;
    ArrayList&lt;String> fields = new ArrayList&lt;>();&#xD;
    String[] names0 = { &quot;Genus&quot;, &quot;Species&quot;, &quot;Strain Number&quot;, &quot;Country&quot;, &quot;MLST&quot;, &quot;isMarker&quot;, &quot;Experiment&quot;, &quot;Comments&quot; };&#xD;
    for (String s : names0) {&#xD;
        fields.add(s);&#xD;
    }&#xD;
    for (String s : additionalfields) {&#xD;
        fields.add(s);&#xD;
    }&#xD;
    nc.setNonSelectedFields(fields);&#xD;
    Step1 step1 = new Step1(nc, true);&#xD;
    step1.setVisible(true);&#xD;
    updatecomparisons(true, true);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HDE2oBUTEemIe6OhVnSywA" name="createnewcomparison" specification="_HDDogBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    if (ij != null) {&#xD;
        ImagePlus imp1 = WindowManager.getCurrentImage();&#xD;
        if (imp1 != null) {&#xD;
            imp1.changes = false;&#xD;
            imp1.close();&#xD;
        }&#xD;
        ij.quit();&#xD;
        ij = null;&#xD;
    }&#xD;
    if (IJ.getInstance() != null) {&#xD;
        IJ.getInstance().quit();&#xD;
        ij = null;&#xD;
    }&#xD;
    if (experiments.isEmpty()) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;Create an experiment first&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
    } else {&#xD;
        jtExperiments.setSelectionPath(null);&#xD;
        NewComparison nc = new NewComparison(studyid);&#xD;
        String[] vals = readcomparisonconfig();&#xD;
        nc.setNonSelectedExperiments(experiments);&#xD;
        ArrayList&lt;String> fields = new ArrayList&lt;>();&#xD;
        String[] names0 = { &quot;Genus&quot;, &quot;Species&quot;, &quot;Strain Number&quot;, &quot;Country&quot;, &quot;MLST&quot;, &quot;isMarker&quot;, &quot;Experiment&quot;, &quot;Comments&quot; };&#xD;
        for (String s : names0) {&#xD;
            fields.add(s);&#xD;
        }&#xD;
        for (String s : additionalfields) {&#xD;
            fields.add(s);&#xD;
        }&#xD;
        if (vals != null) {&#xD;
            nc.setSimilaritymethod(vals[0]);&#xD;
            nc.setLinkage(vals[1]);&#xD;
            nc.setTolerance(Double.parseDouble(vals[2]));&#xD;
            ArrayList&lt;String> selectedfields = new ArrayList&lt;String>();&#xD;
            for (int i = 3; i &lt; vals.length; i++) {&#xD;
                if (fields.contains(vals[i])) {&#xD;
                    fields.remove(vals[i]);&#xD;
                    selectedfields.add(vals[i]);&#xD;
                }&#xD;
            }&#xD;
            nc.setSelectedFields(selectedfields);&#xD;
        }&#xD;
        nc.setNonSelectedFields(fields);&#xD;
        Step1 step1 = new Step1(nc, false);&#xD;
        step1.setVisible(true);&#xD;
        updatecomparisons(true, true);&#xD;
        if (!comparisons.isEmpty()) {&#xD;
            enablecomparison();&#xD;
        }&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HDHS4BUTEemIe6OhVnSywA" name="selectComparison" specification="_HDGEwBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Enumeration&lt;DefaultMutableTreeNode> e = rootNodeComp.depthFirstEnumeration();&#xD;
    while (e.hasMoreElements()) {&#xD;
        DefaultMutableTreeNode node = e.nextElement();&#xD;
        if (!node.getUserObject().toString().equals(&quot;Comparisons&quot;)) {&#xD;
            if (((Comparison) node.getUserObject()).getId() == id) {&#xD;
                jtComparisons.setSelectionPath(new TreePath(node.getPath()));&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HDK9QBUTEemIe6OhVnSywA" name="selectExperiment" specification="_HDJIEBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Enumeration&lt;DefaultMutableTreeNode> e = rootNode.depthFirstEnumeration();&#xD;
    while (e.hasMoreElements()) {&#xD;
        DefaultMutableTreeNode node = e.nextElement();&#xD;
        if (!node.getUserObject().toString().equals(&quot;Experiments&quot;)) {&#xD;
            if (((Experiment) node.getUserObject()).getId() == id) {&#xD;
                jtExperiments.setSelectionPath(new TreePath(node.getPath()));&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HDNZgBUTEemIe6OhVnSywA" name="duplicatecomparison" specification="_HDMycBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    TreePath currentSelection = jtComparisons.getSelectionPath();&#xD;
    if (currentSelection != null) {&#xD;
        DefaultMutableTreeNode currentNode = (DefaultMutableTreeNode) (currentSelection.getLastPathComponent());&#xD;
        MutableTreeNode parent = (MutableTreeNode) (currentNode.getParent());&#xD;
        if (parent != null) {&#xD;
            Comparison comp = (Comparison) currentNode.getUserObject();&#xD;
            comp.setId(lastComparisonid());&#xD;
            comp.setName(comp.getName() + &quot;-1&quot;);&#xD;
            insertComparison(comp);&#xD;
            updatecomparisons(true, true);&#xD;
        }&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HGhMMBUTEemIe6OhVnSywA" name="valueChanged" specification="_HGev8BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    // Selection of a experiments node&#xD;
    if (jtExperiments.getModel() == null) {&#xD;
        activateemptytoolbar();&#xD;
        double scale = jXImageView2.getScale();&#xD;
        jXImageView2.setImage(new BufferedImage(300, 200, TYPE_INT_ARGB));&#xD;
        jXImageView2.setScale(scale);&#xD;
        return;&#xD;
    }&#xD;
    if (jtExperiments.getModel().toString().equals(((JTree) e.getSource()).getModel().toString()) &amp;&amp; jtExperiments.getSelectionPath() != null) {&#xD;
        DefaultMutableTreeNode node = (DefaultMutableTreeNode) jtExperiments.getLastSelectedPathComponent();&#xD;
        if (//Nothing is selected.     &#xD;
        node == null) {&#xD;
            activateemptytoolbar();&#xD;
            double scale = jXImageView2.getScale();&#xD;
            jXImageView2.setImage(new BufferedImage(300, 200, TYPE_INT_ARGB));&#xD;
            jXImageView2.setScale(scale);&#xD;
            return;&#xD;
        }&#xD;
        Experiment experiment = (Experiment) node.getUserObject();&#xD;
        // Here&#xD;
        String image = System.getProperty(&quot;user.dir&quot;) + &quot;/GelJDBImages/&quot; + experiment.getStudy().getId() + &quot;/&quot; + experiment.getUser().getUsername() + &quot;/experiments/&quot; + experiment.getId() + &quot;/&quot; + experiment.getImagename();&#xD;
        if (image.endsWith(&quot;.TIFF&quot;)) {&#xD;
            image = image.replace(&quot;.TIFF&quot;, &quot;.tif&quot;);&#xD;
        }&#xD;
        if (image.endsWith(&quot;.TIF&quot;)) {&#xD;
            image = image.replace(&quot;.TIF&quot;, &quot;.tif&quot;);&#xD;
        }&#xD;
        if (image.endsWith(&quot;.tif&quot;) || image.endsWith(&quot;.tiff&quot;)) {&#xD;
            FileSeekableStream stream = null;&#xD;
            try {&#xD;
                stream = new FileSeekableStream(image);&#xD;
                TIFFDecodeParam decodeParam = new TIFFDecodeParam();&#xD;
                decodeParam.setDecodePaletteAsShorts(true);&#xD;
                ParameterBlock params = new ParameterBlock();&#xD;
                params.add(stream);&#xD;
                RenderedOp image1 = JAI.create(&quot;tiff&quot;, params);&#xD;
                BufferedImage img = image1.getAsBufferedImage();&#xD;
                double scale = jXImageView2.getScale();&#xD;
                jXImageView2.setImage(img);&#xD;
                jXImageView2.setEditable(false);&#xD;
                jXImageView2.setDragEnabled(false);&#xD;
                jXImageView2.setScale(scale);&#xD;
            } catch (IOException ex) {&#xD;
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);&#xD;
            } finally {&#xD;
                try {&#xD;
                    stream.close();&#xD;
                } catch (IOException ex) {&#xD;
                    Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);&#xD;
                }&#xD;
            }&#xD;
        } else {&#xD;
            File f = new File(image);&#xD;
            try {&#xD;
                double scale = jXImageView2.getScale();&#xD;
                jXImageView2.setImage(f);&#xD;
                jXImageView2.setEditable(false);&#xD;
                jXImageView2.setDragEnabled(false);&#xD;
                jXImageView2.setScale(scale);&#xD;
            } catch (IOException ex) {&#xD;
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);&#xD;
            }&#xD;
        }&#xD;
        lanes = getlanesexperiment(experiment.getId(), true);&#xD;
        templanes = lanes;&#xD;
        ArrayList&lt;String> info = getAdditionalFieldsExp(experiment.getId());&#xD;
        for (String i : info) {&#xD;
            if (!additionalfields.contains(i)) {&#xD;
                additionalfields.add(i);&#xD;
            }&#xD;
        }&#xD;
        updatelanes(false);&#xD;
        enablelaneoptionsexperiment();&#xD;
        activateexperimentstoolbar();&#xD;
        jtComparisons.setSelectionPath(null);&#xD;
    }&#xD;
    if (jtComparisons.getModel() == null) {&#xD;
        activateemptytoolbar();&#xD;
        double scale = jXImageView2.getScale();&#xD;
        jXImageView2.setImage(new BufferedImage(300, 200, TYPE_INT_ARGB));&#xD;
        jXImageView2.setScale(scale);&#xD;
        return;&#xD;
    }&#xD;
    // Selection of a comparison node&#xD;
    if (jtComparisons.getModel().toString().equals(((JTree) e.getSource()).getModel().toString()) &amp;&amp; jtComparisons.getSelectionPath() != null) {&#xD;
        DefaultMutableTreeNode node = (DefaultMutableTreeNode) jtComparisons.getLastSelectedPathComponent();&#xD;
        if (//Nothing is selected.     &#xD;
        node == null) {&#xD;
            activateemptytoolbar();&#xD;
            double scale = jXImageView2.getScale();&#xD;
            jXImageView2.setImage(new BufferedImage(300, 200, TYPE_INT_ARGB));&#xD;
            jXImageView2.setScale(scale);&#xD;
            return;&#xD;
        }&#xD;
        Comparison comp = (Comparison) node.getUserObject();&#xD;
        // Here&#xD;
        String image = System.getProperty(&quot;user.dir&quot;) + &quot;/GelJDBImages/&quot; + comp.getStudy().getId() + &quot;/&quot; + comp.getStudy().getUser().getUsername() + &quot;/comparisons/&quot; + comp.getId() + &quot;/dendrogram.tif&quot;;&#xD;
        File f = new File(image);&#xD;
        if (f.exists()) {&#xD;
            if (image.endsWith(&quot;.tif&quot;) || image.endsWith(&quot;.tiff&quot;)) {&#xD;
                FileSeekableStream stream = null;&#xD;
                try {&#xD;
                    stream = new FileSeekableStream(image);&#xD;
                    TIFFDecodeParam decodeParam = new TIFFDecodeParam();&#xD;
                    decodeParam.setDecodePaletteAsShorts(true);&#xD;
                    ParameterBlock params = new ParameterBlock();&#xD;
                    params.add(stream);&#xD;
                    RenderedOp image1 = JAI.create(&quot;tiff&quot;, params);&#xD;
                    BufferedImage img = image1.getAsBufferedImage();&#xD;
                    double scale = jXImageView2.getScale();&#xD;
                    jXImageView2.setImage(img);&#xD;
                    jXImageView2.setEditable(false);&#xD;
                    jXImageView2.setDragEnabled(false);&#xD;
                    jXImageView2.setScale(scale);&#xD;
                } catch (IOException ex) {&#xD;
                    Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);&#xD;
                } finally {&#xD;
                    try {&#xD;
                        stream.close();&#xD;
                    } catch (IOException ex) {&#xD;
                        Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);&#xD;
                    }&#xD;
                }&#xD;
            }&#xD;
        } else {&#xD;
            double scale = jXImageView2.getScale();&#xD;
            jXImageView2.setImage(new BufferedImage(300, 200, TYPE_INT_ARGB));&#xD;
            jXImageView2.setScale(scale);&#xD;
        }&#xD;
        lanes = getLanesComparison(comp.getId());&#xD;
        templanes = lanes;&#xD;
        updatelanes(false);&#xD;
        enablelaneoptionscomparison();&#xD;
        jtExperiments.setSelectionPath(null);&#xD;
        activatecomparisontoolbar();&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HGk2kBUTEemIe6OhVnSywA" name="getPlugins" specification="_HGhzQBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    ArrayList&lt;String> plugins = new ArrayList&lt;String>();&#xD;
    String workingdir = System.getProperty(&quot;user.dir&quot;) + &quot;/plugins/java/&quot;;&#xD;
    File directory = new File(workingdir);&#xD;
    String[] files = directory.list();&#xD;
    int nFiles = files.length;&#xD;
    if (nFiles != 0) {&#xD;
        for (int i = 0; i &lt; nFiles; i++) {&#xD;
            if (//encuentra los archivos .xls y almacena su ruta de acceso&#xD;
            files[i].contains(&quot;.java&quot;)) {&#xD;
                String name = files[i].substring(0, files[i].indexOf('.'));&#xD;
                plugins.add(name);&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    return plugins;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HGnS0BUTEemIe6OhVnSywA" name="loadPopulationGeneticsPlugins" specification="_HGmrwBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    ArrayList&lt;String> plugins = getPlugins();&#xD;
    for (int i = 0; i &lt; plugins.size(); i++) {&#xD;
        JMenuItem jrbmi = new JMenuItem();&#xD;
        jrbmi.setText(plugins.get(i));&#xD;
        final String plugin = plugins.get(i);&#xD;
        jrbmi.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
            public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
                try {&#xD;
                    int errorCode = com.sun.tools.javac.Main.compile(new String[] { &quot;-classpath&quot;, System.getProperty(&quot;user.dir&quot;) + &quot;/gelj_v2.jar&quot;, &quot;-d&quot;, System.getProperty(&quot;user.dir&quot;) + &quot;/plugins&quot;, System.getProperty(&quot;user.dir&quot;) + &quot;/plugins/java/&quot; + plugin + &quot;.java&quot; });&#xD;
                    File classesDir = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/plugins/&quot;);&#xD;
                    ClassLoader parentLoader = TransformerPlugin.class.getClassLoader();&#xD;
                    URLClassLoader loader1 = new URLClassLoader(new URL[] { classesDir.toURL() }, parentLoader);&#xD;
                    Class cls1 = loader1.loadClass(&quot;db.PopulationGenetic.&quot; + plugin);&#xD;
                    TransformerPlugin transformer = (TransformerPlugin) cls1.newInstance();&#xD;
                    OpenDialog od = new OpenDialog(&quot;Select a &quot; + plugin + &quot; file...&quot;);&#xD;
                    String name = od.getFileName();&#xD;
                    String path = od.getPath();&#xD;
                    if (name.contains(&quot;.&quot;)) {&#xD;
                        name = name.substring(0, name.indexOf(&quot;.&quot;));&#xD;
                    }&#xD;
                    transformer.transformAndExport(name, path);&#xD;
                } catch (MalformedURLException ex) {&#xD;
                    Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);&#xD;
                } catch (ClassNotFoundException ex) {&#xD;
                    Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);&#xD;
                } catch (InstantiationException ex) {&#xD;
                    Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);&#xD;
                } catch (IllegalAccessException ex) {&#xD;
                    Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);&#xD;
                } catch (TransformerException ex) {&#xD;
                    Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);&#xD;
                }&#xD;
            }&#xD;
        });&#xD;
        jMenu3.add(jrbmi);&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HHBigRUTEemIe6OhVnSywA" name="setLanes" specification="_HG-fMBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    this.lanes = lanes;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HHEl0BUTEemIe6OhVnSywA" name="getUserid" specification="_HHCwoBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    return userid;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HHI3QBUTEemIe6OhVnSywA" name="setUserid" specification="_HHHCEBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    this.userid = userid;&#xD;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G-vJMhUTEemIe6OhVnSywA" name="Main" visibility="public" method="_G-xlcRUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G-xlcBUTEemIe6OhVnSywA" name="userid">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G-xlchUTEemIe6OhVnSywA" name="initialiseexperimentstree" visibility="private" method="_G-yMgBUTEemIe6OhVnSywA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G-yMgRUTEemIe6OhVnSywA" name="initialisecomparisonstree" visibility="private" method="_G-yMghUTEemIe6OhVnSywA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G-yzkBUTEemIe6OhVnSywA" name="addExperiment" visibility="public" method="_G-0owRUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G-zaoBUTEemIe6OhVnSywA" direction="return"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G-zaoRUTEemIe6OhVnSywA" name="parent"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G-0BsBUTEemIe6OhVnSywA" name="child"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G-0owBUTEemIe6OhVnSywA" name="shouldBeVisible">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G-3sEBUTEemIe6OhVnSywA" name="addComparison" visibility="public" method="_G-9LoBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G-4TIBUTEemIe6OhVnSywA" direction="return"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G-5hQBUTEemIe6OhVnSywA" name="parent"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G-6vYBUTEemIe6OhVnSywA" name="child"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G-79gBUTEemIe6OhVnSywA" name="shouldBeVisible">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G-_A0BUTEemIe6OhVnSywA" name="updateexperiments" visibility="public" method="_G_CEIBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G_AO8BUTEemIe6OhVnSywA" name="all">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G_BdEBUTEemIe6OhVnSywA" name="clean">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G_D5UBUTEemIe6OhVnSywA" name="updatecomparisons" visibility="public" method="_G_GVkRUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G_FHcBUTEemIe6OhVnSywA" name="all">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G_GVkBUTEemIe6OhVnSywA" name="clean">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G_G8oBUTEemIe6OhVnSywA" name="clearComp" visibility="public" method="_G_G8oRUTEemIe6OhVnSywA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G_HjsBUTEemIe6OhVnSywA" name="clearExp" visibility="public" method="_G_HjsRUTEemIe6OhVnSywA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G_HjshUTEemIe6OhVnSywA" name="updateselectedlanes" visibility="public" method="_G_IKwBUTEemIe6OhVnSywA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G_Ix0BUTEemIe6OhVnSywA" name="cleanlanes" visibility="public" method="_G_Ix0RUTEemIe6OhVnSywA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G_JY4BUTEemIe6OhVnSywA" name="activateemptytoolbar" visibility="public" method="_G_JY4RUTEemIe6OhVnSywA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G_J_8BUTEemIe6OhVnSywA" name="activateexperimentstoolbar" visibility="public" method="_G_J_8RUTEemIe6OhVnSywA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G_J_8hUTEemIe6OhVnSywA" name="activatecomparisontoolbar" visibility="public" method="_G_KnABUTEemIe6OhVnSywA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G_LOEBUTEemIe6OhVnSywA" name="updatelanes" visibility="public" method="_G_L1IBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G_LOERUTEemIe6OhVnSywA" name="all">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G_McMBUTEemIe6OhVnSywA" name="updatelanes" visibility="public" method="_G_NqUBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G_NDQBUTEemIe6OhVnSywA" name="newlanes" type="_EHtRsBUTEemIe6OhVnSywA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_G_NDQRUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_G_NDQhUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G_NqURUTEemIe6OhVnSywA" name="generatecountriescombobox" visibility="private" method="_G_ORYBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G_NqUhUTEemIe6OhVnSywA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G_ORYRUTEemIe6OhVnSywA" name="tableChanged" visibility="public" method="_G_PfgBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G_O4cBUTEemIe6OhVnSywA" name="e"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G_PfgRUTEemIe6OhVnSywA" name="initComponents" visibility="private" method="_G_hzYBUTEemIe6OhVnSywA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G_jokBUTEemIe6OhVnSywA" name="jbDeleteExpActionPerformed" visibility="private" method="_G_mE0BUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G_k2sBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G_n6ABUTEemIe6OhVnSywA" name="jbDuplicateCompActionPerformed" visibility="private" method="_G_qWQBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G_pIIBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G_rkYBUTEemIe6OhVnSywA" name="deletecomp" visibility="private" method="_G_sygBUTEemIe6OhVnSywA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G_uAoBUTEemIe6OhVnSywA" name="deleteexp" visibility="private" method="_G_vOwBUTEemIe6OhVnSywA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G_xD8BUTEemIe6OhVnSywA" name="jxsearchlaneKeyReleased" visibility="private" method="_G_y5IBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G_ySEBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G_0uUBUTEemIe6OhVnSywA" name="jbAddFieldActionPerformed" visibility="private" method="_G_2jgBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G_1VYBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G_4YsBUTEemIe6OhVnSywA" name="jbdeletefieldActionPerformed" visibility="private" method="_G_608BUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G_5m0BUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G_8qIBUTEemIe6OhVnSywA" name="showall" visibility="private" method="_G_94QBUTEemIe6OhVnSywA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G__tcBUTEemIe6OhVnSywA" name="jbAdvancedSearchLanesActionPerformed" visibility="private" method="_HABioBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HAA7kBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HACwwBUTEemIe6OhVnSywA" name="addlanetocomparison" visibility="private" method="_HAD-4BUTEemIe6OhVnSywA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HAF0EBUTEemIe6OhVnSywA" name="jbDeleteLaneActionPerformed" visibility="private" method="_HAIQUBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HAHpQBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HAKFgBUTEemIe6OhVnSywA" name="jbSearchCompActionPerformed" visibility="private" method="_HAL6sBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HALToBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HAOW8BUTEemIe6OhVnSywA" name="jbNewCompActionPerformed" visibility="private" method="_HAQzMBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HAPlEBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HASBUBUTEemIe6OhVnSywA" name="jxsearchlaneActionPerformed" visibility="private" method="_HAT2gBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HATPcBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HAVrsBUTEemIe6OhVnSywA" name="jmiExitActionPerformed" visibility="private" method="_HAYH8BUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HAW50BUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HAakMBUTEemIe6OhVnSywA" name="jmiNewStudyActionPerformed" visibility="private" method="_HAdAcBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HAbyUBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HAfcsBUTEemIe6OhVnSywA" name="jmiCloseStudyActionPerformed" visibility="private" method="_HAh48BUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HAgq0BUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HAkVMBUTEemIe6OhVnSywA" name="jmOpenStudyActionPerformed" visibility="private" method="_HAmxcBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HAljUBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HApNsBUTEemIe6OhVnSywA" name="jmiEditStudyActionPerformed" visibility="private" method="_HAsRABUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HArC4BUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HAuGMBUTEemIe6OhVnSywA" name="jmiDeleteStudyActionPerformed" visibility="private" method="_HAv7YBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HAutQBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HAxwkBUTEemIe6OhVnSywA" name="jbEditlaneActionPerformed" visibility="private" method="_HA0M0BUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HAy-sBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HA2CABUTEemIe6OhVnSywA" name="jbViewCompActionPerformed" visibility="private" method="_HA4eQBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HA3QIBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HA6TcBUTEemIe6OhVnSywA" name="jbFindSimilarLanesActionPerformed" visibility="private" method="_HA8IoBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HA7hkBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HA990BUTEemIe6OhVnSywA" name="jmiUnfinishedActionPerformed" visibility="private" method="_HBAaEBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HA_zABUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HBC2UBUTEemIe6OhVnSywA" name="jbeditexpcompActionPerformed" visibility="private" method="_HBFSkBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HBErgBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HBHHwBUTEemIe6OhVnSywA" name="jButton1ActionPerformed" visibility="private" method="_HBI88BUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HBIV4BUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HBKyIBUTEemIe6OhVnSywA" name="jButton2ActionPerformed" visibility="private" method="_HBMnUBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HBLZMBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HBOcgBUTEemIe6OhVnSywA" name="jMenuItem1ActionPerformed" visibility="private" method="_HBQ4wBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HBPqoBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HBTVABUTEemIe6OhVnSywA" name="jMenuItem2ActionPerformed" visibility="private" method="_HBVxQBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HBUjIBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HBY0kBUTEemIe6OhVnSywA" name="jbexportActionPerformed" visibility="private" method="_HBb34BUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HBapwBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HBeUIBUTEemIe6OhVnSywA" name="jbmodifycompActionPerformed" visibility="private" method="_HBgJUBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HBfiQBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HBilkBUTEemIe6OhVnSywA" name="jbdeletecompActionPerformed" visibility="private" method="_HBlB0BUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HBjzsBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HBm3ABUTEemIe6OhVnSywA" name="jAnnotateItemActionPerformed" visibility="private" method="_HBoFIBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HBneEBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HBqhYBUTEemIe6OhVnSywA" name="jmiaddmarkerActionPerformed" visibility="private" method="_HBs9oBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HBrvgBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HBuy0BUTEemIe6OhVnSywA" name="jMenuItem5ActionPerformed" visibility="private" method="_HBx2IBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HBwoABUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HBzrUBUTEemIe6OhVnSywA" name="jMenuItem6ActionPerformed" visibility="private" method="_HB2HkBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HB1ggBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HB38wBUTEemIe6OhVnSywA" name="jMenuItem7ActionPerformed" visibility="private" method="_HB4j0RUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HB4j0BUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HB4j0hUTEemIe6OhVnSywA" name="jMenuItem8ActionPerformed" visibility="private" method="_HB5K4RUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HB5K4BUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HB5x8BUTEemIe6OhVnSywA" name="jSaveActionPerformed" visibility="private" method="_HB5x8hUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HB5x8RUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HB6ZABUTEemIe6OhVnSywA" name="jbShowMWActionPerformed" visibility="private" method="_HB6ZAhUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HB6ZARUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HB7AEBUTEemIe6OhVnSywA" name="jMenuMemoryActionPerformed" visibility="private" method="_HB7nIBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HB7AERUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HB7nIRUTEemIe6OhVnSywA" name="jbExportNewickActionPerformed" visibility="private" method="_HB8OMRUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HB8OMBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HB9cUBUTEemIe6OhVnSywA" name="jbSimMatrixActionPerformed" visibility="private" method="_HB_4kBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HB-qcBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HCBtwBUTEemIe6OhVnSywA" name="jmiExportGeneticsActionPerformed" visibility="private" method="_HCDi8BUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HCC74BUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HCExEBUTEemIe6OhVnSywA" name="jmiAddPopulationFieldActionPerformed" visibility="private" method="_HCGmQBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HCFYIBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HCH0YBUTEemIe6OhVnSywA" name="jbSearchExpActionPerformed" visibility="private" method="_HCJpkBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HCIbcBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HCLewBUTEemIe6OhVnSywA" name="jbImportActionPerformed" visibility="private" method="_HCOiEBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HCNT8BUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HCPJIBUTEemIe6OhVnSywA" name="jbimportexpfileActionPerformed" visibility="private" method="_HCSMcBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HCQXQBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HCUosBUTEemIe6OhVnSywA" name="jbDuplicateExpActionPerformed" visibility="private" method="_HCWd4BUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HCV20BUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HCYTEBUTEemIe6OhVnSywA" name="jbNewExpActionPerformed" visibility="private" method="_HCaIQBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HCZhMBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HCavUBUTEemIe6OhVnSywA" name="jMItransformActionPerformed" visibility="private" method="_HCbWYRUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HCbWYBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HCb9cBUTEemIe6OhVnSywA" name="duplicateexperiment" visibility="private" method="_HCb9cRUTEemIe6OhVnSywA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HCckgBUTEemIe6OhVnSywA" name="continueunfinished" visibility="private" method="_HCgO4BUTEemIe6OhVnSywA" raisedException="_HCckgRUTEemIe6OhVnSywA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HCg18BUTEemIe6OhVnSywA" name="findsimilarlanes" visibility="private" method="_HChdABUTEemIe6OhVnSywA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HCjSMBUTEemIe6OhVnSywA" name="viewcomparison" visibility="private" method="_HCj5QBUTEemIe6OhVnSywA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HClHYBUTEemIe6OhVnSywA" name="editexperiment" visibility="private" method="_HClucBUTEemIe6OhVnSywA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HCnjoBUTEemIe6OhVnSywA" name="editlane" visibility="private" method="_HCpY0BUTEemIe6OhVnSywA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HCrOABUTEemIe6OhVnSywA" name="showMWofLane" visibility="private" method="_HCscIBUTEemIe6OhVnSywA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HCtqQBUTEemIe6OhVnSywA" name="viewlane" visibility="private" method="_HCuRUBUTEemIe6OhVnSywA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HCwGgBUTEemIe6OhVnSywA" name="newexperiment" visibility="private" method="_HCwtkBUTEemIe6OhVnSywA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HCx7sBUTEemIe6OhVnSywA" name="searchlanes" visibility="private" method="_HCyiwBUTEemIe6OhVnSywA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HC0X8BUTEemIe6OhVnSywA" name="disablenoexperiment" visibility="private" method="_HC0_ABUTEemIe6OhVnSywA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HC20MBUTEemIe6OhVnSywA" name="enablelaneoptionsexperiment" visibility="private" method="_HC3bQBUTEemIe6OhVnSywA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HC3bQRUTEemIe6OhVnSywA" name="enablelaneoptionscomparison" visibility="private" method="_HC3bQhUTEemIe6OhVnSywA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HC4CUBUTEemIe6OhVnSywA" name="disablelaneoptions" visibility="private" method="_HC4CURUTEemIe6OhVnSywA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HC4pYBUTEemIe6OhVnSywA" name="disablenocomparison" visibility="private" method="_HC4pYRUTEemIe6OhVnSywA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HC4pYhUTEemIe6OhVnSywA" name="enablecomparison" visibility="private" method="_HC5QcBUTEemIe6OhVnSywA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HC5QcRUTEemIe6OhVnSywA" name="enablefromopenornewstudy" visibility="private" method="_HC6ekBUTEemIe6OhVnSywA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HC8TwBUTEemIe6OhVnSywA" name="disablefromclosestudy" visibility="private" method="_HC860BUTEemIe6OhVnSywA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HC9h4BUTEemIe6OhVnSywA" name="disableall" visibility="private" method="_HC9h4RUTEemIe6OhVnSywA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HC_XEBUTEemIe6OhVnSywA" name="enableall" visibility="public" method="_HDAlMBUTEemIe6OhVnSywA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HDBMQBUTEemIe6OhVnSywA" name="editcomparison" visibility="public" method="_HDBzUBUTEemIe6OhVnSywA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HDDogBUTEemIe6OhVnSywA" name="createnewcomparison" visibility="public" method="_HDE2oBUTEemIe6OhVnSywA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HDGEwBUTEemIe6OhVnSywA" name="selectComparison" visibility="public" method="_HDHS4BUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HDGEwRUTEemIe6OhVnSywA" name="id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HDJIEBUTEemIe6OhVnSywA" name="selectExperiment" visibility="public" method="_HDK9QBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HDJvIBUTEemIe6OhVnSywA" name="id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HDMycBUTEemIe6OhVnSywA" name="duplicatecomparison" visibility="private" method="_HDNZgBUTEemIe6OhVnSywA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HGev8BUTEemIe6OhVnSywA" name="valueChanged" visibility="public" method="_HGhMMBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HGf-EBUTEemIe6OhVnSywA" name="e"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HGhzQBUTEemIe6OhVnSywA" name="getPlugins" visibility="private" method="_HGk2kBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HGjBYBUTEemIe6OhVnSywA" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_HGkPgBUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HGkPgRUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HGmrwBUTEemIe6OhVnSywA" name="loadPopulationGeneticsPlugins" visibility="private" method="_HGnS0BUTEemIe6OhVnSywA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HG-fMBUTEemIe6OhVnSywA" name="setLanes" visibility="public" method="_HHBigRUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HG_tUBUTEemIe6OhVnSywA" name="lanes" type="_EHtRsBUTEemIe6OhVnSywA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_HHA7cBUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HHBigBUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HHCwoBUTEemIe6OhVnSywA" name="getUserid" visibility="public" method="_HHEl0BUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HHDXsBUTEemIe6OhVnSywA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HHHCEBUTEemIe6OhVnSywA" name="setUserid" visibility="public" method="_HHI3QBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HHIQMBUTEemIe6OhVnSywA" name="userid">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <nestedClassifier xmi:type="uml:Class" xmi:id="_HGpIABUTEemIe6OhVnSywA" name="MyTreeModelListener">
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HGy5ABUTEemIe6OhVnSywA" name="treeNodesChanged" specification="_HGwcwBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    DefaultMutableTreeNode node;&#xD;
    node = (DefaultMutableTreeNode) (e.getTreePath().getLastPathComponent());&#xD;
    /*
             * If the event lists children, then the changed
             * node is the child of the node we've already
             * gotten.  Otherwise, the changed node and the
             * specified node are the same.
             */&#xD;
    int index = e.getChildIndices()[0];&#xD;
    node = (DefaultMutableTreeNode) (node.getChildAt(index));&#xD;
    System.out.println(&quot;The user has finished editing the node.&quot;);&#xD;
    System.out.println(&quot;New value: &quot; + node.getUserObject());&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HG18UBUTEemIe6OhVnSywA" name="treeNodesInserted" specification="_HG0HIBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HG4_oBUTEemIe6OhVnSywA" name="treeNodesRemoved" specification="_HG3KcBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HG8qABUTEemIe6OhVnSywA" name="treeStructureChanged" specification="_HG600BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
</body>
              </ownedBehavior>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_HGwcwBUTEemIe6OhVnSywA" name="treeNodesChanged" visibility="public" method="_HGy5ABUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_HGxq4BUTEemIe6OhVnSywA" name="e"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_HG0HIBUTEemIe6OhVnSywA" name="treeNodesInserted" visibility="public" method="_HG18UBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_HG0uMBUTEemIe6OhVnSywA" name="e"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_HG3KcBUTEemIe6OhVnSywA" name="treeNodesRemoved" visibility="public" method="_HG4_oBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_HG4YkBUTEemIe6OhVnSywA" name="e"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_HG600BUTEemIe6OhVnSywA" name="treeStructureChanged" visibility="public" method="_HG8qABUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_HG8C8BUTEemIe6OhVnSywA" name="e"/>
              </ownedOperation>
            </nestedClassifier>
            <nestedClassifier xmi:type="uml:Class" xmi:id="_HHKscBUTEemIe6OhVnSywA" name="ExperimentsRenderer">
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HHSoQBUTEemIe6OhVnSywA" name="ExperimentsRenderer" specification="_HHO94BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HHhRwBUTEemIe6OhVnSywA" name="getTreeCellRendererComponent" specification="_HHVEgBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    super.getTreeCellRendererComponent(tree, value, sel, expanded, leaf, row, hasFocus);&#xD;
    if (leaf) {&#xD;
        DefaultMutableTreeNode node = (DefaultMutableTreeNode) value;&#xD;
        if (node.getUserObject() instanceof String) {&#xD;
            setToolTipText(null);&#xD;
        } else {&#xD;
            Experiment experiment = (Experiment) node.getUserObject();&#xD;
            String toolTip = experiment.printInfo();&#xD;
            setToolTipText(toolTip);&#xD;
        }&#xD;
    } else {&#xD;
        setToolTipText(null);&#xD;
    }&#xD;
    return this;&#xD;
</body>
              </ownedBehavior>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_HHO94BUTEemIe6OhVnSywA" name="ExperimentsRenderer" visibility="public" method="_HHSoQBUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_HHVEgBUTEemIe6OhVnSywA" name="getTreeCellRendererComponent" visibility="public" method="_HHhRwBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_HHZV8BUTEemIe6OhVnSywA" direction="return"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_HHakEBUTEemIe6OhVnSywA" name="tree"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_HHbLIBUTEemIe6OhVnSywA" name="value"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_HHcZQBUTEemIe6OhVnSywA" name="sel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_HHdnYBUTEemIe6OhVnSywA" name="expanded">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_HHe1gBUTEemIe6OhVnSywA" name="leaf">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_HHfckBUTEemIe6OhVnSywA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_HHgqsBUTEemIe6OhVnSywA" name="hasFocus">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
              </ownedOperation>
            </nestedClassifier>
            <nestedClassifier xmi:type="uml:Class" xmi:id="_HHjG8BUTEemIe6OhVnSywA" name="ComparisonRenderer">
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HHomgBUTEemIe6OhVnSywA" name="ComparisonRenderer" specification="_HHk8IBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HH0zwBUTEemIe6OhVnSywA" name="getTreeCellRendererComponent" specification="_HHqbsBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    super.getTreeCellRendererComponent(tree, value, sel, expanded, leaf, row, hasFocus);&#xD;
    if (leaf) {&#xD;
        DefaultMutableTreeNode node = (DefaultMutableTreeNode) value;&#xD;
        if (node.getUserObject() instanceof String) {&#xD;
            setToolTipText(null);&#xD;
        } else {&#xD;
            Comparison comp = (Comparison) node.getUserObject();&#xD;
            String toolTip = comp.printInfo();&#xD;
            setToolTipText(toolTip);&#xD;
        }&#xD;
    } else {&#xD;
        setToolTipText(null);&#xD;
    }&#xD;
    return this;&#xD;
</body>
              </ownedBehavior>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_HHk8IBUTEemIe6OhVnSywA" name="ComparisonRenderer" visibility="public" method="_HHomgBUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_HHqbsBUTEemIe6OhVnSywA" name="getTreeCellRendererComponent" visibility="public" method="_HH0zwBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_HHrCwBUTEemIe6OhVnSywA" direction="return"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_HHs38BUTEemIe6OhVnSywA" name="tree"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_HHutIBUTEemIe6OhVnSywA" name="value"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_HHv7QBUTEemIe6OhVnSywA" name="sel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_HHwiUBUTEemIe6OhVnSywA" name="expanded">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_HHxwcBUTEemIe6OhVnSywA" name="leaf">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_HHyXgBUTEemIe6OhVnSywA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_HHzloBUTEemIe6OhVnSywA" name="hasFocus">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
              </ownedOperation>
            </nestedClassifier>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_Gvd-IBUTEemIe6OhVnSywA" name="FindSimilarities" visibility="public">
            <ownedAttribute xmi:type="uml:Property" xmi:id="_GvhogBUTEemIe6OhVnSywA" name="lane" visibility="private" type="_EHtRsBUTEemIe6OhVnSywA" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_GvsAkRUTEemIe6OhVnSywA" name="buttonGroup1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_GwhuEBUTEemIe6OhVnSywA" name="jLabel13" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_GwstMBUTEemIe6OhVnSywA" name="jLabel14" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_GwvwgBUTEemIe6OhVnSywA" name="jLabel15" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_GwwXkBUTEemIe6OhVnSywA" name="jLabel2" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_GwwXkRUTEemIe6OhVnSywA" name="jLabel6" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_Gww-oBUTEemIe6OhVnSywA" name="jLabel7" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_GwxlsBUTEemIe6OhVnSywA" name="jLabel9" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_Gw6IkBUTEemIe6OhVnSywA" name="jPanel2" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_GxAPMBUTEemIe6OhVnSywA" name="jSeparator2" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_GxBdUBUTEemIe6OhVnSywA" name="jSeparator3" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_GxG84BUTEemIe6OhVnSywA" name="jbShow" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_GxNDgBUTEemIe6OhVnSywA" name="jcbSimilarity" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_GxSjEBUTEemIe6OhVnSywA" name="jrball" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_GxU_UBUTEemIe6OhVnSywA" name="jrbcurrent" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_GxXbkBUTEemIe6OhVnSywA" name="jrbuser" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_Gxc7IBUTEemIe6OhVnSywA" name="jtfSim" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_GxewUBUTEemIe6OhVnSywA" name="jtfTolerance" visibility="private" isUnique="false"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GvlS4RUTEemIe6OhVnSywA" name="FindSimilarities" specification="_GviPkBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    initComponents();&#xD;
    this.lane = lane;&#xD;
    this.setModal(true);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GvmhABUTEemIe6OhVnSywA" name="initComponents" specification="_GvlS4hUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    buttonGroup1 = new javax.swing.ButtonGroup();&#xD;
    jbShow = new javax.swing.JButton();&#xD;
    jPanel2 = new javax.swing.JPanel();&#xD;
    jLabel6 = new javax.swing.JLabel();&#xD;
    jSeparator3 = new javax.swing.JSeparator();&#xD;
    jLabel7 = new javax.swing.JLabel();&#xD;
    jcbSimilarity = new javax.swing.JComboBox();&#xD;
    jLabel9 = new javax.swing.JLabel();&#xD;
    jtfTolerance = new javax.swing.JTextField();&#xD;
    jLabel2 = new javax.swing.JLabel();&#xD;
    jtfSim = new javax.swing.JTextField();&#xD;
    jLabel13 = new javax.swing.JLabel();&#xD;
    jLabel14 = new javax.swing.JLabel();&#xD;
    jLabel15 = new javax.swing.JLabel();&#xD;
    jrbcurrent = new javax.swing.JRadioButton();&#xD;
    jrbuser = new javax.swing.JRadioButton();&#xD;
    jrball = new javax.swing.JRadioButton();&#xD;
    jSeparator2 = new javax.swing.JSeparator();&#xD;
    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);&#xD;
    setTitle(&quot;Comparison&quot;);&#xD;
    setResizable(false);&#xD;
    jbShow.setText(&quot;Show&quot;);&#xD;
    jbShow.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbShowActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jLabel6.setText(&quot;Find Lanes (of the same species) that are similar to the selected lane&quot;);&#xD;
    jLabel7.setText(&quot;Similarity Method:&quot;);&#xD;
    jcbSimilarity.setModel(new javax.swing.DefaultComboBoxModel(new String[] { &quot;Dice&quot;, &quot;Jaccard&quot;, &quot;Band difference&quot;, &quot;Jeffrey's X&quot;, &quot;Ochiai&quot;, &quot;Pearson correlation&quot;, &quot;Cosine coefficient&quot;, &quot;Euclidean distance&quot;, &quot;Manhattan distance&quot; }));&#xD;
    jLabel9.setText(&quot;Tolerance:&quot;);&#xD;
    jtfTolerance.setText(&quot;4&quot;);&#xD;
    jLabel2.setText(&quot;Similarity higher than:&quot;);&#xD;
    jtfSim.setText(&quot;90&quot;);&#xD;
    jLabel13.setText(&quot;%&quot;);&#xD;
    jLabel14.setText(&quot;%&quot;);&#xD;
    jLabel15.setText(&quot;Search in:&quot;);&#xD;
    buttonGroup1.add(jrbcurrent);&#xD;
    jrbcurrent.setSelected(true);&#xD;
    jrbcurrent.setText(&quot;Current Study&quot;);&#xD;
    buttonGroup1.add(jrbuser);&#xD;
    jrbuser.setText(&quot;All the studies of the current user&quot;);&#xD;
    buttonGroup1.add(jrball);&#xD;
    jrball.setText(&quot;All the available studies&quot;);&#xD;
    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);&#xD;
    jPanel2.setLayout(jPanel2Layout);&#xD;
    jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel2Layout.createSequentialGroup().addComponent(jLabel6).addGap(0, 18, Short.MAX_VALUE)).addComponent(jSeparator3).addGroup(jPanel2Layout.createSequentialGroup().addGap(31, 31, 31).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addComponent(jLabel15).addComponent(jLabel2).addComponent(jLabel9).addComponent(jLabel7)).addGap(18, 18, 18).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jcbSimilarity, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(jPanel2Layout.createSequentialGroup().addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel2Layout.createSequentialGroup().addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false).addComponent(jtfSim, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 258, Short.MAX_VALUE).addComponent(jtfTolerance, javax.swing.GroupLayout.Alignment.LEADING)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel13).addComponent(jLabel14))).addGroup(jPanel2Layout.createSequentialGroup().addComponent(jrbcurrent).addGap(0, 0, Short.MAX_VALUE))).addContainerGap()).addGroup(jPanel2Layout.createSequentialGroup().addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jrball).addComponent(jrbuser)).addGap(0, 0, Short.MAX_VALUE)))));&#xD;
    jPanel2Layout.setVerticalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel2Layout.createSequentialGroup().addContainerGap().addComponent(jLabel6).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel7).addComponent(jcbSimilarity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel9).addComponent(jtfTolerance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel13)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jtfSim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel2).addComponent(jLabel14)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel15).addComponent(jrbcurrent)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jrbuser).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jrball).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());&#xD;
    getContentPane().setLayout(layout);&#xD;
    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jbShow)).addGap(0, 0, Short.MAX_VALUE)).addComponent(jSeparator2)).addContainerGap()));&#xD;
    layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jbShow).addContainerGap()));&#xD;
    pack();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GvpkURUTEemIe6OhVnSywA" name="jbShowActionPerformed" specification="_Gvo9QBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbShowActionPerformed&#xD;
    String similarity = (String) jcbSimilarity.getSelectedItem();&#xD;
    double tolerance = 0;&#xD;
    try {&#xD;
        tolerance = Double.parseDouble(jtfTolerance.getText());&#xD;
        if (tolerance &lt; 0) {&#xD;
            JOptionPane.showMessageDialog(this, &quot;Introduce a positive tolerance value&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
            return;&#xD;
        }&#xD;
    } catch (NumberFormatException e) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;Introduce a tolerance value&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
        return;&#xD;
    } catch (NullPointerException e) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;Introduce a tolerance value&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
        return;&#xD;
    }&#xD;
    int similarityhigher = Integer.parseInt(jtfSim.getText());&#xD;
    ArrayList&lt;LaneDB> lanes = null;&#xD;
    if (jrbcurrent.isSelected()) {&#xD;
        lanes = getLanes(lane.getExperiment().getStudy().getId());&#xD;
    }&#xD;
    if (jrbuser.isSelected()) {&#xD;
        lanes = getUserLanes(lane.getExperiment().getStudy().getUser().getId());&#xD;
    }&#xD;
    if (jrball.isSelected()) {&#xD;
        lanes = getAllLanes();&#xD;
    }&#xD;
    try {&#xD;
        ArrayList&lt;LaneDBwithsimilarity> res = computesimilarlanes(lane, lanes, similarity, tolerance, similarityhigher);&#xD;
        if (res.isEmpty()) {&#xD;
            JOptionPane.showMessageDialog(this, &quot;There is not any similar lane with these parameters&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
        } else {&#xD;
            dispose();&#xD;
            ShowSimilarLanes ssl = new ShowSimilarLanes(res, lane);&#xD;
            ssl.setVisible(true);&#xD;
        }&#xD;
    } catch (IOException ex) {&#xD;
        Logger.getLogger(FindSimilarities.class.getName()).log(Level.SEVERE, null, ex);&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_GviPkBUTEemIe6OhVnSywA" name="FindSimilarities" visibility="public" method="_GvlS4RUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_GvlS4BUTEemIe6OhVnSywA" name="lane" type="_EHtRsBUTEemIe6OhVnSywA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_GvlS4hUTEemIe6OhVnSywA" name="initComponents" visibility="private" method="_GvmhABUTEemIe6OhVnSywA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_Gvo9QBUTEemIe6OhVnSywA" name="jbShowActionPerformed" visibility="private" method="_GvpkURUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_GvpkUBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_GxqWgBUTEemIe6OhVnSywA" name="ImportExperiment" visibility="public">
            <ownedAttribute xmi:type="uml:Property" xmi:id="_GxtZ0BUTEemIe6OhVnSywA" name="studyid" visibility="private" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_GxySUBUTEemIe6OhVnSywA" name="initialexperiments" visibility="private" type="_EJs1wBUTEemIe6OhVnSywA" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Gx0ukBUTEemIe6OhVnSywA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Gx1VoBUTEemIe6OhVnSywA" value="*"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_Gx18sBUTEemIe6OhVnSywA" name="m" visibility="private" type="_Gul0YBUTEemIe6OhVnSywA" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_GyRagBUTEemIe6OhVnSywA" name="jLabel6" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_GyVE4BUTEemIe6OhVnSywA" name="jScrollPane4" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_GyXhIBUTEemIe6OhVnSywA" name="jbBack" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_GyZWUBUTEemIe6OhVnSywA" name="jbNext" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_Gyfc8BUTEemIe6OhVnSywA" name="jtExperiments" visibility="private" isUnique="false"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Gx8qYBUTEemIe6OhVnSywA" name="ImportExperiment" specification="_Gx3K0BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    initComponents();&#xD;
    this.studyid = studyid;&#xD;
    this.m = m;&#xD;
    updatetheexperiments();&#xD;
    this.setModal(true);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Gx9RcBUTEemIe6OhVnSywA" name="updatetheexperiments" specification="_Gx8qYRUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    initialexperiments = getExperimentsofOtherStudies(studyid);&#xD;
    String[] names = { &quot;Selected&quot;, &quot;Experiment&quot;, &quot;Date&quot;, &quot;Author&quot;, &quot;Marker&quot;, &quot;Comments&quot;, &quot;Study&quot; };&#xD;
    Object[][] data = new Object[initialexperiments.size()][7];&#xD;
    // We update the table&#xD;
    for (int i = 0; i &lt; initialexperiments.size(); i++) {&#xD;
        data[i][0] = false;&#xD;
        data[i][1] = initialexperiments.get(i).getName();&#xD;
        data[i][2] = initialexperiments.get(i).getDate().toString();&#xD;
        data[i][3] = initialexperiments.get(i).getUser().getUsername();&#xD;
        data[i][4] = initialexperiments.get(i).getMarker().getName();&#xD;
        data[i][5] = initialexperiments.get(i).getComments();&#xD;
        data[i][6] = initialexperiments.get(i).getStudy().getName();&#xD;
    }&#xD;
    // Operations to change the model, we disable the edition of the date&#xD;
    DefaultTableModel model = new DefaultTableModel(data, names) {&#xD;
&#xD;
        public boolean isCellEditable(int rowIndex, int mColIndex) {&#xD;
            if (mColIndex == 0) {&#xD;
                return true;&#xD;
            } else {&#xD;
                return false;&#xD;
            }&#xD;
        }&#xD;
&#xD;
        public Class getColumnClass(int columnIndex) {&#xD;
            if (columnIndex == 0) {&#xD;
                return java.lang.Boolean.class;&#xD;
            } else {&#xD;
                return java.lang.Object.class;&#xD;
            }&#xD;
        }&#xD;
    };&#xD;
    jtExperiments.setModel(model);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Gx94gBUTEemIe6OhVnSywA" name="initComponents" specification="_Gx9RcRUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    jbNext = new javax.swing.JButton();&#xD;
    jbBack = new javax.swing.JButton();&#xD;
    jLabel6 = new javax.swing.JLabel();&#xD;
    jScrollPane4 = new javax.swing.JScrollPane();&#xD;
    jtExperiments = new javax.swing.JTable();&#xD;
    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);&#xD;
    setTitle(&quot;Import Experiments&quot;);&#xD;
    setResizable(false);&#xD;
    jbNext.setText(&quot;Ok&quot;);&#xD;
    jbNext.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbNextActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jbBack.setText(&quot;Cancel&quot;);&#xD;
    jbBack.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbBackActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jLabel6.setText(&quot;Select experiments to import:&quot;);&#xD;
    jtExperiments.setModel(new javax.swing.table.DefaultTableModel(new Object[][] { { null, null, null, null }, { null, null, null, null }, { null, null, null, null }, { null, null, null, null } }, new String[] { &quot;Title 1&quot;, &quot;Title 2&quot;, &quot;Title 3&quot;, &quot;Title 4&quot; }));&#xD;
    jScrollPane4.setViewportView(jtExperiments);&#xD;
    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());&#xD;
    getContentPane().setLayout(layout);&#xD;
    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 742, Short.MAX_VALUE).addGroup(layout.createSequentialGroup().addComponent(jLabel6).addGap(0, 0, Short.MAX_VALUE)).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup().addGap(0, 643, Short.MAX_VALUE).addComponent(jbBack).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jbNext))).addContainerGap()));&#xD;
    layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addComponent(jLabel6).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jbNext).addComponent(jbBack)).addContainerGap()));&#xD;
    pack();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GyA70BUTEemIe6OhVnSywA" name="jbNextActionPerformed" specification="_Gx-fkBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbNextActionPerformed&#xD;
    DefaultTableModel model = (DefaultTableModel) jtExperiments.getModel();&#xD;
    ArrayList&lt;Experiment> selectedexps = new ArrayList&lt;>();&#xD;
    for (int i = 0; i &lt; model.getRowCount(); i++) {&#xD;
        if ((boolean) model.getValueAt(i, 0)) {&#xD;
            selectedexps.add(initialexperiments.get(i));&#xD;
        }&#xD;
    }&#xD;
    if (!allwithsamemarker(selectedexps)) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;All the selected experiments should be normalised using the same marker&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
        return;&#xD;
    }&#xD;
    try {&#xD;
        duplicateexperiments(selectedexps);&#xD;
    } catch (IOException ex) {&#xD;
        Logger.getLogger(ImportExperiment.class.getName()).log(Level.SEVERE, null, ex);&#xD;
    }&#xD;
    dispose();&#xD;
    m.updateexperiments(true, true);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GyIQkBUTEemIe6OhVnSywA" name="duplicateexperiments" specification="_GyDYEBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    for (Experiment e : exps) {&#xD;
        duplicateexperiment(e, studyid);&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GyO-QBUTEemIe6OhVnSywA" name="duplicateexperiment" specification="_GyKFwBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    int expid = lastExperimentid();&#xD;
    Experiment newexp = new Experiment(expid, &quot;Copy-&quot; + e.getName(), e.getDate(), e.getImagename(), e.getCalibrationMethod(), e.getComments(), getStudy(studyid), e.getMarker(), e.getUser());&#xD;
    insertExperiment(newexp);&#xD;
    File folderorigin = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/GelJDBImages/&quot; + e.getStudy().getId() + &quot;/&quot; + e.getUser().getUsername() + &quot;/experiments/&quot; + e.getId() + &quot;/&quot;);&#xD;
    File imageorigin = new File(folderorigin + &quot;/&quot; + e.getImagename());&#xD;
    File foldercopy = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/GelJDBImages/&quot; + studyid + &quot;/&quot; + e.getUser().getUsername() + &quot;/experiments/&quot; + expid + &quot;/&quot;);&#xD;
    File imagedestine = new File(foldercopy + &quot;/&quot; + e.getImagename());&#xD;
    foldercopy.mkdir();&#xD;
    Files.copy(imageorigin.toPath(), imagedestine.toPath());&#xD;
    //// Creation of the lanes to store them in the database&#xD;
    // Creation of the folder where the lanes will be saved.&#xD;
    File folderexplanes = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/GelJDBImages/&quot; + studyid + &quot;/&quot; + e.getUser().getUsername() + &quot;/experiments/&quot; + expid + &quot;/lanes/&quot;);&#xD;
    folderexplanes.mkdir();&#xD;
    // For each lane, we create a lanedb instance that is added to the database&#xD;
    int laneid = lastLaneid();&#xD;
    for (LaneDB l : getlanesexperiment(e.getId(), true)) {&#xD;
        int lid = l.getId();&#xD;
        LaneDB newlane = l;&#xD;
        newlane.setId(laneid);&#xD;
        newlane.setExperiment(newexp);&#xD;
        insertLane(newlane);&#xD;
        String folderoriginlane = System.getProperty(&quot;user.dir&quot;) + &quot;/GelJDBImages/&quot; + e.getStudy().getId() + &quot;/&quot; + e.getUser().getUsername() + &quot;/experiments/&quot; + e.getId() + &quot;/lanes/&quot; + lid + &quot;/&quot;;&#xD;
        String folderlanepath = System.getProperty(&quot;user.dir&quot;) + &quot;/GelJDBImages/&quot; + studyid + &quot;/&quot; + e.getUser().getUsername() + &quot;/experiments/&quot; + expid + &quot;/lanes/&quot; + laneid + &quot;/&quot;;&#xD;
        File folderlane = new File(folderlanepath);&#xD;
        folderlane.mkdir();&#xD;
        File curveorigin = new File(folderoriginlane + lid + &quot;.curve&quot;);&#xD;
        File curvedestiny = new File(folderlanepath + laneid + &quot;.curve&quot;);&#xD;
        Files.copy(curveorigin.toPath(), curvedestiny.toPath());&#xD;
        File mworigin = new File(folderoriginlane + lid + &quot;.mw&quot;);&#xD;
        File mwdestiny = new File(folderlanepath + laneid + &quot;.mw&quot;);&#xD;
        Files.copy(mworigin.toPath(), mwdestiny.toPath());&#xD;
        File bandsorigin = new File(folderoriginlane + lid + &quot;.bands&quot;);&#xD;
        File bandsdestiny = new File(folderlanepath + laneid + &quot;.bands&quot;);&#xD;
        Files.copy(bandsorigin.toPath(), bandsdestiny.toPath());&#xD;
        File bandsorigin2 = new File(folderoriginlane + lid + &quot;.bands2&quot;);&#xD;
        File bandsdestiny2 = new File(folderlanepath + laneid + &quot;.bands2&quot;);&#xD;
        Files.copy(bandsorigin2.toPath(), bandsdestiny2.toPath());&#xD;
        File imorigin = new File(folderoriginlane + lid + &quot;.tiff&quot;);&#xD;
        File imdestiny = new File(folderlanepath + laneid + &quot;.tiff&quot;);&#xD;
        Files.copy(imorigin.toPath(), imdestiny.toPath());&#xD;
        File roiorigin = new File(folderoriginlane + lid + &quot;.roi&quot;);&#xD;
        File roidestiny = new File(folderlanepath + laneid + &quot;.roi&quot;);&#xD;
        Files.copy(roiorigin.toPath(), roidestiny.toPath());&#xD;
        laneid++;&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GyQzcRUTEemIe6OhVnSywA" name="jbBackActionPerformed" specification="_GyQMYBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbBackActionPerformed&#xD;
    dispose();&#xD;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_Gx3K0BUTEemIe6OhVnSywA" name="ImportExperiment" visibility="public" method="_Gx8qYBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_Gx6OIBUTEemIe6OhVnSywA" name="studyid">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_Gx7cQBUTEemIe6OhVnSywA" name="m" type="_Gul0YBUTEemIe6OhVnSywA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_Gx8qYRUTEemIe6OhVnSywA" name="updatetheexperiments" visibility="public" method="_Gx9RcBUTEemIe6OhVnSywA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_Gx9RcRUTEemIe6OhVnSywA" name="initComponents" visibility="private" method="_Gx94gBUTEemIe6OhVnSywA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_Gx-fkBUTEemIe6OhVnSywA" name="jbNextActionPerformed" visibility="private" method="_GyA70BUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_GyAUwBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_GyDYEBUTEemIe6OhVnSywA" name="duplicateexperiments" visibility="private" method="_GyIQkBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_GyFNQBUTEemIe6OhVnSywA" name="exps" type="_EJs1wBUTEemIe6OhVnSywA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_GyF0UBUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_GyGbYBUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_GyKFwBUTEemIe6OhVnSywA" name="duplicateexperiment" visibility="public" isStatic="true" method="_GyO-QBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_GyLT4BUTEemIe6OhVnSywA" name="e" type="_EJs1wBUTEemIe6OhVnSywA"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_GyMiABUTEemIe6OhVnSywA" name="studyid">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_GyQMYBUTEemIe6OhVnSywA" name="jbBackActionPerformed" visibility="private" method="_GyQzcRUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_GyQzcBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_GymxsBUTEemIe6OhVnSywA" name="NewExperiment" visibility="public">
            <ownedAttribute xmi:type="uml:Property" xmi:id="_Gyp1ABUTEemIe6OhVnSywA" name="e" visibility="private" type="_EJs1wBUTEemIe6OhVnSywA" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_GyrqMBUTEemIe6OhVnSywA" name="name" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_GzCPgBUTEemIe6OhVnSywA" name="jLabel1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_GzErwBUTEemIe6OhVnSywA" name="jLabel2" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_GzGg8BUTEemIe6OhVnSywA" name="jScrollPane1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_GzI9MBUTEemIe6OhVnSywA" name="jbOk" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_GzNOoBUTEemIe6OhVnSywA" name="jtaComments" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_GzPD0BUTEemIe6OhVnSywA" name="jtfName" visibility="private" isUnique="false"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Gy8I4BUTEemIe6OhVnSywA" name="NewExperiment" specification="_GyyX4BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    super(parent, modal);&#xD;
    initComponents();&#xD;
    this.e = e;&#xD;
    jtfName.setText(e.getName());&#xD;
    this.name = e.getName();&#xD;
    jbOkActionPerformed();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Gy-lIBUTEemIe6OhVnSywA" name="initComponents" specification="_Gy9-EBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    jLabel1 = new javax.swing.JLabel();&#xD;
    jtfName = new javax.swing.JTextField();&#xD;
    jLabel2 = new javax.swing.JLabel();&#xD;
    jScrollPane1 = new javax.swing.JScrollPane();&#xD;
    jtaComments = new javax.swing.JTextArea();&#xD;
    jbOk = new javax.swing.JButton();&#xD;
    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);&#xD;
    setTitle(&quot;Experiment&quot;);&#xD;
    setModal(true);&#xD;
    setResizable(false);&#xD;
    jLabel1.setText(&quot;Name of the experiment:&quot;);&#xD;
    jLabel2.setText(&quot;Comments:&quot;);&#xD;
    jtaComments.setColumns(20);&#xD;
    jtaComments.setRows(5);&#xD;
    jScrollPane1.setViewportView(jtaComments);&#xD;
    jbOk.setText(&quot;Ok&quot;);&#xD;
    jbOk.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbOkActionPerformed();&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());&#xD;
    getContentPane().setLayout(layout);&#xD;
    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addComponent(jLabel2).addComponent(jLabel1)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jtfName).addGroup(layout.createSequentialGroup().addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addGap(0, 0, Short.MAX_VALUE)))).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addComponent(jbOk))).addContainerGap()));&#xD;
    layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel1).addComponent(jtfName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel2).addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jbOk).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    pack();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Gy_zQRUTEemIe6OhVnSywA" name="jbOkActionPerformed" specification="_Gy_zQBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbOkActionPerformed&#xD;
    String comments = jtaComments.getText();&#xD;
    if (name.equals(&quot;&quot;)) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;Introduce a name for the experiment&quot;);&#xD;
        return;&#xD;
    }&#xD;
    e.setName(name);&#xD;
    e.setComments(comments);&#xD;
    updateExperiment(e.getId(), e);&#xD;
    dispose();&#xD;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_GyyX4BUTEemIe6OhVnSywA" name="NewExperiment" visibility="public" method="_Gy8I4BUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_Gy2pUBUTEemIe6OhVnSywA" name="parent"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_Gy4egBUTEemIe6OhVnSywA" name="modal">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_Gy66wBUTEemIe6OhVnSywA" name="e" type="_EJs1wBUTEemIe6OhVnSywA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_Gy9-EBUTEemIe6OhVnSywA" name="initComponents" visibility="private" method="_Gy-lIBUTEemIe6OhVnSywA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_Gy_zQBUTEemIe6OhVnSywA" name="jbOkActionPerformed" visibility="private" method="_Gy_zQRUTEemIe6OhVnSywA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_GzUjYBUTEemIe6OhVnSywA" name="NewStudy" visibility="public">
            <ownedAttribute xmi:type="uml:Property" xmi:id="_GzW_oBUTEemIe6OhVnSywA" name="m" visibility="private" type="_Gul0YBUTEemIe6OhVnSywA" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_GzYNwBUTEemIe6OhVnSywA" name="edit" visibility="private" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_GzpTgBUTEemIe6OhVnSywA" name="jLabel1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_Gzp6kBUTEemIe6OhVnSywA" name="jLabel2" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_GzqhoBUTEemIe6OhVnSywA" name="jScrollPane1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_GzrIsBUTEemIe6OhVnSywA" name="jbCancel" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_GzrvwBUTEemIe6OhVnSywA" name="jbOk" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_GzsW0BUTEemIe6OhVnSywA" name="jtaComments" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_Gzs94BUTEemIe6OhVnSywA" name="jtfName" visibility="private" isUnique="false"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GzeUYRUTEemIe6OhVnSywA" name="NewStudy" specification="_GzaC8BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    super(parent, modal);&#xD;
    initComponents();&#xD;
    this.m = m;&#xD;
    this.edit = edit;&#xD;
    if (edit) {&#xD;
        Study s = getStudy(m.studyid);&#xD;
        jtfName.setText(s.getName());&#xD;
        jtaComments.setText(s.getComments());&#xD;
    }&#xD;
    jtfName.setText(&quot;UML2PROV_study&quot;);&#xD;
    try {&#xD;
        newstudy();&#xD;
    } catch (IOException e) {&#xD;
        e.printStackTrace();&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Gze7cBUTEemIe6OhVnSywA" name="initComponents" specification="_GzeUYhUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    jLabel1 = new javax.swing.JLabel();&#xD;
    jtfName = new javax.swing.JTextField();&#xD;
    jLabel2 = new javax.swing.JLabel();&#xD;
    jScrollPane1 = new javax.swing.JScrollPane();&#xD;
    jtaComments = new javax.swing.JTextArea();&#xD;
    jbOk = new javax.swing.JButton();&#xD;
    jbCancel = new javax.swing.JButton();&#xD;
    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);&#xD;
    setTitle(&quot;Study&quot;);&#xD;
    setModal(true);&#xD;
    setResizable(false);&#xD;
    jLabel1.setText(&quot;Name of the study:&quot;);&#xD;
    jtfName.addKeyListener(new java.awt.event.KeyAdapter() {&#xD;
&#xD;
        public void keyReleased(java.awt.event.KeyEvent evt) {&#xD;
            jtfNameKeyReleased(evt);&#xD;
        }&#xD;
    });&#xD;
    jLabel2.setText(&quot;Comments:&quot;);&#xD;
    jtaComments.setColumns(20);&#xD;
    jtaComments.setRows(5);&#xD;
    jScrollPane1.setViewportView(jtaComments);&#xD;
    jbOk.setText(&quot;Ok&quot;);&#xD;
    jbOk.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbOkActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jbCancel.setText(&quot;Cancel&quot;);&#xD;
    jbCancel.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbCancelActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());&#xD;
    getContentPane().setLayout(layout);&#xD;
    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addComponent(jLabel2).addComponent(jLabel1)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jtfName).addGroup(layout.createSequentialGroup().addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addGap(0, 0, Short.MAX_VALUE)))).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addComponent(jbCancel).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jbOk))).addContainerGap()));&#xD;
    layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel1).addComponent(jtfName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel2).addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jbOk).addComponent(jbCancel)).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    pack();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GzfigRUTEemIe6OhVnSywA" name="jbCancelActionPerformed" specification="_Gze7cRUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbCancelActionPerformed&#xD;
    m.studyid = -1;&#xD;
    dispose();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GzgJkRUTEemIe6OhVnSywA" name="jbOkActionPerformed" specification="_GzfighUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbOkActionPerformed&#xD;
    try {&#xD;
        newstudy();&#xD;
    } catch (IOException ex) {&#xD;
        Logger.getLogger(NewStudy.class.getName()).log(Level.SEVERE, null, ex);&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Gzm3QBUTEemIe6OhVnSywA" name="jtfNameKeyReleased" specification="_GzkbABUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jtfNameKeyReleased&#xD;
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {&#xD;
        try {&#xD;
            newstudy();&#xD;
        } catch (IOException ex) {&#xD;
            Logger.getLogger(NewStudy.class.getName()).log(Level.SEVERE, null, ex);&#xD;
        }&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GzoFYBUTEemIe6OhVnSywA" name="newstudy" specification="_GzneUBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    String name = jtfName.getText();&#xD;
    String comments = jtaComments.getText();&#xD;
    java.util.Calendar cal = java.util.Calendar.getInstance();&#xD;
    java.util.Date utilDate = cal.getTime();&#xD;
    Date date = new Date(utilDate.getTime());&#xD;
    if (name.equals(&quot;&quot;)) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;Introduce a name for the study&quot;);&#xD;
        return;&#xD;
    }&#xD;
    if (edit) {&#xD;
        Study s = getStudy(m.studyid);&#xD;
        s.setName(name);&#xD;
        s.setComments(comments);&#xD;
        s.setDate(date);&#xD;
        updateStudy(m.studyid, s);&#xD;
        m.setTitle(&quot;GelJ (&quot; + name + &quot; )&quot;);&#xD;
        dispose();&#xD;
        return;&#xD;
    }&#xD;
    int id = lastStudyid();&#xD;
    int user = m.getUserid();&#xD;
    // Creating folders&#xD;
    File folder0 = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/GelJDBImages/&quot;);&#xD;
    if (!folder0.exists()) {&#xD;
        folder0.mkdir();&#xD;
    }&#xD;
    String username = getUser(user).getUsername();&#xD;
    File folderuser = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/GelJDBImages/&quot; + id);&#xD;
    if (!folderuser.exists()) {&#xD;
        folderuser.mkdir();&#xD;
    }&#xD;
    File folder = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/GelJDBImages/&quot; + id + &quot;/&quot; + username);&#xD;
    folder.mkdir();&#xD;
    File folderexp = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/GelJDBImages/&quot; + id + &quot;/&quot; + username + &quot;/experiments/&quot;);&#xD;
    folderexp.mkdir();&#xD;
    File foldercomp = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/GelJDBImages/&quot; + id + &quot;/&quot; + username + &quot;/comparisons/&quot;);&#xD;
    foldercomp.mkdir();&#xD;
    File folderunfinished = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/GelJDBImages/&quot; + id + &quot;/&quot; + username + &quot;/unfinished/&quot;);&#xD;
    folderunfinished.mkdir();&#xD;
    File folderunfinishedempty = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/GelJDBImages/&quot; + id + &quot;/&quot; + username + &quot;/unfinished/empty.txt&quot;);&#xD;
    folderunfinishedempty.createNewFile();&#xD;
    String path = System.getProperty(&quot;user.dir&quot;) + &quot;/GelJDBImages/&quot; + id + &quot;/&quot; + username;&#xD;
    insertStudy(new Study(id, name, date, path, comments, getUser(user)));&#xD;
    dispose();&#xD;
    m.studyid = id;&#xD;
    m.setTitle(&quot;GelJDB (&quot; + name + &quot;)&quot;);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GzoscRUTEemIe6OhVnSywA" name="dispose" specification="_GzoscBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    super.dispose();&#xD;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_GzaC8BUTEemIe6OhVnSywA" name="NewStudy" visibility="public" method="_GzeUYRUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_GzdGQBUTEemIe6OhVnSywA" name="parent"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_GzdtUBUTEemIe6OhVnSywA" name="modal">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_GzdtURUTEemIe6OhVnSywA" name="edit">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_GzeUYBUTEemIe6OhVnSywA" name="m" type="_Gul0YBUTEemIe6OhVnSywA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_GzeUYhUTEemIe6OhVnSywA" name="initComponents" visibility="private" method="_Gze7cBUTEemIe6OhVnSywA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_Gze7cRUTEemIe6OhVnSywA" name="jbCancelActionPerformed" visibility="private" method="_GzfigRUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_GzfigBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_GzfighUTEemIe6OhVnSywA" name="jbOkActionPerformed" visibility="private" method="_GzgJkRUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_GzgJkBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_GzkbABUTEemIe6OhVnSywA" name="jtfNameKeyReleased" visibility="private" method="_Gzm3QBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_GzlpIBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_GzneUBUTEemIe6OhVnSywA" name="newstudy" visibility="private" method="_GzoFYBUTEemIe6OhVnSywA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_GzoscBUTEemIe6OhVnSywA" name="dispose" visibility="public" method="_GzoscRUTEemIe6OhVnSywA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_GzydcBUTEemIe6OhVnSywA" name="ShowSimilarLanes" visibility="public">
            <ownedAttribute xmi:type="uml:Property" xmi:id="_Gz4kEBUTEemIe6OhVnSywA" name="lanes" visibility="private" type="_EO-XUBUTEemIe6OhVnSywA" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Gz6ZQBUTEemIe6OhVnSywA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Gz7AUBUTEemIe6OhVnSywA" value="*"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_Gz8OcBUTEemIe6OhVnSywA" name="lane" visibility="private" type="_EHtRsBUTEemIe6OhVnSywA" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_Gz-DoBUTEemIe6OhVnSywA" name="imp" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G0bWoBUTEemIe6OhVnSywA" name="jLabel6" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G0dL0BUTEemIe6OhVnSywA" name="jPanel2" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G0foEBUTEemIe6OhVnSywA" name="jScrollPane4" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G0hdQBUTEemIe6OhVnSywA" name="jSeparator2" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G0jScBUTEemIe6OhVnSywA" name="jSeparator3" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G0lusBUTEemIe6OhVnSywA" name="jbClose" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G0m80BUTEemIe6OhVnSywA" name="jbshow" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G0oyABUTEemIe6OhVnSywA" name="jtLanes" visibility="private" isUnique="false"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G0H0oBUTEemIe6OhVnSywA" name="ShowSimilarLanes" specification="_G0Af4BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    initComponents();&#xD;
    this.lanes = lanes;&#xD;
    this.lane = lane;&#xD;
    updatelanes(lanes);&#xD;
    this.setModal(true);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G0N7QBUTEemIe6OhVnSywA" name="updatelanes" specification="_G0KQ4BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    String[] names = { &quot;Genus&quot;, &quot;Species&quot;, &quot;Strain Number&quot;, &quot;Country&quot;, &quot;MLST&quot;, &quot;isMarker&quot;, &quot;Experiment&quot;, &quot;Comments&quot;, &quot;Study&quot;, &quot;User&quot;, &quot;Similarity&quot; };&#xD;
    Object[][] data = new Object[newlanes.size()][names.length];&#xD;
    // We update the table&#xD;
    for (int i = 0; i &lt; newlanes.size(); i++) {&#xD;
        data[i][0] = newlanes.get(i).getLane().getGenus();&#xD;
        data[i][1] = newlanes.get(i).getLane().getSpecies();&#xD;
        data[i][2] = newlanes.get(i).getLane().getStrainNumber();&#xD;
        data[i][3] = newlanes.get(i).getLane().getCountry();&#xD;
        data[i][4] = newlanes.get(i).getLane().getMSLT();&#xD;
        data[i][5] = newlanes.get(i).getLane().isIsMarker();&#xD;
        data[i][6] = newlanes.get(i).getLane().getExperiment().getName();&#xD;
        data[i][7] = newlanes.get(i).getLane().getComments();&#xD;
        data[i][8] = newlanes.get(i).getLane().getExperiment().getStudy().getName();&#xD;
        data[i][9] = newlanes.get(i).getLane().getExperiment().getStudy().getUser().getUsername();&#xD;
        data[i][10] = newlanes.get(i).getSimilarity();&#xD;
    }&#xD;
    // Operations to change the model, we disable the edition of the date&#xD;
    DefaultTableModel model = new DefaultTableModel(data, names) {&#xD;
&#xD;
        public boolean isCellEditable(int rowIndex, int mColIndex) {&#xD;
            return false;&#xD;
        }&#xD;
    };&#xD;
    jtLanes.setModel(model);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G0Q-kBUTEemIe6OhVnSywA" name="initComponents" specification="_G0PwcBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    jbClose = new javax.swing.JButton();&#xD;
    jPanel2 = new javax.swing.JPanel();&#xD;
    jLabel6 = new javax.swing.JLabel();&#xD;
    jSeparator3 = new javax.swing.JSeparator();&#xD;
    jScrollPane4 = new javax.swing.JScrollPane();&#xD;
    jtLanes = new javax.swing.JTable();&#xD;
    jSeparator2 = new javax.swing.JSeparator();&#xD;
    jbshow = new javax.swing.JButton();&#xD;
    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);&#xD;
    setTitle(&quot;Comparison&quot;);&#xD;
    setResizable(false);&#xD;
    jbClose.setText(&quot;Close&quot;);&#xD;
    jbClose.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbCloseActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jLabel6.setText(&quot;Similar lanes:&quot;);&#xD;
    jtLanes.setModel(new javax.swing.table.DefaultTableModel(new Object[][] { { null, null, null, null }, { null, null, null, null }, { null, null, null, null }, { null, null, null, null } }, new String[] { &quot;Title 1&quot;, &quot;Title 2&quot;, &quot;Title 3&quot;, &quot;Title 4&quot; }));&#xD;
    jScrollPane4.setViewportView(jtLanes);&#xD;
    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);&#xD;
    jPanel2.setLayout(jPanel2Layout);&#xD;
    jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel2Layout.createSequentialGroup().addComponent(jLabel6).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)).addComponent(jSeparator3).addGroup(jPanel2Layout.createSequentialGroup().addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 792, javax.swing.GroupLayout.PREFERRED_SIZE).addGap(0, 0, Short.MAX_VALUE)));&#xD;
    jPanel2Layout.setVerticalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel2Layout.createSequentialGroup().addContainerGap().addComponent(jLabel6).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 439, Short.MAX_VALUE)));&#xD;
    jbshow.setText(&quot;Show&quot;);&#xD;
    jbshow.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbshowActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());&#xD;
    getContentPane().setLayout(layout);&#xD;
    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addGap(0, 0, Short.MAX_VALUE)).addGroup(layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addComponent(jbshow).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jbClose)).addComponent(jSeparator2)).addContainerGap()));&#xD;
    layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 18, Short.MAX_VALUE).addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 4, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jbClose).addComponent(jbshow)).addContainerGap()));&#xD;
    pack();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G0VQABUTEemIe6OhVnSywA" name="jbCloseActionPerformed" specification="_G0SzwBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    if (imp != null) {&#xD;
        imp.close();&#xD;
    }&#xD;
    if (IJ.getInstance() != null) {&#xD;
        IJ.getInstance().quit();&#xD;
    }&#xD;
    dispose();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G0Y6YBUTEemIe6OhVnSywA" name="jbshowActionPerformed" specification="_G0XFMBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbshowActionPerformed&#xD;
    try {&#xD;
        this.setAlwaysOnTop(false);&#xD;
        imp = showlanes(lane, lanes);&#xD;
        imp.getWindow().setAlwaysOnTop(true);&#xD;
        imp.getWindow().toFront();&#xD;
    } catch (IOException ex) {&#xD;
        Logger.getLogger(ShowSimilarLanes.class.getName()).log(Level.SEVERE, null, ex);&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G0Af4BUTEemIe6OhVnSywA" name="ShowSimilarLanes" visibility="public" method="_G0H0oBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G0EKQBUTEemIe6OhVnSywA" name="lanes" type="_EO-XUBUTEemIe6OhVnSywA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_G0FYYBUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_G0F_cBUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G0HNkBUTEemIe6OhVnSywA" name="lane" type="_EHtRsBUTEemIe6OhVnSywA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G0KQ4BUTEemIe6OhVnSywA" name="updatelanes" visibility="public" method="_G0N7QBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G0MGEBUTEemIe6OhVnSywA" name="newlanes" type="_EO-XUBUTEemIe6OhVnSywA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_G0NUMBUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_G0NUMRUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G0PwcBUTEemIe6OhVnSywA" name="initComponents" visibility="private" method="_G0Q-kBUTEemIe6OhVnSywA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G0SzwBUTEemIe6OhVnSywA" name="jbCloseActionPerformed" visibility="private" method="_G0VQABUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G0UB4BUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G0XFMBUTEemIe6OhVnSywA" name="jbshowActionPerformed" visibility="private" method="_G0Y6YBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G0XsQBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_G0xU4BUTEemIe6OhVnSywA" name="SelectUser" visibility="public">
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G06e0BUTEemIe6OhVnSywA" name="users" visibility="private" type="_EMN-QBUTEemIe6OhVnSywA" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_G07s8BUTEemIe6OhVnSywA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_G08UABUTEemIe6OhVnSywA" value="*"/>
              <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_G08UARUTEemIe6OhVnSywA" name="defaultValue">
                <language>JAVA</language>
                <body>new ArrayList&lt;>()</body>
              </defaultValue>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G1JIURUTEemIe6OhVnSywA" name="jButtonOk" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G1JvYBUTEemIe6OhVnSywA" name="jComboBoxUser" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G1JvYRUTEemIe6OhVnSywA" name="jLabel1" visibility="private" isUnique="false"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G0_XURUTEemIe6OhVnSywA" name="SelectUser" specification="_G087EBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    initComponents();&#xD;
    updateusers();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G1AlchUTEemIe6OhVnSywA" name="setUsers" specification="_G0_-YBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    this.users = users;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G1BMgBUTEemIe6OhVnSywA" name="updateusers" specification="_G1AlcxUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    jComboBoxUser.removeAllItems();&#xD;
    users = getUsers();&#xD;
    if (users != null &amp;&amp; users.size() != 0) {&#xD;
        for (User user : users) {&#xD;
            jComboBoxUser.addItem(user.getUsername() + &quot; (&quot; + user.getName() + &quot; &quot; + user.getSurname() + &quot;)&quot;);&#xD;
        }&#xD;
    } else {&#xD;
        jComboBoxUser.addItem(&quot;&quot;);&#xD;
    }&#xD;
    jComboBoxUser.addItem(&quot;&lt;New User>&quot;);&#xD;
    jComboBoxUser.setSelectedIndex(0);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G1Fd8BUTEemIe6OhVnSywA" name="createstandardfolder" specification="_G1BMgRUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    File templateFile = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/standardfiles&quot;);&#xD;
    if (!templateFile.exists()) {&#xD;
        templateFile.mkdir();&#xD;
    }&#xD;
    double[] lambdaladder = { 727.5, 679, 630.5, 582.0, 533.5, 485.0, 436.5, 388.0, 339.5, 291, 242.5, 194.0, 145.5, 97.0, 48.5 };&#xD;
    String workingfile = System.getProperty(&quot;user.dir&quot;) + &quot;/standardfiles/Lambda_ladder_PFG_Marker.marker&quot;;&#xD;
    PrintWriter writer = new PrintWriter(workingfile, &quot;UTF-8&quot;);&#xD;
    for (int i = 0; i &lt; lambdaladder.length; i++) {&#xD;
        writer.println(lambdaladder[i]);&#xD;
    }&#xD;
    writer.close();&#xD;
    double[] lowrange = { 194, 145.5, 97, 48.5, 23.1, 9.42, 6.55, 4.36, 2.32, 2.03 };&#xD;
    String workingfile1 = System.getProperty(&quot;user.dir&quot;) + &quot;/standardfiles/Low_Range_PFG_Marker.marker&quot;;&#xD;
    PrintWriter writer1 = new PrintWriter(workingfile1, &quot;UTF-8&quot;);&#xD;
    for (int i = 0; i &lt; lowrange.length; i++) {&#xD;
        writer1.println(lowrange[i]);&#xD;
    }&#xD;
    writer1.close();&#xD;
    double[] midrange = { 242.5, 227.5, 209, 194, 179, 160.5, 145.5, 130.5, 112.0, 97, 82, 63.5, 48.5, 33.5, 15 };&#xD;
    String workingfile2 = System.getProperty(&quot;user.dir&quot;) + &quot;/standardfiles/Midrange_PFG_Marker_I.marker&quot;;&#xD;
    PrintWriter writer2 = new PrintWriter(workingfile2, &quot;UTF-8&quot;);&#xD;
    for (int i = 0; i &lt; midrange.length; i++) {&#xD;
        writer2.println(midrange[i]);&#xD;
    }&#xD;
    writer2.close();&#xD;
    File templateFileinfo = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/standardfiles/info&quot;);&#xD;
    if (!templateFileinfo.exists()) {&#xD;
        templateFileinfo.mkdir();&#xD;
    }&#xD;
    double[] lambdaladderinfo = { 52, 600, 9 };&#xD;
    //        double[] lambdaladderinfo = {26, 300, 9};&#xD;
    workingfile = System.getProperty(&quot;user.dir&quot;) + &quot;/standardfiles/info/Lambda_ladder_PFG_Marker.info&quot;;&#xD;
    writer = new PrintWriter(workingfile, &quot;UTF-8&quot;);&#xD;
    for (int i = 0; i &lt; lambdaladderinfo.length; i++) {&#xD;
        writer.println(lambdaladderinfo[i]);&#xD;
    }&#xD;
    writer.close();&#xD;
    double[] lambdaladderpos = { 4, 15, 25, 36, 48, 61, 76, 91, 108, 126, 145, 168, 192, 220, 249 };&#xD;
    workingfile = System.getProperty(&quot;user.dir&quot;) + &quot;/standardfiles/info/Lambda_ladder_PFG_Marker.pos&quot;;&#xD;
    writer = new PrintWriter(workingfile, &quot;UTF-8&quot;);&#xD;
    for (int i = 0; i &lt; lambdaladderpos.length; i++) {&#xD;
        writer.println(lambdaladderpos[i] * 2);&#xD;
    }&#xD;
    writer.close();&#xD;
    double[] lowrangeinfo = { 42, 600, 12 };&#xD;
    //        double[] lowrangeinfo = {21,300,12};&#xD;
    workingfile1 = System.getProperty(&quot;user.dir&quot;) + &quot;/standardfiles/info/Low_Range_PFG_Marker.info&quot;;&#xD;
    writer1 = new PrintWriter(workingfile1, &quot;UTF-8&quot;);&#xD;
    for (int i = 0; i &lt; lowrangeinfo.length; i++) {&#xD;
        writer1.println(lowrangeinfo[i]);&#xD;
    }&#xD;
    writer1.close();&#xD;
    double[] lowrangepos = { 21, 34, 53, 80, 98, 122, 139, 160, 225, 244 };&#xD;
    workingfile1 = System.getProperty(&quot;user.dir&quot;) + &quot;/standardfiles/info/Low_Range_PFG_Marker.pos&quot;;&#xD;
    writer1 = new PrintWriter(workingfile1, &quot;UTF-8&quot;);&#xD;
    for (int i = 0; i &lt; lowrangepos.length; i++) {&#xD;
        writer1.println(lowrangepos[i] * 2);&#xD;
    }&#xD;
    writer1.close();&#xD;
    double[] midrangeinfo = { 56, 640, 9 };&#xD;
    workingfile2 = System.getProperty(&quot;user.dir&quot;) + &quot;/standardfiles/info/Midrange_PFG_Marker_I.info&quot;;&#xD;
    writer2 = new PrintWriter(workingfile2, &quot;UTF-8&quot;);&#xD;
    for (int i = 0; i &lt; midrangeinfo.length; i++) {&#xD;
        writer2.println(midrangeinfo[i]);&#xD;
    }&#xD;
    writer2.close();&#xD;
    double[] midrangepos = { 12, 21, 36, 46, 59, 80, 94, 112, 138, 156, 177, 206, 223, 241, 273 };&#xD;
    workingfile2 = System.getProperty(&quot;user.dir&quot;) + &quot;/standardfiles/info/Midrange_PFG_Marker_I.pos&quot;;&#xD;
    writer2 = new PrintWriter(workingfile2, &quot;UTF-8&quot;);&#xD;
    for (int i = 0; i &lt; midrangepos.length; i++) {&#xD;
        writer2.println(midrangepos[i] * 2);&#xD;
    }&#xD;
    writer2.close();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G1GFABUTEemIe6OhVnSywA" name="initComponents" specification="_G1Fd8RUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    jLabel1 = new javax.swing.JLabel();&#xD;
    jComboBoxUser = new javax.swing.JComboBox();&#xD;
    jButtonOk = new javax.swing.JButton();&#xD;
    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);&#xD;
    setTitle(&quot;Select User&quot;);&#xD;
    jLabel1.setText(&quot;User:&quot;);&#xD;
    jComboBoxUser.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jComboBoxUserActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jButtonOk.setText(&quot;Ok&quot;);&#xD;
    jButtonOk.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButtonOkActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());&#xD;
    getContentPane().setLayout(layout);&#xD;
    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addComponent(jLabel1).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jComboBoxUser, 0, 326, Short.MAX_VALUE)).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addComponent(jButtonOk))).addContainerGap()));&#xD;
    layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel1).addComponent(jComboBoxUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButtonOk).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    pack();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G1HTIBUTEemIe6OhVnSywA" name="jButtonOkActionPerformed" specification="_G1GsEBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jButtonOkActionPerformed&#xD;
    int id = jComboBoxUser.getSelectedIndex();&#xD;
    //        Studies s = new Studies(users.get(id).getId());&#xD;
    User u = users.get(id);&#xD;
    //        s.setTitle(&quot;Studies of &quot; + u.getUsername()+ &quot; (&quot; + u.getName() + &quot; &quot; + &#xD;
    //                    u.getSurname() + &quot;)&quot;);&#xD;
    //        ImageorDB idb  = new ImageorDB(u);&#xD;
    Main m = new Main(id);&#xD;
    dispose();&#xD;
    m.setVisible(true);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G1H6MRUTEemIe6OhVnSywA" name="jComboBoxUserActionPerformed" specification="_G1HTIRUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jComboBoxUserActionPerformed&#xD;
    String sel = (String) jComboBoxUser.getSelectedItem();&#xD;
    int elem = jComboBoxUser.getSelectedIndex();&#xD;
    jComboBoxUser.setSelectedIndex(0);&#xD;
    jComboBoxUser.updateUI();&#xD;
    if (sel.equals(&quot;&lt;New User>&quot;)) {&#xD;
        NewUser nu = new NewUser(this, true, this);&#xD;
        nu.show();&#xD;
    } else {&#xD;
        jComboBoxUser.setSelectedIndex(elem);&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G1JIUBUTEemIe6OhVnSywA" name="main" specification="_G1IhQBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */&#xD;
    try {&#xD;
        for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {&#xD;
            if (&quot;Nimbus&quot;.equals(info.getName())) {&#xD;
                javax.swing.UIManager.setLookAndFeel(info.getClassName());&#xD;
                break;&#xD;
            }&#xD;
        }&#xD;
    } catch (ClassNotFoundException ex) {&#xD;
        java.util.logging.Logger.getLogger(ImageorDB.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);&#xD;
    } catch (InstantiationException ex) {&#xD;
        java.util.logging.Logger.getLogger(ImageorDB.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);&#xD;
    } catch (IllegalAccessException ex) {&#xD;
        java.util.logging.Logger.getLogger(ImageorDB.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);&#xD;
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {&#xD;
        java.util.logging.Logger.getLogger(ImageorDB.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);&#xD;
    }&#xD;
    //&lt;/editor-fold>&#xD;
    /* Create and display the form */&#xD;
    java.awt.EventQueue.invokeLater(new Runnable() {&#xD;
&#xD;
        public void run() {&#xD;
            new SelectUser().setVisible(true);&#xD;
        }&#xD;
    });&#xD;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G087EBUTEemIe6OhVnSywA" name="SelectUser" visibility="public" method="_G0_XURUTEemIe6OhVnSywA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G0_-YBUTEemIe6OhVnSywA" name="setUsers" visibility="public" method="_G1AlchUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G0_-YRUTEemIe6OhVnSywA" name="users" type="_EMN-QBUTEemIe6OhVnSywA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_G1AlcBUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_G1AlcRUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G1AlcxUTEemIe6OhVnSywA" name="updateusers" visibility="public" method="_G1BMgBUTEemIe6OhVnSywA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G1BMgRUTEemIe6OhVnSywA" name="createstandardfolder" visibility="private" isStatic="true" method="_G1Fd8BUTEemIe6OhVnSywA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G1Fd8RUTEemIe6OhVnSywA" name="initComponents" visibility="private" method="_G1GFABUTEemIe6OhVnSywA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G1GsEBUTEemIe6OhVnSywA" name="jButtonOkActionPerformed" visibility="private" method="_G1HTIBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G1GsERUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G1HTIRUTEemIe6OhVnSywA" name="jComboBoxUserActionPerformed" visibility="private" method="_G1H6MRUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G1H6MBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G1IhQBUTEemIe6OhVnSywA" name="main" visibility="public" isStatic="true" method="_G1JIUBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G1IhQRUTEemIe6OhVnSywA" name="args"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_G1NZwBUTEemIe6OhVnSywA" name="Studies" visibility="public">
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G1WjsBUTEemIe6OhVnSywA" name="user" visibility="private" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G1Y_8BUTEemIe6OhVnSywA" name="studies" visibility="private" type="_EFkjsBUTEemIe6OhVnSywA" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_G1Y_8RUTEemIe6OhVnSywA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_G1Y_8hUTEemIe6OhVnSywA" value="*"/>
              <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_G1Y_8xUTEemIe6OhVnSywA" name="defaultValue">
                <language>JAVA</language>
                <body>new ArrayList&lt;>()</body>
              </defaultValue>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G1jYARUTEemIe6OhVnSywA" name="jButton1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G1j_EBUTEemIe6OhVnSywA" name="jScrollPane1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G1nCYBUTEemIe6OhVnSywA" name="jSeparator1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G1npcBUTEemIe6OhVnSywA" name="jSeparator2" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G1oQgBUTEemIe6OhVnSywA" name="jSeparator3" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G1oQgRUTEemIe6OhVnSywA" name="jTable" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G1qFsRUTEemIe6OhVnSywA" name="jToolBar1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G1qswBUTEemIe6OhVnSywA" name="jbDeleteStudy" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G1tJABUTEemIe6OhVnSywA" name="jbEdit" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G1u-MBUTEemIe6OhVnSywA" name="jbNewStudy" visibility="private" isUnique="false"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G1bcMRUTEemIe6OhVnSywA" name="Studies" specification="_G1ZnABUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    initComponents();&#xD;
    this.user = user;&#xD;
    updatestudies();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G1cDQRUTEemIe6OhVnSywA" name="getuser" specification="_G1bcMhUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    return user;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G1cqUBUTEemIe6OhVnSywA" name="updatestudies" specification="_G1cDQhUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    studies = getStudies(user);&#xD;
    String[] names = { &quot;Study&quot;, &quot;Date&quot;, &quot;Comments&quot; };&#xD;
    String[][] data = new String[studies.size()][3];&#xD;
    // We update the table&#xD;
    for (int i = 0; i &lt; studies.size(); i++) {&#xD;
        data[i][0] = studies.get(i).getName();&#xD;
        data[i][1] = studies.get(i).getDate().toString();&#xD;
        data[i][2] = studies.get(i).getComments();&#xD;
    }&#xD;
    // Operations to change the model, we disable the edition of the date&#xD;
    DefaultTableModel model = new DefaultTableModel(data, names) {&#xD;
&#xD;
        public boolean isCellEditable(int rowIndex, int mColIndex) {&#xD;
            if (mColIndex == 1) {&#xD;
                return false;&#xD;
            } else {&#xD;
                return true;&#xD;
            }&#xD;
        }&#xD;
    };&#xD;
    model.addTableModelListener(this);&#xD;
    jTable.setModel(model);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G1ftoBUTEemIe6OhVnSywA" name="tableChanged" specification="_G1fGkBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    DefaultTableModel model = (DefaultTableModel) e.getSource();&#xD;
    int row = e.getFirstRow();&#xD;
    int column = e.getColumn();&#xD;
    String cellValue = String.valueOf(jTable.getValueAt(row, column));&#xD;
    if (column == 0) {&#xD;
        if (existsstudy(cellValue, user)) {&#xD;
            JOptionPane.showMessageDialog(this, &quot;There is already a study with that name&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
            updatestudies();&#xD;
        } else {&#xD;
            updateStudynameorcomments(studies.get(row).getId(), cellValue, true);&#xD;
            updatestudies();&#xD;
        }&#xD;
    } else {&#xD;
        updateStudynameorcomments(studies.get(row).getId(), cellValue, false);&#xD;
        updatestudies();&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G1gUsBUTEemIe6OhVnSywA" name="initComponents" specification="_G1ftoRUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    jButton1 = new javax.swing.JButton();&#xD;
    jScrollPane1 = new javax.swing.JScrollPane();&#xD;
    jTable = new javax.swing.JTable();&#xD;
    jToolBar1 = new javax.swing.JToolBar();&#xD;
    jbNewStudy = new javax.swing.JButton();&#xD;
    jSeparator1 = new javax.swing.JToolBar.Separator();&#xD;
    jbEdit = new javax.swing.JButton();&#xD;
    jSeparator2 = new javax.swing.JToolBar.Separator();&#xD;
    jbDeleteStudy = new javax.swing.JButton();&#xD;
    jSeparator3 = new javax.swing.JToolBar.Separator();&#xD;
    jButton1.setText(&quot;jButton1&quot;);&#xD;
    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);&#xD;
    jTable.setModel(new javax.swing.table.DefaultTableModel(new Object[][] { { null, &quot;&quot;, null }, { null, null, null }, { null, null, null }, { null, null, null } }, new String[] { &quot;Study&quot;, &quot;Date&quot;, &quot;Comments&quot; }));&#xD;
    // NOI18N&#xD;
    jTable.setName(&quot;&quot;);&#xD;
    jScrollPane1.setViewportView(jTable);&#xD;
    jToolBar1.setRollover(true);&#xD;
    jbNewStudy.setText(&quot;New Study&quot;);&#xD;
    jbNewStudy.setFocusable(false);&#xD;
    jbNewStudy.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);&#xD;
    jbNewStudy.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);&#xD;
    jbNewStudy.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbNewStudyActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar1.add(jbNewStudy);&#xD;
    jToolBar1.add(jSeparator1);&#xD;
    jbEdit.setText(&quot;Edit Study&quot;);&#xD;
    jbEdit.setFocusable(false);&#xD;
    jbEdit.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);&#xD;
    jbEdit.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);&#xD;
    jbEdit.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbEditActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar1.add(jbEdit);&#xD;
    jToolBar1.add(jSeparator2);&#xD;
    jbDeleteStudy.setText(&quot;Delete Study&quot;);&#xD;
    jbDeleteStudy.setFocusable(false);&#xD;
    jbDeleteStudy.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);&#xD;
    jbDeleteStudy.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);&#xD;
    jbDeleteStudy.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbDeleteStudyActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar1.add(jbDeleteStudy);&#xD;
    jToolBar1.add(jSeparator3);&#xD;
    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());&#xD;
    getContentPane().setLayout(layout);&#xD;
    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 487, Short.MAX_VALUE).addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));&#xD;
    layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE)));&#xD;
    pack();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G1g7wRUTEemIe6OhVnSywA" name="jbNewStudyActionPerformed" specification="_G1gUsRUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
//GEN-FIRST:event_jbNewStudyActionPerformed&#xD;
//        NewStudy nu = new NewStudy(this, true, this);&#xD;
//        nu.setVisible(true);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G1iJ4BUTEemIe6OhVnSywA" name="jbDeleteStudyActionPerformed" specification="_G1hi0BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbDeleteStudyActionPerformed&#xD;
    int row = jTable.getSelectedRow();&#xD;
    if (row == -1) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;Select a study first&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
    } else {&#xD;
        int reply = JOptionPane.showConfirmDialog(this, &quot;Do you want to remove this study?&quot;, &quot;Delete study&quot;, JOptionPane.YES_NO_OPTION);&#xD;
        if (reply == JOptionPane.YES_OPTION) {&#xD;
            int id = studies.get(row).getId();&#xD;
            deletestudy(id);&#xD;
            File folder = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/GelJDBImages/&quot; + getUser(user).getUsername() + &quot;/&quot; + id);&#xD;
            Utilities.deleteDir(folder);&#xD;
            updatestudies();&#xD;
        }&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G1jYABUTEemIe6OhVnSywA" name="jbEditActionPerformed" specification="_G1iw8BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbEditActionPerformed&#xD;
    int row = jTable.getSelectedRow();&#xD;
    if (row == -1) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;Select a study first&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
    } else {&#xD;
        //       StudyEdit se = new StudyEdit(studies.get(row).getId());&#xD;
        //       se.setTitle(&quot;Study &quot; + studies.get(row).getName());&#xD;
        //         Main se = new Main(studies.get(row).getId());  &#xD;
        dispose();&#xD;
    //       se.setVisible(true);&#xD;
    //       se.setExtendedState(JFrame.MAXIMIZED_BOTH);&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G1ZnABUTEemIe6OhVnSywA" name="Studies" visibility="public" method="_G1bcMRUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G1bcMBUTEemIe6OhVnSywA" name="user">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G1bcMhUTEemIe6OhVnSywA" name="getuser" visibility="public" method="_G1cDQRUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G1cDQBUTEemIe6OhVnSywA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G1cDQhUTEemIe6OhVnSywA" name="updatestudies" visibility="public" method="_G1cqUBUTEemIe6OhVnSywA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G1fGkBUTEemIe6OhVnSywA" name="tableChanged" visibility="public" method="_G1ftoBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G1fGkRUTEemIe6OhVnSywA" name="e"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G1ftoRUTEemIe6OhVnSywA" name="initComponents" visibility="private" method="_G1gUsBUTEemIe6OhVnSywA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G1gUsRUTEemIe6OhVnSywA" name="jbNewStudyActionPerformed" visibility="private" method="_G1g7wRUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G1g7wBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G1hi0BUTEemIe6OhVnSywA" name="jbDeleteStudyActionPerformed" visibility="private" method="_G1iJ4BUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G1hi0RUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G1iw8BUTEemIe6OhVnSywA" name="jbEditActionPerformed" visibility="private" method="_G1jYABUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G1iw8RUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_G1yBgBUTEemIe6OhVnSywA" name="Manual" visibility="public">
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G2H_wBUTEemIe6OhVnSywA" name="jButton1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G2J08BUTEemIe6OhVnSywA" name="jScrollPane1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G2MRMBUTEemIe6OhVnSywA" name="jTextArea1" visibility="private" isUnique="false"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G18ZkBUTEemIe6OhVnSywA" name="Manual" specification="_G11E0BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    super(parent, modal);&#xD;
    initComponents();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G1-OwRUTEemIe6OhVnSywA" name="initComponents" specification="_G1-OwBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    jScrollPane1 = new javax.swing.JScrollPane();&#xD;
    jTextArea1 = new javax.swing.JTextArea();&#xD;
    jButton1 = new javax.swing.JButton();&#xD;
    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);&#xD;
    setTitle(&quot;GelJ Manual&quot;);&#xD;
    setModal(true);&#xD;
    jTextArea1.setEditable(false);&#xD;
    jTextArea1.setColumns(20);&#xD;
    jTextArea1.setRows(5);&#xD;
    jTextArea1.setText(&quot;You can find the GelJ manual in the same folder where\nyou unzipped GelJ.\n&quot;);&#xD;
    jScrollPane1.setViewportView(jTextArea1);&#xD;
    jButton1.setText(&quot;Ok&quot;);&#xD;
    jButton1.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton1ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());&#xD;
    getContentPane().setLayout(layout);&#xD;
    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 425, Short.MAX_VALUE).addGroup(layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addComponent(jButton1)));&#xD;
    layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButton1).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    pack();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G2CgMBUTEemIe6OhVnSywA" name="jButton1ActionPerformed" specification="_G2AD8BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jButton1ActionPerformed&#xD;
    dispose();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G2FjgBUTEemIe6OhVnSywA" name="main" specification="_G2DHQBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */&#xD;
    try {&#xD;
        for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {&#xD;
            if (&quot;Nimbus&quot;.equals(info.getName())) {&#xD;
                javax.swing.UIManager.setLookAndFeel(info.getClassName());&#xD;
                break;&#xD;
            }&#xD;
        }&#xD;
    } catch (ClassNotFoundException ex) {&#xD;
        java.util.logging.Logger.getLogger(Manual.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);&#xD;
    } catch (InstantiationException ex) {&#xD;
        java.util.logging.Logger.getLogger(Manual.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);&#xD;
    } catch (IllegalAccessException ex) {&#xD;
        java.util.logging.Logger.getLogger(Manual.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);&#xD;
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {&#xD;
        java.util.logging.Logger.getLogger(Manual.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);&#xD;
    }&#xD;
    //&lt;/editor-fold>&#xD;
    /* Create and display the dialog */&#xD;
    java.awt.EventQueue.invokeLater(new Runnable() {&#xD;
&#xD;
        public void run() {&#xD;
            Manual dialog = new Manual(new javax.swing.JFrame(), true);&#xD;
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {&#xD;
&#xD;
                @Override&#xD;
                public void windowClosing(java.awt.event.WindowEvent e) {&#xD;
                    System.exit(0);&#xD;
                }&#xD;
            });&#xD;
            dialog.setVisible(true);&#xD;
        }&#xD;
    });&#xD;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G11E0BUTEemIe6OhVnSywA" name="Manual" visibility="public" method="_G18ZkBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G15WQBUTEemIe6OhVnSywA" name="parent"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G17LcBUTEemIe6OhVnSywA" name="modal">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G1-OwBUTEemIe6OhVnSywA" name="initComponents" visibility="private" method="_G1-OwRUTEemIe6OhVnSywA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G2AD8BUTEemIe6OhVnSywA" name="jButton1ActionPerformed" visibility="private" method="_G2CgMBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G2BSEBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G2DHQBUTEemIe6OhVnSywA" name="main" visibility="public" isStatic="true" method="_G2FjgBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G2EVYBUTEemIe6OhVnSywA" name="args"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_G2UNABUTEemIe6OhVnSywA" name="SearchLanes" visibility="public">
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G2X3YBUTEemIe6OhVnSywA" name="se" visibility="private" type="_G2WpQBUTEemIe6OhVnSywA" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G2ZskBUTEemIe6OhVnSywA" name="m" visibility="private" type="_Gul0YBUTEemIe6OhVnSywA" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G2xgABUTEemIe6OhVnSywA" name="jLabel1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G2yHEBUTEemIe6OhVnSywA" name="jLabel2" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G2yHERUTEemIe6OhVnSywA" name="jLabel3" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G2yuIBUTEemIe6OhVnSywA" name="jLabel4" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G2zVMBUTEemIe6OhVnSywA" name="jLabel5" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G2z8QBUTEemIe6OhVnSywA" name="jLabel6" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G2z8QRUTEemIe6OhVnSywA" name="jLabel7" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G20jUBUTEemIe6OhVnSywA" name="jLabel8" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G21KYBUTEemIe6OhVnSywA" name="jbClose" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G21KYRUTEemIe6OhVnSywA" name="jbSearch" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G21xcBUTEemIe6OhVnSywA" name="jcbCountry" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G22YgBUTEemIe6OhVnSywA" name="jcbExperiment" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G22_kBUTEemIe6OhVnSywA" name="jcbGenus" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G23moBUTEemIe6OhVnSywA" name="jcbSpecies" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G274EBUTEemIe6OhVnSywA" name="jdpfrom" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G28fIBUTEemIe6OhVnSywA" name="jdpto" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G28fIRUTEemIe6OhVnSywA" name="jtfMSLT" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G29GMBUTEemIe6OhVnSywA" name="jtfStrainNumber" visibility="private" isUnique="false"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G2gaQBUTEemIe6OhVnSywA" name="SearchLanes" specification="_G2bhwBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    initComponents();&#xD;
    setDefaultCloseOperation(DISPOSE_ON_CLOSE);&#xD;
    this.se = se;&#xD;
    ArrayList&lt;String> genuses = getGenus(se.studyid);&#xD;
    jcbGenus.addItem(&quot;&quot;);&#xD;
    for (String genus : genuses) {&#xD;
        jcbGenus.addItem(genus);&#xD;
    }&#xD;
    ArrayList&lt;String> species = getSpecies(se.studyid);&#xD;
    jcbSpecies.addItem(&quot;&quot;);&#xD;
    for (String specie : species) {&#xD;
        jcbSpecies.addItem(specie);&#xD;
    }&#xD;
    String[] locales = Locale.getISOCountries();&#xD;
    ArrayList&lt;String> countries = new ArrayList&lt;>();&#xD;
    for (String countryCode : locales) {&#xD;
        Locale obj = new Locale(&quot;&quot;, countryCode);&#xD;
        countries.add(obj.getDisplayCountry());&#xD;
    }&#xD;
    Collections.sort(countries);&#xD;
    jcbCountry.addItem(&quot;&quot;);&#xD;
    for (String country : countries) {&#xD;
        jcbCountry.addItem(country);&#xD;
    }&#xD;
    ArrayList&lt;Experiment> experiments = getExperiments(se.getStudyid());&#xD;
    jcbExperiment.addItem(&quot;&quot;);&#xD;
    for (Experiment experiment : experiments) {&#xD;
        jcbExperiment.addItem(experiment.getName());&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G2mg4BUTEemIe6OhVnSywA" name="SearchLanes" specification="_G2hoYBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    initComponents();&#xD;
    setDefaultCloseOperation(DISPOSE_ON_CLOSE);&#xD;
    this.m = m;&#xD;
    ArrayList&lt;String> genuses = getGenus(m.studyid);&#xD;
    jcbGenus.addItem(&quot;&quot;);&#xD;
    for (String genus : genuses) {&#xD;
        jcbGenus.addItem(genus);&#xD;
    }&#xD;
    ArrayList&lt;String> species = getSpecies(m.studyid);&#xD;
    jcbSpecies.addItem(&quot;&quot;);&#xD;
    for (String specie : species) {&#xD;
        jcbSpecies.addItem(specie);&#xD;
    }&#xD;
    String[] locales = Locale.getISOCountries();&#xD;
    ArrayList&lt;String> countries = new ArrayList&lt;>();&#xD;
    for (String countryCode : locales) {&#xD;
        Locale obj = new Locale(&quot;&quot;, countryCode);&#xD;
        countries.add(obj.getDisplayCountry());&#xD;
    }&#xD;
    Collections.sort(countries);&#xD;
    jcbCountry.addItem(&quot;&quot;);&#xD;
    for (String country : countries) {&#xD;
        jcbCountry.addItem(country);&#xD;
    }&#xD;
    ArrayList&lt;Experiment> experiments = getExperiments(m.studyid);&#xD;
    jcbExperiment.addItem(&quot;&quot;);&#xD;
    for (Experiment experiment : experiments) {&#xD;
        jcbExperiment.addItem(experiment.getName());&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G2qLQBUTEemIe6OhVnSywA" name="initComponents" specification="_G2o9IBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    jLabel1 = new javax.swing.JLabel();&#xD;
    jdpfrom = new org.jdesktop.swingx.JXDatePicker();&#xD;
    jLabel4 = new javax.swing.JLabel();&#xD;
    jLabel5 = new javax.swing.JLabel();&#xD;
    jdpto = new org.jdesktop.swingx.JXDatePicker();&#xD;
    jbClose = new javax.swing.JButton();&#xD;
    jbSearch = new javax.swing.JButton();&#xD;
    jcbGenus = new javax.swing.JComboBox();&#xD;
    jLabel2 = new javax.swing.JLabel();&#xD;
    jcbSpecies = new javax.swing.JComboBox();&#xD;
    jLabel3 = new javax.swing.JLabel();&#xD;
    jtfStrainNumber = new javax.swing.JTextField();&#xD;
    jLabel6 = new javax.swing.JLabel();&#xD;
    jcbCountry = new javax.swing.JComboBox();&#xD;
    jLabel7 = new javax.swing.JLabel();&#xD;
    jtfMSLT = new javax.swing.JTextField();&#xD;
    jLabel8 = new javax.swing.JLabel();&#xD;
    jcbExperiment = new javax.swing.JComboBox();&#xD;
    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);&#xD;
    setTitle(&quot;Search Lanes&quot;);&#xD;
    setResizable(false);&#xD;
    jLabel1.setText(&quot;Genus:&quot;);&#xD;
    jLabel4.setText(&quot;From:&quot;);&#xD;
    jLabel5.setText(&quot;To:&quot;);&#xD;
    jbClose.setText(&quot;Close&quot;);&#xD;
    jbClose.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbCloseActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jbSearch.setText(&quot;Search&quot;);&#xD;
    jbSearch.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbSearchActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jLabel2.setText(&quot;Species:&quot;);&#xD;
    jLabel3.setText(&quot;Strain Number:&quot;);&#xD;
    jLabel6.setText(&quot;Country:&quot;);&#xD;
    jLabel7.setText(&quot;MLST:&quot;);&#xD;
    jLabel8.setText(&quot;Experiment:&quot;);&#xD;
    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());&#xD;
    getContentPane().setLayout(layout);&#xD;
    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGap(17, 17, 17).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addComponent(jLabel1).addComponent(jLabel4).addComponent(jLabel2).addComponent(jLabel3).addComponent(jLabel6).addComponent(jLabel7).addComponent(jLabel8)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addComponent(jdpfrom, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel5).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jdpto, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)).addComponent(jcbGenus, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jcbSpecies, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jtfStrainNumber).addComponent(jcbCountry, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jtfMSLT).addComponent(jcbExperiment, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup().addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jbClose).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jbSearch))).addContainerGap()));&#xD;
    layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel1).addComponent(jcbGenus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel2).addComponent(jcbSpecies, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel3).addComponent(jtfStrainNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel6).addComponent(jcbCountry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel7).addComponent(jtfMSLT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel8).addComponent(jcbExperiment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jdpfrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel4)).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jdpto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel5))).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jbClose).addComponent(jbSearch)).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    pack();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G2vq0BUTEemIe6OhVnSywA" name="jbSearchActionPerformed" specification="_G2sngBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbSearchActionPerformed&#xD;
    String genus = String.valueOf(jcbGenus.getSelectedItem());&#xD;
    String species = String.valueOf(jcbSpecies.getSelectedItem());&#xD;
    String strainnumber = jtfStrainNumber.getText();&#xD;
    String country = String.valueOf(jcbCountry.getSelectedItem());&#xD;
    String MSLT = jtfMSLT.getText();&#xD;
    String experiment = String.valueOf(jcbExperiment.getSelectedItem());&#xD;
    DateFormat format = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;);&#xD;
    String fromDate = &quot;&quot;;&#xD;
    String toDate = &quot;&quot;;&#xD;
    if (jdpfrom.getDate() != null) {&#xD;
        fromDate = format.format(jdpfrom.getDate());&#xD;
    }&#xD;
    if (jdpto.getDate() != null) {&#xD;
        toDate = format.format(jdpto.getDate());&#xD;
    }&#xD;
    if (genus.equals(&quot;&quot;) &amp;&amp; species.equals(&quot;&quot;) &amp;&amp; strainnumber.equals(&quot;&quot;) &amp;&amp; country.equals(&quot;&quot;) &amp;&amp; MSLT.equals(&quot;&quot;) &amp;&amp; experiment.equals(&quot;&quot;) &amp;&amp; fromDate.equals(&quot;&quot;) &amp;&amp; toDate.equals(&quot;&quot;)) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;Introduce some value to search&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
    } else {&#xD;
        int n = 0;&#xD;
        if (!genus.equals(&quot;&quot;)) {&#xD;
            n++;&#xD;
        }&#xD;
        if (!species.equals(&quot;&quot;)) {&#xD;
            n++;&#xD;
        }&#xD;
        if (!strainnumber.equals(&quot;&quot;)) {&#xD;
            n++;&#xD;
        }&#xD;
        if (!country.equals(&quot;&quot;)) {&#xD;
            n++;&#xD;
        }&#xD;
        if (!MSLT.equals(&quot;&quot;)) {&#xD;
            n++;&#xD;
        }&#xD;
        if (!experiment.equals(&quot;&quot;)) {&#xD;
            n++;&#xD;
        }&#xD;
        if (!(fromDate.equals(&quot;&quot;))) {&#xD;
            n++;&#xD;
        }&#xD;
        if (!(toDate.equals(&quot;&quot;))) {&#xD;
            n++;&#xD;
        }&#xD;
        ArrayList&lt;LaneDB> lanes = searchlanes(m.studyid, genus, species, strainnumber, country, MSLT, experiment, fromDate, toDate, n);&#xD;
        if (lanes.isEmpty()) {&#xD;
            JOptionPane.showMessageDialog(this, &quot;Your search did not produce any result&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
        } else {&#xD;
            m.setLanes(lanes);&#xD;
            m.updatelanes(false);&#xD;
        }&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G2w48RUTEemIe6OhVnSywA" name="jbCloseActionPerformed" specification="_G2wR4BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbCloseActionPerformed&#xD;
    dispose();&#xD;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G2bhwBUTEemIe6OhVnSywA" name="SearchLanes" visibility="public" method="_G2gaQBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G2fMIBUTEemIe6OhVnSywA" name="se" type="_G2WpQBUTEemIe6OhVnSywA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G2hoYBUTEemIe6OhVnSywA" name="SearchLanes" visibility="public" method="_G2mg4BUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G2l50BUTEemIe6OhVnSywA" name="m" type="_Gul0YBUTEemIe6OhVnSywA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G2o9IBUTEemIe6OhVnSywA" name="initComponents" visibility="private" method="_G2qLQBUTEemIe6OhVnSywA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G2sngBUTEemIe6OhVnSywA" name="jbSearchActionPerformed" visibility="private" method="_G2vq0BUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G2vDwBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G2wR4BUTEemIe6OhVnSywA" name="jbCloseActionPerformed" visibility="private" method="_G2w48RUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G2w48BUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_G2WpQBUTEemIe6OhVnSywA" name="StudyEdit" visibility="public">
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HIFScBUTEemIe6OhVnSywA" name="studyid" visibility="public" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HIHHoBUTEemIe6OhVnSywA" name="experiments" visibility="private" type="_EJs1wBUTEemIe6OhVnSywA" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_HIHusBUTEemIe6OhVnSywA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HIIVwBUTEemIe6OhVnSywA" value="*"/>
              <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_HII80BUTEemIe6OhVnSywA" name="defaultValue">
                <language>JAVA</language>
                <body>new ArrayList&lt;>()</body>
              </defaultValue>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HIKK8BUTEemIe6OhVnSywA" name="comparisons" visibility="private" type="_EHPXoBUTEemIe6OhVnSywA" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_HILZEBUTEemIe6OhVnSywA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HIMAIBUTEemIe6OhVnSywA" value="*"/>
              <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_HIMnMBUTEemIe6OhVnSywA" name="defaultValue">
                <language>JAVA</language>
                <body>new ArrayList&lt;>()</body>
              </defaultValue>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HIOcYBUTEemIe6OhVnSywA" name="lanes" visibility="private" type="_EHtRsBUTEemIe6OhVnSywA" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_HIQRkBUTEemIe6OhVnSywA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HIQ4oBUTEemIe6OhVnSywA" value="*"/>
              <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_HIRfsBUTEemIe6OhVnSywA" name="defaultValue">
                <language>JAVA</language>
                <body>new ArrayList&lt;>()</body>
              </defaultValue>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HISGwBUTEemIe6OhVnSywA" name="additionalfields" visibility="private" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_HISGwRUTEemIe6OhVnSywA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HISt0BUTEemIe6OhVnSywA" value="*"/>
              <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_HISt0RUTEemIe6OhVnSywA" name="defaultValue">
                <language>JAVA</language>
                <body>new ArrayList&lt;>()</body>
              </defaultValue>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HISt0hUTEemIe6OhVnSywA" name="firsttime" visibility="private" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_HISt0xUTEemIe6OhVnSywA" name="defaultValue">
                <language>JAVA</language>
                <body>true</body>
              </defaultValue>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HJ1l8BUTEemIe6OhVnSywA" name="jButton1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HJ2NABUTEemIe6OhVnSywA" name="jMenu1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HJ2NARUTEemIe6OhVnSywA" name="jMenu2" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HJ20EBUTEemIe6OhVnSywA" name="jMenu3" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HJ3bIBUTEemIe6OhVnSywA" name="jMenuBar1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HJ3bIRUTEemIe6OhVnSywA" name="jPanel1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HJ4CMBUTEemIe6OhVnSywA" name="jPanel2" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HJ4CMRUTEemIe6OhVnSywA" name="jPanel3" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HJ4pQBUTEemIe6OhVnSywA" name="jScrollPane1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HJ5QUBUTEemIe6OhVnSywA" name="jScrollPane2" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HJ5QURUTEemIe6OhVnSywA" name="jScrollPane3" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HJ8ToBUTEemIe6OhVnSywA" name="jTabbedPane5" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HJ86sBUTEemIe6OhVnSywA" name="jbAddExp" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HJ86sRUTEemIe6OhVnSywA" name="jbAddField" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HJ9hwBUTEemIe6OhVnSywA" name="jbAddtoComp" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HJ9hwRUTEemIe6OhVnSywA" name="jbAddtoCompLane" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HJ9hwhUTEemIe6OhVnSywA" name="jbDelete" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HJ-I0BUTEemIe6OhVnSywA" name="jbDeleteComp" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HJ-I0RUTEemIe6OhVnSywA" name="jbDeleteExp" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HJ-v4BUTEemIe6OhVnSywA" name="jbDeleteField" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HJ-v4RUTEemIe6OhVnSywA" name="jbDuplicateComp" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HJ-v4hUTEemIe6OhVnSywA" name="jbEditComp" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HJ_W8BUTEemIe6OhVnSywA" name="jbEditExp" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HJ_W8RUTEemIe6OhVnSywA" name="jbEditLane" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HJ_-ABUTEemIe6OhVnSywA" name="jbNewComp" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HJ_-ARUTEemIe6OhVnSywA" name="jbRunComp" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HKAlEBUTEemIe6OhVnSywA" name="jbSearchComp" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HKAlERUTEemIe6OhVnSywA" name="jbSearchLanes" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HKAlEhUTEemIe6OhVnSywA" name="jbSearchSim" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HKBMIBUTEemIe6OhVnSywA" name="jbSearchexp" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HKBMIRUTEemIe6OhVnSywA" name="jbShowAll" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HKBMIhUTEemIe6OhVnSywA" name="jbShowAllComp" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HKBzMBUTEemIe6OhVnSywA" name="jbShowAllLanes" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HKBzMRUTEemIe6OhVnSywA" name="jbViewExp" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HKBzMhUTEemIe6OhVnSywA" name="jbViewLane" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HKCaQBUTEemIe6OhVnSywA" name="jmiClose" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HKCaQRUTEemIe6OhVnSywA" name="jmiExport" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HKDBUBUTEemIe6OhVnSywA" name="jmiStudyProps" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HKDBURUTEemIe6OhVnSywA" name="jtComparisons" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HKDBUhUTEemIe6OhVnSywA" name="jtExperiments" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HKDoYBUTEemIe6OhVnSywA" name="jtLanes" visibility="private" isUnique="false"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HIWYMBUTEemIe6OhVnSywA" name="StudyEdit" specification="_HISt1BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    initComponents();&#xD;
    this.studyid = studyid;&#xD;
    updateexperiments(true);&#xD;
    updatecomparisons(true);&#xD;
    updatelanes(true);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HIYNYBUTEemIe6OhVnSywA" name="generatecountriescombobox" specification="_HIW_QBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    JComboBox comboBox = new JComboBox();&#xD;
    String[] locales = Locale.getISOCountries();&#xD;
    ArrayList&lt;String> countries = new ArrayList&lt;>();&#xD;
    for (String countryCode : locales) {&#xD;
        Locale obj = new Locale(&quot;&quot;, countryCode);&#xD;
        countries.add(obj.getDisplayCountry());&#xD;
    }&#xD;
    Collections.sort(countries);&#xD;
    for (String country : countries) {&#xD;
        comboBox.addItem(country);&#xD;
    }&#xD;
    return comboBox;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HIce0BUTEemIe6OhVnSywA" name="updateexperiments" specification="_HIapoBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    if (all) {&#xD;
        experiments = getExperiments(studyid);&#xD;
    }&#xD;
    String[] names = { &quot;Experiment&quot;, &quot;Date&quot;, &quot;Author&quot;, &quot;Marker&quot;, &quot;Comments&quot; };&#xD;
    String[][] data = new String[experiments.size()][5];&#xD;
    // We update the table&#xD;
    for (int i = 0; i &lt; experiments.size(); i++) {&#xD;
        data[i][0] = experiments.get(i).getName();&#xD;
        data[i][1] = experiments.get(i).getDate().toString();&#xD;
        data[i][2] = experiments.get(i).getUser().getUsername();&#xD;
        data[i][3] = experiments.get(i).getMarker().getName();&#xD;
        data[i][4] = experiments.get(i).getComments();&#xD;
    }&#xD;
    // Operations to change the model, we disable the edition of the date&#xD;
    DefaultTableModel model = new DefaultTableModel(data, names) {&#xD;
&#xD;
        public boolean isCellEditable(int rowIndex, int mColIndex) {&#xD;
            if (mColIndex == 0 || mColIndex == 4) {&#xD;
                return true;&#xD;
            } else {&#xD;
                return false;&#xD;
            }&#xD;
        }&#xD;
    };&#xD;
    model.addTableModelListener(this);&#xD;
    jtExperiments.setModel(model);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HIe7EBUTEemIe6OhVnSywA" name="generatesimilaritycombobox" specification="_HIds8BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    JComboBox comboBox = new JComboBox();&#xD;
    comboBox.addItem(&quot;Dice&quot;);&#xD;
    comboBox.addItem(&quot;Jaccard&quot;);&#xD;
    comboBox.addItem(&quot;Band difference&quot;);&#xD;
    comboBox.addItem(&quot;Jeffrey's X&quot;);&#xD;
    comboBox.addItem(&quot;Ochiai&quot;);&#xD;
    comboBox.addItem(&quot;Pearson correlation&quot;);&#xD;
    comboBox.addItem(&quot;Cosine coefficient&quot;);&#xD;
    comboBox.addItem(&quot;Euclidean distance&quot;);&#xD;
    comboBox.addItem(&quot;Manhattan distance&quot;);&#xD;
    return comboBox;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HIgwQRUTEemIe6OhVnSywA" name="generatelinkagecombobox" specification="_HIgJMBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    JComboBox comboBox = new JComboBox();&#xD;
    comboBox.addItem(&quot;UPGMA&quot;);&#xD;
    comboBox.addItem(&quot;UPGMC&quot;);&#xD;
    comboBox.addItem(&quot;Single linkage&quot;);&#xD;
    comboBox.addItem(&quot;Complete linkage&quot;);&#xD;
    comboBox.addItem(&quot;Mean linkage&quot;);&#xD;
    comboBox.addItem(&quot;Ward&quot;);&#xD;
    return comboBox;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HIjzkBUTEemIe6OhVnSywA" name="updatecomparisons" specification="_HIilcBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    if (all) {&#xD;
        comparisons = getComparisons(studyid);&#xD;
    }&#xD;
    String[] names = { &quot;Comparison&quot;, &quot;Date&quot;, &quot;Similarity&quot;, &quot;Linkage&quot;, &quot;Tolerance&quot;, &quot;Comments&quot; };&#xD;
    Object[][] data = new Object[comparisons.size()][6];&#xD;
    // We update the table&#xD;
    for (int i = 0; i &lt; comparisons.size(); i++) {&#xD;
        data[i][0] = comparisons.get(i).getName();&#xD;
        data[i][1] = comparisons.get(i).getDate().toString();&#xD;
        data[i][2] = comparisons.get(i).getSimilarityMethod();&#xD;
        data[i][3] = comparisons.get(i).getLinkage();&#xD;
        data[i][4] = comparisons.get(i).getTolerance();&#xD;
        data[i][5] = comparisons.get(i).getComments();&#xD;
    }&#xD;
    // Operations to change the model, we disable the edition of the date&#xD;
    DefaultTableModel model = new DefaultTableModel(data, names) {&#xD;
&#xD;
        public boolean isCellEditable(int rowIndex, int mColIndex) {&#xD;
            if (mColIndex == 1) {&#xD;
                return false;&#xD;
            } else {&#xD;
                return true;&#xD;
            }&#xD;
        }&#xD;
    };&#xD;
    model.addTableModelListener(this);&#xD;
    jtComparisons.setModel(model);&#xD;
    TableColumn similaritycolumn = jtComparisons.getColumnModel().getColumn(2);&#xD;
    similaritycolumn.setCellEditor(new DefaultCellEditor(generatesimilaritycombobox()));&#xD;
    TableColumn linkagecolumn = jtComparisons.getColumnModel().getColumn(3);&#xD;
    linkagecolumn.setCellEditor(new DefaultCellEditor(generatelinkagecombobox()));&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HInd8BUTEemIe6OhVnSywA" name="updatelanes" specification="_HIlBsBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    if (all) {&#xD;
        lanes = getLanes(studyid);&#xD;
    }&#xD;
    if (firsttime) {&#xD;
        additionalfields = getAdditionalFields(studyid);&#xD;
        firsttime = false;&#xD;
    }&#xD;
    String[] names0 = { &quot;Genus&quot;, &quot;Species&quot;, &quot;Strain Number&quot;, &quot;Country&quot;, &quot;MSLT&quot;, &quot;isMarker&quot;, &quot;Experiment&quot;, &quot;Comments&quot; };&#xD;
    String[] names = new String[names0.length + additionalfields.size()];&#xD;
    for (int i = 0; i &lt; names0.length; i++) {&#xD;
        names[i] = names0[i];&#xD;
    }&#xD;
    for (int i = 0; i &lt; additionalfields.size(); i++) {&#xD;
        names[i + names0.length] = additionalfields.get(i);&#xD;
    }&#xD;
    Object[][] data = new Object[lanes.size()][names.length];&#xD;
    // We update the table&#xD;
    for (int i = 0; i &lt; lanes.size(); i++) {&#xD;
        data[i][0] = lanes.get(i).getGenus();&#xD;
        data[i][1] = lanes.get(i).getSpecies();&#xD;
        data[i][2] = lanes.get(i).getStrainNumber();&#xD;
        data[i][3] = lanes.get(i).getCountry();&#xD;
        data[i][4] = lanes.get(i).getMSLT();&#xD;
        data[i][5] = lanes.get(i).isIsMarker();&#xD;
        data[i][6] = lanes.get(i).getExperiment().getName();&#xD;
        data[i][7] = lanes.get(i).getComments();&#xD;
        for (int j = 0; j &lt; additionalfields.size(); j++) {&#xD;
            data[i][8 + j] = lanes.get(i).getLaneaddedinfo().get(additionalfields.get(j));&#xD;
        }&#xD;
    }&#xD;
    // Operations to change the model, we disable the edition of the date&#xD;
    DefaultTableModel model = new DefaultTableModel(data, names) {&#xD;
&#xD;
        public boolean isCellEditable(int rowIndex, int mColIndex) {&#xD;
            if (mColIndex == 6) {&#xD;
                return false;&#xD;
            } else {&#xD;
                return true;&#xD;
            }&#xD;
        }&#xD;
&#xD;
        public Class getColumnClass(int columnIndex) {&#xD;
            if (columnIndex == 5) {&#xD;
                return java.lang.Boolean.class;&#xD;
            } else {&#xD;
                return java.lang.Object.class;&#xD;
            }&#xD;
        }&#xD;
    };&#xD;
    model.addTableModelListener(this);&#xD;
    jtLanes.setModel(model);&#xD;
    TableColumn countriescolumn = jtLanes.getColumnModel().getColumn(3);&#xD;
    countriescolumn.setCellEditor(new DefaultCellEditor(generatecountriescombobox()));&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HIrvYBUTEemIe6OhVnSywA" name="tableChanged" specification="_HIpTIBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    /// Modification in Experiments table &#xD;
    if (jtExperiments.getModel().toString().equals(e.getSource().toString())) {&#xD;
        int row = e.getFirstRow();&#xD;
        int column = e.getColumn();&#xD;
        String cellValue = String.valueOf(jtExperiments.getValueAt(row, column));&#xD;
        boolean b = (column == 0);&#xD;
        updateExperimentnameorcomments(experiments.get(row).getId(), cellValue, b);&#xD;
    }&#xD;
    /// Modification in Comparisons table&#xD;
    if (jtComparisons.getModel().toString().equals(e.getSource().toString())) {&#xD;
        int row = e.getFirstRow();&#xD;
        int column = e.getColumn();&#xD;
        Object cellValue = jtComparisons.getValueAt(row, column);&#xD;
        switch(column) {&#xD;
            case 0:&#xD;
                comparisons.get(row).setName(String.valueOf(cellValue));&#xD;
                ComparisonQueries.updateComparison(comparisons.get(row));&#xD;
                break;&#xD;
            case 2:&#xD;
                comparisons.get(row).setSimilarityMethod(String.valueOf(cellValue));&#xD;
                ComparisonQueries.updateComparison(comparisons.get(row));&#xD;
                break;&#xD;
            case 3:&#xD;
                comparisons.get(row).setLinkage(String.valueOf(cellValue));&#xD;
                ComparisonQueries.updateComparison(comparisons.get(row));&#xD;
                break;&#xD;
            case 4:&#xD;
                comparisons.get(row).setTolerance(Integer.valueOf(String.valueOf(cellValue)));&#xD;
                ComparisonQueries.updateComparison(comparisons.get(row));&#xD;
                break;&#xD;
            case 5:&#xD;
                comparisons.get(row).setComments(String.valueOf(cellValue));&#xD;
                ComparisonQueries.updateComparison(comparisons.get(row));&#xD;
                break;&#xD;
            default:&#xD;
                break;&#xD;
        }&#xD;
    }&#xD;
    /// Modification in Lanes table &#xD;
    if (jtLanes.getModel().toString().equals(e.getSource().toString())) {&#xD;
        int row = e.getFirstRow();&#xD;
        int column = e.getColumn();&#xD;
        if (column &lt;= 7) {&#xD;
            Object cellValue = jtLanes.getValueAt(row, column);&#xD;
            updateLane(lanes.get(row).getId(), cellValue, column);&#xD;
        } else {&#xD;
            String cellValue = String.valueOf(jtLanes.getValueAt(row, column));&#xD;
            lanes.get(row).addnewinfo(additionalfields.get(column - 8), cellValue);&#xD;
            if (containadditionalfield(lanes.get(row).getId(), additionalfields.get(column - 8))) {&#xD;
                updateLane(lanes.get(row));&#xD;
            } else {&#xD;
                insertLaneAddedInfo(lanes.get(row).getId(), additionalfields.get(column - 8), cellValue);&#xD;
            }&#xD;
        }&#xD;
        updatelanes(true);&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HI2HcBUTEemIe6OhVnSywA" name="initComponents" specification="_HIs9gBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    java.awt.GridBagConstraints gridBagConstraints;&#xD;
    jTabbedPane5 = new javax.swing.JTabbedPane();&#xD;
    jPanel1 = new javax.swing.JPanel();&#xD;
    jScrollPane1 = new javax.swing.JScrollPane();&#xD;
    jtExperiments = new javax.swing.JTable();&#xD;
    jbAddExp = new javax.swing.JButton();&#xD;
    jbEditExp = new javax.swing.JButton();&#xD;
    jbDeleteExp = new javax.swing.JButton();&#xD;
    jbViewExp = new javax.swing.JButton();&#xD;
    jbSearchexp = new javax.swing.JButton();&#xD;
    jbShowAll = new javax.swing.JButton();&#xD;
    jbAddtoComp = new javax.swing.JButton();&#xD;
    jButton1 = new javax.swing.JButton();&#xD;
    jPanel2 = new javax.swing.JPanel();&#xD;
    jScrollPane2 = new javax.swing.JScrollPane();&#xD;
    jtLanes = new javax.swing.JTable();&#xD;
    jbViewLane = new javax.swing.JButton();&#xD;
    jbEditLane = new javax.swing.JButton();&#xD;
    jbDelete = new javax.swing.JButton();&#xD;
    jbSearchLanes = new javax.swing.JButton();&#xD;
    jbShowAllLanes = new javax.swing.JButton();&#xD;
    jbAddtoCompLane = new javax.swing.JButton();&#xD;
    jbSearchSim = new javax.swing.JButton();&#xD;
    jbAddField = new javax.swing.JButton();&#xD;
    jbDeleteField = new javax.swing.JButton();&#xD;
    jPanel3 = new javax.swing.JPanel();&#xD;
    jScrollPane3 = new javax.swing.JScrollPane();&#xD;
    jtComparisons = new javax.swing.JTable();&#xD;
    jbNewComp = new javax.swing.JButton();&#xD;
    jbEditComp = new javax.swing.JButton();&#xD;
    jbRunComp = new javax.swing.JButton();&#xD;
    jbDeleteComp = new javax.swing.JButton();&#xD;
    jbDuplicateComp = new javax.swing.JButton();&#xD;
    jbSearchComp = new javax.swing.JButton();&#xD;
    jbShowAllComp = new javax.swing.JButton();&#xD;
    jMenuBar1 = new javax.swing.JMenuBar();&#xD;
    jMenu1 = new javax.swing.JMenu();&#xD;
    jmiExport = new javax.swing.JMenuItem();&#xD;
    jmiClose = new javax.swing.JMenuItem();&#xD;
    jMenu2 = new javax.swing.JMenu();&#xD;
    jmiStudyProps = new javax.swing.JMenuItem();&#xD;
    jMenu3 = new javax.swing.JMenu();&#xD;
    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);&#xD;
    jPanel1.setLayout(new java.awt.GridBagLayout());&#xD;
    jtExperiments.setModel(new javax.swing.table.DefaultTableModel(new Object[][] { { null, null, null, null, null }, { null, null, null, null, null }, { null, null, null, null, null }, { null, null, null, null, null } }, new String[] { &quot;Name&quot;, &quot;Date&quot;, &quot;Author&quot;, &quot;Marker&quot;, &quot;Comments&quot; }));&#xD;
    jScrollPane1.setViewportView(jtExperiments);&#xD;
    gridBagConstraints = new java.awt.GridBagConstraints();&#xD;
    gridBagConstraints.gridx = 0;&#xD;
    gridBagConstraints.gridy = 0;&#xD;
    gridBagConstraints.gridheight = 9;&#xD;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;&#xD;
    gridBagConstraints.ipadx = 385;&#xD;
    gridBagConstraints.ipady = 455;&#xD;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;&#xD;
    gridBagConstraints.weightx = 1.0;&#xD;
    gridBagConstraints.weighty = 1.0;&#xD;
    jPanel1.add(jScrollPane1, gridBagConstraints);&#xD;
    jbAddExp.setText(&quot;Add Experiment&quot;);&#xD;
    jbAddExp.setEnabled(false);&#xD;
    gridBagConstraints = new java.awt.GridBagConstraints();&#xD;
    gridBagConstraints.gridx = 1;&#xD;
    gridBagConstraints.gridy = 0;&#xD;
    gridBagConstraints.ipadx = 139;&#xD;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;&#xD;
    gridBagConstraints.insets = new java.awt.Insets(0, 6, 0, 0);&#xD;
    jPanel1.add(jbAddExp, gridBagConstraints);&#xD;
    jbEditExp.setText(&quot;Edit Experiment&quot;);&#xD;
    jbEditExp.setEnabled(false);&#xD;
    gridBagConstraints = new java.awt.GridBagConstraints();&#xD;
    gridBagConstraints.gridx = 1;&#xD;
    gridBagConstraints.gridy = 1;&#xD;
    gridBagConstraints.ipadx = 139;&#xD;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;&#xD;
    gridBagConstraints.insets = new java.awt.Insets(6, 6, 0, 0);&#xD;
    jPanel1.add(jbEditExp, gridBagConstraints);&#xD;
    jbDeleteExp.setText(&quot;Delete Experiment&quot;);&#xD;
    jbDeleteExp.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbDeleteExpActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    gridBagConstraints = new java.awt.GridBagConstraints();&#xD;
    gridBagConstraints.gridx = 1;&#xD;
    gridBagConstraints.gridy = 2;&#xD;
    gridBagConstraints.ipadx = 119;&#xD;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;&#xD;
    gridBagConstraints.insets = new java.awt.Insets(6, 6, 0, 0);&#xD;
    jPanel1.add(jbDeleteExp, gridBagConstraints);&#xD;
    jbViewExp.setText(&quot;View Experiment&quot;);&#xD;
    jbViewExp.setEnabled(false);&#xD;
    gridBagConstraints = new java.awt.GridBagConstraints();&#xD;
    gridBagConstraints.gridx = 1;&#xD;
    gridBagConstraints.gridy = 3;&#xD;
    gridBagConstraints.ipadx = 133;&#xD;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;&#xD;
    gridBagConstraints.insets = new java.awt.Insets(6, 6, 0, 0);&#xD;
    jPanel1.add(jbViewExp, gridBagConstraints);&#xD;
    jbSearchexp.setText(&quot;Search Experiments&quot;);&#xD;
    jbSearchexp.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbSearchexpActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    gridBagConstraints = new java.awt.GridBagConstraints();&#xD;
    gridBagConstraints.gridx = 1;&#xD;
    gridBagConstraints.gridy = 5;&#xD;
    gridBagConstraints.ipadx = 112;&#xD;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;&#xD;
    gridBagConstraints.insets = new java.awt.Insets(6, 6, 0, 0);&#xD;
    jPanel1.add(jbSearchexp, gridBagConstraints);&#xD;
    jbShowAll.setText(&quot;Show All&quot;);&#xD;
    jbShowAll.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbShowAllActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    gridBagConstraints = new java.awt.GridBagConstraints();&#xD;
    gridBagConstraints.gridx = 1;&#xD;
    gridBagConstraints.gridy = 6;&#xD;
    gridBagConstraints.ipadx = 193;&#xD;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;&#xD;
    gridBagConstraints.insets = new java.awt.Insets(6, 6, 0, 0);&#xD;
    jPanel1.add(jbShowAll, gridBagConstraints);&#xD;
    jbAddtoComp.setText(&quot;Add to Comparison&quot;);&#xD;
    jbAddtoComp.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbAddtoCompActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    gridBagConstraints = new java.awt.GridBagConstraints();&#xD;
    gridBagConstraints.gridx = 1;&#xD;
    gridBagConstraints.gridy = 7;&#xD;
    gridBagConstraints.ipadx = 118;&#xD;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;&#xD;
    gridBagConstraints.insets = new java.awt.Insets(6, 6, 0, 0);&#xD;
    jPanel1.add(jbAddtoComp, gridBagConstraints);&#xD;
    jButton1.setText(&quot;Export Experiment&quot;);&#xD;
    jButton1.setEnabled(false);&#xD;
    gridBagConstraints = new java.awt.GridBagConstraints();&#xD;
    gridBagConstraints.gridx = 1;&#xD;
    gridBagConstraints.gridy = 4;&#xD;
    gridBagConstraints.ipadx = 120;&#xD;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;&#xD;
    gridBagConstraints.insets = new java.awt.Insets(6, 6, 0, 0);&#xD;
    jPanel1.add(jButton1, gridBagConstraints);&#xD;
    jTabbedPane5.addTab(&quot;Experiments&quot;, jPanel1);&#xD;
    jPanel2.setLayout(new java.awt.GridBagLayout());&#xD;
    jtLanes.setModel(new javax.swing.table.DefaultTableModel(new Object[][] { { null, null, null, null, null, null, null, null }, { null, null, null, null, null, null, null, null }, { null, null, null, null, null, null, null, null }, { null, null, null, null, null, null, null, null } }, new String[] { &quot;Genus&quot;, &quot;Species&quot;, &quot;Strain Number&quot;, &quot;Country&quot;, &quot;MSLT&quot;, &quot;Marker&quot;, &quot;Experiment&quot;, &quot;Comments&quot; }) {&#xD;
&#xD;
        Class[] types = new Class[] { java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class };&#xD;
&#xD;
        public Class getColumnClass(int columnIndex) {&#xD;
            return types[columnIndex];&#xD;
        }&#xD;
    });&#xD;
    jScrollPane2.setViewportView(jtLanes);&#xD;
    gridBagConstraints = new java.awt.GridBagConstraints();&#xD;
    gridBagConstraints.gridx = 0;&#xD;
    gridBagConstraints.gridy = 0;&#xD;
    gridBagConstraints.gridheight = 10;&#xD;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;&#xD;
    gridBagConstraints.ipadx = 430;&#xD;
    gridBagConstraints.ipady = 455;&#xD;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;&#xD;
    gridBagConstraints.weightx = 1.0;&#xD;
    gridBagConstraints.weighty = 1.0;&#xD;
    jPanel2.add(jScrollPane2, gridBagConstraints);&#xD;
    jbViewLane.setText(&quot;View Lane&quot;);&#xD;
    jbViewLane.setEnabled(false);&#xD;
    gridBagConstraints = new java.awt.GridBagConstraints();&#xD;
    gridBagConstraints.gridx = 1;&#xD;
    gridBagConstraints.gridy = 0;&#xD;
    gridBagConstraints.ipadx = 196;&#xD;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;&#xD;
    gridBagConstraints.insets = new java.awt.Insets(0, 6, 0, 0);&#xD;
    jPanel2.add(jbViewLane, gridBagConstraints);&#xD;
    jbEditLane.setText(&quot;Edit Lane&quot;);&#xD;
    jbEditLane.setEnabled(false);&#xD;
    gridBagConstraints = new java.awt.GridBagConstraints();&#xD;
    gridBagConstraints.gridx = 1;&#xD;
    gridBagConstraints.gridy = 1;&#xD;
    gridBagConstraints.ipadx = 202;&#xD;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;&#xD;
    gridBagConstraints.insets = new java.awt.Insets(6, 6, 0, 0);&#xD;
    jPanel2.add(jbEditLane, gridBagConstraints);&#xD;
    jbDelete.setText(&quot;Delete Lane&quot;);&#xD;
    jbDelete.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbDeleteActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    gridBagConstraints = new java.awt.GridBagConstraints();&#xD;
    gridBagConstraints.gridx = 1;&#xD;
    gridBagConstraints.gridy = 2;&#xD;
    gridBagConstraints.ipadx = 182;&#xD;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;&#xD;
    gridBagConstraints.insets = new java.awt.Insets(6, 6, 0, 0);&#xD;
    jPanel2.add(jbDelete, gridBagConstraints);&#xD;
    jbSearchLanes.setText(&quot;Search Lanes&quot;);&#xD;
    jbSearchLanes.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbSearchLanesActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    gridBagConstraints = new java.awt.GridBagConstraints();&#xD;
    gridBagConstraints.gridx = 1;&#xD;
    gridBagConstraints.gridy = 3;&#xD;
    gridBagConstraints.ipadx = 175;&#xD;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;&#xD;
    gridBagConstraints.insets = new java.awt.Insets(6, 6, 0, 0);&#xD;
    jPanel2.add(jbSearchLanes, gridBagConstraints);&#xD;
    jbShowAllLanes.setText(&quot;Show All&quot;);&#xD;
    jbShowAllLanes.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbShowAllLanesActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    gridBagConstraints = new java.awt.GridBagConstraints();&#xD;
    gridBagConstraints.gridx = 1;&#xD;
    gridBagConstraints.gridy = 4;&#xD;
    gridBagConstraints.ipadx = 208;&#xD;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;&#xD;
    gridBagConstraints.insets = new java.awt.Insets(6, 6, 0, 0);&#xD;
    jPanel2.add(jbShowAllLanes, gridBagConstraints);&#xD;
    jbAddtoCompLane.setText(&quot;Add to Comparison&quot;);&#xD;
    jbAddtoCompLane.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbAddtoCompLaneActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    gridBagConstraints = new java.awt.GridBagConstraints();&#xD;
    gridBagConstraints.gridx = 1;&#xD;
    gridBagConstraints.gridy = 5;&#xD;
    gridBagConstraints.ipadx = 133;&#xD;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;&#xD;
    gridBagConstraints.insets = new java.awt.Insets(6, 6, 0, 0);&#xD;
    jPanel2.add(jbAddtoCompLane, gridBagConstraints);&#xD;
    jbSearchSim.setText(&quot;Find Similarities&quot;);&#xD;
    jbSearchSim.setEnabled(false);&#xD;
    gridBagConstraints = new java.awt.GridBagConstraints();&#xD;
    gridBagConstraints.gridx = 1;&#xD;
    gridBagConstraints.gridy = 6;&#xD;
    gridBagConstraints.ipadx = 156;&#xD;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;&#xD;
    gridBagConstraints.insets = new java.awt.Insets(6, 6, 0, 0);&#xD;
    jPanel2.add(jbSearchSim, gridBagConstraints);&#xD;
    jbAddField.setText(&quot;Add Field&quot;);&#xD;
    jbAddField.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbAddFieldActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    gridBagConstraints = new java.awt.GridBagConstraints();&#xD;
    gridBagConstraints.gridx = 1;&#xD;
    gridBagConstraints.gridy = 7;&#xD;
    gridBagConstraints.ipadx = 201;&#xD;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;&#xD;
    gridBagConstraints.insets = new java.awt.Insets(6, 6, 0, 0);&#xD;
    jPanel2.add(jbAddField, gridBagConstraints);&#xD;
    jbDeleteField.setText(&quot;Delete Field&quot;);&#xD;
    jbDeleteField.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbDeleteFieldActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    gridBagConstraints = new java.awt.GridBagConstraints();&#xD;
    gridBagConstraints.gridx = 1;&#xD;
    gridBagConstraints.gridy = 8;&#xD;
    gridBagConstraints.ipadx = 181;&#xD;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;&#xD;
    gridBagConstraints.insets = new java.awt.Insets(6, 6, 0, 0);&#xD;
    jPanel2.add(jbDeleteField, gridBagConstraints);&#xD;
    jTabbedPane5.addTab(&quot;Lanes&quot;, jPanel2);&#xD;
    jPanel3.setLayout(new java.awt.GridBagLayout());&#xD;
    jtComparisons.setModel(new javax.swing.table.DefaultTableModel(new Object[][] { { null, null, null, null, null, null }, { null, null, null, null, null, null }, { null, null, null, null, null, null }, { null, null, null, null, null, null } }, new String[] { &quot;Name&quot;, &quot;Date&quot;, &quot;Similarity Method&quot;, &quot;Linkage Method&quot;, &quot;Tolerance&quot;, &quot;Comments&quot; }) {&#xD;
&#xD;
        Class[] types = new Class[] { java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Object.class };&#xD;
&#xD;
        boolean[] canEdit = new boolean[] { false, false, false, false, false, false };&#xD;
&#xD;
        public Class getColumnClass(int columnIndex) {&#xD;
            return types[columnIndex];&#xD;
        }&#xD;
&#xD;
        public boolean isCellEditable(int rowIndex, int columnIndex) {&#xD;
            return canEdit[columnIndex];&#xD;
        }&#xD;
    });&#xD;
    jScrollPane3.setViewportView(jtComparisons);&#xD;
    gridBagConstraints = new java.awt.GridBagConstraints();&#xD;
    gridBagConstraints.gridx = 0;&#xD;
    gridBagConstraints.gridy = 0;&#xD;
    gridBagConstraints.gridheight = 8;&#xD;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;&#xD;
    gridBagConstraints.ipadx = 360;&#xD;
    gridBagConstraints.ipady = 455;&#xD;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;&#xD;
    gridBagConstraints.weightx = 1.0;&#xD;
    gridBagConstraints.weighty = 1.0;&#xD;
    jPanel3.add(jScrollPane3, gridBagConstraints);&#xD;
    jbNewComp.setText(&quot;New Comparison&quot;);&#xD;
    jbNewComp.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbNewCompActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    gridBagConstraints = new java.awt.GridBagConstraints();&#xD;
    gridBagConstraints.gridx = 1;&#xD;
    gridBagConstraints.gridy = 0;&#xD;
    gridBagConstraints.ipadx = 151;&#xD;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;&#xD;
    gridBagConstraints.insets = new java.awt.Insets(0, 6, 0, 0);&#xD;
    jPanel3.add(jbNewComp, gridBagConstraints);&#xD;
    jbEditComp.setText(&quot;View Lanes of Comparison&quot;);&#xD;
    jbEditComp.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbEditCompActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    gridBagConstraints = new java.awt.GridBagConstraints();&#xD;
    gridBagConstraints.gridx = 1;&#xD;
    gridBagConstraints.gridy = 1;&#xD;
    gridBagConstraints.ipadx = 83;&#xD;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;&#xD;
    gridBagConstraints.insets = new java.awt.Insets(6, 6, 0, 0);&#xD;
    jPanel3.add(jbEditComp, gridBagConstraints);&#xD;
    jbRunComp.setText(&quot;Run Comparison&quot;);&#xD;
    jbRunComp.setEnabled(false);&#xD;
    gridBagConstraints = new java.awt.GridBagConstraints();&#xD;
    gridBagConstraints.gridx = 1;&#xD;
    gridBagConstraints.gridy = 2;&#xD;
    gridBagConstraints.ipadx = 154;&#xD;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;&#xD;
    gridBagConstraints.insets = new java.awt.Insets(6, 6, 0, 0);&#xD;
    jPanel3.add(jbRunComp, gridBagConstraints);&#xD;
    jbDeleteComp.setText(&quot;Delete Comparison&quot;);&#xD;
    jbDeleteComp.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbDeleteCompActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    gridBagConstraints = new java.awt.GridBagConstraints();&#xD;
    gridBagConstraints.gridx = 1;&#xD;
    gridBagConstraints.gridy = 3;&#xD;
    gridBagConstraints.ipadx = 133;&#xD;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;&#xD;
    gridBagConstraints.insets = new java.awt.Insets(6, 6, 0, 0);&#xD;
    jPanel3.add(jbDeleteComp, gridBagConstraints);&#xD;
    jbDuplicateComp.setText(&quot;Duplicate Comparison&quot;);&#xD;
    jbDuplicateComp.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbDuplicateCompActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    gridBagConstraints = new java.awt.GridBagConstraints();&#xD;
    gridBagConstraints.gridx = 1;&#xD;
    gridBagConstraints.gridy = 4;&#xD;
    gridBagConstraints.ipadx = 113;&#xD;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;&#xD;
    gridBagConstraints.insets = new java.awt.Insets(6, 6, 0, 0);&#xD;
    jPanel3.add(jbDuplicateComp, gridBagConstraints);&#xD;
    jbSearchComp.setText(&quot;Search Comparison&quot;);&#xD;
    jbSearchComp.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbSearchCompActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    gridBagConstraints = new java.awt.GridBagConstraints();&#xD;
    gridBagConstraints.gridx = 1;&#xD;
    gridBagConstraints.gridy = 5;&#xD;
    gridBagConstraints.ipadx = 133;&#xD;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;&#xD;
    gridBagConstraints.insets = new java.awt.Insets(6, 6, 0, 0);&#xD;
    jPanel3.add(jbSearchComp, gridBagConstraints);&#xD;
    jbShowAllComp.setText(&quot;Show All&quot;);&#xD;
    jbShowAllComp.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbShowAllCompActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    gridBagConstraints = new java.awt.GridBagConstraints();&#xD;
    gridBagConstraints.gridx = 1;&#xD;
    gridBagConstraints.gridy = 6;&#xD;
    gridBagConstraints.ipadx = 208;&#xD;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;&#xD;
    gridBagConstraints.insets = new java.awt.Insets(6, 6, 0, 0);&#xD;
    jPanel3.add(jbShowAllComp, gridBagConstraints);&#xD;
    jTabbedPane5.addTab(&quot;Comparisons&quot;, jPanel3);&#xD;
    jMenu1.setText(&quot;File&quot;);&#xD;
    jmiExport.setText(&quot;Export&quot;);&#xD;
    jMenu1.add(jmiExport);&#xD;
    jmiClose.setText(&quot;Close&quot;);&#xD;
    jMenu1.add(jmiClose);&#xD;
    jMenuBar1.add(jMenu1);&#xD;
    jMenu2.setText(&quot;Edit&quot;);&#xD;
    jmiStudyProps.setText(&quot;Study Properties&quot;);&#xD;
    jMenu2.add(jmiStudyProps);&#xD;
    jMenuBar1.add(jMenu2);&#xD;
    jMenu3.setText(&quot;Help&quot;);&#xD;
    jMenuBar1.add(jMenu3);&#xD;
    setJMenuBar(jMenuBar1);&#xD;
    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());&#xD;
    getContentPane().setLayout(layout);&#xD;
    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jTabbedPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 687, Short.MAX_VALUE));&#xD;
    layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jTabbedPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 518, Short.MAX_VALUE));&#xD;
    pack();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HI5x0BUTEemIe6OhVnSywA" name="jbAddFieldActionPerformed" specification="_HI38oBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbAddFieldActionPerformed&#xD;
    String fieldName = JOptionPane.showInputDialog(&quot;Introduce the name of the new field&quot;);&#xD;
    if (additionalfields.contains(fieldName)) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;There is already a field with that name&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
    } else {&#xD;
        additionalfields.add(fieldName);&#xD;
        updatelanes(true);&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HI8OEBUTEemIe6OhVnSywA" name="jbDeleteFieldActionPerformed" specification="_HI6_8BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbDeleteFieldActionPerformed&#xD;
    String[] fields = new String[additionalfields.size()];&#xD;
    for (int i = 0; i &lt; fields.length; i++) {&#xD;
        fields[i] = additionalfields.get(i);&#xD;
    }&#xD;
    String selectedfield = (String) JOptionPane.showInputDialog(this, &quot;Select the field to remove&quot;, &quot;&quot;, INFORMATION_MESSAGE, null, fields, fields[0]);&#xD;
    additionalfields.remove(selectedfield);&#xD;
    updatelanes(true);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HJAfgBUTEemIe6OhVnSywA" name="jbDeleteExpActionPerformed" specification="_HI-DQBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbDeleteExpActionPerformed&#xD;
    int row = jtExperiments.getSelectedRow();&#xD;
    if (row == -1) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;Select an experiment first&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
    } else {&#xD;
        boolean ce = existscomparisonsexperiment(experiments.get(row).getId());&#xD;
        if (ce) {&#xD;
            int reply = JOptionPane.showConfirmDialog(this, &quot;Some comparisons include lanes of this experiment.&quot; + &quot; If you remove the experiment, such comparisons will also be removed. &quot; + &quot;Do you want to remove this experiment?&quot;, &quot;Delete experiment&quot;, JOptionPane.YES_NO_OPTION);&#xD;
            if (reply == JOptionPane.YES_OPTION) {&#xD;
                deletecomparisonsexperiment(experiments.get(row).getId());&#xD;
                deleteexperiment(experiments.get(row).getId());&#xD;
                updateexperiments(true);&#xD;
                updatelanes(true);&#xD;
                updatecomparisons(true);&#xD;
            }&#xD;
        } else {&#xD;
            int reply = JOptionPane.showConfirmDialog(this, &quot;Do you want to remove this experiment? &quot; + &quot;This will remove all the lanes of the experiment&quot;, &quot;Delete experiment&quot;, JOptionPane.YES_NO_OPTION);&#xD;
            if (reply == JOptionPane.YES_OPTION) {&#xD;
                deleteexperiment(experiments.get(row).getId());&#xD;
                updateexperiments(true);&#xD;
                updatelanes(true);&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HJEJ4BUTEemIe6OhVnSywA" name="jbDeleteCompActionPerformed" specification="_HJC7wBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbDeleteCompActionPerformed&#xD;
    int row = jtComparisons.getSelectedRow();&#xD;
    if (row == -1) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;Select a comparison first&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
    } else {&#xD;
        int reply = JOptionPane.showConfirmDialog(this, &quot;Do you want to remove this comparison? &quot;, &quot;Delete comparison&quot;, JOptionPane.YES_NO_OPTION);&#xD;
        if (reply == JOptionPane.YES_OPTION) {&#xD;
            deletecomparison(comparisons.get(row).getId());&#xD;
            updatecomparisons(true);&#xD;
        }&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HJH0QBUTEemIe6OhVnSywA" name="jbDeleteActionPerformed" specification="_HJF_EBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbDeleteActionPerformed&#xD;
    int row = jtLanes.getSelectedRow();&#xD;
    if (row == -1) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;Select a lane first&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
    } else {&#xD;
        boolean ce = existscomparisonslane(lanes.get(row).getId());&#xD;
        if (ce) {&#xD;
            int reply = JOptionPane.showConfirmDialog(this, &quot;Some comparisons include this lane.&quot; + &quot; If you remove the lane, such comparisons will also be removed. &quot; + &quot;Do you want to remove this lane?&quot;, &quot;Delete lane&quot;, JOptionPane.YES_NO_OPTION);&#xD;
            if (reply == JOptionPane.YES_OPTION) {&#xD;
                deletecomparisonslane(lanes.get(row).getId());&#xD;
                deletelane(lanes.get(row).getId());&#xD;
                updatelanes(true);&#xD;
                updatecomparisons(true);&#xD;
            }&#xD;
        } else {&#xD;
            int reply = JOptionPane.showConfirmDialog(this, &quot;Do you want to remove this lane? &quot;, &quot;Delete lane&quot;, JOptionPane.YES_NO_OPTION);&#xD;
            if (reply == JOptionPane.YES_OPTION) {&#xD;
                deletelane(lanes.get(row).getId());&#xD;
                updatelanes(true);&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HJKQgBUTEemIe6OhVnSywA" name="jbShowAllActionPerformed" specification="_HJIbUBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbShowAllActionPerformed&#xD;
    updateexperiments(true);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HJNT0RUTEemIe6OhVnSywA" name="jbShowAllLanesActionPerformed" specification="_HJMFsBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbShowAllLanesActionPerformed&#xD;
    updatelanes(true);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HJQXIBUTEemIe6OhVnSywA" name="jbShowAllCompActionPerformed" specification="_HJOh8BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbShowAllCompActionPerformed&#xD;
    updatecomparisons(true);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HJSMURUTEemIe6OhVnSywA" name="jbDuplicateCompActionPerformed" specification="_HJRlQBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbDuplicateCompActionPerformed&#xD;
    int row = jtComparisons.getSelectedRow();&#xD;
    if (row == -1) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;Select a comparison first&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
    } else {&#xD;
        Comparison c = comparisons.get(row);&#xD;
        c.setId(lastComparisonid());&#xD;
        c.setName(c.getName() + &quot;-1&quot;);&#xD;
        insertComparison(c);&#xD;
        updatecomparisons(true);&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HJTacBUTEemIe6OhVnSywA" name="jbSearchexpActionPerformed" specification="_HJSzYBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbSearchexpActionPerformed&#xD;
    SearchExperiments se = new SearchExperiments(this);&#xD;
    se.setVisible(true);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HJUBgBUTEemIe6OhVnSywA" name="jbSearchLanesActionPerformed" specification="_HJTacRUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbSearchLanesActionPerformed&#xD;
    SearchLanes sl = new SearchLanes(this);&#xD;
    sl.setVisible(true);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HJYS8BUTEemIe6OhVnSywA" name="jbNewCompActionPerformed" specification="_HJV2sBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbNewCompActionPerformed&#xD;
    NewComparisonGUI nc = new NewComparisonGUI(this, true, studyid, this);&#xD;
    nc.setVisible(true);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HJbWQRUTEemIe6OhVnSywA" name="jbAddtoCompLaneActionPerformed" specification="_HJaIIBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbAddtoCompLaneActionPerformed&#xD;
    int[] row = jtLanes.getSelectedRows();&#xD;
    if (row.length == 0) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;Select at least a lane to add&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
        return;&#xD;
    }&#xD;
    ArrayList&lt;LaneDB> selectedlanes = new ArrayList&lt;>();&#xD;
    for (int i = 0; i &lt; row.length; i++) {&#xD;
        selectedlanes.add(lanes.get(row[i]));&#xD;
    }&#xD;
    if (!allsamemarker(selectedlanes)) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;Not all the lanes have been normalised using the same marker&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
        return;&#xD;
    }&#xD;
    AddtoComparison ac = new AddtoComparison(this, true, selectedlanes, studyid, this);&#xD;
    ac.setVisible(true);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HJgOwBUTEemIe6OhVnSywA" name="jbEditCompActionPerformed" specification="_HJdygBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbEditCompActionPerformed&#xD;
    int row = jtComparisons.getSelectedRow();&#xD;
    if (row == -1) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;Select a comparison&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
        return;&#xD;
    }&#xD;
    ViewLanesofComparison vlc = new ViewLanesofComparison(this, true, comparisons.get(row).getId(), comparisons.get(row).getName(), studyid);&#xD;
    vlc.setVisible(true);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HJjSEBUTEemIe6OhVnSywA" name="jbSearchCompActionPerformed" specification="_HJhc4BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbSearchCompActionPerformed&#xD;
    SearchComparison sc = new SearchComparison(this);&#xD;
    sc.setVisible(true);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HJm8cBUTEemIe6OhVnSywA" name="jbAddtoCompActionPerformed" specification="_HJlHQBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbAddtoCompActionPerformed&#xD;
    int row = jtExperiments.getSelectedRow();&#xD;
    if (row == -1) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;Select an experiment&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
        return;&#xD;
    }&#xD;
    int markers = JOptionPane.showConfirmDialog(this, &quot;Do you want to include the markers of this experiment?&quot;);&#xD;
    if (markers == JOptionPane.YES_OPTION) {&#xD;
        ArrayList&lt;LaneDB> selectedlanes = getlanesexperiment(experiments.get(row).getId(), true);&#xD;
        AddtoComparison ac = new AddtoComparison(this, true, selectedlanes, studyid, this);&#xD;
        ac.setVisible(true);&#xD;
    } else if (markers == JOptionPane.NO_OPTION) {&#xD;
        ArrayList&lt;LaneDB> selectedlanes = getlanesexperiment(experiments.get(row).getId(), false);&#xD;
        AddtoComparison ac = new AddtoComparison(this, true, selectedlanes, studyid, this);&#xD;
        ac.setVisible(true);&#xD;
    } else {&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HJp_wBUTEemIe6OhVnSywA" name="getStudyid" specification="_HJoKkBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    return studyid;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HJscABUTEemIe6OhVnSywA" name="setExperiments" specification="_HJp_wRUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    this.experiments = experiments;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HJx7kBUTEemIe6OhVnSywA" name="setLanes" specification="_HJuRMBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    this.lanes = lanes;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HJ0-4hUTEemIe6OhVnSywA" name="setComparisons" specification="_HJzwwBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    this.comparisons = comparisons;&#xD;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HISt1BUTEemIe6OhVnSywA" name="StudyEdit" visibility="public" method="_HIWYMBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HIVKEBUTEemIe6OhVnSywA" name="studyid">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HIW_QBUTEemIe6OhVnSywA" name="generatecountriescombobox" visibility="private" method="_HIYNYBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HIW_QRUTEemIe6OhVnSywA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HIapoBUTEemIe6OhVnSywA" name="updateexperiments" visibility="public" method="_HIce0BUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HIbQsBUTEemIe6OhVnSywA" name="all">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HIds8BUTEemIe6OhVnSywA" name="generatesimilaritycombobox" visibility="private" method="_HIe7EBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HIeUABUTEemIe6OhVnSywA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HIgJMBUTEemIe6OhVnSywA" name="generatelinkagecombobox" visibility="private" method="_HIgwQRUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HIgwQBUTEemIe6OhVnSywA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HIilcBUTEemIe6OhVnSywA" name="updatecomparisons" visibility="public" method="_HIjzkBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HIjMgBUTEemIe6OhVnSywA" name="all">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HIlBsBUTEemIe6OhVnSywA" name="updatelanes" visibility="public" method="_HInd8BUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HImP0BUTEemIe6OhVnSywA" name="all">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HIpTIBUTEemIe6OhVnSywA" name="tableChanged" visibility="public" method="_HIrvYBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HIqhQBUTEemIe6OhVnSywA" name="e"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HIs9gBUTEemIe6OhVnSywA" name="initComponents" visibility="private" method="_HI2HcBUTEemIe6OhVnSywA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HI38oBUTEemIe6OhVnSywA" name="jbAddFieldActionPerformed" visibility="private" method="_HI5x0BUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HI5KwBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HI6_8BUTEemIe6OhVnSywA" name="jbDeleteFieldActionPerformed" visibility="private" method="_HI8OEBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HI7nABUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HI-DQBUTEemIe6OhVnSywA" name="jbDeleteExpActionPerformed" visibility="private" method="_HJAfgBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HI_RYBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HJC7wBUTEemIe6OhVnSywA" name="jbDeleteCompActionPerformed" visibility="private" method="_HJEJ4BUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HJDi0BUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HJF_EBUTEemIe6OhVnSywA" name="jbDeleteActionPerformed" visibility="private" method="_HJH0QBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HJGmIBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HJIbUBUTEemIe6OhVnSywA" name="jbShowAllActionPerformed" visibility="private" method="_HJKQgBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HJJpcBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HJMFsBUTEemIe6OhVnSywA" name="jbShowAllLanesActionPerformed" visibility="private" method="_HJNT0RUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HJNT0BUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HJOh8BUTEemIe6OhVnSywA" name="jbShowAllCompActionPerformed" visibility="private" method="_HJQXIBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HJPwEBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HJRlQBUTEemIe6OhVnSywA" name="jbDuplicateCompActionPerformed" visibility="private" method="_HJSMURUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HJSMUBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HJSzYBUTEemIe6OhVnSywA" name="jbSearchexpActionPerformed" visibility="private" method="_HJTacBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HJSzYRUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HJTacRUTEemIe6OhVnSywA" name="jbSearchLanesActionPerformed" visibility="private" method="_HJUBgBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HJTachUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HJV2sBUTEemIe6OhVnSywA" name="jbNewCompActionPerformed" visibility="private" method="_HJYS8BUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HJXE0BUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HJaIIBUTEemIe6OhVnSywA" name="jbAddtoCompLaneActionPerformed" visibility="private" method="_HJbWQRUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HJbWQBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HJdygBUTEemIe6OhVnSywA" name="jbEditCompActionPerformed" visibility="private" method="_HJgOwBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HJfAoBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HJhc4BUTEemIe6OhVnSywA" name="jbSearchCompActionPerformed" visibility="private" method="_HJjSEBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HJirABUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HJlHQBUTEemIe6OhVnSywA" name="jbAddtoCompActionPerformed" visibility="private" method="_HJm8cBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HJluUBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HJoKkBUTEemIe6OhVnSywA" name="getStudyid" visibility="public" method="_HJp_wBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HJpYsBUTEemIe6OhVnSywA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HJp_wRUTEemIe6OhVnSywA" name="setExperiments" visibility="public" method="_HJscABUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HJqm0BUTEemIe6OhVnSywA" name="experiments" type="_EJs1wBUTEemIe6OhVnSywA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_HJr08BUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HJr08RUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HJuRMBUTEemIe6OhVnSywA" name="setLanes" visibility="public" method="_HJx7kBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HJvfUBUTEemIe6OhVnSywA" name="lanes" type="_EHtRsBUTEemIe6OhVnSywA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_HJwGYBUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HJwtcBUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HJzwwBUTEemIe6OhVnSywA" name="setComparisons" visibility="public" method="_HJ0-4hUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HJ0X0BUTEemIe6OhVnSywA" name="comparisons" type="_EHPXoBUTEemIe6OhVnSywA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_HJ0-4BUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HJ0-4RUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_G3ClwBUTEemIe6OhVnSywA" name="ViewLanesofComparison" visibility="public">
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G3Dz4BUTEemIe6OhVnSywA" name="compid" visibility="private" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G3Ea8BUTEemIe6OhVnSywA" name="studyid" visibility="private" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G3FCABUTEemIe6OhVnSywA" name="lanes" visibility="private" type="_EHtRsBUTEemIe6OhVnSywA" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_G3FpEBUTEemIe6OhVnSywA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_G3FpERUTEemIe6OhVnSywA" value="*"/>
              <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_G3FpEhUTEemIe6OhVnSywA" name="defaultValue">
                <language>JAVA</language>
                <body>new ArrayList&lt;>()</body>
              </defaultValue>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G3GQIBUTEemIe6OhVnSywA" name="firsttime" visibility="private" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_G3GQIRUTEemIe6OhVnSywA" name="defaultValue">
                <language>JAVA</language>
                <body>true</body>
              </defaultValue>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G3G3MBUTEemIe6OhVnSywA" name="additionalfields" visibility="private" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_G3G3MRUTEemIe6OhVnSywA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_G3HeQBUTEemIe6OhVnSywA" value="*"/>
              <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_G3HeQRUTEemIe6OhVnSywA" name="defaultValue">
                <language>JAVA</language>
                <body>new ArrayList&lt;>()</body>
              </defaultValue>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G3XV4BUTEemIe6OhVnSywA" name="jScrollPane1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G3ZyIBUTEemIe6OhVnSywA" name="jToolBar1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G3bAQBUTEemIe6OhVnSywA" name="jbRemoveLane" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G3dcgBUTEemIe6OhVnSywA" name="jtLanes" visibility="private" isUnique="false"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G3MWwhUTEemIe6OhVnSywA" name="ViewLanesofComparison" specification="_G3IFUBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    super(parent, modal);&#xD;
    initComponents();&#xD;
    this.compid = compid;&#xD;
    this.studyid = studyid;&#xD;
    setTitle(&quot;Lanes included in &quot; + name);&#xD;
    Rectangle bounds = GraphicsEnvironment.getLocalGraphicsEnvironment().getMaximumWindowBounds();&#xD;
    this.setBounds(bounds);&#xD;
    updatelanes();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G3M90hUTEemIe6OhVnSywA" name="generatecountriescombobox" specification="_G3M90BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    JComboBox comboBox = new JComboBox();&#xD;
    String[] locales = Locale.getISOCountries();&#xD;
    ArrayList&lt;String> countries = new ArrayList&lt;>();&#xD;
    for (String countryCode : locales) {&#xD;
        Locale obj = new Locale(&quot;&quot;, countryCode);&#xD;
        countries.add(obj.getDisplayCountry());&#xD;
    }&#xD;
    Collections.sort(countries);&#xD;
    for (String country : countries) {&#xD;
        comboBox.addItem(country);&#xD;
    }&#xD;
    return comboBox;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G3OzABUTEemIe6OhVnSywA" name="updatelanes" specification="_G3Nk4BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    lanes = getLanesComparison(compid);&#xD;
    if (firsttime) {&#xD;
        additionalfields = getAdditionalFields(studyid);&#xD;
        firsttime = false;&#xD;
    }&#xD;
    String[] names0 = { &quot;Genus&quot;, &quot;Species&quot;, &quot;Strain Number&quot;, &quot;Country&quot;, &quot;MSLT&quot;, &quot;isMarker&quot;, &quot;Experiment&quot;, &quot;Comments&quot; };&#xD;
    String[] names = new String[names0.length + additionalfields.size()];&#xD;
    for (int i = 0; i &lt; names0.length; i++) {&#xD;
        names[i] = names0[i];&#xD;
    }&#xD;
    for (int i = 0; i &lt; additionalfields.size(); i++) {&#xD;
        names[i + names0.length] = additionalfields.get(i);&#xD;
    }&#xD;
    Object[][] data = new Object[lanes.size()][names.length];&#xD;
    // We update the table&#xD;
    for (int i = 0; i &lt; lanes.size(); i++) {&#xD;
        data[i][0] = lanes.get(i).getGenus();&#xD;
        data[i][1] = lanes.get(i).getSpecies();&#xD;
        data[i][2] = lanes.get(i).getStrainNumber();&#xD;
        data[i][3] = lanes.get(i).getCountry();&#xD;
        data[i][4] = lanes.get(i).getMSLT();&#xD;
        data[i][5] = lanes.get(i).isIsMarker();&#xD;
        data[i][6] = lanes.get(i).getExperiment().getName();&#xD;
        data[i][7] = lanes.get(i).getComments();&#xD;
        for (int j = 0; j &lt; additionalfields.size(); j++) {&#xD;
            data[i][8 + j] = lanes.get(i).getLaneaddedinfo().get(additionalfields.get(j));&#xD;
        }&#xD;
    }&#xD;
    // Operations to change the model, we disable the edition of the date&#xD;
    DefaultTableModel model = new DefaultTableModel(data, names) {&#xD;
&#xD;
        public boolean isCellEditable(int rowIndex, int mColIndex) {&#xD;
            return false;&#xD;
        }&#xD;
&#xD;
        public Class getColumnClass(int columnIndex) {&#xD;
            if (columnIndex == 5) {&#xD;
                return java.lang.Boolean.class;&#xD;
            } else {&#xD;
                return java.lang.Object.class;&#xD;
            }&#xD;
        }&#xD;
    };&#xD;
    jtLanes.setModel(model);&#xD;
    TableColumn countriescolumn = jtLanes.getColumnModel().getColumn(3);&#xD;
    countriescolumn.setCellEditor(new DefaultCellEditor(generatecountriescombobox()));&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G3RPQBUTEemIe6OhVnSywA" name="initComponents" specification="_G3QBIBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    java.awt.GridBagConstraints gridBagConstraints;&#xD;
    jToolBar1 = new javax.swing.JToolBar();&#xD;
    jbRemoveLane = new javax.swing.JButton();&#xD;
    jScrollPane1 = new javax.swing.JScrollPane();&#xD;
    jtLanes = new javax.swing.JTable();&#xD;
    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);&#xD;
    setModal(true);&#xD;
    getContentPane().setLayout(new java.awt.GridBagLayout());&#xD;
    jToolBar1.setRollover(true);&#xD;
    jbRemoveLane.setText(&quot;Remove Lane&quot;);&#xD;
    jbRemoveLane.setFocusable(false);&#xD;
    jbRemoveLane.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);&#xD;
    jbRemoveLane.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);&#xD;
    jbRemoveLane.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbRemoveLaneActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar1.add(jbRemoveLane);&#xD;
    gridBagConstraints = new java.awt.GridBagConstraints();&#xD;
    gridBagConstraints.gridx = 0;&#xD;
    gridBagConstraints.gridy = 0;&#xD;
    gridBagConstraints.ipadx = 280;&#xD;
    gridBagConstraints.ipady = -6;&#xD;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;&#xD;
    getContentPane().add(jToolBar1, gridBagConstraints);&#xD;
    jtLanes.setModel(new javax.swing.table.DefaultTableModel(new Object[][] { { null, null, null, null }, { null, null, null, null }, { null, null, null, null }, { null, null, null, null } }, new String[] { &quot;Title 1&quot;, &quot;Title 2&quot;, &quot;Title 3&quot;, &quot;Title 4&quot; }));&#xD;
    jScrollPane1.setViewportView(jtLanes);&#xD;
    gridBagConstraints = new java.awt.GridBagConstraints();&#xD;
    gridBagConstraints.gridx = 0;&#xD;
    gridBagConstraints.gridy = 1;&#xD;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;&#xD;
    gridBagConstraints.ipadx = 378;&#xD;
    gridBagConstraints.ipady = 249;&#xD;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;&#xD;
    gridBagConstraints.weightx = 1.0;&#xD;
    gridBagConstraints.weighty = 1.0;&#xD;
    gridBagConstraints.insets = new java.awt.Insets(6, 0, 0, 0);&#xD;
    getContentPane().add(jScrollPane1, gridBagConstraints);&#xD;
    pack();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G3U5oBUTEemIe6OhVnSywA" name="jbRemoveLaneActionPerformed" specification="_G3TEcBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbRemoveLaneActionPerformed&#xD;
    int row = jtLanes.getSelectedRow();&#xD;
    if (row == -1) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;Select a lane first&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
    } else {&#xD;
        int reply = JOptionPane.showConfirmDialog(this, &quot;Do you want to remove this lane? &quot;, &quot;Delete lane&quot;, JOptionPane.YES_NO_OPTION);&#xD;
        if (reply == JOptionPane.YES_OPTION) {&#xD;
            deletelanecomparison(lanes.get(row).getId(), compid);&#xD;
            updatelanes();&#xD;
        }&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G3IFUBUTEemIe6OhVnSywA" name="ViewLanesofComparison" visibility="public" method="_G3MWwhUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G3LIoBUTEemIe6OhVnSywA" name="parent"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G3LIoRUTEemIe6OhVnSywA" name="modal">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G3LvsBUTEemIe6OhVnSywA" name="compid">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G3MWwBUTEemIe6OhVnSywA" name="name"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G3MWwRUTEemIe6OhVnSywA" name="studyid">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G3M90BUTEemIe6OhVnSywA" name="generatecountriescombobox" visibility="private" method="_G3M90hUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G3M90RUTEemIe6OhVnSywA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G3Nk4BUTEemIe6OhVnSywA" name="updatelanes" visibility="private" method="_G3OzABUTEemIe6OhVnSywA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G3QBIBUTEemIe6OhVnSywA" name="initComponents" visibility="private" method="_G3RPQBUTEemIe6OhVnSywA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G3TEcBUTEemIe6OhVnSywA" name="jbRemoveLaneActionPerformed" visibility="private" method="_G3U5oBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G3USkBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_G3nNgBUTEemIe6OhVnSywA" name="ViewComparison" visibility="public">
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G3ppwBUTEemIe6OhVnSywA" name="nc" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G3t7MBUTEemIe6OhVnSywA" name="c" visibility="private" type="_EHPXoBUTEemIe6OhVnSywA" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G4A2IBUTEemIe6OhVnSywA" name="jCheckBox1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G4BdMBUTEemIe6OhVnSywA" name="jLabel10" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G4CEQBUTEemIe6OhVnSywA" name="jLabel11" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G4CEQRUTEemIe6OhVnSywA" name="jLabel2" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G4CrUBUTEemIe6OhVnSywA" name="jLabel6" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G4CrURUTEemIe6OhVnSywA" name="jPanel2" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G4DSYBUTEemIe6OhVnSywA" name="jScrollPane1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G4D5cBUTEemIe6OhVnSywA" name="jScrollPane2" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G4EggBUTEemIe6OhVnSywA" name="jSeparator2" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G4GVsBUTEemIe6OhVnSywA" name="jSeparator3" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G4Ix8BUTEemIe6OhVnSywA" name="jbAddField" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G4KnIBUTEemIe6OhVnSywA" name="jbDeleteField" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G4NDYBUTEemIe6OhVnSywA" name="jbShow" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G4PfoBUTEemIe6OhVnSywA" name="jcbOutput" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G4R74BUTEemIe6OhVnSywA" name="jcbinvert" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G4YpkBUTEemIe6OhVnSywA" name="jlAvailable1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G4aewBUTEemIe6OhVnSywA" name="jlSelected" visibility="private" isUnique="false"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G33sMBUTEemIe6OhVnSywA" name="ViewComparison" specification="_G3wXcBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    initComponents();&#xD;
    this.nc = nc;&#xD;
    this.c = c;&#xD;
    ArrayList&lt;String> availablefields = nc.getNonSelectedFields();&#xD;
    ArrayList&lt;String> selectedfields = nc.getSelectedFields();&#xD;
    DefaultListModel dmAvailable = new DefaultListModel();&#xD;
    if (availablefields != null) {&#xD;
        for (String s : availablefields) {&#xD;
            dmAvailable.addElement(s);&#xD;
        }&#xD;
    }&#xD;
    DefaultListModel dmSelected = new DefaultListModel();&#xD;
    if (selectedfields != null) {&#xD;
        for (String s : selectedfields) {&#xD;
            dmSelected.addElement(s);&#xD;
        }&#xD;
    }&#xD;
    String sim = nc.getSimilaritymethod();&#xD;
    if (sim.equals(&quot;Pearson correlation&quot;) || sim.equals(&quot;Cosine coefficient&quot;) || sim.equals(&quot;Euclidean distance&quot;) || sim.equals(&quot;Manhattan distance&quot;)) {&#xD;
        jcbOutput.setModel(new javax.swing.DefaultComboBoxModel(new String[] { &quot;Dendrogram + Images&quot;, &quot;Dendrogram&quot; }));&#xD;
    } else {&#xD;
        jcbOutput.setModel(new javax.swing.DefaultComboBoxModel(new String[] { &quot;Dendrogram + Images + Bands&quot;, &quot;Dendrogram + Images&quot;, &quot;Dendrogram + Bands&quot;, &quot;Dendrogram&quot; }));&#xD;
    }&#xD;
    jlAvailable1.setModel(dmAvailable);&#xD;
    jlAvailable1.addListSelectionListener(new AvailableListSelectionHandler());&#xD;
    jlSelected.setModel(dmSelected);&#xD;
    jlSelected.addListSelectionListener(new SelectedListSelectionHandler());&#xD;
    this.setModal(true);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G36vgBUTEemIe6OhVnSywA" name="initComponents" specification="_G346UBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    jbShow = new javax.swing.JButton();&#xD;
    jPanel2 = new javax.swing.JPanel();&#xD;
    jLabel6 = new javax.swing.JLabel();&#xD;
    jSeparator3 = new javax.swing.JSeparator();&#xD;
    jLabel10 = new javax.swing.JLabel();&#xD;
    jScrollPane1 = new javax.swing.JScrollPane();&#xD;
    jlSelected = new javax.swing.JList();&#xD;
    jLabel11 = new javax.swing.JLabel();&#xD;
    jScrollPane2 = new javax.swing.JScrollPane();&#xD;
    jlAvailable1 = new javax.swing.JList();&#xD;
    jbAddField = new javax.swing.JButton();&#xD;
    jbDeleteField = new javax.swing.JButton();&#xD;
    jLabel2 = new javax.swing.JLabel();&#xD;
    jcbOutput = new javax.swing.JComboBox();&#xD;
    jCheckBox1 = new javax.swing.JCheckBox();&#xD;
    jcbinvert = new javax.swing.JCheckBox();&#xD;
    jSeparator2 = new javax.swing.JSeparator();&#xD;
    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);&#xD;
    setTitle(&quot;Comparison&quot;);&#xD;
    setResizable(false);&#xD;
    jbShow.setText(&quot;Show&quot;);&#xD;
    jbShow.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbShowActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jLabel6.setText(&quot;Dendrogram output&quot;);&#xD;
    jLabel10.setText(&quot;Available Fields&quot;);&#xD;
    jScrollPane1.setViewportView(jlSelected);&#xD;
    jLabel11.setText(&quot;Selected Fields&quot;);&#xD;
    jScrollPane2.setViewportView(jlAvailable1);&#xD;
    jbAddField.setText(&quot;    >>>    &quot;);&#xD;
    jbAddField.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbAddFieldActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jbDeleteField.setText(&quot;    &lt;&lt;&lt;    &quot;);&#xD;
    jbDeleteField.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbDeleteFieldActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jLabel2.setText(&quot;Output:&quot;);&#xD;
    jcbOutput.setModel(new javax.swing.DefaultComboBoxModel(new String[] { &quot;Dendrogram + Images + Bands&quot;, &quot;Dendrogram + Images&quot;, &quot;Dendrogram + Bands&quot;, &quot;Dendrogram&quot; }));&#xD;
    jCheckBox1.setText(&quot;Generate Similarity Table&quot;);&#xD;
    jcbinvert.setText(&quot;Invert colours of the image&quot;);&#xD;
    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);&#xD;
    jPanel2.setLayout(jPanel2Layout);&#xD;
    jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel2Layout.createSequentialGroup().addComponent(jLabel6).addGap(0, 0, Short.MAX_VALUE)).addComponent(jSeparator3).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup().addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jCheckBox1).addContainerGap()).addGroup(jPanel2Layout.createSequentialGroup().addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel2Layout.createSequentialGroup().addGap(49, 49, 49).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel10))).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup().addGap(31, 31, 31).addComponent(jLabel2))).addGap(18, 18, 18).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jcbinvert, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addComponent(jLabel11)).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup().addGap(28, 28, 28).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jbDeleteField).addComponent(jbAddField)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)).addComponent(jcbOutput, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))));&#xD;
    jPanel2Layout.setVerticalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel2Layout.createSequentialGroup().addContainerGap().addComponent(jLabel6).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jcbOutput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel2)).addGap(2, 2, 2).addComponent(jcbinvert).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel10).addComponent(jLabel11)).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel2Layout.createSequentialGroup().addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jCheckBox1).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup().addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jbAddField).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jbDeleteField).addGap(70, 70, 70)))));&#xD;
    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());&#xD;
    getContentPane().setLayout(layout);&#xD;
    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jbShow)).addGap(0, 0, Short.MAX_VALUE)).addComponent(jSeparator2)).addContainerGap()));&#xD;
    layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jbShow).addContainerGap()));&#xD;
    pack();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G379oRUTEemIe6OhVnSywA" name="jbShowActionPerformed" specification="_G37WkBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbShowActionPerformed&#xD;
    PleaseWait pw = new PleaseWait((JDialog) null, false);&#xD;
    pw.setAlwaysOnTop(true);&#xD;
    pw.toFront();&#xD;
    DefaultListModel dmSelected = (DefaultListModel) jlSelected.getModel();&#xD;
    DefaultListModel dmAvailable = (DefaultListModel) jlAvailable1.getModel();&#xD;
    nc.setSelectedFields(new ArrayList&lt;String>());&#xD;
    nc.setNonSelectedFields(new ArrayList&lt;String>());&#xD;
    for (Object o : dmSelected.toArray()) {&#xD;
        nc.getSelectedFields().add((String) o);&#xD;
    }&#xD;
    for (Object o : dmAvailable.toArray()) {&#xD;
        nc.getNonSelectedFields().add((String) o);&#xD;
    }&#xD;
    if (nc.getSelectedFields().isEmpty()) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;Select at least a field to show in the dendrogram&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
        return;&#xD;
    }&#xD;
    dispose();&#xD;
    //                pw.toFront();&#xD;
    try {&#xD;
        String sim = nc.getSimilaritymethod();&#xD;
        if (sim.equals(&quot;Pearson correlation&quot;) || sim.equals(&quot;Cosine coefficient&quot;) || sim.equals(&quot;Euclidean distance&quot;) || sim.equals(&quot;Manhattan distance&quot;)) {&#xD;
            int output = jcbOutput.getSelectedIndex();&#xD;
            if (output == 0) {&#xD;
                output = 1;&#xD;
            } else {&#xD;
                output = 3;&#xD;
            }&#xD;
            generateDendrogram(c, output, nc.getSelectedFields(), jCheckBox1.isSelected(), pw, jcbinvert.isSelected());&#xD;
        } else {&#xD;
            generateDendrogram(c, jcbOutput.getSelectedIndex(), nc.getSelectedFields(), jCheckBox1.isSelected(), pw, jcbinvert.isSelected());&#xD;
        }&#xD;
    } catch (Exception ex) {&#xD;
        Logger.getLogger(ViewComparison.class.getName()).log(Level.SEVERE, null, ex);&#xD;
    }&#xD;
//pw.dispose();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G39LwBUTEemIe6OhVnSywA" name="jbAddFieldActionPerformed" specification="_G38ksBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbAddFieldActionPerformed&#xD;
    int[] tomove = jlAvailable1.getSelectedIndices();&#xD;
    DefaultListModel dmSelected = (DefaultListModel) jlSelected.getModel();&#xD;
    DefaultListModel dmAvailable = (DefaultListModel) jlAvailable1.getModel();&#xD;
    if (tomove != null &amp;&amp; tomove.length != 0) {&#xD;
        for (int i : tomove) {&#xD;
            dmSelected.addElement(dmAvailable.get(i));&#xD;
            dmAvailable.remove(i);&#xD;
        }&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G39y0RUTEemIe6OhVnSywA" name="jbDeleteFieldActionPerformed" specification="_G39LwRUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbDeleteFieldActionPerformed&#xD;
    int[] tomove = jlSelected.getSelectedIndices();&#xD;
    DefaultListModel dmSelected = (DefaultListModel) jlSelected.getModel();&#xD;
    DefaultListModel dmAvailable = (DefaultListModel) jlAvailable1.getModel();&#xD;
    if (tomove != null &amp;&amp; tomove.length != 0) {&#xD;
        for (int i : tomove) {&#xD;
            dmAvailable.addElement(dmSelected.get(i));&#xD;
            dmSelected.remove(i);&#xD;
        }&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G3wXcBUTEemIe6OhVnSywA" name="ViewComparison" visibility="public" method="_G33sMBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G30B0BUTEemIe6OhVnSywA" name="nc"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G32eEBUTEemIe6OhVnSywA" name="c" type="_EHPXoBUTEemIe6OhVnSywA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G346UBUTEemIe6OhVnSywA" name="initComponents" visibility="private" method="_G36vgBUTEemIe6OhVnSywA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G37WkBUTEemIe6OhVnSywA" name="jbShowActionPerformed" visibility="private" method="_G379oRUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G379oBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G38ksBUTEemIe6OhVnSywA" name="jbAddFieldActionPerformed" visibility="private" method="_G39LwBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G38ksRUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G39LwRUTEemIe6OhVnSywA" name="jbDeleteFieldActionPerformed" visibility="private" method="_G39y0RUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G39y0BUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <nestedClassifier xmi:type="uml:Class" xmi:id="_G4c7ABUTEemIe6OhVnSywA" name="AvailableListSelectionHandler" visibility="private">
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G4pIQBUTEemIe6OhVnSywA" name="valueChanged" specification="_G4msABUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    jlSelected.setSelectedIndex(-1);&#xD;
</body>
              </ownedBehavior>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_G4msABUTEemIe6OhVnSywA" name="valueChanged" visibility="public" method="_G4pIQBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_G4ohMBUTEemIe6OhVnSywA" name="e"/>
              </ownedOperation>
            </nestedClassifier>
            <nestedClassifier xmi:type="uml:Class" xmi:id="_G4q9cBUTEemIe6OhVnSywA" name="SelectedListSelectionHandler" visibility="private">
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G4v18BUTEemIe6OhVnSywA" name="valueChanged" specification="_G4tZsBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    jlAvailable1.setSelectedIndex(-1);&#xD;
</body>
              </ownedBehavior>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_G4tZsBUTEemIe6OhVnSywA" name="valueChanged" visibility="public" method="_G4v18BUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_G4un0BUTEemIe6OhVnSywA" name="e"/>
              </ownedOperation>
            </nestedClassifier>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_G41VgBUTEemIe6OhVnSywA" name="NewLab" visibility="public">
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G44Y0BUTEemIe6OhVnSywA" name="newuser" visibility="private" type="_G43xwBUTEemIe6OhVnSywA" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G5I3gBUTEemIe6OhVnSywA" name="jButton1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G5I3gRUTEemIe6OhVnSywA" name="jButton2" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G5JekBUTEemIe6OhVnSywA" name="jLabel1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G5JekRUTEemIe6OhVnSywA" name="jLabel2" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G5JekhUTEemIe6OhVnSywA" name="jLabel3" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G5KFoBUTEemIe6OhVnSywA" name="jcbCountry" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G5KFoRUTEemIe6OhVnSywA" name="jtfCity" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G5KssBUTEemIe6OhVnSywA" name="jtfName" visibility="private" isUnique="false"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G5FNIBUTEemIe6OhVnSywA" name="NewLab" specification="_G494YBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    super(parent, modal);&#xD;
    initComponents();&#xD;
    newuser = nu;&#xD;
    jcbCountry.removeAllItems();&#xD;
    String[] locales = Locale.getISOCountries();&#xD;
    ArrayList&lt;String> countries = new ArrayList&lt;>();&#xD;
    for (String countryCode : locales) {&#xD;
        Locale obj = new Locale(&quot;&quot;, countryCode);&#xD;
        countries.add(obj.getDisplayCountry());&#xD;
    }&#xD;
    Collections.sort(countries);&#xD;
    for (String country : countries) {&#xD;
        jcbCountry.addItem(country);&#xD;
    }&#xD;
    jcbCountry.setSelectedIndex(0);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G5GbQRUTEemIe6OhVnSywA" name="initComponents" specification="_G5GbQBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    jLabel1 = new javax.swing.JLabel();&#xD;
    jtfName = new javax.swing.JTextField();&#xD;
    jLabel2 = new javax.swing.JLabel();&#xD;
    jcbCountry = new javax.swing.JComboBox();&#xD;
    jButton1 = new javax.swing.JButton();&#xD;
    jButton2 = new javax.swing.JButton();&#xD;
    jLabel3 = new javax.swing.JLabel();&#xD;
    jtfCity = new javax.swing.JTextField();&#xD;
    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);&#xD;
    setTitle(&quot;New Lab&quot;);&#xD;
    setModal(true);&#xD;
    setResizable(false);&#xD;
    jLabel1.setText(&quot;Name:&quot;);&#xD;
    jLabel2.setText(&quot;Country:&quot;);&#xD;
    jButton1.setText(&quot;Ok&quot;);&#xD;
    jButton1.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton1ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jButton2.setText(&quot;Cancel&quot;);&#xD;
    jButton2.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton2ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jLabel3.setText(&quot;City:&quot;);&#xD;
    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());&#xD;
    getContentPane().setLayout(layout);&#xD;
    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGap(11, 11, 11).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addComponent(jLabel3).addComponent(jLabel1))).addComponent(jLabel2)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jtfName).addComponent(jtfCity).addComponent(jcbCountry, 0, 344, Short.MAX_VALUE))).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addComponent(jButton2).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButton1))).addContainerGap()));&#xD;
    layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel1).addComponent(jtfName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel3).addComponent(jtfCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addGap(8, 8, 8).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jcbCountry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel2)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jButton1).addComponent(jButton2)).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    pack();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G5HpYRUTEemIe6OhVnSywA" name="jButton2ActionPerformed" specification="_G5HCUBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jButton2ActionPerformed&#xD;
    this.dispose();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G5IQcRUTEemIe6OhVnSywA" name="jButton1ActionPerformed" specification="_G5HpYhUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jButton1ActionPerformed&#xD;
    String labname = jtfName.getText();&#xD;
    String city = jtfCity.getText();&#xD;
    String country = (String) jcbCountry.getSelectedItem();&#xD;
    if (labname.equals(&quot;&quot;)) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;Introduce the name of the lab&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
        return;&#xD;
    }&#xD;
    if (city.equals(&quot;&quot;)) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;Introduce the name of the city&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
        return;&#xD;
    }&#xD;
    if (country.equals(&quot;&quot;)) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;Select the country of the lab&quot;);&#xD;
        return;&#xD;
    }&#xD;
    if (existslab(labname, city, country)) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;There is already a lab called &quot; + labname + &quot; in &quot; + city + &quot;(&quot; + country + &quot;)&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
        return;&#xD;
    } else {&#xD;
        int id = lastLabid();&#xD;
        Lab l = new Lab(id, labname, city, country);&#xD;
        insertLab(l);&#xD;
    }&#xD;
    this.dispose();&#xD;
    newuser.updatelabs();&#xD;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G494YBUTEemIe6OhVnSywA" name="NewLab" visibility="public" method="_G5FNIBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G5CJ0BUTEemIe6OhVnSywA" name="parent"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G5DX8BUTEemIe6OhVnSywA" name="modal">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G5D_ABUTEemIe6OhVnSywA" name="nu" type="_G43xwBUTEemIe6OhVnSywA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G5GbQBUTEemIe6OhVnSywA" name="initComponents" visibility="private" method="_G5GbQRUTEemIe6OhVnSywA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G5HCUBUTEemIe6OhVnSywA" name="jButton2ActionPerformed" visibility="private" method="_G5HpYRUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G5HpYBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G5HpYhUTEemIe6OhVnSywA" name="jButton1ActionPerformed" visibility="private" method="_G5IQcRUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G5IQcBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_G43xwBUTEemIe6OhVnSywA" name="NewUser" visibility="public">
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HLnuoBUTEemIe6OhVnSywA" name="su" visibility="private" type="_G0xU4BUTEemIe6OhVnSywA" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HLrZABUTEemIe6OhVnSywA" name="labs" visibility="private" type="_EPTugBUTEemIe6OhVnSywA" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_HLsnIBUTEemIe6OhVnSywA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HLtOMBUTEemIe6OhVnSywA" value="*"/>
              <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_HLt1QBUTEemIe6OhVnSywA" name="defaultValue">
                <language>JAVA</language>
                <body>new ArrayList&lt;>()</body>
              </defaultValue>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HMIsABUTEemIe6OhVnSywA" name="jButtonCancel" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HMKhMBUTEemIe6OhVnSywA" name="jButtonOk" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HMLvUBUTEemIe6OhVnSywA" name="jComboBox1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HMMWYBUTEemIe6OhVnSywA" name="jLabel1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HMM9cBUTEemIe6OhVnSywA" name="jLabel2" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HMM9cRUTEemIe6OhVnSywA" name="jLabel3" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HMNkgBUTEemIe6OhVnSywA" name="jLabel4" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HMNkgRUTEemIe6OhVnSywA" name="jtfName" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HMOLkBUTEemIe6OhVnSywA" name="jtfSurname" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HMOLkRUTEemIe6OhVnSywA" name="jtfUsername" visibility="private" isUnique="false"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HL2_MBUTEemIe6OhVnSywA" name="NewUser" specification="_HLvqcBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    super(parent, modal);&#xD;
    this.su = su;&#xD;
    initComponents();&#xD;
    updatelabs();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HL5bcBUTEemIe6OhVnSywA" name="updatelabs" specification="_HL4NUBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    jComboBox1.removeAllItems();&#xD;
    labs = getLabs();&#xD;
    if (labs != null &amp;&amp; labs.size() != 0) {&#xD;
        for (Lab lab : labs) {&#xD;
            jComboBox1.addItem(lab.getName() + &quot; (&quot; + lab.getCountry() + &quot;)&quot;);&#xD;
        }&#xD;
    } else {&#xD;
        jComboBox1.addItem(&quot;&quot;);&#xD;
    }&#xD;
    jComboBox1.addItem(&quot;&lt;New Lab>&quot;);&#xD;
    jComboBox1.setSelectedIndex(0);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HL73sBUTEemIe6OhVnSywA" name="initComponents" specification="_HL6pkBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    jLabel1 = new javax.swing.JLabel();&#xD;
    jtfUsername = new javax.swing.JTextField();&#xD;
    jLabel2 = new javax.swing.JLabel();&#xD;
    jtfName = new javax.swing.JTextField();&#xD;
    jLabel3 = new javax.swing.JLabel();&#xD;
    jtfSurname = new javax.swing.JTextField();&#xD;
    jLabel4 = new javax.swing.JLabel();&#xD;
    jComboBox1 = new javax.swing.JComboBox();&#xD;
    jButtonOk = new javax.swing.JButton();&#xD;
    jButtonCancel = new javax.swing.JButton();&#xD;
    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);&#xD;
    setTitle(&quot;New User&quot;);&#xD;
    setModal(true);&#xD;
    setModalExclusionType(java.awt.Dialog.ModalExclusionType.APPLICATION_EXCLUDE);&#xD;
    setResizable(false);&#xD;
    jLabel1.setText(&quot;Username:&quot;);&#xD;
    jLabel2.setText(&quot;Name:&quot;);&#xD;
    jLabel3.setText(&quot;Surname:&quot;);&#xD;
    jLabel4.setText(&quot;Lab:&quot;);&#xD;
    jComboBox1.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jComboBox1ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jButtonOk.setText(&quot;Ok&quot;);&#xD;
    jButtonOk.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButtonOkActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jButtonCancel.setText(&quot;Cancel&quot;);&#xD;
    jButtonCancel.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButtonCancelActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());&#xD;
    getContentPane().setLayout(layout);&#xD;
    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addComponent(jLabel4).addComponent(jLabel3).addComponent(jLabel2).addComponent(jLabel1)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false).addComponent(jtfUsername).addComponent(jtfName).addComponent(jtfSurname).addComponent(jComboBox1, 0, 246, Short.MAX_VALUE)).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup().addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jButtonCancel).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButtonOk).addContainerGap()));&#xD;
    layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel1).addComponent(jtfUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel2).addComponent(jtfName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel3).addComponent(jtfSurname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel4).addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jButtonOk).addComponent(jButtonCancel)).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    pack();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HL_iEBUTEemIe6OhVnSywA" name="jButtonOkActionPerformed" specification="_HL9s4BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jButtonOkActionPerformed&#xD;
    String username = jtfUsername.getText();&#xD;
    String name = jtfName.getText();&#xD;
    String surname = jtfSurname.getText();&#xD;
    int poslab = jComboBox1.getSelectedIndex();&#xD;
    int lab = labs.get(poslab).getId();&#xD;
    if (username.equals(&quot;&quot;)) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;Introduce a username&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
        return;&#xD;
    }&#xD;
    if (name.equals(&quot;&quot;)) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;Introduce a name&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
        return;&#xD;
    }&#xD;
    if (surname.equals(&quot;&quot;)) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;Introduce a surname&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
        return;&#xD;
    }&#xD;
    if (existssuser(username)) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;There is already a user with the username &quot; + username, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
        return;&#xD;
    } else {&#xD;
        int id = lastUserid();&#xD;
        User u = new User(id, username, name, surname, labs.get(poslab));&#xD;
        insertUser(u);&#xD;
    }&#xD;
    this.dispose();&#xD;
    su.updateusers();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HMDMcBUTEemIe6OhVnSywA" name="jButtonCancelActionPerformed" specification="_HMBXQBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jButtonCancelActionPerformed&#xD;
    this.dispose();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HMG20BUTEemIe6OhVnSywA" name="jComboBox1ActionPerformed" specification="_HMFBoBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jComboBox1ActionPerformed&#xD;
    String sel = (String) jComboBox1.getSelectedItem();&#xD;
    int elem = jComboBox1.getSelectedIndex();&#xD;
    jComboBox1.setSelectedIndex(0);&#xD;
    jComboBox1.updateUI();&#xD;
    if (sel.equals(&quot;&lt;New Lab>&quot;)) {&#xD;
        NewLab nl = new NewLab(this, true, this);&#xD;
        nl.setVisible(true);&#xD;
    } else {&#xD;
        jComboBox1.setSelectedIndex(elem);&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HLvqcBUTEemIe6OhVnSywA" name="NewUser" visibility="public" method="_HL2_MBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HLzU0BUTEemIe6OhVnSywA" name="parent"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HL0i8BUTEemIe6OhVnSywA" name="modal">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HL1xEBUTEemIe6OhVnSywA" name="su" type="_G0xU4BUTEemIe6OhVnSywA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HL4NUBUTEemIe6OhVnSywA" name="updatelabs" visibility="public" method="_HL5bcBUTEemIe6OhVnSywA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HL6pkBUTEemIe6OhVnSywA" name="initComponents" visibility="private" method="_HL73sBUTEemIe6OhVnSywA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HL9s4BUTEemIe6OhVnSywA" name="jButtonOkActionPerformed" visibility="private" method="_HL_iEBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HL-7ABUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HMBXQBUTEemIe6OhVnSywA" name="jButtonCancelActionPerformed" visibility="private" method="_HMDMcBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HMClYBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HMFBoBUTEemIe6OhVnSywA" name="jComboBox1ActionPerformed" visibility="private" method="_HMG20BUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HMGPwBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_G5TPkBUTEemIe6OhVnSywA" name="ImageAnnotation" visibility="public">
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G5VEwBUTEemIe6OhVnSywA" name="imp" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G5VEwRUTEemIe6OhVnSywA" name="m" visibility="private" type="_Gul0YBUTEemIe6OhVnSywA" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G5Vr0BUTEemIe6OhVnSywA" name="change" visibility="private" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_G5Vr0RUTEemIe6OhVnSywA" name="defaultValue">
                <language>JAVA</language>
                <body>false</body>
              </defaultValue>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G6Rf8BUTEemIe6OhVnSywA" name="buttonGroup1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G6TVIBUTEemIe6OhVnSywA" name="jButton10" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G6UjQBUTEemIe6OhVnSywA" name="jButton2" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G6W_gBUTEemIe6OhVnSywA" name="jLabel1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G6Y0sBUTEemIe6OhVnSywA" name="jLabel2" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G6bQ8BUTEemIe6OhVnSywA" name="jLabel3" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G6cfEBUTEemIe6OhVnSywA" name="jLabel4" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G6dtMBUTEemIe6OhVnSywA" name="jLabel5" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G6fiYBUTEemIe6OhVnSywA" name="jLabel6" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G6ilsBUTEemIe6OhVnSywA" name="jPanel1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G6ka4BUTEemIe6OhVnSywA" name="jPanel2" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G6mQEBUTEemIe6OhVnSywA" name="jPanel3" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G6oFQBUTEemIe6OhVnSywA" name="jPanel4" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G6p6cBUTEemIe6OhVnSywA" name="jPanel5" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G6sWsBUTEemIe6OhVnSywA" name="jScrollPane1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G6xPMBUTEemIe6OhVnSywA" name="jSlider1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G6x2QBUTEemIe6OhVnSywA" name="jSlider2" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G6ydUBUTEemIe6OhVnSywA" name="jTextArea1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G6ydURUTEemIe6OhVnSywA" name="jcbBcgr" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G6zEYBUTEemIe6OhVnSywA" name="jcbColour" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G6zEYRUTEemIe6OhVnSywA" name="jcbFont" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G6zrcBUTEemIe6OhVnSywA" name="jcbStyle" visibility="private" isUnique="false"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G5bLYBUTEemIe6OhVnSywA" name="ImageAnnotation" specification="_G5WS4BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    super();&#xD;
    initComponents();&#xD;
    this.imp = imp;&#xD;
    this.m = m;&#xD;
    IJ.run(imp, &quot;RGB Color&quot;, &quot;&quot;);&#xD;
    IJ.setTool(&quot;text&quot;);&#xD;
    imp.getWindow().setLocked(true);&#xD;
    imp.getWindow().setAlwaysOnTop(true);&#xD;
    this.setAlwaysOnTop(true);&#xD;
    String[] fonts = getFonts();&#xD;
    for (String font : fonts) {&#xD;
        jcbFont.addItem(font);&#xD;
    }&#xD;
    jcbFont.setSelectedIndex(0);&#xD;
    String[] colours = Colors.getColors(Colors.colorToString2(Color.RED));&#xD;
    for (String colour : colours) {&#xD;
        jcbColour.addItem(colour);&#xD;
    }&#xD;
    jcbColour.setSelectedIndex(0);&#xD;
    jcbBcgr.addItem(&quot;None&quot;);&#xD;
    for (String colour : colours) {&#xD;
        jcbBcgr.addItem(colour);&#xD;
    }&#xD;
    jcbBcgr.setSelectedIndex(0);&#xD;
    toFront();&#xD;
    Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();&#xD;
    double width = screenSize.getWidth();&#xD;
    setLocation((int) width - 300, 0);&#xD;
    setAlwaysOnTop(true);&#xD;
    setVisible(true);&#xD;
    change = true;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G5gq8BUTEemIe6OhVnSywA" name="getFonts" specification="_G5dAkBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();&#xD;
    String[] fonts = ge.getAvailableFontFamilyNames();&#xD;
    ArrayList names = new ArrayList();&#xD;
    names.add(&quot;SansSerif&quot;);&#xD;
    names.add(&quot;Serif&quot;);&#xD;
    names.add(&quot;Monospaced&quot;);&#xD;
    for (int i = 0; i &lt; fonts.length; i++) {&#xD;
        String f = fonts[i];&#xD;
        if (f.length() &lt;= 20 &amp;&amp; !(f.equals(&quot;SansSerif&quot;) || f.equals(&quot;Serif&quot;) || f.equals(&quot;Monospaced&quot;))) {&#xD;
            names.add(f);&#xD;
        }&#xD;
    }&#xD;
    return (String[]) names.toArray(new String[names.size()]);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G5kVUBUTEemIe6OhVnSywA" name="initComponents" specification="_G5igIBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    buttonGroup1 = new javax.swing.ButtonGroup();&#xD;
    jPanel4 = new javax.swing.JPanel();&#xD;
    jButton2 = new javax.swing.JButton();&#xD;
    jButton10 = new javax.swing.JButton();&#xD;
    jPanel1 = new javax.swing.JPanel();&#xD;
    jPanel2 = new javax.swing.JPanel();&#xD;
    jScrollPane1 = new javax.swing.JScrollPane();&#xD;
    jTextArea1 = new javax.swing.JTextArea();&#xD;
    jPanel3 = new javax.swing.JPanel();&#xD;
    jPanel5 = new javax.swing.JPanel();&#xD;
    jLabel1 = new javax.swing.JLabel();&#xD;
    jcbFont = new javax.swing.JComboBox();&#xD;
    jcbStyle = new javax.swing.JComboBox();&#xD;
    jcbColour = new javax.swing.JComboBox();&#xD;
    jLabel2 = new javax.swing.JLabel();&#xD;
    jLabel3 = new javax.swing.JLabel();&#xD;
    jLabel4 = new javax.swing.JLabel();&#xD;
    jcbBcgr = new javax.swing.JComboBox();&#xD;
    jLabel5 = new javax.swing.JLabel();&#xD;
    jSlider1 = new javax.swing.JSlider();&#xD;
    jLabel6 = new javax.swing.JLabel();&#xD;
    jSlider2 = new javax.swing.JSlider();&#xD;
    setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);&#xD;
    setTitle(&quot;Image analysis&quot;);&#xD;
    setResizable(false);&#xD;
    jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());&#xD;
    jButton2.setText(&quot;Save&quot;);&#xD;
    jButton2.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton2ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jButton10.setText(&quot;Cancel&quot;);&#xD;
    jButton10.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton10ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);&#xD;
    jPanel4.setLayout(jPanel4Layout);&#xD;
    jPanel4Layout.setHorizontalGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addComponent(jButton10).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButton2)));&#xD;
    jPanel4Layout.setVerticalGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jButton2).addComponent(jButton10))));&#xD;
    jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Help&quot;));&#xD;
    jTextArea1.setEditable(false);&#xD;
    jTextArea1.setColumns(20);&#xD;
    jTextArea1.setRows(5);&#xD;
    jTextArea1.setText(&quot;Here, you can annotate the image.\nTo add a text, select a region; then,\nstart writing. Once that you have \nfinished, press Ctrl+B to add the\ntext to the image.\nNote that the image will not be\ninternally stored in the database, \nand you have to save it as an \nexternal image.&quot;);&#xD;
    jScrollPane1.setViewportView(jTextArea1);&#xD;
    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);&#xD;
    jPanel2.setLayout(jPanel2Layout);&#xD;
    jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING));&#xD;
    jPanel2Layout.setVerticalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE));&#xD;
    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);&#xD;
    jPanel1.setLayout(jPanel1Layout);&#xD;
    jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));&#xD;
    jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)));&#xD;
    jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Edition tools&quot;));&#xD;
    jLabel1.setText(&quot;Font:&quot;);&#xD;
    jcbFont.addItemListener(new java.awt.event.ItemListener() {&#xD;
&#xD;
        public void itemStateChanged(java.awt.event.ItemEvent evt) {&#xD;
            jcbFontItemStateChanged(evt);&#xD;
        }&#xD;
    });&#xD;
    jcbStyle.setModel(new javax.swing.DefaultComboBoxModel(new String[] { &quot;Plain&quot;, &quot;Bold&quot;, &quot;Italic&quot;, &quot;Bold+Italic&quot; }));&#xD;
    jcbStyle.addItemListener(new java.awt.event.ItemListener() {&#xD;
&#xD;
        public void itemStateChanged(java.awt.event.ItemEvent evt) {&#xD;
            jcbStyleItemStateChanged(evt);&#xD;
        }&#xD;
    });&#xD;
    jcbColour.addItemListener(new java.awt.event.ItemListener() {&#xD;
&#xD;
        public void itemStateChanged(java.awt.event.ItemEvent evt) {&#xD;
            jcbColourItemStateChanged(evt);&#xD;
        }&#xD;
    });&#xD;
    jLabel2.setText(&quot;Style:&quot;);&#xD;
    jLabel3.setText(&quot;Colour:&quot;);&#xD;
    jLabel4.setText(&quot;Bkgd:&quot;);&#xD;
    jcbBcgr.addItemListener(new java.awt.event.ItemListener() {&#xD;
&#xD;
        public void itemStateChanged(java.awt.event.ItemEvent evt) {&#xD;
            jcbBcgrItemStateChanged(evt);&#xD;
        }&#xD;
    });&#xD;
    jLabel5.setText(&quot;Size:&quot;);&#xD;
    jSlider1.setMinimum(10);&#xD;
    jSlider1.setValue(18);&#xD;
    jSlider1.addChangeListener(new javax.swing.event.ChangeListener() {&#xD;
&#xD;
        public void stateChanged(javax.swing.event.ChangeEvent evt) {&#xD;
            jSlider1StateChanged(evt);&#xD;
        }&#xD;
    });&#xD;
    jLabel6.setText(&quot;Angle:&quot;);&#xD;
    jSlider2.setMaximum(90);&#xD;
    jSlider2.setMinimum(-90);&#xD;
    jSlider2.setValue(0);&#xD;
    jSlider2.addChangeListener(new javax.swing.event.ChangeListener() {&#xD;
&#xD;
        public void stateChanged(javax.swing.event.ChangeEvent evt) {&#xD;
            jSlider2StateChanged(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);&#xD;
    jPanel5.setLayout(jPanel5Layout);&#xD;
    jPanel5Layout.setHorizontalGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel5Layout.createSequentialGroup().addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addComponent(jLabel6).addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING).addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)).addGroup(jPanel5Layout.createSequentialGroup().addContainerGap().addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel2).addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING))).addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING))).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jcbBcgr, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jcbStyle, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jcbFont, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jcbColour, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(jPanel5Layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(jPanel5Layout.createSequentialGroup().addComponent(jSlider2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addGap(0, 0, Short.MAX_VALUE)))));&#xD;
    jPanel5Layout.setVerticalGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel5Layout.createSequentialGroup().addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jcbFont, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel1)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jcbStyle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel2)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jcbColour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel3)).addGap(8, 8, 8).addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jcbBcgr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel4)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel5).addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup().addComponent(jLabel6).addGap(39, 39, 39)).addComponent(jSlider2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addContainerGap()));&#xD;
    javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);&#xD;
    jPanel3.setLayout(jPanel3Layout);&#xD;
    jPanel3Layout.setHorizontalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));&#xD;
    jPanel3Layout.setVerticalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel3Layout.createSequentialGroup().addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());&#xD;
    getContentPane().setLayout(layout);&#xD;
    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))));&#xD;
    layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup().addContainerGap().addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)));&#xD;
    pack();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G5pN0BUTEemIe6OhVnSywA" name="jButton2ActionPerformed" specification="_G5mxkBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jButton2ActionPerformed&#xD;
    imp.getWindow().setLocked(false);&#xD;
    this.setAlwaysOnTop(false);&#xD;
    imp.getWindow().setAlwaysOnTop(false);&#xD;
    imp.changes = false;&#xD;
    IJ.saveAs(imp, &quot;.tiff&quot;, null);&#xD;
    imp.close();&#xD;
    this.dispose();&#xD;
    IJ.getInstance().dispose();&#xD;
    m.enableall();&#xD;
    m.toFront();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G5s4MBUTEemIe6OhVnSywA" name="jButton10ActionPerformed" specification="_G5rDABUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jButton10ActionPerformed&#xD;
    this.dispose();&#xD;
    imp.getWindow().setLocked(false);&#xD;
    imp.changes = false;&#xD;
    imp.close();&#xD;
    IJ.getInstance().dispose();&#xD;
    m.enableall();&#xD;
    m.toFront();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G500ABUTEemIe6OhVnSywA" name="jcbFontItemStateChanged" specification="_G5yXwBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jcbFontItemStateChanged&#xD;
    updatetext();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G54eYBUTEemIe6OhVnSywA" name="jcbStyleItemStateChanged" specification="_G52pMBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jcbStyleItemStateChanged&#xD;
    updatetext();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G58v0BUTEemIe6OhVnSywA" name="jcbColourItemStateChanged" specification="_G566oBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jcbColourItemStateChanged&#xD;
    updatetext();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G6BBQBUTEemIe6OhVnSywA" name="jcbBcgrItemStateChanged" specification="_G5_MEBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jcbBcgrItemStateChanged&#xD;
    updatetext();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G6HH4BUTEemIe6OhVnSywA" name="jSlider1StateChanged" specification="_G6EroBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jSlider1StateChanged&#xD;
    updatetext();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G6MAYBUTEemIe6OhVnSywA" name="jSlider2StateChanged" specification="_G6JkIBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jSlider2StateChanged&#xD;
    updatetext();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G6PqwBUTEemIe6OhVnSywA" name="updatetext" specification="_G6OcoBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    if (change) {&#xD;
        Roi roi = imp != null ? imp.getRoi() : null;&#xD;
        TextRoi textRoi = roi != null &amp;&amp; (roi instanceof TextRoi) ? (TextRoi) roi : null;&#xD;
        String font = (String) jcbFont.getSelectedItem();&#xD;
        int style = jcbStyle.getSelectedIndex();&#xD;
        int fontSize = jSlider1.getValue();&#xD;
        int angle = jSlider2.getValue();&#xD;
        TextRoi.setFont(font, fontSize, style, true);&#xD;
        TextRoi.setDefaultAngle(angle);&#xD;
        String colour = (String) jcbColour.getSelectedItem();&#xD;
        String fillc = (String) jcbBcgr.getSelectedItem();&#xD;
        Color c = Colors.decode(colour, null);&#xD;
        TextRoi.setColor(c);&#xD;
        TextRoi.setDefaultAngle(angle);&#xD;
        imp.getProcessor().setColor(c);&#xD;
        Color fillColor = Colors.decode(fillc, null);&#xD;
        if (textRoi != null) {&#xD;
            textRoi.setAngle(angle);&#xD;
            textRoi.setFillColor(fillColor);&#xD;
            textRoi.setStrokeColor(c);&#xD;
            textRoi.setAntialiased(true);&#xD;
        }&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G5WS4BUTEemIe6OhVnSywA" name="ImageAnnotation" visibility="public" method="_G5bLYBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G5akUBUTEemIe6OhVnSywA" name="imp"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G5akURUTEemIe6OhVnSywA" name="m" type="_Gul0YBUTEemIe6OhVnSywA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G5dAkBUTEemIe6OhVnSywA" name="getFonts" visibility="private" method="_G5gq8BUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G5eOsBUTEemIe6OhVnSywA" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_G5fc0BUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_G5gD4BUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G5igIBUTEemIe6OhVnSywA" name="initComponents" visibility="private" method="_G5kVUBUTEemIe6OhVnSywA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G5mxkBUTEemIe6OhVnSywA" name="jButton2ActionPerformed" visibility="private" method="_G5pN0BUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G5n_sBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G5rDABUTEemIe6OhVnSywA" name="jButton10ActionPerformed" visibility="private" method="_G5s4MBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G5sRIBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G5yXwBUTEemIe6OhVnSywA" name="jcbFontItemStateChanged" visibility="private" method="_G500ABUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G5zl4BUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G52pMBUTEemIe6OhVnSywA" name="jcbStyleItemStateChanged" visibility="private" method="_G54eYBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G53QQBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G566oBUTEemIe6OhVnSywA" name="jcbColourItemStateChanged" visibility="private" method="_G58v0BUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G58IwBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G5_MEBUTEemIe6OhVnSywA" name="jcbBcgrItemStateChanged" visibility="private" method="_G6BBQBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G6AaMBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G6EroBUTEemIe6OhVnSywA" name="jSlider1StateChanged" visibility="private" method="_G6HH4BUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G6Gg0BUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G6JkIBUTEemIe6OhVnSywA" name="jSlider2StateChanged" visibility="private" method="_G6MAYBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G6KyQBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G6OcoBUTEemIe6OhVnSywA" name="updatetext" visibility="private" method="_G6PqwBUTEemIe6OhVnSywA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_G65LABUTEemIe6OhVnSywA" name="SearchExperiments" visibility="public">
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G67nQBUTEemIe6OhVnSywA" name="se" visibility="private" type="_G2WpQBUTEemIe6OhVnSywA" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G69ccBUTEemIe6OhVnSywA" name="m" visibility="private" type="_Gul0YBUTEemIe6OhVnSywA" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G6_4sBUTEemIe6OhVnSywA" name="studyid" visibility="private" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G7avcBUTEemIe6OhVnSywA" name="jLabel1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G7ckoBUTEemIe6OhVnSywA" name="jLabel2" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G7fA4BUTEemIe6OhVnSywA" name="jLabel3" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G7g2EBUTEemIe6OhVnSywA" name="jLabel4" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G7irQBUTEemIe6OhVnSywA" name="jLabel5" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G7lHgBUTEemIe6OhVnSywA" name="jbClose" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G7m8sBUTEemIe6OhVnSywA" name="jbSearch" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G7ox4BUTEemIe6OhVnSywA" name="jcbAuthor" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G7r1MBUTEemIe6OhVnSywA" name="jcbMarker" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G7tDUBUTEemIe6OhVnSywA" name="jdpfrom" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G7vfkBUTEemIe6OhVnSywA" name="jdpto" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G7xUwBUTEemIe6OhVnSywA" name="jtfName" visibility="private" isUnique="false"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G7GmYBUTEemIe6OhVnSywA" name="SearchExperiments" specification="_G7CU8BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    initComponents();&#xD;
    this.se = se;&#xD;
    setDefaultCloseOperation(DISPOSE_ON_CLOSE);&#xD;
    ArrayList&lt;User> users = getUsers();&#xD;
    jcbAuthor.addItem(&quot;&quot;);&#xD;
    for (int i = 0; i &lt; users.size(); i++) {&#xD;
        jcbAuthor.addItem(users.get(i).getUsername());&#xD;
    }&#xD;
    ArrayList&lt;Marker> markers = getMarkers();&#xD;
    jcbMarker.addItem(&quot;&quot;);&#xD;
    for (int i = 0; i &lt; users.size(); i++) {&#xD;
        jcbMarker.addItem(markers.get(i).getName());&#xD;
    }&#xD;
    this.studyid = se.studyid;&#xD;
    this.setModal(true);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G7MtABUTEemIe6OhVnSywA" name="SearchExperiments" specification="_G7IbkBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    initComponents();&#xD;
    this.m = m;&#xD;
    setDefaultCloseOperation(DISPOSE_ON_CLOSE);&#xD;
    ArrayList&lt;User> users = getUsers();&#xD;
    jcbAuthor.addItem(&quot;&quot;);&#xD;
    for (int i = 0; i &lt; users.size(); i++) {&#xD;
        jcbAuthor.addItem(users.get(i).getUsername());&#xD;
    }&#xD;
    ArrayList&lt;Marker> markers = getMarkers();&#xD;
    jcbMarker.addItem(&quot;&quot;);&#xD;
    for (int i = 0; i &lt; markers.size(); i++) {&#xD;
        jcbMarker.addItem(markers.get(i).getName());&#xD;
    }&#xD;
    this.studyid = m.studyid;&#xD;
    this.setModal(true);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G7OiMBUTEemIe6OhVnSywA" name="initComponents" specification="_G7NUEBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    jLabel1 = new javax.swing.JLabel();&#xD;
    jtfName = new javax.swing.JTextField();&#xD;
    jLabel2 = new javax.swing.JLabel();&#xD;
    jcbAuthor = new javax.swing.JComboBox();&#xD;
    jLabel3 = new javax.swing.JLabel();&#xD;
    jcbMarker = new javax.swing.JComboBox();&#xD;
    jdpfrom = new org.jdesktop.swingx.JXDatePicker();&#xD;
    jLabel4 = new javax.swing.JLabel();&#xD;
    jLabel5 = new javax.swing.JLabel();&#xD;
    jdpto = new org.jdesktop.swingx.JXDatePicker();&#xD;
    jbClose = new javax.swing.JButton();&#xD;
    jbSearch = new javax.swing.JButton();&#xD;
    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);&#xD;
    setTitle(&quot;Search Experiments&quot;);&#xD;
    setResizable(false);&#xD;
    jLabel1.setText(&quot;Name:&quot;);&#xD;
    jLabel2.setText(&quot;Author:&quot;);&#xD;
    jLabel3.setText(&quot;Marker:&quot;);&#xD;
    jLabel4.setText(&quot;From:&quot;);&#xD;
    jLabel5.setText(&quot;To:&quot;);&#xD;
    jbClose.setText(&quot;Close&quot;);&#xD;
    jbClose.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbCloseActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jbSearch.setText(&quot;Search&quot;);&#xD;
    jbSearch.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbSearchActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());&#xD;
    getContentPane().setLayout(layout);&#xD;
    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addComponent(jLabel3).addComponent(jLabel2).addComponent(jLabel1).addComponent(jLabel4)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false).addComponent(jcbAuthor, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jcbMarker, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jtfName).addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup().addComponent(jdpfrom, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addComponent(jbClose).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jbSearch)).addGroup(layout.createSequentialGroup().addComponent(jLabel5).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jdpto, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE).addGap(0, 0, Short.MAX_VALUE))))).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel1).addComponent(jtfName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel2).addComponent(jcbAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel3).addComponent(jcbMarker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jdpfrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel4).addComponent(jLabel5).addComponent(jdpto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jbClose).addComponent(jbSearch)).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    pack();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G7TasBUTEemIe6OhVnSywA" name="jbSearchActionPerformed" specification="_G7Q-cBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbSearchActionPerformed&#xD;
    String name = jtfName.getText();&#xD;
    String author = String.valueOf(jcbAuthor.getSelectedItem());&#xD;
    String marker = String.valueOf(jcbMarker.getSelectedItem());&#xD;
    DateFormat format = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;);&#xD;
    String fromDate = &quot;&quot;;&#xD;
    String toDate = &quot;&quot;;&#xD;
    if (jdpfrom.getDate() != null) {&#xD;
        fromDate = format.format(jdpfrom.getDate());&#xD;
    }&#xD;
    if (jdpto.getDate() != null) {&#xD;
        toDate = format.format(jdpto.getDate());&#xD;
    }&#xD;
    if (name.equals(&quot;&quot;) &amp;&amp; author.equals(&quot;&quot;) &amp;&amp; marker.equals(&quot;&quot;) &amp;&amp; fromDate.equals(&quot;&quot;) &amp;&amp; toDate.equals(&quot;&quot;)) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;Introduce some value to search&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
    } else {&#xD;
        int n = 0;&#xD;
        if (!name.equals(&quot;&quot;)) {&#xD;
            n++;&#xD;
        }&#xD;
        if (!author.equals(&quot;&quot;)) {&#xD;
            n++;&#xD;
        }&#xD;
        if (!marker.equals(&quot;&quot;)) {&#xD;
            n++;&#xD;
        }&#xD;
        if (!(fromDate.equals(&quot;&quot;))) {&#xD;
            n++;&#xD;
        }&#xD;
        if (!(toDate.equals(&quot;&quot;))) {&#xD;
            n++;&#xD;
        }&#xD;
        ArrayList&lt;Experiment> experiments = searchexperiments(studyid, name, author, marker, fromDate, toDate, n);&#xD;
        if (experiments.isEmpty()) {&#xD;
            JOptionPane.showMessageDialog(this, &quot;Your search did not produce any result&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
        }&#xD;
        if (experiments.size() == 1) {&#xD;
            //               se.setExperiments(experiments);&#xD;
            //               se.updateexperiments(false);&#xD;
            m.selectExperiment(experiments.get(0).getId());&#xD;
            dispose();&#xD;
        } else {&#xD;
            //               se.setExperiments(experiments);&#xD;
            //               se.updateexperiments(false);&#xD;
            String res = &quot;Your search produced several results. The experiments &quot;;&#xD;
            for (int i = 0; i &lt; experiments.size() - 1; i++) {&#xD;
                res = res + experiments.get(i).getName() + &quot;, &quot;;&#xD;
            }&#xD;
            res = res + &quot;and &quot; + experiments.get(experiments.size() - 1).getName() + &quot; &quot;;&#xD;
            res = res + &quot;satisfy your searching criteria.&quot;;&#xD;
            JOptionPane.showMessageDialog(this, res, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
        }&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G7YTMBUTEemIe6OhVnSywA" name="jbCloseActionPerformed" specification="_G7WeABUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbCloseActionPerformed&#xD;
    dispose();&#xD;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G7CU8BUTEemIe6OhVnSywA" name="SearchExperiments" visibility="public" method="_G7GmYBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G7F_UBUTEemIe6OhVnSywA" name="se" type="_G2WpQBUTEemIe6OhVnSywA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G7IbkBUTEemIe6OhVnSywA" name="SearchExperiments" visibility="public" method="_G7MtABUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G7MF8BUTEemIe6OhVnSywA" name="m" type="_Gul0YBUTEemIe6OhVnSywA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G7NUEBUTEemIe6OhVnSywA" name="initComponents" visibility="private" method="_G7OiMBUTEemIe6OhVnSywA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G7Q-cBUTEemIe6OhVnSywA" name="jbSearchActionPerformed" visibility="private" method="_G7TasBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G7SMkBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G7WeABUTEemIe6OhVnSywA" name="jbCloseActionPerformed" visibility="private" method="_G7YTMBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G7XFEBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_G71mMBUTEemIe6OhVnSywA" name="About" visibility="public">
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G8P14BUTEemIe6OhVnSywA" name="jButton1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G8RrEBUTEemIe6OhVnSywA" name="jScrollPane1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G8UHUBUTEemIe6OhVnSywA" name="jTextArea1" visibility="private" isUnique="false"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G7-wIBUTEemIe6OhVnSywA" name="About" specification="_G74CcBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    super(parent, modal);&#xD;
    initComponents();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G8BzcBUTEemIe6OhVnSywA" name="initComponents" specification="_G8AlUBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    jScrollPane1 = new javax.swing.JScrollPane();&#xD;
    jTextArea1 = new javax.swing.JTextArea();&#xD;
    jButton1 = new javax.swing.JButton();&#xD;
    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);&#xD;
    setTitle(&quot;About&quot;);&#xD;
    setModal(true);&#xD;
    jTextArea1.setEditable(false);&#xD;
    jTextArea1.setColumns(20);&#xD;
    jTextArea1.setRows(5);&#xD;
    jTextArea1.setText(&quot;GelJ 1.0. \nAuthors: J. Heras, C. DomÃ­nguez, E. Mata, and V. Pascual\nContact: joheras@gmail.com\n\nGelJ was developed at the Department of Mathematics\nand Computer Science of University of La Rioja, Spain.\nThis work was partially supported by the ADER grant \n2013-I-IDD-00123.\n&quot;);&#xD;
    jScrollPane1.setViewportView(jTextArea1);&#xD;
    jButton1.setText(&quot;Ok&quot;);&#xD;
    jButton1.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton1ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());&#xD;
    getContentPane().setLayout(layout);&#xD;
    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 425, Short.MAX_VALUE).addGroup(layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addComponent(jButton1)));&#xD;
    layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButton1).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    pack();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G8H6EBUTEemIe6OhVnSywA" name="jButton1ActionPerformed" specification="_G8E2wBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jButton1ActionPerformed&#xD;
    dispose();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G8NZoBUTEemIe6OhVnSywA" name="main" specification="_G8KWUBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */&#xD;
    try {&#xD;
        for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {&#xD;
            if (&quot;Nimbus&quot;.equals(info.getName())) {&#xD;
                javax.swing.UIManager.setLookAndFeel(info.getClassName());&#xD;
                break;&#xD;
            }&#xD;
        }&#xD;
    } catch (ClassNotFoundException ex) {&#xD;
        java.util.logging.Logger.getLogger(About.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);&#xD;
    } catch (InstantiationException ex) {&#xD;
        java.util.logging.Logger.getLogger(About.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);&#xD;
    } catch (IllegalAccessException ex) {&#xD;
        java.util.logging.Logger.getLogger(About.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);&#xD;
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {&#xD;
        java.util.logging.Logger.getLogger(About.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);&#xD;
    }&#xD;
    //&lt;/editor-fold>&#xD;
    /* Create and display the dialog */&#xD;
    java.awt.EventQueue.invokeLater(new Runnable() {&#xD;
&#xD;
        public void run() {&#xD;
            About dialog = new About(new javax.swing.JFrame(), true);&#xD;
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {&#xD;
&#xD;
                @Override&#xD;
                public void windowClosing(java.awt.event.WindowEvent e) {&#xD;
                    System.exit(0);&#xD;
                }&#xD;
            });&#xD;
            dialog.setVisible(true);&#xD;
        }&#xD;
    });&#xD;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G74CcBUTEemIe6OhVnSywA" name="About" visibility="public" method="_G7-wIBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G78T4BUTEemIe6OhVnSywA" name="parent"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G79iABUTEemIe6OhVnSywA" name="modal">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G8AlUBUTEemIe6OhVnSywA" name="initComponents" visibility="private" method="_G8BzcBUTEemIe6OhVnSywA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G8E2wBUTEemIe6OhVnSywA" name="jButton1ActionPerformed" visibility="private" method="_G8H6EBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G8Gr8BUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G8KWUBUTEemIe6OhVnSywA" name="main" visibility="public" isStatic="true" method="_G8NZoBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G8MLgBUTEemIe6OhVnSywA" name="args"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_G8Zm4BUTEemIe6OhVnSywA" name="AddtoComparison" visibility="public">
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G8dRQBUTEemIe6OhVnSywA" name="lanes" visibility="private" type="_EHtRsBUTEemIe6OhVnSywA" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_G8fGcBUTEemIe6OhVnSywA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_G8ftgBUTEemIe6OhVnSywA" value="*"/>
              <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_G8gUkBUTEemIe6OhVnSywA" name="defaultValue">
                <language>JAVA</language>
                <body>new ArrayList&lt;>()</body>
              </defaultValue>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G8hisBUTEemIe6OhVnSywA" name="studyid" visibility="private" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G8j-8BUTEemIe6OhVnSywA" name="comparisons" visibility="private" type="_EHPXoBUTEemIe6OhVnSywA" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_G8l0IBUTEemIe6OhVnSywA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_G8mbMBUTEemIe6OhVnSywA" value="*"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G8npUBUTEemIe6OhVnSywA" name="se" visibility="private" type="_G2WpQBUTEemIe6OhVnSywA" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G89nkBUTEemIe6OhVnSywA" name="buttonGroup1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G8-OoBUTEemIe6OhVnSywA" name="jbCancel" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G8-1sBUTEemIe6OhVnSywA" name="jbOk" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G8_cwBUTEemIe6OhVnSywA" name="jcbComparison" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G9CgEBUTEemIe6OhVnSywA" name="jrbnew" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_G9GKcBUTEemIe6OhVnSywA" name="jrbprevious" visibility="private" isUnique="false"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G83g8BUTEemIe6OhVnSywA" name="AddtoComparison" specification="_G8qFkBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    super(parent, modal);&#xD;
    this.lanes = lanes;&#xD;
    initComponents();&#xD;
    this.studyid = studyid;&#xD;
    this.se = se;&#xD;
    comparisons = getComparisons(studyid);&#xD;
    for (Comparison c : comparisons) {&#xD;
        jcbComparison.addItem(c.getName());&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G85WIBUTEemIe6OhVnSywA" name="initComponents" specification="_G84vEBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    buttonGroup1 = new javax.swing.ButtonGroup();&#xD;
    jrbnew = new javax.swing.JRadioButton();&#xD;
    jrbprevious = new javax.swing.JRadioButton();&#xD;
    jcbComparison = new javax.swing.JComboBox();&#xD;
    jbOk = new javax.swing.JButton();&#xD;
    jbCancel = new javax.swing.JButton();&#xD;
    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);&#xD;
    setModal(true);&#xD;
    setResizable(false);&#xD;
    buttonGroup1.add(jrbnew);&#xD;
    jrbnew.setSelected(true);&#xD;
    jrbnew.setText(&quot;Add to a new comparison&quot;);&#xD;
    jrbnew.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jrbnewActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    buttonGroup1.add(jrbprevious);&#xD;
    jrbprevious.setText(&quot;Add to a previous comparison:&quot;);&#xD;
    jrbprevious.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jrbpreviousActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jcbComparison.setEnabled(false);&#xD;
    jbOk.setText(&quot;Ok&quot;);&#xD;
    jbOk.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbOkActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jbCancel.setText(&quot;Cancel&quot;);&#xD;
    jbCancel.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbCancelActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());&#xD;
    getContentPane().setLayout(layout);&#xD;
    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jrbnew).addGroup(layout.createSequentialGroup().addComponent(jrbprevious).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jcbComparison, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup().addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jbCancel).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jbOk).addContainerGap()));&#xD;
    layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addComponent(jrbnew).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jrbprevious).addComponent(jcbComparison, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jbOk).addComponent(jbCancel)).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    pack();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G86kQBUTEemIe6OhVnSywA" name="jbCancelActionPerformed" specification="_G859MBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbCancelActionPerformed&#xD;
    dispose();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G87LURUTEemIe6OhVnSywA" name="jrbpreviousActionPerformed" specification="_G86kQRUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    if (jrbprevious.isSelected()) {&#xD;
        jcbComparison.setEnabled(true);&#xD;
    } else {&#xD;
        jcbComparison.setEnabled(false);&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G88ZcBUTEemIe6OhVnSywA" name="jrbnewActionPerformed" specification="_G87yYBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jrbnewActionPerformed&#xD;
    if (jrbprevious.isSelected()) {&#xD;
        jcbComparison.setEnabled(true);&#xD;
    } else {&#xD;
        jcbComparison.setEnabled(false);&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_G89AgRUTEemIe6OhVnSywA" name="jbOkActionPerformed" specification="_G88ZcRUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbOkActionPerformed&#xD;
    if (jrbprevious.isSelected()) {&#xD;
        int idcomp = comparisons.get(jcbComparison.getSelectedIndex()).getId();&#xD;
        insertComparisonLane(idcomp, lanes);&#xD;
        dispose();&#xD;
    } else {&#xD;
        int newcomp = ComparisonQueries.lastComparisonid();&#xD;
        NewComparisonGUI nc = new NewComparisonGUI(this, true, studyid, se);&#xD;
        nc.setVisible(true);&#xD;
        int newcomp2 = ComparisonQueries.lastComparisonid();&#xD;
        if (newcomp != newcomp2) {&#xD;
            insertComparisonLane(newcomp, lanes);&#xD;
            dispose();&#xD;
        }&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G8qFkBUTEemIe6OhVnSywA" name="AddtoComparison" visibility="public" method="_G83g8BUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G8uXABUTEemIe6OhVnSywA" name="parent"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G8vlIBUTEemIe6OhVnSywA" name="modal">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G8xaUBUTEemIe6OhVnSywA" name="lanes" type="_EHtRsBUTEemIe6OhVnSywA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_G8yocBUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_G8zPgBUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G80doBUTEemIe6OhVnSywA" name="studyid">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G82S0BUTEemIe6OhVnSywA" name="se" type="_G2WpQBUTEemIe6OhVnSywA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G84vEBUTEemIe6OhVnSywA" name="initComponents" visibility="private" method="_G85WIBUTEemIe6OhVnSywA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G859MBUTEemIe6OhVnSywA" name="jbCancelActionPerformed" visibility="private" method="_G86kQBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G859MRUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G86kQRUTEemIe6OhVnSywA" name="jrbpreviousActionPerformed" visibility="private" method="_G87LURUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G87LUBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G87yYBUTEemIe6OhVnSywA" name="jrbnewActionPerformed" visibility="private" method="_G88ZcBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G87yYRUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_G88ZcRUTEemIe6OhVnSywA" name="jbOkActionPerformed" visibility="private" method="_G89AgRUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_G89AgBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_HCckgRUTEemIe6OhVnSywA" name="ClassNotFoundException"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_HKIg4BUTEemIe6OhVnSywA" name="NewComparisonGUI" visibility="public">
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HKJH8BUTEemIe6OhVnSywA" name="studyid" visibility="private" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HKJH8RUTEemIe6OhVnSywA" name="se" visibility="private" type="_G2WpQBUTEemIe6OhVnSywA" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HKS48RUTEemIe6OhVnSywA" name="jLabel1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HKTgABUTEemIe6OhVnSywA" name="jLabel2" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HKTgARUTEemIe6OhVnSywA" name="jLabel3" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HKUHEBUTEemIe6OhVnSywA" name="jLabel4" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HKUHERUTEemIe6OhVnSywA" name="jLabel5" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HKUuIBUTEemIe6OhVnSywA" name="jLabel6" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HKUuIRUTEemIe6OhVnSywA" name="jScrollPane1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HKVVMBUTEemIe6OhVnSywA" name="jbCancel" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HKVVMRUTEemIe6OhVnSywA" name="jbCreate" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HKVVMhUTEemIe6OhVnSywA" name="jcbLinkage" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HKV8QBUTEemIe6OhVnSywA" name="jcbSimilarity" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HKV8QRUTEemIe6OhVnSywA" name="jtacomments" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HKV8QhUTEemIe6OhVnSywA" name="jtfName" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HKWjUBUTEemIe6OhVnSywA" name="jtfTolerance" visibility="private" isUnique="false"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HKMLQRUTEemIe6OhVnSywA" name="NewComparisonGUI" specification="_HKJH8hUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    super(parent, modal);&#xD;
    initComponents();&#xD;
    this.studyid = studyid;&#xD;
    this.se = se;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HKQcsBUTEemIe6OhVnSywA" name="NewComparisonGUI" specification="_HKMyUBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    super(parent, modal);&#xD;
    initComponents();&#xD;
    this.studyid = studyid;&#xD;
    this.se = se;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HKQcshUTEemIe6OhVnSywA" name="initComponents" specification="_HKQcsRUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    jLabel1 = new javax.swing.JLabel();&#xD;
    jtfName = new javax.swing.JTextField();&#xD;
    jLabel2 = new javax.swing.JLabel();&#xD;
    jcbSimilarity = new javax.swing.JComboBox();&#xD;
    jLabel3 = new javax.swing.JLabel();&#xD;
    jcbLinkage = new javax.swing.JComboBox();&#xD;
    jLabel4 = new javax.swing.JLabel();&#xD;
    jtfTolerance = new javax.swing.JTextField();&#xD;
    jLabel6 = new javax.swing.JLabel();&#xD;
    jScrollPane1 = new javax.swing.JScrollPane();&#xD;
    jtacomments = new javax.swing.JTextArea();&#xD;
    jLabel5 = new javax.swing.JLabel();&#xD;
    jbCancel = new javax.swing.JButton();&#xD;
    jbCreate = new javax.swing.JButton();&#xD;
    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);&#xD;
    setModal(true);&#xD;
    setResizable(false);&#xD;
    jLabel1.setText(&quot;Name:&quot;);&#xD;
    jLabel2.setText(&quot;Similarity Method:&quot;);&#xD;
    jcbSimilarity.setModel(new javax.swing.DefaultComboBoxModel(new String[] { &quot;Dice&quot;, &quot;Jaccard&quot;, &quot;Band difference&quot;, &quot;Jeffrey's X&quot;, &quot;Ochiai&quot;, &quot;Pearson correlation&quot;, &quot;Cosine coefficient&quot;, &quot;Euclidean distance&quot;, &quot;Manhattan distance&quot; }));&#xD;
    jLabel3.setText(&quot;Linkage Method:&quot;);&#xD;
    jcbLinkage.setModel(new javax.swing.DefaultComboBoxModel(new String[] { &quot;UPGMA&quot;, &quot;UPGMC&quot;, &quot;Single linkage&quot;, &quot;Complete linkage&quot;, &quot;Mean linkage&quot;, &quot;Ward&quot; }));&#xD;
    jLabel4.setText(&quot;Tolerance:&quot;);&#xD;
    jtfTolerance.setText(&quot;4&quot;);&#xD;
    jLabel6.setText(&quot;Comments:&quot;);&#xD;
    jtacomments.setColumns(20);&#xD;
    jtacomments.setRows(5);&#xD;
    jScrollPane1.setViewportView(jtacomments);&#xD;
    jLabel5.setText(&quot;%&quot;);&#xD;
    jbCancel.setText(&quot;Cancel&quot;);&#xD;
    jbCancel.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbCancelActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jbCreate.setText(&quot;Create&quot;);&#xD;
    jbCreate.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbCreateActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());&#xD;
    getContentPane().setLayout(layout);&#xD;
    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addComponent(jLabel6).addComponent(jLabel4).addComponent(jLabel3).addComponent(jLabel2).addComponent(jLabel1)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false).addComponent(jtfName).addComponent(jcbSimilarity, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jcbLinkage, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup().addComponent(jtfTolerance).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel5)).addComponent(jScrollPane1)).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup().addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jbCancel).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jbCreate).addContainerGap()));&#xD;
    layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel1).addComponent(jtfName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel2).addComponent(jcbSimilarity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel3).addComponent(jcbLinkage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jtfTolerance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel4).addComponent(jLabel5)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel6).addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jbCreate).addComponent(jbCancel)).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    pack();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HKRq0RUTEemIe6OhVnSywA" name="jbCancelActionPerformed" specification="_HKRDwBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbCancelActionPerformed&#xD;
    dispose();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HKS48BUTEemIe6OhVnSywA" name="jbCreateActionPerformed" specification="_HKRq0hUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbCreateActionPerformed&#xD;
    String name = jtfName.getText();&#xD;
    if (name == &quot;&quot;) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;Introduce the name of the comparison&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
        return;&#xD;
    }&#xD;
    if (existscomparison(name, studyid)) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;There is already a comparison with that name&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
        return;&#xD;
    }&#xD;
    String similarity = String.valueOf(jcbSimilarity.getSelectedItem());&#xD;
    String linkage = String.valueOf(jcbLinkage.getSelectedItem());&#xD;
    int tolerance = 4;&#xD;
    try {&#xD;
        tolerance = Integer.parseInt(jtfTolerance.getText());&#xD;
        if (tolerance &lt;= 0) {&#xD;
            JOptionPane.showMessageDialog(this, &quot;Introduce a positive number for the tolerance&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
        }&#xD;
    } catch (NumberFormatException ex) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;Introduce a positive number for tolerance&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
        return;&#xD;
    }&#xD;
    String comments = String.valueOf(jtacomments.getText());&#xD;
    java.util.Calendar cal = java.util.Calendar.getInstance();&#xD;
    java.util.Date utilDate = cal.getTime();&#xD;
    java.sql.Date sqlDate = new Date(utilDate.getTime());&#xD;
    Comparison c = new Comparison(lastComparisonid(), name, sqlDate, similarity, linkage, tolerance, comments, getStudy(studyid));&#xD;
    insertComparison(c);&#xD;
    se.updatecomparisons(true);&#xD;
    dispose();&#xD;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HKJH8hUTEemIe6OhVnSywA" name="NewComparisonGUI" visibility="public" method="_HKMLQRUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HKK9IRUTEemIe6OhVnSywA" name="parent"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HKLkMBUTEemIe6OhVnSywA" name="modal">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HKLkMRUTEemIe6OhVnSywA" name="studyid">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HKMLQBUTEemIe6OhVnSywA" name="se" type="_G2WpQBUTEemIe6OhVnSywA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HKMyUBUTEemIe6OhVnSywA" name="NewComparisonGUI" visibility="public" method="_HKQcsBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HKOngRUTEemIe6OhVnSywA" name="parent"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HKPOkBUTEemIe6OhVnSywA" name="modal">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HKP1oBUTEemIe6OhVnSywA" name="studyid">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HKP1oRUTEemIe6OhVnSywA" name="se" type="_G2WpQBUTEemIe6OhVnSywA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HKQcsRUTEemIe6OhVnSywA" name="initComponents" visibility="private" method="_HKQcshUTEemIe6OhVnSywA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HKRDwBUTEemIe6OhVnSywA" name="jbCancelActionPerformed" visibility="private" method="_HKRq0RUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HKRq0BUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HKRq0hUTEemIe6OhVnSywA" name="jbCreateActionPerformed" visibility="private" method="_HKS48BUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HKSR4BUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_HKY_kBUTEemIe6OhVnSywA" name="SearchComparison" visibility="public">
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HKZmoBUTEemIe6OhVnSywA" name="se" visibility="private" type="_G2WpQBUTEemIe6OhVnSywA" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HKaNsBUTEemIe6OhVnSywA" name="m" visibility="private" type="_Gul0YBUTEemIe6OhVnSywA" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HKaNsRUTEemIe6OhVnSywA" name="studyid" visibility="private" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HKwzABUTEemIe6OhVnSywA" name="jLabel1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HKyoMBUTEemIe6OhVnSywA" name="jLabel2" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HK0dYBUTEemIe6OhVnSywA" name="jLabel3" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HK2SkBUTEemIe6OhVnSywA" name="jLabel4" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HK4HwBUTEemIe6OhVnSywA" name="jLabel5" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HK7LEBUTEemIe6OhVnSywA" name="jLabel6" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HK9AQBUTEemIe6OhVnSywA" name="jbCancel" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HK-1cBUTEemIe6OhVnSywA" name="jbSearch" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HLVawBUTEemIe6OhVnSywA" name="jcbLinkage" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HLYeEBUTEemIe6OhVnSywA" name="jcbSimilarity" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HLa6UBUTEemIe6OhVnSywA" name="jdpfrom" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HLcIcBUTEemIe6OhVnSywA" name="jdpto" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HLdWkBUTEemIe6OhVnSywA" name="jtfName" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HLfLwBUTEemIe6OhVnSywA" name="jtfTolerance" visibility="private" isUnique="false"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HKefIBUTEemIe6OhVnSywA" name="SearchComparison" specification="_HKa0wBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    initComponents();&#xD;
    this.se = se;&#xD;
    studyid = se.studyid;&#xD;
    this.setModal(true);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HKlM0BUTEemIe6OhVnSywA" name="SearchComparison" specification="_HKgUUBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    initComponents();&#xD;
    this.m = m;&#xD;
    studyid = m.studyid;&#xD;
    this.setModal(true);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HKnpEBUTEemIe6OhVnSywA" name="initComponents" specification="_HKma8BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    jLabel1 = new javax.swing.JLabel();&#xD;
    jtfName = new javax.swing.JTextField();&#xD;
    jLabel2 = new javax.swing.JLabel();&#xD;
    jcbSimilarity = new javax.swing.JComboBox();&#xD;
    jLabel3 = new javax.swing.JLabel();&#xD;
    jcbLinkage = new javax.swing.JComboBox();&#xD;
    jLabel4 = new javax.swing.JLabel();&#xD;
    jtfTolerance = new javax.swing.JTextField();&#xD;
    jLabel5 = new javax.swing.JLabel();&#xD;
    jdpfrom = new org.jdesktop.swingx.JXDatePicker();&#xD;
    jLabel6 = new javax.swing.JLabel();&#xD;
    jdpto = new org.jdesktop.swingx.JXDatePicker();&#xD;
    jbSearch = new javax.swing.JButton();&#xD;
    jbCancel = new javax.swing.JButton();&#xD;
    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);&#xD;
    setResizable(false);&#xD;
    jLabel1.setText(&quot;Name:&quot;);&#xD;
    jLabel2.setText(&quot;Similarity Method:&quot;);&#xD;
    jcbSimilarity.setModel(new javax.swing.DefaultComboBoxModel(new String[] { &quot; &quot;, &quot;Dice&quot;, &quot;Jaccard&quot;, &quot;Band difference&quot;, &quot;Jeffrey's X&quot;, &quot;Ochiai&quot;, &quot;Pearson correlation&quot;, &quot;Cosine coefficient&quot;, &quot;Euclidean distance&quot;, &quot;Manhattan distance&quot; }));&#xD;
    jLabel3.setText(&quot;Linkage Method:&quot;);&#xD;
    jcbLinkage.setModel(new javax.swing.DefaultComboBoxModel(new String[] { &quot; &quot;, &quot;UPGMA&quot;, &quot;UPGMC&quot;, &quot;Single linkage&quot;, &quot;Complete linkage&quot;, &quot;Mean linkage&quot;, &quot;Ward&quot; }));&#xD;
    jLabel4.setText(&quot;Tolerance:&quot;);&#xD;
    jLabel5.setText(&quot;From:&quot;);&#xD;
    jLabel6.setText(&quot;To:&quot;);&#xD;
    jbSearch.setText(&quot;Search&quot;);&#xD;
    jbSearch.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbSearchActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jbCancel.setText(&quot;Cancel&quot;);&#xD;
    jbCancel.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbCancelActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());&#xD;
    getContentPane().setLayout(layout);&#xD;
    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addComponent(jLabel6).addComponent(jLabel5).addComponent(jLabel4).addComponent(jLabel3).addComponent(jLabel2).addComponent(jLabel1)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false).addComponent(jtfName).addComponent(jcbSimilarity, 0, 210, Short.MAX_VALUE).addComponent(jcbLinkage, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jtfTolerance).addComponent(jdpfrom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jdpto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup().addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jbCancel).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jbSearch).addContainerGap()));&#xD;
    layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel1).addComponent(jtfName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jcbSimilarity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel2)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel3).addComponent(jcbLinkage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jtfTolerance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel4)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel5).addComponent(jdpfrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel6).addComponent(jdpto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jbSearch).addComponent(jbCancel)).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    pack();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HKr6gBUTEemIe6OhVnSywA" name="jbSearchActionPerformed" specification="_HKpeQBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbSearchActionPerformed&#xD;
    String name = jtfName.getText();&#xD;
    String similarity = String.valueOf(jcbSimilarity.getSelectedItem());&#xD;
    String linkage = String.valueOf(jcbLinkage.getSelectedItem());&#xD;
    String tolerance = jtfTolerance.getText();&#xD;
    DateFormat format = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;);&#xD;
    String fromDate = &quot;&quot;;&#xD;
    String toDate = &quot;&quot;;&#xD;
    if (jdpfrom.getDate() != null) {&#xD;
        fromDate = format.format(jdpfrom.getDate());&#xD;
    }&#xD;
    if (jdpto.getDate() != null) {&#xD;
        toDate = format.format(jdpto.getDate());&#xD;
    }&#xD;
    if (name.equals(&quot;&quot;) &amp;&amp; similarity.equals(&quot; &quot;) &amp;&amp; linkage.equals(&quot; &quot;) &amp;&amp; tolerance.equals(&quot;&quot;) &amp;&amp; fromDate.equals(&quot;&quot;) &amp;&amp; toDate.equals(&quot;&quot;)) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;Introduce some value to search&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
    } else {&#xD;
        int n = 0;&#xD;
        if (!name.equals(&quot;&quot;)) {&#xD;
            n++;&#xD;
        }&#xD;
        if (!similarity.equals(&quot; &quot;)) {&#xD;
            n++;&#xD;
        }&#xD;
        if (!linkage.equals(&quot; &quot;)) {&#xD;
            n++;&#xD;
        }&#xD;
        if (!tolerance.equals(&quot;&quot;)) {&#xD;
            n++;&#xD;
        }&#xD;
        if (!(fromDate.equals(&quot;&quot;))) {&#xD;
            n++;&#xD;
        }&#xD;
        if (!(toDate.equals(&quot;&quot;))) {&#xD;
            n++;&#xD;
        }&#xD;
        ArrayList&lt;Comparison> comparisons = searchcomparisons(studyid, name, similarity, linkage, tolerance, fromDate, toDate, n);&#xD;
        if (comparisons.isEmpty()) {&#xD;
            JOptionPane.showMessageDialog(this, &quot;Your search did not produce any result&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
        }&#xD;
        if (comparisons.size() == 1) {&#xD;
            //                se.setComparisons(comparisons);&#xD;
            //                se.updatecomparisons(false);&#xD;
            m.selectComparison(comparisons.get(0).getId());&#xD;
            dispose();&#xD;
        } else {&#xD;
            //                se.setComparisons(comparisons);&#xD;
            //                se.updatecomparisons(false);&#xD;
            String res = &quot;Your search produced several results. The comparisons &quot;;&#xD;
            for (int i = 0; i &lt; comparisons.size() - 1; i++) {&#xD;
                res = res + comparisons.get(i).getName() + &quot;, &quot;;&#xD;
            }&#xD;
            res = res + &quot;and &quot; + comparisons.get(comparisons.size() - 1).getName() + &quot; &quot;;&#xD;
            res = res + &quot;satisfy your searching criteria.&quot;;&#xD;
            JOptionPane.showMessageDialog(this, res, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
        }&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HKvk4BUTEemIe6OhVnSywA" name="jbCancelActionPerformed" specification="_HKtIoBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbCancelActionPerformed&#xD;
    dispose();&#xD;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HKa0wBUTEemIe6OhVnSywA" name="SearchComparison" visibility="public" method="_HKefIBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HKd4EBUTEemIe6OhVnSywA" name="se" type="_G2WpQBUTEemIe6OhVnSywA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HKgUUBUTEemIe6OhVnSywA" name="SearchComparison" visibility="public" method="_HKlM0BUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HKj-sBUTEemIe6OhVnSywA" name="m" type="_Gul0YBUTEemIe6OhVnSywA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HKma8BUTEemIe6OhVnSywA" name="initComponents" visibility="private" method="_HKnpEBUTEemIe6OhVnSywA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HKpeQBUTEemIe6OhVnSywA" name="jbSearchActionPerformed" visibility="private" method="_HKr6gBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HKqsYBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HKtIoBUTEemIe6OhVnSywA" name="jbCancelActionPerformed" visibility="private" method="_HKvk4BUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HKuWwBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_HMRO4BUTEemIe6OhVnSywA" name="ImageorDB" visibility="public">
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HMUSMBUTEemIe6OhVnSywA" name="u" visibility="private" type="_EMN-QBUTEemIe6OhVnSywA" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HMhGgBUTEemIe6OhVnSywA" name="buttonGroup1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HMhGgRUTEemIe6OhVnSywA" name="jButton1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HMhtkBUTEemIe6OhVnSywA" name="jLabel1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HMiUoBUTEemIe6OhVnSywA" name="jRadioButtonDB" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HMiUoRUTEemIe6OhVnSywA" name="jRadioButtonImage" visibility="private" isUnique="false"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HMa_4BUTEemIe6OhVnSywA" name="ImageorDB" specification="_HMWHYBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    this.u = u;&#xD;
    initComponents();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HMdcIBUTEemIe6OhVnSywA" name="initComponents" specification="_HMc1EBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    buttonGroup1 = new javax.swing.ButtonGroup();&#xD;
    jLabel1 = new javax.swing.JLabel();&#xD;
    jRadioButtonImage = new javax.swing.JRadioButton();&#xD;
    jRadioButtonDB = new javax.swing.JRadioButton();&#xD;
    jButton1 = new javax.swing.JButton();&#xD;
    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);&#xD;
    setTitle(&quot;GelJ&quot;);&#xD;
    setResizable(false);&#xD;
    jLabel1.setText(&quot;Do you want to work with lanes coming from one image or from several images?&quot;);&#xD;
    buttonGroup1.add(jRadioButtonImage);&#xD;
    jRadioButtonImage.setSelected(true);&#xD;
    jRadioButtonImage.setText(&quot;One Image&quot;);&#xD;
    buttonGroup1.add(jRadioButtonDB);&#xD;
    jRadioButtonDB.setText(&quot;Several Images&quot;);&#xD;
    jButton1.setText(&quot;Ok&quot;);&#xD;
    jButton1.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton1ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());&#xD;
    getContentPane().setLayout(layout);&#xD;
    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGap(35, 35, 35).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jRadioButtonDB).addComponent(jRadioButtonImage)).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addComponent(jButton1))).addContainerGap()));&#xD;
    layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addComponent(jLabel1).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jRadioButtonImage).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jRadioButtonDB).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButton1).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    pack();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HMgfcBUTEemIe6OhVnSywA" name="jButton1ActionPerformed" specification="_HMfRUBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    if (jRadioButtonImage.isSelected()) {&#xD;
        dispose();&#xD;
        ImageJ ij = new ImageJ();&#xD;
        ij.setVisible(false);&#xD;
        Menu m = new Menu();&#xD;
        m.setVisible(false);&#xD;
        m.setUser(u.getId());&#xD;
        Assistant a = new Assistant(m);&#xD;
        a.initAssistant();&#xD;
    } else {&#xD;
        Studies s = new Studies(u.getId());&#xD;
        s.setTitle(&quot;Studies of &quot; + u.getUsername() + &quot; (&quot; + u.getName() + &quot; &quot; + u.getSurname() + &quot;)&quot;);&#xD;
        dispose();&#xD;
        s.setVisible(true);&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HMWHYBUTEemIe6OhVnSywA" name="ImageorDB" visibility="public" method="_HMa_4BUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HMZxwBUTEemIe6OhVnSywA" name="u" type="_EMN-QBUTEemIe6OhVnSywA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HMc1EBUTEemIe6OhVnSywA" name="initComponents" visibility="private" method="_HMdcIBUTEemIe6OhVnSywA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HMfRUBUTEemIe6OhVnSywA" name="jButton1ActionPerformed" visibility="private" method="_HMgfcBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HMf4YBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_HMuh4BUTEemIe6OhVnSywA" name="InfoLane" visibility="public">
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HMvI8RUTEemIe6OhVnSywA" name="m" visibility="private" type="_Gul0YBUTEemIe6OhVnSywA" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HMxlMBUTEemIe6OhVnSywA" name="l" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HM8kURUTEemIe6OhVnSywA" name="lm" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HNTJoBUTEemIe6OhVnSywA" name="jCheckBox1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HNVl4BUTEemIe6OhVnSywA" name="jLabel1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HNXbEBUTEemIe6OhVnSywA" name="jLabel2" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HNZQQBUTEemIe6OhVnSywA" name="jLabel3" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HNbsgBUTEemIe6OhVnSywA" name="jLabel6" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HNdhsBUTEemIe6OhVnSywA" name="jLabel7" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HNf98BUTEemIe6OhVnSywA" name="jbClose" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HNhzIBUTEemIe6OhVnSywA" name="jbOk" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HNiaMBUTEemIe6OhVnSywA" name="jcbCountry" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HNkPYBUTEemIe6OhVnSywA" name="jtfGenus" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HNmroBUTEemIe6OhVnSywA" name="jtfMSLT" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HNog0BUTEemIe6OhVnSywA" name="jtfSpecies" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HNqWABUTEemIe6OhVnSywA" name="jtfStrainNumber" visibility="private" isUnique="false"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HNBc0BUTEemIe6OhVnSywA" name="InfoLane" specification="_HM9LYBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    initComponents();&#xD;
    this.l = l;&#xD;
    this.lm = lm;&#xD;
    setDefaultCloseOperation(DISPOSE_ON_CLOSE);&#xD;
    String[] locales = Locale.getISOCountries();&#xD;
    ArrayList&lt;String> countries = new ArrayList&lt;>();&#xD;
    for (String countryCode : locales) {&#xD;
        Locale obj = new Locale(&quot;&quot;, countryCode);&#xD;
        countries.add(obj.getDisplayCountry());&#xD;
    }&#xD;
    Collections.sort(countries);&#xD;
    jcbCountry.addItem(&quot;&quot;);&#xD;
    for (String country : countries) {&#xD;
        jcbCountry.addItem(country);&#xD;
    }&#xD;
    jtfGenus.setText(l.getGenus());&#xD;
    jtfSpecies.setText(l.getSpecies());&#xD;
    jtfMSLT.setText(l.getMLST());&#xD;
    jtfStrainNumber.setText(&quot;&quot; + l.getStrainNumber());&#xD;
    jcbCountry.setSelectedItem(l.getCountry());&#xD;
    jCheckBox1.setSelected(first);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HNFuQBUTEemIe6OhVnSywA" name="InfoLane" specification="_HNBc0RUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    initComponents();&#xD;
    setDefaultCloseOperation(DISPOSE_ON_CLOSE);&#xD;
    this.m = m;&#xD;
    String[] locales = Locale.getISOCountries();&#xD;
    ArrayList&lt;String> countries = new ArrayList&lt;>();&#xD;
    for (String countryCode : locales) {&#xD;
        Locale obj = new Locale(&quot;&quot;, countryCode);&#xD;
        countries.add(obj.getDisplayCountry());&#xD;
    }&#xD;
    Collections.sort(countries);&#xD;
    jcbCountry.addItem(&quot;&quot;);&#xD;
    for (String country : countries) {&#xD;
        jcbCountry.addItem(country);&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HNG8YBUTEemIe6OhVnSywA" name="initComponents" specification="_HNFuQRUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    jLabel1 = new javax.swing.JLabel();&#xD;
    jbClose = new javax.swing.JButton();&#xD;
    jbOk = new javax.swing.JButton();&#xD;
    jLabel2 = new javax.swing.JLabel();&#xD;
    jLabel3 = new javax.swing.JLabel();&#xD;
    jtfStrainNumber = new javax.swing.JTextField();&#xD;
    jLabel6 = new javax.swing.JLabel();&#xD;
    jcbCountry = new javax.swing.JComboBox();&#xD;
    jLabel7 = new javax.swing.JLabel();&#xD;
    jtfMSLT = new javax.swing.JTextField();&#xD;
    jtfGenus = new javax.swing.JTextField();&#xD;
    jtfSpecies = new javax.swing.JTextField();&#xD;
    jCheckBox1 = new javax.swing.JCheckBox();&#xD;
    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);&#xD;
    setTitle(&quot;Search Lanes&quot;);&#xD;
    setAlwaysOnTop(true);&#xD;
    setModal(true);&#xD;
    setResizable(false);&#xD;
    jLabel1.setText(&quot;Genus:&quot;);&#xD;
    jbClose.setText(&quot;Cancel&quot;);&#xD;
    jbClose.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbCloseActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jbOk.setText(&quot;Ok&quot;);&#xD;
    jbOk.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbOkActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jLabel2.setText(&quot;Species:&quot;);&#xD;
    jLabel3.setText(&quot;Strain Number:&quot;);&#xD;
    jLabel6.setText(&quot;Country:&quot;);&#xD;
    jLabel7.setText(&quot;MLST:&quot;);&#xD;
    jCheckBox1.setText(&quot;Use same genus and species for the other lanes&quot;);&#xD;
    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());&#xD;
    getContentPane().setLayout(layout);&#xD;
    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup().addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jbClose).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jbOk)).addGroup(layout.createSequentialGroup().addGap(17, 17, 17).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addComponent(jLabel1).addComponent(jLabel2).addComponent(jLabel3).addComponent(jLabel6).addComponent(jLabel7)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jCheckBox1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jtfStrainNumber).addComponent(jcbCountry, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jtfMSLT).addComponent(jtfGenus).addComponent(jtfSpecies)))).addContainerGap()));&#xD;
    layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel1).addComponent(jtfGenus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel2).addComponent(jtfSpecies, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel3).addComponent(jtfStrainNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel6).addComponent(jcbCountry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel7).addComponent(jtfMSLT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addGap(4, 4, 4).addComponent(jCheckBox1).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jbClose).addComponent(jbOk)).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    pack();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HNL04BUTEemIe6OhVnSywA" name="jbOkActionPerformed" specification="_HNJYoBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbOkActionPerformed&#xD;
    l.setGenus(jtfGenus.getText());&#xD;
    l.setSpecies(jtfSpecies.getText());&#xD;
    l.setCountry((String) jcbCountry.getSelectedItem());&#xD;
    l.setMLST(jtfMSLT.getText());&#xD;
    String strainnumber = jtfStrainNumber.getText();&#xD;
    l.setStrainNumber(strainnumber);&#xD;
    lm.setChangeall(jCheckBox1.isSelected());&#xD;
    dispose();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HNQGUBUTEemIe6OhVnSywA" name="jbCloseActionPerformed" specification="_HNORIBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbCloseActionPerformed&#xD;
    dispose();&#xD;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HM9LYBUTEemIe6OhVnSywA" name="InfoLane" visibility="public" method="_HNBc0BUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HM_noBUTEemIe6OhVnSywA" name="l"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HNAOsBUTEemIe6OhVnSywA" name="first">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HNA1wBUTEemIe6OhVnSywA" name="lm"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HNBc0RUTEemIe6OhVnSywA" name="InfoLane" visibility="public" method="_HNFuQBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HNFHMBUTEemIe6OhVnSywA" name="m" type="_Gul0YBUTEemIe6OhVnSywA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HNFuQRUTEemIe6OhVnSywA" name="initComponents" visibility="private" method="_HNG8YBUTEemIe6OhVnSywA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HNJYoBUTEemIe6OhVnSywA" name="jbOkActionPerformed" visibility="private" method="_HNL04BUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HNKmwBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HNORIBUTEemIe6OhVnSywA" name="jbCloseActionPerformed" visibility="private" method="_HNQGUBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HNO4MBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_HNtZUBUTEemIe6OhVnSywA" name="NewComparisonWizard">
          <packagedElement xmi:type="uml:Class" xmi:id="_HNv1kBUTEemIe6OhVnSywA" name="NewComparison" visibility="public">
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HNxDsBUTEemIe6OhVnSywA" name="studyid" visibility="private" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HNzf8BUTEemIe6OhVnSywA" name="name" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HN1VIBUTEemIe6OhVnSywA" name="comments" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HN2jQBUTEemIe6OhVnSywA" name="tolerance" visibility="private" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
              <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_HN3xYBUTEemIe6OhVnSywA" name="defaultValue">
                <language>JAVA</language>
                <body>1</body>
              </defaultValue>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HN5mkBUTEemIe6OhVnSywA" name="nonSelectedExperiments" visibility="private" type="_EJs1wBUTEemIe6OhVnSywA" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_HN7bwBUTEemIe6OhVnSywA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HN7bwRUTEemIe6OhVnSywA" value="*"/>
              <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_HN8C0BUTEemIe6OhVnSywA" name="defaultValue">
                <language>JAVA</language>
                <body>new ArrayList&lt;>()</body>
              </defaultValue>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HN9Q8BUTEemIe6OhVnSywA" name="SelectedExperiments" visibility="private" type="_EJs1wBUTEemIe6OhVnSywA" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_HN94ABUTEemIe6OhVnSywA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HN-fEBUTEemIe6OhVnSywA" value="*"/>
              <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_HN-fERUTEemIe6OhVnSywA" name="defaultValue">
                <language>JAVA</language>
                <body>new ArrayList&lt;>()</body>
              </defaultValue>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HN_tMBUTEemIe6OhVnSywA" name="nonSelectedLanes" visibility="private" type="_EHtRsBUTEemIe6OhVnSywA" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_HOAUQBUTEemIe6OhVnSywA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HOAUQRUTEemIe6OhVnSywA" value="*"/>
              <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_HOAUQhUTEemIe6OhVnSywA" name="defaultValue">
                <language>JAVA</language>
                <body>new ArrayList&lt;>()</body>
              </defaultValue>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HOA7UBUTEemIe6OhVnSywA" name="SelectedLanes" visibility="private" type="_EHtRsBUTEemIe6OhVnSywA" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_HOA7URUTEemIe6OhVnSywA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HOA7UhUTEemIe6OhVnSywA" value="*"/>
              <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_HOA7UxUTEemIe6OhVnSywA" name="defaultValue">
                <language>JAVA</language>
                <body>new ArrayList&lt;>()</body>
              </defaultValue>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HOBiYBUTEemIe6OhVnSywA" name="linkage" visibility="private" isUnique="false">
              <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_HOBiYRUTEemIe6OhVnSywA" name="defaultValue">
                <language>JAVA</language>
                <body>&quot;UPGMA&quot;</body>
              </defaultValue>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HOBiYhUTEemIe6OhVnSywA" name="similaritymethod" visibility="private" isUnique="false">
              <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_HOBiYxUTEemIe6OhVnSywA" name="defaultValue">
                <language>JAVA</language>
                <body>&quot;Dice&quot;</body>
              </defaultValue>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HOCJcBUTEemIe6OhVnSywA" name="nonSelectedFields" visibility="private" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_HOCJcRUTEemIe6OhVnSywA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HOCJchUTEemIe6OhVnSywA" value="*"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HOCwgBUTEemIe6OhVnSywA" name="SelectedFields" visibility="private" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_HOFMwBUTEemIe6OhVnSywA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HOFz0BUTEemIe6OhVnSywA" value="*"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HOGa4BUTEemIe6OhVnSywA" name="markers" visibility="private" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_HOHpABUTEemIe6OhVnSywA" name="defaultValue">
                <language>JAVA</language>
                <body>false</body>
              </defaultValue>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HOIQEBUTEemIe6OhVnSywA" name="id" visibility="private" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_HOIQERUTEemIe6OhVnSywA" name="defaultValue">
                <language>JAVA</language>
                <body>-1</body>
              </defaultValue>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HOKFQRUTEemIe6OhVnSywA" name="NewComparison" specification="_HOIQEhUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    this.studyid = studyid;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HOKsUhUTEemIe6OhVnSywA" name="getName" specification="_HOKsUBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    return name;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HOLTYhUTEemIe6OhVnSywA" name="setName" specification="_HOLTYBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    this.name = name;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HOL6cRUTEemIe6OhVnSywA" name="getComments" specification="_HOLTYxUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    return comments;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HOMhgRUTEemIe6OhVnSywA" name="setComments" specification="_HOL6chUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    this.comments = comments;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HONIkhUTEemIe6OhVnSywA" name="getNonSelectedExperiments" specification="_HOMhghUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    return nonSelectedExperiments;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HONvoxUTEemIe6OhVnSywA" name="setNonSelectedExperiments" specification="_HONIkxUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    this.nonSelectedExperiments = nonSelectedExperiments;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HOOWtBUTEemIe6OhVnSywA" name="getSelectedExperiments" specification="_HOOWsBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    return SelectedExperiments;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HOPk0xUTEemIe6OhVnSywA" name="setSelectedExperiments" specification="_HOO9wBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    this.SelectedExperiments = SelectedExperiments;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HOQL4xUTEemIe6OhVnSywA" name="getNonSelectedLanes" specification="_HOPk1BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    return nonSelectedLanes;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HOp0gBUTEemIe6OhVnSywA" name="setNonSelectedLanes" specification="_HOgDgBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    this.nonSelectedLanes = nonSelectedLanes;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HOutABUTEemIe6OhVnSywA" name="getSelectedLanes" specification="_HOrCoBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    return SelectedLanes;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HO1asBUTEemIe6OhVnSywA" name="setSelectedLanes" specification="_HOxJQBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    this.SelectedLanes = SelectedLanes;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HO66QBUTEemIe6OhVnSywA" name="getLinkage" specification="_HO4eABUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    return linkage;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HO_ywBUTEemIe6OhVnSywA" name="setLinkage" specification="_HO9WgBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    this.linkage = linkage;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HPDdIBUTEemIe6OhVnSywA" name="getSimilaritymethod" specification="_HPBn8BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    return similaritymethod;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HPHukBUTEemIe6OhVnSywA" name="setSimilaritymethod" specification="_HPFSUBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    this.similaritymethod = similaritymethod;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HPLY8hUTEemIe6OhVnSywA" name="getNonSelectedFields" specification="_HPJjwBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    return nonSelectedFields;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HPNOIRUTEemIe6OhVnSywA" name="setNonSelectedFields" specification="_HPMAABUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    this.nonSelectedFields = nonSelectedFields;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HPOcQBUTEemIe6OhVnSywA" name="getSelectedFields" specification="_HPNOIhUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    return SelectedFields;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HPPqYBUTEemIe6OhVnSywA" name="setSelectedFields" specification="_HPOcQRUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    this.SelectedFields = SelectedFields;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HPQRcBUTEemIe6OhVnSywA" name="getTolerance" specification="_HPPqYRUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    return tolerance;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HPStsBUTEemIe6OhVnSywA" name="setTolerance" specification="_HPQRcRUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    this.tolerance = tolerance;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HPW_IBUTEemIe6OhVnSywA" name="setId" specification="_HPUi4BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    this.id = id;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HPapgBUTEemIe6OhVnSywA" name="toComparison" specification="_HPYNQBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    if (id == -1) {&#xD;
        id = lastComparisonid();&#xD;
    }&#xD;
    Study s = getStudy(studyid);&#xD;
    java.util.Calendar cal = java.util.Calendar.getInstance();&#xD;
    java.util.Date utilDate = cal.getTime();&#xD;
    Date date = new Date(utilDate.getTime());&#xD;
    Comparison c = new Comparison(id, name, date, similaritymethod, linkage, tolerance, comments, s);&#xD;
    c.setLanes(SelectedLanes);&#xD;
    return c;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HPds0BUTEemIe6OhVnSywA" name="getStudyid" specification="_HPb3oBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    return studyid;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HPhXMBUTEemIe6OhVnSywA" name="setStudyid" specification="_HPfiABUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    this.studyid = studyid;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HPkagBUTEemIe6OhVnSywA" name="isMarkers" specification="_HPjMYBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    return markers;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HPoE4BUTEemIe6OhVnSywA" name="setMarkers" specification="_HPmPsBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    this.markers = markers;&#xD;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HOIQEhUTEemIe6OhVnSywA" name="NewComparison" visibility="public" method="_HOKFQRUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HOKFQBUTEemIe6OhVnSywA" name="studyid">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HOKsUBUTEemIe6OhVnSywA" name="getName" visibility="public" method="_HOKsUhUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HOKsURUTEemIe6OhVnSywA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HOLTYBUTEemIe6OhVnSywA" name="setName" visibility="public" method="_HOLTYhUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HOLTYRUTEemIe6OhVnSywA" name="name"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HOLTYxUTEemIe6OhVnSywA" name="getComments" visibility="public" method="_HOL6cRUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HOL6cBUTEemIe6OhVnSywA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HOL6chUTEemIe6OhVnSywA" name="setComments" visibility="public" method="_HOMhgRUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HOMhgBUTEemIe6OhVnSywA" name="comments"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HOMhghUTEemIe6OhVnSywA" name="getNonSelectedExperiments" visibility="public" method="_HONIkhUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HOMhgxUTEemIe6OhVnSywA" type="_EJs1wBUTEemIe6OhVnSywA" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_HONIkBUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HONIkRUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HONIkxUTEemIe6OhVnSywA" name="setNonSelectedExperiments" visibility="public" method="_HONvoxUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HONvoBUTEemIe6OhVnSywA" name="nonSelectedExperiments" type="_EJs1wBUTEemIe6OhVnSywA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_HONvoRUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HONvohUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HOOWsBUTEemIe6OhVnSywA" name="getSelectedExperiments" visibility="public" method="_HOOWtBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HOOWsRUTEemIe6OhVnSywA" type="_EJs1wBUTEemIe6OhVnSywA" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_HOOWshUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HOOWsxUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HOO9wBUTEemIe6OhVnSywA" name="setSelectedExperiments" visibility="public" method="_HOPk0xUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HOPk0BUTEemIe6OhVnSywA" name="SelectedExperiments" type="_EJs1wBUTEemIe6OhVnSywA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_HOPk0RUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HOPk0hUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HOPk1BUTEemIe6OhVnSywA" name="getNonSelectedLanes" visibility="public" method="_HOQL4xUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HOQL4BUTEemIe6OhVnSywA" type="_EHtRsBUTEemIe6OhVnSywA" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_HOQL4RUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HOQL4hUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HOgDgBUTEemIe6OhVnSywA" name="setNonSelectedLanes" visibility="public" method="_HOp0gBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HOmxMBUTEemIe6OhVnSywA" name="nonSelectedLanes" type="_EHtRsBUTEemIe6OhVnSywA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_HOomYBUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HOpNcBUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HOrCoBUTEemIe6OhVnSywA" name="getSelectedLanes" visibility="public" method="_HOutABUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HOs30BUTEemIe6OhVnSywA" type="_EHtRsBUTEemIe6OhVnSywA" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_HOte4BUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HOuF8BUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HOxJQBUTEemIe6OhVnSywA" name="setSelectedLanes" visibility="public" method="_HO1asBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HOy-cBUTEemIe6OhVnSywA" name="SelectedLanes" type="_EHtRsBUTEemIe6OhVnSywA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_HO0MkBUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HO0zoBUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HO4eABUTEemIe6OhVnSywA" name="getLinkage" visibility="public" method="_HO66QBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HO6TMBUTEemIe6OhVnSywA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HO9WgBUTEemIe6OhVnSywA" name="setLinkage" visibility="public" method="_HO_ywBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HO-koBUTEemIe6OhVnSywA" name="linkage"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HPBn8BUTEemIe6OhVnSywA" name="getSimilaritymethod" visibility="public" method="_HPDdIBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HPC2EBUTEemIe6OhVnSywA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HPFSUBUTEemIe6OhVnSywA" name="setSimilaritymethod" visibility="public" method="_HPHukBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HPHHgBUTEemIe6OhVnSywA" name="similaritymethod"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HPJjwBUTEemIe6OhVnSywA" name="getNonSelectedFields" visibility="public" method="_HPLY8hUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HPKx4BUTEemIe6OhVnSywA" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_HPLY8BUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HPLY8RUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HPMAABUTEemIe6OhVnSywA" name="setNonSelectedFields" visibility="public" method="_HPNOIRUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HPMnEBUTEemIe6OhVnSywA" name="nonSelectedFields">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_HPMnERUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HPNOIBUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HPNOIhUTEemIe6OhVnSywA" name="getSelectedFields" visibility="public" method="_HPOcQBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HPN1MBUTEemIe6OhVnSywA" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_HPN1MRUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HPN1MhUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HPOcQRUTEemIe6OhVnSywA" name="setSelectedFields" visibility="public" method="_HPPqYBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HPPDUBUTEemIe6OhVnSywA" name="SelectedFields">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_HPPDURUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HPPDUhUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HPPqYRUTEemIe6OhVnSywA" name="getTolerance" visibility="public" method="_HPQRcBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HPPqYhUTEemIe6OhVnSywA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HPQRcRUTEemIe6OhVnSywA" name="setTolerance" visibility="public" method="_HPStsBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HPRfkBUTEemIe6OhVnSywA" name="tolerance">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HPUi4BUTEemIe6OhVnSywA" name="setId" visibility="public" method="_HPW_IBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HPVxABUTEemIe6OhVnSywA" name="id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HPYNQBUTEemIe6OhVnSywA" name="toComparison" visibility="public" method="_HPapgBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HPZbYBUTEemIe6OhVnSywA" type="_EHPXoBUTEemIe6OhVnSywA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HPb3oBUTEemIe6OhVnSywA" name="getStudyid" visibility="public" method="_HPds0BUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HPdFwBUTEemIe6OhVnSywA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HPfiABUTEemIe6OhVnSywA" name="setStudyid" visibility="public" method="_HPhXMBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HPgJEBUTEemIe6OhVnSywA" name="studyid">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HPjMYBUTEemIe6OhVnSywA" name="isMarkers" visibility="public" method="_HPkagBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HPjzcBUTEemIe6OhVnSywA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HPmPsBUTEemIe6OhVnSywA" name="setMarkers" visibility="public" method="_HPoE4BUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HPm2wBUTEemIe6OhVnSywA" name="markers">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_HPzEABUTEemIe6OhVnSywA" name="Step3" visibility="public">
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HP4jkBUTEemIe6OhVnSywA" name="nc" visibility="private" type="_HNv1kBUTEemIe6OhVnSywA" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HP6_0BUTEemIe6OhVnSywA" name="templanes" visibility="private" type="_EHtRsBUTEemIe6OhVnSywA" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_HP8N8BUTEemIe6OhVnSywA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HP81ABUTEemIe6OhVnSywA" value="*"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HP9cEBUTEemIe6OhVnSywA" name="edit" visibility="private" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HP_RQBUTEemIe6OhVnSywA" name="combination" visibility="private" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_HQAfYBUTEemIe6OhVnSywA" name="defaultValue">
                <language>JAVA</language>
                <body>false</body>
              </defaultValue>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HQCUkBUTEemIe6OhVnSywA" name="lanesExperiment" visibility="private" isUnique="false">
              <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_HQDisBUTEemIe6OhVnSywA" name="defaultValue">
                <language>JAVA</language>
                <body>new Hashtable&lt;Integer, ArrayList&lt;LaneDB>>()</body>
              </defaultValue>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HQtC8BUTEemIe6OhVnSywA" name="jCheckBox1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HQtC8RUTEemIe6OhVnSywA" name="jLabel1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HQtqABUTEemIe6OhVnSywA" name="jLabel4" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HQuREBUTEemIe6OhVnSywA" name="jLabel5" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HQwtUBUTEemIe6OhVnSywA" name="jLabel6" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HQyigBUTEemIe6OhVnSywA" name="jLabel7" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HQyigRUTEemIe6OhVnSywA" name="jLabel8" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HQzJkBUTEemIe6OhVnSywA" name="jPanel1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HQ0-wBUTEemIe6OhVnSywA" name="jPanel2" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HQ0-wRUTEemIe6OhVnSywA" name="jScrollPane4" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HQ1l0BUTEemIe6OhVnSywA" name="jSeparator1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HQ1l0RUTEemIe6OhVnSywA" name="jSeparator2" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HQ4CEBUTEemIe6OhVnSywA" name="jSeparator3" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HQ53QBUTEemIe6OhVnSywA" name="jbBack" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HQ7scBUTEemIe6OhVnSywA" name="jbDeselect" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HQ-IsBUTEemIe6OhVnSywA" name="jbNext" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HRAk8BUTEemIe6OhVnSywA" name="jbSelectAll" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HRCaIBUTEemIe6OhVnSywA" name="jtLanes" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HRDoQBUTEemIe6OhVnSywA" name="jxsearchlane" visibility="private" isUnique="false"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HQJpUBUTEemIe6OhVnSywA" name="Step3" specification="_HQEJwBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    initComponents();&#xD;
    this.nc = nc;&#xD;
    this.edit = edit;&#xD;
    templanes = nc.getNonSelectedLanes();&#xD;
    updatelanes(templanes);&#xD;
    this.setModal(true);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HQPI4BUTEemIe6OhVnSywA" name="updatelanes" specification="_HQLegBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    String[] names = { &quot;Selected&quot;, &quot;Genus&quot;, &quot;Species&quot;, &quot;Strain Number&quot;, &quot;Country&quot;, &quot;MLST&quot;, &quot;isMarker&quot;, &quot;Experiment&quot;, &quot;Comments&quot; };&#xD;
    Object[][] data = new Object[newlanes.size()][names.length];&#xD;
    // We update the table&#xD;
    for (int i = 0; i &lt; newlanes.size(); i++) {&#xD;
        data[i][0] = nc.getSelectedLanes().contains(newlanes.get(i));&#xD;
        data[i][1] = newlanes.get(i).getGenus();&#xD;
        data[i][2] = newlanes.get(i).getSpecies();&#xD;
        data[i][3] = newlanes.get(i).getStrainNumber();&#xD;
        data[i][4] = newlanes.get(i).getCountry();&#xD;
        data[i][5] = newlanes.get(i).getMSLT();&#xD;
        data[i][6] = newlanes.get(i).isIsMarker();&#xD;
        data[i][7] = newlanes.get(i).getExperiment().getName();&#xD;
        data[i][8] = newlanes.get(i).getComments();&#xD;
    }&#xD;
    // Operations to change the model, we disable the edition of the date&#xD;
    DefaultTableModel model = new DefaultTableModel(data, names) {&#xD;
&#xD;
        public boolean isCellEditable(int rowIndex, int mColIndex) {&#xD;
            if (mColIndex == 0) {&#xD;
                return true;&#xD;
            } else {&#xD;
                return false;&#xD;
            }&#xD;
        }&#xD;
&#xD;
        public Class getColumnClass(int columnIndex) {&#xD;
            if (columnIndex == 0) {&#xD;
                return java.lang.Boolean.class;&#xD;
            } else {&#xD;
                return java.lang.Object.class;&#xD;
            }&#xD;
        }&#xD;
    };&#xD;
    model.addTableModelListener(this);&#xD;
    jtLanes.setModel(model);&#xD;
    getRootPane().setDefaultButton(jbNext);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HQSzQBUTEemIe6OhVnSywA" name="initComponents" specification="_HQQ-EBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    jPanel1 = new javax.swing.JPanel();&#xD;
    jLabel1 = new javax.swing.JLabel();&#xD;
    jSeparator1 = new javax.swing.JSeparator();&#xD;
    jLabel4 = new javax.swing.JLabel();&#xD;
    jLabel5 = new javax.swing.JLabel();&#xD;
    jLabel8 = new javax.swing.JLabel();&#xD;
    jLabel7 = new javax.swing.JLabel();&#xD;
    jbNext = new javax.swing.JButton();&#xD;
    jbBack = new javax.swing.JButton();&#xD;
    jPanel2 = new javax.swing.JPanel();&#xD;
    jLabel6 = new javax.swing.JLabel();&#xD;
    jSeparator3 = new javax.swing.JSeparator();&#xD;
    jxsearchlane = new org.jdesktop.swingx.JXSearchField();&#xD;
    jScrollPane4 = new javax.swing.JScrollPane();&#xD;
    jtLanes = new javax.swing.JTable();&#xD;
    jbDeselect = new javax.swing.JButton();&#xD;
    jbSelectAll = new javax.swing.JButton();&#xD;
    jCheckBox1 = new javax.swing.JCheckBox();&#xD;
    jSeparator2 = new javax.swing.JSeparator();&#xD;
    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);&#xD;
    setTitle(&quot;Comparison&quot;);&#xD;
    setResizable(false);&#xD;
    jPanel1.setBackground(new java.awt.Color(254, 254, 254));&#xD;
    jLabel1.setText(&quot;Steps&quot;);&#xD;
    jSeparator1.setBackground(new java.awt.Color(2, 2, 2));&#xD;
    jSeparator1.setForeground(new java.awt.Color(1, 1, 1));&#xD;
    // NOI18N&#xD;
    jLabel4.setFont(new java.awt.Font(&quot;Ubuntu&quot;, 1, 15));&#xD;
    jLabel4.setForeground(new java.awt.Color(0, 12, 255));&#xD;
    jLabel4.setText(&quot;3. Select Lanes&quot;);&#xD;
    jLabel5.setForeground(new java.awt.Color(1, 1, 1));&#xD;
    jLabel5.setText(&quot;4. Dendrogram Properties&quot;);&#xD;
    jLabel8.setForeground(new java.awt.Color(4, 2, 2));&#xD;
    jLabel8.setText(&quot;1. General Properties&quot;);&#xD;
    jLabel7.setForeground(new java.awt.Color(1, 1, 1));&#xD;
    jLabel7.setText(&quot;2. Select Experiments&quot;);&#xD;
    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);&#xD;
    jPanel1.setLayout(jPanel1Layout);&#xD;
    jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel1Layout.createSequentialGroup().addContainerGap().addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jSeparator1).addGroup(jPanel1Layout.createSequentialGroup().addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel1).addComponent(jLabel4).addComponent(jLabel5).addComponent(jLabel8).addComponent(jLabel7)).addGap(0, 0, Short.MAX_VALUE))).addContainerGap()));&#xD;
    jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel1Layout.createSequentialGroup().addContainerGap().addComponent(jLabel1).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addGap(7, 7, 7).addComponent(jLabel8).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel7).addGap(7, 7, 7).addComponent(jLabel4).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel5).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jbNext.setText(&quot;Next >&quot;);&#xD;
    jbNext.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbNextActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jbBack.setText(&quot;&lt; Back&quot;);&#xD;
    jbBack.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbBackActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jLabel6.setText(&quot;Step 3. Select Lanes&quot;);&#xD;
    jxsearchlane.setBackground(new java.awt.Color(254, 254, 254));&#xD;
    jxsearchlane.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jxsearchlaneActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jxsearchlane.addKeyListener(new java.awt.event.KeyAdapter() {&#xD;
&#xD;
        public void keyReleased(java.awt.event.KeyEvent evt) {&#xD;
            jxsearchlaneKeyReleased(evt);&#xD;
        }&#xD;
    });&#xD;
    jtLanes.setModel(new javax.swing.table.DefaultTableModel(new Object[][] { { null, null, null, null }, { null, null, null, null }, { null, null, null, null }, { null, null, null, null } }, new String[] { &quot;Title 1&quot;, &quot;Title 2&quot;, &quot;Title 3&quot;, &quot;Title 4&quot; }));&#xD;
    jScrollPane4.setViewportView(jtLanes);&#xD;
    jbDeselect.setText(&quot;Deselect All&quot;);&#xD;
    jbDeselect.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbDeselectActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jbSelectAll.setText(&quot;Select All&quot;);&#xD;
    jbSelectAll.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbSelectAllActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jCheckBox1.setText(&quot;Check this box if you want to combine the information from the lanes with the same strain number&quot;);&#xD;
    jCheckBox1.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jCheckBox1ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);&#xD;
    jPanel2.setLayout(jPanel2Layout);&#xD;
    jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jSeparator3).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addComponent(jxsearchlane, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(jPanel2Layout.createSequentialGroup().addComponent(jLabel6).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)).addGroup(jPanel2Layout.createSequentialGroup().addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addComponent(jCheckBox1).addGroup(jPanel2Layout.createSequentialGroup().addComponent(jbSelectAll).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jbDeselect)).addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 673, javax.swing.GroupLayout.PREFERRED_SIZE)).addGap(0, 0, Short.MAX_VALUE)));&#xD;
    jPanel2Layout.setVerticalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel2Layout.createSequentialGroup().addContainerGap().addComponent(jLabel6).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jxsearchlane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 403, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jbDeselect).addComponent(jbSelectAll)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jCheckBox1).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());&#xD;
    getContentPane().setLayout(layout);&#xD;
    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addGap(0, 0, Short.MAX_VALUE)).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addComponent(jbBack).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jbNext)).addComponent(jSeparator2)))).addContainerGap()));&#xD;
    layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(layout.createSequentialGroup().addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addGap(0, 0, Short.MAX_VALUE))).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 4, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jbBack).addComponent(jbNext)).addContainerGap()));&#xD;
    pack();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HQWdoBUTEemIe6OhVnSywA" name="jbNextActionPerformed" specification="_HQVPgBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    if (nc.getSelectedLanes().isEmpty()) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;Select at least a lane&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
    } else if (combination) {&#xD;
        if (allStrainNumbersWithSameLanes(nc.getSelectedLanes())) {&#xD;
            JOptionPane.showMessageDialog(this, &quot;Using the combination option, all the strains must have\n associated the same number of lanes.&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
        } else {&#xD;
            dispose();&#xD;
            Step4 step4 = new Step4(nc, edit, combination, lanesExperiment);&#xD;
            step4.setVisible(true);&#xD;
        }&#xD;
    } else {&#xD;
        dispose();&#xD;
        Step4 step4 = new Step4(nc, edit, combination, lanesExperiment);&#xD;
        step4.setVisible(true);&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HQdLUBUTEemIe6OhVnSywA" name="allStrainNumbersWithSameLanes" specification="_HQXrwBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Hashtable&lt;String, Integer> occurrences = new Hashtable&lt;String, Integer>();&#xD;
    ArrayList&lt;String> strains = new ArrayList&lt;String>();&#xD;
    ArrayList&lt;Integer> experiments = new ArrayList&lt;Integer>();&#xD;
    String strainnumber;&#xD;
    Experiment experiment;&#xD;
    for (int i = 0; i &lt; lanes.size(); i++) {&#xD;
        LaneDB lane = lanes.get(i);&#xD;
        strainnumber = lane.getStrainNumber();&#xD;
        experiment = lane.getExperiment();&#xD;
        ArrayList&lt;LaneDB> newlanes;&#xD;
        if (experiments.contains(experiment.getId())) {&#xD;
            newlanes = lanesExperiment.get(experiment.getId());&#xD;
            newlanes.add(lane);&#xD;
            lanesExperiment.replace(experiment.getId(), newlanes);&#xD;
        } else {&#xD;
            newlanes = new ArrayList&lt;LaneDB>();&#xD;
            experiments.add(experiment.getId());&#xD;
            newlanes.add(lane);&#xD;
            lanesExperiment.put(experiment.getId(), newlanes);&#xD;
        }&#xD;
        if (strains.contains(strainnumber)) {&#xD;
            occurrences.replace(strainnumber, occurrences.get(strainnumber) + 1);&#xD;
        } else {&#xD;
            strains.add(strainnumber);&#xD;
            occurrences.put(strainnumber, 1);&#xD;
        }&#xD;
    }&#xD;
    int n = occurrences.get(strains.get(0));&#xD;
    for (int i = 1; i &lt; strains.size(); i++) {&#xD;
        if (occurrences.get(strains.get(i)) != n) {&#xD;
            return false;&#xD;
        }&#xD;
    }&#xD;
    ArrayList&lt;LaneDB> newlanes = lanesExperiment.get(experiments.get(0));&#xD;
    for (int i = 1; i &lt; experiments.size(); i++) {&#xD;
        for (int j = 0; j &lt; newlanes.size(); j++) {&#xD;
            if (!lanesExperiment.get(experiments.get(i)).contains(newlanes.get(j))) {&#xD;
                return false;&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    return true;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HQiD0BUTEemIe6OhVnSywA" name="jbBackActionPerformed" specification="_HQgOoBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbBackActionPerformed&#xD;
    dispose();&#xD;
    Step2 step2 = new Step2(nc, edit);&#xD;
    step2.setVisible(true);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HQnjYBUTEemIe6OhVnSywA" name="jxsearchlaneKeyReleased" specification="_HQkgEBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jxsearchlaneKeyReleased&#xD;
    String s = jxsearchlane.getText();&#xD;
    ArrayList&lt;LaneDB> newlanes = searchlanesstring(nc.getNonSelectedLanes(), s);&#xD;
    templanes = newlanes;&#xD;
    updatelanes(newlanes);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HQqmsRUTEemIe6OhVnSywA" name="jxsearchlaneActionPerformed" specification="_HQpYkBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jxsearchlaneActionPerformed&#xD;
    String s = jxsearchlane.getText();&#xD;
    ArrayList&lt;LaneDB> newlanes = searchlanesstring(nc.getNonSelectedLanes(), s);&#xD;
    templanes = newlanes;&#xD;
    updatelanes(newlanes);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HQrNwRUTEemIe6OhVnSywA" name="jbSelectAllActionPerformed" specification="_HQqmshUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbSelectAllActionPerformed&#xD;
    nc.getSelectedLanes().clear();&#xD;
    for (int i = 0; i &lt; jtLanes.getModel().getRowCount(); i++) {&#xD;
        jtLanes.setValueAt(true, i, 0);&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HQr00hUTEemIe6OhVnSywA" name="jbDeselectActionPerformed" specification="_HQr00BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbDeselectActionPerformed&#xD;
    nc.getSelectedLanes().clear();&#xD;
    for (int i = 0; i &lt; jtLanes.getModel().getRowCount(); i++) {&#xD;
        jtLanes.setValueAt(false, i, 0);&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HQsb4hUTEemIe6OhVnSywA" name="jCheckBox1ActionPerformed" specification="_HQsb4BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jCheckBox1ActionPerformed&#xD;
    combination = jCheckBox1.isSelected();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HRH5sBUTEemIe6OhVnSywA" name="tableChanged" specification="_HRFdcBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    int row = e.getFirstRow();&#xD;
    int column = e.getColumn();&#xD;
    Object cellValue = jtLanes.getValueAt(row, column);&#xD;
    if ((boolean) cellValue) {&#xD;
        nc.getSelectedLanes().add(templanes.get(row));&#xD;
    } else {&#xD;
        nc.getSelectedLanes().remove(templanes.get(row));&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HQEJwBUTEemIe6OhVnSywA" name="Step3" visibility="public" method="_HQJpUBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HQHNEBUTEemIe6OhVnSywA" name="nc" type="_HNv1kBUTEemIe6OhVnSywA"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HQIbMBUTEemIe6OhVnSywA" name="edit">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HQLegBUTEemIe6OhVnSywA" name="updatelanes" visibility="public" method="_HQPI4BUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HQNTsBUTEemIe6OhVnSywA" name="newlanes" type="_EHtRsBUTEemIe6OhVnSywA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_HQN6wBUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HQOh0BUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HQQ-EBUTEemIe6OhVnSywA" name="initComponents" visibility="private" method="_HQSzQBUTEemIe6OhVnSywA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HQVPgBUTEemIe6OhVnSywA" name="jbNextActionPerformed" visibility="private" method="_HQWdoBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HQV2kBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HQXrwBUTEemIe6OhVnSywA" name="allStrainNumbersWithSameLanes" visibility="private" method="_HQdLUBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HQY54BUTEemIe6OhVnSywA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HQavEBUTEemIe6OhVnSywA" name="lanes" type="_EHtRsBUTEemIe6OhVnSywA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_HQb9MBUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HQckQBUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HQgOoBUTEemIe6OhVnSywA" name="jbBackActionPerformed" visibility="private" method="_HQiD0BUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HQhcwBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HQkgEBUTEemIe6OhVnSywA" name="jxsearchlaneKeyReleased" visibility="private" method="_HQnjYBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HQluMBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HQpYkBUTEemIe6OhVnSywA" name="jxsearchlaneActionPerformed" visibility="private" method="_HQqmsRUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HQqmsBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HQqmshUTEemIe6OhVnSywA" name="jbSelectAllActionPerformed" visibility="private" method="_HQrNwRUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HQrNwBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HQr00BUTEemIe6OhVnSywA" name="jbDeselectActionPerformed" visibility="private" method="_HQr00hUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HQr00RUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HQsb4BUTEemIe6OhVnSywA" name="jCheckBox1ActionPerformed" visibility="private" method="_HQsb4hUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HQsb4RUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HRFdcBUTEemIe6OhVnSywA" name="tableChanged" visibility="public" method="_HRH5sBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HRGrkBUTEemIe6OhVnSywA" name="e"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_HRcp0BUTEemIe6OhVnSywA" name="Step4" visibility="public">
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HRg7QBUTEemIe6OhVnSywA" name="nc" visibility="private" type="_HNv1kBUTEemIe6OhVnSywA" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HRma0BUTEemIe6OhVnSywA" name="edit" visibility="private" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HRoQABUTEemIe6OhVnSywA" name="combination" visibility="private" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HRqsQBUTEemIe6OhVnSywA" name="lanesExperiment" visibility="private" isUnique="false">
              <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_HRqsQRUTEemIe6OhVnSywA" name="defaultValue">
                <language>JAVA</language>
                <body>new Hashtable&lt;Integer, ArrayList&lt;LaneDB>>()</body>
              </defaultValue>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HR9AIBUTEemIe6OhVnSywA" name="jCheckBox1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HR9nMBUTEemIe6OhVnSywA" name="jLabel1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HR9nMRUTEemIe6OhVnSywA" name="jLabel10" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HR-OQBUTEemIe6OhVnSywA" name="jLabel11" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HR-OQRUTEemIe6OhVnSywA" name="jLabel12" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HR-1UBUTEemIe6OhVnSywA" name="jLabel2" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HR-1URUTEemIe6OhVnSywA" name="jLabel3" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HR_cYBUTEemIe6OhVnSywA" name="jLabel4" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HSBRkBUTEemIe6OhVnSywA" name="jLabel5" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HSDt0BUTEemIe6OhVnSywA" name="jLabel6" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HSFjABUTEemIe6OhVnSywA" name="jLabel7" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HSHYMBUTEemIe6OhVnSywA" name="jLabel8" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HSJNYBUTEemIe6OhVnSywA" name="jLabel9" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HSLpoBUTEemIe6OhVnSywA" name="jPanel1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HSLpoRUTEemIe6OhVnSywA" name="jPanel2" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HSMQsBUTEemIe6OhVnSywA" name="jScrollPane1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HSMQsRUTEemIe6OhVnSywA" name="jScrollPane2" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HSM3wBUTEemIe6OhVnSywA" name="jSeparator1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HSM3wRUTEemIe6OhVnSywA" name="jSeparator2" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HSM3whUTEemIe6OhVnSywA" name="jSeparator3" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HSNe0BUTEemIe6OhVnSywA" name="jbAddField" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HSNe0RUTEemIe6OhVnSywA" name="jbBack" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HSNe0hUTEemIe6OhVnSywA" name="jbDeleteField" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HSOF4BUTEemIe6OhVnSywA" name="jbFinish" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HSOF4RUTEemIe6OhVnSywA" name="jcbLinkage" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HSOs8BUTEemIe6OhVnSywA" name="jcbOutput" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HSOs8RUTEemIe6OhVnSywA" name="jcbSimilarity" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HSOs8hUTEemIe6OhVnSywA" name="jcbinvert" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HSPUABUTEemIe6OhVnSywA" name="jlAvailable1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HSPUARUTEemIe6OhVnSywA" name="jlSelected" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HSPUAhUTEemIe6OhVnSywA" name="jtfTolerance" visibility="private" isUnique="false"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HRuWoBUTEemIe6OhVnSywA" name="Step4" specification="_HRqsQhUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    initComponents();&#xD;
    this.nc = nc;&#xD;
    this.edit = edit;&#xD;
    this.combination = combination;&#xD;
    this.lanesExperiment = lanesExperiment;&#xD;
    String similarity = nc.getSimilaritymethod();&#xD;
    String linkage = nc.getLinkage();&#xD;
    double tolerance = nc.getTolerance();&#xD;
    ArrayList&lt;String> availablefields = nc.getNonSelectedFields();&#xD;
    ArrayList&lt;String> selectedfields = nc.getSelectedFields();&#xD;
    if (similarity != null) {&#xD;
        jcbSimilarity.setSelectedItem(similarity);&#xD;
    }&#xD;
    if (linkage != null) {&#xD;
        jcbLinkage.setSelectedItem(linkage);&#xD;
    }&#xD;
    jtfTolerance.setText(&quot;&quot; + tolerance);&#xD;
    DefaultListModel dmAvailable = new DefaultListModel();&#xD;
    if (availablefields != null &amp;&amp; !combination) {&#xD;
        for (String s : availablefields) {&#xD;
            dmAvailable.addElement(s);&#xD;
        }&#xD;
    }&#xD;
    DefaultListModel dmSelected = new DefaultListModel();&#xD;
    if (selectedfields != null) {&#xD;
        for (String s : selectedfields) {&#xD;
            dmSelected.addElement(s);&#xD;
        }&#xD;
    }&#xD;
    jlAvailable1.setModel(dmAvailable);&#xD;
    jlAvailable1.addListSelectionListener(new AvailableListSelectionHandler());&#xD;
    jlSelected.setModel(dmSelected);&#xD;
    jlSelected.addListSelectionListener(new SelectedListSelectionHandler());&#xD;
    this.setModal(true);&#xD;
    getRootPane().setDefaultButton(jbFinish);&#xD;
    if (combination) {&#xD;
        jcbOutput.setModel(new javax.swing.DefaultComboBoxModel(new String[] { &quot;Dendrogram&quot; }));&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HRu9sBUTEemIe6OhVnSywA" name="initComponents" specification="_HRuWoRUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    jPanel1 = new javax.swing.JPanel();&#xD;
    jLabel1 = new javax.swing.JLabel();&#xD;
    jSeparator1 = new javax.swing.JSeparator();&#xD;
    jLabel3 = new javax.swing.JLabel();&#xD;
    jLabel4 = new javax.swing.JLabel();&#xD;
    jLabel5 = new javax.swing.JLabel();&#xD;
    jLabel12 = new javax.swing.JLabel();&#xD;
    jbFinish = new javax.swing.JButton();&#xD;
    jbBack = new javax.swing.JButton();&#xD;
    jPanel2 = new javax.swing.JPanel();&#xD;
    jLabel6 = new javax.swing.JLabel();&#xD;
    jSeparator3 = new javax.swing.JSeparator();&#xD;
    jLabel7 = new javax.swing.JLabel();&#xD;
    jcbSimilarity = new javax.swing.JComboBox();&#xD;
    jLabel8 = new javax.swing.JLabel();&#xD;
    jcbLinkage = new javax.swing.JComboBox();&#xD;
    jLabel9 = new javax.swing.JLabel();&#xD;
    jtfTolerance = new javax.swing.JTextField();&#xD;
    jLabel10 = new javax.swing.JLabel();&#xD;
    jScrollPane1 = new javax.swing.JScrollPane();&#xD;
    jlSelected = new javax.swing.JList();&#xD;
    jLabel11 = new javax.swing.JLabel();&#xD;
    jScrollPane2 = new javax.swing.JScrollPane();&#xD;
    jlAvailable1 = new javax.swing.JList();&#xD;
    jbAddField = new javax.swing.JButton();&#xD;
    jbDeleteField = new javax.swing.JButton();&#xD;
    jLabel2 = new javax.swing.JLabel();&#xD;
    jcbOutput = new javax.swing.JComboBox();&#xD;
    jcbinvert = new javax.swing.JCheckBox();&#xD;
    jCheckBox1 = new javax.swing.JCheckBox();&#xD;
    jSeparator2 = new javax.swing.JSeparator();&#xD;
    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);&#xD;
    setTitle(&quot;Comparison&quot;);&#xD;
    setResizable(false);&#xD;
    jPanel1.setBackground(new java.awt.Color(254, 254, 254));&#xD;
    jLabel1.setText(&quot;Steps&quot;);&#xD;
    jSeparator1.setBackground(new java.awt.Color(2, 2, 2));&#xD;
    jSeparator1.setForeground(new java.awt.Color(1, 1, 1));&#xD;
    jLabel3.setForeground(new java.awt.Color(1, 1, 1));&#xD;
    jLabel3.setText(&quot;2. Select Experiments&quot;);&#xD;
    jLabel4.setForeground(new java.awt.Color(4, 2, 2));&#xD;
    jLabel4.setText(&quot;3. Select Lanes&quot;);&#xD;
    // NOI18N&#xD;
    jLabel5.setFont(new java.awt.Font(&quot;Ubuntu&quot;, 1, 15));&#xD;
    jLabel5.setForeground(new java.awt.Color(0, 12, 255));&#xD;
    jLabel5.setText(&quot;4. Dendrogram Properties&quot;);&#xD;
    jLabel12.setForeground(new java.awt.Color(1, 1, 1));&#xD;
    jLabel12.setText(&quot;1. General Properties&quot;);&#xD;
    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);&#xD;
    jPanel1.setLayout(jPanel1Layout);&#xD;
    jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel1Layout.createSequentialGroup().addContainerGap().addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jSeparator1).addGroup(jPanel1Layout.createSequentialGroup().addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel1).addComponent(jLabel3).addComponent(jLabel4).addComponent(jLabel5).addComponent(jLabel12)).addGap(0, 0, Short.MAX_VALUE))).addContainerGap()));&#xD;
    jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel1Layout.createSequentialGroup().addContainerGap().addComponent(jLabel1).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addGap(7, 7, 7).addComponent(jLabel12).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel3).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel4).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel5).addContainerGap(300, Short.MAX_VALUE)));&#xD;
    jbFinish.setText(&quot;Finish&quot;);&#xD;
    jbFinish.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbFinishActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jbBack.setText(&quot;&lt; Back&quot;);&#xD;
    jbBack.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbBackActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jLabel6.setText(&quot;Step 4. Dendrogram Properties&quot;);&#xD;
    jLabel7.setText(&quot;Similarity Method:&quot;);&#xD;
    jcbSimilarity.setModel(new javax.swing.DefaultComboBoxModel(new String[] { &quot;Dice&quot;, &quot;Jaccard&quot;, &quot;Band difference&quot;, &quot;Jeffrey's X&quot;, &quot;Ochiai&quot;, &quot;Pearson correlation&quot;, &quot;Cosine coefficient&quot;, &quot;Euclidean distance&quot;, &quot;Manhattan distance&quot; }));&#xD;
    jcbSimilarity.addItemListener(new java.awt.event.ItemListener() {&#xD;
&#xD;
        public void itemStateChanged(java.awt.event.ItemEvent evt) {&#xD;
            jcbSimilarityItemStateChanged(evt);&#xD;
        }&#xD;
    });&#xD;
    jLabel8.setText(&quot;Linkage:&quot;);&#xD;
    jcbLinkage.setModel(new javax.swing.DefaultComboBoxModel(new String[] { &quot;UPGMA&quot;, &quot;UPGMC&quot;, &quot;Single linkage&quot;, &quot;Complete linkage&quot;, &quot;Mean linkage&quot;, &quot;Ward&quot; }));&#xD;
    jLabel9.setText(&quot;Tolerance:&quot;);&#xD;
    jtfTolerance.setText(&quot;1.0&quot;);&#xD;
    jLabel10.setText(&quot;Available Fields&quot;);&#xD;
    jScrollPane1.setViewportView(jlSelected);&#xD;
    jLabel11.setText(&quot;Selected Fields&quot;);&#xD;
    jScrollPane2.setViewportView(jlAvailable1);&#xD;
    jbAddField.setText(&quot;    >>>    &quot;);&#xD;
    jbAddField.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbAddFieldActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jbDeleteField.setText(&quot;    &lt;&lt;&lt;    &quot;);&#xD;
    jbDeleteField.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbDeleteFieldActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jLabel2.setText(&quot;Output:&quot;);&#xD;
    jcbOutput.setModel(new javax.swing.DefaultComboBoxModel(new String[] { &quot;Dendrogram + Images + Bands&quot;, &quot;Dendrogram + Images&quot;, &quot;Dendrogram + Bands&quot;, &quot;Dendrogram&quot; }));&#xD;
    jcbinvert.setText(&quot;Invert colours of the image&quot;);&#xD;
    jCheckBox1.setText(&quot;Generate similarity table&quot;);&#xD;
    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);&#xD;
    jPanel2.setLayout(jPanel2Layout);&#xD;
    jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel2Layout.createSequentialGroup().addComponent(jLabel6).addGap(0, 0, Short.MAX_VALUE)).addComponent(jSeparator3).addGroup(jPanel2Layout.createSequentialGroup().addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel2Layout.createSequentialGroup().addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel2Layout.createSequentialGroup().addGap(31, 31, 31).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addComponent(jLabel9).addComponent(jLabel8).addComponent(jLabel7).addComponent(jLabel2).addGroup(jPanel2Layout.createSequentialGroup().addComponent(jLabel10).addGap(12, 12, 12)))).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup().addContainerGap().addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))).addGap(18, 18, 18).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel2Layout.createSequentialGroup().addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jbAddField, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jbDeleteField, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup().addComponent(jLabel11).addGap(3, 3, 3)).addComponent(jCheckBox1, javax.swing.GroupLayout.Alignment.TRAILING).addComponent(jcbSimilarity, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jcbLinkage, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jtfTolerance, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jcbOutput, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))))).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup().addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jcbinvert))).addContainerGap()));&#xD;
    jPanel2Layout.setVerticalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel2Layout.createSequentialGroup().addContainerGap().addComponent(jLabel6).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel7).addComponent(jcbSimilarity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jcbLinkage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel8)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel9).addComponent(jtfTolerance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jcbOutput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel2)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jcbinvert).addGap(22, 22, 22).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel2Layout.createSequentialGroup().addComponent(jLabel10).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jScrollPane2).addGap(37, 37, 37)).addGroup(jPanel2Layout.createSequentialGroup().addComponent(jLabel11).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel2Layout.createSequentialGroup().addGap(20, 20, 20).addComponent(jbAddField).addGap(27, 27, 27).addComponent(jbDeleteField).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)).addGroup(jPanel2Layout.createSequentialGroup().addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jScrollPane1).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))).addComponent(jCheckBox1).addGap(7, 7, 7)))));&#xD;
    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());&#xD;
    getContentPane().setLayout(layout);&#xD;
    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addGroup(layout.createSequentialGroup().addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(layout.createSequentialGroup().addComponent(jbBack).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jbFinish))).addGap(0, 0, Short.MAX_VALUE)).addComponent(jSeparator2)).addContainerGap()));&#xD;
    layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jbFinish).addComponent(jbBack)).addContainerGap()));&#xD;
    pack();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HRvkwRUTEemIe6OhVnSywA" name="jbFinishActionPerformed" specification="_HRu9sRUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbFinishActionPerformed&#xD;
    PleaseWait pw = new PleaseWait((JDialog) null, false);&#xD;
    pw.setAlwaysOnTop(true);&#xD;
    pw.toFront();&#xD;
    String similarity = (String) jcbSimilarity.getSelectedItem();&#xD;
    String linkage = (String) jcbLinkage.getSelectedItem();&#xD;
    double tolerance = Double.parseDouble(jtfTolerance.getText());&#xD;
    try {&#xD;
        if (tolerance &lt; 0) {&#xD;
            JOptionPane.showMessageDialog(this, &quot;Introduce a positive tolerance value&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
            return;&#xD;
        }&#xD;
        DefaultListModel dmSelected = (DefaultListModel) jlSelected.getModel();&#xD;
        DefaultListModel dmAvailable = (DefaultListModel) jlAvailable1.getModel();&#xD;
        nc.setSelectedFields(new ArrayList&lt;String>());&#xD;
        nc.setNonSelectedFields(new ArrayList&lt;String>());&#xD;
        for (Object o : dmSelected.toArray()) {&#xD;
            nc.getSelectedFields().add((String) o);&#xD;
        }&#xD;
        for (Object o : dmAvailable.toArray()) {&#xD;
            nc.getNonSelectedFields().add((String) o);&#xD;
        }&#xD;
        if (nc.getSelectedFields().isEmpty()) {&#xD;
            JOptionPane.showMessageDialog(this, &quot;Select at least a field to show in the dendrogram&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
            return;&#xD;
        }&#xD;
        nc.setSimilaritymethod(similarity);&#xD;
        nc.setLinkage(linkage);&#xD;
        nc.setTolerance(tolerance);&#xD;
    } catch (NumberFormatException e) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;Introduce a tolerance value&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
        return;&#xD;
    } catch (NullPointerException e) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;Introduce a tolerance value&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
        return;&#xD;
    }&#xD;
    Comparison c = nc.toComparison();&#xD;
    dispose();&#xD;
    if (edit) {&#xD;
        updateComparison(c);&#xD;
        try {&#xD;
            if (combination) {&#xD;
                generateDendrogram(c, lanesExperiment, 3, nc.getSelectedFields(), jCheckBox1.isSelected(), pw, jcbinvert.isSelected());&#xD;
            } else if (jcbSimilarity.getSelectedIndex() > 4) {&#xD;
                int output = jcbOutput.getSelectedIndex();&#xD;
                if (output == 2) {&#xD;
                    generateOcurrenceMatrix(c, nc.getSelectedFields());&#xD;
                } else {&#xD;
                    if (output == 0) {&#xD;
                        output = 1;&#xD;
                    } else {&#xD;
                        output = 3;&#xD;
                    }&#xD;
                    generateDendrogram(c, output, nc.getSelectedFields(), jCheckBox1.isSelected(), pw, jcbinvert.isSelected());&#xD;
                }&#xD;
            } else {&#xD;
                if (jcbOutput.getSelectedIndex() == 4) {&#xD;
                    generateOcurrenceMatrix(c, nc.getSelectedFields());&#xD;
                } else {&#xD;
                    generateDendrogram(c, jcbOutput.getSelectedIndex(), nc.getSelectedFields(), jCheckBox1.isSelected(), pw, jcbinvert.isSelected());&#xD;
                }&#xD;
            }&#xD;
        } catch (Exception ex) {&#xD;
            Logger.getLogger(Step4.class.getName()).log(Level.SEVERE, null, ex);&#xD;
        }&#xD;
    } else {&#xD;
        insertComparison(c);&#xD;
        try {&#xD;
            if (combination) {&#xD;
                generateDendrogram(c, lanesExperiment, 3, nc.getSelectedFields(), jCheckBox1.isSelected(), pw, jcbinvert.isSelected());&#xD;
            } else if (jcbSimilarity.getSelectedIndex() > 4) {&#xD;
                int output = jcbOutput.getSelectedIndex();&#xD;
                if (output == 2) {&#xD;
                    generateOcurrenceMatrix(c, nc.getSelectedFields());&#xD;
                } else {&#xD;
                    if (output == 0) {&#xD;
                        output = 1;&#xD;
                    } else {&#xD;
                        output = 3;&#xD;
                    }&#xD;
                    generateDendrogram(c, output, nc.getSelectedFields(), jCheckBox1.isSelected(), pw, jcbinvert.isSelected());&#xD;
                }&#xD;
            } else {&#xD;
                if (jcbOutput.getSelectedIndex() == 4) {&#xD;
                    generateOcurrenceMatrix(c, nc.getSelectedFields());&#xD;
                } else {&#xD;
                    generateDendrogram(c, jcbOutput.getSelectedIndex(), nc.getSelectedFields(), jCheckBox1.isSelected(), pw, jcbinvert.isSelected());&#xD;
                }&#xD;
            }&#xD;
        } catch (Exception ex) {&#xD;
            Logger.getLogger(Step4.class.getName()).log(Level.SEVERE, null, ex);&#xD;
        }&#xD;
    }&#xD;
    try {&#xD;
        DefaultListModel dmSelected = (DefaultListModel) jlSelected.getModel();&#xD;
        StandardUtils.save_comparisonconfig(similarity, linkage, tolerance, dmSelected.toArray());&#xD;
    } catch (FileNotFoundException ex) {&#xD;
        Logger.getLogger(Step4.class.getName()).log(Level.SEVERE, null, ex);&#xD;
    } catch (UnsupportedEncodingException ex) {&#xD;
        Logger.getLogger(Step4.class.getName()).log(Level.SEVERE, null, ex);&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HRwL0hUTEemIe6OhVnSywA" name="jbAddFieldActionPerformed" specification="_HRwL0BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbAddFieldActionPerformed&#xD;
    int[] tomove = jlAvailable1.getSelectedIndices();&#xD;
    DefaultListModel dmSelected = (DefaultListModel) jlSelected.getModel();&#xD;
    DefaultListModel dmAvailable = (DefaultListModel) jlAvailable1.getModel();&#xD;
    if (tomove != null &amp;&amp; tomove.length != 0) {&#xD;
        for (int i : tomove) {&#xD;
            dmSelected.addElement(dmAvailable.get(i));&#xD;
            dmAvailable.remove(i);&#xD;
        }&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HRyBARUTEemIe6OhVnSywA" name="jbDeleteFieldActionPerformed" specification="_HRwy4BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbDeleteFieldActionPerformed&#xD;
    int[] tomove = jlSelected.getSelectedIndices();&#xD;
    DefaultListModel dmSelected = (DefaultListModel) jlSelected.getModel();&#xD;
    DefaultListModel dmAvailable = (DefaultListModel) jlAvailable1.getModel();&#xD;
    if (tomove != null &amp;&amp; tomove.length != 0) {&#xD;
        for (int i : tomove) {&#xD;
            dmAvailable.addElement(dmSelected.get(i));&#xD;
            dmSelected.remove(i);&#xD;
        }&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HR2ScBUTEemIe6OhVnSywA" name="jbBackActionPerformed" specification="_HRz2MBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbBackActionPerformed&#xD;
    String similarity = (String) jcbSimilarity.getSelectedItem();&#xD;
    String linkage = (String) jcbLinkage.getSelectedItem();&#xD;
    double tolerance = Double.parseDouble(jtfTolerance.getText());&#xD;
    DefaultListModel dmSelected = (DefaultListModel) jlSelected.getModel();&#xD;
    DefaultListModel dmAvailable = (DefaultListModel) jlAvailable1.getModel();&#xD;
    nc.setSelectedFields(new ArrayList&lt;String>());&#xD;
    nc.setNonSelectedFields(new ArrayList&lt;String>());&#xD;
    for (Object o : dmSelected.toArray()) {&#xD;
        nc.getSelectedFields().add((String) o);&#xD;
    }&#xD;
    for (Object o : dmAvailable.toArray()) {&#xD;
        nc.getNonSelectedFields().add((String) o);&#xD;
    }&#xD;
    nc.setSimilaritymethod(similarity);&#xD;
    nc.setLinkage(linkage);&#xD;
    nc.setTolerance(tolerance);&#xD;
    dispose();&#xD;
    Step3 step3 = new Step3(nc, edit);&#xD;
    step3.setVisible(true);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HR6j4BUTEemIe6OhVnSywA" name="jcbSimilarityItemStateChanged" specification="_HR4HoBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jcbSimilarityItemStateChanged&#xD;
    if (combination) {&#xD;
        jcbOutput.setModel(new javax.swing.DefaultComboBoxModel(new String[] { &quot;Dendrogram&quot; }));&#xD;
    } else {&#xD;
        if (jcbSimilarity.getSelectedIndex() > 4) {&#xD;
            jcbOutput.setModel(new javax.swing.DefaultComboBoxModel(new String[] { &quot;Dendrogram + Images&quot;, &quot;Dendrogram&quot; }));&#xD;
        } else {&#xD;
            jcbOutput.setModel(new javax.swing.DefaultComboBoxModel(new String[] { &quot;Dendrogram + Images + Bands&quot;, &quot;Dendrogram + Images&quot;, &quot;Dendrogram + Bands&quot;, &quot;Dendrogram&quot; }));&#xD;
        }&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HRqsQhUTEemIe6OhVnSywA" name="Step4" visibility="public" method="_HRuWoBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HRshcBUTEemIe6OhVnSywA" name="nc" type="_HNv1kBUTEemIe6OhVnSywA"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HRtIgBUTEemIe6OhVnSywA" name="edit">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HRtIgRUTEemIe6OhVnSywA" name="combination">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HRtvkBUTEemIe6OhVnSywA" name="lanesExperiment"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HRuWoRUTEemIe6OhVnSywA" name="initComponents" visibility="private" method="_HRu9sBUTEemIe6OhVnSywA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HRu9sRUTEemIe6OhVnSywA" name="jbFinishActionPerformed" visibility="private" method="_HRvkwRUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HRvkwBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HRwL0BUTEemIe6OhVnSywA" name="jbAddFieldActionPerformed" visibility="private" method="_HRwL0hUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HRwL0RUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HRwy4BUTEemIe6OhVnSywA" name="jbDeleteFieldActionPerformed" visibility="private" method="_HRyBARUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HRyBABUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HRz2MBUTEemIe6OhVnSywA" name="jbBackActionPerformed" visibility="private" method="_HR2ScBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HR1EUBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HR4HoBUTEemIe6OhVnSywA" name="jcbSimilarityItemStateChanged" visibility="private" method="_HR6j4BUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HR5VwBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <nestedClassifier xmi:type="uml:Class" xmi:id="_HSP7EBUTEemIe6OhVnSywA" name="AvailableListSelectionHandler" visibility="private">
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HSQiIhUTEemIe6OhVnSywA" name="valueChanged" specification="_HSQiIBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    jlSelected.setSelectedIndex(-1);&#xD;
</body>
              </ownedBehavior>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_HSQiIBUTEemIe6OhVnSywA" name="valueChanged" visibility="public" method="_HSQiIhUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_HSQiIRUTEemIe6OhVnSywA" name="e"/>
              </ownedOperation>
            </nestedClassifier>
            <nestedClassifier xmi:type="uml:Class" xmi:id="_HSRJMBUTEemIe6OhVnSywA" name="SelectedListSelectionHandler" visibility="private">
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HSRwQhUTEemIe6OhVnSywA" name="valueChanged" specification="_HSRwQBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    jlAvailable1.setSelectedIndex(-1);&#xD;
</body>
              </ownedBehavior>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_HSRwQBUTEemIe6OhVnSywA" name="valueChanged" visibility="public" method="_HSRwQhUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_HSRwQRUTEemIe6OhVnSywA" name="e"/>
              </ownedOperation>
            </nestedClassifier>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_HSYd8BUTEemIe6OhVnSywA" name="Step2" visibility="public">
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HScvYBUTEemIe6OhVnSywA" name="nc" visibility="private" type="_HNv1kBUTEemIe6OhVnSywA" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HSdWcBUTEemIe6OhVnSywA" name="edit" visibility="private" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HSfLoBUTEemIe6OhVnSywA" name="initialexperiments" visibility="private" type="_EJs1wBUTEemIe6OhVnSywA" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_HShA0BUTEemIe6OhVnSywA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HSiO8BUTEemIe6OhVnSywA" value="*"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HS6CYBUTEemIe6OhVnSywA" name="jLabel1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HS8eoBUTEemIe6OhVnSywA" name="jLabel3" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HThGYBUTEemIe6OhVnSywA" name="jLabel4" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HThtcBUTEemIe6OhVnSywA" name="jLabel5" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HTiUgBUTEemIe6OhVnSywA" name="jLabel6" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HTiUgRUTEemIe6OhVnSywA" name="jLabel8" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HTi7kBUTEemIe6OhVnSywA" name="jPanel1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HTi7kRUTEemIe6OhVnSywA" name="jPanel2" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HTjioBUTEemIe6OhVnSywA" name="jScrollPane4" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HTjioRUTEemIe6OhVnSywA" name="jSeparator1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HTjiohUTEemIe6OhVnSywA" name="jSeparator2" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HTkJsBUTEemIe6OhVnSywA" name="jSeparator3" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HTkwwBUTEemIe6OhVnSywA" name="jbBack" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HTkwwRUTEemIe6OhVnSywA" name="jbNext" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HTkwwhUTEemIe6OhVnSywA" name="jcbincludemarkers" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HTlX0BUTEemIe6OhVnSywA" name="jtExperiments" visibility="private" isUnique="false"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HSo8oBUTEemIe6OhVnSywA" name="Step2" specification="_HSi2ABUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    initComponents();&#xD;
    this.nc = nc;&#xD;
    this.edit = edit;&#xD;
    ArrayList&lt;Experiment> availablexperiments = nc.getNonSelectedExperiments();&#xD;
    ArrayList&lt;Experiment> selectedexperiments = nc.getSelectedExperiments();&#xD;
    initialexperiments = selectedexperiments;&#xD;
    updateexperiments();&#xD;
    jcbincludemarkers.setSelected(nc.isMarkers());&#xD;
    this.setModal(true);&#xD;
    getRootPane().setDefaultButton(jbNext);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HSsnABUTEemIe6OhVnSywA" name="updateexperiments" specification="_HSqx0BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    ArrayList&lt;Experiment> experiments = nc.getNonSelectedExperiments();&#xD;
    String[] names = { &quot;Selected&quot;, &quot;Experiment&quot;, &quot;Date&quot;, &quot;Author&quot;, &quot;Marker&quot;, &quot;Comments&quot; };&#xD;
    Object[][] data = new Object[experiments.size()][6];&#xD;
    // We update the table&#xD;
    for (int i = 0; i &lt; experiments.size(); i++) {&#xD;
        data[i][0] = nc.getSelectedExperiments().contains(experiments.get(i));&#xD;
        data[i][1] = experiments.get(i).getName();&#xD;
        data[i][2] = experiments.get(i).getDate().toString();&#xD;
        data[i][3] = experiments.get(i).getUser().getUsername();&#xD;
        data[i][4] = experiments.get(i).getMarker().getName();&#xD;
        data[i][5] = experiments.get(i).getComments();&#xD;
    }&#xD;
    // Operations to change the model, we disable the edition of the date&#xD;
    DefaultTableModel model = new DefaultTableModel(data, names) {&#xD;
&#xD;
        public boolean isCellEditable(int rowIndex, int mColIndex) {&#xD;
            if (mColIndex == 0) {&#xD;
                return true;&#xD;
            } else {&#xD;
                return false;&#xD;
            }&#xD;
        }&#xD;
&#xD;
        public Class getColumnClass(int columnIndex) {&#xD;
            if (columnIndex == 0) {&#xD;
                return java.lang.Boolean.class;&#xD;
            } else {&#xD;
                return java.lang.Object.class;&#xD;
            }&#xD;
        }&#xD;
    };&#xD;
    model.addTableModelListener(this);&#xD;
    jtExperiments.setModel(model);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HSvDQBUTEemIe6OhVnSywA" name="initComponents" specification="_HSt1IBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    jPanel1 = new javax.swing.JPanel();&#xD;
    jLabel1 = new javax.swing.JLabel();&#xD;
    jSeparator1 = new javax.swing.JSeparator();&#xD;
    jLabel3 = new javax.swing.JLabel();&#xD;
    jLabel4 = new javax.swing.JLabel();&#xD;
    jLabel5 = new javax.swing.JLabel();&#xD;
    jLabel8 = new javax.swing.JLabel();&#xD;
    jbNext = new javax.swing.JButton();&#xD;
    jbBack = new javax.swing.JButton();&#xD;
    jPanel2 = new javax.swing.JPanel();&#xD;
    jLabel6 = new javax.swing.JLabel();&#xD;
    jSeparator3 = new javax.swing.JSeparator();&#xD;
    jcbincludemarkers = new javax.swing.JCheckBox();&#xD;
    jScrollPane4 = new javax.swing.JScrollPane();&#xD;
    jtExperiments = new javax.swing.JTable();&#xD;
    jSeparator2 = new javax.swing.JSeparator();&#xD;
    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);&#xD;
    setTitle(&quot;Comparison&quot;);&#xD;
    setResizable(false);&#xD;
    jPanel1.setBackground(new java.awt.Color(254, 254, 254));&#xD;
    jLabel1.setText(&quot;Steps&quot;);&#xD;
    jSeparator1.setBackground(new java.awt.Color(2, 2, 2));&#xD;
    jSeparator1.setForeground(new java.awt.Color(1, 1, 1));&#xD;
    // NOI18N&#xD;
    jLabel3.setFont(new java.awt.Font(&quot;Ubuntu&quot;, 1, 15));&#xD;
    jLabel3.setForeground(new java.awt.Color(0, 12, 255));&#xD;
    jLabel3.setText(&quot;2. Select Experiments&quot;);&#xD;
    jLabel4.setForeground(new java.awt.Color(4, 2, 2));&#xD;
    jLabel4.setText(&quot;3. Select Lanes&quot;);&#xD;
    jLabel5.setForeground(new java.awt.Color(1, 1, 1));&#xD;
    jLabel5.setText(&quot;4. Dendrogram Properties&quot;);&#xD;
    jLabel8.setForeground(new java.awt.Color(4, 2, 2));&#xD;
    jLabel8.setText(&quot;1. General Properties&quot;);&#xD;
    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);&#xD;
    jPanel1.setLayout(jPanel1Layout);&#xD;
    jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel1Layout.createSequentialGroup().addContainerGap().addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jSeparator1).addGroup(jPanel1Layout.createSequentialGroup().addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel1).addComponent(jLabel3).addComponent(jLabel4).addComponent(jLabel5).addComponent(jLabel8)).addGap(0, 0, Short.MAX_VALUE))).addContainerGap()));&#xD;
    jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel1Layout.createSequentialGroup().addContainerGap().addComponent(jLabel1).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addGap(7, 7, 7).addComponent(jLabel8).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel3).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel4).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel5).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jbNext.setText(&quot;Next >&quot;);&#xD;
    jbNext.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbNextActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jbBack.setText(&quot;&lt; Back&quot;);&#xD;
    jbBack.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbBackActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jLabel6.setText(&quot;Step 2. Select Experiments&quot;);&#xD;
    jcbincludemarkers.setText(&quot;Include markers of the experiments in comparison&quot;);&#xD;
    jtExperiments.setModel(new javax.swing.table.DefaultTableModel(new Object[][] { { null, null, null, null }, { null, null, null, null }, { null, null, null, null }, { null, null, null, null } }, new String[] { &quot;Title 1&quot;, &quot;Title 2&quot;, &quot;Title 3&quot;, &quot;Title 4&quot; }));&#xD;
    jScrollPane4.setViewportView(jtExperiments);&#xD;
    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);&#xD;
    jPanel2.setLayout(jPanel2Layout);&#xD;
    jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jSeparator3).addGroup(jPanel2Layout.createSequentialGroup().addComponent(jcbincludemarkers, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addContainerGap()).addGroup(jPanel2Layout.createSequentialGroup().addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel6).addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 491, javax.swing.GroupLayout.PREFERRED_SIZE)).addGap(0, 0, Short.MAX_VALUE)));&#xD;
    jPanel2Layout.setVerticalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel2Layout.createSequentialGroup().addContainerGap().addComponent(jLabel6).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 409, Short.MAX_VALUE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jcbincludemarkers)));&#xD;
    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());&#xD;
    getContentPane().setLayout(layout);&#xD;
    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addGroup(layout.createSequentialGroup().addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(layout.createSequentialGroup().addComponent(jbBack).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jbNext))).addGap(0, 0, Short.MAX_VALUE)).addComponent(jSeparator2)).addContainerGap()));&#xD;
    layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jbNext).addComponent(jbBack)).addContainerGap()));&#xD;
    pack();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HSzUsBUTEemIe6OhVnSywA" name="jbNextActionPerformed" specification="_HSwRYBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    if (nc.getSelectedExperiments().isEmpty()) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;Select at least an experiment&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
    } else {&#xD;
        nc.setMarkers(jcbincludemarkers.isSelected());&#xD;
        if (!edit || !initialexperiments.equals(nc.getSelectedExperiments())) {&#xD;
            nc.setNonSelectedLanes(new ArrayList&lt;LaneDB>());&#xD;
            for (Experiment e : nc.getSelectedExperiments()) {&#xD;
                ArrayList&lt;LaneDB> lanes = getlanesexperiment(e.getId(), true);&#xD;
                for (LaneDB l : lanes) {&#xD;
                    if (jcbincludemarkers.isSelected()) {&#xD;
                        nc.getNonSelectedLanes().add(l);&#xD;
                    } else if (!l.isIsMarker()) {&#xD;
                        nc.getNonSelectedLanes().add(l);&#xD;
                    }&#xD;
                }&#xD;
            }&#xD;
        }&#xD;
        dispose();&#xD;
        Step3 step3 = new Step3(nc, edit);&#xD;
        step3.setVisible(true);&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HS40QBUTEemIe6OhVnSywA" name="jbBackActionPerformed" specification="_HS1w8BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbBackActionPerformed&#xD;
    nc.setMarkers(jcbincludemarkers.isSelected());&#xD;
    dispose();&#xD;
    Step1 step1 = new Step1(nc, edit);&#xD;
    step1.setVisible(true);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HTl-4RUTEemIe6OhVnSywA" name="tableChanged" specification="_HTlX0RUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    int row = e.getFirstRow();&#xD;
    int column = e.getColumn();&#xD;
    Object cellValue = jtExperiments.getValueAt(row, column);&#xD;
    if ((boolean) cellValue) {&#xD;
        nc.getSelectedExperiments().add(nc.getNonSelectedExperiments().get(row));&#xD;
    } else {&#xD;
        nc.getSelectedExperiments().remove(nc.getNonSelectedExperiments().get(row));&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HSi2ABUTEemIe6OhVnSywA" name="Step2" visibility="public" method="_HSo8oBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HSmgYBUTEemIe6OhVnSywA" name="nc" type="_HNv1kBUTEemIe6OhVnSywA"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HSnugBUTEemIe6OhVnSywA" name="edit">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HSqx0BUTEemIe6OhVnSywA" name="updateexperiments" visibility="public" method="_HSsnABUTEemIe6OhVnSywA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HSt1IBUTEemIe6OhVnSywA" name="initComponents" visibility="private" method="_HSvDQBUTEemIe6OhVnSywA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HSwRYBUTEemIe6OhVnSywA" name="jbNextActionPerformed" visibility="private" method="_HSzUsBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HSyGkBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HS1w8BUTEemIe6OhVnSywA" name="jbBackActionPerformed" visibility="private" method="_HS40QBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HS3mIBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HTlX0RUTEemIe6OhVnSywA" name="tableChanged" visibility="public" method="_HTl-4RUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HTl-4BUTEemIe6OhVnSywA" name="e"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_HTrecBUTEemIe6OhVnSywA" name="Step1" visibility="public">
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HTsFgBUTEemIe6OhVnSywA" name="nc" visibility="private" type="_HNv1kBUTEemIe6OhVnSywA" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HTsFgRUTEemIe6OhVnSywA" name="edit" visibility="private" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HTsFghUTEemIe6OhVnSywA" name="initialname" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HTyMIBUTEemIe6OhVnSywA" name="jLabel1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HTyzMBUTEemIe6OhVnSywA" name="jLabel2" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HTzaQBUTEemIe6OhVnSywA" name="jLabel3" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HT0oYBUTEemIe6OhVnSywA" name="jLabel4" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HT0oYRUTEemIe6OhVnSywA" name="jLabel5" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HT12gBUTEemIe6OhVnSywA" name="jLabel6" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HT4SwBUTEemIe6OhVnSywA" name="jLabel7" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HT450BUTEemIe6OhVnSywA" name="jLabel8" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HT6vABUTEemIe6OhVnSywA" name="jPanel1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HT9LQBUTEemIe6OhVnSywA" name="jPanel2" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HT_AcBUTEemIe6OhVnSywA" name="jScrollPane1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HUA1oBUTEemIe6OhVnSywA" name="jSeparator1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HUCq0BUTEemIe6OhVnSywA" name="jSeparator2" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HUEgABUTEemIe6OhVnSywA" name="jSeparator3" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HUGVMBUTEemIe6OhVnSywA" name="jbBack" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HUHjUBUTEemIe6OhVnSywA" name="jbNext" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HUJYgBUTEemIe6OhVnSywA" name="jtComments" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HULNsBUTEemIe6OhVnSywA" name="jtfName" visibility="private" isUnique="false"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HTvI0BUTEemIe6OhVnSywA" name="Step1" specification="_HTsskBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    initComponents();&#xD;
    this.nc = nc;&#xD;
    this.edit = edit;&#xD;
    initialname = nc.getName();&#xD;
    String name = nc.getName();&#xD;
    String comments = nc.getComments();&#xD;
    if (name != null) {&#xD;
        jtfName.setText(name);&#xD;
        jbNext.setEnabled(true);&#xD;
    }&#xD;
    if (comments != null) {&#xD;
        jtComments.setText(comments);&#xD;
    }&#xD;
    this.setModal(true);&#xD;
    getRootPane().setDefaultButton(jbNext);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HTvv4BUTEemIe6OhVnSywA" name="initComponents" specification="_HTvI0RUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    jPanel1 = new javax.swing.JPanel();&#xD;
    jLabel1 = new javax.swing.JLabel();&#xD;
    jSeparator1 = new javax.swing.JSeparator();&#xD;
    jLabel2 = new javax.swing.JLabel();&#xD;
    jLabel3 = new javax.swing.JLabel();&#xD;
    jLabel4 = new javax.swing.JLabel();&#xD;
    jLabel5 = new javax.swing.JLabel();&#xD;
    jbNext = new javax.swing.JButton();&#xD;
    jbBack = new javax.swing.JButton();&#xD;
    jPanel2 = new javax.swing.JPanel();&#xD;
    jLabel6 = new javax.swing.JLabel();&#xD;
    jSeparator3 = new javax.swing.JSeparator();&#xD;
    jLabel7 = new javax.swing.JLabel();&#xD;
    jtfName = new javax.swing.JTextField();&#xD;
    jLabel8 = new javax.swing.JLabel();&#xD;
    jScrollPane1 = new javax.swing.JScrollPane();&#xD;
    jtComments = new javax.swing.JTextArea();&#xD;
    jSeparator2 = new javax.swing.JSeparator();&#xD;
    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);&#xD;
    setTitle(&quot;Comparison&quot;);&#xD;
    setResizable(false);&#xD;
    jPanel1.setBackground(new java.awt.Color(254, 254, 254));&#xD;
    jLabel1.setText(&quot;Steps&quot;);&#xD;
    jSeparator1.setBackground(new java.awt.Color(2, 2, 2));&#xD;
    jSeparator1.setForeground(new java.awt.Color(1, 1, 1));&#xD;
    // NOI18N&#xD;
    jLabel2.setFont(new java.awt.Font(&quot;Ubuntu&quot;, 1, 15));&#xD;
    jLabel2.setForeground(new java.awt.Color(0, 12, 255));&#xD;
    jLabel2.setText(&quot;1. General Properties&quot;);&#xD;
    jLabel3.setForeground(new java.awt.Color(1, 1, 1));&#xD;
    jLabel3.setText(&quot;2. Select Experiments&quot;);&#xD;
    jLabel4.setForeground(new java.awt.Color(4, 2, 2));&#xD;
    jLabel4.setText(&quot;3. Select Lanes&quot;);&#xD;
    jLabel5.setForeground(new java.awt.Color(1, 1, 1));&#xD;
    jLabel5.setText(&quot;4. Dendrogram Properties&quot;);&#xD;
    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);&#xD;
    jPanel1.setLayout(jPanel1Layout);&#xD;
    jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel1Layout.createSequentialGroup().addContainerGap().addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jSeparator1).addGroup(jPanel1Layout.createSequentialGroup().addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel1).addComponent(jLabel2).addComponent(jLabel3).addComponent(jLabel4).addComponent(jLabel5)).addGap(0, 0, Short.MAX_VALUE))).addContainerGap()));&#xD;
    jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel1Layout.createSequentialGroup().addContainerGap().addComponent(jLabel1).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel2).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel3).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel4).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel5).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jbNext.setText(&quot;Next >&quot;);&#xD;
    jbNext.setEnabled(false);&#xD;
    jbNext.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbNextActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jbBack.setText(&quot;&lt; Back&quot;);&#xD;
    jbBack.setEnabled(false);&#xD;
    jLabel6.setText(&quot;Step 1. General Properties&quot;);&#xD;
    jLabel7.setText(&quot;Name:&quot;);&#xD;
    jtfName.addKeyListener(new java.awt.event.KeyAdapter() {&#xD;
&#xD;
        public void keyReleased(java.awt.event.KeyEvent evt) {&#xD;
            jtfNameKeyReleased(evt);&#xD;
        }&#xD;
    });&#xD;
    jLabel8.setText(&quot;Comments:&quot;);&#xD;
    jtComments.setColumns(20);&#xD;
    jtComments.setRows(5);&#xD;
    jScrollPane1.setViewportView(jtComments);&#xD;
    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);&#xD;
    jPanel2.setLayout(jPanel2Layout);&#xD;
    jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel2Layout.createSequentialGroup().addComponent(jLabel6).addGap(0, 0, Short.MAX_VALUE)).addComponent(jSeparator3).addGroup(jPanel2Layout.createSequentialGroup().addContainerGap().addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addComponent(jLabel8).addComponent(jLabel7)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane1).addComponent(jtfName)).addContainerGap()));&#xD;
    jPanel2Layout.setVerticalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel2Layout.createSequentialGroup().addContainerGap().addComponent(jLabel6).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel7).addComponent(jtfName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel2Layout.createSequentialGroup().addComponent(jLabel8).addGap(0, 179, Short.MAX_VALUE)).addComponent(jScrollPane1)).addContainerGap()));&#xD;
    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());&#xD;
    getContentPane().setLayout(layout);&#xD;
    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false).addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGap(430, 430, 430).addComponent(jbBack).addGap(12, 12, 12).addComponent(jbNext))));&#xD;
    layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)).addGap(6, 6, 6).addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE).addGap(6, 6, 6).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jbBack).addComponent(jbNext)).addGap(12, 12, 12)));&#xD;
    pack();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HTw-ABUTEemIe6OhVnSywA" name="jtfNameKeyReleased" specification="_HTvv4RUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jtfNameKeyReleased&#xD;
    String text = jtfName.getText();&#xD;
    if (text != &quot;&quot;) {&#xD;
        jbNext.setEnabled(true);&#xD;
    } else {&#xD;
        jbNext.setEnabled(false);&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HTxlERUTEemIe6OhVnSywA" name="jbNextActionPerformed" specification="_HTw-ARUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbNextActionPerformed&#xD;
    String name = jtfName.getText();&#xD;
    if (!name.equals(initialname)) {&#xD;
        if (existscomparison(name, nc.getStudyid())) {&#xD;
            JOptionPane.showMessageDialog(this, &quot;There is already an experiment with that name&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
            return;&#xD;
        }&#xD;
    }&#xD;
    String comments = jtComments.getText();&#xD;
    nc.setName(name);&#xD;
    nc.setComments(comments);&#xD;
    dispose();&#xD;
    Step2 step2 = new Step2(nc, edit);&#xD;
    step2.setVisible(true);&#xD;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HTsskBUTEemIe6OhVnSywA" name="Step1" visibility="public" method="_HTvI0BUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HTuhwBUTEemIe6OhVnSywA" name="nc" type="_HNv1kBUTEemIe6OhVnSywA"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HTuhwRUTEemIe6OhVnSywA" name="edit">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HTvI0RUTEemIe6OhVnSywA" name="initComponents" visibility="private" method="_HTvv4BUTEemIe6OhVnSywA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HTvv4RUTEemIe6OhVnSywA" name="jtfNameKeyReleased" visibility="private" method="_HTw-ABUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HTwW8BUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HTw-ARUTEemIe6OhVnSywA" name="jbNextActionPerformed" visibility="private" method="_HTxlERUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HTxlEBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_HUO4EBUTEemIe6OhVnSywA" name="PopulationGenetic">
          <packagedElement xmi:type="uml:Class" xmi:id="_HUQtQBUTEemIe6OhVnSywA" name="Step1" visibility="public">
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HUTJgBUTEemIe6OhVnSywA" name="nc" visibility="private" type="_HUSicBUTEemIe6OhVnSywA" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HUU-sBUTEemIe6OhVnSywA" name="edit" visibility="private" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HUWM0BUTEemIe6OhVnSywA" name="initialname" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HUpHwBUTEemIe6OhVnSywA" name="jLabel1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HUq88BUTEemIe6OhVnSywA" name="jLabel2" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HUrkABUTEemIe6OhVnSywA" name="jLabel3" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HUrkARUTEemIe6OhVnSywA" name="jLabel4" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HUsLEBUTEemIe6OhVnSywA" name="jLabel5" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HUuAQBUTEemIe6OhVnSywA" name="jLabel6" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HUv1cBUTEemIe6OhVnSywA" name="jLabel7" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HUyRsBUTEemIe6OhVnSywA" name="jLabel8" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HUzf0BUTEemIe6OhVnSywA" name="jLabel9" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HU18EBUTEemIe6OhVnSywA" name="jPanel1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HU2jIBUTEemIe6OhVnSywA" name="jPanel2" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HU2jIRUTEemIe6OhVnSywA" name="jScrollPane1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HU3KMBUTEemIe6OhVnSywA" name="jSeparator1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HU3xQBUTEemIe6OhVnSywA" name="jSeparator2" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HU3xQRUTEemIe6OhVnSywA" name="jSeparator3" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HU4YUBUTEemIe6OhVnSywA" name="jbBack" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HU4YURUTEemIe6OhVnSywA" name="jbNext" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HU4_YBUTEemIe6OhVnSywA" name="jtComments" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HU4_YRUTEemIe6OhVnSywA" name="jtfName" visibility="private" isUnique="false"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HUbsYBUTEemIe6OhVnSywA" name="Step1" specification="_HUXa8BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    initComponents();&#xD;
    this.nc = nc;&#xD;
    this.edit = edit;&#xD;
    initialname = nc.getName();&#xD;
    String name = nc.getName();&#xD;
    String comments = nc.getComments();&#xD;
    if (name != null) {&#xD;
        jtfName.setText(name);&#xD;
        jbNext.setEnabled(true);&#xD;
    }&#xD;
    if (comments != null) {&#xD;
        jtComments.setText(comments);&#xD;
    }&#xD;
    this.setModal(true);&#xD;
    getRootPane().setDefaultButton(jbNext);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HUfWwBUTEemIe6OhVnSywA" name="initComponents" specification="_HUeIoBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    jPanel1 = new javax.swing.JPanel();&#xD;
    jLabel1 = new javax.swing.JLabel();&#xD;
    jSeparator1 = new javax.swing.JSeparator();&#xD;
    jLabel2 = new javax.swing.JLabel();&#xD;
    jLabel3 = new javax.swing.JLabel();&#xD;
    jLabel4 = new javax.swing.JLabel();&#xD;
    jLabel5 = new javax.swing.JLabel();&#xD;
    jLabel9 = new javax.swing.JLabel();&#xD;
    jbNext = new javax.swing.JButton();&#xD;
    jbBack = new javax.swing.JButton();&#xD;
    jPanel2 = new javax.swing.JPanel();&#xD;
    jLabel6 = new javax.swing.JLabel();&#xD;
    jSeparator3 = new javax.swing.JSeparator();&#xD;
    jLabel7 = new javax.swing.JLabel();&#xD;
    jtfName = new javax.swing.JTextField();&#xD;
    jLabel8 = new javax.swing.JLabel();&#xD;
    jScrollPane1 = new javax.swing.JScrollPane();&#xD;
    jtComments = new javax.swing.JTextArea();&#xD;
    jSeparator2 = new javax.swing.JSeparator();&#xD;
    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);&#xD;
    setTitle(&quot;Population Genetics&quot;);&#xD;
    setResizable(false);&#xD;
    jPanel1.setBackground(new java.awt.Color(254, 254, 254));&#xD;
    jLabel1.setText(&quot;Steps&quot;);&#xD;
    jSeparator1.setBackground(new java.awt.Color(2, 2, 2));&#xD;
    jSeparator1.setForeground(new java.awt.Color(1, 1, 1));&#xD;
    // NOI18N&#xD;
    jLabel2.setFont(new java.awt.Font(&quot;Ubuntu&quot;, 1, 15));&#xD;
    jLabel2.setForeground(new java.awt.Color(0, 12, 255));&#xD;
    jLabel2.setText(&quot;1. General Properties&quot;);&#xD;
    jLabel3.setForeground(new java.awt.Color(1, 1, 1));&#xD;
    jLabel3.setText(&quot;2. Select Experiments&quot;);&#xD;
    jLabel4.setForeground(new java.awt.Color(4, 2, 2));&#xD;
    jLabel4.setText(&quot;3. Select Lanes&quot;);&#xD;
    jLabel5.setForeground(new java.awt.Color(1, 1, 1));&#xD;
    jLabel5.setText(&quot;4. Properties&quot;);&#xD;
    jLabel9.setForeground(new java.awt.Color(1, 1, 1));&#xD;
    jLabel9.setText(&quot;5. Export options&quot;);&#xD;
    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);&#xD;
    jPanel1.setLayout(jPanel1Layout);&#xD;
    jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel1Layout.createSequentialGroup().addContainerGap().addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jSeparator1).addGroup(jPanel1Layout.createSequentialGroup().addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel1).addComponent(jLabel2).addComponent(jLabel3).addComponent(jLabel4).addComponent(jLabel5).addComponent(jLabel9)).addGap(0, 0, Short.MAX_VALUE))).addContainerGap()));&#xD;
    jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel1Layout.createSequentialGroup().addContainerGap().addComponent(jLabel1).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel2).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel3).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel4).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel5).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel9).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jbNext.setText(&quot;Next >&quot;);&#xD;
    jbNext.setEnabled(false);&#xD;
    jbNext.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbNextActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jbBack.setText(&quot;&lt; Back&quot;);&#xD;
    jbBack.setEnabled(false);&#xD;
    jLabel6.setText(&quot;Step 1. General Properties&quot;);&#xD;
    jLabel7.setText(&quot;Title:&quot;);&#xD;
    jtfName.addKeyListener(new java.awt.event.KeyAdapter() {&#xD;
&#xD;
        public void keyReleased(java.awt.event.KeyEvent evt) {&#xD;
            jtfNameKeyReleased(evt);&#xD;
        }&#xD;
    });&#xD;
    jLabel8.setText(&quot;Comments:&quot;);&#xD;
    jtComments.setColumns(20);&#xD;
    jtComments.setRows(5);&#xD;
    jScrollPane1.setViewportView(jtComments);&#xD;
    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);&#xD;
    jPanel2.setLayout(jPanel2Layout);&#xD;
    jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel2Layout.createSequentialGroup().addComponent(jLabel6).addGap(0, 0, Short.MAX_VALUE)).addComponent(jSeparator3).addGroup(jPanel2Layout.createSequentialGroup().addContainerGap().addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addComponent(jLabel8).addComponent(jLabel7)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane1).addComponent(jtfName)).addContainerGap()));&#xD;
    jPanel2Layout.setVerticalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel2Layout.createSequentialGroup().addContainerGap().addComponent(jLabel6).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel7).addComponent(jtfName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel2Layout.createSequentialGroup().addComponent(jLabel8).addGap(0, 179, Short.MAX_VALUE)).addComponent(jScrollPane1)).addContainerGap()));&#xD;
    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());&#xD;
    getContentPane().setLayout(layout);&#xD;
    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)).addGroup(layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 535, javax.swing.GroupLayout.PREFERRED_SIZE).addGroup(layout.createSequentialGroup().addContainerGap().addComponent(jbBack).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jbNext))).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)).addGap(6, 6, 6).addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE).addGap(6, 6, 6).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jbBack).addComponent(jbNext)).addGap(12, 12, 12)));&#xD;
    pack();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HUjBIBUTEemIe6OhVnSywA" name="jtfNameKeyReleased" specification="_HUhL8BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jtfNameKeyReleased&#xD;
    String text = jtfName.getText();&#xD;
    if (text != &quot;&quot;) {&#xD;
        jbNext.setEnabled(true);&#xD;
    } else {&#xD;
        jbNext.setEnabled(false);&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HUmrgBUTEemIe6OhVnSywA" name="jbNextActionPerformed" specification="_HUk2UBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbNextActionPerformed&#xD;
    String name = jtfName.getText();&#xD;
    //        if (!name.equals(initialname)) {&#xD;
    //            if (existscomparison(name, nc.getStudyid())) {&#xD;
    //                JOptionPane.showMessageDialog(this, &quot;There is already an experiment with that name&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
    //                return;&#xD;
    //            }&#xD;
    //        }&#xD;
    String comments = jtComments.getText();&#xD;
    nc.setName(name);&#xD;
    nc.setComments(comments);&#xD;
    dispose();&#xD;
    Step2 step2 = new Step2(nc, edit);&#xD;
    step2.setVisible(true);&#xD;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HUXa8BUTEemIe6OhVnSywA" name="Step1" visibility="public" method="_HUbsYBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HUZ3MBUTEemIe6OhVnSywA" name="nc" type="_HUSicBUTEemIe6OhVnSywA"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HUaeQBUTEemIe6OhVnSywA" name="edit">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HUeIoBUTEemIe6OhVnSywA" name="initComponents" visibility="private" method="_HUfWwBUTEemIe6OhVnSywA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HUhL8BUTEemIe6OhVnSywA" name="jtfNameKeyReleased" visibility="private" method="_HUjBIBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HUiaEBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HUk2UBUTEemIe6OhVnSywA" name="jbNextActionPerformed" visibility="private" method="_HUmrgBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HUmEcBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_HUSicBUTEemIe6OhVnSywA" name="NewComparison"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_HVBiQBUTEemIe6OhVnSywA" name="Step5" visibility="public">
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HVFMoBUTEemIe6OhVnSywA" name="nc" visibility="private" type="_HUSicBUTEemIe6OhVnSywA" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HVHB0BUTEemIe6OhVnSywA" name="xslts" visibility="private" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_HVHo4BUTEemIe6OhVnSywA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HVIP8BUTEemIe6OhVnSywA" value="*"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HVI3ABUTEemIe6OhVnSywA" name="selected_xslts" visibility="private" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_HVKsMBUTEemIe6OhVnSywA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HVKsMRUTEemIe6OhVnSywA" value="*"/>
              <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_HVLTQBUTEemIe6OhVnSywA" name="defaultValue">
                <language>JAVA</language>
                <body>new ArrayList&lt;String>()</body>
              </defaultValue>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HVNIcBUTEemIe6OhVnSywA" name="edit" visibility="private" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HVvT8BUTEemIe6OhVnSywA" name="jLabel1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HVxJIBUTEemIe6OhVnSywA" name="jLabel2" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HVy-UBUTEemIe6OhVnSywA" name="jLabel4" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HV0McBUTEemIe6OhVnSywA" name="jLabel5" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HV2BoBUTEemIe6OhVnSywA" name="jLabel6" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HV3PwBUTEemIe6OhVnSywA" name="jLabel7" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HV320BUTEemIe6OhVnSywA" name="jLabel8" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HV5sABUTEemIe6OhVnSywA" name="jLabel9" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HV7hMBUTEemIe6OhVnSywA" name="jPanel1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HV8vUBUTEemIe6OhVnSywA" name="jPanel2" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HV-kgBUTEemIe6OhVnSywA" name="jScrollPane4" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HV_yoBUTEemIe6OhVnSywA" name="jSeparator1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HWBn0BUTEemIe6OhVnSywA" name="jSeparator2" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HWBn0RUTEemIe6OhVnSywA" name="jSeparator3" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HWDdABUTEemIe6OhVnSywA" name="jbBack" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HWFSMBUTEemIe6OhVnSywA" name="jbDeselect" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HWGgUBUTEemIe6OhVnSywA" name="jbNext" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HWHucBUTEemIe6OhVnSywA" name="jbSelectAll" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HWI8kBUTEemIe6OhVnSywA" name="jtLanes" visibility="private" isUnique="false"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HVT2IBUTEemIe6OhVnSywA" name="Step5" specification="_HVO9oBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    initComponents();&#xD;
    this.nc = nc;&#xD;
    this.edit = edit;&#xD;
    xslts = getXSLTs();&#xD;
    Collections.sort(xslts.subList(0, xslts.size()));&#xD;
    updatexslts(xslts);&#xD;
    this.setModal(true);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HVXggBUTEemIe6OhVnSywA" name="getXSLTs" specification="_HVVEQBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    ArrayList&lt;String> xslts = new ArrayList&lt;String>();&#xD;
    String workingdir = System.getProperty(&quot;user.dir&quot;) + &quot;/xslts/&quot;;&#xD;
    File directory = new File(workingdir);&#xD;
    String[] files = directory.list();&#xD;
    int nFiles = files.length;&#xD;
    if (nFiles != 0) {&#xD;
        for (int i = 0; i &lt; nFiles; i++) {&#xD;
            if (//encuentra los archivos .xls y almacena su ruta de acceso&#xD;
            files[i].contains(&quot;.xsl&quot;)) {&#xD;
                String name = files[i].substring(0, files[i].indexOf('.'));&#xD;
                xslts.add(name);&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    return xslts;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HVdAEBUTEemIe6OhVnSywA" name="updatexslts" specification="_HVZVsBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    String[] names = { &quot;Selected&quot;, &quot;Format&quot; };&#xD;
    Object[][] data = new Object[xslts.size()][names.length];&#xD;
    // We update the table&#xD;
    for (int i = 0; i &lt; xslts.size(); i++) {&#xD;
        data[i][0] = false;&#xD;
        data[i][1] = xslts.get(i);&#xD;
    }&#xD;
    // Operations to change the model, we disable the edition of the date&#xD;
    DefaultTableModel model = new DefaultTableModel(data, names) {&#xD;
&#xD;
        public boolean isCellEditable(int rowIndex, int mColIndex) {&#xD;
            if (mColIndex == 0) {&#xD;
                return true;&#xD;
            } else {&#xD;
                return false;&#xD;
            }&#xD;
        }&#xD;
&#xD;
        public Class getColumnClass(int columnIndex) {&#xD;
            if (columnIndex == 0) {&#xD;
                return java.lang.Boolean.class;&#xD;
            } else {&#xD;
                return java.lang.Object.class;&#xD;
            }&#xD;
        }&#xD;
    };&#xD;
    model.addTableModelListener(this);&#xD;
    jtLanes.setModel(model);&#xD;
    getRootPane().setDefaultButton(jbNext);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HVe1QBUTEemIe6OhVnSywA" name="initComponents" specification="_HVeOMBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    jPanel1 = new javax.swing.JPanel();&#xD;
    jLabel1 = new javax.swing.JLabel();&#xD;
    jSeparator1 = new javax.swing.JSeparator();&#xD;
    jLabel4 = new javax.swing.JLabel();&#xD;
    jLabel5 = new javax.swing.JLabel();&#xD;
    jLabel8 = new javax.swing.JLabel();&#xD;
    jLabel7 = new javax.swing.JLabel();&#xD;
    jLabel9 = new javax.swing.JLabel();&#xD;
    jbNext = new javax.swing.JButton();&#xD;
    jbBack = new javax.swing.JButton();&#xD;
    jPanel2 = new javax.swing.JPanel();&#xD;
    jLabel6 = new javax.swing.JLabel();&#xD;
    jSeparator3 = new javax.swing.JSeparator();&#xD;
    jScrollPane4 = new javax.swing.JScrollPane();&#xD;
    jtLanes = new javax.swing.JTable();&#xD;
    jbDeselect = new javax.swing.JButton();&#xD;
    jbSelectAll = new javax.swing.JButton();&#xD;
    jLabel2 = new javax.swing.JLabel();&#xD;
    jSeparator2 = new javax.swing.JSeparator();&#xD;
    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);&#xD;
    setTitle(&quot;Population Genetics&quot;);&#xD;
    setResizable(false);&#xD;
    jPanel1.setBackground(new java.awt.Color(254, 254, 254));&#xD;
    jPanel1.setPreferredSize(new java.awt.Dimension(178, 161));&#xD;
    jLabel1.setText(&quot;Steps&quot;);&#xD;
    jSeparator1.setBackground(new java.awt.Color(2, 2, 2));&#xD;
    jSeparator1.setForeground(new java.awt.Color(1, 1, 1));&#xD;
    jLabel4.setForeground(new java.awt.Color(1, 1, 1));&#xD;
    jLabel4.setText(&quot;3. Select Lanes&quot;);&#xD;
    jLabel5.setForeground(new java.awt.Color(1, 1, 1));&#xD;
    jLabel5.setText(&quot;4. Properties&quot;);&#xD;
    jLabel8.setForeground(new java.awt.Color(4, 2, 2));&#xD;
    jLabel8.setText(&quot;1. General Properties&quot;);&#xD;
    jLabel7.setForeground(new java.awt.Color(1, 1, 1));&#xD;
    jLabel7.setText(&quot;2. Select Experiments&quot;);&#xD;
    // NOI18N&#xD;
    jLabel9.setFont(new java.awt.Font(&quot;Ubuntu&quot;, 1, 15));&#xD;
    jLabel9.setForeground(new java.awt.Color(0, 12, 255));&#xD;
    jLabel9.setText(&quot;5. Export options&quot;);&#xD;
    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);&#xD;
    jPanel1.setLayout(jPanel1Layout);&#xD;
    jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel1Layout.createSequentialGroup().addContainerGap().addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jSeparator1).addGroup(jPanel1Layout.createSequentialGroup().addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel1).addComponent(jLabel4).addComponent(jLabel5).addComponent(jLabel8).addComponent(jLabel7).addComponent(jLabel9)).addGap(0, 30, Short.MAX_VALUE))).addContainerGap()));&#xD;
    jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel1Layout.createSequentialGroup().addContainerGap().addComponent(jLabel1).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addGap(7, 7, 7).addComponent(jLabel8).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel7).addGap(7, 7, 7).addComponent(jLabel4).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel5).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel9).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jbNext.setText(&quot;Finish&quot;);&#xD;
    jbNext.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbNextActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jbBack.setText(&quot;&lt; Back&quot;);&#xD;
    jbBack.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbBackActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jLabel6.setText(&quot;Step 5. Export options&quot;);&#xD;
    jtLanes.setModel(new javax.swing.table.DefaultTableModel(new Object[][] { { null, null, null, null }, { null, null, null, null }, { null, null, null, null }, { null, null, null, null } }, new String[] { &quot;Title 1&quot;, &quot;Title 2&quot;, &quot;Title 3&quot;, &quot;Title 4&quot; }));&#xD;
    jScrollPane4.setViewportView(jtLanes);&#xD;
    jbDeselect.setText(&quot;Deselect All&quot;);&#xD;
    jbDeselect.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbDeselectActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jbSelectAll.setText(&quot;Select All&quot;);&#xD;
    jbSelectAll.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbSelectAllActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jLabel2.setText(&quot;Select the format (or formats) to export the selected lanes:&quot;);&#xD;
    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);&#xD;
    jPanel2.setLayout(jPanel2Layout);&#xD;
    jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jSeparator3).addGroup(jPanel2Layout.createSequentialGroup().addComponent(jLabel6).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)).addGroup(jPanel2Layout.createSequentialGroup().addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addGroup(jPanel2Layout.createSequentialGroup().addComponent(jbSelectAll).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jbDeselect)).addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 673, javax.swing.GroupLayout.PREFERRED_SIZE)).addComponent(jLabel2)).addGap(0, 0, Short.MAX_VALUE)));&#xD;
    jPanel2Layout.setVerticalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel2Layout.createSequentialGroup().addContainerGap().addComponent(jLabel6).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel2).addGap(15, 15, 15).addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 403, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jbDeselect).addComponent(jbSelectAll)).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());&#xD;
    getContentPane().setLayout(layout);&#xD;
    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addGap(0, 0, Short.MAX_VALUE)).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addComponent(jbBack).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jbNext)).addComponent(jSeparator2)))).addContainerGap()));&#xD;
    layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 527, Short.MAX_VALUE).addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 4, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jbBack).addComponent(jbNext)).addContainerGap()));&#xD;
    pack();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HVifoBUTEemIe6OhVnSywA" name="jbNextActionPerformed" specification="_HVgqcBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    if (selected_xslts.isEmpty()) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;Select at least a system to export&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
        return;&#xD;
    }&#xD;
    Comparison c = nc.toComparison();&#xD;
    dispose();&#xD;
    try {&#xD;
        xmlCreator xmlc = new xmlCreator(c, nc.getSelectedFields(), selected_xslts);&#xD;
        JOptionPane.showMessageDialog(this, &quot;Export process has been completed&quot;, &quot;Export&quot;, INFORMATION_MESSAGE, null);&#xD;
    } catch (Exception ex) {&#xD;
        Logger.getLogger(Step5.class.getName()).log(Level.SEVERE, null, ex);&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HVmKABUTEemIe6OhVnSywA" name="jbBackActionPerformed" specification="_HVkU0BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbBackActionPerformed&#xD;
    dispose();&#xD;
    Step4 step4 = new Step4(nc, edit);&#xD;
    step4.setVisible(true);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HVp0YBUTEemIe6OhVnSywA" name="jbSelectAllActionPerformed" specification="_HVn_MBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    for (int i = 0; i &lt; jtLanes.getModel().getRowCount(); i++) {&#xD;
        jtLanes.setValueAt(true, i, 0);&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HVtewBUTEemIe6OhVnSywA" name="jbDeselectActionPerformed" specification="_HVrpkBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    for (int i = 0; i &lt; jtLanes.getModel().getRowCount(); i++) {&#xD;
        jtLanes.setValueAt(false, i, 0);&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HWLY0BUTEemIe6OhVnSywA" name="tableChanged" specification="_HWKKsBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    int row = e.getFirstRow();&#xD;
    int column = e.getColumn();&#xD;
    Object cellValue = jtLanes.getValueAt(row, column);&#xD;
    if ((boolean) cellValue) {&#xD;
        selected_xslts.add(xslts.get(row));&#xD;
    } else {&#xD;
        selected_xslts.remove(xslts.get(row));&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HVO9oBUTEemIe6OhVnSywA" name="Step5" visibility="public" method="_HVT2IBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HVSoABUTEemIe6OhVnSywA" name="nc" type="_HUSicBUTEemIe6OhVnSywA"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HVTPEBUTEemIe6OhVnSywA" name="edit">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HVVEQBUTEemIe6OhVnSywA" name="getXSLTs" visibility="private" method="_HVXggBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HVVrUBUTEemIe6OhVnSywA" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_HVWSYBUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HVW5cBUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HVZVsBUTEemIe6OhVnSywA" name="updatexslts" visibility="public" method="_HVdAEBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HVaj0BUTEemIe6OhVnSywA" name="xslts">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_HVbx8BUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HVcZABUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HVeOMBUTEemIe6OhVnSywA" name="initComponents" visibility="private" method="_HVe1QBUTEemIe6OhVnSywA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HVgqcBUTEemIe6OhVnSywA" name="jbNextActionPerformed" visibility="private" method="_HVifoBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HVh4kBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HVkU0BUTEemIe6OhVnSywA" name="jbBackActionPerformed" visibility="private" method="_HVmKABUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HVk74BUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HVn_MBUTEemIe6OhVnSywA" name="jbSelectAllActionPerformed" visibility="private" method="_HVp0YBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HVpNUBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HVrpkBUTEemIe6OhVnSywA" name="jbDeselectActionPerformed" visibility="private" method="_HVtewBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HVs3sBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HWKKsBUTEemIe6OhVnSywA" name="tableChanged" visibility="public" method="_HWLY0BUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HWKxwBUTEemIe6OhVnSywA" name="e"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_HWN1EBUTEemIe6OhVnSywA" name="TransformerPlugin" visibility="public" isAbstract="true">
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HWeTwBUTEemIe6OhVnSywA" name="transformAndExport" specification="_HWTUoBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Document doc = generateGelJXMLfromFile(path);&#xD;
    TransformerFactory transformerFactory = TransformerFactory.newInstance();&#xD;
    javax.xml.transform.Transformer transformer = transformerFactory.newTransformer();&#xD;
    StreamResult file = new StreamResult(new File(System.getProperty(&quot;user.dir&quot;) + &quot;/temp.xml&quot;));&#xD;
    DOMSource result = new DOMSource(doc);&#xD;
    transformer.transform(result, file);&#xD;
    Transformer t = new Transformer(name, System.getProperty(&quot;user.dir&quot;) + &quot;/temp.xml&quot;, true);&#xD;
    t.setVisible(true);&#xD;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HWN1ERUTEemIe6OhVnSywA" name="generateGelJXMLfromFile" visibility="public" isAbstract="true">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HWQ4YBUTEemIe6OhVnSywA" direction="return"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HWSGgBUTEemIe6OhVnSywA" name="path"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HWTUoBUTEemIe6OhVnSywA" name="transformAndExport" visibility="public" method="_HWeTwBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HWUiwBUTEemIe6OhVnSywA" name="name"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HWWX8BUTEemIe6OhVnSywA" name="path"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_HWjMQBUTEemIe6OhVnSywA" name="Step3" visibility="public">
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HWmPkBUTEemIe6OhVnSywA" name="nc" visibility="private" type="_HUSicBUTEemIe6OhVnSywA" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HWoEwBUTEemIe6OhVnSywA" name="templanes" visibility="private" type="_EHtRsBUTEemIe6OhVnSywA" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_HWp58BUTEemIe6OhVnSywA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HWqhABUTEemIe6OhVnSywA" value="*"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HWrIEBUTEemIe6OhVnSywA" name="edit" visibility="private" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HXN6oBUTEemIe6OhVnSywA" name="jLabel1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HXPIwBUTEemIe6OhVnSywA" name="jLabel4" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HXQ98BUTEemIe6OhVnSywA" name="jLabel5" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HXSzIBUTEemIe6OhVnSywA" name="jLabel6" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HXUoUBUTEemIe6OhVnSywA" name="jLabel7" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HXV2cBUTEemIe6OhVnSywA" name="jLabel8" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HXXroBUTEemIe6OhVnSywA" name="jLabel9" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HXYSsBUTEemIe6OhVnSywA" name="jPanel1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HXZg0BUTEemIe6OhVnSywA" name="jPanel2" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HXau8BUTEemIe6OhVnSywA" name="jScrollPane4" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HXckIBUTEemIe6OhVnSywA" name="jSeparator1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HXdyQBUTEemIe6OhVnSywA" name="jSeparator2" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HXgOgBUTEemIe6OhVnSywA" name="jSeparator3" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HXiDsBUTEemIe6OhVnSywA" name="jbBack" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HXjR0BUTEemIe6OhVnSywA" name="jbDeselect" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HXluEBUTEemIe6OhVnSywA" name="jbNext" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HXnjQBUTEemIe6OhVnSywA" name="jbSelectAll" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HXpYcBUTEemIe6OhVnSywA" name="jtLanes" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HXrNoBUTEemIe6OhVnSywA" name="jxsearchlane" visibility="private" isUnique="false"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HWwnoBUTEemIe6OhVnSywA" name="Step3" specification="_HWsWMBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    initComponents();&#xD;
    this.nc = nc;&#xD;
    this.edit = edit;&#xD;
    templanes = nc.getNonSelectedLanes();&#xD;
    updatelanes(templanes);&#xD;
    this.setModal(true);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HW2HMBUTEemIe6OhVnSywA" name="updatelanes" specification="_HWyc0BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    String[] names = { &quot;Selected&quot;, &quot;Genus&quot;, &quot;Species&quot;, &quot;Strain Number&quot;, &quot;Country&quot;, &quot;MLST&quot;, &quot;isMarker&quot;, &quot;Experiment&quot;, &quot;Comments&quot; };&#xD;
    Object[][] data = new Object[newlanes.size()][names.length];&#xD;
    // We update the table&#xD;
    for (int i = 0; i &lt; newlanes.size(); i++) {&#xD;
        data[i][0] = nc.getSelectedLanes().contains(newlanes.get(i));&#xD;
        data[i][1] = newlanes.get(i).getGenus();&#xD;
        data[i][2] = newlanes.get(i).getSpecies();&#xD;
        data[i][3] = newlanes.get(i).getStrainNumber();&#xD;
        data[i][4] = newlanes.get(i).getCountry();&#xD;
        data[i][5] = newlanes.get(i).getMSLT();&#xD;
        data[i][6] = newlanes.get(i).isIsMarker();&#xD;
        data[i][7] = newlanes.get(i).getExperiment().getName();&#xD;
        data[i][8] = newlanes.get(i).getComments();&#xD;
    }&#xD;
    // Operations to change the model, we disable the edition of the date&#xD;
    DefaultTableModel model = new DefaultTableModel(data, names) {&#xD;
&#xD;
        public boolean isCellEditable(int rowIndex, int mColIndex) {&#xD;
            if (mColIndex == 0) {&#xD;
                return true;&#xD;
            } else {&#xD;
                return false;&#xD;
            }&#xD;
        }&#xD;
&#xD;
        public Class getColumnClass(int columnIndex) {&#xD;
            if (columnIndex == 0) {&#xD;
                return java.lang.Boolean.class;&#xD;
            } else {&#xD;
                return java.lang.Object.class;&#xD;
            }&#xD;
        }&#xD;
    };&#xD;
    model.addTableModelListener(this);&#xD;
    jtLanes.setModel(model);&#xD;
    getRootPane().setDefaultButton(jbNext);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HW4jcBUTEemIe6OhVnSywA" name="initComponents" specification="_HW3VUBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    jPanel1 = new javax.swing.JPanel();&#xD;
    jLabel1 = new javax.swing.JLabel();&#xD;
    jSeparator1 = new javax.swing.JSeparator();&#xD;
    jLabel4 = new javax.swing.JLabel();&#xD;
    jLabel5 = new javax.swing.JLabel();&#xD;
    jLabel8 = new javax.swing.JLabel();&#xD;
    jLabel7 = new javax.swing.JLabel();&#xD;
    jLabel9 = new javax.swing.JLabel();&#xD;
    jbNext = new javax.swing.JButton();&#xD;
    jbBack = new javax.swing.JButton();&#xD;
    jPanel2 = new javax.swing.JPanel();&#xD;
    jLabel6 = new javax.swing.JLabel();&#xD;
    jSeparator3 = new javax.swing.JSeparator();&#xD;
    jxsearchlane = new org.jdesktop.swingx.JXSearchField();&#xD;
    jScrollPane4 = new javax.swing.JScrollPane();&#xD;
    jtLanes = new javax.swing.JTable();&#xD;
    jbDeselect = new javax.swing.JButton();&#xD;
    jbSelectAll = new javax.swing.JButton();&#xD;
    jSeparator2 = new javax.swing.JSeparator();&#xD;
    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);&#xD;
    setTitle(&quot;Population Genetics&quot;);&#xD;
    setResizable(false);&#xD;
    jPanel1.setBackground(new java.awt.Color(254, 254, 254));&#xD;
    jPanel1.setPreferredSize(new java.awt.Dimension(178, 161));&#xD;
    jLabel1.setText(&quot;Steps&quot;);&#xD;
    jSeparator1.setBackground(new java.awt.Color(2, 2, 2));&#xD;
    jSeparator1.setForeground(new java.awt.Color(1, 1, 1));&#xD;
    // NOI18N&#xD;
    jLabel4.setFont(new java.awt.Font(&quot;Ubuntu&quot;, 1, 15));&#xD;
    jLabel4.setForeground(new java.awt.Color(0, 12, 255));&#xD;
    jLabel4.setText(&quot;3. Select Lanes&quot;);&#xD;
    jLabel5.setForeground(new java.awt.Color(1, 1, 1));&#xD;
    jLabel5.setText(&quot;4. Properties&quot;);&#xD;
    jLabel8.setForeground(new java.awt.Color(4, 2, 2));&#xD;
    jLabel8.setText(&quot;1. General Properties&quot;);&#xD;
    jLabel7.setForeground(new java.awt.Color(1, 1, 1));&#xD;
    jLabel7.setText(&quot;2. Select Experiments&quot;);&#xD;
    jLabel9.setForeground(new java.awt.Color(1, 1, 1));&#xD;
    jLabel9.setText(&quot;5. Export options&quot;);&#xD;
    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);&#xD;
    jPanel1.setLayout(jPanel1Layout);&#xD;
    jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel1Layout.createSequentialGroup().addContainerGap().addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jSeparator1).addGroup(jPanel1Layout.createSequentialGroup().addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel1).addComponent(jLabel4).addComponent(jLabel5).addComponent(jLabel8).addComponent(jLabel7).addComponent(jLabel9)).addGap(0, 30, Short.MAX_VALUE))).addContainerGap()));&#xD;
    jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel1Layout.createSequentialGroup().addContainerGap().addComponent(jLabel1).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addGap(7, 7, 7).addComponent(jLabel8).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel7).addGap(7, 7, 7).addComponent(jLabel4).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel5).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel9).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jbNext.setText(&quot;Next >&quot;);&#xD;
    jbNext.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbNextActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jbBack.setText(&quot;&lt; Back&quot;);&#xD;
    jbBack.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbBackActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jLabel6.setText(&quot;Step 3. Select Lanes&quot;);&#xD;
    jxsearchlane.setBackground(new java.awt.Color(254, 254, 254));&#xD;
    jxsearchlane.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jxsearchlaneActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jxsearchlane.addKeyListener(new java.awt.event.KeyAdapter() {&#xD;
&#xD;
        public void keyReleased(java.awt.event.KeyEvent evt) {&#xD;
            jxsearchlaneKeyReleased(evt);&#xD;
        }&#xD;
    });&#xD;
    jtLanes.setModel(new javax.swing.table.DefaultTableModel(new Object[][] { { null, null, null, null }, { null, null, null, null }, { null, null, null, null }, { null, null, null, null } }, new String[] { &quot;Title 1&quot;, &quot;Title 2&quot;, &quot;Title 3&quot;, &quot;Title 4&quot; }));&#xD;
    jScrollPane4.setViewportView(jtLanes);&#xD;
    jbDeselect.setText(&quot;Deselect All&quot;);&#xD;
    jbDeselect.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbDeselectActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jbSelectAll.setText(&quot;Select All&quot;);&#xD;
    jbSelectAll.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbSelectAllActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);&#xD;
    jPanel2.setLayout(jPanel2Layout);&#xD;
    jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jSeparator3).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addComponent(jxsearchlane, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(jPanel2Layout.createSequentialGroup().addComponent(jLabel6).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)).addGroup(jPanel2Layout.createSequentialGroup().addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addGroup(jPanel2Layout.createSequentialGroup().addComponent(jbSelectAll).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jbDeselect)).addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 673, javax.swing.GroupLayout.PREFERRED_SIZE)).addGap(0, 0, Short.MAX_VALUE)));&#xD;
    jPanel2Layout.setVerticalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel2Layout.createSequentialGroup().addContainerGap().addComponent(jLabel6).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jxsearchlane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 403, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jbDeselect).addComponent(jbSelectAll)).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());&#xD;
    getContentPane().setLayout(layout);&#xD;
    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addGap(0, 0, Short.MAX_VALUE)).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addComponent(jbBack).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jbNext)).addComponent(jSeparator2)))).addContainerGap()));&#xD;
    layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 527, Short.MAX_VALUE).addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 4, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jbBack).addComponent(jbNext)).addContainerGap()));&#xD;
    pack();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HW6_sBUTEemIe6OhVnSywA" name="jbNextActionPerformed" specification="_HW5xkBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    if (nc.getSelectedLanes().isEmpty()) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;Select at least a lane&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
    } else {&#xD;
        dispose();&#xD;
        Step4 step4 = new Step4(nc, edit);&#xD;
        step4.setVisible(true);&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HW9b8BUTEemIe6OhVnSywA" name="jbBackActionPerformed" specification="_HW6_sRUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbBackActionPerformed&#xD;
    dispose();&#xD;
    Step2 step2 = new Step2(nc, edit);&#xD;
    step2.setVisible(true);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HXAfQBUTEemIe6OhVnSywA" name="jxsearchlaneKeyReleased" specification="_HW-qEBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jxsearchlaneKeyReleased&#xD;
    String s = jxsearchlane.getText();&#xD;
    ArrayList&lt;LaneDB> newlanes = searchlanesstring(nc.getNonSelectedLanes(), s);&#xD;
    templanes = newlanes;&#xD;
    updatelanes(newlanes);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HXEJoBUTEemIe6OhVnSywA" name="jxsearchlaneActionPerformed" specification="_HXCUcBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jxsearchlaneActionPerformed&#xD;
    String s = jxsearchlane.getText();&#xD;
    ArrayList&lt;LaneDB> newlanes = searchlanesstring(nc.getNonSelectedLanes(), s);&#xD;
    templanes = newlanes;&#xD;
    updatelanes(newlanes);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HXIbEBUTEemIe6OhVnSywA" name="jbSelectAllActionPerformed" specification="_HXF-0BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbSelectAllActionPerformed&#xD;
    nc.getSelectedLanes().clear();&#xD;
    for (int i = 0; i &lt; jtLanes.getModel().getRowCount(); i++) {&#xD;
        jtLanes.setValueAt(true, i, 0);&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HXMFcBUTEemIe6OhVnSywA" name="jbDeselectActionPerformed" specification="_HXKQQBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbDeselectActionPerformed&#xD;
    nc.getSelectedLanes().clear();&#xD;
    for (int i = 0; i &lt; jtLanes.getModel().getRowCount(); i++) {&#xD;
        jtLanes.setValueAt(false, i, 0);&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HXuQ8BUTEemIe6OhVnSywA" name="tableChanged" specification="_HXsbwBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    int row = e.getFirstRow();&#xD;
    int column = e.getColumn();&#xD;
    Object cellValue = jtLanes.getValueAt(row, column);&#xD;
    if ((boolean) cellValue) {&#xD;
        nc.getSelectedLanes().add(templanes.get(row));&#xD;
    } else {&#xD;
        nc.getSelectedLanes().remove(templanes.get(row));&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HWsWMBUTEemIe6OhVnSywA" name="Step3" visibility="public" method="_HWwnoBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HWvZgBUTEemIe6OhVnSywA" name="nc" type="_HUSicBUTEemIe6OhVnSywA"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HWwAkBUTEemIe6OhVnSywA" name="edit">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HWyc0BUTEemIe6OhVnSywA" name="updatelanes" visibility="public" method="_HW2HMBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HWzq8BUTEemIe6OhVnSywA" name="newlanes" type="_EHtRsBUTEemIe6OhVnSywA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_HW05EBUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HW1gIBUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HW3VUBUTEemIe6OhVnSywA" name="initComponents" visibility="private" method="_HW4jcBUTEemIe6OhVnSywA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HW5xkBUTEemIe6OhVnSywA" name="jbNextActionPerformed" visibility="private" method="_HW6_sBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HW6YoBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HW6_sRUTEemIe6OhVnSywA" name="jbBackActionPerformed" visibility="private" method="_HW9b8BUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HW8N0BUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HW-qEBUTEemIe6OhVnSywA" name="jxsearchlaneKeyReleased" visibility="private" method="_HXAfQBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HW_4MBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HXCUcBUTEemIe6OhVnSywA" name="jxsearchlaneActionPerformed" visibility="private" method="_HXEJoBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HXC7gBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HXF-0BUTEemIe6OhVnSywA" name="jbSelectAllActionPerformed" visibility="private" method="_HXIbEBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HXHM8BUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HXKQQBUTEemIe6OhVnSywA" name="jbDeselectActionPerformed" visibility="private" method="_HXMFcBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HXLeYBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HXsbwBUTEemIe6OhVnSywA" name="tableChanged" visibility="public" method="_HXuQ8BUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HXtp4BUTEemIe6OhVnSywA" name="e"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_HX0-oBUTEemIe6OhVnSywA" name="xmlCreator" visibility="public">
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HX2z0BUTEemIe6OhVnSywA" name="c" visibility="private" type="_EHPXoBUTEemIe6OhVnSywA" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HX5QEBUTEemIe6OhVnSywA" name="fields" visibility="private" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_HX6eMBUTEemIe6OhVnSywA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HX7FQBUTEemIe6OhVnSywA" value="*"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HX7sUBUTEemIe6OhVnSywA" name="mws" visibility="private" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_KgG0cPaLEeW5KOK8aDMdgA"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_HX7sURUTEemIe6OhVnSywA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HX7sUhUTEemIe6OhVnSywA" value="*"/>
              <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_HX7sUxUTEemIe6OhVnSywA" name="defaultValue">
                <language>JAVA</language>
                <body>new ArrayList&lt;Double>()</body>
              </defaultValue>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HX8TYBUTEemIe6OhVnSywA" name="hashtable" visibility="private" isUnique="false">
              <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_HX8TYRUTEemIe6OhVnSywA" name="defaultValue">
                <language>JAVA</language>
                <body>new Hashtable&lt;String, ArrayList&lt;Pair&lt;String, ArrayList&lt;Boolean>>>>()</body>
              </defaultValue>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HX8TYhUTEemIe6OhVnSywA" name="xslts" visibility="private" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_HX86cBUTEemIe6OhVnSywA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HX86cRUTEemIe6OhVnSywA" value="*"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HYAk0hUTEemIe6OhVnSywA" name="xmlCreator" specification="_HX9hgBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    this.c = c;&#xD;
    this.fields = fields;&#xD;
    this.xslts = xslts;&#xD;
    generateOcurrenceMatrix();&#xD;
    generateDocument();&#xD;
    convertXML();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HYBL4BUTEemIe6OhVnSywA" name="convertXML" specification="_HYAk0xUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    DirectoryChooser dc = new DirectoryChooser(&quot;Select a directory to save the exported documents&quot;);&#xD;
    String dir = dc.getDirectory();&#xD;
    if (dir == null) {&#xD;
        return;&#xD;
    }&#xD;
    File xmlFile = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/temp.xml&quot;);&#xD;
    TransformerFactory factory = TransformerFactory.newInstance();&#xD;
    Source xmlSource = new StreamSource(xmlFile);&#xD;
    for (String xsltName : xslts) {&#xD;
        File xsltFile = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/xslts/&quot; + xsltName + &quot;.xsl&quot;);&#xD;
        Source xslt = new StreamSource(xsltFile);&#xD;
        Transformer transformer = factory.newTransformer(xslt);&#xD;
        transformer.transform(xmlSource, new StreamResult(new File(dir + c.getName() + &quot;_&quot; + xsltName + &quot;.txt&quot;)));&#xD;
        File instructions = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/xslts/instructions/&quot; + xsltName + &quot;.txt&quot;);&#xD;
        File instructionsCopy = new File(dir + &quot;instructions&quot; + &quot;_&quot; + xsltName + &quot;.txt&quot;);&#xD;
        if (instructions.exists()) {&#xD;
            Files.copy(instructions.toPath(), instructionsCopy.toPath(), REPLACE_EXISTING);&#xD;
        }&#xD;
    }&#xD;
    File f = new File(dir + &quot;/gelj.xml&quot;);&#xD;
    Files.copy(xmlFile.toPath(), f.toPath(), REPLACE_EXISTING);&#xD;
    File fgeljXMLsource = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/xslts/html/gelj.xsl&quot;);&#xD;
    File fgeljXMLtarget = new File(dir + &quot;/gelj.xsl&quot;);&#xD;
    Files.copy(fgeljXMLsource.toPath(), fgeljXMLtarget.toPath(), REPLACE_EXISTING);&#xD;
    c.getName();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HYDBEBUTEemIe6OhVnSywA" name="convertXMLFromFile" specification="_HYBy8BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    DirectoryChooser dc = new DirectoryChooser(&quot;Select a directory to save the exported documents&quot;);&#xD;
    String dir = dc.getDirectory();&#xD;
    if (dir == null) {&#xD;
        return;&#xD;
    }&#xD;
    File xmlFile = new File(path);&#xD;
    TransformerFactory factory = TransformerFactory.newInstance();&#xD;
    Source xmlSource = new StreamSource(xmlFile);&#xD;
    for (String xsltName : xslts) {&#xD;
        File xsltFile = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/xslts/&quot; + xsltName + &quot;.xsl&quot;);&#xD;
        Source xslt = new StreamSource(xsltFile);&#xD;
        Transformer transformer = factory.newTransformer(xslt);&#xD;
        transformer.transform(xmlSource, new StreamResult(new File(dir + name + &quot;_&quot; + xsltName + &quot;.txt&quot;)));&#xD;
        File instructions = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/xslts/instructions/&quot; + xsltName + &quot;.txt&quot;);&#xD;
        File instructionsCopy = new File(dir + &quot;instructions&quot; + &quot;_&quot; + xsltName + &quot;.txt&quot;);&#xD;
        if (instructions.exists()) {&#xD;
            Files.copy(instructions.toPath(), instructionsCopy.toPath(), REPLACE_EXISTING);&#xD;
        }&#xD;
    }&#xD;
    File f = new File(dir + &quot;/gelj.xml&quot;);&#xD;
    Files.copy(xmlFile.toPath(), f.toPath(), REPLACE_EXISTING);&#xD;
    File fgeljXMLsource = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/xslts/html/gelj.xsl&quot;);&#xD;
    File fgeljXMLtarget = new File(dir + &quot;/gelj.xsl&quot;);&#xD;
    Files.copy(fgeljXMLsource.toPath(), fgeljXMLtarget.toPath(), REPLACE_EXISTING);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HYFdUBUTEemIe6OhVnSywA" name="generateDocument" specification="_HYDBERUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    DocumentBuilderFactory docFactory = DocumentBuilderFactory.newInstance();&#xD;
    DocumentBuilder docBuilder = docFactory.newDocumentBuilder();&#xD;
    // root elements&#xD;
    Document doc = docBuilder.newDocument();&#xD;
    Element rootElement = doc.createElement(&quot;study&quot;);&#xD;
    doc.appendChild(rootElement);&#xD;
    doc.setXmlStandalone(true);&#xD;
    ProcessingInstruction pi = doc.createProcessingInstruction(&quot;xml-stylesheet&quot;, &quot;type=\&quot;text/xsl\&quot; href=\&quot;gelj.xsl\&quot;&quot;);&#xD;
    doc.insertBefore(pi, rootElement);&#xD;
    // name elements&#xD;
    Element name = doc.createElement(&quot;name&quot;);&#xD;
    name.appendChild(doc.createTextNode(c.getName()));&#xD;
    rootElement.appendChild(name);&#xD;
    /// Compute number of populations&#xD;
    Element npopulations = doc.createElement(&quot;n_populations&quot;);&#xD;
    npopulations.appendChild(doc.createTextNode(&quot;&quot; + hashtable.size()));&#xD;
    rootElement.appendChild(npopulations);&#xD;
    Element nindividuals = doc.createElement(&quot;n_individuals&quot;);&#xD;
    nindividuals.appendChild(doc.createTextNode(&quot;&quot; + c.getLanes().size()));&#xD;
    rootElement.appendChild(nindividuals);&#xD;
    Element nloci = doc.createElement(&quot;n_loci&quot;);&#xD;
    nloci.appendChild(doc.createTextNode(&quot;&quot; + mws.size()));&#xD;
    rootElement.appendChild(nloci);&#xD;
    Element loci = doc.createElement(&quot;loci&quot;);&#xD;
    for (int i = 0; i &lt; mws.size(); i++) {&#xD;
        Element locus = doc.createElement(&quot;locus&quot;);&#xD;
        locus.appendChild(doc.createTextNode(&quot;Locus&quot; + (i + 1) + &quot;(&quot; + (Math.round(mws.get(i) * 100.0) / 100.0) + &quot;)&quot;));&#xD;
        loci.appendChild(locus);&#xD;
    }&#xD;
    rootElement.appendChild(loci);&#xD;
    Element populations = doc.createElement(&quot;populations&quot;);&#xD;
    Enumeration&lt;String> keys = hashtable.keys();&#xD;
    int popid = 0;&#xD;
    int indid = 0;&#xD;
    while (keys.hasMoreElements()) {&#xD;
        popid++;&#xD;
        String pop = keys.nextElement();&#xD;
        Element population = doc.createElement(&quot;population&quot;);&#xD;
        Element popname = doc.createElement(&quot;name&quot;);&#xD;
        popname.appendChild(doc.createTextNode(pop));&#xD;
        population.appendChild(popname);&#xD;
        Element popidxml = doc.createElement(&quot;ID&quot;);&#xD;
        popidxml.appendChild(doc.createTextNode(&quot;&quot; + popid));&#xD;
        population.appendChild(popidxml);&#xD;
        ArrayList&lt;Pair&lt;String, ArrayList&lt;Boolean>>> individuals = hashtable.get(pop);&#xD;
        Element popnindividuals = doc.createElement(&quot;n_individuals&quot;);&#xD;
        popnindividuals.appendChild(doc.createTextNode(&quot;&quot; + individuals.size()));&#xD;
        population.appendChild(popnindividuals);&#xD;
        Element individualsXML = doc.createElement(&quot;individuals&quot;);&#xD;
        for (int i = 0; i &lt; individuals.size(); i++) {&#xD;
            indid++;&#xD;
            Element individualXML = doc.createElement(&quot;individual&quot;);&#xD;
            Element individualName = doc.createElement(&quot;name&quot;);&#xD;
            individualName.appendChild(doc.createTextNode(individuals.get(i).getKey()));&#xD;
            individualXML.appendChild(individualName);&#xD;
            ArrayList&lt;Boolean> locus = individuals.get(i).getValue();&#xD;
            for (Boolean b : locus) {&#xD;
                Element locusXML = doc.createElement(&quot;locus&quot;);&#xD;
                locusXML.appendChild(doc.createTextNode(&quot;&quot; + b));&#xD;
                individualXML.appendChild(locusXML);&#xD;
            }&#xD;
            Element individualID = doc.createElement(&quot;ID&quot;);&#xD;
            individualID.appendChild(doc.createTextNode(&quot;&quot; + indid));&#xD;
            individualXML.appendChild(individualID);&#xD;
            individualsXML.appendChild(individualXML);&#xD;
        }&#xD;
        population.appendChild(individualsXML);&#xD;
        populations.appendChild(population);&#xD;
    }&#xD;
    rootElement.appendChild(populations);&#xD;
    // write the content into xml file&#xD;
    TransformerFactory transformerFactory = TransformerFactory.newInstance();&#xD;
    Transformer transformer = transformerFactory.newTransformer();&#xD;
    DOMSource source = new DOMSource(doc);&#xD;
    StreamResult result = new StreamResult(new File(System.getProperty(&quot;user.dir&quot;) + &quot;/temp.xml&quot;));&#xD;
    transformer.transform(source, result);&#xD;
    System.out.println(&quot;File saved!&quot;);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HYGEYRUTEemIe6OhVnSywA" name="generateOcurrenceMatrix" specification="_HYGEYBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Lane[] selectedlanes = new Lane[c.getLanes().size()];&#xD;
    for (int i = 0; i &lt; selectedlanes.length; i++) {&#xD;
        LaneDB l = c.getLanes().get(i);&#xD;
        selectedlanes[i] = LaneDBtoLaneIJ(l);&#xD;
        selectedlanes[i].setName(&quot;&quot;);&#xD;
        for (String field : fields) {&#xD;
            String name = selectedlanes[i].getName();&#xD;
            switch(field) {&#xD;
                case &quot;Genus&quot;:&#xD;
                    selectedlanes[i].setName(name + l.getGenus() + &quot; &quot;);&#xD;
                    break;&#xD;
                case &quot;Species&quot;:&#xD;
                    selectedlanes[i].setName(name + l.getSpecies() + &quot; &quot;);&#xD;
                    break;&#xD;
                case &quot;Strain Number&quot;:&#xD;
                    selectedlanes[i].setName(name + l.getStrainNumber() + &quot; &quot;);&#xD;
                    break;&#xD;
                case &quot;Country&quot;:&#xD;
                    selectedlanes[i].setName(name + l.getCountry() + &quot; &quot;);&#xD;
                    break;&#xD;
                case &quot;MLST&quot;:&#xD;
                    selectedlanes[i].setName(name + l.getMSLT() + &quot; &quot;);&#xD;
                    break;&#xD;
                case &quot;isMarker&quot;:&#xD;
                    selectedlanes[i].setName(name + l.isIsMarker() + &quot; &quot;);&#xD;
                    break;&#xD;
                case &quot;Experiment&quot;:&#xD;
                    selectedlanes[i].setName(name + l.getExperiment().getName() + &quot; &quot;);&#xD;
                    break;&#xD;
                case &quot;Comments&quot;:&#xD;
                    selectedlanes[i].setName(name + l.getComments() + &quot; &quot;);&#xD;
                    break;&#xD;
                default:&#xD;
                    selectedlanes[i].setName(name + l.getLaneaddedinfo().get(field) + &quot; &quot;);&#xD;
                    break;&#xD;
            }&#xD;
        }&#xD;
        selectedlanes[i].setName(selectedlanes[i].getName());&#xD;
    }&#xD;
    double[] stds = selectedlanes[0].getStdpositionbands();&#xD;
    double tolerance_aux = stds[0] - stds[stds.length - 1];&#xD;
    double tolerance = tolerance_aux * c.getTolerance() / 100;&#xD;
    getMWs(selectedlanes, tolerance);&#xD;
    createOccurrenceMatrix(selectedlanes, tolerance, mws);&#xD;
//        ArrayList list = new ArrayList();&#xD;
//        String headings = &quot;mw \t&quot;;&#xD;
//        for (int i = 0; i &lt; selectedlanes.length - 1; i++) {&#xD;
//            String name = selectedlanes[i].getName().replaceAll(&quot;\t&quot;, &quot; &quot;);&#xD;
//            headings = headings + name.substring(4, name.lastIndexOf(&quot; &quot;)) + &quot;\t&quot;;&#xD;
//        }&#xD;
//        String name = selectedlanes[selectedlanes.length - 1].getName().replaceAll(&quot;\t&quot;, &quot; &quot;);&#xD;
////        headings = headings + name.substring(4, name.lastIndexOf(&quot; &quot;));&#xD;
//&#xD;
//        for (int i = 0; i &lt; mws.size(); i++) {&#xD;
//            name = &quot;&quot; + mws.get(i);&#xD;
//            String row = name + &quot;\t&quot;;&#xD;
//            for (int j = 0; j &lt; selectedlanes.length - 1; j++) {&#xD;
//                row = row + (1 - similaritytable[i][j]) + &quot;\t&quot;;&#xD;
//            }&#xD;
//            row = row + similaritytable[i][selectedlanes.length - 1];&#xD;
//            list.add(row);&#xD;
//        }&#xD;
//        TextWindow textWindow = new TextWindow(&quot;Occurrence Matrix&quot;, headings, list, 600, 400);&#xD;
//        textWindow.setVisible(true);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HYIgoBUTEemIe6OhVnSywA" name="createOccurrenceMatrix" specification="_HYGrcBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    int[][] matrix = new int[mws.size()][selectedlanes.length];&#xD;
    for (int i = 0; i &lt; selectedlanes.length; i++) {&#xD;
        String popname = c.getLanes().get(i).getLaneaddedinfo().get(&quot;Population&quot;);&#xD;
        if (popname == null) {&#xD;
            popname = &quot;defpop&quot;;&#xD;
        }&#xD;
        String indname = selectedlanes[i].getName();&#xD;
        double[] stds = selectedlanes[i].getStdpositionbands();&#xD;
        ArrayList&lt;Boolean> occurrences = new ArrayList&lt;Boolean>();&#xD;
        for (int j = 0; j &lt; mws.size(); j++) {&#xD;
            int k = 0;&#xD;
            boolean b = true;&#xD;
            while (b &amp;&amp; k &lt; stds.length) {&#xD;
                if ((stds[k] + tolerance > mws.get(j)) &amp;&amp; (stds[k] - tolerance &lt; mws.get(j))) {&#xD;
                    occurrences.add(true);&#xD;
                    b = false;&#xD;
                } else {&#xD;
                    k++;&#xD;
                }&#xD;
            }&#xD;
            if (b) {&#xD;
                occurrences.add(false);&#xD;
            }&#xD;
        }&#xD;
        Pair p = new Pair(indname, occurrences);&#xD;
        ArrayList&lt;Pair&lt;String, ArrayList&lt;Boolean>>> res = hashtable.get(popname);&#xD;
        if (res == null) {&#xD;
            ArrayList&lt;Pair&lt;String, ArrayList&lt;Boolean>>> temp = new ArrayList&lt;Pair&lt;String, ArrayList&lt;Boolean>>>();&#xD;
            temp.add(p);&#xD;
            hashtable.put(popname, temp);&#xD;
        } else {&#xD;
            res.add(p);&#xD;
        }&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HYJuwBUTEemIe6OhVnSywA" name="getMWs" specification="_HYIgoRUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    for (int i = 0; i &lt; selectedlanes.length; i++) {&#xD;
        double stds[] = selectedlanes[i].getStdpositionbands();&#xD;
        for (int j = 0; j &lt; stds.length; j++) {&#xD;
            mws = insertSortMWs(mws, stds[j], tolerance);&#xD;
        }&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HYK84hUTEemIe6OhVnSywA" name="insertSortMWs" specification="_HYJuwRUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    ArrayList&lt;Double> res = new ArrayList&lt;Double>();&#xD;
    if (mws.size() == 0) {&#xD;
        res.add(mw);&#xD;
        return res;&#xD;
    }&#xD;
    int i = 0;&#xD;
    boolean b = true;&#xD;
    while (b &amp;&amp; (i &lt; mws.size())) {&#xD;
        if (mws.get(i) + tolerance &lt; mw) {&#xD;
            b = false;&#xD;
            res.add(mw);&#xD;
        } else {&#xD;
            if (mws.get(i) - tolerance &lt; mw) {&#xD;
                b = false;&#xD;
            } else {&#xD;
                res.add(mws.get(i));&#xD;
                i++;&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    if (b == true) {&#xD;
        res.add(mw);&#xD;
    } else {&#xD;
        for (int j = i; j &lt; mws.size(); j++) {&#xD;
            res.add(mws.get(j));&#xD;
        }&#xD;
    }&#xD;
    return res;&#xD;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HX9hgBUTEemIe6OhVnSywA" name="xmlCreator" visibility="public" method="_HYAk0hUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HX_WsBUTEemIe6OhVnSywA" name="c" type="_EHPXoBUTEemIe6OhVnSywA"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HX_9wBUTEemIe6OhVnSywA" name="fields">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_HX_9wRUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HX_9whUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HX_9wxUTEemIe6OhVnSywA" name="xslts">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_HYAk0BUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HYAk0RUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HYAk0xUTEemIe6OhVnSywA" name="convertXML" visibility="public" method="_HYBL4BUTEemIe6OhVnSywA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HYBy8BUTEemIe6OhVnSywA" name="convertXMLFromFile" visibility="public" isStatic="true" method="_HYDBEBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HYBy8RUTEemIe6OhVnSywA" name="name"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HYBy8hUTEemIe6OhVnSywA" name="path"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HYCaABUTEemIe6OhVnSywA" name="xslts">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_HYCaARUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HYCaAhUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HYDBERUTEemIe6OhVnSywA" name="generateDocument" visibility="public" method="_HYFdUBUTEemIe6OhVnSywA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HYGEYBUTEemIe6OhVnSywA" name="generateOcurrenceMatrix" visibility="private" method="_HYGEYRUTEemIe6OhVnSywA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HYGrcBUTEemIe6OhVnSywA" name="createOccurrenceMatrix" visibility="private" method="_HYIgoBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HYHSgBUTEemIe6OhVnSywA" name="selectedlanes">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_HYHSgRUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HYHSghUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HYH5kBUTEemIe6OhVnSywA" name="tolerance">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HYH5kRUTEemIe6OhVnSywA" name="mws">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_KgG0cPaLEeW5KOK8aDMdgA"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_HYH5khUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HYH5kxUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HYIgoRUTEemIe6OhVnSywA" name="getMWs" visibility="private" method="_HYJuwBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HYJHsBUTEemIe6OhVnSywA" name="selectedlanes">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_HYJHsRUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HYJHshUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HYJHsxUTEemIe6OhVnSywA" name="tolerance">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HYJuwRUTEemIe6OhVnSywA" name="insertSortMWs" visibility="private" isStatic="true" method="_HYK84hUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HYJuwhUTEemIe6OhVnSywA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_KgG0cPaLEeW5KOK8aDMdgA"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_HYKV0BUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HYKV0RUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HYKV0hUTEemIe6OhVnSywA" name="mws">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_KgG0cPaLEeW5KOK8aDMdgA"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_HYKV0xUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HYKV1BUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HYK84BUTEemIe6OhVnSywA" name="mw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HYK84RUTEemIe6OhVnSywA" name="tolerance">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_HYQccBUTEemIe6OhVnSywA" name="Step2" visibility="public">
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HYRqkBUTEemIe6OhVnSywA" name="nc" visibility="private" type="_HUSicBUTEemIe6OhVnSywA" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HYSRoBUTEemIe6OhVnSywA" name="edit" visibility="private" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HYSRoRUTEemIe6OhVnSywA" name="initialexperiments" visibility="private" type="_EJs1wBUTEemIe6OhVnSywA" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_HYSRohUTEemIe6OhVnSywA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HYS4sBUTEemIe6OhVnSywA" value="*"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HYXxMBUTEemIe6OhVnSywA" name="jLabel1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HYXxMRUTEemIe6OhVnSywA" name="jLabel3" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HYYYQBUTEemIe6OhVnSywA" name="jLabel4" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HYYYQRUTEemIe6OhVnSywA" name="jLabel5" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HYYYQhUTEemIe6OhVnSywA" name="jLabel6" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HYY_UBUTEemIe6OhVnSywA" name="jLabel8" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HYY_URUTEemIe6OhVnSywA" name="jLabel9" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HYZmYBUTEemIe6OhVnSywA" name="jPanel1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HYcCoBUTEemIe6OhVnSywA" name="jPanel2" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HYcCoRUTEemIe6OhVnSywA" name="jScrollPane4" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HYcpsBUTEemIe6OhVnSywA" name="jSeparator1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HYcpsRUTEemIe6OhVnSywA" name="jSeparator2" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HYdQwBUTEemIe6OhVnSywA" name="jSeparator3" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HYd30BUTEemIe6OhVnSywA" name="jbBack" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HYd30RUTEemIe6OhVnSywA" name="jbNext" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HYd30hUTEemIe6OhVnSywA" name="jcbincludemarkers" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HYee4BUTEemIe6OhVnSywA" name="jtExperiments" visibility="private" isUnique="false"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HYUt4hUTEemIe6OhVnSywA" name="Step2" specification="_HYS4sRUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    initComponents();&#xD;
    this.nc = nc;&#xD;
    this.edit = edit;&#xD;
    ArrayList&lt;Experiment> availablexperiments = nc.getNonSelectedExperiments();&#xD;
    ArrayList&lt;Experiment> selectedexperiments = nc.getSelectedExperiments();&#xD;
    initialexperiments = selectedexperiments;&#xD;
    updateexperiments();&#xD;
    jcbincludemarkers.setSelected(nc.isMarkers());&#xD;
    this.setModal(true);&#xD;
    getRootPane().setDefaultButton(jbNext);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HYVU8BUTEemIe6OhVnSywA" name="updateexperiments" specification="_HYUt4xUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    ArrayList&lt;Experiment> experiments = nc.getNonSelectedExperiments();&#xD;
    String[] names = { &quot;Selected&quot;, &quot;Experiment&quot;, &quot;Date&quot;, &quot;Author&quot;, &quot;Marker&quot;, &quot;Comments&quot; };&#xD;
    Object[][] data = new Object[experiments.size()][6];&#xD;
    // We update the table&#xD;
    for (int i = 0; i &lt; experiments.size(); i++) {&#xD;
        data[i][0] = nc.getSelectedExperiments().contains(experiments.get(i));&#xD;
        data[i][1] = experiments.get(i).getName();&#xD;
        data[i][2] = experiments.get(i).getDate().toString();&#xD;
        data[i][3] = experiments.get(i).getUser().getUsername();&#xD;
        data[i][4] = experiments.get(i).getMarker().getName();&#xD;
        data[i][5] = experiments.get(i).getComments();&#xD;
    }&#xD;
    // Operations to change the model, we disable the edition of the date&#xD;
    DefaultTableModel model = new DefaultTableModel(data, names) {&#xD;
&#xD;
        public boolean isCellEditable(int rowIndex, int mColIndex) {&#xD;
            if (mColIndex == 0) {&#xD;
                return true;&#xD;
            } else {&#xD;
                return false;&#xD;
            }&#xD;
        }&#xD;
&#xD;
        public Class getColumnClass(int columnIndex) {&#xD;
            if (columnIndex == 0) {&#xD;
                return java.lang.Boolean.class;&#xD;
            } else {&#xD;
                return java.lang.Object.class;&#xD;
            }&#xD;
        }&#xD;
    };&#xD;
    model.addTableModelListener(this);&#xD;
    jtExperiments.setModel(model);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HYV8ABUTEemIe6OhVnSywA" name="initComponents" specification="_HYVU8RUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    jPanel1 = new javax.swing.JPanel();&#xD;
    jLabel1 = new javax.swing.JLabel();&#xD;
    jSeparator1 = new javax.swing.JSeparator();&#xD;
    jLabel3 = new javax.swing.JLabel();&#xD;
    jLabel4 = new javax.swing.JLabel();&#xD;
    jLabel5 = new javax.swing.JLabel();&#xD;
    jLabel8 = new javax.swing.JLabel();&#xD;
    jLabel9 = new javax.swing.JLabel();&#xD;
    jbNext = new javax.swing.JButton();&#xD;
    jbBack = new javax.swing.JButton();&#xD;
    jPanel2 = new javax.swing.JPanel();&#xD;
    jLabel6 = new javax.swing.JLabel();&#xD;
    jSeparator3 = new javax.swing.JSeparator();&#xD;
    jcbincludemarkers = new javax.swing.JCheckBox();&#xD;
    jScrollPane4 = new javax.swing.JScrollPane();&#xD;
    jtExperiments = new javax.swing.JTable();&#xD;
    jSeparator2 = new javax.swing.JSeparator();&#xD;
    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);&#xD;
    setTitle(&quot;Population Genetics&quot;);&#xD;
    setResizable(false);&#xD;
    jPanel1.setBackground(new java.awt.Color(254, 254, 254));&#xD;
    jPanel1.setPreferredSize(new java.awt.Dimension(178, 160));&#xD;
    jLabel1.setText(&quot;Steps&quot;);&#xD;
    jSeparator1.setBackground(new java.awt.Color(2, 2, 2));&#xD;
    jSeparator1.setForeground(new java.awt.Color(1, 1, 1));&#xD;
    // NOI18N&#xD;
    jLabel3.setFont(new java.awt.Font(&quot;Ubuntu&quot;, 1, 15));&#xD;
    jLabel3.setForeground(new java.awt.Color(0, 12, 255));&#xD;
    jLabel3.setText(&quot;2. Select Experiments&quot;);&#xD;
    jLabel4.setForeground(new java.awt.Color(4, 2, 2));&#xD;
    jLabel4.setText(&quot;3. Select Lanes&quot;);&#xD;
    jLabel5.setForeground(new java.awt.Color(1, 1, 1));&#xD;
    jLabel5.setText(&quot;4. Properties&quot;);&#xD;
    jLabel8.setForeground(new java.awt.Color(4, 2, 2));&#xD;
    jLabel8.setText(&quot;1. General Properties&quot;);&#xD;
    jLabel9.setForeground(new java.awt.Color(1, 1, 1));&#xD;
    jLabel9.setText(&quot;5. Export options&quot;);&#xD;
    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);&#xD;
    jPanel1.setLayout(jPanel1Layout);&#xD;
    jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel1Layout.createSequentialGroup().addContainerGap().addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jSeparator1).addGroup(jPanel1Layout.createSequentialGroup().addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel1).addComponent(jLabel3).addComponent(jLabel4).addComponent(jLabel5).addComponent(jLabel8).addComponent(jLabel9)).addGap(0, 3, Short.MAX_VALUE))).addGap(6, 6, 6)));&#xD;
    jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel1Layout.createSequentialGroup().addContainerGap().addComponent(jLabel1).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addGap(7, 7, 7).addComponent(jLabel8).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel3).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel4).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel5).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel9).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jbNext.setText(&quot;Next >&quot;);&#xD;
    jbNext.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbNextActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jbBack.setText(&quot;&lt; Back&quot;);&#xD;
    jbBack.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbBackActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jLabel6.setText(&quot;Step 2. Select Experiments&quot;);&#xD;
    jcbincludemarkers.setText(&quot;Include markers of the experiments in comparison&quot;);&#xD;
    jtExperiments.setModel(new javax.swing.table.DefaultTableModel(new Object[][] { { null, null, null, null }, { null, null, null, null }, { null, null, null, null }, { null, null, null, null } }, new String[] { &quot;Title 1&quot;, &quot;Title 2&quot;, &quot;Title 3&quot;, &quot;Title 4&quot; }));&#xD;
    jScrollPane4.setViewportView(jtExperiments);&#xD;
    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);&#xD;
    jPanel2.setLayout(jPanel2Layout);&#xD;
    jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jSeparator3).addGroup(jPanel2Layout.createSequentialGroup().addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 491, javax.swing.GroupLayout.PREFERRED_SIZE).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)).addGroup(jPanel2Layout.createSequentialGroup().addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel6).addComponent(jcbincludemarkers, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE)).addGap(0, 0, Short.MAX_VALUE)));&#xD;
    jPanel2Layout.setVerticalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel2Layout.createSequentialGroup().addContainerGap().addComponent(jLabel6).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 409, Short.MAX_VALUE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jcbincludemarkers).addGap(4, 4, 4)));&#xD;
    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());&#xD;
    getContentPane().setLayout(layout);&#xD;
    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addGroup(layout.createSequentialGroup().addComponent(jbBack).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jbNext)).addGroup(layout.createSequentialGroup().addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))).addGap(0, 0, Short.MAX_VALUE)).addComponent(jSeparator2)).addContainerGap()));&#xD;
    layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 491, Short.MAX_VALUE).addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jbNext).addComponent(jbBack)).addContainerGap()));&#xD;
    pack();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HYWjERUTEemIe6OhVnSywA" name="jbNextActionPerformed" specification="_HYV8ARUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    if (nc.getSelectedExperiments().isEmpty()) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;Select at least an experiment&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
    } else {&#xD;
        nc.setMarkers(jcbincludemarkers.isSelected());&#xD;
        //            if(!allwithsamemarker(nc.getSelectedExperiments())){&#xD;
        //                JOptionPane.showMessageDialog(this, &quot;All the selected experiments should be normalised using the same marker&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
        //                return;&#xD;
        //            }&#xD;
        nc.setNonSelectedLanes(new ArrayList&lt;LaneDB>());&#xD;
        for (Experiment e : nc.getSelectedExperiments()) {&#xD;
            ArrayList&lt;LaneDB> lanes = getlanesexperiment(e.getId(), true);&#xD;
            for (LaneDB l : lanes) {&#xD;
                if (jcbincludemarkers.isSelected()) {&#xD;
                    nc.getNonSelectedLanes().add(l);&#xD;
                } else if (!l.isIsMarker()) {&#xD;
                    nc.getNonSelectedLanes().add(l);&#xD;
                }&#xD;
            }&#xD;
        }&#xD;
        dispose();&#xD;
        Step3 step3 = new Step3(nc, edit);&#xD;
        step3.setVisible(true);&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HYXKIhUTEemIe6OhVnSywA" name="jbBackActionPerformed" specification="_HYXKIBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbBackActionPerformed&#xD;
    nc.setMarkers(jcbincludemarkers.isSelected());&#xD;
    dispose();&#xD;
    Step1 step1 = new Step1(nc, edit);&#xD;
    step1.setVisible(true);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HYfF8BUTEemIe6OhVnSywA" name="tableChanged" specification="_HYee4RUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    int row = e.getFirstRow();&#xD;
    int column = e.getColumn();&#xD;
    Object cellValue = jtExperiments.getValueAt(row, column);&#xD;
    if ((boolean) cellValue) {&#xD;
        nc.getSelectedExperiments().add(nc.getNonSelectedExperiments().get(row));&#xD;
    } else {&#xD;
        nc.getSelectedExperiments().remove(nc.getNonSelectedExperiments().get(row));&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HYS4sRUTEemIe6OhVnSywA" name="Step2" visibility="public" method="_HYUt4hUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HYUt4BUTEemIe6OhVnSywA" name="nc" type="_HUSicBUTEemIe6OhVnSywA"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HYUt4RUTEemIe6OhVnSywA" name="edit">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HYUt4xUTEemIe6OhVnSywA" name="updateexperiments" visibility="public" method="_HYVU8BUTEemIe6OhVnSywA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HYVU8RUTEemIe6OhVnSywA" name="initComponents" visibility="private" method="_HYV8ABUTEemIe6OhVnSywA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HYV8ARUTEemIe6OhVnSywA" name="jbNextActionPerformed" visibility="private" method="_HYWjERUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HYWjEBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HYXKIBUTEemIe6OhVnSywA" name="jbBackActionPerformed" visibility="private" method="_HYXKIhUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HYXKIRUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HYee4RUTEemIe6OhVnSywA" name="tableChanged" visibility="public" method="_HYfF8BUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HYee4hUTEemIe6OhVnSywA" name="e"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_HYj-cBUTEemIe6OhVnSywA" name="Transformer" visibility="public">
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HYklgRUTEemIe6OhVnSywA" name="xmlfilePath" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HYlMkBUTEemIe6OhVnSywA" name="xslts" visibility="private" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_HYlMkRUTEemIe6OhVnSywA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HYlMkhUTEemIe6OhVnSywA" value="*"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HYlzoBUTEemIe6OhVnSywA" name="selected_xslts" visibility="private" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_HYlzoRUTEemIe6OhVnSywA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HYlzohUTEemIe6OhVnSywA" value="*"/>
              <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_HYlzoxUTEemIe6OhVnSywA" name="defaultValue">
                <language>JAVA</language>
                <body>new ArrayList&lt;String>()</body>
              </defaultValue>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HYlzpBUTEemIe6OhVnSywA" name="edit" visibility="private" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HYmasBUTEemIe6OhVnSywA" name="name" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HYtIYhUTEemIe6OhVnSywA" name="jLabel2" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HYtvcBUTEemIe6OhVnSywA" name="jLabel6" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HYtvcRUTEemIe6OhVnSywA" name="jPanel2" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HYuWgBUTEemIe6OhVnSywA" name="jScrollPane4" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HYuWgRUTEemIe6OhVnSywA" name="jSeparator2" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HYu9kBUTEemIe6OhVnSywA" name="jSeparator3" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HYu9kRUTEemIe6OhVnSywA" name="jbBack" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HYu9khUTEemIe6OhVnSywA" name="jbDeselect" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HYvkoBUTEemIe6OhVnSywA" name="jbNext" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HYvkoRUTEemIe6OhVnSywA" name="jbSelectAll" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HYvkohUTEemIe6OhVnSywA" name="jtLanes" visibility="private" isUnique="false"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HYo28hUTEemIe6OhVnSywA" name="Transformer" specification="_HYmasRUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    initComponents();&#xD;
    this.xmlfilePath = xmlfilePath;&#xD;
    this.edit = edit;&#xD;
    this.name = name;&#xD;
    xslts = getXSLTs();&#xD;
    Collections.sort(xslts.subList(0, xslts.size()));&#xD;
    updatexslts(xslts);&#xD;
    this.setModal(true);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HYpeAxUTEemIe6OhVnSywA" name="getXSLTs" specification="_HYo28xUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    ArrayList&lt;String> xslts = new ArrayList&lt;String>();&#xD;
    String workingdir = System.getProperty(&quot;user.dir&quot;) + &quot;/xslts/&quot;;&#xD;
    File directory = new File(workingdir);&#xD;
    String[] files = directory.list();&#xD;
    int nFiles = files.length;&#xD;
    if (nFiles != 0) {&#xD;
        for (int i = 0; i &lt; nFiles; i++) {&#xD;
            if (//encuentra los archivos .xls y almacena su ruta de acceso&#xD;
            files[i].contains(&quot;.xsl&quot;)) {&#xD;
                String name = files[i].substring(0, files[i].indexOf('.'));&#xD;
                xslts.add(name);&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    return xslts;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HYqsIxUTEemIe6OhVnSywA" name="updatexslts" specification="_HYqFEBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    String[] names = { &quot;Selected&quot;, &quot;Format&quot; };&#xD;
    Object[][] data = new Object[xslts.size()][names.length];&#xD;
    // We update the table&#xD;
    for (int i = 0; i &lt; xslts.size(); i++) {&#xD;
        data[i][0] = false;&#xD;
        data[i][1] = xslts.get(i);&#xD;
    }&#xD;
    // Operations to change the model, we disable the edition of the date&#xD;
    DefaultTableModel model = new DefaultTableModel(data, names) {&#xD;
&#xD;
        public boolean isCellEditable(int rowIndex, int mColIndex) {&#xD;
            if (mColIndex == 0) {&#xD;
                return true;&#xD;
            } else {&#xD;
                return false;&#xD;
            }&#xD;
        }&#xD;
&#xD;
        public Class getColumnClass(int columnIndex) {&#xD;
            if (columnIndex == 0) {&#xD;
                return java.lang.Boolean.class;&#xD;
            } else {&#xD;
                return java.lang.Object.class;&#xD;
            }&#xD;
        }&#xD;
    };&#xD;
    model.addTableModelListener(this);&#xD;
    jtLanes.setModel(model);&#xD;
    getRootPane().setDefaultButton(jbNext);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HYrTMBUTEemIe6OhVnSywA" name="initComponents" specification="_HYqsJBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    jbNext = new javax.swing.JButton();&#xD;
    jbBack = new javax.swing.JButton();&#xD;
    jPanel2 = new javax.swing.JPanel();&#xD;
    jLabel6 = new javax.swing.JLabel();&#xD;
    jSeparator3 = new javax.swing.JSeparator();&#xD;
    jScrollPane4 = new javax.swing.JScrollPane();&#xD;
    jtLanes = new javax.swing.JTable();&#xD;
    jbDeselect = new javax.swing.JButton();&#xD;
    jbSelectAll = new javax.swing.JButton();&#xD;
    jLabel2 = new javax.swing.JLabel();&#xD;
    jSeparator2 = new javax.swing.JSeparator();&#xD;
    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);&#xD;
    setTitle(&quot;Population Genetics&quot;);&#xD;
    setResizable(false);&#xD;
    jbNext.setText(&quot;Finish&quot;);&#xD;
    jbNext.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbNextActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jbBack.setText(&quot;Cancel&quot;);&#xD;
    jbBack.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbBackActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jLabel6.setText(&quot;Export options to transform a GelJXML file&quot;);&#xD;
    jtLanes.setModel(new javax.swing.table.DefaultTableModel(new Object[][] { { null, null, null, null }, { null, null, null, null }, { null, null, null, null }, { null, null, null, null } }, new String[] { &quot;Title 1&quot;, &quot;Title 2&quot;, &quot;Title 3&quot;, &quot;Title 4&quot; }));&#xD;
    jScrollPane4.setViewportView(jtLanes);&#xD;
    jbDeselect.setText(&quot;Deselect All&quot;);&#xD;
    jbDeselect.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbDeselectActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jbSelectAll.setText(&quot;Select All&quot;);&#xD;
    jbSelectAll.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbSelectAllActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jLabel2.setText(&quot;Select the format (or formats) to export the selected lanes:&quot;);&#xD;
    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);&#xD;
    jPanel2.setLayout(jPanel2Layout);&#xD;
    jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jSeparator3).addGroup(jPanel2Layout.createSequentialGroup().addComponent(jLabel6).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)).addGroup(jPanel2Layout.createSequentialGroup().addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addGroup(jPanel2Layout.createSequentialGroup().addComponent(jbSelectAll).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jbDeselect)).addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 673, javax.swing.GroupLayout.PREFERRED_SIZE)).addComponent(jLabel2)).addGap(0, 0, Short.MAX_VALUE)));&#xD;
    jPanel2Layout.setVerticalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel2Layout.createSequentialGroup().addContainerGap().addComponent(jLabel6).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel2).addGap(15, 15, 15).addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 403, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jbDeselect).addComponent(jbSelectAll)).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());&#xD;
    getContentPane().setLayout(layout);&#xD;
    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addGap(0, 0, Short.MAX_VALUE)).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addComponent(jbBack).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jbNext)).addComponent(jSeparator2)))).addContainerGap()));&#xD;
    layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 4, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jbBack).addComponent(jbNext)).addContainerGap()));&#xD;
    pack();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HYr6QBUTEemIe6OhVnSywA" name="jbNextActionPerformed" specification="_HYrTMRUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    if (selected_xslts.isEmpty()) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;Select at least a system to export&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
        return;&#xD;
    }&#xD;
    //Comparison c = nc.toComparison();&#xD;
    dispose();&#xD;
    try {&#xD;
        convertXMLFromFile(this.name, this.xmlfilePath, selected_xslts);&#xD;
        JOptionPane.showMessageDialog(this, &quot;Export process has been completed&quot;, &quot;Export&quot;, INFORMATION_MESSAGE, null);&#xD;
    } catch (Exception ex) {&#xD;
        Logger.getLogger(Transformer.class.getName()).log(Level.SEVERE, null, ex);&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HYr6QxUTEemIe6OhVnSywA" name="jbBackActionPerformed" specification="_HYr6QRUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbBackActionPerformed&#xD;
    dispose();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HYshUhUTEemIe6OhVnSywA" name="jbSelectAllActionPerformed" specification="_HYshUBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    for (int i = 0; i &lt; jtLanes.getModel().getRowCount(); i++) {&#xD;
        jtLanes.setValueAt(true, i, 0);&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HYtIYRUTEemIe6OhVnSywA" name="jbDeselectActionPerformed" specification="_HYshUxUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    for (int i = 0; i &lt; jtLanes.getModel().getRowCount(); i++) {&#xD;
        jtLanes.setValueAt(false, i, 0);&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HYwLshUTEemIe6OhVnSywA" name="tableChanged" specification="_HYwLsBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    int row = e.getFirstRow();&#xD;
    int column = e.getColumn();&#xD;
    Object cellValue = jtLanes.getValueAt(row, column);&#xD;
    if ((boolean) cellValue) {&#xD;
        selected_xslts.add(xslts.get(row));&#xD;
    } else {&#xD;
        selected_xslts.remove(xslts.get(row));&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HYmasRUTEemIe6OhVnSywA" name="Transformer" visibility="public" method="_HYo28hUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HYoP4RUTEemIe6OhVnSywA" name="name"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HYo28BUTEemIe6OhVnSywA" name="xmlfilePath"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HYo28RUTEemIe6OhVnSywA" name="edit">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HYo28xUTEemIe6OhVnSywA" name="getXSLTs" visibility="private" method="_HYpeAxUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HYpeABUTEemIe6OhVnSywA" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_HYpeARUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HYpeAhUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HYqFEBUTEemIe6OhVnSywA" name="updatexslts" visibility="public" method="_HYqsIxUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HYqsIBUTEemIe6OhVnSywA" name="xslts">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_HYqsIRUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HYqsIhUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HYqsJBUTEemIe6OhVnSywA" name="initComponents" visibility="private" method="_HYrTMBUTEemIe6OhVnSywA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HYrTMRUTEemIe6OhVnSywA" name="jbNextActionPerformed" visibility="private" method="_HYr6QBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HYrTMhUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HYr6QRUTEemIe6OhVnSywA" name="jbBackActionPerformed" visibility="private" method="_HYr6QxUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HYr6QhUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HYshUBUTEemIe6OhVnSywA" name="jbSelectAllActionPerformed" visibility="private" method="_HYshUhUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HYshURUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HYshUxUTEemIe6OhVnSywA" name="jbDeselectActionPerformed" visibility="private" method="_HYtIYRUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HYtIYBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HYwLsBUTEemIe6OhVnSywA" name="tableChanged" visibility="public" method="_HYwLshUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HYwLsRUTEemIe6OhVnSywA" name="e"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_HY2SUBUTEemIe6OhVnSywA" name="Step4" visibility="public">
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HY25YRUTEemIe6OhVnSywA" name="nc" visibility="private" type="_HUSicBUTEemIe6OhVnSywA" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HY25YhUTEemIe6OhVnSywA" name="edit" visibility="private" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HY8Y8BUTEemIe6OhVnSywA" name="jLabel1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HY8Y8RUTEemIe6OhVnSywA" name="jLabel10" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HY8Y8hUTEemIe6OhVnSywA" name="jLabel11" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HY9AABUTEemIe6OhVnSywA" name="jLabel12" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HY9AARUTEemIe6OhVnSywA" name="jLabel13" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HY9AAhUTEemIe6OhVnSywA" name="jLabel14" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HY9AAxUTEemIe6OhVnSywA" name="jLabel3" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HY9nEBUTEemIe6OhVnSywA" name="jLabel4" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HY9nERUTEemIe6OhVnSywA" name="jLabel5" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HY9nEhUTEemIe6OhVnSywA" name="jLabel6" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HY-OIBUTEemIe6OhVnSywA" name="jLabel9" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HY-OIRUTEemIe6OhVnSywA" name="jPanel1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HY-1MBUTEemIe6OhVnSywA" name="jPanel2" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HY-1MRUTEemIe6OhVnSywA" name="jScrollPane1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HY-1MhUTEemIe6OhVnSywA" name="jScrollPane2" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HY_cQBUTEemIe6OhVnSywA" name="jSeparator1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HY_cQRUTEemIe6OhVnSywA" name="jSeparator2" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HY_cQhUTEemIe6OhVnSywA" name="jSeparator3" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HZADUBUTEemIe6OhVnSywA" name="jbAddField" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HZADURUTEemIe6OhVnSywA" name="jbBack" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HZADUhUTEemIe6OhVnSywA" name="jbDeleteField" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HZAqYBUTEemIe6OhVnSywA" name="jbFinish" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HZAqYRUTEemIe6OhVnSywA" name="jlAvailable1" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HZAqYhUTEemIe6OhVnSywA" name="jlSelected" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_HZBRcBUTEemIe6OhVnSywA" name="jtfTolerance" visibility="private" isUnique="false"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HY5VoBUTEemIe6OhVnSywA" name="Step4" specification="_HY25YxUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    initComponents();&#xD;
    this.nc = nc;&#xD;
    this.edit = edit;&#xD;
    String similarity = nc.getSimilaritymethod();&#xD;
    String linkage = nc.getLinkage();&#xD;
    double tolerance = nc.getTolerance();&#xD;
    ArrayList&lt;String> availablefields = nc.getNonSelectedFields();&#xD;
    ArrayList&lt;String> selectedfields = nc.getSelectedFields();&#xD;
    jtfTolerance.setText(&quot;&quot; + tolerance);&#xD;
    DefaultListModel dmAvailable = new DefaultListModel();&#xD;
    if (availablefields != null) {&#xD;
        for (String s : availablefields) {&#xD;
            dmAvailable.addElement(s);&#xD;
        }&#xD;
    }&#xD;
    DefaultListModel dmSelected = new DefaultListModel();&#xD;
    if (selectedfields != null) {&#xD;
        for (String s : selectedfields) {&#xD;
            dmSelected.addElement(s);&#xD;
        }&#xD;
    }&#xD;
    jlAvailable1.setModel(dmAvailable);&#xD;
    jlAvailable1.addListSelectionListener(new AvailableListSelectionHandler());&#xD;
    jlSelected.setModel(dmSelected);&#xD;
    jlSelected.addListSelectionListener(new SelectedListSelectionHandler());&#xD;
    this.setModal(true);&#xD;
    getRootPane().setDefaultButton(jbFinish);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HY58sBUTEemIe6OhVnSywA" name="initComponents" specification="_HY5VoRUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    jPanel1 = new javax.swing.JPanel();&#xD;
    jLabel1 = new javax.swing.JLabel();&#xD;
    jSeparator1 = new javax.swing.JSeparator();&#xD;
    jLabel3 = new javax.swing.JLabel();&#xD;
    jLabel4 = new javax.swing.JLabel();&#xD;
    jLabel5 = new javax.swing.JLabel();&#xD;
    jLabel12 = new javax.swing.JLabel();&#xD;
    jLabel13 = new javax.swing.JLabel();&#xD;
    jbFinish = new javax.swing.JButton();&#xD;
    jbBack = new javax.swing.JButton();&#xD;
    jPanel2 = new javax.swing.JPanel();&#xD;
    jLabel6 = new javax.swing.JLabel();&#xD;
    jSeparator3 = new javax.swing.JSeparator();&#xD;
    jLabel9 = new javax.swing.JLabel();&#xD;
    jtfTolerance = new javax.swing.JTextField();&#xD;
    jLabel10 = new javax.swing.JLabel();&#xD;
    jScrollPane1 = new javax.swing.JScrollPane();&#xD;
    jlSelected = new javax.swing.JList();&#xD;
    jLabel11 = new javax.swing.JLabel();&#xD;
    jScrollPane2 = new javax.swing.JScrollPane();&#xD;
    jlAvailable1 = new javax.swing.JList();&#xD;
    jbAddField = new javax.swing.JButton();&#xD;
    jbDeleteField = new javax.swing.JButton();&#xD;
    jLabel14 = new javax.swing.JLabel();&#xD;
    jSeparator2 = new javax.swing.JSeparator();&#xD;
    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);&#xD;
    setTitle(&quot;Population Genetics&quot;);&#xD;
    setResizable(false);&#xD;
    jPanel1.setBackground(new java.awt.Color(254, 254, 254));&#xD;
    jPanel1.setPreferredSize(new java.awt.Dimension(178, 427));&#xD;
    jLabel1.setText(&quot;Steps&quot;);&#xD;
    jSeparator1.setBackground(new java.awt.Color(2, 2, 2));&#xD;
    jSeparator1.setForeground(new java.awt.Color(1, 1, 1));&#xD;
    jLabel3.setForeground(new java.awt.Color(1, 1, 1));&#xD;
    jLabel3.setText(&quot;2. Select Experiments&quot;);&#xD;
    jLabel4.setForeground(new java.awt.Color(4, 2, 2));&#xD;
    jLabel4.setText(&quot;3. Select Lanes&quot;);&#xD;
    // NOI18N&#xD;
    jLabel5.setFont(new java.awt.Font(&quot;Ubuntu&quot;, 1, 15));&#xD;
    jLabel5.setForeground(new java.awt.Color(0, 12, 255));&#xD;
    jLabel5.setText(&quot;4. Properties&quot;);&#xD;
    jLabel12.setForeground(new java.awt.Color(1, 1, 1));&#xD;
    jLabel12.setText(&quot;1. General Properties&quot;);&#xD;
    jLabel13.setForeground(new java.awt.Color(1, 1, 1));&#xD;
    jLabel13.setText(&quot;5. Export options&quot;);&#xD;
    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);&#xD;
    jPanel1.setLayout(jPanel1Layout);&#xD;
    jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel1Layout.createSequentialGroup().addContainerGap().addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jSeparator1).addGroup(jPanel1Layout.createSequentialGroup().addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel1).addComponent(jLabel3).addComponent(jLabel4).addComponent(jLabel5).addComponent(jLabel12).addComponent(jLabel13)).addGap(0, 30, Short.MAX_VALUE))).addContainerGap()));&#xD;
    jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel1Layout.createSequentialGroup().addContainerGap().addComponent(jLabel1).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addGap(7, 7, 7).addComponent(jLabel12).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel3).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel4).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel5).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel13).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jbFinish.setText(&quot;Next >&quot;);&#xD;
    jbFinish.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbFinishActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jbBack.setText(&quot;&lt; Back&quot;);&#xD;
    jbBack.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbBackActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jLabel6.setText(&quot;Step 4. Properties&quot;);&#xD;
    jLabel9.setText(&quot;Tolerance:&quot;);&#xD;
    jtfTolerance.setText(&quot;1.0&quot;);&#xD;
    jLabel10.setText(&quot;Available Fields&quot;);&#xD;
    jScrollPane1.setViewportView(jlSelected);&#xD;
    jLabel11.setText(&quot;Selected Fields&quot;);&#xD;
    jScrollPane2.setViewportView(jlAvailable1);&#xD;
    jbAddField.setText(&quot;    >>>    &quot;);&#xD;
    jbAddField.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbAddFieldActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jbDeleteField.setText(&quot;    &lt;&lt;&lt;    &quot;);&#xD;
    jbDeleteField.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbDeleteFieldActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jLabel14.setText(&quot;Select the fields to use as lane names:&quot;);&#xD;
    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);&#xD;
    jPanel2.setLayout(jPanel2Layout);&#xD;
    jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel2Layout.createSequentialGroup().addComponent(jLabel6).addGap(0, 0, Short.MAX_VALUE)).addComponent(jSeparator3).addGroup(jPanel2Layout.createSequentialGroup().addContainerGap().addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel2Layout.createSequentialGroup().addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup().addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addComponent(jbAddField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jbDeleteField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE).addGap(12, 12, 12)).addGroup(jPanel2Layout.createSequentialGroup().addComponent(jLabel14).addGap(0, 0, Short.MAX_VALUE)).addGroup(jPanel2Layout.createSequentialGroup().addComponent(jLabel9).addGap(18, 74, Short.MAX_VALUE).addComponent(jtfTolerance, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))).addContainerGap()).addGroup(jPanel2Layout.createSequentialGroup().addComponent(jLabel10).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jLabel11).addGap(51, 51, 51)))));&#xD;
    jPanel2Layout.setVerticalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel2Layout.createSequentialGroup().addContainerGap().addComponent(jLabel6).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel9).addComponent(jtfTolerance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel14).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING).addComponent(jLabel10)).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel2Layout.createSequentialGroup().addGap(135, 135, 135).addComponent(jbAddField).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jbDeleteField).addContainerGap()).addGroup(jPanel2Layout.createSequentialGroup().addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 309, Short.MAX_VALUE).addComponent(jScrollPane2))))));&#xD;
    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());&#xD;
    getContentPane().setLayout(layout);&#xD;
    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addGroup(layout.createSequentialGroup().addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(layout.createSequentialGroup().addComponent(jbBack).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jbFinish))).addGap(0, 0, Short.MAX_VALUE)).addComponent(jSeparator2)).addContainerGap()));&#xD;
    layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jbFinish).addComponent(jbBack)).addContainerGap()));&#xD;
    pack();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HY6jwRUTEemIe6OhVnSywA" name="jbFinishActionPerformed" specification="_HY58sRUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbFinishActionPerformed&#xD;
    double tolerance = Double.parseDouble(jtfTolerance.getText());&#xD;
    try {&#xD;
        if (tolerance &lt; 0) {&#xD;
            JOptionPane.showMessageDialog(this, &quot;Introduce a positive tolerance value&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
            return;&#xD;
        }&#xD;
        nc.setTolerance(tolerance);&#xD;
        nc.setSelectedFields(new ArrayList&lt;String>());&#xD;
        nc.setNonSelectedFields(new ArrayList&lt;String>());&#xD;
        DefaultListModel dmSelected = (DefaultListModel) jlSelected.getModel();&#xD;
        DefaultListModel dmAvailable = (DefaultListModel) jlAvailable1.getModel();&#xD;
        for (Object o : dmSelected.toArray()) {&#xD;
            nc.getSelectedFields().add((String) o);&#xD;
        }&#xD;
        for (Object o : dmAvailable.toArray()) {&#xD;
            nc.getNonSelectedFields().add((String) o);&#xD;
        }&#xD;
        if (nc.getSelectedFields().isEmpty()) {&#xD;
            JOptionPane.showMessageDialog(this, &quot;Select at least a field to show in the dendrogram&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
            return;&#xD;
        }&#xD;
        dispose();&#xD;
        Step5 step5 = new Step5(nc, edit);&#xD;
        step5.setVisible(true);&#xD;
    } catch (NumberFormatException e) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;Introduce a tolerance value&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
        return;&#xD;
    } catch (NullPointerException e) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;Introduce a tolerance value&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
        return;&#xD;
    }&#xD;
//        PleaseWait pw = new PleaseWait((JDialog) null, false);&#xD;
//        pw.setAlwaysOnTop(true);&#xD;
//        pw.toFront();&#xD;
//        String similarity = (String) jcbSimilarity.getSelectedItem();&#xD;
//        String linkage = (String) jcbLinkage.getSelectedItem();&#xD;
//        double tolerance = Double.parseDouble(jtfTolerance.getText());&#xD;
//        try {&#xD;
//&#xD;
//            if (tolerance &lt; 0) {&#xD;
//                JOptionPane.showMessageDialog(this, &quot;Introduce a positive tolerance value&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
//                return;&#xD;
//            }&#xD;
//&#xD;
//            DefaultListModel dmSelected = (DefaultListModel) jlSelected.getModel();&#xD;
//            DefaultListModel dmAvailable = (DefaultListModel) jlAvailable1.getModel();&#xD;
//&#xD;
//            nc.setSelectedFields(new ArrayList&lt;String>());&#xD;
//            nc.setNonSelectedFields(new ArrayList&lt;String>());&#xD;
//&#xD;
//            for (Object o : dmSelected.toArray()) {&#xD;
//                nc.getSelectedFields().add((String) o);&#xD;
//            }&#xD;
//            for (Object o : dmAvailable.toArray()) {&#xD;
//                nc.getNonSelectedFields().add((String) o);&#xD;
//            }&#xD;
//&#xD;
//            if (nc.getSelectedFields().isEmpty()) {&#xD;
//                JOptionPane.showMessageDialog(this, &quot;Select at least a field to show in the dendrogram&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
//                return;&#xD;
//            }&#xD;
//&#xD;
//            nc.setSimilaritymethod(similarity);&#xD;
//            nc.setLinkage(linkage);&#xD;
//            nc.setTolerance(tolerance);&#xD;
//&#xD;
//        } catch (NumberFormatException e) {&#xD;
//            JOptionPane.showMessageDialog(this, &quot;Introduce a tolerance value&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
//            return;&#xD;
//        } catch (NullPointerException e) {&#xD;
//            JOptionPane.showMessageDialog(this, &quot;Introduce a tolerance value&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
//            return;&#xD;
//        }&#xD;
//&#xD;
//        Comparison c = nc.toComparison();&#xD;
//        dispose();&#xD;
//        if (edit) {&#xD;
//            updateComparison(c);&#xD;
//&#xD;
//            try {&#xD;
//&#xD;
//                if (jcbSimilarity.getSelectedIndex() > 4) {&#xD;
//                    int output = jcbOutput.getSelectedIndex();&#xD;
//                    if(output==2){&#xD;
//                        generateOcurrenceMatrix(c, nc.getSelectedFields());&#xD;
//                    }else{&#xD;
//                    if (output == 0) {&#xD;
//                        output = 1;&#xD;
//                    } else {&#xD;
//                        output = 3;&#xD;
//                    }&#xD;
//                    generateDendrogram(c, output, nc.getSelectedFields(), jCheckBox1.isSelected(), pw, jcbinvert.isSelected());&#xD;
//                }}&#xD;
//             else {&#xD;
//                    if (jcbOutput.getSelectedIndex() == 4) {&#xD;
//                        generateOcurrenceMatrix(c, nc.getSelectedFields());&#xD;
//                    } else {&#xD;
//                        generateDendrogram(c, jcbOutput.getSelectedIndex(), nc.getSelectedFields(), jCheckBox1.isSelected(), pw, jcbinvert.isSelected());&#xD;
//                    }&#xD;
//                }&#xD;
//&#xD;
//            } catch (Exception ex) {&#xD;
//                Logger.getLogger(Step4.class.getName()).log(Level.SEVERE, null, ex);&#xD;
//            }&#xD;
//&#xD;
//        } else {&#xD;
//            insertComparison(c);&#xD;
//            try {&#xD;
//                if (jcbSimilarity.getSelectedIndex() > 4) {&#xD;
//                    int output = jcbOutput.getSelectedIndex();&#xD;
//                    if(output==2){&#xD;
//                        generateOcurrenceMatrix(c, nc.getSelectedFields());&#xD;
//                    }else{&#xD;
//                    if (output == 0) {&#xD;
//                        output = 1;&#xD;
//                    } else {&#xD;
//                        output = 3;&#xD;
//                    }&#xD;
//                    generateDendrogram(c, output, nc.getSelectedFields(), jCheckBox1.isSelected(), pw, jcbinvert.isSelected());&#xD;
//                }}&#xD;
//             else {&#xD;
//                    if (jcbOutput.getSelectedIndex() == 4) {&#xD;
//                        generateOcurrenceMatrix(c, nc.getSelectedFields());&#xD;
//                    } else {&#xD;
//                        generateDendrogram(c, jcbOutput.getSelectedIndex(), nc.getSelectedFields(), jCheckBox1.isSelected(), pw, jcbinvert.isSelected());&#xD;
//                    }&#xD;
//                }&#xD;
//            } catch (Exception ex) {&#xD;
//                Logger.getLogger(Step4.class.getName()).log(Level.SEVERE, null, ex);&#xD;
//            }&#xD;
//        }&#xD;
//        try {&#xD;
//            DefaultListModel dmSelected = (DefaultListModel) jlSelected.getModel();&#xD;
//            StandardUtils.save_comparisonconfig(similarity, linkage, tolerance, dmSelected.toArray());&#xD;
//        } catch (FileNotFoundException ex) {&#xD;
//            Logger.getLogger(Step4.class.getName()).log(Level.SEVERE, null, ex);&#xD;
//        } catch (UnsupportedEncodingException ex) {&#xD;
//            Logger.getLogger(Step4.class.getName()).log(Level.SEVERE, null, ex);&#xD;
//        }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HY7K0RUTEemIe6OhVnSywA" name="jbAddFieldActionPerformed" specification="_HY6jwhUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbAddFieldActionPerformed&#xD;
    int[] tomove = jlAvailable1.getSelectedIndices();&#xD;
    DefaultListModel dmSelected = (DefaultListModel) jlSelected.getModel();&#xD;
    DefaultListModel dmAvailable = (DefaultListModel) jlAvailable1.getModel();&#xD;
    if (tomove != null &amp;&amp; tomove.length != 0) {&#xD;
        for (int i : tomove) {&#xD;
            dmSelected.addElement(dmAvailable.get(i));&#xD;
            dmAvailable.remove(i);&#xD;
        }&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HY7x4BUTEemIe6OhVnSywA" name="jbDeleteFieldActionPerformed" specification="_HY7K0hUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbDeleteFieldActionPerformed&#xD;
    int[] tomove = jlSelected.getSelectedIndices();&#xD;
    DefaultListModel dmSelected = (DefaultListModel) jlSelected.getModel();&#xD;
    DefaultListModel dmAvailable = (DefaultListModel) jlAvailable1.getModel();&#xD;
    if (tomove != null &amp;&amp; tomove.length != 0) {&#xD;
        for (int i : tomove) {&#xD;
            dmAvailable.addElement(dmSelected.get(i));&#xD;
            dmSelected.remove(i);&#xD;
        }&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HY7x4xUTEemIe6OhVnSywA" name="jbBackActionPerformed" specification="_HY7x4RUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbBackActionPerformed&#xD;
    int tolerance = Integer.parseInt(jtfTolerance.getText());&#xD;
    DefaultListModel dmSelected = (DefaultListModel) jlSelected.getModel();&#xD;
    DefaultListModel dmAvailable = (DefaultListModel) jlAvailable1.getModel();&#xD;
    nc.setSelectedFields(new ArrayList&lt;String>());&#xD;
    nc.setNonSelectedFields(new ArrayList&lt;String>());&#xD;
    for (Object o : dmSelected.toArray()) {&#xD;
        nc.getSelectedFields().add((String) o);&#xD;
    }&#xD;
    for (Object o : dmAvailable.toArray()) {&#xD;
        nc.getNonSelectedFields().add((String) o);&#xD;
    }&#xD;
    nc.setTolerance(tolerance);&#xD;
    dispose();&#xD;
    Step3 step3 = new Step3(nc, edit);&#xD;
    step3.setVisible(true);&#xD;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HY25YxUTEemIe6OhVnSywA" name="Step4" visibility="public" method="_HY5VoBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HY4ukBUTEemIe6OhVnSywA" name="nc" type="_HUSicBUTEemIe6OhVnSywA"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HY4ukRUTEemIe6OhVnSywA" name="edit">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HY5VoRUTEemIe6OhVnSywA" name="initComponents" visibility="private" method="_HY58sBUTEemIe6OhVnSywA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HY58sRUTEemIe6OhVnSywA" name="jbFinishActionPerformed" visibility="private" method="_HY6jwRUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HY6jwBUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HY6jwhUTEemIe6OhVnSywA" name="jbAddFieldActionPerformed" visibility="private" method="_HY7K0RUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HY7K0BUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HY7K0hUTEemIe6OhVnSywA" name="jbDeleteFieldActionPerformed" visibility="private" method="_HY7x4BUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HY7K0xUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HY7x4RUTEemIe6OhVnSywA" name="jbBackActionPerformed" visibility="private" method="_HY7x4xUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HY7x4hUTEemIe6OhVnSywA" name="evt"/>
            </ownedOperation>
            <nestedClassifier xmi:type="uml:Class" xmi:id="_HZBRcRUTEemIe6OhVnSywA" name="AvailableListSelectionHandler" visibility="private">
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HZCfkBUTEemIe6OhVnSywA" name="valueChanged" specification="_HZB4gBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    jlSelected.setSelectedIndex(-1);&#xD;
</body>
              </ownedBehavior>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_HZB4gBUTEemIe6OhVnSywA" name="valueChanged" visibility="public" method="_HZCfkBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_HZB4gRUTEemIe6OhVnSywA" name="e"/>
              </ownedOperation>
            </nestedClassifier>
            <nestedClassifier xmi:type="uml:Class" xmi:id="_HZCfkRUTEemIe6OhVnSywA" name="SelectedListSelectionHandler" visibility="private">
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HZDGohUTEemIe6OhVnSywA" name="valueChanged" specification="_HZDGoBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    jlAvailable1.setSelectedIndex(-1);&#xD;
</body>
              </ownedBehavior>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_HZDGoBUTEemIe6OhVnSywA" name="valueChanged" visibility="public" method="_HZDGohUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_HZDGoRUTEemIe6OhVnSywA" name="e"/>
              </ownedOperation>
            </nestedClassifier>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_HZFi4BUTEemIe6OhVnSywA" name="Queries">
          <packagedElement xmi:type="uml:Class" xmi:id="_HZGxABUTEemIe6OhVnSywA" name="StudyQueries" visibility="public">
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HZH_IBUTEemIe6OhVnSywA" name="insertStudy" specification="_HZHYEBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Connection con = null;&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        PreparedStatement ps = con.prepareStatement(&quot;INSERT INTO Study (id, name, date, path, comments, fkUser)&quot; + &quot;VALUES (?,?,?,?,?,?)&quot;);&#xD;
        ps.setInt(1, s.getId());&#xD;
        ps.setString(2, s.getName());&#xD;
        ps.setDate(3, s.getDate());&#xD;
        ps.setString(4, s.getPath());&#xD;
        ps.setString(5, s.getComments());&#xD;
        ps.setInt(6, s.getUser().getId());&#xD;
        ps.executeUpdate();&#xD;
        ps.close();&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HZImMhUTEemIe6OhVnSywA" name="getStudies" specification="_HZH_IRUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Connection con = null;&#xD;
    Study s = null;&#xD;
    ArrayList&lt;Study> alu = new ArrayList&lt;>();&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        //mysql&#xD;
        //            PreparedStatement ps = con.prepareStatement(&quot;SELECT * FROM Study INNER JOIN User&quot;&#xD;
        //                    + &quot; ON Study.fkUser=User.id&quot;&#xD;
        //                    + &quot; WHERE Study.fkUser=?&quot;);&#xD;
        //javadb&#xD;
        PreparedStatement ps = con.prepareStatement(&quot;SELECT * FROM Study INNER JOIN User0&quot; + &quot; ON Study.fkUser=User0.id&quot; + &quot; WHERE Study.fkUser=?&quot;);&#xD;
        ps.setInt(1, userid);&#xD;
        ResultSet res = ps.executeQuery();&#xD;
        while (res.next()) {&#xD;
            s = new Study(res.getInt(1), res.getString(2), res.getDate(3), res.getString(4), res.getString(5), getUser(userid));&#xD;
            alu.add(s);&#xD;
        }&#xD;
        res.close();&#xD;
        ps.close();&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    return alu;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HZJNQBUTEemIe6OhVnSywA" name="lastStudyid" specification="_HZImMxUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Connection con = null;&#xD;
    int n = 0;&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        PreparedStatement ps = con.prepareStatement(&quot;SELECT id FROM Study &quot; + &quot;ORDER BY id DESC &quot;);&#xD;
        ResultSet res = ps.executeQuery();&#xD;
        if (res.next()) {&#xD;
            n = res.getInt(&quot;id&quot;) + 1;&#xD;
        }&#xD;
        res.close();&#xD;
        ps.close();&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    return n;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HZJ0URUTEemIe6OhVnSywA" name="updateStudy" specification="_HZJNQRUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Connection con = null;&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        PreparedStatement ps = con.prepareStatement(&quot;UPDATE Study &quot; + &quot;SET name=?, date=?, path=?, comments=? &quot; + &quot;WHERE id=?&quot;);&#xD;
        ps.setString(1, s.getName());&#xD;
        ps.setDate(2, s.getDate());&#xD;
        ps.setString(3, s.getPath());&#xD;
        ps.setString(4, s.getComments());&#xD;
        ps.setInt(5, id);&#xD;
        ps.executeUpdate();&#xD;
        ps.close();&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HZLCcRUTEemIe6OhVnSywA" name="updateStudynameorcomments" specification="_HZJ0UhUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Connection con = null;&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        // if nc is true, we change the name; otherwise, we change the comments&#xD;
        PreparedStatement ps = null;&#xD;
        if (nc) {&#xD;
            ps = con.prepareStatement(&quot;UPDATE Study &quot; + &quot;SET name=? &quot; + &quot;WHERE id=? &quot;);&#xD;
        } else {&#xD;
            ps = con.prepareStatement(&quot;UPDATE Study &quot; + &quot;SET comments=? &quot; + &quot;WHERE id=? &quot;);&#xD;
        }&#xD;
        ps.setString(1, change);&#xD;
        ps.setInt(2, id);&#xD;
        ps.executeUpdate();&#xD;
        ps.close();&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HZLpghUTEemIe6OhVnSywA" name="updateDate" specification="_HZLCchUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Connection con = null;&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        // if nc is true, we change the name; otherwise, we change the comments&#xD;
        PreparedStatement ps = con.prepareStatement(&quot;UPDATE Study &quot; + &quot;SET date=? &quot; + &quot;WHERE id=? &quot;);&#xD;
        ps.setDate(1, date);&#xD;
        ps.setInt(2, id);&#xD;
        ps.executeUpdate();&#xD;
        ps.close();&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HZMQkhUTEemIe6OhVnSywA" name="getStudy" specification="_HZLpgxUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Connection con = null;&#xD;
    Study s = null;&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        //mysql&#xD;
        //            PreparedStatement ps = con.prepareStatement(&quot;SELECT * FROM Study INNER JOIN User&quot;&#xD;
        //                    + &quot; ON Study.fkUser=User.id&quot;&#xD;
        //                    + &quot; WHERE Study.id=?&quot;);&#xD;
        //javadb&#xD;
        PreparedStatement ps = con.prepareStatement(&quot;SELECT * FROM Study INNER JOIN User0&quot; + &quot; ON Study.fkUser=User0.id&quot; + &quot; WHERE Study.id=?&quot;);&#xD;
        ps.setInt(1, id);&#xD;
        ResultSet res = ps.executeQuery();&#xD;
        if (res.next()) {&#xD;
            s = new Study(res.getInt(1), res.getString(2), res.getDate(3), res.getString(4), res.getString(5), getUser(res.getInt(6)));&#xD;
        }&#xD;
        res.close();&#xD;
        ps.close();&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    return s;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HZNesBUTEemIe6OhVnSywA" name="existsstudy" specification="_HZM3oBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    boolean res1 = false;&#xD;
    Connection con = null;&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        //mysql&#xD;
        //            PreparedStatement ps = con.prepareStatement(&quot;SELECT * FROM Study INNER JOIN User&quot;&#xD;
        //                    + &quot; ON Study.fkUser=User.id&quot;&#xD;
        //                    + &quot; WHERE User.id=? AND Study.name=?&quot;);&#xD;
        //javadb&#xD;
        PreparedStatement ps = con.prepareStatement(&quot;SELECT * FROM Study INNER JOIN User0&quot; + &quot; ON Study.fkUser=User0.id&quot; + &quot; WHERE User.id=? AND Study.name=?&quot;);&#xD;
        ps.setInt(1, userid);&#xD;
        ps.setString(2, name);&#xD;
        ResultSet res = ps.executeQuery();&#xD;
        if (res.next()) {&#xD;
            res1 = true;&#xD;
        }&#xD;
        res.close();&#xD;
        ps.close();&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    return res1;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HZNesxUTEemIe6OhVnSywA" name="deletestudy" specification="_HZNesRUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Connection con = null;&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        PreparedStatement ps = con.prepareStatement(&quot;DELETE FROM Study &quot; + &quot;WHERE id=?&quot;);&#xD;
        ps.setInt(1, studyid);&#xD;
        ps.executeUpdate();&#xD;
        ps.close();&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HZHYEBUTEemIe6OhVnSywA" name="insertStudy" visibility="public" isStatic="true" method="_HZH_IBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HZHYERUTEemIe6OhVnSywA" name="s" type="_EFkjsBUTEemIe6OhVnSywA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HZH_IRUTEemIe6OhVnSywA" name="getStudies" visibility="public" isStatic="true" method="_HZImMhUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HZH_IhUTEemIe6OhVnSywA" type="_EFkjsBUTEemIe6OhVnSywA" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_HZH_IxUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HZImMBUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HZImMRUTEemIe6OhVnSywA" name="userid">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HZImMxUTEemIe6OhVnSywA" name="lastStudyid" visibility="public" isStatic="true" method="_HZJNQBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HZImNBUTEemIe6OhVnSywA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HZJNQRUTEemIe6OhVnSywA" name="updateStudy" visibility="public" isStatic="true" method="_HZJ0URUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HZJNQhUTEemIe6OhVnSywA" name="id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HZJ0UBUTEemIe6OhVnSywA" name="s" type="_EFkjsBUTEemIe6OhVnSywA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HZJ0UhUTEemIe6OhVnSywA" name="updateStudynameorcomments" visibility="public" isStatic="true" method="_HZLCcRUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HZKbYBUTEemIe6OhVnSywA" name="id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HZKbYRUTEemIe6OhVnSywA" name="change"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HZLCcBUTEemIe6OhVnSywA" name="nc">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HZLCchUTEemIe6OhVnSywA" name="updateDate" visibility="public" isStatic="true" method="_HZLpghUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HZLpgBUTEemIe6OhVnSywA" name="id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HZLpgRUTEemIe6OhVnSywA" name="date"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HZLpgxUTEemIe6OhVnSywA" name="getStudy" visibility="public" isStatic="true" method="_HZMQkhUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HZMQkBUTEemIe6OhVnSywA" type="_EFkjsBUTEemIe6OhVnSywA" direction="return"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HZMQkRUTEemIe6OhVnSywA" name="id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HZM3oBUTEemIe6OhVnSywA" name="existsstudy" visibility="public" isStatic="true" method="_HZNesBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HZM3oRUTEemIe6OhVnSywA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HZM3ohUTEemIe6OhVnSywA" name="name"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HZM3oxUTEemIe6OhVnSywA" name="userid">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HZNesRUTEemIe6OhVnSywA" name="deletestudy" visibility="public" isStatic="true" method="_HZNesxUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HZNeshUTEemIe6OhVnSywA" name="studyid">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_HZQiABUTEemIe6OhVnSywA" name="UnfinishedExperimentsQueries" visibility="public">
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HZRwIxUTEemIe6OhVnSywA" name="insertUnfinishedExperiment" specification="_HZRwIRUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Connection con = null;&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        PreparedStatement ps = con.prepareStatement(&quot;INSERT INTO UnfinishedExperiment (id, name, step, path, fkStudy)&quot; + &quot;VALUES (?,?,?,?,?)&quot;);&#xD;
        ps.setInt(1, s.getId());&#xD;
        ps.setString(2, s.getName());&#xD;
        ps.setInt(3, s.getStep());&#xD;
        ps.setString(4, &quot;&quot;);&#xD;
        ps.setInt(5, s.getStudy().getId());&#xD;
        ps.executeUpdate();&#xD;
        ps.close();&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HZS-QRUTEemIe6OhVnSywA" name="getUnfinishedExperiments" specification="_HZSXMBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Connection con = null;&#xD;
    UnfinishedExperiment s = null;&#xD;
    ArrayList&lt;UnfinishedExperiment> alu = new ArrayList&lt;>();&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        PreparedStatement ps = con.prepareStatement(&quot;SELECT * FROM UnfinishedExperiment INNER JOIN Study&quot; + &quot; ON UnfinishedExperiment.fkStudy=Study.id&quot; + &quot; WHERE UnfinishedExperiment.fkStudy=?&quot;);&#xD;
        ps.setInt(1, studyid);&#xD;
        ResultSet res = ps.executeQuery();&#xD;
        while (res.next()) {&#xD;
            s = new UnfinishedExperiment(res.getInt(1), res.getString(2), res.getInt(3), getStudy(studyid));&#xD;
            alu.add(s);&#xD;
        }&#xD;
        res.close();&#xD;
        ps.close();&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    return alu;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HZS-RBUTEemIe6OhVnSywA" name="lastUnfinishedExperimentid" specification="_HZS-QhUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Connection con = null;&#xD;
    int n = 0;&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        PreparedStatement ps = con.prepareStatement(&quot;SELECT id FROM UnfinishedExperiment &quot; + &quot;ORDER BY id DESC &quot;);&#xD;
        ResultSet res = ps.executeQuery();&#xD;
        if (res.next()) {&#xD;
            n = res.getInt(&quot;id&quot;) + 1;&#xD;
        }&#xD;
        res.close();&#xD;
        ps.close();&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    return n;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HZTlUhUTEemIe6OhVnSywA" name="deleteunfinishedexperiment" specification="_HZTlUBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Connection con = null;&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        PreparedStatement ps = con.prepareStatement(&quot;DELETE FROM UnfinishedExperiment &quot; + &quot;WHERE id=?&quot;);&#xD;
        ps.setInt(1, expid);&#xD;
        ps.executeUpdate();&#xD;
        ps.close();&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HZRwIRUTEemIe6OhVnSywA" name="insertUnfinishedExperiment" visibility="public" isStatic="true" method="_HZRwIxUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HZRwIhUTEemIe6OhVnSywA" name="s" type="_EBAMwBUTEemIe6OhVnSywA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HZSXMBUTEemIe6OhVnSywA" name="getUnfinishedExperiments" visibility="public" isStatic="true" method="_HZS-QRUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HZSXMRUTEemIe6OhVnSywA" type="_EBAMwBUTEemIe6OhVnSywA" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_HZSXMhUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HZSXMxUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HZS-QBUTEemIe6OhVnSywA" name="studyid">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HZS-QhUTEemIe6OhVnSywA" name="lastUnfinishedExperimentid" visibility="public" isStatic="true" method="_HZS-RBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HZS-QxUTEemIe6OhVnSywA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HZTlUBUTEemIe6OhVnSywA" name="deleteunfinishedexperiment" visibility="public" isStatic="true" method="_HZTlUhUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HZTlURUTEemIe6OhVnSywA" name="expid">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_HZXPsBUTEemIe6OhVnSywA" name="UserQueries" visibility="public">
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HZZE4BUTEemIe6OhVnSywA" name="insertUser" specification="_HZX2wBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Connection con = null;&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        // Mysql&#xD;
        //            PreparedStatement ps = con.prepareStatement(&quot;INSERT INTO User (id, userName, name, surname, fkLab)&quot;&#xD;
        //                    + &quot;VALUES (?,?,?,?,?)&quot;);&#xD;
        // JavaDB&#xD;
        PreparedStatement ps = con.prepareStatement(&quot;INSERT INTO User0 (id, userName, name, surname, fkLab)&quot; + &quot;VALUES (?,?,?,?,?)&quot;);&#xD;
        ps.setInt(1, u.getId());&#xD;
        ps.setString(2, u.getUsername());&#xD;
        ps.setString(3, u.getName());&#xD;
        ps.setString(4, u.getSurname());&#xD;
        ps.setInt(5, u.getLab().getId());&#xD;
        ps.executeUpdate();&#xD;
        ps.close();&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HZaTABUTEemIe6OhVnSywA" name="getUsers" specification="_HZZr8BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Connection con = null;&#xD;
    User u = null;&#xD;
    ArrayList&lt;User> alu = new ArrayList&lt;>();&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        //Mysql&#xD;
        //            PreparedStatement ps = con.prepareStatement(&quot;SELECT * FROM User INNER JOIN Lab&quot;&#xD;
        //                    + &quot; ON User.fkLab=Lab.id&quot;);&#xD;
        // JavaDB&#xD;
        PreparedStatement ps = con.prepareStatement(&quot;SELECT * FROM User0 INNER JOIN Lab&quot; + &quot; ON User0.fkLab=Lab.id&quot;);&#xD;
        ResultSet res = ps.executeQuery();&#xD;
        while (res.next()) {&#xD;
            //mysql&#xD;
            //                u = new User(res.getInt(&quot;User.id&quot;), res.getString(&quot;User.userName&quot;),&#xD;
            //                        res.getString(&quot;User.name&quot;), res.getString(&quot;User.surname&quot;),&#xD;
            //                        new Lab(res.getInt(&quot;Lab.id&quot;), res.getString(&quot;Lab.name&quot;),&#xD;
            //                                res.getString(&quot;Lab.city&quot;), res.getString(&quot;Lab.country&quot;)));&#xD;
            //javadb&#xD;
            u = new User(res.getInt(1), res.getString(2), res.getString(3), res.getString(4), new Lab(res.getInt(5), res.getString(7), res.getString(8), res.getString(9)));&#xD;
            alu.add(u);&#xD;
        }&#xD;
        res.close();&#xD;
        ps.close();&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    return alu;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HZaTAxUTEemIe6OhVnSywA" name="lastUserid" specification="_HZaTARUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Connection con = null;&#xD;
    int n = 0;&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        //Mysql&#xD;
        //            PreparedStatement ps = con.prepareStatement(&quot;SELECT id FROM User &quot;&#xD;
        //                    + &quot;ORDER BY id DESC &quot;&#xD;
        //                    + &quot;LIMIT 1&quot;);&#xD;
        //JavaDB&#xD;
        PreparedStatement ps = con.prepareStatement(&quot;SELECT id FROM User0 &quot; + &quot;ORDER BY id DESC &quot;);&#xD;
        ResultSet res = ps.executeQuery();&#xD;
        if (res.next()) {&#xD;
            n = res.getInt(&quot;id&quot;) + 1;&#xD;
        }&#xD;
        res.close();&#xD;
        ps.close();&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    return n;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HZbhIRUTEemIe6OhVnSywA" name="updateUser" specification="_HZa6EBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Connection con = null;&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        //Mysql&#xD;
        //            PreparedStatement ps = con.prepareStatement(&quot;UPDATE User &quot;&#xD;
        //                    + &quot;SET userName=?, name=?, surname=?, lab=? &quot;&#xD;
        //                    + &quot;WHERE id=?&quot;);&#xD;
        //JavaDB&#xD;
        PreparedStatement ps = con.prepareStatement(&quot;UPDATE User0 &quot; + &quot;SET userName=?, name=?, surname=?, lab=? &quot; + &quot;WHERE id=?&quot;);&#xD;
        ps.setString(1, u.getUsername());&#xD;
        ps.setString(2, u.getName());&#xD;
        ps.setString(3, u.getSurname());&#xD;
        ps.setInt(4, u.getLab().getId());&#xD;
        ps.setInt(5, id);&#xD;
        ps.executeUpdate();&#xD;
        ps.close();&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HZcIMhUTEemIe6OhVnSywA" name="getUser" specification="_HZbhIhUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Connection con = null;&#xD;
    User u = null;&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        //mysql&#xD;
        //            PreparedStatement ps = con.prepareStatement(&quot;SELECT * FROM User INNER JOIN Lab&quot;&#xD;
        //                    + &quot; ON User.fkLab=Lab.id&quot;&#xD;
        //                    + &quot; WHERE User.id=?&quot;);&#xD;
        //javadb&#xD;
        PreparedStatement ps = con.prepareStatement(&quot;SELECT * FROM User0 INNER JOIN Lab&quot; + &quot; ON User0.fkLab=Lab.id&quot; + &quot; WHERE User0.id=?&quot;);&#xD;
        ps.setInt(1, id);&#xD;
        ResultSet res = ps.executeQuery();&#xD;
        if (res.next()) {&#xD;
            //mysql&#xD;
            //                u = new User(res.getInt(&quot;User.id&quot;), res.getString(&quot;User.userName&quot;),&#xD;
            //                        res.getString(&quot;User.name&quot;), res.getString(&quot;User.surname&quot;),&#xD;
            //                        new Lab(res.getInt(&quot;Lab.id&quot;), res.getString(&quot;Lab.name&quot;),&#xD;
            //                                res.getString(&quot;Lab.city&quot;), res.getString(&quot;Lab.country&quot;)));&#xD;
            //javadb&#xD;
            u = new User(res.getInt(1), res.getString(2), res.getString(3), res.getString(4), new Lab(res.getInt(5), res.getString(7), res.getString(8), res.getString(9)));&#xD;
        }&#xD;
        res.close();&#xD;
        ps.close();&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    return u;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HZcvQhUTEemIe6OhVnSywA" name="existssuser" specification="_HZcIMxUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    boolean res1 = false;&#xD;
    Connection con = null;&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        //Mysql&#xD;
        //            PreparedStatement ps = con.prepareStatement(&quot;SELECT * FROM User WHERE userName=?&quot;);&#xD;
        //javadb&#xD;
        PreparedStatement ps = con.prepareStatement(&quot;SELECT * FROM User0 WHERE userName=?&quot;);&#xD;
        ps.setString(1, username);&#xD;
        ResultSet res = ps.executeQuery();&#xD;
        if (res.next()) {&#xD;
            res1 = true;&#xD;
        }&#xD;
        res.close();&#xD;
        ps.close();&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    return res1;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HZekcBUTEemIe6OhVnSywA" name="existssuser" specification="_HZdWUBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    User u = null;&#xD;
    Connection con = null;&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        //Mysql&#xD;
        //            PreparedStatement ps = con.prepareStatement(&quot;SELECT * FROM User WHERE userName=?&quot;);&#xD;
        //javadb&#xD;
        PreparedStatement ps = con.prepareStatement(&quot;SELECT * FROM User0 &quot; + &quot;INNER JOIN Lab ON User0.fkLab=Lab.id &quot; + &quot;WHERE User0.name=? AND User0.surname=?&quot;);&#xD;
        ps.setString(1, name);&#xD;
        ps.setString(2, surname);&#xD;
        ResultSet res = ps.executeQuery();&#xD;
        if (res.next()) {&#xD;
            //javadb&#xD;
            u = new User(res.getInt(1), res.getString(2), res.getString(3), res.getString(4), new Lab(res.getInt(5), res.getString(7), res.getString(8), res.getString(9)));&#xD;
        }&#xD;
        res.close();&#xD;
        ps.close();&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    return u;&#xD;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HZX2wBUTEemIe6OhVnSywA" name="insertUser" visibility="public" isStatic="true" method="_HZZE4BUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HZYd0BUTEemIe6OhVnSywA" name="u" type="_EMN-QBUTEemIe6OhVnSywA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HZZr8BUTEemIe6OhVnSywA" name="getUsers" visibility="public" isStatic="true" method="_HZaTABUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HZZr8RUTEemIe6OhVnSywA" type="_EMN-QBUTEemIe6OhVnSywA" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_HZZr8hUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HZZr8xUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HZaTARUTEemIe6OhVnSywA" name="lastUserid" visibility="public" isStatic="true" method="_HZaTAxUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HZaTAhUTEemIe6OhVnSywA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HZa6EBUTEemIe6OhVnSywA" name="updateUser" visibility="public" isStatic="true" method="_HZbhIRUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HZa6ERUTEemIe6OhVnSywA" name="id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HZbhIBUTEemIe6OhVnSywA" name="u" type="_EMN-QBUTEemIe6OhVnSywA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HZbhIhUTEemIe6OhVnSywA" name="getUser" visibility="public" isStatic="true" method="_HZcIMhUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HZcIMBUTEemIe6OhVnSywA" type="_EMN-QBUTEemIe6OhVnSywA" direction="return"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HZcIMRUTEemIe6OhVnSywA" name="id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HZcIMxUTEemIe6OhVnSywA" name="existssuser" visibility="public" isStatic="true" method="_HZcvQhUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HZcvQBUTEemIe6OhVnSywA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HZcvQRUTEemIe6OhVnSywA" name="username"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HZdWUBUTEemIe6OhVnSywA" name="existssuser" visibility="public" isStatic="true" method="_HZekcBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HZdWURUTEemIe6OhVnSywA" type="_EMN-QBUTEemIe6OhVnSywA" direction="return"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HZd9YBUTEemIe6OhVnSywA" name="name"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HZd9YRUTEemIe6OhVnSywA" name="surname"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_HZkrEBUTEemIe6OhVnSywA" name="LaneQueries" visibility="public">
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HZl5MBUTEemIe6OhVnSywA" name="insertLane" specification="_HZlSIBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Connection con = null;&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        PreparedStatement ps = con.prepareStatement(&quot;INSERT INTO Lane (id,genus,species,strainNumber,country,MSLT,isMarker,comments,fkExperiment)&quot; + &quot;VALUES (?,?,?,?,?,?,?,?,?)&quot;);&#xD;
        ps.setInt(1, l.getId());&#xD;
        ps.setString(2, l.getGenus());&#xD;
        ps.setString(3, l.getSpecies());&#xD;
        ps.setString(4, l.getStrainNumber());&#xD;
        ps.setString(5, l.getCountry());&#xD;
        ps.setString(6, l.getMSLT());&#xD;
        ps.setBoolean(7, l.isIsMarker());&#xD;
        ps.setString(8, l.getComments());&#xD;
        ps.setInt(9, l.getExperiment().getId());&#xD;
        ps.executeUpdate();&#xD;
        ps.close();&#xD;
        int lai = lastLaneAddedInfoid();&#xD;
        Enumeration&lt;String> keys = l.getLaneaddedinfo().keys();&#xD;
        for (int i = 0; i &lt; l.getLaneaddedinfo().size(); i++) {&#xD;
            PreparedStatement ps1 = con.prepareStatement(&quot;INSERT INTO LaneAddedInfo (id,fieldName,fieldValue,fkLane)&quot; + &quot;VALUES (?,?,?,?)&quot;);&#xD;
            ps1.setInt(1, lai);&#xD;
            String key = keys.nextElement();&#xD;
            ps1.setString(2, key);&#xD;
            ps1.setString(3, l.getLaneaddedinfo().get(key));&#xD;
            ps1.setInt(4, l.getId());&#xD;
            lai++;&#xD;
            ps1.executeUpdate();&#xD;
            ps1.close();&#xD;
        }&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HZmgQxUTEemIe6OhVnSywA" name="getLanes" specification="_HZl5MRUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Connection con = null;&#xD;
    LaneDB u = null;&#xD;
    ArrayList&lt;LaneDB> alu = new ArrayList&lt;>();&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        PreparedStatement ps = con.prepareStatement(&quot;SELECT * FROM Lane &quot; + &quot;INNER JOIN Experiment ON Lane.fkExperiment=Experiment.id &quot; + &quot;INNER JOIN Study ON Experiment.fkStudy=Study.id &quot; + &quot;WHERE Experiment.fkStudy=?&quot;);&#xD;
        ps.setInt(1, studyid);&#xD;
        ResultSet res = ps.executeQuery();&#xD;
        while (res.next()) {&#xD;
            u = new LaneDB(res.getInt(1), res.getString(2), res.getString(3), res.getString(4), res.getString(5), res.getString(6), res.getBoolean(7), res.getString(8), getExperiment(res.getInt(9)));&#xD;
            PreparedStatement ps1 = con.prepareStatement(&quot;SELECT * FROM LaneAddedInfo &quot; + &quot;WHERE fkLane=?&quot;);&#xD;
            ps1.setInt(1, u.getId());&#xD;
            ResultSet res1 = ps1.executeQuery();&#xD;
            while (res1.next()) {&#xD;
                u.addnewinfo(res1.getString(&quot;fieldName&quot;), res1.getString(&quot;fieldValue&quot;));&#xD;
            }&#xD;
            res1.close();&#xD;
            ps1.close();&#xD;
            alu.add(u);&#xD;
        }&#xD;
        res.close();&#xD;
        ps.close();&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    return alu;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HZoVcRUTEemIe6OhVnSywA" name="getUserLanes" specification="_HZnHUBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Connection con = null;&#xD;
    LaneDB u = null;&#xD;
    ArrayList&lt;LaneDB> alu = new ArrayList&lt;>();&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        //mysql&#xD;
        PreparedStatement ps = con.prepareStatement(&quot;SELECT * FROM Lane &quot; + &quot;INNER JOIN Experiment ON Lane.fkExperiment=Experiment.id &quot; + &quot;INNER JOIN Study ON Experiment.fkStudy=Study.id &quot; + &quot;WHERE Study.fkUser=?&quot;);&#xD;
        ps.setInt(1, userid);&#xD;
        ResultSet res = ps.executeQuery();&#xD;
        while (res.next()) {&#xD;
            u = new LaneDB(res.getInt(1), res.getString(2), res.getString(3), res.getString(4), res.getString(5), res.getString(6), res.getBoolean(7), res.getString(8), getExperiment(res.getInt(9)));&#xD;
            PreparedStatement ps1 = con.prepareStatement(&quot;SELECT * FROM LaneAddedInfo &quot; + &quot;WHERE fkLane=?&quot;);&#xD;
            ps1.setInt(1, u.getId());&#xD;
            ResultSet res1 = ps1.executeQuery();&#xD;
            while (res1.next()) {&#xD;
                u.addnewinfo(res1.getString(&quot;fieldName&quot;), res1.getString(&quot;fieldValue&quot;));&#xD;
            }&#xD;
            res1.close();&#xD;
            ps1.close();&#xD;
            alu.add(u);&#xD;
        }&#xD;
        res.close();&#xD;
        ps.close();&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    return alu;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HZo8gxUTEemIe6OhVnSywA" name="getAllLanes" specification="_HZoVchUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Connection con = null;&#xD;
    LaneDB u = null;&#xD;
    ArrayList&lt;LaneDB> alu = new ArrayList&lt;>();&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        PreparedStatement ps = con.prepareStatement(&quot;SELECT * FROM Lane &quot;);&#xD;
        ResultSet res = ps.executeQuery();&#xD;
        while (res.next()) {&#xD;
            u = new LaneDB(res.getInt(1), res.getString(2), res.getString(3), res.getString(4), res.getString(5), res.getString(6), res.getBoolean(7), res.getString(8), getExperiment(res.getInt(9)));&#xD;
            PreparedStatement ps1 = con.prepareStatement(&quot;SELECT * FROM LaneAddedInfo &quot; + &quot;WHERE fkLane=?&quot;);&#xD;
            ps1.setInt(1, u.getId());&#xD;
            ResultSet res1 = ps1.executeQuery();&#xD;
            while (res1.next()) {&#xD;
                u.addnewinfo(res1.getString(&quot;fieldName&quot;), res1.getString(&quot;fieldValue&quot;));&#xD;
            }&#xD;
            res1.close();&#xD;
            ps1.close();&#xD;
            alu.add(u);&#xD;
        }&#xD;
        res.close();&#xD;
        ps.close();&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    return alu;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HZqxsBUTEemIe6OhVnSywA" name="getLanesComparison" specification="_HZo8hBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Connection con = null;&#xD;
    LaneDB u = null;&#xD;
    ArrayList&lt;LaneDB> alu = new ArrayList&lt;>();&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        PreparedStatement ps = con.prepareStatement(&quot;SELECT * FROM Lane &quot; + &quot;INNER JOIN ComparisonLane ON Lane.id=ComparisonLane.fkLane &quot; + &quot;WHERE ComparisonLane.fkComparison=?&quot;);&#xD;
        ps.setInt(1, compid);&#xD;
        ResultSet res = ps.executeQuery();&#xD;
        while (res.next()) {&#xD;
            u = new LaneDB(res.getInt(1), res.getString(2), res.getString(3), res.getString(4), res.getString(5), res.getString(6), res.getBoolean(7), res.getString(8), getExperiment(res.getInt(9)));&#xD;
            PreparedStatement ps1 = con.prepareStatement(&quot;SELECT * FROM LaneAddedInfo &quot; + &quot;WHERE fkLane=?&quot;);&#xD;
            ps1.setInt(1, u.getId());&#xD;
            ResultSet res1 = ps1.executeQuery();&#xD;
            while (res1.next()) {&#xD;
                u.addnewinfo(res1.getString(&quot;fieldName&quot;), res1.getString(&quot;fieldValue&quot;));&#xD;
            }&#xD;
            res1.close();&#xD;
            ps1.close();&#xD;
            alu.add(u);&#xD;
        }&#xD;
        res.close();&#xD;
        ps.close();&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    return alu;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HZyGcBUTEemIe6OhVnSywA" name="getlanesexperiment" specification="_HZsm4BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Connection con = null;&#xD;
    LaneDB u = null;&#xD;
    ArrayList&lt;LaneDB> alu = new ArrayList&lt;>();&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        PreparedStatement ps = null;&#xD;
        if (markers) {&#xD;
            ps = con.prepareStatement(&quot;SELECT * FROM Lane &quot; + &quot;INNER JOIN Experiment ON Lane.fkExperiment=Experiment.id &quot; + &quot;WHERE Experiment.id=?&quot;);&#xD;
            ps.setInt(1, expid);&#xD;
        } else {&#xD;
            ps = con.prepareStatement(&quot;SELECT * FROM Lane &quot; + &quot;INNER JOIN Experiment ON Lane.fkExperiment=Experiment.id &quot; + &quot;WHERE Experiment.id=? AND Lane.isMarker=?&quot;);&#xD;
            ps.setInt(1, expid);&#xD;
            ps.setBoolean(2, false);&#xD;
        }&#xD;
        ResultSet res = ps.executeQuery();&#xD;
        while (res.next()) {&#xD;
            u = new LaneDB(res.getInt(1), res.getString(2), res.getString(3), res.getString(4), res.getString(5), res.getString(6), res.getBoolean(7), res.getString(8), getExperiment(res.getInt(9)));&#xD;
            PreparedStatement ps1 = con.prepareStatement(&quot;SELECT * FROM LaneAddedInfo &quot; + &quot;WHERE fkLane=?&quot;);&#xD;
            ps1.setInt(1, u.getId());&#xD;
            ResultSet res1 = ps1.executeQuery();&#xD;
            while (res1.next()) {&#xD;
                u.addnewinfo(res1.getString(&quot;fieldName&quot;), res1.getString(&quot;fieldValue&quot;));&#xD;
            }&#xD;
            res1.close();&#xD;
            ps1.close();&#xD;
            alu.add(u);&#xD;
        }&#xD;
        res.close();&#xD;
        ps.close();&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    return alu;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HZ4NEBUTEemIe6OhVnSywA" name="getstandardsexperiment" specification="_HZzUkBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Connection con = null;&#xD;
    LaneDB u = null;&#xD;
    ArrayList&lt;LaneDB> alu = new ArrayList&lt;>();&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        PreparedStatement ps = null;&#xD;
        ps = con.prepareStatement(&quot;SELECT * FROM Lane &quot; + &quot;INNER JOIN Experiment ON Lane.fkExperiment=Experiment.id &quot; + &quot;WHERE Experiment.id=? AND Lane.isMarker=?&quot;);&#xD;
        ps.setInt(1, expid);&#xD;
        ps.setBoolean(2, true);&#xD;
        ResultSet res = ps.executeQuery();&#xD;
        while (res.next()) {&#xD;
            u = new LaneDB(res.getInt(1), res.getString(2), res.getString(3), res.getString(4), res.getString(5), res.getString(6), res.getBoolean(7), res.getString(8), getExperiment(res.getInt(9)));&#xD;
            PreparedStatement ps1 = con.prepareStatement(&quot;SELECT * FROM LaneAddedInfo &quot; + &quot;WHERE fkLane=?&quot;);&#xD;
            ps1.setInt(1, u.getId());&#xD;
            ResultSet res1 = ps1.executeQuery();&#xD;
            while (res1.next()) {&#xD;
                u.addnewinfo(res1.getString(&quot;fieldName&quot;), res1.getString(&quot;fieldValue&quot;));&#xD;
            }&#xD;
            res1.close();&#xD;
            ps1.close();&#xD;
            alu.add(u);&#xD;
        }&#xD;
        res.close();&#xD;
        ps.close();&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    return alu;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HZ8egBUTEemIe6OhVnSywA" name="getLane" specification="_HZ6CQBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Connection con = null;&#xD;
    LaneDB u = null;&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        PreparedStatement ps = con.prepareStatement(&quot;SELECT * FROM Lane WHERE id=?&quot;);&#xD;
        ps.setInt(1, id);&#xD;
        ResultSet res = ps.executeQuery();&#xD;
        if (res.next()) {&#xD;
            u = new LaneDB(res.getInt(&quot;id&quot;), res.getString(&quot;genus&quot;), res.getString(&quot;species&quot;), res.getString(&quot;strainNumber&quot;), res.getString(&quot;country&quot;), res.getString(&quot;MSLT&quot;), res.getBoolean(&quot;isMarker&quot;), res.getString(&quot;comments&quot;), getExperiment(res.getInt(&quot;fkExperiment&quot;)));&#xD;
            PreparedStatement ps1 = con.prepareStatement(&quot;SELECT * FROM LaneAddedInfo &quot; + &quot;WHERE fkLane=?&quot;);&#xD;
            ps1.setInt(1, u.getId());&#xD;
            ResultSet res1 = ps1.executeQuery();&#xD;
            while (res1.next()) {&#xD;
                u.addnewinfo(res1.getString(&quot;fieldName&quot;), res1.getString(&quot;fieldValue&quot;));&#xD;
            }&#xD;
            res1.close();&#xD;
            ps1.close();&#xD;
        }&#xD;
        res.close();&#xD;
        ps.close();&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    return u;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HZ_h0BUTEemIe6OhVnSywA" name="lastLaneid" specification="_HZ9soBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Connection con = null;&#xD;
    int n = 0;&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        PreparedStatement ps = con.prepareStatement(&quot;SELECT id FROM Lane &quot; + &quot;ORDER BY id DESC &quot;);&#xD;
        ResultSet res = ps.executeQuery();&#xD;
        if (res.next()) {&#xD;
            n = res.getInt(&quot;id&quot;) + 1;&#xD;
        }&#xD;
        res.close();&#xD;
        ps.close();&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    return n;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HaDMMBUTEemIe6OhVnSywA" name="updateLane" specification="_HaBXABUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Connection con = null;&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        PreparedStatement ps = con.prepareStatement(&quot;UPDATE Lane &quot; + &quot;SET genus=?, species=?, strainNumber=?,country=?,MSLT=?,isMarker=?,comments=? &quot; + &quot;WHERE id=?&quot;);&#xD;
        ps.setString(1, l.getGenus());&#xD;
        ps.setString(2, l.getSpecies());&#xD;
        ps.setString(3, l.getStrainNumber());&#xD;
        ps.setString(4, l.getCountry());&#xD;
        ps.setString(5, l.getMSLT());&#xD;
        ps.setBoolean(6, l.isIsMarker());&#xD;
        ps.setString(7, l.getComments());&#xD;
        ps.setInt(8, l.getId());&#xD;
        ps.executeUpdate();&#xD;
        ps.close();&#xD;
        Enumeration&lt;String> keys = l.getLaneaddedinfo().keys();&#xD;
        for (int i = 0; i &lt; l.getLaneaddedinfo().size(); i++) {&#xD;
            PreparedStatement ps1 = con.prepareStatement(&quot;UPDATE LaneAddedInfo &quot; + &quot;SET fieldValue=? &quot; + &quot;WHERE fkLane=? AND fieldName=?&quot;);&#xD;
            String key = keys.nextElement();&#xD;
            ps1.setString(1, l.getLaneaddedinfo().get(key));&#xD;
            ps1.setInt(2, l.getId());&#xD;
            ps1.setString(3, key);&#xD;
            ps1.executeUpdate();&#xD;
            ps1.close();&#xD;
        }&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HaIEsBUTEemIe6OhVnSywA" name="updateLane" specification="_HaDMMRUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Connection con = null;&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        PreparedStatement ps = null;&#xD;
        switch(column) {&#xD;
            case 0:&#xD;
                ps = con.prepareStatement(&quot;UPDATE Lane &quot; + &quot;SET genus=? &quot; + &quot;WHERE id=? &quot;);&#xD;
                ps.setString(1, String.valueOf(o));&#xD;
                ps.setInt(2, id);&#xD;
                break;&#xD;
            case 1:&#xD;
                ps = con.prepareStatement(&quot;UPDATE Lane &quot; + &quot;SET species=? &quot; + &quot;WHERE id=? &quot;);&#xD;
                ps.setString(1, String.valueOf(o));&#xD;
                ps.setInt(2, id);&#xD;
                break;&#xD;
            case 2:&#xD;
                ps = con.prepareStatement(&quot;UPDATE Lane &quot; + &quot;SET strainNumber=? &quot; + &quot;WHERE id=? &quot;);&#xD;
                ps.setString(1, String.valueOf(o));&#xD;
                ps.setInt(2, id);&#xD;
                break;&#xD;
            case 3:&#xD;
                ps = con.prepareStatement(&quot;UPDATE Lane &quot; + &quot;SET country=? &quot; + &quot;WHERE id=? &quot;);&#xD;
                ps.setString(1, String.valueOf(o));&#xD;
                ps.setInt(2, id);&#xD;
                break;&#xD;
            case 4:&#xD;
                ps = con.prepareStatement(&quot;UPDATE Lane &quot; + &quot;SET MSLT=? &quot; + &quot;WHERE id=? &quot;);&#xD;
                ps.setString(1, String.valueOf(o));&#xD;
                ps.setInt(2, id);&#xD;
                break;&#xD;
            case 5:&#xD;
                ps = con.prepareStatement(&quot;UPDATE Lane &quot; + &quot;SET isMarker=? &quot; + &quot;WHERE id=? &quot;);&#xD;
                ps.setBoolean(1, Boolean.valueOf(String.valueOf(o)));&#xD;
                ps.setInt(2, id);&#xD;
                break;&#xD;
            default:&#xD;
                ps = con.prepareStatement(&quot;UPDATE Lane &quot; + &quot;SET comments=? &quot; + &quot;WHERE id=? &quot;);&#xD;
                ps.setString(1, String.valueOf(o));&#xD;
                ps.setInt(2, id);&#xD;
                break;&#xD;
        }&#xD;
        ps.executeUpdate();&#xD;
        ps.close();&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HaKg8BUTEemIe6OhVnSywA" name="lastLaneAddedInfoid" specification="_HaIrwBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Connection con = null;&#xD;
    int n = 0;&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        PreparedStatement ps = con.prepareStatement(&quot;SELECT id FROM LaneAddedInfo &quot; + &quot;ORDER BY id DESC &quot;);&#xD;
        ResultSet res = ps.executeQuery();&#xD;
        if (res.next()) {&#xD;
            n = res.getInt(&quot;id&quot;) + 1;&#xD;
        }&#xD;
        res.close();&#xD;
        ps.close();&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    return n;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HaOyYBUTEemIe6OhVnSywA" name="getAdditionalFields" specification="_HaLvEBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Connection con = null;&#xD;
    ArrayList&lt;String> alu = new ArrayList&lt;>();&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        PreparedStatement ps = con.prepareStatement(&quot;SELECT DISTINCT fieldName FROM LaneAddedInfo &quot; + &quot;INNER JOIN Lane ON LaneAddedInfo.fkLane=Lane.id &quot; + &quot;INNER JOIN Experiment ON Lane.fkExperiment=Experiment.id &quot; + &quot;INNER JOIN Study ON Experiment.fkStudy=Study.id &quot; + &quot;WHERE Experiment.fkStudy=?&quot;);&#xD;
        ps.setInt(1, studyid);&#xD;
        ResultSet res = ps.executeQuery();&#xD;
        while (res.next()) {&#xD;
            String u = res.getString(1);&#xD;
            alu.add(u);&#xD;
        }&#xD;
        res.close();&#xD;
        ps.close();&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    return alu;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HaTq4BUTEemIe6OhVnSywA" name="getAdditionalFieldsExp" specification="_HaQAgBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Connection con = null;&#xD;
    ArrayList&lt;String> alu = new ArrayList&lt;>();&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        PreparedStatement ps = con.prepareStatement(&quot;SELECT DISTINCT fieldName FROM LaneAddedInfo &quot; + &quot;INNER JOIN Lane ON LaneAddedInfo.fkLane=Lane.id &quot; + &quot;INNER JOIN Experiment ON Lane.fkExperiment=Experiment.id &quot; + &quot;WHERE Experiment.id=?&quot;);&#xD;
        ps.setInt(1, expid);&#xD;
        ResultSet res = ps.executeQuery();&#xD;
        while (res.next()) {&#xD;
            String u = res.getString(1);&#xD;
            alu.add(u);&#xD;
        }&#xD;
        res.close();&#xD;
        ps.close();&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    return alu;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HaZxgBUTEemIe6OhVnSywA" name="insertLaneAddedInfo" specification="_HaVgEBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Connection con = null;&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        PreparedStatement ps = con.prepareStatement(&quot;INSERT INTO LaneAddedInfo (id,fieldName,fieldValue,fkLane)&quot; + &quot;VALUES (?,?,?,?)&quot;);&#xD;
        ps.setInt(1, lastLaneAddedInfoid());&#xD;
        ps.setString(2, fieldName);&#xD;
        ps.setString(3, fieldValue);&#xD;
        ps.setInt(4, laneid);&#xD;
        ps.executeUpdate();&#xD;
        ps.close();&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HaeqABUTEemIe6OhVnSywA" name="containadditionalfield" specification="_Haa_oBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Connection con = null;&#xD;
    boolean result = false;&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        PreparedStatement ps = con.prepareStatement(&quot;SELECT * FROM LaneAddedInfo &quot; + &quot;WHERE fkLane=? AND fieldName=?&quot;);&#xD;
        ps.setInt(1, laneid);&#xD;
        ps.setString(2, fieldName);&#xD;
        ResultSet res = ps.executeQuery();&#xD;
        result = res.next();&#xD;
        ps.close();&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    return result;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Haf4IRUTEemIe6OhVnSywA" name="deletelane" specification="_HafREBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Connection con = null;&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        PreparedStatement ps = con.prepareStatement(&quot;DELETE FROM Lane &quot; + &quot;WHERE id=?&quot;);&#xD;
        ps.setInt(1, laneid);&#xD;
        ps.executeUpdate();&#xD;
        ps.close();&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HaiUYBUTEemIe6OhVnSywA" name="deletelanecomparison" specification="_Haf4IhUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Connection con = null;&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        PreparedStatement ps = con.prepareStatement(&quot;DELETE FROM ComparisonLane &quot; + &quot;WHERE fkComparison=? AND fkLane=?&quot;);&#xD;
        ps.setInt(1, compid);&#xD;
        ps.setInt(2, laneid);&#xD;
        ps.executeUpdate();&#xD;
        ps.close();&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HalXsBUTEemIe6OhVnSywA" name="deletecomparisonslane" specification="_HakJkBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Connection con = null;&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        PreparedStatement ps = con.prepareStatement(&quot;DELETE FROM Comparison &quot; + &quot;INNER JOIN ComparisonLane ON Comparison.id=ComparisonLane.fkComparison &quot; + &quot;INNER JOIN Lane ON Lane.id=ComparisonLane.fkLane &quot; + &quot;WHERE Lane.id=?&quot;);&#xD;
        ps.setInt(1, laneid);&#xD;
        ps.executeUpdate();&#xD;
        ps.close();&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HapCEBUTEemIe6OhVnSywA" name="existscomparisonslane" specification="_Haml0BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Connection con = null;&#xD;
    boolean result = false;&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        PreparedStatement ps = con.prepareStatement(&quot;SELECT * FROM ComparisonLane &quot; + &quot;INNER JOIN Lane ON Lane.id=ComparisonLane.fkLane &quot; + &quot;WHERE Lane.id=?&quot;);&#xD;
        ps.setInt(1, laneid);&#xD;
        ResultSet res = ps.executeQuery();&#xD;
        result = res.next();&#xD;
        res.close();&#xD;
        ps.close();&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    return result;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HaqQMhUTEemIe6OhVnSywA" name="getGenus" specification="_HappIBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Connection con = null;&#xD;
    ArrayList&lt;String> alu = new ArrayList&lt;>();&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        PreparedStatement ps = con.prepareStatement(&quot;SELECT DISTINCT genus FROM Lane &quot; + &quot;INNER JOIN Experiment ON Lane.fkExperiment=Experiment.id &quot; + &quot;INNER JOIN Study ON Experiment.fkStudy=Study.id &quot; + &quot;WHERE Experiment.fkStudy=?&quot;);&#xD;
        ps.setInt(1, studyid);&#xD;
        ResultSet res = ps.executeQuery();&#xD;
        while (res.next()) {&#xD;
            String u = res.getString(1);&#xD;
            alu.add(u);&#xD;
        }&#xD;
        res.close();&#xD;
        ps.close();&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    return alu;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HareUBUTEemIe6OhVnSywA" name="getSpecies" specification="_HaqQMxUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Connection con = null;&#xD;
    ArrayList&lt;String> alu = new ArrayList&lt;>();&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        PreparedStatement ps = con.prepareStatement(&quot;SELECT DISTINCT species FROM Lane &quot; + &quot;INNER JOIN Experiment ON Lane.fkExperiment=Experiment.id &quot; + &quot;INNER JOIN Study ON Experiment.fkStudy=Study.id &quot; + &quot;WHERE Experiment.fkStudy=?&quot;);&#xD;
        ps.setInt(1, studyid);&#xD;
        ResultSet res = ps.executeQuery();&#xD;
        while (res.next()) {&#xD;
            String u = res.getString(1);&#xD;
            alu.add(u);&#xD;
        }&#xD;
        res.close();&#xD;
        ps.close();&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    return alu;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ha2dcBUTEemIe6OhVnSywA" name="searchlanes" specification="_HareURUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Connection con = null;&#xD;
    LaneDB l = null;&#xD;
    ArrayList&lt;LaneDB> alu = new ArrayList&lt;>();&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        int m = n;&#xD;
        String query = &quot;SELECT * FROM Lane&quot; + &quot; INNER JOIN Experiment ON Experiment.id=Lane.fkExperiment&quot; + &quot; INNER JOIN Study ON Experiment.fkStudy=Study.id&quot; + &quot; WHERE Study.id=&quot; + studyid + &quot; AND &quot;;&#xD;
        if (!genus.equals(&quot;&quot;)) {&#xD;
            query = query + &quot; Lane.genus='&quot; + genus + &quot;' &quot;;&#xD;
            m--;&#xD;
            if (m != 0) {&#xD;
                query = query + &quot; AND &quot;;&#xD;
            }&#xD;
        }&#xD;
        if (!species.equals(&quot;&quot;)) {&#xD;
            query = query + &quot; Lane.species='&quot; + species + &quot;' &quot;;&#xD;
            m--;&#xD;
            if (m != 0) {&#xD;
                query = query + &quot; AND &quot;;&#xD;
            }&#xD;
        }&#xD;
        if (!strainnumber.equals(&quot;&quot;)) {&#xD;
            query = query + &quot; Lane.strainNumber=&quot; + strainnumber + &quot; &quot;;&#xD;
            m--;&#xD;
            if (m != 0) {&#xD;
                query = query + &quot; AND &quot;;&#xD;
            }&#xD;
        }&#xD;
        if (!country.equals(&quot;&quot;)) {&#xD;
            query = query + &quot; Lane.country='&quot; + country + &quot;' &quot;;&#xD;
            m--;&#xD;
            if (m != 0) {&#xD;
                query = query + &quot; AND &quot;;&#xD;
            }&#xD;
        }&#xD;
        if (!MSLT.equals(&quot;&quot;)) {&#xD;
            query = query + &quot; Lane.MSLT='&quot; + MSLT + &quot;' &quot;;&#xD;
            m--;&#xD;
            if (m != 0) {&#xD;
                query = query + &quot; AND &quot;;&#xD;
            }&#xD;
        }&#xD;
        if (!experiment.equals(&quot;&quot;)) {&#xD;
            query = query + &quot; Experiment.name='&quot; + experiment + &quot;' &quot;;&#xD;
            m--;&#xD;
            if (m != 0) {&#xD;
                query = query + &quot; AND &quot;;&#xD;
            }&#xD;
        }&#xD;
        if (!fromdate.equals(&quot;&quot;)) {&#xD;
            query = query + &quot; Experiment.date >=Date('&quot; + fromdate + &quot;') &quot;;&#xD;
            m--;&#xD;
            if (m != 0) {&#xD;
                query = query + &quot; AND &quot;;&#xD;
            }&#xD;
        }&#xD;
        if (!todate.equals(&quot;&quot;)) {&#xD;
            query = query + &quot; Experiment.date &lt;=Date('&quot; + todate.toString() + &quot;') &quot;;&#xD;
        }&#xD;
        PreparedStatement ps = con.prepareStatement(query);&#xD;
        ResultSet res = ps.executeQuery();&#xD;
        while (res.next()) {&#xD;
            l = new LaneDB(res.getInt(1), res.getString(2), res.getString(3), res.getString(4), res.getString(5), res.getString(6), res.getBoolean(7), res.getString(8), getExperiment(res.getInt(9)));&#xD;
            PreparedStatement ps1 = con.prepareStatement(&quot;SELECT * FROM LaneAddedInfo &quot; + &quot;WHERE fkLane=?&quot;);&#xD;
            ps1.setInt(1, l.getId());&#xD;
            ResultSet res1 = ps1.executeQuery();&#xD;
            while (res1.next()) {&#xD;
                l.addnewinfo(res1.getString(&quot;fieldName&quot;), res1.getString(&quot;fieldValue&quot;));&#xD;
            }&#xD;
            res1.close();&#xD;
            ps1.close();&#xD;
            alu.add(l);&#xD;
        }&#xD;
        res.close();&#xD;
        ps.close();&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    return alu;&#xD;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HZlSIBUTEemIe6OhVnSywA" name="insertLane" visibility="public" isStatic="true" method="_HZl5MBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HZlSIRUTEemIe6OhVnSywA" name="l" type="_EHtRsBUTEemIe6OhVnSywA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HZl5MRUTEemIe6OhVnSywA" name="getLanes" visibility="public" isStatic="true" method="_HZmgQxUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HZl5MhUTEemIe6OhVnSywA" type="_EHtRsBUTEemIe6OhVnSywA" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_HZmgQBUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HZmgQRUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HZmgQhUTEemIe6OhVnSywA" name="studyid">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HZnHUBUTEemIe6OhVnSywA" name="getUserLanes" visibility="public" isStatic="true" method="_HZoVcRUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HZnuYBUTEemIe6OhVnSywA" type="_EHtRsBUTEemIe6OhVnSywA" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_HZnuYRUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HZnuYhUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HZoVcBUTEemIe6OhVnSywA" name="userid">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HZoVchUTEemIe6OhVnSywA" name="getAllLanes" visibility="public" isStatic="true" method="_HZo8gxUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HZo8gBUTEemIe6OhVnSywA" type="_EHtRsBUTEemIe6OhVnSywA" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_HZo8gRUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HZo8ghUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HZo8hBUTEemIe6OhVnSywA" name="getLanesComparison" visibility="public" isStatic="true" method="_HZqxsBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HZpjkBUTEemIe6OhVnSywA" type="_EHtRsBUTEemIe6OhVnSywA" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_HZpjkRUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HZpjkhUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HZpjkxUTEemIe6OhVnSywA" name="compid">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HZsm4BUTEemIe6OhVnSywA" name="getlanesexperiment" visibility="public" isStatic="true" method="_HZyGcBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HZt1ABUTEemIe6OhVnSywA" type="_EHtRsBUTEemIe6OhVnSywA" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_HZucEBUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HZvDIBUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HZvqMBUTEemIe6OhVnSywA" name="expid">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HZw4UBUTEemIe6OhVnSywA" name="markers">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HZzUkBUTEemIe6OhVnSywA" name="getstandardsexperiment" visibility="public" isStatic="true" method="_HZ4NEBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HZ1JwBUTEemIe6OhVnSywA" type="_EHtRsBUTEemIe6OhVnSywA" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_HZ2X4BUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HZ2-8BUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HZ3mABUTEemIe6OhVnSywA" name="expid">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HZ6CQBUTEemIe6OhVnSywA" name="getLane" visibility="public" isStatic="true" method="_HZ8egBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HZ6pUBUTEemIe6OhVnSywA" type="_EHtRsBUTEemIe6OhVnSywA" direction="return"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HZ73cBUTEemIe6OhVnSywA" name="id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HZ9soBUTEemIe6OhVnSywA" name="lastLaneid" visibility="public" isStatic="true" method="_HZ_h0BUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HZ-6wBUTEemIe6OhVnSywA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HaBXABUTEemIe6OhVnSywA" name="updateLane" visibility="public" isStatic="true" method="_HaDMMBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HaClIBUTEemIe6OhVnSywA" name="l" type="_EHtRsBUTEemIe6OhVnSywA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HaDMMRUTEemIe6OhVnSywA" name="updateLane" visibility="public" isStatic="true" method="_HaIEsBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HaEaUBUTEemIe6OhVnSywA" name="id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HaGPgBUTEemIe6OhVnSywA" name="o"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HaG2kBUTEemIe6OhVnSywA" name="column">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HaIrwBUTEemIe6OhVnSywA" name="lastLaneAddedInfoid" visibility="public" isStatic="true" method="_HaKg8BUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HaJ54BUTEemIe6OhVnSywA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HaLvEBUTEemIe6OhVnSywA" name="getAdditionalFields" visibility="public" isStatic="true" method="_HaOyYBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HaM9MBUTEemIe6OhVnSywA" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_HaNkQBUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HaOLUBUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HaOLURUTEemIe6OhVnSywA" name="studyid">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HaQAgBUTEemIe6OhVnSywA" name="getAdditionalFieldsExp" visibility="public" isStatic="true" method="_HaTq4BUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HaROoBUTEemIe6OhVnSywA" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_HaR1sBUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HaR1sRUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HaScwBUTEemIe6OhVnSywA" name="expid">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HaVgEBUTEemIe6OhVnSywA" name="insertLaneAddedInfo" visibility="public" isStatic="true" method="_HaZxgBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HaWuMBUTEemIe6OhVnSywA" name="laneid">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HaXVQBUTEemIe6OhVnSywA" name="fieldName"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HaYjYBUTEemIe6OhVnSywA" name="fieldValue"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_Haa_oBUTEemIe6OhVnSywA" name="containadditionalfield" visibility="public" isStatic="true" method="_HaeqABUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HacNwBUTEemIe6OhVnSywA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_Hac00BUTEemIe6OhVnSywA" name="laneid">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HaeC8BUTEemIe6OhVnSywA" name="fieldName"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HafREBUTEemIe6OhVnSywA" name="deletelane" visibility="public" isStatic="true" method="_Haf4IRUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_Haf4IBUTEemIe6OhVnSywA" name="laneid">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_Haf4IhUTEemIe6OhVnSywA" name="deletelanecomparison" visibility="public" isStatic="true" method="_HaiUYBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HagfMBUTEemIe6OhVnSywA" name="laneid">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HahtUBUTEemIe6OhVnSywA" name="compid">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HakJkBUTEemIe6OhVnSywA" name="deletecomparisonslane" visibility="public" isStatic="true" method="_HalXsBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HakwoBUTEemIe6OhVnSywA" name="laneid">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_Haml0BUTEemIe6OhVnSywA" name="existscomparisonslane" visibility="public" isStatic="true" method="_HapCEBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_Hanz8BUTEemIe6OhVnSywA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HaobABUTEemIe6OhVnSywA" name="laneid">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HappIBUTEemIe6OhVnSywA" name="getGenus" visibility="public" isStatic="true" method="_HaqQMhUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HappIRUTEemIe6OhVnSywA" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_HappIhUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HaqQMBUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HaqQMRUTEemIe6OhVnSywA" name="studyid">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HaqQMxUTEemIe6OhVnSywA" name="getSpecies" visibility="public" isStatic="true" method="_HareUBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_Haq3QBUTEemIe6OhVnSywA" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Haq3QRUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Haq3QhUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_Haq3QxUTEemIe6OhVnSywA" name="studyid">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HareURUTEemIe6OhVnSywA" name="searchlanes" visibility="public" isStatic="true" method="_Ha2dcBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HareUhUTEemIe6OhVnSywA" type="_EHtRsBUTEemIe6OhVnSywA" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_HasFYBUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HasFYRUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HasFYhUTEemIe6OhVnSywA" name="studyid">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HasscBUTEemIe6OhVnSywA" name="genus"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_Hat6kBUTEemIe6OhVnSywA" name="species"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HavIsBUTEemIe6OhVnSywA" name="strainnumber"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HawW0BUTEemIe6OhVnSywA" name="country"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_Haxk8BUTEemIe6OhVnSywA" name="MSLT"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HayzEBUTEemIe6OhVnSywA" name="experiment"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_Ha0BMBUTEemIe6OhVnSywA" name="fromdate"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_Ha0oQBUTEemIe6OhVnSywA" name="todate"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_Ha1PUBUTEemIe6OhVnSywA" name="n">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_Ha45sBUTEemIe6OhVnSywA" name="LabQueries" visibility="public">
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ha9LIBUTEemIe6OhVnSywA" name="insertLab" specification="_Ha6u4BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Connection con = null;&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        PreparedStatement ps = con.prepareStatement(&quot;INSERT INTO Lab (id, name, city, country)&quot; + &quot;VALUES (?,?,?,?)&quot;);&#xD;
        ps.setInt(1, l.getId());&#xD;
        ps.setString(2, l.getName());&#xD;
        ps.setString(3, l.getCity());&#xD;
        ps.setString(4, l.getCountry());&#xD;
        ps.executeUpdate();&#xD;
        ps.close();&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ha_nYBUTEemIe6OhVnSywA" name="getLabs" specification="_Ha9LIRUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Connection con = null;&#xD;
    Lab u = null;&#xD;
    ArrayList&lt;Lab> alu = new ArrayList&lt;>();&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        ;&#xD;
        PreparedStatement ps = con.prepareStatement(&quot;SELECT * FROM Lab&quot;);&#xD;
        ResultSet res = ps.executeQuery();&#xD;
        while (res.next()) {&#xD;
            u = new Lab(res.getInt(&quot;id&quot;), res.getString(&quot;name&quot;), res.getString(&quot;city&quot;), res.getString(&quot;country&quot;));&#xD;
            alu.add(u);&#xD;
        }&#xD;
        res.close();&#xD;
        ps.close();&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    return alu;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HbDRwBUTEemIe6OhVnSywA" name="getLab" specification="_HbA1gBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Connection con = null;&#xD;
    Lab u = null;&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        ;&#xD;
        PreparedStatement ps = con.prepareStatement(&quot;SELECT * FROM Lab WHERE id=?&quot;);&#xD;
        ps.setInt(1, id);&#xD;
        ResultSet res = ps.executeQuery();&#xD;
        if (res.next()) {&#xD;
            u = new Lab(res.getInt(&quot;id&quot;), res.getString(&quot;name&quot;), res.getString(&quot;city&quot;), res.getString(&quot;country&quot;));&#xD;
        }&#xD;
        res.close();&#xD;
        ps.close();&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    return u;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HbGVEBUTEemIe6OhVnSywA" name="lastLabid" specification="_HbEf4BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Connection con = null;&#xD;
    int n = 0;&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        ;&#xD;
        PreparedStatement ps = con.prepareStatement(&quot;SELECT id FROM Lab &quot; + &quot;ORDER BY id DESC &quot;);&#xD;
        ResultSet res = ps.executeQuery();&#xD;
        if (res.next()) {&#xD;
            n = res.getInt(&quot;id&quot;) + 1;&#xD;
        }&#xD;
        res.close();&#xD;
        ps.close();&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    return n;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HbL0oBUTEemIe6OhVnSywA" name="updateLab" specification="_HbIxUBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Connection con = null;&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        ;&#xD;
        PreparedStatement ps = con.prepareStatement(&quot;UPDATE Lab &quot; + &quot;SET name=?, city=?, country=? &quot; + &quot;WHERE id=?&quot;);&#xD;
        ps.setString(1, l.getName());&#xD;
        ps.setString(2, l.getCity());&#xD;
        ps.setString(3, l.getCountry());&#xD;
        ps.setInt(4, id);&#xD;
        ps.executeUpdate();&#xD;
        ps.close();&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HbTwcBUTEemIe6OhVnSywA" name="existslab" specification="_HbNp0BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    boolean res1 = false;&#xD;
    Connection con = null;&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        ;&#xD;
        PreparedStatement ps = con.prepareStatement(&quot;SELECT * FROM Lab WHERE name=? AND city=? AND country=?&quot;);&#xD;
        ps.setString(1, name);&#xD;
        ps.setString(2, city);&#xD;
        ps.setString(3, country);&#xD;
        ResultSet res = ps.executeQuery();&#xD;
        if (res.next()) {&#xD;
            res1 = true;&#xD;
        }&#xD;
        res.close();&#xD;
        ps.close();&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    return res1;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HbZ3EBUTEemIe6OhVnSywA" name="existslab_id" specification="_HbWMsBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    int res1 = -1;&#xD;
    Connection con = null;&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        ;&#xD;
        PreparedStatement ps = con.prepareStatement(&quot;SELECT * FROM Lab WHERE name=? AND city=? AND country=?&quot;);&#xD;
        ps.setString(1, name);&#xD;
        ps.setString(2, city);&#xD;
        ps.setString(3, country);&#xD;
        ResultSet res = ps.executeQuery();&#xD;
        if (res.next()) {&#xD;
            res1 = res.getInt(&quot;id&quot;);&#xD;
        }&#xD;
        res.close();&#xD;
        ps.close();&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    return res1;&#xD;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_Ha6u4BUTEemIe6OhVnSywA" name="insertLab" visibility="public" isStatic="true" method="_Ha9LIBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_Ha8kEBUTEemIe6OhVnSywA" name="l" type="_EPTugBUTEemIe6OhVnSywA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_Ha9LIRUTEemIe6OhVnSywA" name="getLabs" visibility="public" isStatic="true" method="_Ha_nYBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_Ha9yMBUTEemIe6OhVnSywA" type="_EPTugBUTEemIe6OhVnSywA" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Ha-ZQBUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Ha_AUBUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HbA1gBUTEemIe6OhVnSywA" name="getLab" visibility="public" isStatic="true" method="_HbDRwBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HbCDoBUTEemIe6OhVnSywA" type="_EPTugBUTEemIe6OhVnSywA" direction="return"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HbCqsBUTEemIe6OhVnSywA" name="id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HbEf4BUTEemIe6OhVnSywA" name="lastLabid" visibility="public" isStatic="true" method="_HbGVEBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HbFuABUTEemIe6OhVnSywA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HbIxUBUTEemIe6OhVnSywA" name="updateLab" visibility="public" isStatic="true" method="_HbL0oBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HbJ_cBUTEemIe6OhVnSywA" name="id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HbLNkBUTEemIe6OhVnSywA" name="l" type="_EPTugBUTEemIe6OhVnSywA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HbNp0BUTEemIe6OhVnSywA" name="existslab" visibility="public" isStatic="true" method="_HbTwcBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HbO38BUTEemIe6OhVnSywA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HbQGEBUTEemIe6OhVnSywA" name="name"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HbRUMBUTEemIe6OhVnSywA" name="city"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HbTJYBUTEemIe6OhVnSywA" name="country"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HbWMsBUTEemIe6OhVnSywA" name="existslab_id" visibility="public" isStatic="true" method="_HbZ3EBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HbWzwBUTEemIe6OhVnSywA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HbYB4BUTEemIe6OhVnSywA" name="name"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HbYo8BUTEemIe6OhVnSywA" name="city"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HbZQABUTEemIe6OhVnSywA" name="country"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_Hbf9sBUTEemIe6OhVnSywA" name="BackupQueries" visibility="public">
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Hbhy4BUTEemIe6OhVnSywA" name="createbackup" specification="_HbgkwBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    List&lt;File> fileList = new ArrayList&lt;File>();&#xD;
    //images&#xD;
    File dbdirectoryToZip = new File(System.getProperty(&quot;user.dir&quot;));&#xD;
    getAllFiles(dbdirectoryToZip, fileList, true);&#xD;
    //images&#xD;
    //        File imagesdirectoryToZip = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/GelJDBImages/&quot;);&#xD;
    //        getAllFiles(imagesdirectoryToZip, fileList);&#xD;
    //        //standards&#xD;
    //        File standarddirectoryToZip = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/standardfiles/&quot;);&#xD;
    //        getAllFiles(standarddirectoryToZip, fileList);&#xD;
    //        &#xD;
    writeZipFile(fileList);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Hbk2MBUTEemIe6OhVnSywA" name="restorebackup" specification="_HbjoEBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    OpenDialog od = new OpenDialog(&quot;Restore a backup...&quot;);&#xD;
    String path = od.getPath();&#xD;
    if (!path.endsWith(&quot;.zip&quot;)) {&#xD;
        JOptionPane.showMessageDialog(null, &quot;You must select a zip file&quot;, &quot;Restore backup&quot;, JOptionPane.ERROR_MESSAGE);&#xD;
    } else {&#xD;
        try {&#xD;
            DriverManager.getConnection(&quot;jdbc:derby:;shutdown=true;user=test;password=test&quot;);&#xD;
        } catch (SQLException e) {&#xD;
        }&#xD;
        unzipFunction(path);&#xD;
        File fdbs = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/temp-geljdb/geljdb&quot;);&#xD;
        File fdbt = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/geljdb&quot;);&#xD;
        fdbt.renameTo(new File(System.getProperty(&quot;user.dir&quot;) + &quot;/geljdb-1&quot;));&#xD;
        Files.move(fdbs.toPath(), fdbt.toPath(), REPLACE_EXISTING);&#xD;
        File fims = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/temp-geljdb/GelJDBImages&quot;);&#xD;
        File fimt = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/GelJDBImages&quot;);&#xD;
        fimt.renameTo(new File(System.getProperty(&quot;user.dir&quot;) + &quot;/GelJDBImages-1&quot;));&#xD;
        Files.move(fims.toPath(), fimt.toPath(), REPLACE_EXISTING);&#xD;
        File fstandards = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/temp-geljdb/standardfiles&quot;);&#xD;
        File fstandardt = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/standardfiles&quot;);&#xD;
        fstandardt.renameTo(new File(System.getProperty(&quot;user.dir&quot;) + &quot;/standardfiles-1&quot;));&#xD;
        Files.move(fstandards.toPath(), fstandardt.toPath(), REPLACE_EXISTING);&#xD;
        deleteDir(new File(System.getProperty(&quot;user.dir&quot;) + &quot;/temp-geljdb&quot;));&#xD;
        deleteDir(new File(System.getProperty(&quot;user.dir&quot;) + &quot;/geljdb-1&quot;));&#xD;
        deleteDir(new File(System.getProperty(&quot;user.dir&quot;) + &quot;/GelJDBImages-1&quot;));&#xD;
        deleteDir(new File(System.getProperty(&quot;user.dir&quot;) + &quot;/standardfiles-1&quot;));&#xD;
        JOptionPane.showMessageDialog(null, &quot;You need to restart GelJDB to finish the recovery.&quot;);&#xD;
    //            restartApplication();&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Hbv1UBUTEemIe6OhVnSywA" name="getAllFiles" specification="_HbpusBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    try {&#xD;
        File[] files = dir.listFiles();&#xD;
        File file1 = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/GelJDBImages&quot;);&#xD;
        File file2 = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/geljdb&quot;);&#xD;
        File file3 = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/standardfiles&quot;);&#xD;
        for (File file : files) {&#xD;
            if (!first) {&#xD;
                fileList.add(file);&#xD;
                if (file.isDirectory()) {&#xD;
                    System.out.println(&quot;directory:&quot; + file.getCanonicalPath());&#xD;
                    getAllFiles(file, fileList, false);&#xD;
                } else {&#xD;
                    System.out.println(&quot;     file:&quot; + file.getCanonicalPath());&#xD;
                }&#xD;
            } else {&#xD;
                if (file.isDirectory() &amp;&amp; (file.getPath().equals(file1.getPath()) || file.getPath().equals(file2.getPath()) || file.getPath().equals(file3.getPath()))) {&#xD;
                    fileList.add(file);&#xD;
                    getAllFiles(file, fileList, false);&#xD;
                }&#xD;
            }&#xD;
        }&#xD;
    } catch (IOException e) {&#xD;
        e.printStackTrace();&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Hb1U4BUTEemIe6OhVnSywA" name="writeZipFile" specification="_HbyRkBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    try {&#xD;
        java.text.SimpleDateFormat todaysDate = new java.text.SimpleDateFormat(&quot;yyyy-MM-dd&quot;);&#xD;
        SaveDialog sd = new SaveDialog(&quot;Save backup...&quot;, &quot;geljdb-&quot; + todaysDate.format((java.util.Calendar.getInstance()).getTime()), &quot;.zip&quot;);&#xD;
        String dir = sd.getDirectory();&#xD;
        String name = sd.getFileName();&#xD;
        if (dir == null || name == null) {&#xD;
            return;&#xD;
        }&#xD;
        File directoryToZip = new File(System.getProperty(&quot;user.dir&quot;));&#xD;
        FileOutputStream fos = new FileOutputStream(dir + name);&#xD;
        ZipOutputStream zos = new ZipOutputStream(fos);&#xD;
        for (File file : fileList) {&#xD;
            if (!file.isDirectory()) {&#xD;
                // we only zip files, not directories&#xD;
                addToZip(directoryToZip, file, zos);&#xD;
            }&#xD;
        }&#xD;
        zos.close();&#xD;
        fos.close();&#xD;
    } catch (FileNotFoundException e) {&#xD;
        e.printStackTrace();&#xD;
    } catch (IOException e) {&#xD;
        e.printStackTrace();&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Hb-e0BUTEemIe6OhVnSywA" name="addToZip" specification="_Hb4_QBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    FileInputStream fis = new FileInputStream(file);&#xD;
    // we want the zipEntry's path to be a relative path that is relative&#xD;
    // to the directory being zipped, so chop off the rest of the path&#xD;
    String zipFilePath = file.getCanonicalPath().substring(directoryToZip.getCanonicalPath().length() + 1, file.getCanonicalPath().length());&#xD;
    System.out.println(&quot;Writing '&quot; + zipFilePath + &quot;' to zip file&quot;);&#xD;
    ZipEntry zipEntry = new ZipEntry(zipFilePath);&#xD;
    zos.putNextEntry(zipEntry);&#xD;
    byte[] bytes = new byte[1024];&#xD;
    int length;&#xD;
    while ((length = fis.read(bytes)) >= 0) {&#xD;
        zos.write(bytes, 0, length);&#xD;
    }&#xD;
    zos.closeEntry();&#xD;
    fis.close();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HcCJMBUTEemIe6OhVnSywA" name="unzipFunction" specification="_HcAUABUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    File srcFile = new File(filename);&#xD;
    // create a directory with the same name to which the contents will be extracted&#xD;
    String zipPath = System.getProperty(&quot;user.dir&quot;) + &quot;/temp-geljdb&quot;;&#xD;
    File temp = new File(zipPath);&#xD;
    temp.mkdir();&#xD;
    ZipFile zipFile = null;&#xD;
    try {&#xD;
        zipFile = new ZipFile(srcFile);&#xD;
        // get an enumeration of the ZIP file entries&#xD;
        Enumeration&lt;? extends ZipEntry> e = zipFile.entries();&#xD;
        while (e.hasMoreElements()) {&#xD;
            ZipEntry entry = e.nextElement();&#xD;
            File destinationPath = new File(zipPath, entry.getName());&#xD;
            //create parent directories&#xD;
            destinationPath.getParentFile().mkdirs();&#xD;
            // if the entry is a file extract it&#xD;
            if (entry.isDirectory()) {&#xD;
                continue;&#xD;
            } else {&#xD;
                System.out.println(&quot;Extracting file: &quot; + destinationPath);&#xD;
                BufferedInputStream bis = new BufferedInputStream(zipFile.getInputStream(entry));&#xD;
                int b;&#xD;
                byte buffer[] = new byte[1024];&#xD;
                FileOutputStream fos = new FileOutputStream(destinationPath);&#xD;
                BufferedOutputStream bos = new BufferedOutputStream(fos, 1024);&#xD;
                while ((b = bis.read(buffer, 0, 1024)) != -1) {&#xD;
                    bos.write(buffer, 0, b);&#xD;
                }&#xD;
                bos.close();&#xD;
                bis.close();&#xD;
            }&#xD;
        }&#xD;
    } catch (IOException ioe) {&#xD;
        System.out.println(&quot;Error opening zip file&quot; + ioe);&#xD;
    } finally {&#xD;
        try {&#xD;
            if (zipFile != null) {&#xD;
                zipFile.close();&#xD;
            }&#xD;
        } catch (IOException ioe) {&#xD;
            System.out.println(&quot;Error while closing zip file&quot; + ioe);&#xD;
        }&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HbgkwBUTEemIe6OhVnSywA" name="createbackup" visibility="public" isStatic="true" method="_Hbhy4BUTEemIe6OhVnSywA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HbjoEBUTEemIe6OhVnSywA" name="restorebackup" visibility="public" isStatic="true" method="_Hbk2MBUTEemIe6OhVnSywA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HbpusBUTEemIe6OhVnSywA" name="getAllFiles" visibility="public" isStatic="true" method="_Hbv1UBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_Hbq80BUTEemIe6OhVnSywA" name="dir"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HbsyABUTEemIe6OhVnSywA" name="fileList">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_HbtZEBUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HbuAIBUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HbunMBUTEemIe6OhVnSywA" name="first">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HbyRkBUTEemIe6OhVnSywA" name="writeZipFile" visibility="public" isStatic="true" method="_Hb1U4BUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HbzfsBUTEemIe6OhVnSywA" name="fileList">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Hb0GwBUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Hb0t0BUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_Hb4_QBUTEemIe6OhVnSywA" name="addToZip" visibility="public" isStatic="true" method="_Hb-e0BUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_Hb6NYBUTEemIe6OhVnSywA" name="directoryToZip"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_Hb7bgBUTEemIe6OhVnSywA" name="file"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_Hb8poBUTEemIe6OhVnSywA" name="zos"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HcAUABUTEemIe6OhVnSywA" name="unzipFunction" visibility="public" isStatic="true" method="_HcCJMBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HcA7EBUTEemIe6OhVnSywA" name="filename"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_HcHowBUTEemIe6OhVnSywA" name="ComparisonQueries" visibility="public">
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HcL6MBUTEemIe6OhVnSywA" name="insertComparison" specification="_HcJd8BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Connection con = null;&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        PreparedStatement ps = con.prepareStatement(&quot;INSERT INTO Comparison (id, name, date, similarityMethod, linkage, tolerance,comments,fkStudy)&quot; + &quot;VALUES (?,?,?,?,?,?,?,?)&quot;);&#xD;
        ps.setInt(1, s.getId());&#xD;
        ps.setString(2, s.getName());&#xD;
        ps.setDate(3, s.getDate());&#xD;
        ps.setString(4, s.getSimilarityMethod());&#xD;
        ps.setString(5, s.getLinkage());&#xD;
        ps.setDouble(6, s.getTolerance());&#xD;
        ps.setString(7, s.getComments());&#xD;
        ps.setInt(8, s.getStudy().getId());&#xD;
        ps.executeUpdate();&#xD;
        ps.close();&#xD;
        ArrayList&lt;LaneDB> lanes = s.getLanes();&#xD;
        for (LaneDB l : lanes) {&#xD;
            PreparedStatement ps1 = con.prepareStatement(&quot;INSERT INTO ComparisonLane (fkComparison,fkLane)&quot; + &quot;VALUES (?,?)&quot;);&#xD;
            ps1.setInt(1, s.getId());&#xD;
            ps1.setInt(2, l.getId());&#xD;
            ps1.executeUpdate();&#xD;
            ps1.close();&#xD;
        }&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HcRZwBUTEemIe6OhVnSywA" name="insertComparisonLane" specification="_HcNvYBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Connection con = null;&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        for (LaneDB l : lanes) {&#xD;
            PreparedStatement ps1 = con.prepareStatement(&quot;INSERT INTO ComparisonLane (fkComparison,fkLane)&quot; + &quot;VALUES (?,?)&quot;);&#xD;
            ps1.setInt(1, compid);&#xD;
            ps1.setInt(2, l.getId());&#xD;
            ps1.executeUpdate();&#xD;
            ps1.close();&#xD;
        }&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HcTO8RUTEemIe6OhVnSywA" name="insertComparisonLane" specification="_HcSn4BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Connection con = null;&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        PreparedStatement ps1 = con.prepareStatement(&quot;INSERT INTO ComparisonLane (fkComparison,fkLane)&quot; + &quot;VALUES (?,?)&quot;);&#xD;
        ps1.setInt(1, compid);&#xD;
        ps1.setInt(2, laneid);&#xD;
        ps1.executeUpdate();&#xD;
        ps1.close();&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HcZVkBUTEemIe6OhVnSywA" name="getComparisons" specification="_HcVEIBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Connection con = null;&#xD;
    Comparison s = null;&#xD;
    ArrayList&lt;Comparison> alu = new ArrayList&lt;>();&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        PreparedStatement ps = con.prepareStatement(&quot;SELECT * FROM Comparison INNER JOIN Study&quot; + &quot; ON Comparison.fkStudy=Study.id&quot; + &quot; WHERE Comparison.fkStudy=?&quot;);&#xD;
        ps.setInt(1, studyid);&#xD;
        ResultSet res = ps.executeQuery();&#xD;
        while (res.next()) {&#xD;
            s = new Comparison(res.getInt(1), res.getString(2), res.getDate(3), res.getString(4), res.getString(5), res.getInt(6), res.getString(7), getStudy(studyid));&#xD;
            PreparedStatement ps1 = con.prepareStatement(&quot;SELECT * FROM ComparisonLane&quot; + &quot; WHERE fkComparison=?&quot;);&#xD;
            ps1.setInt(1, res.getInt(1));&#xD;
            ResultSet res1 = ps1.executeQuery();&#xD;
            while (res1.next()) {&#xD;
                s.addLane(getLane(res1.getInt(&quot;fkLane&quot;)));&#xD;
            }&#xD;
            res1.close();&#xD;
            ps1.close();&#xD;
            alu.add(s);&#xD;
        }&#xD;
        res.close();&#xD;
        ps.close();&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    return alu;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Hcc_8BUTEemIe6OhVnSywA" name="lastComparisonid" specification="_HcajsBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Connection con = null;&#xD;
    int n = 0;&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        PreparedStatement ps = con.prepareStatement(&quot;SELECT id FROM Comparison &quot; + &quot;ORDER BY id DESC &quot;);&#xD;
        ResultSet res = ps.executeQuery();&#xD;
        if (res.next()) {&#xD;
            n = res.getInt(&quot;id&quot;) + 1;&#xD;
        }&#xD;
        res.close();&#xD;
        ps.close();&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    return n;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HcgqUBUTEemIe6OhVnSywA" name="updateComparison" specification="_Hce1IBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Connection con = null;&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        PreparedStatement ps = con.prepareStatement(&quot;UPDATE Comparison &quot; + &quot;SET name=?, date=?, similarityMethod=?, linkage=?, tolerance=?,comments=? &quot; + &quot;WHERE id=?&quot;);&#xD;
        ps.setString(1, s.getName());&#xD;
        ps.setDate(2, s.getDate());&#xD;
        ps.setString(3, s.getSimilarityMethod());&#xD;
        ps.setString(4, s.getLinkage());&#xD;
        ps.setDouble(5, s.getTolerance());&#xD;
        ps.setString(6, s.getComments());&#xD;
        ps.setInt(7, s.getId());&#xD;
        ps.executeUpdate();&#xD;
        ps.close();&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Hcmw8BUTEemIe6OhVnSywA" name="updateComparisonnameorcomments" specification="_HcifgBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Connection con = null;&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        // if nc is true, we change the name; otherwise, we change the comments&#xD;
        PreparedStatement ps = null;&#xD;
        if (nc) {&#xD;
            ps = con.prepareStatement(&quot;UPDATE Comparison &quot; + &quot;SET name=? &quot; + &quot;WHERE id=?&quot;);&#xD;
        } else {&#xD;
            ps = con.prepareStatement(&quot;UPDATE Comparison &quot; + &quot;SET comments=? &quot; + &quot;WHERE id=?&quot;);&#xD;
        }&#xD;
        ps.setString(1, change);&#xD;
        ps.setInt(2, id);&#xD;
        ps.executeUpdate();&#xD;
        ps.close();&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HcqbUBUTEemIe6OhVnSywA" name="updateDate" specification="_HcomIBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Connection con = null;&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        PreparedStatement ps = con.prepareStatement(&quot;UPDATE Comparison &quot; + &quot;SET date=? &quot; + &quot;WHERE id=? &quot;);&#xD;
        ps.setDate(1, date);&#xD;
        ps.setInt(2, id);&#xD;
        ps.executeUpdate();&#xD;
        ps.close();&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HcuFsBUTEemIe6OhVnSywA" name="getComparison" specification="_HcrpcBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Connection con = null;&#xD;
    Comparison s = null;&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        PreparedStatement ps = con.prepareStatement(&quot;SELECT * FROM Comparison INNER JOIN Study&quot; + &quot; ON Comparison.fkStudy=Study.id&quot; + &quot; WHERE Comparison.id=?&quot;);&#xD;
        ps.setInt(1, id);&#xD;
        ResultSet res = ps.executeQuery();&#xD;
        if (res.next()) {&#xD;
            s = new Comparison(res.getInt(1), res.getString(2), res.getDate(3), res.getString(4), res.getString(5), res.getInt(6), res.getString(7), getStudy(res.getInt(8)));&#xD;
            PreparedStatement ps1 = con.prepareStatement(&quot;SELECT * FROM ComparisonLane&quot; + &quot; WHERE fkComparison=?&quot;);&#xD;
            ps1.setInt(1, id);&#xD;
            ResultSet res1 = ps1.executeQuery();&#xD;
            while (res1.next()) {&#xD;
                s.addLane(getLane(res1.getInt(&quot;fkLane&quot;)));&#xD;
            }&#xD;
            res1.close();&#xD;
            ps1.close();&#xD;
        }&#xD;
        res.close();&#xD;
        ps.close();&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    return s;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HcvT0xUTEemIe6OhVnSywA" name="existscomparison" specification="_HcuswBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    boolean res1 = false;&#xD;
    Connection con = null;&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        PreparedStatement ps = con.prepareStatement(&quot;SELECT * FROM Comparison INNER JOIN Study&quot; + &quot; ON Comparison.fkStudy=Study.id&quot; + &quot; WHERE Study.id=? AND Comparison.name=?&quot;);&#xD;
        ps.setInt(1, studyid);&#xD;
        ps.setString(2, name);&#xD;
        ResultSet res = ps.executeQuery();&#xD;
        if (res.next()) {&#xD;
            res1 = true;&#xD;
        }&#xD;
        res.close();&#xD;
        ps.close();&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    return res1;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HcyXIBUTEemIe6OhVnSywA" name="deletecomparison" specification="_HcxJABUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Connection con = null;&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        PreparedStatement ps = con.prepareStatement(&quot;DELETE FROM Comparison &quot; + &quot;WHERE id=?&quot;);&#xD;
        ps.setInt(1, compid);&#xD;
        ps.executeUpdate();&#xD;
        ps.close();&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Hc6S8BUTEemIe6OhVnSywA" name="searchcomparisons" specification="_Hc0MUBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Connection con = null;&#xD;
    Comparison s = null;&#xD;
    ArrayList&lt;Comparison> alu = new ArrayList&lt;>();&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        int m = n;&#xD;
        String query = &quot;SELECT * FROM Comparison&quot; + &quot; INNER JOIN Study ON Comparison.fkStudy=Study.id&quot; + &quot; WHERE Study.id=&quot; + studyid + &quot; AND &quot;;&#xD;
        if (!name.equals(&quot;&quot;)) {&#xD;
            query = query + &quot; Comparison.name='&quot; + name + &quot;' &quot;;&#xD;
            m--;&#xD;
            if (m != 0) {&#xD;
                query = query + &quot; AND &quot;;&#xD;
            }&#xD;
        }&#xD;
        if (!similarity.equals(&quot; &quot;)) {&#xD;
            query = query + &quot; Comparison.similarityMethod='&quot; + similarity + &quot;' &quot;;&#xD;
            m--;&#xD;
            if (m != 0) {&#xD;
                query = query + &quot; AND &quot;;&#xD;
            }&#xD;
        }&#xD;
        if (!linkage.equals(&quot; &quot;)) {&#xD;
            query = query + &quot; Comparison.linkage='&quot; + linkage + &quot;' &quot;;&#xD;
            m--;&#xD;
            if (m != 0) {&#xD;
                query = query + &quot; AND &quot;;&#xD;
            }&#xD;
        }&#xD;
        if (!tolerance.equals(&quot;&quot;)) {&#xD;
            query = query + &quot; Comparison.tolerance=&quot; + tolerance + &quot; &quot;;&#xD;
            m--;&#xD;
            if (m != 0) {&#xD;
                query = query + &quot; AND &quot;;&#xD;
            }&#xD;
        }&#xD;
        if (!fromdate.equals(&quot;&quot;)) {&#xD;
            query = query + &quot; Comparison.date >=Date('&quot; + fromdate + &quot;') &quot;;&#xD;
            m--;&#xD;
            if (m != 0) {&#xD;
                query = query + &quot; AND &quot;;&#xD;
            }&#xD;
        }&#xD;
        if (!todate.equals(&quot;&quot;)) {&#xD;
            query = query + &quot; Comparison.date &lt;=Date('&quot; + todate.toString() + &quot;') &quot;;&#xD;
        }&#xD;
        PreparedStatement ps = con.prepareStatement(query);&#xD;
        ResultSet res = ps.executeQuery();&#xD;
        while (res.next()) {&#xD;
            s = new Comparison(res.getInt(1), res.getString(2), res.getDate(3), res.getString(4), res.getString(5), res.getInt(6), res.getString(7), getStudy(studyid));&#xD;
            PreparedStatement ps1 = con.prepareStatement(&quot;SELECT * FROM ComparisonLane&quot; + &quot; WHERE fkComparison=?&quot;);&#xD;
            ps1.setInt(1, studyid);&#xD;
            ResultSet res1 = ps1.executeQuery();&#xD;
            while (res1.next()) {&#xD;
                s.addLane(getLane(res1.getInt(&quot;fkLane&quot;)));&#xD;
            }&#xD;
            res1.close();&#xD;
            ps1.close();&#xD;
            alu.add(s);&#xD;
        }&#xD;
        res.close();&#xD;
        ps.close();&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    return alu;&#xD;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HcJd8BUTEemIe6OhVnSywA" name="insertComparison" visibility="public" isStatic="true" method="_HcL6MBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HcKsEBUTEemIe6OhVnSywA" name="s" type="_EHPXoBUTEemIe6OhVnSywA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HcNvYBUTEemIe6OhVnSywA" name="insertComparisonLane" visibility="public" isStatic="true" method="_HcRZwBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HcO9gBUTEemIe6OhVnSywA" name="compid">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HcQLoBUTEemIe6OhVnSywA" name="lanes" type="_EHtRsBUTEemIe6OhVnSywA">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_HcQysBUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HcQysRUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HcSn4BUTEemIe6OhVnSywA" name="insertComparisonLane" visibility="public" isStatic="true" method="_HcTO8RUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HcSn4RUTEemIe6OhVnSywA" name="compid">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HcTO8BUTEemIe6OhVnSywA" name="laneid">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HcVEIBUTEemIe6OhVnSywA" name="getComparisons" visibility="public" isStatic="true" method="_HcZVkBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HcWSQBUTEemIe6OhVnSywA" type="_EHPXoBUTEemIe6OhVnSywA" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_HcXgYBUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HcXgYRUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HcYugBUTEemIe6OhVnSywA" name="studyid">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HcajsBUTEemIe6OhVnSywA" name="lastComparisonid" visibility="public" isStatic="true" method="_Hcc_8BUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_Hcbx0BUTEemIe6OhVnSywA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_Hce1IBUTEemIe6OhVnSywA" name="updateComparison" visibility="public" isStatic="true" method="_HcgqUBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HcgDQBUTEemIe6OhVnSywA" name="s" type="_EHPXoBUTEemIe6OhVnSywA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HcifgBUTEemIe6OhVnSywA" name="updateComparisonnameorcomments" visibility="public" isStatic="true" method="_Hcmw8BUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HcjtoBUTEemIe6OhVnSywA" name="id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_Hck7wBUTEemIe6OhVnSywA" name="change"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HcmJ4BUTEemIe6OhVnSywA" name="nc">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HcomIBUTEemIe6OhVnSywA" name="updateDate" visibility="public" isStatic="true" method="_HcqbUBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HcpNMBUTEemIe6OhVnSywA" name="id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_Hcp0QBUTEemIe6OhVnSywA" name="date"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HcrpcBUTEemIe6OhVnSywA" name="getComparison" visibility="public" isStatic="true" method="_HcuFsBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_Hcs3kBUTEemIe6OhVnSywA" type="_EHPXoBUTEemIe6OhVnSywA" direction="return"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HcteoBUTEemIe6OhVnSywA" name="id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HcuswBUTEemIe6OhVnSywA" name="existscomparison" visibility="public" isStatic="true" method="_HcvT0xUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HcvT0BUTEemIe6OhVnSywA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HcvT0RUTEemIe6OhVnSywA" name="name"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HcvT0hUTEemIe6OhVnSywA" name="studyid">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HcxJABUTEemIe6OhVnSywA" name="deletecomparison" visibility="public" isStatic="true" method="_HcyXIBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HcxwEBUTEemIe6OhVnSywA" name="compid">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_Hc0MUBUTEemIe6OhVnSywA" name="searchcomparisons" visibility="public" isStatic="true" method="_Hc6S8BUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_Hc2BgBUTEemIe6OhVnSywA" type="_EHPXoBUTEemIe6OhVnSywA" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Hc2okBUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Hc3PoBUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_Hc32sBUTEemIe6OhVnSywA" name="studyid">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_Hc4dwBUTEemIe6OhVnSywA" name="name"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_Hc5E0BUTEemIe6OhVnSywA" name="similarity"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_Hc5E0RUTEemIe6OhVnSywA" name="linkage"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_Hc5E0hUTEemIe6OhVnSywA" name="tolerance"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_Hc5r4BUTEemIe6OhVnSywA" name="fromdate"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_Hc5r4RUTEemIe6OhVnSywA" name="todate"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_Hc5r4hUTEemIe6OhVnSywA" name="n">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_HdAZkBUTEemIe6OhVnSywA" name="ExperimentQueries" visibility="public">
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HdED8BUTEemIe6OhVnSywA" name="insertExperiment" specification="_HdBnsBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Connection con = null;&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        PreparedStatement ps = con.prepareStatement(&quot;INSERT INTO Experiment (id, name, date, imageName, calibrationMethod, comments, fkStudy,fkMarker,fkUser)&quot; + &quot;VALUES (?,?,?,?,?,?,?,?,?)&quot;);&#xD;
        ps.setInt(1, s.getId());&#xD;
        ps.setString(2, s.getName());&#xD;
        ps.setDate(3, s.getDate());&#xD;
        ps.setString(4, s.getImagename());&#xD;
        ps.setInt(5, s.getCalibrationMethod());&#xD;
        ps.setString(6, s.getComments());&#xD;
        ps.setInt(7, s.getStudy().getId());&#xD;
        ps.setInt(8, s.getMarker().getId());&#xD;
        ps.setInt(9, s.getUser().getId());&#xD;
        ps.executeUpdate();&#xD;
        ps.close();&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HdJjgBUTEemIe6OhVnSywA" name="getExperiments" specification="_HdF5IBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Connection con = null;&#xD;
    Experiment s = null;&#xD;
    ArrayList&lt;Experiment> alu = new ArrayList&lt;>();&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        PreparedStatement ps = con.prepareStatement(&quot;SELECT * FROM Experiment INNER JOIN Study&quot; + &quot; ON Experiment.fkStudy=Study.id&quot; + &quot; WHERE Experiment.fkStudy=?&quot;);&#xD;
        ps.setInt(1, studyid);&#xD;
        ResultSet res = ps.executeQuery();&#xD;
        while (res.next()) {&#xD;
            s = new Experiment(res.getInt(1), res.getString(2), res.getDate(3), res.getString(4), res.getInt(5), res.getString(6), getStudy(studyid), getMarker(res.getInt(8)), getUser(res.getInt(9)));&#xD;
            alu.add(s);&#xD;
        }&#xD;
        res.close();&#xD;
        ps.close();&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    return alu;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HdMm0BUTEemIe6OhVnSywA" name="getExperimentsofOtherStudies" specification="_HdKxoBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Connection con = null;&#xD;
    Experiment s = null;&#xD;
    ArrayList&lt;Experiment> alu = new ArrayList&lt;>();&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        PreparedStatement ps = con.prepareStatement(&quot;SELECT * FROM Experiment INNER JOIN Study&quot; + &quot; ON Experiment.fkStudy=Study.id&quot; + &quot; WHERE NOT Experiment.fkStudy=?&quot;);&#xD;
        ps.setInt(1, studyid);&#xD;
        ResultSet res = ps.executeQuery();&#xD;
        while (res.next()) {&#xD;
            s = new Experiment(res.getInt(1), res.getString(2), res.getDate(3), res.getString(4), res.getInt(5), res.getString(6), getStudy(res.getInt(7)), getMarker(res.getInt(8)), getUser(res.getInt(9)));&#xD;
            alu.add(s);&#xD;
        }&#xD;
        res.close();&#xD;
        ps.close();&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    return alu;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HdRfUBUTEemIe6OhVnSywA" name="getAllexperiments" specification="_HdOcABUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Connection con = null;&#xD;
    Experiment s = null;&#xD;
    ArrayList&lt;Experiment> alu = new ArrayList&lt;>();&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        PreparedStatement ps = con.prepareStatement(&quot;SELECT * FROM Experiment&quot;);&#xD;
        ResultSet res = ps.executeQuery();&#xD;
        while (res.next()) {&#xD;
            s = new Experiment(res.getInt(1), res.getString(2), res.getDate(3), res.getString(4), res.getInt(5), res.getString(6), getStudy(res.getInt(7)), getMarker(res.getInt(8)), getUser(res.getInt(9)));&#xD;
            alu.add(s);&#xD;
        }&#xD;
        res.close();&#xD;
        ps.close();&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    return alu;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HdUioBUTEemIe6OhVnSywA" name="anyexperiment" specification="_HdStcBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Connection con = null;&#xD;
    boolean b = false;&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        PreparedStatement ps = con.prepareStatement(&quot;SELECT * FROM Experiment&quot;);&#xD;
        ResultSet res = ps.executeQuery();&#xD;
        if (res.next()) {&#xD;
            b = true;&#xD;
        }&#xD;
        res.close();&#xD;
        ps.close();&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    return b;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HdYNABUTEemIe6OhVnSywA" name="lastExperimentid" specification="_HdVwwBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Connection con = null;&#xD;
    int n = 0;&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        PreparedStatement ps = con.prepareStatement(&quot;SELECT id FROM Experiment &quot; + &quot;ORDER BY id DESC &quot;);&#xD;
        ResultSet res = ps.executeQuery();&#xD;
        if (res.next()) {&#xD;
            n = res.getInt(&quot;id&quot;) + 1;&#xD;
        }&#xD;
        res.close();&#xD;
        ps.close();&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    return n;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HddskBUTEemIe6OhVnSywA" name="updateExperiment" specification="_HdaCMBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Connection con = null;&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        PreparedStatement ps = con.prepareStatement(&quot;UPDATE Experiment &quot; + &quot;SET name=?, date=?, imageName=?, calibrationMethod=?,comments=? &quot; + &quot;WHERE id=?&quot;);&#xD;
        ps.setString(1, s.getName());&#xD;
        ps.setDate(2, s.getDate());&#xD;
        ps.setString(3, s.getImagename());&#xD;
        ps.setInt(4, s.getCalibrationMethod());&#xD;
        ps.setString(5, s.getComments());&#xD;
        ps.setInt(6, id);&#xD;
        ps.executeUpdate();&#xD;
        ps.close();&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HdlBUBUTEemIe6OhVnSywA" name="updateExperimentnameorcomments" specification="_HdgI0BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Connection con = null;&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        // if nc is true, we change the name; otherwise, we change the comments&#xD;
        PreparedStatement ps = null;&#xD;
        if (nc) {&#xD;
            ps = con.prepareStatement(&quot;UPDATE Experiment &quot; + &quot;SET name=? &quot; + &quot;WHERE id=?&quot;);&#xD;
        } else {&#xD;
            ps = con.prepareStatement(&quot;UPDATE Experiment &quot; + &quot;SET comments=? &quot; + &quot;WHERE id=?&quot;);&#xD;
        }&#xD;
        ps.setString(1, change);&#xD;
        ps.setInt(2, id);&#xD;
        ps.executeUpdate();&#xD;
        ps.close();&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HdoEoRUTEemIe6OhVnSywA" name="updateDate" specification="_Hdm2gBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Connection con = null;&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        PreparedStatement ps = con.prepareStatement(&quot;UPDATE Experiment &quot; + &quot;SET date=? &quot; + &quot;WHERE id=? &quot;);&#xD;
        ps.setDate(1, date);&#xD;
        ps.setInt(2, id);&#xD;
        ps.executeUpdate();&#xD;
        ps.close();&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HdrH8BUTEemIe6OhVnSywA" name="getExperiment" specification="_HdorsBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Connection con = null;&#xD;
    Experiment s = null;&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        PreparedStatement ps = con.prepareStatement(&quot;SELECT * FROM Experiment INNER JOIN Study&quot; + &quot; ON Experiment.fkStudy=Study.id&quot; + &quot; WHERE Experiment.id=?&quot;);&#xD;
        ps.setInt(1, id);&#xD;
        ResultSet res = ps.executeQuery();&#xD;
        if (res.next()) {&#xD;
            s = new Experiment(res.getInt(1), res.getString(2), res.getDate(3), res.getString(4), res.getInt(5), res.getString(6), getStudy(res.getInt(7)), getMarker(res.getInt(8)), getUser(res.getInt(9)));&#xD;
        }&#xD;
        res.close();&#xD;
        ps.close();&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    return s;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HduyUBUTEemIe6OhVnSywA" name="existsexperiment" specification="_Hds9IBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    boolean res1 = false;&#xD;
    Connection con = null;&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        PreparedStatement ps = con.prepareStatement(&quot;SELECT * FROM Experiment INNER JOIN Study&quot; + &quot; ON Experiment.fkStudy=Study.id&quot; + &quot; WHERE Study.id=? AND Experiment.name=?&quot;);&#xD;
        ps.setInt(1, studyid);&#xD;
        ps.setString(2, name);&#xD;
        ResultSet res = ps.executeQuery();&#xD;
        if (res.next()) {&#xD;
            res1 = true;&#xD;
        }&#xD;
        res.close();&#xD;
        ps.close();&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    return res1;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HdvZYRUTEemIe6OhVnSywA" name="deleteexperiment" specification="_HduyURUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Connection con = null;&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        PreparedStatement ps = con.prepareStatement(&quot;DELETE FROM Experiment &quot; + &quot;WHERE id=?&quot;);&#xD;
        ps.setInt(1, expid);&#xD;
        ps.executeUpdate();&#xD;
        ps.close();&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HdzDwBUTEemIe6OhVnSywA" name="deletecomparisonsexperiment" specification="_HdxOkBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Connection con = null;&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        PreparedStatement ps = con.prepareStatement(&quot;SELECT * FROM Comparison &quot; + &quot;INNER JOIN ComparisonLane ON Comparison.id=ComparisonLane.fkComparison &quot; + &quot;INNER JOIN Lane ON Lane.id=ComparisonLane.fkLane &quot; + &quot;INNER JOIN Experiment ON Lane.fkExperiment=Experiment.id &quot; + &quot;WHERE Experiment.id=?&quot;);&#xD;
        ps.setInt(1, expid);&#xD;
        ResultSet res = ps.executeQuery();&#xD;
        while (res.next()) {&#xD;
            PreparedStatement ps1 = con.prepareStatement(&quot;DELETE FROM Comparison &quot; + &quot;WHERE id=?&quot;);&#xD;
            ps1.setInt(1, res.getInt(1));&#xD;
            ps1.executeUpdate();&#xD;
            ps1.close();&#xD;
        }&#xD;
        res.close();&#xD;
        ps.close();&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Hd3VMBUTEemIe6OhVnSywA" name="existscomparisonsexperiment" specification="_Hd0R4BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Connection con = null;&#xD;
    boolean result = false;&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        PreparedStatement ps = con.prepareStatement(&quot;SELECT * FROM ComparisonLane &quot; + &quot;INNER JOIN Lane ON Lane.id=ComparisonLane.fkLane &quot; + &quot;INNER JOIN Experiment ON Lane.fkExperiment=Experiment.id &quot; + &quot;WHERE Experiment.id=?&quot;);&#xD;
        ps.setInt(1, expid);&#xD;
        ResultSet res = ps.executeQuery();&#xD;
        result = res.next();&#xD;
        res.close();&#xD;
        ps.close();&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    return result;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HeEwkBUTEemIe6OhVnSywA" name="searchexperiments" specification="_Hd5KYBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Connection con = null;&#xD;
    Experiment s = null;&#xD;
    ArrayList&lt;Experiment> alu = new ArrayList&lt;>();&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        int m = n;&#xD;
        //mysql&#xD;
        //            String query = &quot;SELECT * FROM Experiment&quot;&#xD;
        //                    + &quot; INNER JOIN User ON Experiment.fkUser=User.id&quot;&#xD;
        //                    + &quot; INNER JOIN Study ON Experiment.fkStudy=Study.id&quot;&#xD;
        //                    + &quot; INNER JOIN Marker ON Experiment.fkMarker=Marker.id&quot;&#xD;
        //                    + &quot; WHERE Study.id='&quot; + studyid +&quot;' AND &quot;;&#xD;
        //javadb&#xD;
        String query = &quot;SELECT * FROM Experiment&quot; + &quot; INNER JOIN User0 ON Experiment.fkUser=User0.id&quot; + &quot; INNER JOIN Study ON Experiment.fkStudy=Study.id&quot; + &quot; INNER JOIN Marker ON Experiment.fkMarker=Marker.id&quot; + &quot; WHERE Study.id=&quot; + studyid + &quot; AND &quot;;&#xD;
        if (!name.equals(&quot;&quot;)) {&#xD;
            query = query + &quot; Experiment.name='&quot; + name + &quot;' &quot;;&#xD;
            m--;&#xD;
            if (m != 0) {&#xD;
                query = query + &quot; AND &quot;;&#xD;
            }&#xD;
        }&#xD;
        if (!author.equals(&quot;&quot;)) {&#xD;
            //mysql&#xD;
            //                query = query + &quot; User.username='&quot; + author + &quot;' &quot;;&#xD;
            //javadb&#xD;
            query = query + &quot; User0.username='&quot; + author + &quot;' &quot;;&#xD;
            m--;&#xD;
            if (m != 0) {&#xD;
                query = query + &quot; AND &quot;;&#xD;
            }&#xD;
        }&#xD;
        if (!marker.equals(&quot;&quot;)) {&#xD;
            query = query + &quot; Marker.name='&quot; + marker + &quot;' &quot;;&#xD;
            m--;&#xD;
            if (m != 0) {&#xD;
                query = query + &quot; AND &quot;;&#xD;
            }&#xD;
        }&#xD;
        if (!fromdate.equals(&quot;&quot;)) {&#xD;
            //mysql&#xD;
            //                query = query + &quot; Experiment.date >='&quot; + fromdate + &quot;' &quot;;&#xD;
            //javadb&#xD;
            query = query + &quot; Experiment.date >= Date('&quot; + fromdate + &quot;') &quot;;&#xD;
            m--;&#xD;
            if (m != 0) {&#xD;
                query = query + &quot; AND &quot;;&#xD;
            }&#xD;
        }&#xD;
        if (!todate.equals(&quot;&quot;)) {&#xD;
            //mysql&#xD;
            //                query = query + &quot; Experiment.date &lt;='&quot; + todate.toString() + &quot;' &quot;;&#xD;
            //javadb&#xD;
            query = query + &quot; Experiment.date &lt;= Date('&quot; + todate + &quot;') &quot;;&#xD;
        }&#xD;
        PreparedStatement ps = con.prepareStatement(query);&#xD;
        ResultSet res = ps.executeQuery();&#xD;
        while (res.next()) {&#xD;
            s = new Experiment(res.getInt(1), res.getString(2), res.getDate(3), res.getString(4), res.getInt(5), res.getString(6), getStudy(res.getInt(7)), getMarker(res.getInt(8)), getUser(res.getInt(9)));&#xD;
            alu.add(s);&#xD;
        }&#xD;
        res.close();&#xD;
        ps.close();&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    return alu;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HeF-sBUTEemIe6OhVnSywA" name="exportexperiment" specification="_HeFXoBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Connection con = null;&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        File f0 = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/experiment.exp&quot;);&#xD;
        f0.delete();&#xD;
        PreparedStatement ps = con.prepareStatement(&quot;CALL SYSCS_UTIL.SYSCS_EXPORT_QUERY &quot; + &quot;('SELECT * FROM Experiment WHERE Experiment.id=&quot; + e.getId() + &quot;' , '&quot; + f0.getPath() + &quot;',null,null,null)&quot;);&#xD;
        ps.executeUpdate();&#xD;
        ps.close();&#xD;
        File f1 = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/experiment.lanes&quot;);&#xD;
        f1.delete();&#xD;
        PreparedStatement ps1 = con.prepareStatement(&quot;CALL SYSCS_UTIL.SYSCS_EXPORT_QUERY &quot; + &quot;('SELECT * FROM Lane INNER JOIN Experiment ON Lane.fkExperiment=Experiment.id &quot; + &quot; WHERE Experiment.id=&quot; + e.getId() + &quot;' , '&quot; + f1.getPath() + &quot;',null,null,null)&quot;);&#xD;
        ps1.executeUpdate();&#xD;
        ps1.close();&#xD;
        File f2 = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/experiment.marker&quot;);&#xD;
        f2.delete();&#xD;
        PreparedStatement ps2 = con.prepareStatement(&quot;CALL SYSCS_UTIL.SYSCS_EXPORT_QUERY &quot; + &quot;('SELECT * FROM Marker INNER JOIN Experiment ON Marker.id=Experiment.fkMarker &quot; + &quot; WHERE Experiment.id=&quot; + e.getId() + &quot;' , '&quot; + f2.getPath() + &quot;',null,null,null)&quot;);&#xD;
        ps2.executeUpdate();&#xD;
        ps2.close();&#xD;
        File f3 = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/experiment.user&quot;);&#xD;
        f3.delete();&#xD;
        PreparedStatement ps3 = con.prepareStatement(&quot;CALL SYSCS_UTIL.SYSCS_EXPORT_QUERY &quot; + &quot;('SELECT * FROM User0 INNER JOIN Lab ON User0.fkLab=Lab.id &quot; + &quot;INNER JOIN Experiment ON Experiment.fkUser = User0.id &quot; + &quot; WHERE Experiment.id=&quot; + e.getId() + &quot;' , '&quot; + f3.getPath() + &quot;',null,null,null)&quot;);&#xD;
        ps3.executeUpdate();&#xD;
        ps3.close();&#xD;
        File f4 = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/experiment.adds&quot;);&#xD;
        f4.delete();&#xD;
        PreparedStatement ps4 = con.prepareStatement(&quot;CALL SYSCS_UTIL.SYSCS_EXPORT_QUERY &quot; + &quot;('SELECT * FROM LaneAddedInfo &quot; + &quot;INNER JOIN Lane ON Lane.id = LaneAddedInfo.fkLane &quot; + &quot;INNER JOIN Experiment ON Lane.fkExperiment=Experiment.id &quot; + &quot; WHERE Experiment.id=&quot; + e.getId() + &quot;' , '&quot; + f4.getPath() + &quot;',null,null,null)&quot;);&#xD;
        ps4.executeUpdate();&#xD;
        ps4.close();&#xD;
        List&lt;File> fileList = new ArrayList&lt;>();&#xD;
        fileList.add(f0);&#xD;
        fileList.add(f1);&#xD;
        fileList.add(f2);&#xD;
        fileList.add(f3);&#xD;
        fileList.add(f4);&#xD;
        File marker = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/standardfiles/&quot; + e.getMarker().getName() + &quot;.marker&quot;);&#xD;
        fileList.add(marker);&#xD;
        marker = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/standardfiles/info/&quot; + e.getMarker().getName() + &quot;.info&quot;);&#xD;
        fileList.add(marker);&#xD;
        marker = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/standardfiles/info/&quot; + e.getMarker().getName() + &quot;.pos&quot;);&#xD;
        fileList.add(marker);&#xD;
        zipexperiment(e, fileList);&#xD;
        f0.delete();&#xD;
        f1.delete();&#xD;
        f2.delete();&#xD;
        f3.delete();&#xD;
        f4.delete();&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HeHM0RUTEemIe6OhVnSywA" name="zipexperiment" specification="_HeF-sRUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    File dbdirectoryToZip = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/GelJDBImages/&quot; + exp.getStudy().getId() + &quot;/&quot; + exp.getUser().getUsername() + &quot;/experiments/&quot;);&#xD;
    getAllFilesExperiment(dbdirectoryToZip, fileList);&#xD;
    writeZipFileExperiment(exp, fileList);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HeHz5BUTEemIe6OhVnSywA" name="getAllFilesExperiment" specification="_HeHM0hUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    try {&#xD;
        File[] files = dir.listFiles();&#xD;
        for (File file : files) {&#xD;
            fileList.add(file);&#xD;
            if (file.isDirectory()) {&#xD;
                System.out.println(&quot;directory:&quot; + file.getCanonicalPath());&#xD;
                getAllFiles(file, fileList, false);&#xD;
            } else {&#xD;
                System.out.println(&quot;     file:&quot; + file.getCanonicalPath());&#xD;
            }&#xD;
        }&#xD;
    } catch (IOException e) {&#xD;
        e.printStackTrace();&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HeJCAxUTEemIe6OhVnSywA" name="writeZipFileExperiment" specification="_HeIa8BUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    SaveDialog sd = new SaveDialog(&quot;Export experiment...&quot;, e.getName(), &quot;.zip&quot;);&#xD;
    String dir = sd.getDirectory();&#xD;
    String name = sd.getFileName();&#xD;
    if (dir == null || name == null) {&#xD;
        return;&#xD;
    }&#xD;
    File directoryToZip = new File(System.getProperty(&quot;user.dir&quot;));&#xD;
    FileOutputStream fos = new FileOutputStream(dir + name);&#xD;
    ZipOutputStream zos = new ZipOutputStream(fos);&#xD;
    for (File file : fileList) {&#xD;
        if (!file.isDirectory()) {&#xD;
            // we only zip files, not directories&#xD;
            addToZip(directoryToZip, file, zos);&#xD;
        }&#xD;
    }&#xD;
    zos.close();&#xD;
    fos.close();&#xD;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HdBnsBUTEemIe6OhVnSywA" name="insertExperiment" visibility="public" isStatic="true" method="_HdED8BUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HdDc4BUTEemIe6OhVnSywA" name="s" type="_EJs1wBUTEemIe6OhVnSywA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HdF5IBUTEemIe6OhVnSywA" name="getExperiments" visibility="public" isStatic="true" method="_HdJjgBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HdHHQBUTEemIe6OhVnSywA" type="_EJs1wBUTEemIe6OhVnSywA" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_HdHuUBUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HdHuURUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HdIVYBUTEemIe6OhVnSywA" name="studyid">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HdKxoBUTEemIe6OhVnSywA" name="getExperimentsofOtherStudies" visibility="public" isStatic="true" method="_HdMm0BUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HdLYsBUTEemIe6OhVnSywA" type="_EJs1wBUTEemIe6OhVnSywA" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_HdL_wBUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HdL_wRUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HdL_whUTEemIe6OhVnSywA" name="studyid">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HdOcABUTEemIe6OhVnSywA" name="getAllexperiments" visibility="public" isStatic="true" method="_HdRfUBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HdPqIBUTEemIe6OhVnSywA" type="_EJs1wBUTEemIe6OhVnSywA" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_HdQRMBUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HdQ4QBUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HdStcBUTEemIe6OhVnSywA" name="anyexperiment" visibility="public" isStatic="true" method="_HdUioBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HdTUgBUTEemIe6OhVnSywA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HdVwwBUTEemIe6OhVnSywA" name="lastExperimentid" visibility="public" isStatic="true" method="_HdYNABUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HdW-4BUTEemIe6OhVnSywA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HdaCMBUTEemIe6OhVnSywA" name="updateExperiment" visibility="public" isStatic="true" method="_HddskBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HdbQUBUTEemIe6OhVnSywA" name="id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HdcecBUTEemIe6OhVnSywA" name="s" type="_EJs1wBUTEemIe6OhVnSywA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HdgI0BUTEemIe6OhVnSywA" name="updateExperimentnameorcomments" visibility="public" isStatic="true" method="_HdlBUBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HdhW8BUTEemIe6OhVnSywA" name="id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HdilEBUTEemIe6OhVnSywA" name="change"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HdjzMBUTEemIe6OhVnSywA" name="nc">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_Hdm2gBUTEemIe6OhVnSywA" name="updateDate" visibility="public" isStatic="true" method="_HdoEoRUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HdndkBUTEemIe6OhVnSywA" name="id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HdoEoBUTEemIe6OhVnSywA" name="date"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HdorsBUTEemIe6OhVnSywA" name="getExperiment" visibility="public" isStatic="true" method="_HdrH8BUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HdpSwBUTEemIe6OhVnSywA" type="_EJs1wBUTEemIe6OhVnSywA" direction="return"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_Hdqg4BUTEemIe6OhVnSywA" name="id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_Hds9IBUTEemIe6OhVnSywA" name="existsexperiment" visibility="public" isStatic="true" method="_HduyUBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HdtkMBUTEemIe6OhVnSywA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HduLQBUTEemIe6OhVnSywA" name="name"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HduLQRUTEemIe6OhVnSywA" name="studyid">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HduyURUTEemIe6OhVnSywA" name="deleteexperiment" visibility="public" isStatic="true" method="_HdvZYRUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HdvZYBUTEemIe6OhVnSywA" name="expid">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HdxOkBUTEemIe6OhVnSywA" name="deletecomparisonsexperiment" visibility="public" isStatic="true" method="_HdzDwBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HdycsBUTEemIe6OhVnSywA" name="expid">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_Hd0R4BUTEemIe6OhVnSywA" name="existscomparisonsexperiment" visibility="public" isStatic="true" method="_Hd3VMBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_Hd1gABUTEemIe6OhVnSywA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_Hd2HEBUTEemIe6OhVnSywA" name="expid">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_Hd5KYBUTEemIe6OhVnSywA" name="searchexperiments" visibility="public" isStatic="true" method="_HeEwkBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_Hd6_kBUTEemIe6OhVnSywA" type="_EJs1wBUTEemIe6OhVnSywA" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Hd7moBUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Hd8NsBUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_Hd80wBUTEemIe6OhVnSywA" name="studyid">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_Hd-C4BUTEemIe6OhVnSywA" name="name"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_Hd_RABUTEemIe6OhVnSywA" name="author"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HeAfIBUTEemIe6OhVnSywA" name="marker"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HeBtQBUTEemIe6OhVnSywA" name="fromdate"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HeC7YBUTEemIe6OhVnSywA" name="todate"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HeEJgBUTEemIe6OhVnSywA" name="n">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HeFXoBUTEemIe6OhVnSywA" name="exportexperiment" visibility="public" isStatic="true" method="_HeF-sBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HeFXoRUTEemIe6OhVnSywA" name="e" type="_EJs1wBUTEemIe6OhVnSywA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HeF-sRUTEemIe6OhVnSywA" name="zipexperiment" visibility="public" isStatic="true" method="_HeHM0RUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HeGlwBUTEemIe6OhVnSywA" name="exp" type="_EJs1wBUTEemIe6OhVnSywA"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HeGlwRUTEemIe6OhVnSywA" name="fileList">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_HeGlwhUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HeHM0BUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HeHM0hUTEemIe6OhVnSywA" name="getAllFilesExperiment" visibility="public" isStatic="true" method="_HeHz5BUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HeHz4BUTEemIe6OhVnSywA" name="dir"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HeHz4RUTEemIe6OhVnSywA" name="fileList">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_HeHz4hUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HeHz4xUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HeIa8BUTEemIe6OhVnSywA" name="writeZipFileExperiment" visibility="public" isStatic="true" method="_HeJCAxUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HeIa8RUTEemIe6OhVnSywA" name="e" type="_EJs1wBUTEemIe6OhVnSywA"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HeJCABUTEemIe6OhVnSywA" name="fileList">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_HeJCARUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HeJCAhUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_HeLeQBUTEemIe6OhVnSywA" name="MarkerQueries" visibility="public">
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HeQ90BUTEemIe6OhVnSywA" name="insertMarker" specification="_HeOhkBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Connection con = null;&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        PreparedStatement ps = con.prepareStatement(&quot;INSERT INTO Marker (id,name,file)&quot; + &quot;VALUES (?,?,?)&quot;);&#xD;
        ps.setInt(1, l.getId());&#xD;
        ps.setString(2, l.getName());&#xD;
        ps.setString(3, l.getFile());&#xD;
        ps.executeUpdate();&#xD;
        ps.close();&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HeVPQBUTEemIe6OhVnSywA" name="getMarkers" specification="_HeSzABUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Connection con = null;&#xD;
    Marker u = null;&#xD;
    ArrayList&lt;Marker> alu = new ArrayList&lt;>();&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        PreparedStatement ps = con.prepareStatement(&quot;SELECT * FROM Marker&quot;);&#xD;
        ResultSet res = ps.executeQuery();&#xD;
        while (res.next()) {&#xD;
            u = new Marker(res.getInt(&quot;id&quot;), res.getString(&quot;name&quot;), res.getString(&quot;file&quot;));&#xD;
            alu.add(u);&#xD;
        }&#xD;
        res.close();&#xD;
        ps.close();&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    return alu;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HeaHwBUTEemIe6OhVnSywA" name="getMarker" specification="_HeXEcBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Connection con = null;&#xD;
    Marker u = null;&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        PreparedStatement ps = con.prepareStatement(&quot;SELECT * FROM Marker WHERE id=?&quot;);&#xD;
        ps.setInt(1, id);&#xD;
        ResultSet res = ps.executeQuery();&#xD;
        if (res.next()) {&#xD;
            u = new Marker(res.getInt(&quot;id&quot;), res.getString(&quot;name&quot;), res.getString(&quot;file&quot;));&#xD;
        }&#xD;
        res.close();&#xD;
        ps.close();&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    return u;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Heg1cBUTEemIe6OhVnSywA" name="getMarker" specification="_HeckABUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Connection con = null;&#xD;
    Marker u = null;&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        PreparedStatement ps = con.prepareStatement(&quot;SELECT * FROM Marker WHERE name=?&quot;);&#xD;
        ps.setString(1, marker);&#xD;
        ResultSet res = ps.executeQuery();&#xD;
        if (res.next()) {&#xD;
            u = new Marker(res.getInt(&quot;id&quot;), res.getString(&quot;name&quot;), res.getString(&quot;file&quot;));&#xD;
        }&#xD;
        res.close();&#xD;
        ps.close();&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    return u;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HeiDkBUTEemIe6OhVnSywA" name="lastMarkerid" specification="_HehcgBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Connection con = null;&#xD;
    int n = 0;&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        PreparedStatement ps = con.prepareStatement(&quot;SELECT id FROM Marker &quot; + &quot;ORDER BY id DESC &quot;);&#xD;
        ResultSet res = ps.executeQuery();&#xD;
        if (res.next()) {&#xD;
            n = res.getInt(&quot;id&quot;) + 1;&#xD;
        }&#xD;
        res.close();&#xD;
        ps.close();&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    return n;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HelG4BUTEemIe6OhVnSywA" name="updateMarker" specification="_HeiqoBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    Connection con = null;&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        PreparedStatement ps = con.prepareStatement(&quot;UPDATE Marker &quot; + &quot;SET name=?, file=?&quot; + &quot;WHERE id=?&quot;);&#xD;
        ps.setString(1, l.getName());&#xD;
        ps.setString(2, l.getFile());&#xD;
        ps.setInt(3, id);&#xD;
        ps.executeUpdate();&#xD;
        ps.close();&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HepYUBUTEemIe6OhVnSywA" name="existsmarker" specification="_Hem8EBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    boolean res1 = false;&#xD;
    Connection con = null;&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        PreparedStatement ps = con.prepareStatement(&quot;SELECT * FROM Marker WHERE name=?&quot;);&#xD;
        ps.setString(1, name);&#xD;
        ResultSet res = ps.executeQuery();&#xD;
        if (res.next()) {&#xD;
            res1 = true;&#xD;
        }&#xD;
        res.close();&#xD;
        ps.close();&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    return res1;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HetpwBUTEemIe6OhVnSywA" name="existsmarker_id" specification="_HeqmcBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    int res1 = -1;&#xD;
    Connection con = null;&#xD;
    try {&#xD;
        con = establishconnection();&#xD;
        PreparedStatement ps = con.prepareStatement(&quot;SELECT * FROM Marker WHERE name=?&quot;);&#xD;
        ps.setString(1, name);&#xD;
        ResultSet res = ps.executeQuery();&#xD;
        if (res.next()) {&#xD;
            res1 = res.getInt(1);&#xD;
        }&#xD;
        res.close();&#xD;
        ps.close();&#xD;
    } catch (SQLException ex) {&#xD;
        ex.printStackTrace();&#xD;
    } finally {&#xD;
        if (con != null) {&#xD;
            try {&#xD;
                con.close();&#xD;
            } catch (SQLException ex) {&#xD;
                ex.printStackTrace();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    return res1;&#xD;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HeOhkBUTEemIe6OhVnSywA" name="insertMarker" visibility="public" isStatic="true" method="_HeQ90BUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HeQWwBUTEemIe6OhVnSywA" name="l" type="_EQG_wBUTEemIe6OhVnSywA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HeSzABUTEemIe6OhVnSywA" name="getMarkers" visibility="public" isStatic="true" method="_HeVPQBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HeTaEBUTEemIe6OhVnSywA" type="_EQG_wBUTEemIe6OhVnSywA" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_HeUBIBUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HeUoMBUTEemIe6OhVnSywA" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HeXEcBUTEemIe6OhVnSywA" name="getMarker" visibility="public" isStatic="true" method="_HeaHwBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HeYSkBUTEemIe6OhVnSywA" type="_EQG_wBUTEemIe6OhVnSywA" direction="return"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HeZgsBUTEemIe6OhVnSywA" name="id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HeckABUTEemIe6OhVnSywA" name="getMarker" visibility="public" isStatic="true" method="_Heg1cBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HeeZMBUTEemIe6OhVnSywA" type="_EQG_wBUTEemIe6OhVnSywA" direction="return"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HefnUBUTEemIe6OhVnSywA" name="marker"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HehcgBUTEemIe6OhVnSywA" name="lastMarkerid" visibility="public" isStatic="true" method="_HeiDkBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HehcgRUTEemIe6OhVnSywA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HeiqoBUTEemIe6OhVnSywA" name="updateMarker" visibility="public" isStatic="true" method="_HelG4BUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HejRsBUTEemIe6OhVnSywA" name="id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_Hekf0BUTEemIe6OhVnSywA" name="l" type="_EQG_wBUTEemIe6OhVnSywA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_Hem8EBUTEemIe6OhVnSywA" name="existsmarker" visibility="public" isStatic="true" method="_HepYUBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HenjIBUTEemIe6OhVnSywA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HeoxQBUTEemIe6OhVnSywA" name="name"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HeqmcBUTEemIe6OhVnSywA" name="existsmarker_id" visibility="public" isStatic="true" method="_HetpwBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_Her0kBUTEemIe6OhVnSywA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HetCsBUTEemIe6OhVnSywA" name="name"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_HewtEBUTEemIe6OhVnSywA" name="Connection" visibility="public">
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_He2MoBUTEemIe6OhVnSywA" name="establishconnection" specification="_HexUIBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //      JavaDB connection    &#xD;
    return DriverManager.getConnection(&quot;jdbc:derby:geljdb;create=true;user=test;password=test&quot;);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_He8TQBUTEemIe6OhVnSywA" name="establishconnectionrestore" specification="_He3awBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    //      Mysql connection&#xD;
    //        return DriverManager.getConnection(&quot;jdbc:mysql://localhost/GelJDB&quot;, &quot;test&quot;, &quot;test&quot;);&#xD;
    //      JavaDB connection    &#xD;
    String nsURL1 = &quot;jdbc:derby:;shutdown=true;user=test;password=test&quot;;&#xD;
    String nsURL2 = &quot;jdbc:derby:geljdb;restoreFrom=&quot; + restore + &quot;;user=test;password=test&quot;;&#xD;
    try {&#xD;
        DriverManager.getConnection(nsURL1);&#xD;
    } catch (java.sql.SQLException e) {&#xD;
    }&#xD;
    return DriverManager.getConnection(nsURL2);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_He-IcBUTEemIe6OhVnSywA" name="creategeljdb" specification="_He9hYBUTEemIe6OhVnSywA">
              <language>JAVA</language>
              <body>&#xD;
    try {&#xD;
        // Creation of database in JavaDB&#xD;
        java.sql.Connection dbConnection = establishconnection();&#xD;
        String sqlcreation = &quot;CREATE  TABLE  Lab ( id INT NOT NULL , name VARCHAR(100) , city VARCHAR(100) , country VARCHAR(100) , PRIMARY KEY (id) )&quot;;&#xD;
        Statement statement = dbConnection.createStatement();&#xD;
        statement.execute(sqlcreation);&#xD;
        sqlcreation = &quot;CREATE  TABLE  User0 ( id INT NOT NULL , userName VARCHAR(100) , name VARCHAR(50) , surname VARCHAR(50) , fkLab INT , PRIMARY KEY (id) , CONSTRAINT fk_User_Lab1   FOREIGN KEY (fkLab )   REFERENCES Lab (id )   ON DELETE NO ACTION   ON UPDATE NO ACTION)&quot;;&#xD;
        statement.execute(sqlcreation);&#xD;
        sqlcreation = &quot;CREATE INDEX fk_User_Lab1 ON User0 (fkLab ASC)&quot;;&#xD;
        statement.execute(sqlcreation);&#xD;
        sqlcreation = &quot;CREATE  TABLE  Study ( id INT NOT NULL , name VARCHAR(45) , date DATE , path VARCHAR(500) , comments VARCHAR(500) , fkUser INT , PRIMARY KEY (id) , CONSTRAINT fk_Study_User1   FOREIGN KEY (fkUser )   REFERENCES User0 (id )   ON DELETE NO ACTION   ON UPDATE NO ACTION)&quot;;&#xD;
        statement.execute(sqlcreation);&#xD;
        sqlcreation = &quot;CREATE  INDEX fk_Study_User1 ON Study (fkUser ASC)&quot;;&#xD;
        statement.execute(sqlcreation);&#xD;
        sqlcreation = &quot;CREATE  TABLE  Marker ( id INT NOT NULL , name VARCHAR(100) , file VARCHAR(500) , PRIMARY KEY (id) )&quot;;&#xD;
        statement.execute(sqlcreation);&#xD;
        sqlcreation = &quot;CREATE  TABLE  Experiment ( id INT NOT NULL , name VARCHAR(45) , date DATE , imageName VARCHAR(100) , calibrationMethod INT , comments VARCHAR(500) , fkStudy INT CONSTRAINT fk_Experiment_Study   REFERENCES Study    ON DELETE CASCADE   ON UPDATE RESTRICT, fkMarker INT  CONSTRAINT fk_Experiment_Marker1   REFERENCES Marker (id )   ON DELETE NO ACTION   ON UPDATE NO ACTION, fkUser INT CONSTRAINT fk_Experiment_User1   REFERENCES User0    ON DELETE NO ACTION   ON UPDATE NO ACTION, PRIMARY KEY (id))&quot;;&#xD;
        statement.execute(sqlcreation);&#xD;
        sqlcreation = &quot;CREATE INDEX fk_Experiment_Study on Experiment (fkUser ASC)&quot;;&#xD;
        statement.execute(sqlcreation);&#xD;
        sqlcreation = &quot;CREATE INDEX fk_Experiment_Marker1 on Experiment (fkMarker ASC)&quot;;&#xD;
        statement.execute(sqlcreation);&#xD;
        sqlcreation = &quot;CREATE  TABLE  Comparison ( id INT NOT NULL , name VARCHAR(45) , date DATE , similarityMethod VARCHAR(45) , linkage VARCHAR(45) , tolerance DOUBLE , comments VARCHAR(500) , fkStudy INT , PRIMARY KEY (id) , CONSTRAINT fk_comparison_Study1   FOREIGN KEY (fkStudy )   REFERENCES Study (id )   ON DELETE CASCADE   ON UPDATE RESTRICT)&quot;;&#xD;
        statement.execute(sqlcreation);&#xD;
        sqlcreation = &quot;CREATE  INDEX fk_comparison_Study1 on Comparison (fkStudy ASC)&quot;;&#xD;
        statement.execute(sqlcreation);&#xD;
        sqlcreation = &quot;CREATE  TABLE  Lane ( id INT NOT NULL , genus VARCHAR(100) , species VARCHAR(100) , strainNumber VARCHAR(100) , country VARCHAR(100) , MSLT VARCHAR(100) , isMarker BOOLEAN , comments VARCHAR(500) , fkExperiment INT , PRIMARY KEY (id) , CONSTRAINT fk_Lane_Experiment1   FOREIGN KEY (fkExperiment )   REFERENCES Experiment (id )   ON DELETE CASCADE   ON UPDATE RESTRICT)&quot;;&#xD;
        statement.execute(sqlcreation);&#xD;
        sqlcreation = &quot;Create  INDEX fk_Lane_Experiment1 on Lane (fkExperiment ASC)&quot;;&#xD;
        statement.execute(sqlcreation);&#xD;
        sqlcreation = &quot;CREATE  TABLE  LaneAddedInfo ( id INT NOT NULL , fieldName VARCHAR(100) , fieldValue VARCHAR(100) , fkLane INT , PRIMARY KEY (id) , CONSTRAINT fk_LaneAddedInfo_Lane1   FOREIGN KEY (fkLane )   REFERENCES Lane (id )   ON DELETE CASCADE   ON UPDATE RESTRICT)&quot;;&#xD;
        statement.execute(sqlcreation);&#xD;
        sqlcreation = &quot;CREATE  INDEX fk_LaneAddedInfo_Lane1 on LaneAddedInfo (fkLane ASC)&quot;;&#xD;
        statement.execute(sqlcreation);&#xD;
        sqlcreation = &quot;CREATE  TABLE  ComparisonLane ( fkComparison INT NOT NULL , fkLane INT NOT NULL , PRIMARY KEY (fkComparison, fkLane) ,CONSTRAINT fk_comparison_has_Lane_comparison1   FOREIGN KEY (fkComparison )   REFERENCES Comparison (id )   ON DELETE CASCADE   ON UPDATE RESTRICT, CONSTRAINT fk_comparison_has_Lane_Lane1   FOREIGN KEY (fkLane )   REFERENCES Lane (id )   ON DELETE CASCADE   ON UPDATE RESTRICT)&quot;;&#xD;
        statement.execute(sqlcreation);&#xD;
        sqlcreation = &quot;CREATE INDEX fk_comparison_has_Lane_Lane1 on ComparisonLane (fkLane ASC)&quot;;&#xD;
        statement.execute(sqlcreation);&#xD;
        sqlcreation = &quot;CREATE INDEX fk_comparison_has_Lane_comparison1 on ComparisonLane (fkComparison ASC)&quot;;&#xD;
        statement.execute(sqlcreation);&#xD;
        sqlcreation = &quot;CREATE  TABLE  UnfinishedExperiment ( id INT NOT NULL , name VARCHAR(45) , step INT , path VARCHAR(100) , fkStudy INT , PRIMARY KEY (id) , CONSTRAINT fkStudy   FOREIGN KEY (fkStudy )   REFERENCES Study (id )   ON DELETE CASCADE   ON UPDATE RESTRICT)&quot;;&#xD;
        statement.execute(sqlcreation);&#xD;
        sqlcreation = &quot;CREATE  INDEX fkStudy on UnfinishedExperiment (fkStudy ASC)&quot;;&#xD;
        statement.execute(sqlcreation);&#xD;
        if (lastMarkerid() == 0) {&#xD;
            String workingdir = System.getProperty(&quot;user.dir&quot;) + &quot;/standardfiles/&quot;;&#xD;
            insertMarker(new Marker(0, &quot;Lambda_ladder_PFG_Marker&quot;, workingdir + &quot;Lambda_ladder_PFG_Marker&quot; + &quot;.marker&quot;));&#xD;
            insertMarker(new Marker(1, &quot;Midrange_PFG_Marker_I&quot;, workingdir + &quot;Midrange_PFG_Marker_I&quot; + &quot;.marker&quot;));&#xD;
            insertMarker(new Marker(2, &quot;Low_Range_PFG_Marker&quot;, workingdir + &quot;Low_Range_PFG_Marker&quot; + &quot;.marker&quot;));&#xD;
        }&#xD;
        dbConnection.close();&#xD;
    } catch (SQLException ex) {&#xD;
        if (ex.getSQLState().equalsIgnoreCase(&quot;X0Y32&quot;)) {&#xD;
        }&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HexUIBUTEemIe6OhVnSywA" name="establishconnection" visibility="public" isStatic="true" method="_He2MoBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HezwYRUTEemIe6OhVnSywA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_He3awBUTEemIe6OhVnSywA" name="establishconnectionrestore" visibility="public" isStatic="true" method="_He8TQBUTEemIe6OhVnSywA">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_He4o4BUTEemIe6OhVnSywA" direction="return"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_He53ABUTEemIe6OhVnSywA" name="restore"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_He9hYBUTEemIe6OhVnSywA" name="creategeljdb" visibility="public" isStatic="true" method="_He-IcBUTEemIe6OhVnSywA"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_L_jXsBUTEemIe6OhVnSywA" name="ij">
        <packagedElement xmi:type="uml:Package" xmi:id="_L_j-wBUTEemIe6OhVnSywA" name="workspace">
          <packagedElement xmi:type="uml:Package" xmi:id="_L_lM4BUTEemIe6OhVnSywA" name="GelJ">
            <packagedElement xmi:type="uml:Class" xmi:id="_L_mbABUTEemIe6OhVnSywA" name="NormaliseManager" visibility="public">
              <generalization xmi:type="uml:Generalization" xmi:id="_L_o3QBUTEemIe6OhVnSywA" general="_L_nCEBUTEemIe6OhVnSywA"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_L_1rkBUTEemIe6OhVnSywA" name="LOC_KEY" visibility="public" isLeaf="true" isStatic="true" isUnique="false">
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_L_25sBUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>&quot;manager.loc&quot;</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_L_3gwBUTEemIe6OhVnSywA" name="BUTTONS" visibility="private" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_L_4u4BUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>11</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_L_5V8BUTEemIe6OhVnSywA" name="DRAW" visibility="private" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_L_6kEBUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>0</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_L_7yMBUTEemIe6OhVnSywA" name="FILL" visibility="private" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_L_7yMRUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>1</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_L_8ZQBUTEemIe6OhVnSywA" name="LABEL" visibility="private" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_L_8ZQRUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>2</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_L_8ZQhUTEemIe6OhVnSywA" name="SHOW_ALL" visibility="private" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_L_9nYBUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>0</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_L_-OcBUTEemIe6OhVnSywA" name="SHOW_NONE" visibility="private" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MAADoBUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>1</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MAAqsBUTEemIe6OhVnSywA" name="LABELS" visibility="private" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MAAqsRUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>2</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MABRwBUTEemIe6OhVnSywA" name="NO_LABELS" visibility="private" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MACf4BUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>3</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MAEVEBUTEemIe6OhVnSywA" name="MENU" visibility="private" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MAFjMBUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>0</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MAFjMRUTEemIe6OhVnSywA" name="COMMAND" visibility="private" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MAHYYBUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>1</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MAH_cBUTEemIe6OhVnSywA" name="IGNORE_POSITION" visibility="private" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MAJNkBUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>-999</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MAKbsBUTEemIe6OhVnSywA" name="CHANNEL" visibility="private" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MAKbsRUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>0</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MAKbshUTEemIe6OhVnSywA" name="SLICE" visibility="private" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MALp0BUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>1</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MAM38BUTEemIe6OhVnSywA" name="FRAME" visibility="private" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MAOGEBUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>2</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MAPUMBUTEemIe6OhVnSywA" name="SHOW_DIALOG" visibility="private" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MAPUMRUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>3</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MAP7QBUTEemIe6OhVnSywA" name="rows" visibility="private" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MARJYBUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>15</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MARwcBUTEemIe6OhVnSywA" name="lastNonShiftClick" visibility="private" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MAS-kBUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>-1</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MATloBUTEemIe6OhVnSywA" name="allowMultipleSelections" visibility="private" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MAUMsBUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>true</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MAUzwBUTEemIe6OhVnSywA" name="moreButtonLabel" visibility="private" isStatic="true" isUnique="false">
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MAVa0BUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>&quot;More &quot; + '»'</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MAYeIBUTEemIe6OhVnSywA" name="panel" visibility="private" type="_MAWB4BUTEemIe6OhVnSywA" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MAa6YRUTEemIe6OhVnSywA" name="instance" visibility="private" isStatic="true" type="_MAZFMBUTEemIe6OhVnSywA" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MAbhcBUTEemIe6OhVnSywA" name="colorIndex" visibility="private" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MAbhcRUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>4</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MAcIgBUTEemIe6OhVnSywA" name="list" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MAd9sRUTEemIe6OhVnSywA" name="listModel" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MAgZ8RUTEemIe6OhVnSywA" name="rois" visibility="private" type="_MAekwBUTEemIe6OhVnSywA" isUnique="false">
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MAgZ8hUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>new Hashtable()</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MAhBABUTEemIe6OhVnSywA" name="canceled" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MAhBARUTEemIe6OhVnSywA" name="macro" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MAhoEBUTEemIe6OhVnSywA" name="ignoreInterrupts" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MAjdQRUTEemIe6OhVnSywA" name="pm" visibility="private" type="_MAhoERUTEemIe6OhVnSywA" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MAl5gBUTEemIe6OhVnSywA" name="moreButton" visibility="private" type="_MAjdQhUTEemIe6OhVnSywA" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MAl5gRUTEemIe6OhVnSywA" name="colorButton" visibility="private" type="_MAjdQhUTEemIe6OhVnSywA" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MAnusRUTEemIe6OhVnSywA" name="showAllCheckbox" visibility="private" type="_MAmgkBUTEemIe6OhVnSywA" isUnique="false">
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MAnushUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>new Checkbox(&quot;Show All&quot;, false)</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MAoVwBUTEemIe6OhVnSywA" name="labelsCheckbox" visibility="private" type="_MAmgkBUTEemIe6OhVnSywA" isUnique="false">
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MAo80BUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>new Checkbox(&quot;Labels&quot;, false)</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MAo80RUTEemIe6OhVnSywA" name="measureAll" visibility="private" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MAo80hUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>true</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MApj4BUTEemIe6OhVnSywA" name="onePerSlice" visibility="private" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MApj4RUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>true</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MApj4hUTEemIe6OhVnSywA" name="restoreCentered" visibility="private" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MAqK8BUTEemIe6OhVnSywA" name="prevID" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MAqK8RUTEemIe6OhVnSywA" name="noUpdateMode" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MAqK8hUTEemIe6OhVnSywA" name="defaultLineWidth" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MAqK8xUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>1</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MAsnMRUTEemIe6OhVnSywA" name="defaultColor" visibility="private" type="_MAqyABUTEemIe6OhVnSywA" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MAsnMhUTEemIe6OhVnSywA" name="firstTime" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MAsnMxUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>true</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MAtOQBUTEemIe6OhVnSywA" name="selectedIndexes" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MAtOQRUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MAtOQhUTEemIe6OhVnSywA" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MAtOQxUTEemIe6OhVnSywA" name="appendResults" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MAucYRUTEemIe6OhVnSywA" name="mmResults" visibility="private" type="_MAtORBUTEemIe6OhVnSywA" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MAvDcBUTEemIe6OhVnSywA" name="imageID" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MDA7YBUTEemIe6OhVnSywA" name="channel" visibility="private" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MDCJgBUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>false</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MDDXoBUTEemIe6OhVnSywA" name="slice" visibility="private" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MDElwBUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>true</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MDFz4BUTEemIe6OhVnSywA" name="frame" visibility="private" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MDHCABUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>false</body>
                </defaultValue>
              </ownedAttribute>
              <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_L_rTgBUTEemIe6OhVnSywA" name="NormaliseManager implements ActionListener" client="_L_mbABUTEemIe6OhVnSywA" supplier="_L_peUBUTEemIe6OhVnSywA" contract="_L_peUBUTEemIe6OhVnSywA"/>
              <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_L_u94BUTEemIe6OhVnSywA" name="NormaliseManager implements ItemListener" client="_L_mbABUTEemIe6OhVnSywA" supplier="_L_r6kBUTEemIe6OhVnSywA" contract="_L_r6kBUTEemIe6OhVnSywA"/>
              <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_L_xaIBUTEemIe6OhVnSywA" name="NormaliseManager implements MouseListener" client="_L_mbABUTEemIe6OhVnSywA" supplier="_L_vk8BUTEemIe6OhVnSywA" contract="_L_vk8BUTEemIe6OhVnSywA"/>
              <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_L_z2YBUTEemIe6OhVnSywA" name="NormaliseManager implements MouseWheelListener" client="_L_mbABUTEemIe6OhVnSywA" supplier="_L_yBMBUTEemIe6OhVnSywA" contract="_L_yBMBUTEemIe6OhVnSywA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MAw4oRUTEemIe6OhVnSywA" name="NormaliseManager" specification="_MAvDcRUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    super(&quot;ROI Manager&quot;);&#xD;
    if (instance != null) {&#xD;
        WindowManager.toFront(instance);&#xD;
        return;&#xD;
    }&#xD;
    instance = this;&#xD;
    list = new JList();&#xD;
    showWindow();&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MAzU4RUTEemIe6OhVnSywA" name="NormaliseManager" specification="_MAxfsBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    super(&quot;ROI Manager&quot;);&#xD;
    list = new JList();&#xD;
    listModel = new DefaultListModel();&#xD;
    list.setModel(listModel);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MAz78RUTEemIe6OhVnSywA" name="showWindow" specification="_MAz78BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    ImageJ ij = IJ.getInstance();&#xD;
    addKeyListener(ij);&#xD;
    addMouseListener(this);&#xD;
    addMouseWheelListener(this);&#xD;
    WindowManager.addWindow(this);&#xD;
    //setLayout(new FlowLayout(FlowLayout.CENTER,5,5));&#xD;
    setLayout(new BorderLayout());&#xD;
    listModel = new DefaultListModel();&#xD;
    list.setModel(listModel);&#xD;
    list.setPrototypeCellValue(&quot;0000-0000-0000 &quot;);&#xD;
    list.addListSelectionListener(this);&#xD;
    list.addKeyListener(ij);&#xD;
    list.addMouseListener(this);&#xD;
    list.addMouseWheelListener(this);&#xD;
    if (IJ.isLinux()) {&#xD;
        list.setBackground(Color.white);&#xD;
    }&#xD;
    JScrollPane scrollPane = new JScrollPane(list, ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS, ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);&#xD;
    add(&quot;Center&quot;, scrollPane);&#xD;
    panel = new Panel();&#xD;
    int nButtons = BUTTONS;&#xD;
    panel.setLayout(new GridLayout(nButtons, 1, 5, 0));&#xD;
    addButton(&quot;Add [t]&quot;);&#xD;
    addButton(&quot;Update&quot;);&#xD;
    addButton(&quot;Delete&quot;);&#xD;
    addButton(&quot;Rename...&quot;);&#xD;
    addButton(&quot;Measure&quot;);&#xD;
    addButton(&quot;Deselect&quot;);&#xD;
    addButton(&quot;Properties...&quot;);&#xD;
    addButton(&quot;Flatten [F]&quot;);&#xD;
    addButton(moreButtonLabel);&#xD;
    showAllCheckbox.addItemListener(this);&#xD;
    panel.add(showAllCheckbox);&#xD;
    labelsCheckbox.addItemListener(this);&#xD;
    panel.add(labelsCheckbox);&#xD;
    add(&quot;East&quot;, panel);&#xD;
    addPopupMenu();&#xD;
    pack();&#xD;
    Dimension size = getSize();&#xD;
    if (size.width > 270) {&#xD;
        setSize(size.width - 40, size.height);&#xD;
    }&#xD;
    list.remove(0);&#xD;
    Point loc = Prefs.getLocation(LOC_KEY);&#xD;
    if (loc != null) {&#xD;
        setLocation(loc);&#xD;
    } else {&#xD;
        GUI.center(this);&#xD;
    }&#xD;
//show();&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MA0jARUTEemIe6OhVnSywA" name="addButton" specification="_MAz78hUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    Button b = new Button(label);&#xD;
    b.addActionListener(this);&#xD;
    b.addKeyListener(IJ.getInstance());&#xD;
    b.addMouseListener(this);&#xD;
    if (label.equals(moreButtonLabel)) {&#xD;
        moreButton = b;&#xD;
    }&#xD;
    panel.add(b);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MA1KEBUTEemIe6OhVnSywA" name="addPopupMenu" specification="_MA0jAhUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    pm = new PopupMenu();&#xD;
    //addPopupItem(&quot;Select All&quot;);&#xD;
    addPopupItem(&quot;Open...&quot;);&#xD;
    addPopupItem(&quot;Save...&quot;);&#xD;
    addPopupItem(&quot;Fill&quot;);&#xD;
    addPopupItem(&quot;Draw&quot;);&#xD;
    addPopupItem(&quot;AND&quot;);&#xD;
    addPopupItem(&quot;OR (Combine)&quot;);&#xD;
    addPopupItem(&quot;XOR&quot;);&#xD;
    addPopupItem(&quot;Split&quot;);&#xD;
    addPopupItem(&quot;Add Particles&quot;);&#xD;
    addPopupItem(&quot;Multi Measure&quot;);&#xD;
    addPopupItem(&quot;Multi Plot&quot;);&#xD;
    addPopupItem(&quot;Sort&quot;);&#xD;
    addPopupItem(&quot;Specify...&quot;);&#xD;
    addPopupItem(&quot;Remove Positions...&quot;);&#xD;
    addPopupItem(&quot;Labels...&quot;);&#xD;
    addPopupItem(&quot;List&quot;);&#xD;
    addPopupItem(&quot;Interpolate ROIs&quot;);&#xD;
    addPopupItem(&quot;Help&quot;);&#xD;
    addPopupItem(&quot;Options...&quot;);&#xD;
    add(pm);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MA1xIRUTEemIe6OhVnSywA" name="addPopupItem" specification="_MA1KERUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    MenuItem mi = new MenuItem(s);&#xD;
    mi.addActionListener(this);&#xD;
    pm.add(mi);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MA40cRUTEemIe6OhVnSywA" name="actionPerformed" specification="_MA4NYRUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    String label = e.getActionCommand();&#xD;
    if (label == null) {&#xD;
        return;&#xD;
    }&#xD;
    String command = label;&#xD;
    if (command.equals(&quot;Add [t]&quot;)) {&#xD;
        runCommand(&quot;add&quot;);&#xD;
    } else if (command.equals(&quot;Update&quot;)) {&#xD;
        update(true);&#xD;
    } else if (command.equals(&quot;Delete&quot;)) {&#xD;
        delete(false);&#xD;
    } else if (command.equals(&quot;Rename...&quot;)) {&#xD;
        rename(null);&#xD;
    } else if (command.equals(&quot;Properties...&quot;)) {&#xD;
        setProperties(null, -1, null);&#xD;
    } else if (command.equals(&quot;Flatten [F]&quot;)) {&#xD;
        flatten();&#xD;
    } else if (command.equals(&quot;Measure&quot;)) {&#xD;
        measure(MENU);&#xD;
    } else if (command.equals(&quot;Open...&quot;)) {&#xD;
        open(null);&#xD;
    } else if (command.equals(&quot;Save...&quot;)) {&#xD;
        save();&#xD;
    } else if (command.equals(&quot;Fill&quot;)) {&#xD;
        drawOrFill(FILL);&#xD;
    } else if (command.equals(&quot;Draw&quot;)) {&#xD;
        drawOrFill(DRAW);&#xD;
    } else if (command.equals(&quot;Deselect&quot;)) {&#xD;
        select(-1);&#xD;
    } else if (command.equals(moreButtonLabel)) {&#xD;
        Point ploc = panel.getLocation();&#xD;
        Point bloc = moreButton.getLocation();&#xD;
        pm.show(this, ploc.x, bloc.y);&#xD;
    } else if (command.equals(&quot;OR (Combine)&quot;)) {&#xD;
        combine();&#xD;
    } else if (command.equals(&quot;Split&quot;)) {&#xD;
        split();&#xD;
    } else if (command.equals(&quot;AND&quot;)) {&#xD;
        and();&#xD;
    } else if (command.equals(&quot;XOR&quot;)) {&#xD;
        xor();&#xD;
    } else if (command.equals(&quot;Add Particles&quot;)) {&#xD;
        addParticles();&#xD;
    } else if (command.equals(&quot;Multi Measure&quot;)) {&#xD;
        multiMeasure(null);&#xD;
    } else if (command.equals(&quot;Multi Plot&quot;)) {&#xD;
        multiPlot();&#xD;
    } else if (command.equals(&quot;Sort&quot;)) {&#xD;
        sort();&#xD;
    } else if (command.equals(&quot;Specify...&quot;)) {&#xD;
        specify();&#xD;
    } else if (command.equals(&quot;Remove Positions...&quot;)) {&#xD;
        removePositions(SHOW_DIALOG);&#xD;
    } else if (command.equals(&quot;Labels...&quot;)) {&#xD;
        labels();&#xD;
    } else if (command.equals(&quot;List&quot;)) {&#xD;
        listRois();&#xD;
    } else if (command.equals(&quot;Interpolate ROIs&quot;)) {&#xD;
        interpolateRois();&#xD;
    } else if (command.equals(&quot;Help&quot;)) {&#xD;
        help();&#xD;
    } else if (command.equals(&quot;Options...&quot;)) {&#xD;
        options();&#xD;
    } else if (command.equals(&quot;\&quot;Show All\&quot; Color...&quot;)) {&#xD;
        setShowAllColor();&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MA40cxUTEemIe6OhVnSywA" name="interpolateRois" specification="_MA40chUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    IJ.runPlugIn(&quot;ij.plugin.RoiInterpolator&quot;, &quot;&quot;);&#xD;
    if (record()) {&#xD;
        Recorder.record(&quot;roiManager&quot;, &quot;Interpolate ROIs&quot;);&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MA7QsRUTEemIe6OhVnSywA" name="itemStateChanged" specification="_MA6poRUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    Object source = e.getSource();&#xD;
    if (source == showAllCheckbox) {&#xD;
        if (firstTime) {&#xD;
            labelsCheckbox.setState(true);&#xD;
        }&#xD;
        showAll(showAllCheckbox.getState() ? SHOW_ALL : SHOW_NONE);&#xD;
        firstTime = false;&#xD;
        return;&#xD;
    }&#xD;
    if (source == labelsCheckbox) {&#xD;
        if (firstTime) {&#xD;
            showAllCheckbox.setState(true);&#xD;
        }&#xD;
        boolean editState = labelsCheckbox.getState();&#xD;
        boolean showAllState = showAllCheckbox.getState();&#xD;
        if (!showAllState &amp;&amp; !editState) {&#xD;
            showAll(SHOW_NONE);&#xD;
        } else {&#xD;
            showAll(editState ? LABELS : NO_LABELS);&#xD;
            if (editState) {&#xD;
                showAllCheckbox.setState(true);&#xD;
            }&#xD;
        }&#xD;
        firstTime = false;&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MA73whUTEemIe6OhVnSywA" name="add" specification="_MA7QshUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    if (shiftKeyDown) {&#xD;
        addAndDraw(altKeyDown);&#xD;
    } else if (altKeyDown) {&#xD;
        addRoi(true);&#xD;
    } else {&#xD;
        addRoi(false);&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MA-UARUTEemIe6OhVnSywA" name="addRoi" specification="_MA9s8RUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    addRoi(roi, false, null, -1);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MA-7EhUTEemIe6OhVnSywA" name="addRoi" specification="_MA-UAhUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    return addRoi(null, promptForName, null, IGNORE_POSITION);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MBBXUBUTEemIe6OhVnSywA" name="addRoi" specification="_MA_iIBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    ImagePlus imp = roi == null ? getImage() : WindowManager.getCurrentImage();&#xD;
    if (roi == null) {&#xD;
        if (imp == null) {&#xD;
            return false;&#xD;
        }&#xD;
        roi = imp.getRoi();&#xD;
        if (roi == null) {&#xD;
            error(&quot;The active image does not have a selection.&quot;);&#xD;
            return false;&#xD;
        }&#xD;
    }&#xD;
    if ((roi instanceof PolygonRoi) &amp;&amp; ((PolygonRoi) roi).getNCoordinates() == 0) {&#xD;
        return false;&#xD;
    }&#xD;
    if (color == null &amp;&amp; roi.getStrokeColor() != null) {&#xD;
        color = roi.getStrokeColor();&#xD;
    } else if (color == null &amp;&amp; defaultColor != null) {&#xD;
        color = defaultColor;&#xD;
    }&#xD;
    boolean ignorePosition = false;&#xD;
    if (lineWidth == IGNORE_POSITION) {&#xD;
        ignorePosition = true;&#xD;
        lineWidth = -1;&#xD;
    }&#xD;
    if (lineWidth &lt; 0) {&#xD;
        int sw = (int) roi.getStrokeWidth();&#xD;
        lineWidth = sw > 1 ? sw : defaultLineWidth;&#xD;
    }&#xD;
    if (lineWidth > 100) {&#xD;
        lineWidth = 1;&#xD;
    }&#xD;
    int n = getCount();&#xD;
    int position = imp != null &amp;&amp; !ignorePosition ? roi.getPosition() : 0;&#xD;
    int saveCurrentSlice = imp != null ? imp.getCurrentSlice() : 0;&#xD;
    if (position > 0 &amp;&amp; position != saveCurrentSlice) {&#xD;
        imp.setSliceWithoutUpdate(position);&#xD;
    } else {&#xD;
        position = 0;&#xD;
    }&#xD;
    if (n > 0 &amp;&amp; !IJ.isMacro() &amp;&amp; imp != null) {&#xD;
        // check for duplicate&#xD;
        String label = (String) listModel.getElementAt(n - 1);&#xD;
        Roi roi2 = (Roi) rois.get(label);&#xD;
        if (roi2 != null) {&#xD;
            int slice2 = getSliceNumber(roi2, label);&#xD;
            if (roi.equals(roi2) &amp;&amp; (slice2 == -1 || slice2 == imp.getCurrentSlice()) &amp;&amp; imp.getID() == prevID &amp;&amp; !Interpreter.isBatchMode()) {&#xD;
                if (position > 0) {&#xD;
                    imp.setSliceWithoutUpdate(saveCurrentSlice);&#xD;
                }&#xD;
                return false;&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    prevID = imp != null ? imp.getID() : 0;&#xD;
    String name = roi.getName();&#xD;
    if (isStandardName(name)) {&#xD;
        name = null;&#xD;
    }&#xD;
    String label = name != null ? name : getLabel(imp, roi, -1);&#xD;
    if (promptForName) {&#xD;
        label = promptForName(label);&#xD;
    }&#xD;
    if (label == null) {&#xD;
        if (position > 0) {&#xD;
            imp.setSliceWithoutUpdate(saveCurrentSlice);&#xD;
        }&#xD;
        return false;&#xD;
    }&#xD;
    label = getUniqueName(label);&#xD;
    listModel.addElement(label);&#xD;
    roi.setName(label);&#xD;
    Roi roiCopy = (Roi) roi.clone();&#xD;
    setRoiPosition(imp, roiCopy);&#xD;
    if (lineWidth > 1) {&#xD;
        roiCopy.setStrokeWidth(lineWidth);&#xD;
    }&#xD;
    if (color != null) {&#xD;
        roiCopy.setStrokeColor(color);&#xD;
    }&#xD;
    rois.put(label, roiCopy);&#xD;
    updateShowAll();&#xD;
    if (record()) {&#xD;
        recordAdd(defaultColor, defaultLineWidth);&#xD;
    }&#xD;
    if (position > 0) {&#xD;
        imp.setSliceWithoutUpdate(saveCurrentSlice);&#xD;
    }&#xD;
    return true;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MBClcRUTEemIe6OhVnSywA" name="recordAdd" specification="_MBBXURUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    if (Recorder.scriptMode()) {&#xD;
        Recorder.recordCall(&quot;rm.addRoi(imp.getRoi());&quot;);&#xD;
    } else if (color != null &amp;&amp; lineWidth == 1) {&#xD;
        Recorder.recordString(&quot;roiManager(\&quot;Add\&quot;, \&quot;&quot; + getHex(color) + &quot;\&quot;);\n&quot;);&#xD;
    } else if (lineWidth > 1) {&#xD;
        Recorder.recordString(&quot;roiManager(\&quot;Add\&quot;, \&quot;&quot; + getHex(color) + &quot;\&quot;, &quot; + lineWidth + &quot;);\n&quot;);&#xD;
    } else {&#xD;
        Recorder.record(&quot;roiManager&quot;, &quot;Add&quot;);&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MBDMgxUTEemIe6OhVnSywA" name="getHex" specification="_MBDMgBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    if (color == null) {&#xD;
        color = ImageCanvas.getShowAllColor();&#xD;
    }&#xD;
    String hex = Integer.toHexString(color.getRGB());&#xD;
    if (hex.length() == 8) {&#xD;
        hex = hex.substring(2);&#xD;
    }&#xD;
    return hex;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MBJ6MBUTEemIe6OhVnSywA" name="add" specification="_MBGP0BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    if (roi == null) {&#xD;
        return;&#xD;
    }&#xD;
    String label = roi.getName();&#xD;
    String label2 = label;&#xD;
    if (label == null) {&#xD;
        label = getLabel(imp, roi, n);&#xD;
    } else {&#xD;
        label = label + &quot;-&quot; + n;&#xD;
    }&#xD;
    if (label == null) {&#xD;
        return;&#xD;
    }&#xD;
    if (listModel == null) {&#xD;
        list = new JList();&#xD;
        listModel = new DefaultListModel();&#xD;
        list.setModel(listModel);&#xD;
    }&#xD;
    listModel.addElement(label);&#xD;
    if (label2 != null) {&#xD;
        roi.setName(label2);&#xD;
    } else {&#xD;
        roi.setName(label);&#xD;
    }&#xD;
    rois.put(label, (Roi) roi.clone());&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MBM9gBUTEemIe6OhVnSywA" name="isStandardName" specification="_MBKhQBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    if (name == null) {&#xD;
        return false;&#xD;
    }&#xD;
    boolean isStandard = false;&#xD;
    int len = name.length();&#xD;
    if (len >= 14 &amp;&amp; name.charAt(4) == '-' &amp;&amp; name.charAt(9) == '-') {&#xD;
        isStandard = true;&#xD;
    } else if (len >= 17 &amp;&amp; name.charAt(5) == '-' &amp;&amp; name.charAt(11) == '-') {&#xD;
        isStandard = true;&#xD;
    } else if (len >= 9 &amp;&amp; name.charAt(4) == '-') {&#xD;
        isStandard = true;&#xD;
    } else if (len >= 11 &amp;&amp; name.charAt(5) == '-') {&#xD;
        isStandard = true;&#xD;
    }&#xD;
    return isStandard;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MBSdEBUTEemIe6OhVnSywA" name="getLabel" specification="_MBOysBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    Rectangle r = roi.getBounds();&#xD;
    int xc = r.x + r.width / 2;&#xD;
    int yc = r.y + r.height / 2;&#xD;
    if (n >= 0) {&#xD;
        xc = yc;&#xD;
        yc = n;&#xD;
    }&#xD;
    if (xc &lt; 0) {&#xD;
        xc = 0;&#xD;
    }&#xD;
    if (yc &lt; 0) {&#xD;
        yc = 0;&#xD;
    }&#xD;
    int digits = 4;&#xD;
    String xs = &quot;&quot; + xc;&#xD;
    if (xs.length() > digits) {&#xD;
        digits = xs.length();&#xD;
    }&#xD;
    String ys = &quot;&quot; + yc;&#xD;
    if (ys.length() > digits) {&#xD;
        digits = ys.length();&#xD;
    }&#xD;
    if (digits == 4 &amp;&amp; imp != null &amp;&amp; imp.getStackSize() >= 10000) {&#xD;
        digits = 5;&#xD;
    }&#xD;
    xs = &quot;000000&quot; + xc;&#xD;
    ys = &quot;000000&quot; + yc;&#xD;
    String label = ys.substring(ys.length() - digits) + &quot;-&quot; + xs.substring(xs.length() - digits);&#xD;
    if (imp != null &amp;&amp; imp.getStackSize() > 1) {&#xD;
        int slice = imp.getCurrentSlice();&#xD;
        String zs = &quot;000000&quot; + slice;&#xD;
        label = zs.substring(zs.length() - digits) + &quot;-&quot; + label;&#xD;
    }&#xD;
    return label;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MBVgYBUTEemIe6OhVnSywA" name="addAndDraw" specification="_MBTrMBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    if (altKeyDown) {&#xD;
        if (!addRoi(true)) {&#xD;
            return;&#xD;
        }&#xD;
    } else if (!addRoi(false)) {&#xD;
        return;&#xD;
    }&#xD;
    ImagePlus imp = WindowManager.getCurrentImage();&#xD;
    if (imp != null) {&#xD;
        Undo.setup(Undo.COMPOUND_FILTER, imp);&#xD;
        IJ.run(imp, &quot;Draw&quot;, &quot;slice&quot;);&#xD;
        Undo.setup(Undo.COMPOUND_FILTER_DONE, imp);&#xD;
    }&#xD;
    if (record()) {&#xD;
        Recorder.record(&quot;roiManager&quot;, &quot;Add &amp; Draw&quot;);&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MBYjsBUTEemIe6OhVnSywA" name="delete" specification="_MBWugBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    int count = getCount();&#xD;
    if (count == 0) {&#xD;
        return error(&quot;The list is empty.&quot;);&#xD;
    }&#xD;
    int index[] = getSelectedIndexes();&#xD;
    if (index.length == 0 || (replacing &amp;&amp; count > 1)) {&#xD;
        String msg = &quot;Delete all items on the list?&quot;;&#xD;
        if (replacing) {&#xD;
            msg = &quot;Replace items on the list?&quot;;&#xD;
        }&#xD;
        canceled = false;&#xD;
        if (!IJ.isMacro() &amp;&amp; !macro) {&#xD;
            YesNoCancelDialog d = new YesNoCancelDialog(this, &quot;ROI Manager&quot;, msg);&#xD;
            if (d.cancelPressed()) {&#xD;
                canceled = true;&#xD;
                return false;&#xD;
            }&#xD;
            if (!d.yesPressed()) {&#xD;
                return false;&#xD;
            }&#xD;
        }&#xD;
        index = getAllIndexes();&#xD;
    }&#xD;
    if (count == index.length &amp;&amp; !replacing) {&#xD;
        rois.clear();&#xD;
        listModel.removeAllElements();&#xD;
    } else {&#xD;
        for (int i = count - 1; i >= 0; i--) {&#xD;
            boolean delete = false;&#xD;
            for (int j = 0; j &lt; index.length; j++) {&#xD;
                if (index[j] == i) {&#xD;
                    delete = true;&#xD;
                }&#xD;
            }&#xD;
            if (delete) {&#xD;
                rois.remove((String) listModel.getElementAt(i));&#xD;
                listModel.remove(i);&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    ImagePlus imp = WindowManager.getCurrentImage();&#xD;
    if (count > 1 &amp;&amp; index.length == 1 &amp;&amp; imp != null) {&#xD;
        imp.deleteRoi();&#xD;
    }&#xD;
    updateShowAll();&#xD;
    if (record()) {&#xD;
        Recorder.record(&quot;roiManager&quot;, &quot;Delete&quot;);&#xD;
    }&#xD;
    return true;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MBaY4BUTEemIe6OhVnSywA" name="update" specification="_MBZKwBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    ImagePlus imp = getImage();&#xD;
    if (imp == null) {&#xD;
        return false;&#xD;
    }&#xD;
    ImageCanvas ic = imp.getCanvas();&#xD;
    boolean showingAll = ic != null &amp;&amp; ic.getShowAllROIs();&#xD;
    Roi roi = imp.getRoi();&#xD;
    if (roi == null) {&#xD;
        error(&quot;The active image does not have a selection.&quot;);&#xD;
        return false;&#xD;
    }&#xD;
    int index = list.getSelectedIndex();&#xD;
    if (index &lt; 0 &amp;&amp; !showingAll) {&#xD;
        return error(&quot;Exactly one item in the list must be selected.&quot;);&#xD;
    }&#xD;
    if (index >= 0) {&#xD;
        String name = (String) listModel.getElementAt(index);&#xD;
        rois.remove(name);&#xD;
        if (clone) {&#xD;
            Roi roi2 = (Roi) roi.clone();&#xD;
            setRoiPosition(imp, roi2);&#xD;
            roi.setName(name);&#xD;
            roi2.setName(name);&#xD;
            rois.put(name, roi2);&#xD;
        } else {&#xD;
            rois.put(name, roi);&#xD;
        }&#xD;
    }&#xD;
    if (record()) {&#xD;
        Recorder.record(&quot;roiManager&quot;, &quot;Update&quot;);&#xD;
    }&#xD;
    updateShowAll();&#xD;
    return true;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MBfRYBUTEemIe6OhVnSywA" name="rename" specification="_MBcOEBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    int index = list.getSelectedIndex();&#xD;
    if (index &lt; 0) {&#xD;
        return error(&quot;Exactly one item in the list must be selected.&quot;);&#xD;
    }&#xD;
    String name = (String) listModel.getElementAt(index);&#xD;
    if (name2 == null) {&#xD;
        name2 = promptForName(name);&#xD;
    }&#xD;
    if (name2 == null) {&#xD;
        return false;&#xD;
    }&#xD;
    if (name2.equals(name)) {&#xD;
        return false;&#xD;
    }&#xD;
    name2 = getUniqueName(name2);&#xD;
    Roi roi = (Roi) rois.get(name);&#xD;
    if (roi == null) {&#xD;
        return false;&#xD;
    }&#xD;
    rois.remove(name);&#xD;
    roi.setName(name2);&#xD;
    int position = getSliceNumber(name2);&#xD;
    if (position > 0 &amp;&amp; roi.getCPosition() == 0 &amp;&amp; roi.getZPosition() == 0 &amp;&amp; roi.getTPosition() == 0) {&#xD;
        roi.setPosition(position);&#xD;
    }&#xD;
    rois.put(name2, roi);&#xD;
    listModel.setElementAt(name2, index);&#xD;
    list.setSelectedIndex(index);&#xD;
    if (Prefs.useNamesAsLabels &amp;&amp; labelsCheckbox.getState()) {&#xD;
        ImagePlus imp = WindowManager.getCurrentImage();&#xD;
        if (imp != null) {&#xD;
            imp.draw();&#xD;
        }&#xD;
    }&#xD;
    if (record()) {&#xD;
        Recorder.record(&quot;roiManager&quot;, &quot;Rename&quot;, name2);&#xD;
    }&#xD;
    return true;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MBi7wBUTEemIe6OhVnSywA" name="promptForName" specification="_MBgfgBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    GenericDialog gd = new GenericDialog(&quot;ROI Manager&quot;);&#xD;
    gd.addStringField(&quot;Rename As:&quot;, name, 20);&#xD;
    gd.showDialog();&#xD;
    if (gd.wasCanceled()) {&#xD;
        return null;&#xD;
    } else {&#xD;
        return gd.getNextString();&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MBpCYBUTEemIe6OhVnSywA" name="restore" specification="_MBkJ4BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    String label = (String) listModel.getElementAt(index);&#xD;
    Roi roi = (Roi) rois.get(label);&#xD;
    if (imp == null || roi == null) {&#xD;
        return false;&#xD;
    }&#xD;
    if (setSlice) {&#xD;
        int c = roi.getCPosition();&#xD;
        int z = roi.getZPosition();&#xD;
        int t = roi.getTPosition();&#xD;
        boolean hyperstack = imp.isHyperStack();&#xD;
        //IJ.log(&quot;restore: &quot;+hyperstack+&quot; &quot;+c+&quot; &quot;+z+&quot; &quot;+t);&#xD;
        if (hyperstack &amp;&amp; (c > 0 || z > 0 || t > 0)) {&#xD;
            imp.setPosition(c, z, t);&#xD;
        } else {&#xD;
            int n = getSliceNumber(roi, label);&#xD;
            if (n >= 1 &amp;&amp; n &lt;= imp.getStackSize()) {&#xD;
                if (hyperstack) {&#xD;
                    if (imp.getNSlices() > 1 &amp;&amp; n &lt;= imp.getNSlices()) {&#xD;
                        imp.setPosition(imp.getC(), n, imp.getT());&#xD;
                    } else if (imp.getNFrames() > 1 &amp;&amp; n &lt;= imp.getNFrames()) {&#xD;
                        imp.setPosition(imp.getC(), imp.getZ(), n);&#xD;
                    } else {&#xD;
                        imp.setPosition(n);&#xD;
                    }&#xD;
                } else {&#xD;
                    imp.setSlice(n);&#xD;
                }&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    if (showAllCheckbox.getState() &amp;&amp; !restoreCentered &amp;&amp; !noUpdateMode) {&#xD;
        roi.setImage(null);&#xD;
        imp.setRoi(roi);&#xD;
        return true;&#xD;
    }&#xD;
    Roi roi2 = (Roi) roi.clone();&#xD;
    Rectangle r = roi2.getBounds();&#xD;
    int width = imp.getWidth(), height = imp.getHeight();&#xD;
    if (restoreCentered) {&#xD;
        ImageCanvas ic = imp.getCanvas();&#xD;
        if (ic != null) {&#xD;
            Rectangle r1 = ic.getSrcRect();&#xD;
            Rectangle r2 = roi2.getBounds();&#xD;
            roi2.setLocation(r1.x + r1.width / 2 - r2.width / 2, r1.y + r1.height / 2 - r2.height / 2);&#xD;
        }&#xD;
    }&#xD;
    if (r.x >= width || r.y >= height || (r.x + r.width) &lt; 0 || (r.y + r.height) &lt; 0) {&#xD;
        roi2.setLocation((width - r.width) / 2, (height - r.height) / 2);&#xD;
    }&#xD;
    if (noUpdateMode) {&#xD;
        imp.setRoi(roi2, false);&#xD;
        noUpdateMode = false;&#xD;
    } else {&#xD;
        imp.setRoi(roi2, true);&#xD;
    }&#xD;
    return true;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MBsFsBUTEemIe6OhVnSywA" name="restoreWithoutUpdate" specification="_MBq3kBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    noUpdateMode = true;&#xD;
    return restore(getImage(), index, false);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MBuh8BUTEemIe6OhVnSywA" name="getSliceNumber" specification="_MBsswBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    int slice = -1;&#xD;
    if (label.length() >= 14 &amp;&amp; label.charAt(4) == '-' &amp;&amp; label.charAt(9) == '-') {&#xD;
        slice = (int) Tools.parseDouble(label.substring(0, 4), -1);&#xD;
    } else if (label.length() >= 17 &amp;&amp; label.charAt(5) == '-' &amp;&amp; label.charAt(11) == '-') {&#xD;
        slice = (int) Tools.parseDouble(label.substring(0, 5), -1);&#xD;
    } else if (label.length() >= 20 &amp;&amp; label.charAt(6) == '-' &amp;&amp; label.charAt(13) == '-') {&#xD;
        slice = (int) Tools.parseDouble(label.substring(0, 6), -1);&#xD;
    }&#xD;
    return slice;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MBzacBUTEemIe6OhVnSywA" name="getSliceNumber" specification="_MBvwEBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    int slice = roi != null ? roi.getPosition() : -1;&#xD;
    if (slice == 0) {&#xD;
        slice = -1;&#xD;
    }&#xD;
    if (slice == -1) {&#xD;
        slice = getSliceNumber(label);&#xD;
    }&#xD;
    return slice;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MB2dwBUTEemIe6OhVnSywA" name="open" specification="_MB1PoBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    Macro.setOptions(null);&#xD;
    String name = null;&#xD;
    if (path == null || path.equals(&quot;&quot;)) {&#xD;
        OpenDialog od = new OpenDialog(&quot;Open Selection(s)...&quot;, &quot;&quot;);&#xD;
        String directory = od.getDirectory();&#xD;
        name = od.getFileName();&#xD;
        if (name == null) {&#xD;
            return;&#xD;
        }&#xD;
        path = directory + name;&#xD;
    }&#xD;
    if (Recorder.record &amp;&amp; !Recorder.scriptMode()) {&#xD;
        Recorder.record(&quot;roiManager&quot;, &quot;Open&quot;, path);&#xD;
    }&#xD;
    if (path.endsWith(&quot;.zip&quot;)) {&#xD;
        openZip(path);&#xD;
        return;&#xD;
    }&#xD;
    Opener o = new Opener();&#xD;
    if (name == null) {&#xD;
        name = o.getName(path);&#xD;
    }&#xD;
    Roi roi = o.openRoi(path);&#xD;
    if (roi != null) {&#xD;
        if (name.endsWith(&quot;.roi&quot;)) {&#xD;
            name = name.substring(0, name.length() - 4);&#xD;
        }&#xD;
        name = getUniqueName(name);&#xD;
        listModel.addElement(name);&#xD;
        rois.put(name, roi);&#xD;
    }&#xD;
    updateShowAll();&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MB5hEBUTEemIe6OhVnSywA" name="openZip" specification="_MB3r4BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    ZipInputStream in = null;&#xD;
    ByteArrayOutputStream out;&#xD;
    int nRois = 0;&#xD;
    try {&#xD;
        in = new ZipInputStream(new FileInputStream(path));&#xD;
        byte[] buf = new byte[1024];&#xD;
        int len;&#xD;
        ZipEntry entry = in.getNextEntry();&#xD;
        while (entry != null) {&#xD;
            String name = entry.getName();&#xD;
            if (name.endsWith(&quot;.roi&quot;)) {&#xD;
                out = new ByteArrayOutputStream();&#xD;
                while ((len = in.read(buf)) > 0) {&#xD;
                    out.write(buf, 0, len);&#xD;
                }&#xD;
                out.close();&#xD;
                byte[] bytes = out.toByteArray();&#xD;
                RoiDecoder rd = new RoiDecoder(bytes, name);&#xD;
                Roi roi = rd.getRoi();&#xD;
                if (roi != null) {&#xD;
                    name = name.substring(0, name.length() - 4);&#xD;
                    name = getUniqueName(name);&#xD;
                    listModel.addElement(name);&#xD;
                    rois.put(name, roi);&#xD;
                    nRois++;&#xD;
                }&#xD;
            }&#xD;
            entry = in.getNextEntry();&#xD;
        }&#xD;
        in.close();&#xD;
    } catch (IOException e) {&#xD;
        error(e.toString());&#xD;
    }&#xD;
    if (nRois == 0) {&#xD;
        error(&quot;This ZIP archive does not appear to contain \&quot;.roi\&quot; files&quot;);&#xD;
    }&#xD;
    updateShowAll();&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MB9ygBUTEemIe6OhVnSywA" name="getUniqueName" specification="_MB6vMBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    String name2 = name;&#xD;
    int n = 1;&#xD;
    Roi roi2 = (Roi) rois.get(name2);&#xD;
    while (roi2 != null) {&#xD;
        roi2 = (Roi) rois.get(name2);&#xD;
        if (roi2 != null) {&#xD;
            int lastDash = name2.lastIndexOf(&quot;-&quot;);&#xD;
            if (lastDash != -1 &amp;&amp; name2.length() - lastDash &lt; 5) {&#xD;
                name2 = name2.substring(0, lastDash);&#xD;
            }&#xD;
            name2 = name2 + &quot;-&quot; + n;&#xD;
            n++;&#xD;
        }&#xD;
        roi2 = (Roi) rois.get(name2);&#xD;
    }&#xD;
    return name2;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MCBc4BUTEemIe6OhVnSywA" name="save" specification="_MB_nsBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    if (getCount() == 0) {&#xD;
        return error(&quot;The selection list is empty.&quot;);&#xD;
    }&#xD;
    int[] indexes = getSelectedIndexes();&#xD;
    if (indexes.length == 0) {&#xD;
        indexes = getAllIndexes();&#xD;
    }&#xD;
    if (indexes.length > 1) {&#xD;
        return saveMultiple(indexes, null);&#xD;
    }&#xD;
    String name = (String) listModel.getElementAt(indexes[0]);&#xD;
    Macro.setOptions(null);&#xD;
    SaveDialog sd = new SaveDialog(&quot;Save Selection...&quot;, name, &quot;.roi&quot;);&#xD;
    String name2 = sd.getFileName();&#xD;
    if (name2 == null) {&#xD;
        return false;&#xD;
    }&#xD;
    String dir = sd.getDirectory();&#xD;
    Roi roi = (Roi) rois.get(name);&#xD;
    rois.remove(name);&#xD;
    if (!name2.endsWith(&quot;.roi&quot;)) {&#xD;
        name2 = name2 + &quot;.roi&quot;;&#xD;
    }&#xD;
    String newName = name2.substring(0, name2.length() - 4);&#xD;
    rois.put(newName, roi);&#xD;
    roi.setName(newName);&#xD;
    listModel.setElementAt(newName, indexes[0]);&#xD;
    RoiEncoder re = new RoiEncoder(dir + name2);&#xD;
    try {&#xD;
        re.write(roi);&#xD;
    } catch (IOException e) {&#xD;
        IJ.error(&quot;ROI Manager&quot;, e.getMessage());&#xD;
    }&#xD;
    if (record()) {&#xD;
        String path = dir + name2;&#xD;
        if (Recorder.scriptMode()) {&#xD;
            Recorder.recordCall(&quot;IJ.saveAs(imp, \&quot;Selection\&quot;, \&quot;&quot; + path + &quot;\&quot;);&quot;);&#xD;
        } else {&#xD;
            Recorder.record(&quot;saveAs&quot;, &quot;Selection&quot;, path);&#xD;
        }&#xD;
    }&#xD;
    return true;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MCHjgBUTEemIe6OhVnSywA" name="saveMultiple" specification="_MCCrABUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    Macro.setOptions(null);&#xD;
    if (path == null) {&#xD;
        SaveDialog sd = new SaveDialog(&quot;Save ROIs...&quot;, &quot;RoiSet&quot;, &quot;.zip&quot;);&#xD;
        String name = sd.getFileName();&#xD;
        if (name == null) {&#xD;
            return false;&#xD;
        }&#xD;
        if (!(name.endsWith(&quot;.zip&quot;) || name.endsWith(&quot;.ZIP&quot;))) {&#xD;
            name = name + &quot;.zip&quot;;&#xD;
        }&#xD;
        String dir = sd.getDirectory();&#xD;
        path = dir + name;&#xD;
    }&#xD;
    try {&#xD;
        ZipOutputStream zos = new ZipOutputStream(new FileOutputStream(path));&#xD;
        DataOutputStream out = new DataOutputStream(new BufferedOutputStream(zos));&#xD;
        RoiEncoder re = new RoiEncoder(out);&#xD;
        for (int i = 0; i &lt; indexes.length; i++) {&#xD;
            String label = (String) listModel.getElementAt(indexes[i]);&#xD;
            Roi roi = (Roi) rois.get(label);&#xD;
            if (IJ.debugMode) {&#xD;
                IJ.log(&quot;saveMultiple: &quot; + i + &quot;  &quot; + label + &quot;  &quot; + roi);&#xD;
            }&#xD;
            if (roi == null) {&#xD;
                continue;&#xD;
            }&#xD;
            if (!label.endsWith(&quot;.roi&quot;)) {&#xD;
                label += &quot;.roi&quot;;&#xD;
            }&#xD;
            zos.putNextEntry(new ZipEntry(label));&#xD;
            re.write(roi);&#xD;
            out.flush();&#xD;
        }&#xD;
        out.close();&#xD;
    } catch (IOException e) {&#xD;
        error(&quot;&quot; + e);&#xD;
        return false;&#xD;
    }&#xD;
    if (record()) {&#xD;
        Recorder.record(&quot;roiManager&quot;, &quot;Save&quot;, path);&#xD;
    }&#xD;
    return true;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MCJYsBUTEemIe6OhVnSywA" name="listRois" specification="_MCIxoBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    Roi[] rois = getRoisAsArray();&#xD;
    OverlayCommands.listRois(rois);&#xD;
    if (record()) {&#xD;
        Recorder.record(&quot;roiManager&quot;, &quot;List&quot;);&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MCMcABUTEemIe6OhVnSywA" name="measure" specification="_MCJYsRUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    ImagePlus imp = getImage();&#xD;
    if (imp == null) {&#xD;
        return false;&#xD;
    }&#xD;
    int[] indexes = getSelectedIndexes();&#xD;
    if (indexes.length == 0) {&#xD;
        indexes = getAllIndexes();&#xD;
    }&#xD;
    if (indexes.length == 0) {&#xD;
        return false;&#xD;
    }&#xD;
    boolean allSliceOne = true;&#xD;
    for (int i = 0; i &lt; indexes.length; i++) {&#xD;
        String label = (String) listModel.getElementAt(indexes[i]);&#xD;
        Roi roi = (Roi) rois.get(label);&#xD;
        if (getSliceNumber(roi, label) > 1) {&#xD;
            allSliceOne = false;&#xD;
        }&#xD;
    }&#xD;
    int measurements = Analyzer.getMeasurements();&#xD;
    if (imp.getStackSize() > 1) {&#xD;
        Analyzer.setMeasurements(measurements | Measurements.SLICE);&#xD;
    }&#xD;
    int currentSlice = imp.getCurrentSlice();&#xD;
    Analyzer.setMeasurements(measurements &amp; (~Measurements.ADD_TO_OVERLAY));&#xD;
    for (int i = 0; i &lt; indexes.length; i++) {&#xD;
        if (restore(getImage(), indexes[i], !allSliceOne)) {&#xD;
            IJ.run(&quot;Measure&quot;);&#xD;
        } else {&#xD;
            break;&#xD;
        }&#xD;
    }&#xD;
    Analyzer.setMeasurements(measurements);&#xD;
    imp.setSlice(currentSlice);&#xD;
    if (indexes.length > 1) {&#xD;
        IJ.run(&quot;Select None&quot;);&#xD;
    }&#xD;
    if (record()) {&#xD;
        Recorder.record(&quot;roiManager&quot;, &quot;Measure&quot;);&#xD;
    }&#xD;
    return true;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MCQtcBUTEemIe6OhVnSywA" name="multiMeasure" specification="_MCORMBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    ImagePlus imp = getImage();&#xD;
    if (imp == null) {&#xD;
        return false;&#xD;
    }&#xD;
    int[] indexes = getSelectedIndexes();&#xD;
    if (indexes.length == 0) {&#xD;
        indexes = getAllIndexes();&#xD;
    }&#xD;
    if (indexes.length == 0) {&#xD;
        return false;&#xD;
    }&#xD;
    int measurements = Analyzer.getMeasurements();&#xD;
    int nSlices = imp.getStackSize();&#xD;
    if (cmd != null) {&#xD;
        appendResults = cmd.contains(&quot;append&quot;) ? true : false;&#xD;
    }&#xD;
    if (IJ.isMacro()) {&#xD;
        if (nSlices > 1) {&#xD;
            measureAll = true;&#xD;
        }&#xD;
        onePerSlice = true;&#xD;
    } else {&#xD;
        GenericDialog gd = new GenericDialog(&quot;Multi Measure&quot;);&#xD;
        if (nSlices > 1) {&#xD;
            gd.addCheckbox(&quot;Measure all &quot; + nSlices + &quot; slices&quot;, measureAll);&#xD;
        }&#xD;
        gd.addCheckbox(&quot;One Row Per Slice&quot;, onePerSlice);&#xD;
        gd.addCheckbox(&quot;Append results&quot;, appendResults);&#xD;
        int columns = getColumnCount(imp, measurements) * indexes.length;&#xD;
        String str = nSlices == 1 ? &quot;this option&quot; : &quot;both options&quot;;&#xD;
        gd.setInsets(10, 25, 0);&#xD;
        gd.addMessage(&quot;Enabling &quot; + str + &quot; will result\n&quot; + &quot;in a table with &quot; + columns + &quot; columns.&quot;);&#xD;
        gd.showDialog();&#xD;
        if (gd.wasCanceled()) {&#xD;
            return false;&#xD;
        }&#xD;
        if (nSlices > 1) {&#xD;
            measureAll = gd.getNextBoolean();&#xD;
        }&#xD;
        onePerSlice = gd.getNextBoolean();&#xD;
        appendResults = gd.getNextBoolean();&#xD;
    }&#xD;
    if (!measureAll) {&#xD;
        nSlices = 1;&#xD;
    }&#xD;
    int currentSlice = imp.getCurrentSlice();&#xD;
    if (!onePerSlice) {&#xD;
        int measurements2 = nSlices > 1 ? measurements | Measurements.SLICE : measurements;&#xD;
        ResultsTable rt = new ResultsTable();&#xD;
        Analyzer analyzer = new Analyzer(imp, measurements2, rt);&#xD;
        for (int slice = 1; slice &lt;= nSlices; slice++) {&#xD;
            if (nSlices > 1) {&#xD;
                imp.setSliceWithoutUpdate(slice);&#xD;
            }&#xD;
            for (int i = 0; i &lt; indexes.length; i++) {&#xD;
                if (restoreWithoutUpdate(indexes[i])) {&#xD;
                    analyzer.measure();&#xD;
                } else {&#xD;
                    break;&#xD;
                }&#xD;
            }&#xD;
        }&#xD;
        rt.show(&quot;Results&quot;);&#xD;
        if (nSlices > 1) {&#xD;
            imp.setSlice(currentSlice);&#xD;
        }&#xD;
        return true;&#xD;
    }&#xD;
    // System Analyzer&#xD;
    Analyzer aSys = new Analyzer(imp);&#xD;
    ResultsTable rtSys = Analyzer.getResultsTable();&#xD;
    ResultsTable rtMulti = new ResultsTable();&#xD;
    if (appendResults &amp;&amp; mmResults != null) {&#xD;
        rtMulti = mmResults;&#xD;
    }&#xD;
    rtSys.reset();&#xD;
    for (int slice = 1; slice &lt;= nSlices; slice++) {&#xD;
        int sliceUse = slice;&#xD;
        if (nSlices == 1) {&#xD;
            sliceUse = currentSlice;&#xD;
        }&#xD;
        imp.setSliceWithoutUpdate(sliceUse);&#xD;
        rtMulti.incrementCounter();&#xD;
        if ((Analyzer.getMeasurements() &amp; Measurements.LABELS) != 0) {&#xD;
            rtMulti.addLabel(&quot;Label&quot;, imp.getTitle());&#xD;
        }&#xD;
        int roiIndex = 0;&#xD;
        for (int i = 0; i &lt; indexes.length; i++) {&#xD;
            if (restoreWithoutUpdate(indexes[i])) {&#xD;
                roiIndex++;&#xD;
                aSys.measure();&#xD;
                for (int j = 0; j &lt;= rtSys.getLastColumn(); j++) {&#xD;
                    float[] col = rtSys.getColumn(j);&#xD;
                    String head = rtSys.getColumnHeading(j);&#xD;
                    String suffix = &quot;&quot; + roiIndex;&#xD;
                    Roi roi = imp.getRoi();&#xD;
                    if (roi != null) {&#xD;
                        String name = roi.getName();&#xD;
                        if (name != null &amp;&amp; name.length() > 0 &amp;&amp; (name.length() &lt; 9 || !Character.isDigit(name.charAt(0)))) {&#xD;
                            suffix = &quot;(&quot; + name + &quot;)&quot;;&#xD;
                        }&#xD;
                    }&#xD;
                    if (head != null &amp;&amp; col != null &amp;&amp; !head.equals(&quot;Slice&quot;)) {&#xD;
                        rtMulti.addValue(head + suffix, rtSys.getValue(j, rtSys.getCounter() - 1));&#xD;
                    }&#xD;
                }&#xD;
            } else {&#xD;
                break;&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    mmResults = (ResultsTable) rtMulti.clone();&#xD;
    rtMulti.show(&quot;Results&quot;);&#xD;
    imp.setSlice(currentSlice);&#xD;
    if (indexes.length > 1) {&#xD;
        IJ.run(&quot;Select None&quot;);&#xD;
    }&#xD;
    if (record()) {&#xD;
        String arg = appendResults ? &quot; append&quot; : &quot;&quot;;&#xD;
        Recorder.record(&quot;roiManager&quot;, &quot;Multi Measure&quot; + arg);&#xD;
    }&#xD;
    return true;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MCTwwBUTEemIe6OhVnSywA" name="getColumnCount" specification="_MCRUgBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    ImageStatistics stats = imp.getStatistics(measurements);&#xD;
    ResultsTable rt = new ResultsTable();&#xD;
    Analyzer analyzer = new Analyzer(imp, measurements, rt);&#xD;
    analyzer.saveResults(stats, null);&#xD;
    int count = 0;&#xD;
    for (int i = 0; i &lt;= rt.getLastColumn(); i++) {&#xD;
        float[] col = rt.getColumn(i);&#xD;
        String head = rt.getColumnHeading(i);&#xD;
        if (head != null &amp;&amp; col != null) {&#xD;
            count++;&#xD;
        }&#xD;
    }&#xD;
    return count;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MCVl8BUTEemIe6OhVnSywA" name="multiPlot" specification="_MCU-4BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    ImagePlus imp = getImage();&#xD;
    if (imp == null) {&#xD;
        return;&#xD;
    }&#xD;
    int[] indexes = getSelectedIndexes();&#xD;
    if (indexes.length == 0) {&#xD;
        indexes = getAllIndexes();&#xD;
    }&#xD;
    int n = indexes.length;&#xD;
    if (n == 0) {&#xD;
        return;&#xD;
    }&#xD;
    Color[] colors = { Color.blue, Color.green, Color.magenta, Color.red, Color.cyan, Color.yellow };&#xD;
    if (n > colors.length) {&#xD;
        colors = new Color[n];&#xD;
        double c = 0;&#xD;
        double inc = 150.0 / n;&#xD;
        for (int i = 0; i &lt; n; i++) {&#xD;
            colors[i] = new Color((int) c, (int) c, (int) c);&#xD;
            c += inc;&#xD;
        }&#xD;
    }&#xD;
    int currentSlice = imp.getCurrentSlice();&#xD;
    double[][] x = new double[n][];&#xD;
    double[][] y = new double[n][];&#xD;
    double minY = Double.MAX_VALUE;&#xD;
    double maxY = -Double.MAX_VALUE;&#xD;
    double fixedMin = ProfilePlot.getFixedMin();&#xD;
    double fixedMax = ProfilePlot.getFixedMax();&#xD;
    boolean freeYScale = fixedMin == 0.0 &amp;&amp; fixedMax == 0.0;&#xD;
    if (!freeYScale) {&#xD;
        minY = fixedMin;&#xD;
        maxY = fixedMax;&#xD;
    }&#xD;
    int maxX = 0;&#xD;
    Calibration cal = imp.getCalibration();&#xD;
    double xinc = cal.pixelWidth;&#xD;
    for (int i = 0; i &lt; indexes.length; i++) {&#xD;
        if (!restore(getImage(), indexes[i], true)) {&#xD;
            break;&#xD;
        }&#xD;
        Roi roi = imp.getRoi();&#xD;
        if (roi == null) {&#xD;
            break;&#xD;
        }&#xD;
        if (roi.isArea() &amp;&amp; roi.getType() != Roi.RECTANGLE) {&#xD;
            IJ.run(imp, &quot;Area to Line&quot;, &quot;&quot;);&#xD;
        }&#xD;
        ProfilePlot pp = new ProfilePlot(imp, Prefs.verticalProfile || IJ.altKeyDown());&#xD;
        y[i] = pp.getProfile();&#xD;
        if (y[i] == null) {&#xD;
            break;&#xD;
        }&#xD;
        if (y[i].length > maxX) {&#xD;
            maxX = y[i].length;&#xD;
        }&#xD;
        if (freeYScale) {&#xD;
            double[] a = Tools.getMinMax(y[i]);&#xD;
            if (a[0] &lt; minY) {&#xD;
                minY = a[0];&#xD;
            }&#xD;
            if (a[1] > maxY) {&#xD;
                maxY = a[1];&#xD;
            }&#xD;
        }&#xD;
        double[] xx = new double[y[i].length];&#xD;
        for (int j = 0; j &lt; xx.length; j++) {&#xD;
            xx[j] = j * xinc;&#xD;
        }&#xD;
        x[i] = xx;&#xD;
    }&#xD;
    String xlabel = &quot;Distance (&quot; + cal.getUnits() + &quot;)&quot;;&#xD;
    Plot plot = new Plot(&quot;Profiles&quot;, xlabel, &quot;Value&quot;, x[0], y[0]);&#xD;
    plot.setLimits(0, maxX * xinc, minY, maxY);&#xD;
    for (int i = 1; i &lt; indexes.length; i++) {&#xD;
        plot.setColor(colors[i]);&#xD;
        if (x[i] != null) {&#xD;
            plot.addPoints(x[i], y[i], Plot.LINE);&#xD;
        }&#xD;
    }&#xD;
    plot.setColor(colors[0]);&#xD;
    if (x[0] != null) {&#xD;
        plot.show();&#xD;
    }&#xD;
    imp.setSlice(currentSlice);&#xD;
    if (indexes.length > 1) {&#xD;
        IJ.run(&quot;Select None&quot;);&#xD;
    }&#xD;
    if (record()) {&#xD;
        Recorder.record(&quot;roiManager&quot;, &quot;Multi Plot&quot;);&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MCYpQBUTEemIe6OhVnSywA" name="drawOrFill" specification="_MCW0EBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    int[] indexes = getSelectedIndexes();&#xD;
    if (indexes.length == 0) {&#xD;
        indexes = getAllIndexes();&#xD;
    }&#xD;
    ImagePlus imp = WindowManager.getCurrentImage();&#xD;
    imp.deleteRoi();&#xD;
    ImageProcessor ip = imp.getProcessor();&#xD;
    ip.setColor(Toolbar.getForegroundColor());&#xD;
    ip.snapshot();&#xD;
    Undo.setup(Undo.FILTER, imp);&#xD;
    Filler filler = mode == LABEL ? new Filler() : null;&#xD;
    int slice = imp.getCurrentSlice();&#xD;
    for (int i = 0; i &lt; indexes.length; i++) {&#xD;
        String name = (String) listModel.getElementAt(indexes[i]);&#xD;
        Roi roi = (Roi) rois.get(name);&#xD;
        int type = roi.getType();&#xD;
        if (roi == null) {&#xD;
            continue;&#xD;
        }&#xD;
        if (mode == FILL &amp;&amp; (type == Roi.POLYLINE || type == Roi.FREELINE || type == Roi.ANGLE)) {&#xD;
            mode = DRAW;&#xD;
        }&#xD;
        int slice2 = getSliceNumber(roi, name);&#xD;
        if (slice2 >= 1 &amp;&amp; slice2 &lt;= imp.getStackSize()) {&#xD;
            imp.setSlice(slice2);&#xD;
            ip = imp.getProcessor();&#xD;
            ip.setColor(Toolbar.getForegroundColor());&#xD;
            if (slice2 != slice) {&#xD;
                Undo.reset();&#xD;
            }&#xD;
        }&#xD;
        switch(mode) {&#xD;
            case DRAW:&#xD;
                roi.drawPixels(ip);&#xD;
                break;&#xD;
            case FILL:&#xD;
                ip.fill(roi);&#xD;
                break;&#xD;
            case LABEL:&#xD;
                roi.drawPixels(ip);&#xD;
                filler.drawLabel(imp, ip, i + 1, roi.getBounds());&#xD;
                break;&#xD;
        }&#xD;
    }&#xD;
    if (record() &amp;&amp; (mode == DRAW || mode == FILL)) {&#xD;
        Recorder.record(&quot;roiManager&quot;, mode == DRAW ? &quot;Draw&quot; : &quot;Fill&quot;);&#xD;
    }&#xD;
    if (showAllCheckbox.getState()) {&#xD;
        runCommand(&quot;show none&quot;);&#xD;
    }&#xD;
    imp.updateAndDraw();&#xD;
    return true;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MCeI0BUTEemIe6OhVnSywA" name="setProperties" specification="_MCaecBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    boolean showDialog = color == null &amp;&amp; lineWidth == -1 &amp;&amp; fillColor == null;&#xD;
    int[] indexes = getSelectedIndexes();&#xD;
    if (indexes.length == 0) {&#xD;
        indexes = getAllIndexes();&#xD;
    }&#xD;
    int n = indexes.length;&#xD;
    if (n == 0) {&#xD;
        return;&#xD;
    }&#xD;
    Roi rpRoi = null;&#xD;
    String rpName = null;&#xD;
    Font font = null;&#xD;
    int justification = TextRoi.LEFT;&#xD;
    double opacity = -1;&#xD;
    int position = -1;&#xD;
    int cpos = -1, zpos = -1, tpos = -1;&#xD;
    if (showDialog) {&#xD;
        String label = (String) listModel.getElementAt(indexes[0]);&#xD;
        rpRoi = (Roi) rois.get(label);&#xD;
        if (n == 1) {&#xD;
            fillColor = rpRoi.getFillColor();&#xD;
            rpName = rpRoi.getName();&#xD;
        }&#xD;
        if (rpRoi.getStrokeColor() == null) {&#xD;
            rpRoi.setStrokeColor(Roi.getColor());&#xD;
        }&#xD;
        rpRoi = (Roi) rpRoi.clone();&#xD;
        if (n > 1) {&#xD;
            rpRoi.setName(&quot;range: &quot; + (indexes[0] + 1) + &quot;-&quot; + (indexes[n - 1] + 1));&#xD;
        }&#xD;
        rpRoi.setFillColor(fillColor);&#xD;
        RoiProperties rp = new RoiProperties(&quot;Properties&quot;, rpRoi);&#xD;
        if (!rp.showDialog()) {&#xD;
            return;&#xD;
        }&#xD;
        lineWidth = (int) rpRoi.getStrokeWidth();&#xD;
        defaultLineWidth = lineWidth;&#xD;
        color = rpRoi.getStrokeColor();&#xD;
        fillColor = rpRoi.getFillColor();&#xD;
        defaultColor = color;&#xD;
        position = rpRoi.getPosition();&#xD;
        cpos = rpRoi.getCPosition();&#xD;
        zpos = rpRoi.getZPosition();&#xD;
        tpos = rpRoi.getTPosition();&#xD;
        if (rpRoi instanceof TextRoi) {&#xD;
            font = ((TextRoi) rpRoi).getCurrentFont();&#xD;
            justification = ((TextRoi) rpRoi).getJustification();&#xD;
        }&#xD;
        if (rpRoi instanceof ImageRoi) {&#xD;
            opacity = ((ImageRoi) rpRoi).getOpacity();&#xD;
        }&#xD;
    }&#xD;
    ImagePlus imp = WindowManager.getCurrentImage();&#xD;
    if (n == getCount() &amp;&amp; n > 1 &amp;&amp; !IJ.isMacro()) {&#xD;
        GenericDialog gd = new GenericDialog(&quot;ROI Manager&quot;);&#xD;
        gd.addMessage(&quot;Apply changes to all &quot; + n + &quot; selections?&quot;);&#xD;
        gd.showDialog();&#xD;
        if (gd.wasCanceled()) {&#xD;
            return;&#xD;
        }&#xD;
    }&#xD;
    for (int i = 0; i &lt; n; i++) {&#xD;
        String label = (String) listModel.getElementAt(indexes[i]);&#xD;
        Roi roi = (Roi) rois.get(label);&#xD;
        if (roi == null) {&#xD;
            continue;&#xD;
        }&#xD;
        //IJ.log(&quot;set &quot;+color+&quot;	 &quot;+lineWidth+&quot;	&quot;+fillColor);&#xD;
        if (color != null) {&#xD;
            roi.setStrokeColor(color);&#xD;
        }&#xD;
        if (lineWidth >= 0) {&#xD;
            roi.setStrokeWidth(lineWidth);&#xD;
        }&#xD;
        roi.setFillColor(fillColor);&#xD;
        if (cpos > 0 || zpos > 0 || tpos > 0) {&#xD;
            roi.setPosition(cpos, zpos, tpos);&#xD;
        } else if (position != -1) {&#xD;
            roi.setPosition(position);&#xD;
        }&#xD;
        if (roi instanceof TextRoi) {&#xD;
            roi.setImage(imp);&#xD;
            if (font != null) {&#xD;
                ((TextRoi) roi).setCurrentFont(font);&#xD;
            }&#xD;
            ((TextRoi) roi).setJustification(justification);&#xD;
            roi.setImage(null);&#xD;
        }&#xD;
        if ((roi instanceof ImageRoi) &amp;&amp; opacity != -1) {&#xD;
            ((ImageRoi) roi).setOpacity(opacity);&#xD;
        }&#xD;
    }&#xD;
    if (rpRoi != null &amp;&amp; rpName != null &amp;&amp; !rpRoi.getName().equals(rpName)) {&#xD;
        rename(rpRoi.getName());&#xD;
    }&#xD;
    ImageCanvas ic = imp != null ? imp.getCanvas() : null;&#xD;
    Roi roi = imp != null ? imp.getRoi() : null;&#xD;
    boolean showingAll = ic != null &amp;&amp; ic.getShowAllROIs();&#xD;
    if (roi != null &amp;&amp; (n == 1 || !showingAll)) {&#xD;
        if (lineWidth >= 0) {&#xD;
            roi.setStrokeWidth(lineWidth);&#xD;
        }&#xD;
        if (color != null) {&#xD;
            roi.setStrokeColor(color);&#xD;
        }&#xD;
        if (fillColor != null) {&#xD;
            roi.setFillColor(fillColor);&#xD;
        }&#xD;
        if (roi != null &amp;&amp; (roi instanceof TextRoi)) {&#xD;
            ((TextRoi) roi).setCurrentFont(font);&#xD;
            ((TextRoi) roi).setJustification(justification);&#xD;
        }&#xD;
        if (roi != null &amp;&amp; (roi instanceof ImageRoi) &amp;&amp; opacity != -1) {&#xD;
            ((ImageRoi) roi).setOpacity(opacity);&#xD;
        }&#xD;
    }&#xD;
    if (lineWidth > 1 &amp;&amp; !showingAll &amp;&amp; roi == null) {&#xD;
        showAll(SHOW_ALL);&#xD;
        showingAll = true;&#xD;
    }&#xD;
    if (imp != null) {&#xD;
        imp.draw();&#xD;
    }&#xD;
    if (record()) {&#xD;
        if (fillColor != null) {&#xD;
            Recorder.record(&quot;roiManager&quot;, &quot;Set Fill Color&quot;, Colors.colorToString(fillColor));&#xD;
        } else {&#xD;
            Recorder.record(&quot;roiManager&quot;, &quot;Set Color&quot;, Colors.colorToString(color != null ? color : Color.red));&#xD;
            Recorder.record(&quot;roiManager&quot;, &quot;Set Line Width&quot;, lineWidth);&#xD;
        }&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MCfW8RUTEemIe6OhVnSywA" name="flatten" specification="_MCfW8BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    ImagePlus imp = WindowManager.getCurrentImage();&#xD;
    if (imp == null) {&#xD;
        IJ.noImage();&#xD;
        return;&#xD;
    }&#xD;
    ImageCanvas ic = imp.getCanvas();&#xD;
    if ((ic != null &amp;&amp; ic.getShowAllList() == null) &amp;&amp; imp.getOverlay() == null &amp;&amp; imp.getRoi() == null) {&#xD;
        error(&quot;Image does not have an overlay or ROI&quot;);&#xD;
    } else {&#xD;
        // run Image>Flatten in separate thread&#xD;
        IJ.doCommand(&quot;Flatten&quot;);&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MChMIRUTEemIe6OhVnSywA" name="getDrawLabels" specification="_MCglEBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    return labelsCheckbox.getState();&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MCjBUBUTEemIe6OhVnSywA" name="combine" specification="_MCiaQBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    ImagePlus imp = getImage();&#xD;
    if (imp == null) {&#xD;
        return;&#xD;
    }&#xD;
    int[] indexes = getSelectedIndexes();&#xD;
    if (indexes.length == 1) {&#xD;
        error(&quot;More than one item must be selected, or none&quot;);&#xD;
        return;&#xD;
    }&#xD;
    if (indexes.length == 0) {&#xD;
        indexes = getAllIndexes();&#xD;
    }&#xD;
    int nPointRois = 0;&#xD;
    for (int i = 0; i &lt; indexes.length; i++) {&#xD;
        Roi roi = (Roi) rois.get((String) listModel.getElementAt(indexes[i]));&#xD;
        if (roi.getType() == Roi.POINT) {&#xD;
            nPointRois++;&#xD;
        } else {&#xD;
            break;&#xD;
        }&#xD;
    }&#xD;
    if (nPointRois == indexes.length) {&#xD;
        combinePoints(imp, indexes);&#xD;
    } else {&#xD;
        combineRois(imp, indexes);&#xD;
    }&#xD;
    if (record()) {&#xD;
        Recorder.record(&quot;roiManager&quot;, &quot;Combine&quot;);&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MCn50BUTEemIe6OhVnSywA" name="combineRois" specification="_MCk2gBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    ShapeRoi s1 = null, s2 = null;&#xD;
    ImageProcessor ip = null;&#xD;
    for (int i = 0; i &lt; indexes.length; i++) {&#xD;
        Roi roi = (Roi) rois.get((String) listModel.getElementAt(indexes[i]));&#xD;
        if (!roi.isArea()) {&#xD;
            if (ip == null) {&#xD;
                ip = new ByteProcessor(imp.getWidth(), imp.getHeight());&#xD;
            }&#xD;
            roi = convertLineToPolygon(roi, ip);&#xD;
        }&#xD;
        if (s1 == null) {&#xD;
            if (roi instanceof ShapeRoi) {&#xD;
                s1 = (ShapeRoi) roi;&#xD;
            } else {&#xD;
                s1 = new ShapeRoi(roi);&#xD;
            }&#xD;
            if (s1 == null) {&#xD;
                return;&#xD;
            }&#xD;
        } else {&#xD;
            if (roi instanceof ShapeRoi) {&#xD;
                s2 = (ShapeRoi) roi;&#xD;
            } else {&#xD;
                s2 = new ShapeRoi(roi);&#xD;
            }&#xD;
            if (s2 == null) {&#xD;
                continue;&#xD;
            }&#xD;
            s1.or(s2);&#xD;
        }&#xD;
    }&#xD;
    if (s1 != null) {&#xD;
        imp.setRoi(s1);&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MCv1oBUTEemIe6OhVnSywA" name="convertLineToPolygon" specification="_MCrkMBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    if (roi == null) {&#xD;
        return null;&#xD;
    }&#xD;
    ip.resetRoi();&#xD;
    ip.setColor(0);&#xD;
    ip.fill();&#xD;
    ip.setColor(255);&#xD;
    if (roi.getType() == Roi.LINE &amp;&amp; roi.getStrokeWidth() > 1) {&#xD;
        ip.fillPolygon(roi.getPolygon());&#xD;
    } else {&#xD;
        roi.drawPixels(ip);&#xD;
    }&#xD;
    //new ImagePlus(&quot;ip&quot;, ip.duplicate()).show();&#xD;
    ip.setThreshold(255, 255, ImageProcessor.NO_LUT_UPDATE);&#xD;
    ThresholdToSelection tts = new ThresholdToSelection();&#xD;
    return tts.convert(ip);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MC1VMBUTEemIe6OhVnSywA" name="combinePoints" specification="_MCxq0BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    int n = indexes.length;&#xD;
    Polygon[] p = new Polygon[n];&#xD;
    int points = 0;&#xD;
    for (int i = 0; i &lt; n; i++) {&#xD;
        Roi roi = (Roi) rois.get((String) listModel.getElementAt(indexes[i]));&#xD;
        p[i] = roi.getPolygon();&#xD;
        points += p[i].npoints;&#xD;
    }&#xD;
    if (points == 0) {&#xD;
        return;&#xD;
    }&#xD;
    int[] xpoints = new int[points];&#xD;
    int[] ypoints = new int[points];&#xD;
    int index = 0;&#xD;
    for (int i = 0; i &lt; p.length; i++) {&#xD;
        for (int j = 0; j &lt; p[i].npoints; j++) {&#xD;
            xpoints[index] = p[i].xpoints[j];&#xD;
            ypoints[index] = p[i].ypoints[j];&#xD;
            index++;&#xD;
        }&#xD;
    }&#xD;
    imp.setRoi(new PointRoi(xpoints, ypoints, xpoints.length));&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MC3KYBUTEemIe6OhVnSywA" name="and" specification="_MC2jUBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    ImagePlus imp = getImage();&#xD;
    if (imp == null) {&#xD;
        return;&#xD;
    }&#xD;
    int[] indexes = getSelectedIndexes();&#xD;
    if (indexes.length == 1) {&#xD;
        error(&quot;More than one item must be selected, or none&quot;);&#xD;
        return;&#xD;
    }&#xD;
    if (indexes.length == 0) {&#xD;
        indexes = getAllIndexes();&#xD;
    }&#xD;
    ShapeRoi s1 = null, s2 = null;&#xD;
    for (int i = 0; i &lt; indexes.length; i++) {&#xD;
        Roi roi = (Roi) rois.get((String) listModel.getElementAt(indexes[i]));&#xD;
        if (roi == null || !roi.isArea()) {&#xD;
            continue;&#xD;
        }&#xD;
        if (s1 == null) {&#xD;
            if (roi instanceof ShapeRoi) {&#xD;
                s1 = (ShapeRoi) roi.clone();&#xD;
            } else {&#xD;
                s1 = new ShapeRoi(roi);&#xD;
            }&#xD;
            if (s1 == null) {&#xD;
                return;&#xD;
            }&#xD;
        } else {&#xD;
            if (roi instanceof ShapeRoi) {&#xD;
                s2 = (ShapeRoi) roi.clone();&#xD;
            } else {&#xD;
                s2 = new ShapeRoi(roi);&#xD;
            }&#xD;
            if (s2 == null) {&#xD;
                continue;&#xD;
            }&#xD;
            s1.and(s2);&#xD;
        }&#xD;
    }&#xD;
    if (s1 != null) {&#xD;
        imp.setRoi(s1);&#xD;
    }&#xD;
    if (record()) {&#xD;
        Recorder.record(&quot;roiManager&quot;, &quot;AND&quot;);&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MC4_kBUTEemIe6OhVnSywA" name="xor" specification="_MC4YgBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    ImagePlus imp = getImage();&#xD;
    if (imp == null) {&#xD;
        return;&#xD;
    }&#xD;
    int[] indexes = getSelectedIndexes();&#xD;
    if (indexes.length == 1) {&#xD;
        error(&quot;More than one item must be selected, or none&quot;);&#xD;
        return;&#xD;
    }&#xD;
    if (indexes.length == 0) {&#xD;
        indexes = getAllIndexes();&#xD;
    }&#xD;
    ShapeRoi s1 = null, s2 = null;&#xD;
    for (int i = 0; i &lt; indexes.length; i++) {&#xD;
        Roi roi = (Roi) rois.get((String) listModel.getElementAt(indexes[i]));&#xD;
        if (!roi.isArea()) {&#xD;
            continue;&#xD;
        }&#xD;
        if (s1 == null) {&#xD;
            if (roi instanceof ShapeRoi) {&#xD;
                s1 = (ShapeRoi) roi.clone();&#xD;
            } else {&#xD;
                s1 = new ShapeRoi(roi);&#xD;
            }&#xD;
            if (s1 == null) {&#xD;
                return;&#xD;
            }&#xD;
        } else {&#xD;
            if (roi instanceof ShapeRoi) {&#xD;
                s2 = (ShapeRoi) roi.clone();&#xD;
            } else {&#xD;
                s2 = new ShapeRoi(roi);&#xD;
            }&#xD;
            if (s2 == null) {&#xD;
                continue;&#xD;
            }&#xD;
            s1.xor(s2);&#xD;
        }&#xD;
    }&#xD;
    if (s1 != null) {&#xD;
        imp.setRoi(s1);&#xD;
    }&#xD;
    if (record()) {&#xD;
        Recorder.record(&quot;roiManager&quot;, &quot;XOR&quot;);&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MC7b0BUTEemIe6OhVnSywA" name="addParticles" specification="_MC60wBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    String err = IJ.runMacroFile(&quot;ij.jar:AddParticles&quot;, null);&#xD;
    if (err != null &amp;&amp; err.length() > 0) {&#xD;
        error(err);&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MC9RABUTEemIe6OhVnSywA" name="sort" specification="_MC8p8BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    int n = rois.size();&#xD;
    if (n == 0) {&#xD;
        return;&#xD;
    }&#xD;
    String[] labels = new String[n];&#xD;
    int index = 0;&#xD;
    for (Enumeration en = rois.keys(); en.hasMoreElements(); ) {&#xD;
        labels[index++] = (String) en.nextElement();&#xD;
    }&#xD;
    listModel.clear();&#xD;
    StringSorter.sort(labels);&#xD;
    for (int i = 0; i &lt; labels.length; i++) {&#xD;
        listModel.addElement(labels[i]);&#xD;
    }&#xD;
    if (record()) {&#xD;
        Recorder.record(&quot;roiManager&quot;, &quot;Sort&quot;);&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MC_tQBUTEemIe6OhVnSywA" name="specify" specification="_MC_GMBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    try {&#xD;
        IJ.run(&quot;Specify...&quot;);&#xD;
    } catch (Exception e) {&#xD;
        return;&#xD;
    }&#xD;
    runCommand(&quot;add&quot;);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MDJeQBUTEemIe6OhVnSywA" name="removePositions" specification="_MDHpEBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    int[] indexes = getSelectedIndexes();&#xD;
    if (indexes.length == 0) {&#xD;
        indexes = getAllIndexes();&#xD;
    }&#xD;
    if (indexes.length == 0) {&#xD;
        return;&#xD;
    }&#xD;
    boolean removeChannels = position == CHANNEL;&#xD;
    boolean removeFrames = position == FRAME;&#xD;
    boolean removeSlices = !(removeChannels || removeFrames);&#xD;
    if (position == SHOW_DIALOG) {&#xD;
        ImagePlus imp = WindowManager.getCurrentImage();&#xD;
        if (imp != null &amp;&amp; !imp.isHyperStack()) {&#xD;
            channel = false;&#xD;
            slice = true;&#xD;
            frame = false;&#xD;
        }&#xD;
        Font font = new Font(&quot;SansSerif&quot;, Font.BOLD, 12);&#xD;
        GenericDialog gd = new GenericDialog(&quot;Remove&quot;);&#xD;
        gd.setInsets(5, 15, 0);&#xD;
        gd.addMessage(&quot;Remove positions for:      &quot;, font);&#xD;
        gd.setInsets(6, 25, 0);&#xD;
        gd.addCheckbox(&quot;Channels:&quot;, channel);&#xD;
        gd.setInsets(0, 25, 0);&#xD;
        gd.addCheckbox(&quot;Slices:&quot;, slice);&#xD;
        gd.setInsets(0, 25, 0);&#xD;
        gd.addCheckbox(&quot;Frames:&quot;, frame);&#xD;
        gd.showDialog();&#xD;
        if (gd.wasCanceled()) {&#xD;
            return;&#xD;
        }&#xD;
        removeChannels = gd.getNextBoolean();&#xD;
        removeSlices = gd.getNextBoolean();&#xD;
        removeFrames = gd.getNextBoolean();&#xD;
        channel = removeChannels;&#xD;
        slice = removeSlices;&#xD;
        frame = removeFrames;&#xD;
    }&#xD;
    if (!removeChannels &amp;&amp; !removeSlices &amp;&amp; !removeFrames) {&#xD;
        slice = true;&#xD;
        return;&#xD;
    }&#xD;
    for (int i = 0; i &lt; indexes.length; i++) {&#xD;
        int index = indexes[i];&#xD;
        String name = (String) listModel.getElementAt(index);&#xD;
        Roi roi = (Roi) rois.get(name);&#xD;
        int c = roi.getCPosition();&#xD;
        int z = roi.getZPosition();&#xD;
        int t = roi.getTPosition();&#xD;
        if (c > 0 || t > 0) {&#xD;
            if (removeChannels) {&#xD;
                c = 0;&#xD;
            }&#xD;
            if (removeSlices) {&#xD;
                z = 0;&#xD;
            }&#xD;
            if (removeFrames) {&#xD;
                t = 0;&#xD;
            }&#xD;
            roi.setPosition(c, z, t);&#xD;
            continue;&#xD;
        }&#xD;
        int n = getSliceNumber(name);&#xD;
        if (n == -1) {&#xD;
            continue;&#xD;
        }&#xD;
        String name2 = name.substring(5, name.length());&#xD;
        name2 = getUniqueName(name2);&#xD;
        rois.remove(name);&#xD;
        roi.setName(name2);&#xD;
        roi.setPosition(0);&#xD;
        rois.put(name2, roi);&#xD;
        listModel.setElementAt(name2, index);&#xD;
    }&#xD;
    if (record()) {&#xD;
        if (removeChannels) {&#xD;
            Recorder.record(&quot;roiManager&quot;, &quot;Remove Channel Info&quot;);&#xD;
        }&#xD;
        if (removeSlices) {&#xD;
            Recorder.record(&quot;roiManager&quot;, &quot;Remove Slice Info&quot;);&#xD;
        }&#xD;
        if (removeFrames) {&#xD;
            Recorder.record(&quot;roiManager&quot;, &quot;Remove Frame Info&quot;);&#xD;
        }&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MDKsYRUTEemIe6OhVnSywA" name="help" specification="_MDKsYBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    String macro = &quot;run('URL...', 'url=&quot; + IJ.URL + &quot;/docs/menus/analyze.html#manager');&quot;;&#xD;
    new MacroRunner(macro);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MDMhkBUTEemIe6OhVnSywA" name="labels" specification="_MDL6gBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    ImagePlus imp = WindowManager.getCurrentImage();&#xD;
    if (imp != null) {&#xD;
        showAllCheckbox.setState(true);&#xD;
        labelsCheckbox.setState(true);&#xD;
        showAll(LABELS);&#xD;
    }&#xD;
    IJ.doCommand(&quot;Labels...&quot;);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MDOWwBUTEemIe6OhVnSywA" name="options" specification="_MDNvsBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    Color c = ImageCanvas.getShowAllColor();&#xD;
    GenericDialog gd = new GenericDialog(&quot;Options&quot;);&#xD;
    //gd.addPanel(makeButtonPanel(gd), GridBagConstraints.CENTER, new Insets(5, 0, 0, 0));&#xD;
    gd.addCheckbox(&quot;Associate \&quot;Show All\&quot; ROIs with slices&quot;, Prefs.showAllSliceOnly);&#xD;
    gd.addCheckbox(&quot;Restore ROIs centered&quot;, restoreCentered);&#xD;
    gd.addCheckbox(&quot;Use ROI names as labels&quot;, Prefs.useNamesAsLabels);&#xD;
    gd.showDialog();&#xD;
    if (gd.wasCanceled()) {&#xD;
        if (c != ImageCanvas.getShowAllColor()) {&#xD;
            ImageCanvas.setShowAllColor(c);&#xD;
        }&#xD;
        return;&#xD;
    }&#xD;
    Prefs.showAllSliceOnly = gd.getNextBoolean();&#xD;
    restoreCentered = gd.getNextBoolean();&#xD;
    Prefs.useNamesAsLabels = gd.getNextBoolean();&#xD;
    ImagePlus imp = WindowManager.getCurrentImage();&#xD;
    if (imp != null) {&#xD;
        Overlay overlay = imp.getOverlay();&#xD;
        if (overlay != null) {&#xD;
            overlay.drawNames(Prefs.useNamesAsLabels);&#xD;
        }&#xD;
        imp.draw();&#xD;
    }&#xD;
    if (record()) {&#xD;
        Recorder.record(&quot;roiManager&quot;, &quot;Associate&quot;, Prefs.showAllSliceOnly ? &quot;true&quot; : &quot;false&quot;);&#xD;
        Recorder.record(&quot;roiManager&quot;, &quot;Centered&quot;, restoreCentered ? &quot;true&quot; : &quot;false&quot;);&#xD;
        Recorder.record(&quot;roiManager&quot;, &quot;UseNames&quot;, Prefs.useNamesAsLabels ? &quot;true&quot; : &quot;false&quot;);&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MDVrgRUTEemIe6OhVnSywA" name="makeButtonPanel" specification="_MDTPQBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    Panel panel = new Panel();&#xD;
    //buttons.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 0));&#xD;
    colorButton = new Button(&quot;\&quot;Show All\&quot; Color...&quot;);&#xD;
    colorButton.addActionListener(this);&#xD;
    panel.add(colorButton);&#xD;
    return panel;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MDWSkRUTEemIe6OhVnSywA" name="setShowAllColor" specification="_MDWSkBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    ColorChooser cc = new ColorChooser(&quot;\&quot;Show All\&quot; Color&quot;, ImageCanvas.getShowAllColor(), false);&#xD;
    ImageCanvas.setShowAllColor(cc.getColor());&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MDW5oBUTEemIe6OhVnSywA" name="split" specification="_MDWSkhUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    ImagePlus imp = getImage();&#xD;
    if (imp == null) {&#xD;
        return;&#xD;
    }&#xD;
    Roi roi = imp.getRoi();&#xD;
    if (roi == null || roi.getType() != Roi.COMPOSITE) {&#xD;
        error(&quot;Image with composite selection required&quot;);&#xD;
        return;&#xD;
    }&#xD;
    boolean record = Recorder.record;&#xD;
    Recorder.record = false;&#xD;
    Roi[] rois = ((ShapeRoi) roi).getRois();&#xD;
    for (int i = 0; i &lt; rois.length; i++) {&#xD;
        imp.setRoi(rois[i]);&#xD;
        addRoi(false);&#xD;
    }&#xD;
    Recorder.record = record;&#xD;
    if (record()) {&#xD;
        Recorder.record(&quot;roiManager&quot;, &quot;Split&quot;);&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MDYHwBUTEemIe6OhVnSywA" name="delete_without_asking" specification="_MDW5oRUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    int count = getCount();&#xD;
    int index[] = getAllIndexes();&#xD;
    if (count == index.length &amp;&amp; !replacing) {&#xD;
        rois.clear();&#xD;
        listModel.removeAllElements();&#xD;
    } else {&#xD;
        for (int i = count - 1; i >= 0; i--) {&#xD;
            boolean delete = false;&#xD;
            for (int j = 0; j &lt; index.length; j++) {&#xD;
                if (index[j] == i) {&#xD;
                    delete = true;&#xD;
                }&#xD;
            }&#xD;
            if (delete) {&#xD;
                rois.remove((String) listModel.getElementAt(i));&#xD;
                listModel.remove(i);&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    ImagePlus imp = WindowManager.getCurrentImage();&#xD;
    if (count > 1 &amp;&amp; index.length == 1 &amp;&amp; imp != null) {&#xD;
        imp.deleteRoi();&#xD;
    }&#xD;
    return true;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MDYu0RUTEemIe6OhVnSywA" name="showAll" specification="_MDYHwRUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    ImagePlus imp = WindowManager.getCurrentImage();&#xD;
    if (imp == null) {&#xD;
        return;&#xD;
    }&#xD;
    boolean showAll = mode == SHOW_ALL;&#xD;
    if (showAll) {&#xD;
        imageID = imp.getID();&#xD;
    }&#xD;
    if (mode == LABELS) {&#xD;
        showAll = true;&#xD;
        if (record()) {&#xD;
            Recorder.record(&quot;roiManager&quot;, &quot;Show All with labels&quot;);&#xD;
        }&#xD;
    } else if (mode == NO_LABELS) {&#xD;
        showAll = true;&#xD;
        if (record()) {&#xD;
            Recorder.record(&quot;roiManager&quot;, &quot;Show All without labels&quot;);&#xD;
        }&#xD;
    }&#xD;
    if (showAll) {&#xD;
        imp.deleteRoi();&#xD;
    }&#xD;
    Roi[] rois = getRoisAsArray();&#xD;
    if (mode == SHOW_NONE) {&#xD;
        removeOverlay(imp);&#xD;
        imageID = 0;&#xD;
    } else if (rois.length > 0) {&#xD;
        Overlay overlay = newOverlay();&#xD;
        for (int i = 0; i &lt; rois.length; i++) {&#xD;
            overlay.add(rois[i]);&#xD;
        }&#xD;
        setOverlay(imp, overlay);&#xD;
    }&#xD;
    if (record()) {&#xD;
        Recorder.record(&quot;roiManager&quot;, showAll ? &quot;Show All&quot; : &quot;Show None&quot;);&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MDZV4BUTEemIe6OhVnSywA" name="updateShowAll" specification="_MDYu0hUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    ImagePlus imp = WindowManager.getCurrentImage();&#xD;
    if (imp == null) {&#xD;
        return;&#xD;
    }&#xD;
    if (showAllCheckbox.getState()) {&#xD;
        Roi[] rois = getRoisAsArray();&#xD;
        if (rois.length > 0) {&#xD;
            Overlay overlay = newOverlay();&#xD;
            for (int i = 0; i &lt; rois.length; i++) {&#xD;
                overlay.add(rois[i]);&#xD;
            }&#xD;
            setOverlay(imp, overlay);&#xD;
        } else {&#xD;
            removeOverlay(imp);&#xD;
        }&#xD;
    } else {&#xD;
        removeOverlay(imp);&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MDZ88hUTEemIe6OhVnSywA" name="getAllIndexes" specification="_MDZV4RUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    int count = getCount();&#xD;
    int[] indexes = new int[count];&#xD;
    for (int i = 0; i &lt; count; i++) {&#xD;
        indexes[i] = i;&#xD;
    }&#xD;
    return indexes;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MDakABUTEemIe6OhVnSywA" name="getImage" specification="_MDZ88xUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    ImagePlus imp = WindowManager.getCurrentImage();&#xD;
    if (imp == null) {&#xD;
        error(&quot;There are no images open.&quot;);&#xD;
        return null;&#xD;
    } else {&#xD;
        return imp;&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MDbLERUTEemIe6OhVnSywA" name="error" specification="_MDakARUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    new MessageDialog(this, &quot;ROI Manager&quot;, msg);&#xD;
    Macro.abort();&#xD;
    return false;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MDdnURUTEemIe6OhVnSywA" name="processWindowEvent" specification="_MDdAQRUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    super.processWindowEvent(e);&#xD;
    if (e.getID() == WindowEvent.WINDOW_CLOSING) {&#xD;
        instance = null;&#xD;
    }&#xD;
    if (!IJ.isMacro()) {&#xD;
        ignoreInterrupts = false;&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MDeOYhUTEemIe6OhVnSywA" name="getInstance" specification="_MDeOYBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    return (NormaliseManager) instance;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MDe1chUTEemIe6OhVnSywA" name="getInstance2" specification="_MDe1cBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    NormaliseManager rm = getInstance();&#xD;
    return rm;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MDgDkBUTEemIe6OhVnSywA" name="getROIs" specification="_MDfcgBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    return rois;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MDk8ERUTEemIe6OhVnSywA" name="getList" specification="_MDgqoBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    List awtList = new List();&#xD;
    for (int i = 0; i &lt; getCount(); i++) {&#xD;
        awtList.add((String) listModel.getElementAt(i));&#xD;
    }&#xD;
    int index = getSelectedIndex();&#xD;
    if (index >= 0) {&#xD;
        awtList.select(index);&#xD;
    }&#xD;
    return awtList;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MDljIRUTEemIe6OhVnSywA" name="getCount" specification="_MDk8EhUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    return listModel.getSize();&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MDmKMhUTEemIe6OhVnSywA" name="getRoiIndex" specification="_MDljIhUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    int n = getCount();&#xD;
    for (int i = 0; i &lt; n; i++) {&#xD;
        String label = (String) listModel.getElementAt(i);&#xD;
        Roi roi2 = (Roi) rois.get(label);&#xD;
        if (roi == roi2) {&#xD;
            return i;&#xD;
        }&#xD;
    }&#xD;
    return -1;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MDmxQhUTEemIe6OhVnSywA" name="getSelectedIndex" specification="_MDmxQBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    return list.getSelectedIndex();&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MDn_YRUTEemIe6OhVnSywA" name="getRoi" specification="_MDmxQxUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    if (index &lt; 0 || index >= getCount()) {&#xD;
        return null;&#xD;
    }&#xD;
    String label = (String) listModel.getElementAt(index);&#xD;
    return (Roi) rois.get(label);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MDpNgBUTEemIe6OhVnSywA" name="getRoisAsArray" specification="_MDomcBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    int n = getCount();&#xD;
    Roi[] array = new Roi[n];&#xD;
    for (int i = 0; i &lt; n; i++) {&#xD;
        String label = (String) listModel.getElementAt(i);&#xD;
        array[i] = (Roi) rois.get(label);&#xD;
    }&#xD;
    return array;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MDp0khUTEemIe6OhVnSywA" name="getSelectedRoisAsArray" specification="_MDpNgRUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    int[] indexes = getSelectedIndexes();&#xD;
    if (indexes.length == 0) {&#xD;
        indexes = getAllIndexes();&#xD;
    }&#xD;
    int n = indexes.length;&#xD;
    Roi[] array = new Roi[n];&#xD;
    for (int i = 0; i &lt; n; i++) {&#xD;
        String label = (String) listModel.getElementAt(indexes[i]);&#xD;
        array[i] = (Roi) rois.get(label);&#xD;
    }&#xD;
    return array;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MDqbohUTEemIe6OhVnSywA" name="getName" specification="_MDp0kxUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    if (index >= 0 &amp;&amp; index &lt; getCount()) {&#xD;
        return (String) listModel.getElementAt(index);&#xD;
    } else {&#xD;
        return null;&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MDrpwRUTEemIe6OhVnSywA" name="getName" specification="_MDrCsBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    int i = (int) Tools.parseDouble(index, -1);&#xD;
    NormaliseManager instance = getInstance2();&#xD;
    if (instance != null &amp;&amp; i >= 0 &amp;&amp; i &lt; instance.getCount()) {&#xD;
        return (String) instance.listModel.getElementAt(i);&#xD;
    } else {&#xD;
        return &quot;null&quot;;&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MDutEBUTEemIe6OhVnSywA" name="runCommand" specification="_MDsQ0BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    cmd = cmd.toLowerCase();&#xD;
    macro = true;&#xD;
    boolean ok = true;&#xD;
    if (cmd.equals(&quot;add&quot;)) {&#xD;
        boolean shift = IJ.shiftKeyDown();&#xD;
        boolean alt = IJ.altKeyDown();&#xD;
        if (Interpreter.isBatchMode()) {&#xD;
            shift = false;&#xD;
            alt = false;&#xD;
        }&#xD;
        //setRoiPosition();&#xD;
        add(shift, alt);&#xD;
    } else if (cmd.equals(&quot;add &amp; draw&quot;)) {&#xD;
        addAndDraw(false);&#xD;
    } else if (cmd.equals(&quot;update&quot;)) {&#xD;
        update(true);&#xD;
    } else if (cmd.equals(&quot;update2&quot;)) {&#xD;
        update(false);&#xD;
    } else if (cmd.equals(&quot;delete&quot;)) {&#xD;
        delete(false);&#xD;
    } else if (cmd.equals(&quot;measure&quot;)) {&#xD;
        measure(COMMAND);&#xD;
    } else if (cmd.equals(&quot;draw&quot;)) {&#xD;
        drawOrFill(DRAW);&#xD;
    } else if (cmd.equals(&quot;fill&quot;)) {&#xD;
        drawOrFill(FILL);&#xD;
    } else if (cmd.equals(&quot;label&quot;)) {&#xD;
        drawOrFill(LABEL);&#xD;
    } else if (cmd.equals(&quot;and&quot;)) {&#xD;
        and();&#xD;
    } else if (cmd.equals(&quot;or&quot;) || cmd.equals(&quot;combine&quot;)) {&#xD;
        combine();&#xD;
    } else if (cmd.equals(&quot;xor&quot;)) {&#xD;
        xor();&#xD;
    } else if (cmd.equals(&quot;split&quot;)) {&#xD;
        split();&#xD;
    } else if (cmd.equals(&quot;sort&quot;)) {&#xD;
        sort();&#xD;
    } else if (cmd.startsWith(&quot;multi measure&quot;)) {&#xD;
        multiMeasure(cmd);&#xD;
    } else if (cmd.equals(&quot;multi plot&quot;)) {&#xD;
        multiPlot();&#xD;
    } else if (cmd.equals(&quot;show all&quot;)) {&#xD;
        if (WindowManager.getCurrentImage() != null) {&#xD;
            showAll(SHOW_ALL);&#xD;
            showAllCheckbox.setState(true);&#xD;
        }&#xD;
    } else if (cmd.equals(&quot;show none&quot;)) {&#xD;
        if (WindowManager.getCurrentImage() != null) {&#xD;
            showAll(SHOW_NONE);&#xD;
            showAllCheckbox.setState(false);&#xD;
        }&#xD;
    } else if (cmd.equals(&quot;show all with labels&quot;)) {&#xD;
        labelsCheckbox.setState(true);&#xD;
        showAll(LABELS);&#xD;
        if (Interpreter.isBatchMode()) {&#xD;
            IJ.wait(250);&#xD;
        }&#xD;
    } else if (cmd.equals(&quot;show all without labels&quot;)) {&#xD;
        labelsCheckbox.setState(false);&#xD;
        showAll(NO_LABELS);&#xD;
        if (Interpreter.isBatchMode()) {&#xD;
            IJ.wait(250);&#xD;
        }&#xD;
    } else if (cmd.equals(&quot;deselect&quot;) || cmd.indexOf(&quot;all&quot;) != -1) {&#xD;
        if (IJ.isMacOSX()) {&#xD;
            ignoreInterrupts = true;&#xD;
        }&#xD;
        select(-1);&#xD;
        IJ.wait(50);&#xD;
    } else if (cmd.equals(&quot;reset&quot;)) {&#xD;
        if (IJ.isMacOSX() &amp;&amp; IJ.isMacro()) {&#xD;
            ignoreInterrupts = true;&#xD;
        }&#xD;
        listModel.clear();&#xD;
        rois.clear();&#xD;
        updateShowAll();&#xD;
    } else if (cmd.equals(&quot;debug&quot;)) {&#xD;
    //IJ.log(&quot;Debug: &quot;+debugCount);&#xD;
    //for (int i=0; i&lt;debugCount; i++)&#xD;
    //	IJ.log(debug[i]);&#xD;
    } else if (cmd.equals(&quot;enable interrupts&quot;)) {&#xD;
        ignoreInterrupts = false;&#xD;
    } else if (cmd.equals(&quot;remove channel info&quot;)) {&#xD;
        removePositions(CHANNEL);&#xD;
    } else if (cmd.equals(&quot;remove slice info&quot;)) {&#xD;
        removePositions(SLICE);&#xD;
    } else if (cmd.equals(&quot;remove frame info&quot;)) {&#xD;
        removePositions(FRAME);&#xD;
    } else if (cmd.equals(&quot;list&quot;)) {&#xD;
        listRois();&#xD;
    } else if (cmd.equals(&quot;interpolate rois&quot;)) {&#xD;
        interpolateRois();&#xD;
    } else {&#xD;
        ok = false;&#xD;
    }&#xD;
    macro = false;&#xD;
    return ok;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MDwiQBUTEemIe6OhVnSywA" name="runCommand" specification="_MDvUIBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    cmd = cmd.toLowerCase();&#xD;
    macro = true;&#xD;
    if (cmd.equals(&quot;open&quot;)) {&#xD;
        open(name);&#xD;
        macro = false;&#xD;
        return true;&#xD;
    } else if (cmd.equals(&quot;save&quot;)) {&#xD;
        save(name, false);&#xD;
    } else if (cmd.equals(&quot;save selected&quot;)) {&#xD;
        save(name, true);&#xD;
    } else if (cmd.equals(&quot;rename&quot;)) {&#xD;
        rename(name);&#xD;
        macro = false;&#xD;
        return true;&#xD;
    } else if (cmd.equals(&quot;set color&quot;)) {&#xD;
        Color color = Colors.decode(name, Color.cyan);&#xD;
        setProperties(color, -1, null);&#xD;
        macro = false;&#xD;
        return true;&#xD;
    } else if (cmd.equals(&quot;set fill color&quot;)) {&#xD;
        Color fillColor = Colors.decode(name, Color.cyan);&#xD;
        setProperties(null, -1, fillColor);&#xD;
        macro = false;&#xD;
        return true;&#xD;
    } else if (cmd.equals(&quot;set line width&quot;)) {&#xD;
        int lineWidth = (int) Tools.parseDouble(name, 0);&#xD;
        if (lineWidth >= 0) {&#xD;
            setProperties(null, lineWidth, null);&#xD;
        }&#xD;
        macro = false;&#xD;
        return true;&#xD;
    } else if (cmd.equals(&quot;associate&quot;)) {&#xD;
        Prefs.showAllSliceOnly = name.equals(&quot;true&quot;) ? true : false;&#xD;
        macro = false;&#xD;
        return true;&#xD;
    } else if (cmd.equals(&quot;centered&quot;)) {&#xD;
        restoreCentered = name.equals(&quot;true&quot;) ? true : false;&#xD;
        macro = false;&#xD;
        return true;&#xD;
    } else if (cmd.equals(&quot;usenames&quot;)) {&#xD;
        Prefs.useNamesAsLabels = name.equals(&quot;true&quot;) ? true : false;&#xD;
        macro = false;&#xD;
        if (labelsCheckbox.getState()) {&#xD;
            ImagePlus imp = WindowManager.getCurrentImage();&#xD;
            if (imp != null) {&#xD;
                imp.draw();&#xD;
            }&#xD;
        }&#xD;
        return true;&#xD;
    }&#xD;
    return false;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MDxwYBUTEemIe6OhVnSywA" name="save" specification="_MDwiQRUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    if (!name.endsWith(&quot;.zip&quot;) &amp;&amp; !name.equals(&quot;&quot;)) {&#xD;
        return error(&quot;Name must end with '.zip'&quot;);&#xD;
    }&#xD;
    if (getCount() == 0) {&#xD;
        return error(&quot;The selection list is empty.&quot;);&#xD;
    }&#xD;
    int[] indexes = null;&#xD;
    if (saveSelected) {&#xD;
        indexes = getSelectedIndexes();&#xD;
        if (indexes.length == 0) {&#xD;
            indexes = getAllIndexes();&#xD;
        }&#xD;
    } else {&#xD;
        indexes = getAllIndexes();&#xD;
    }&#xD;
    boolean ok = false;&#xD;
    if (name.equals(&quot;&quot;)) {&#xD;
        ok = saveMultiple(indexes, null);&#xD;
    } else {&#xD;
        ok = saveMultiple(indexes, name);&#xD;
    }&#xD;
    macro = false;&#xD;
    return ok;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MDy-ghUTEemIe6OhVnSywA" name="runCommand" specification="_MDxwYRUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    //setRoiPosition();&#xD;
    if (hexColor == null &amp;&amp; lineWidth == 1.0 &amp;&amp; (IJ.altKeyDown() &amp;&amp; !Interpreter.isBatchMode())) {&#xD;
        addRoi(true);&#xD;
    } else {&#xD;
        Color color = hexColor != null ? Colors.decode(hexColor, Color.cyan) : null;&#xD;
        addRoi(null, false, color, (int) Math.round(lineWidth));&#xD;
    }&#xD;
    return true;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MD0MoRUTEemIe6OhVnSywA" name="setRoiPosition" specification="_MDzlkBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    if (imp == null || roi == null) {&#xD;
        return;&#xD;
    }&#xD;
    if (imp.isHyperStack()) {&#xD;
        roi.setPosition(imp.getChannel(), imp.getSlice(), imp.getFrame());&#xD;
    } else if (imp.getStackSize() > 1) {&#xD;
        roi.setPosition(imp.getCurrentSlice());&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MD0zsRUTEemIe6OhVnSywA" name="select" specification="_MD0MohUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    select(null, index);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MD2o4BUTEemIe6OhVnSywA" name="select" specification="_MD1awBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    selectedIndexes = null;&#xD;
    int n = getCount();&#xD;
    if (index &lt; 0) {&#xD;
        for (int i = 0; i &lt; n; i++) {&#xD;
            list.clearSelection();&#xD;
        }&#xD;
        if (record()) {&#xD;
            Recorder.record(&quot;roiManager&quot;, &quot;Deselect&quot;);&#xD;
        }&#xD;
        return;&#xD;
    }&#xD;
    if (index >= n) {&#xD;
        return;&#xD;
    }&#xD;
    boolean mm = list.getSelectionMode() == ListSelectionModel.MULTIPLE_INTERVAL_SELECTION;&#xD;
    if (mm) {&#xD;
        list.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);&#xD;
    }&#xD;
    int delay = 1;&#xD;
    long start = System.currentTimeMillis();&#xD;
    while (true) {&#xD;
        if (list.isSelectedIndex(index)) {&#xD;
            break;&#xD;
        }&#xD;
        list.clearSelection();&#xD;
        list.setSelectedIndex(index);&#xD;
    }&#xD;
    if (imp == null) {&#xD;
        imp = WindowManager.getCurrentImage();&#xD;
    }&#xD;
    if (imp != null) {&#xD;
        restore(imp, index, true);&#xD;
    }&#xD;
    if (mm) {&#xD;
        list.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MD33ARUTEemIe6OhVnSywA" name="select" specification="_MD2o4RUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    if (!(shiftKeyDown || altKeyDown)) {&#xD;
        select(index);&#xD;
    }&#xD;
    ImagePlus imp = IJ.getImage();&#xD;
    if (imp == null) {&#xD;
        return;&#xD;
    }&#xD;
    Roi previousRoi = imp.getRoi();&#xD;
    if (previousRoi == null) {&#xD;
        select(index);&#xD;
        return;&#xD;
    }&#xD;
    Roi.previousRoi = (Roi) previousRoi.clone();&#xD;
    String label = (String) listModel.getElementAt(index);&#xD;
    Roi roi = (Roi) rois.get(label);&#xD;
    if (roi != null) {&#xD;
        roi.setImage(imp);&#xD;
        roi.update(shiftKeyDown, altKeyDown);&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MD5FIRUTEemIe6OhVnSywA" name="setEditMode" specification="_MD4eEBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    showAllCheckbox.setState(editMode);&#xD;
    labelsCheckbox.setState(editMode);&#xD;
    showAll(editMode ? LABELS : SHOW_NONE);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MD5sMRUTEemIe6OhVnSywA" name="close" specification="_MD5sMBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    ImagePlus imp = WindowManager.getCurrentImage();&#xD;
    removeOverlay(imp);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MD66UBUTEemIe6OhVnSywA" name="moveRoisToOverlay" specification="_MD6TQBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    if (imp == null) {&#xD;
        return;&#xD;
    }&#xD;
    Roi[] rois = getRoisAsArray();&#xD;
    int n = rois.length;&#xD;
    Overlay overlay = imp.getOverlay();&#xD;
    if (overlay == null) {&#xD;
        overlay = newOverlay();&#xD;
    }&#xD;
    for (int i = 0; i &lt; n; i++) {&#xD;
        Roi roi = (Roi) rois[i].clone();&#xD;
        if (!Prefs.showAllSliceOnly) {&#xD;
            roi.setPosition(0);&#xD;
        }&#xD;
        if (roi.getStrokeWidth() == 1) {&#xD;
            roi.setStrokeWidth(0);&#xD;
        }&#xD;
        overlay.add(roi);&#xD;
    }&#xD;
    imp.setOverlay(overlay);&#xD;
    if (imp.getCanvas() != null) {&#xD;
        setOverlay(imp, null);&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MD99oRUTEemIe6OhVnSywA" name="mousePressed" specification="_MD9WkBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    int x = e.getX(), y = e.getY();&#xD;
    if (e.isPopupTrigger() || e.isMetaDown()) {&#xD;
        pm.show(e.getComponent(), x, y);&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MECPEBUTEemIe6OhVnSywA" name="mouseWheelMoved" specification="_MEBA8BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    synchronized (this) {&#xD;
        int index = list.getSelectedIndex();&#xD;
        int rot = event.getWheelRotation();&#xD;
        if (rot &lt; -1) {&#xD;
            rot = -1;&#xD;
        }&#xD;
        if (rot > 1) {&#xD;
            rot = 1;&#xD;
        }&#xD;
        index += rot;&#xD;
        if (index &lt; 0) {&#xD;
            index = 0;&#xD;
        }&#xD;
        if (index >= getCount()) {&#xD;
            index = getCount();&#xD;
        }&#xD;
        //IJ.log(index+&quot;  &quot;+rot);&#xD;
        select(index);&#xD;
        if (IJ.isWindows()) {&#xD;
            list.requestFocusInWindow();&#xD;
        }&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MEC2IxUTEemIe6OhVnSywA" name="setSelectedIndexes" specification="_MECPERUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    int count = getCount();&#xD;
    if (count == 0) {&#xD;
        return;&#xD;
    }&#xD;
    for (int i = 0; i &lt; indexes.length; i++) {&#xD;
        if (indexes[i] &lt; 0) {&#xD;
            indexes[i] = 0;&#xD;
        }&#xD;
        if (indexes[i] >= count) {&#xD;
            indexes[i] = count - 1;&#xD;
        }&#xD;
    }&#xD;
    selectedIndexes = indexes;&#xD;
    list.setSelectedIndices(indexes);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MEDdNBUTEemIe6OhVnSywA" name="getSelectedIndexes" specification="_MEDdMBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    if (selectedIndexes != null) {&#xD;
        int[] indexes = selectedIndexes;&#xD;
        selectedIndexes = null;&#xD;
        return indexes;&#xD;
    } else {&#xD;
        return list.getSelectedIndices();&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MEF5cBUTEemIe6OhVnSywA" name="newOverlay" specification="_MEEEQBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    Overlay overlay = OverlayLabels.createOverlay();&#xD;
    overlay.drawLabels(labelsCheckbox.getState());&#xD;
    if (overlay.getLabelFont() == null &amp;&amp; overlay.getLabelColor() == null) {&#xD;
        overlay.setLabelColor(Color.white);&#xD;
        overlay.drawBackgrounds(true);&#xD;
    }&#xD;
    overlay.drawNames(Prefs.useNamesAsLabels);&#xD;
    return overlay;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MEHHkBUTEemIe6OhVnSywA" name="removeOverlay" specification="_MEGggBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    if (imp != null &amp;&amp; imp.getCanvas() != null) {&#xD;
        setOverlay(imp, null);&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MEIVsRUTEemIe6OhVnSywA" name="setOverlay" specification="_MEHHkRUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    if (imp == null) {&#xD;
        return;&#xD;
    }&#xD;
    ImageCanvas ic = imp.getCanvas();&#xD;
    if (ic == null) {&#xD;
        imp.setOverlay(overlay);&#xD;
        return;&#xD;
    }&#xD;
    ic.setShowAllList(overlay);&#xD;
    imp.draw();&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MEI8whUTEemIe6OhVnSywA" name="record" specification="_MEI8wBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    return Recorder.record &amp;&amp; !IJ.isMacro();&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MEJj0hUTEemIe6OhVnSywA" name="mouseReleased" specification="_MEJj0BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MEKx8RUTEemIe6OhVnSywA" name="mouseClicked" specification="_MEKK4BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MELZARUTEemIe6OhVnSywA" name="mouseEntered" specification="_MEKx8hUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MEMAEhUTEemIe6OhVnSywA" name="mouseExited" specification="_MEMAEBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MEN1QBUTEemIe6OhVnSywA" name="valueChanged" specification="_MEMnIBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    if (e.getValueIsAdjusting()) {&#xD;
        return;&#xD;
    }&#xD;
    if (getCount() == 0) {&#xD;
        if (record()) {&#xD;
            Recorder.record(&quot;roiManager&quot;, &quot;Deselect&quot;);&#xD;
        }&#xD;
        return;&#xD;
    }&#xD;
    int[] selected = list.getSelectedIndices();&#xD;
    if (selected.length == 0) {&#xD;
        return;&#xD;
    }&#xD;
    if (WindowManager.getCurrentImage() != null) {&#xD;
        if (selected.length == 1) {&#xD;
            restore(getImage(), selected[0], true);&#xD;
        }&#xD;
        if (record()) {&#xD;
            String arg = Arrays.toString(selected);&#xD;
            if (!arg.startsWith(&quot;[&quot;) || !arg.endsWith(&quot;]&quot;)) {&#xD;
                return;&#xD;
            }&#xD;
            arg = arg.substring(1, arg.length() - 1);&#xD;
            arg = arg.replace(&quot; &quot;, &quot;&quot;);&#xD;
            if (Recorder.scriptMode()) {&#xD;
                if (selected.length == 1) {&#xD;
                    Recorder.recordCall(&quot;rm.select(&quot; + arg + &quot;);&quot;);&#xD;
                } else {&#xD;
                    Recorder.recordCall(&quot;rm.setSelectedIndexes([&quot; + arg + &quot;]);&quot;);&#xD;
                }&#xD;
            } else {&#xD;
                if (selected.length == 1) {&#xD;
                    Recorder.recordString(&quot;roiManager(\&quot;Select\&quot;, &quot; + arg + &quot;);\n&quot;);&#xD;
                } else {&#xD;
                    Recorder.recordString(&quot;roiManager(\&quot;Select\&quot;, newArray(&quot; + arg + &quot;));\n&quot;);&#xD;
                }&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MEQRgBUTEemIe6OhVnSywA" name="windowActivated" specification="_MEPDYBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    super.windowActivated(e);&#xD;
    ImagePlus imp = WindowManager.getCurrentImage();&#xD;
    if (imp != null) {&#xD;
        if (imageID != 0 &amp;&amp; imp.getID() != imageID) {&#xD;
            showAll(SHOW_NONE);&#xD;
            showAllCheckbox.setState(false);&#xD;
        }&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MAvDcRUTEemIe6OhVnSywA" name="NormaliseManager" visibility="public" method="_MAw4oRUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MAxfsBUTEemIe6OhVnSywA" name="NormaliseManager" visibility="public" method="_MAzU4RUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MAzU4BUTEemIe6OhVnSywA" name="hideWindow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MAz78BUTEemIe6OhVnSywA" name="showWindow" visibility="private" method="_MAz78RUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MAz78hUTEemIe6OhVnSywA" name="addButton" visibility="private" method="_MA0jARUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MA0jABUTEemIe6OhVnSywA" name="label"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MA0jAhUTEemIe6OhVnSywA" name="addPopupMenu" visibility="private" method="_MA1KEBUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MA1KERUTEemIe6OhVnSywA" name="addPopupItem" visibility="private" method="_MA1xIRUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MA1xIBUTEemIe6OhVnSywA" name="s"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MA4NYRUTEemIe6OhVnSywA" name="actionPerformed" visibility="public" method="_MA40cRUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MA40cBUTEemIe6OhVnSywA" name="e" type="_MA1xIhUTEemIe6OhVnSywA"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MA40chUTEemIe6OhVnSywA" name="interpolateRois" visibility="private" method="_MA40cxUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MA6poRUTEemIe6OhVnSywA" name="itemStateChanged" visibility="public" method="_MA7QsRUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MA7QsBUTEemIe6OhVnSywA" name="e" type="_MA5bgBUTEemIe6OhVnSywA"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MA7QshUTEemIe6OhVnSywA" name="add" visibility="private" method="_MA73whUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MA73wBUTEemIe6OhVnSywA" name="shiftKeyDown">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MA73wRUTEemIe6OhVnSywA" name="altKeyDown">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MA9s8RUTEemIe6OhVnSywA" name="addRoi" visibility="public" method="_MA-UARUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MA-UABUTEemIe6OhVnSywA" name="roi" type="_MA8e0BUTEemIe6OhVnSywA"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MA-UAhUTEemIe6OhVnSywA" name="addRoi" visibility="private" method="_MA-7EhUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MA-7EBUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MA-7ERUTEemIe6OhVnSywA" name="promptForName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MA_iIBUTEemIe6OhVnSywA" name="addRoi" visibility="private" method="_MBBXUBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MA_iIRUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MBAJMBUTEemIe6OhVnSywA" name="roi" type="_MA8e0BUTEemIe6OhVnSywA"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MBAJMRUTEemIe6OhVnSywA" name="promptForName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MBAwQBUTEemIe6OhVnSywA" name="color" type="_MAqyABUTEemIe6OhVnSywA"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MBAwQRUTEemIe6OhVnSywA" name="lineWidth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MBBXURUTEemIe6OhVnSywA" name="recordAdd" visibility="private" method="_MBClcRUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MBB-YBUTEemIe6OhVnSywA" name="color" type="_MAqyABUTEemIe6OhVnSywA"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MBClcBUTEemIe6OhVnSywA" name="lineWidth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MBDMgBUTEemIe6OhVnSywA" name="getHex" visibility="private" method="_MBDMgxUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MBDMgRUTEemIe6OhVnSywA" direction="return"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MBDMghUTEemIe6OhVnSywA" name="color" type="_MAqyABUTEemIe6OhVnSywA"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MBGP0BUTEemIe6OhVnSywA" name="add" visibility="public" method="_MBJ6MBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MBG24BUTEemIe6OhVnSywA" name="imp" type="_MBDzkBUTEemIe6OhVnSywA"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MBIFABUTEemIe6OhVnSywA" name="roi" type="_MA8e0BUTEemIe6OhVnSywA"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MBIsEBUTEemIe6OhVnSywA" name="n">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MBKhQBUTEemIe6OhVnSywA" name="isStandardName" visibility="private" method="_MBM9gBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MBLIUBUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MBMWcBUTEemIe6OhVnSywA" name="name"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MBOysBUTEemIe6OhVnSywA" name="getLabel" visibility="private" method="_MBSdEBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MBPZwBUTEemIe6OhVnSywA" direction="return"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MBQA0BUTEemIe6OhVnSywA" name="imp" type="_MBDzkBUTEemIe6OhVnSywA"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MBRO8BUTEemIe6OhVnSywA" name="roi" type="_MA8e0BUTEemIe6OhVnSywA"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MBR2ABUTEemIe6OhVnSywA" name="n">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MBTrMBUTEemIe6OhVnSywA" name="addAndDraw" visibility="private" method="_MBVgYBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MBUSQBUTEemIe6OhVnSywA" name="altKeyDown">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MBWugBUTEemIe6OhVnSywA" name="delete" visibility="private" method="_MBYjsBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MBXVkBUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MBX8oBUTEemIe6OhVnSywA" name="replacing">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MBZKwBUTEemIe6OhVnSywA" name="update" visibility="private" method="_MBaY4BUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MBZKwRUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MBZKwhUTEemIe6OhVnSywA" name="clone">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MBcOEBUTEemIe6OhVnSywA" name="rename" visibility="private" method="_MBfRYBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MBc1IBUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MBeDQBUTEemIe6OhVnSywA" name="name2"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MBgfgBUTEemIe6OhVnSywA" name="promptForName" visibility="private" method="_MBi7wBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MBhtoBUTEemIe6OhVnSywA" direction="return"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MBiUsBUTEemIe6OhVnSywA" name="name"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MBkJ4BUTEemIe6OhVnSywA" name="restore" visibility="private" method="_MBpCYBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MBlYABUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MBl_EBUTEemIe6OhVnSywA" name="imp" type="_MBDzkBUTEemIe6OhVnSywA"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MBnNMBUTEemIe6OhVnSywA" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MBobUBUTEemIe6OhVnSywA" name="setSlice">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MBq3kBUTEemIe6OhVnSywA" name="restoreWithoutUpdate" visibility="private" method="_MBsFsBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MBq3kRUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MBreoBUTEemIe6OhVnSywA" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MBsswBUTEemIe6OhVnSywA" name="getSliceNumber" visibility="public" method="_MBuh8BUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MBtT0BUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MBt64BUTEemIe6OhVnSywA" name="label"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MBvwEBUTEemIe6OhVnSywA" name="getSliceNumber" visibility="private" method="_MBzacBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MBwXIBUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MBw-MBUTEemIe6OhVnSywA" name="roi" type="_MA8e0BUTEemIe6OhVnSywA"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MByMUBUTEemIe6OhVnSywA" name="label"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MB1PoBUTEemIe6OhVnSywA" name="open" visibility="private" method="_MB2dwBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MB12sBUTEemIe6OhVnSywA" name="path"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MB3r4BUTEemIe6OhVnSywA" name="openZip" visibility="private" method="_MB5hEBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MB4S8BUTEemIe6OhVnSywA" name="path"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MB6vMBUTEemIe6OhVnSywA" name="getUniqueName" visibility="private" method="_MB9ygBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MB7WQBUTEemIe6OhVnSywA" direction="return"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MB8kYBUTEemIe6OhVnSywA" name="name"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MB_nsBUTEemIe6OhVnSywA" name="save" visibility="private" method="_MCBc4BUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MCAOwBUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MCCrABUTEemIe6OhVnSywA" name="saveMultiple" visibility="private" method="_MCHjgBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MCDSEBUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MCD5IBUTEemIe6OhVnSywA" name="indexes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MCEgMBUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MCFHQBUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MCGVYBUTEemIe6OhVnSywA" name="path"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MCIxoBUTEemIe6OhVnSywA" name="listRois" visibility="private" method="_MCJYsBUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MCJYsRUTEemIe6OhVnSywA" name="measure" visibility="private" method="_MCMcABUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MCJ_wBUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MCLN4BUTEemIe6OhVnSywA" name="mode">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MCORMBUTEemIe6OhVnSywA" name="multiMeasure" visibility="private" method="_MCQtcBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MCO4QBUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MCPfUBUTEemIe6OhVnSywA" name="cmd"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MCRUgBUTEemIe6OhVnSywA" name="getColumnCount" visibility="private" method="_MCTwwBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MCR7kBUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MCSioBUTEemIe6OhVnSywA" name="imp" type="_MBDzkBUTEemIe6OhVnSywA"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MCTJsBUTEemIe6OhVnSywA" name="measurements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MCU-4BUTEemIe6OhVnSywA" name="multiPlot" visibility="private" method="_MCVl8BUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MCW0EBUTEemIe6OhVnSywA" name="drawOrFill" visibility="private" method="_MCYpQBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MCXbIBUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MCYCMBUTEemIe6OhVnSywA" name="mode">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MCaecBUTEemIe6OhVnSywA" name="setProperties" visibility="private" method="_MCeI0BUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MCbFgBUTEemIe6OhVnSywA" name="color" type="_MAqyABUTEemIe6OhVnSywA"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MCcToBUTEemIe6OhVnSywA" name="lineWidth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MCdhwBUTEemIe6OhVnSywA" name="fillColor" type="_MAqyABUTEemIe6OhVnSywA"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MCfW8BUTEemIe6OhVnSywA" name="flatten" visibility="private" method="_MCfW8RUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MCglEBUTEemIe6OhVnSywA" name="getDrawLabels" visibility="public" method="_MChMIRUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MChMIBUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MCiaQBUTEemIe6OhVnSywA" name="combine" visibility="private" method="_MCjBUBUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MCk2gBUTEemIe6OhVnSywA" name="combineRois" visibility="private" method="_MCn50BUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MCldkBUTEemIe6OhVnSywA" name="imp" type="_MBDzkBUTEemIe6OhVnSywA"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MCmEoBUTEemIe6OhVnSywA" name="indexes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MCmrsBUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MCnSwBUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MCrkMBUTEemIe6OhVnSywA" name="convertLineToPolygon" visibility="private" method="_MCv1oBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MCsLQBUTEemIe6OhVnSywA" type="_MA8e0BUTEemIe6OhVnSywA" direction="return"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MCuAcBUTEemIe6OhVnSywA" name="roi" type="_MA8e0BUTEemIe6OhVnSywA"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MCvOkBUTEemIe6OhVnSywA" name="ip" type="_MCpH8BUTEemIe6OhVnSywA"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MCxq0BUTEemIe6OhVnSywA" name="combinePoints" visibility="private" method="_MC1VMBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MCy48BUTEemIe6OhVnSywA" name="imp" type="_MBDzkBUTEemIe6OhVnSywA"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MCzgABUTEemIe6OhVnSywA" name="indexes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MC0HEBUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MC0uIBUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MC2jUBUTEemIe6OhVnSywA" name="and" visibility="private" method="_MC3KYBUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MC4YgBUTEemIe6OhVnSywA" name="xor" visibility="private" method="_MC4_kBUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MC60wBUTEemIe6OhVnSywA" name="addParticles" visibility="private" method="_MC7b0BUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MC8p8BUTEemIe6OhVnSywA" name="sort" visibility="private" method="_MC9RABUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MC_GMBUTEemIe6OhVnSywA" name="specify" visibility="private" method="_MC_tQBUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MDHpEBUTEemIe6OhVnSywA" name="removePositions" visibility="private" method="_MDJeQBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MDIQIBUTEemIe6OhVnSywA" name="position">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MDKsYBUTEemIe6OhVnSywA" name="help" visibility="private" method="_MDKsYRUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MDL6gBUTEemIe6OhVnSywA" name="labels" visibility="private" method="_MDMhkBUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MDNvsBUTEemIe6OhVnSywA" name="options" visibility="private" method="_MDOWwBUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MDTPQBUTEemIe6OhVnSywA" name="makeButtonPanel" visibility="private" method="_MDVrgRUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MDT2UBUTEemIe6OhVnSywA" type="_MAWB4BUTEemIe6OhVnSywA" direction="return"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MDVrgBUTEemIe6OhVnSywA" name="gd" type="_MDQL8BUTEemIe6OhVnSywA"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MDWSkBUTEemIe6OhVnSywA" name="setShowAllColor" visibility="private" method="_MDWSkRUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MDWSkhUTEemIe6OhVnSywA" name="split" visibility="private" method="_MDW5oBUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MDW5oRUTEemIe6OhVnSywA" name="delete_without_asking" visibility="public" method="_MDYHwBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MDXgsBUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MDXgsRUTEemIe6OhVnSywA" name="replacing">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MDYHwRUTEemIe6OhVnSywA" name="showAll" visibility="public" method="_MDYu0RUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MDYu0BUTEemIe6OhVnSywA" name="mode">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MDYu0hUTEemIe6OhVnSywA" name="updateShowAll" visibility="private" method="_MDZV4BUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MDZV4RUTEemIe6OhVnSywA" name="getAllIndexes" visibility="private" method="_MDZ88hUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MDZV4hUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MDZ88BUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MDZ88RUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MDZ88xUTEemIe6OhVnSywA" name="getImage" visibility="private" method="_MDakABUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MDZ89BUTEemIe6OhVnSywA" type="_MBDzkBUTEemIe6OhVnSywA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MDakARUTEemIe6OhVnSywA" name="error" visibility="private" method="_MDbLERUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MDakAhUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MDbLEBUTEemIe6OhVnSywA" name="msg"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MDdAQRUTEemIe6OhVnSywA" name="processWindowEvent" visibility="public" method="_MDdnURUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MDdnUBUTEemIe6OhVnSywA" name="e" type="_MDbLEhUTEemIe6OhVnSywA"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MDeOYBUTEemIe6OhVnSywA" name="getInstance" visibility="public" isStatic="true" method="_MDeOYhUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MDeOYRUTEemIe6OhVnSywA" type="_L_mbABUTEemIe6OhVnSywA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MDe1cBUTEemIe6OhVnSywA" name="getInstance2" visibility="public" isStatic="true" method="_MDe1chUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MDe1cRUTEemIe6OhVnSywA" type="_L_mbABUTEemIe6OhVnSywA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MDfcgBUTEemIe6OhVnSywA" name="getROIs" visibility="public" method="_MDgDkBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MDfcgRUTEemIe6OhVnSywA" type="_MAekwBUTEemIe6OhVnSywA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MDgqoBUTEemIe6OhVnSywA" name="getList" visibility="public" method="_MDk8ERUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MDk8EBUTEemIe6OhVnSywA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MDk8EhUTEemIe6OhVnSywA" name="getCount" visibility="public" method="_MDljIRUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MDljIBUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MDljIhUTEemIe6OhVnSywA" name="getRoiIndex" visibility="public" method="_MDmKMhUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MDmKMBUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MDmKMRUTEemIe6OhVnSywA" name="roi" type="_MA8e0BUTEemIe6OhVnSywA"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MDmxQBUTEemIe6OhVnSywA" name="getSelectedIndex" visibility="public" method="_MDmxQhUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MDmxQRUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MDmxQxUTEemIe6OhVnSywA" name="getRoi" visibility="public" method="_MDn_YRUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MDnYUBUTEemIe6OhVnSywA" type="_MA8e0BUTEemIe6OhVnSywA" direction="return"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MDn_YBUTEemIe6OhVnSywA" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MDomcBUTEemIe6OhVnSywA" name="getRoisAsArray" visibility="public" method="_MDpNgBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MDomcRUTEemIe6OhVnSywA" type="_MA8e0BUTEemIe6OhVnSywA" direction="return">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MDomchUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MDomcxUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MDpNgRUTEemIe6OhVnSywA" name="getSelectedRoisAsArray" visibility="public" method="_MDp0khUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MDpNghUTEemIe6OhVnSywA" type="_MA8e0BUTEemIe6OhVnSywA" direction="return">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MDp0kBUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MDp0kRUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MDp0kxUTEemIe6OhVnSywA" name="getName" visibility="public" method="_MDqbohUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MDqboBUTEemIe6OhVnSywA" direction="return"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MDqboRUTEemIe6OhVnSywA" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MDrCsBUTEemIe6OhVnSywA" name="getName" visibility="public" isStatic="true" method="_MDrpwRUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MDrCsRUTEemIe6OhVnSywA" direction="return"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MDrpwBUTEemIe6OhVnSywA" name="index"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MDsQ0BUTEemIe6OhVnSywA" name="runCommand" visibility="public" method="_MDutEBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MDs34BUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MDuGABUTEemIe6OhVnSywA" name="cmd"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MDvUIBUTEemIe6OhVnSywA" name="runCommand" visibility="public" method="_MDwiQBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MDvUIRUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MDv7MBUTEemIe6OhVnSywA" name="cmd"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MDv7MRUTEemIe6OhVnSywA" name="name"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MDwiQRUTEemIe6OhVnSywA" name="save" visibility="private" method="_MDxwYBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MDwiQhUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MDxJUBUTEemIe6OhVnSywA" name="name"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MDxJURUTEemIe6OhVnSywA" name="saveSelected">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MDxwYRUTEemIe6OhVnSywA" name="runCommand" visibility="public" method="_MDy-ghUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MDyXcBUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MDyXcRUTEemIe6OhVnSywA" name="cmd"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MDy-gBUTEemIe6OhVnSywA" name="hexColor"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MDy-gRUTEemIe6OhVnSywA" name="lineWidth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MDzlkBUTEemIe6OhVnSywA" name="setRoiPosition" visibility="private" method="_MD0MoRUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MDzlkRUTEemIe6OhVnSywA" name="imp" type="_MBDzkBUTEemIe6OhVnSywA"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MD0MoBUTEemIe6OhVnSywA" name="roi" type="_MA8e0BUTEemIe6OhVnSywA"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MD0MohUTEemIe6OhVnSywA" name="select" visibility="public" method="_MD0zsRUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MD0zsBUTEemIe6OhVnSywA" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MD1awBUTEemIe6OhVnSywA" name="select" visibility="public" method="_MD2o4BUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MD2B0BUTEemIe6OhVnSywA" name="imp" type="_MBDzkBUTEemIe6OhVnSywA"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MD2B0RUTEemIe6OhVnSywA" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MD2o4RUTEemIe6OhVnSywA" name="select" visibility="public" method="_MD33ARUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MD3P8BUTEemIe6OhVnSywA" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MD3P8RUTEemIe6OhVnSywA" name="shiftKeyDown">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MD33ABUTEemIe6OhVnSywA" name="altKeyDown">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MD4eEBUTEemIe6OhVnSywA" name="setEditMode" visibility="public" method="_MD5FIRUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MD4eERUTEemIe6OhVnSywA" name="imp" type="_MBDzkBUTEemIe6OhVnSywA"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MD5FIBUTEemIe6OhVnSywA" name="editMode">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MD5sMBUTEemIe6OhVnSywA" name="close" visibility="public" method="_MD5sMRUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MD6TQBUTEemIe6OhVnSywA" name="moveRoisToOverlay" visibility="public" method="_MD66UBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MD6TQRUTEemIe6OhVnSywA" name="imp" type="_MBDzkBUTEemIe6OhVnSywA"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MD9WkBUTEemIe6OhVnSywA" name="mousePressed" visibility="public" method="_MD99oRUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MD99oBUTEemIe6OhVnSywA" name="e" type="_MD66URUTEemIe6OhVnSywA"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MEBA8BUTEemIe6OhVnSywA" name="mouseWheelMoved" visibility="public" method="_MECPEBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MEBoABUTEemIe6OhVnSywA" name="event" type="_MD-ksBUTEemIe6OhVnSywA"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MECPERUTEemIe6OhVnSywA" name="setSelectedIndexes" visibility="public" method="_MEC2IxUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MEC2IBUTEemIe6OhVnSywA" name="indexes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MEC2IRUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MEC2IhUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MEDdMBUTEemIe6OhVnSywA" name="getSelectedIndexes" visibility="public" method="_MEDdNBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MEDdMRUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MEDdMhUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MEDdMxUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MEEEQBUTEemIe6OhVnSywA" name="newOverlay" visibility="private" method="_MEF5cBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MEFSYRUTEemIe6OhVnSywA" type="_MEEEQRUTEemIe6OhVnSywA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MEGggBUTEemIe6OhVnSywA" name="removeOverlay" visibility="private" method="_MEHHkBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MEGggRUTEemIe6OhVnSywA" name="imp" type="_MBDzkBUTEemIe6OhVnSywA"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MEHHkRUTEemIe6OhVnSywA" name="setOverlay" visibility="private" method="_MEIVsRUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MEHuoBUTEemIe6OhVnSywA" name="imp" type="_MBDzkBUTEemIe6OhVnSywA"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MEIVsBUTEemIe6OhVnSywA" name="overlay" type="_MEEEQRUTEemIe6OhVnSywA"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MEI8wBUTEemIe6OhVnSywA" name="record" visibility="private" method="_MEI8whUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MEI8wRUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MEJj0BUTEemIe6OhVnSywA" name="mouseReleased" visibility="public" method="_MEJj0hUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MEJj0RUTEemIe6OhVnSywA" name="e" type="_MD66URUTEemIe6OhVnSywA"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MEKK4BUTEemIe6OhVnSywA" name="mouseClicked" visibility="public" method="_MEKx8RUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MEKx8BUTEemIe6OhVnSywA" name="e" type="_MD66URUTEemIe6OhVnSywA"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MEKx8hUTEemIe6OhVnSywA" name="mouseEntered" visibility="public" method="_MELZARUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MELZABUTEemIe6OhVnSywA" name="e" type="_MD66URUTEemIe6OhVnSywA"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MEMAEBUTEemIe6OhVnSywA" name="mouseExited" visibility="public" method="_MEMAEhUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MEMAERUTEemIe6OhVnSywA" name="e" type="_MD66URUTEemIe6OhVnSywA"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MEMnIBUTEemIe6OhVnSywA" name="valueChanged" visibility="public" method="_MEN1QBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MEMnIRUTEemIe6OhVnSywA" name="e"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MEPDYBUTEemIe6OhVnSywA" name="windowActivated" visibility="public" method="_MEQRgBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MEPqcBUTEemIe6OhVnSywA" name="e" type="_MDbLEhUTEemIe6OhVnSywA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_L_nCEBUTEemIe6OhVnSywA" name="PlugInFrame"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_L_peUBUTEemIe6OhVnSywA" name="ActionListener"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_L_r6kBUTEemIe6OhVnSywA" name="ItemListener"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_L_vk8BUTEemIe6OhVnSywA" name="MouseListener"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_L_yBMBUTEemIe6OhVnSywA" name="MouseWheelListener"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_MAWB4BUTEemIe6OhVnSywA" name="Panel"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_MAZFMBUTEemIe6OhVnSywA" name="Frame"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_MAekwBUTEemIe6OhVnSywA" name="Hashtable"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_MAhoERUTEemIe6OhVnSywA" name="PopupMenu"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_MAjdQhUTEemIe6OhVnSywA" name="Button"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_MAmgkBUTEemIe6OhVnSywA" name="Checkbox"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_MAqyABUTEemIe6OhVnSywA" name="Color"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_MAtORBUTEemIe6OhVnSywA" name="ResultsTable"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_MA1xIhUTEemIe6OhVnSywA" name="ActionEvent"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_MA5bgBUTEemIe6OhVnSywA" name="ItemEvent"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_MA8e0BUTEemIe6OhVnSywA" name="Roi"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_MBDzkBUTEemIe6OhVnSywA" name="ImagePlus"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_MCpH8BUTEemIe6OhVnSywA" name="ImageProcessor"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_MDQL8BUTEemIe6OhVnSywA" name="GenericDialog"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_MDbLEhUTEemIe6OhVnSywA" name="WindowEvent"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_MD66URUTEemIe6OhVnSywA" name="MouseEvent"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_MD-ksBUTEemIe6OhVnSywA" name="MouseWheelEvent"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_MEEEQRUTEemIe6OhVnSywA" name="Overlay"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_MEVKABUTEemIe6OhVnSywA" name="BandSegmentation" visibility="public">
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MEe7ABUTEemIe6OhVnSywA" name="imp" visibility="private" type="_MBDzkBUTEemIe6OhVnSywA" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MEhXQBUTEemIe6OhVnSywA" name="bm" visibility="private" type="_MEgJIBUTEemIe6OhVnSywA" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MEilYBUTEemIe6OhVnSywA" name="darkbackground" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MEkakBUTEemIe6OhVnSywA" name="BLUE" visibility="public" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MElosBUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>0</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MEmPwBUTEemIe6OhVnSywA" name="RED" visibility="public" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MEoE8BUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>1</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MEpTEBUTEemIe6OhVnSywA" name="GREEN" visibility="public" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MEqhMBUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>2</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MEqhMRUTEemIe6OhVnSywA" name="MAGENTA" visibility="public" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MEqhMhUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>3</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MErIQBUTEemIe6OhVnSywA" name="CYAN" visibility="public" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MErIQRUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>4</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MErIQhUTEemIe6OhVnSywA" name="YELLOW" visibility="public" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MErIQxUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>5</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MErIRBUTEemIe6OhVnSywA" name="ORANGE" visibility="public" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MErIRRUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>6</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MErvUBUTEemIe6OhVnSywA" name="FLAGS" visibility="private" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MEtkgBUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>DOES_ALL | SUPPORTS_MASKING | KEEP_PREVIEW | FINAL_PROCESSING</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MEuyoBUTEemIe6OhVnSywA" name="lanes" visibility="private" type="_MA8e0BUTEemIe6OhVnSywA" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MEvZsBUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MEwAwBUTEemIe6OhVnSywA" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MEwAwRUTEemIe6OhVnSywA" name="nPasses" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MEwn0BUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>1</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MEydABUTEemIe6OhVnSywA" name="pfr" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MEydARUTEemIe6OhVnSywA" name="tolerance" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MEzEEBUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>150</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MEzEERUTEemIe6OhVnSywA" name="finallanes" visibility="private" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MEzEEhUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MEzEExUTEemIe6OhVnSywA" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_ME0SMBUTEemIe6OhVnSywA" name="m" visibility="private" type="_MEzrIBUTEemIe6OhVnSywA" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_ME2ucRUTEemIe6OhVnSywA" name="c" visibility="private" isUnique="false">
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_ME3VgBUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>Color.BLUE</body>
                </defaultValue>
              </ownedAttribute>
              <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_MEdF0BUTEemIe6OhVnSywA" name="BandSegmentation implements DialogListener" client="_MEVKABUTEemIe6OhVnSywA" supplier="_MEaCgBUTEemIe6OhVnSywA" contract="_MEaCgBUTEemIe6OhVnSywA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MFAfcBUTEemIe6OhVnSywA" name="BandSegmentation" specification="_ME3VgRUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.imp = imp;&#xD;
    this.bm = bm;&#xD;
    this.lanes = l;&#xD;
    darkbackground = bg;&#xD;
    this.finallanes = m.finallanes;&#xD;
    this.m = m;&#xD;
    c = bm.getColour();&#xD;
//run(imp.getProcessor());&#xD;
//showDialog(imp, null, pfr);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MFH0MBUTEemIe6OhVnSywA" name="showDialog" specification="_MFC7sBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    GenericDialog gd = new GenericDialog(command);&#xD;
    gd.addMessage(&quot;Fix the tolerance to find bands&quot;);&#xD;
    gd.addSlider(&quot;Tolerance&quot;, 25, 255, 150);&#xD;
    String[] colours = { &quot;blue&quot;, &quot;red&quot;, &quot;green&quot;, &quot;magenta&quot;, &quot;cyan&quot;, &quot;yellow&quot;, &quot;orange&quot; };&#xD;
    gd.addChoice(&quot;Colour&quot;, colours, &quot;blue&quot;);&#xD;
    this.imp = imp;&#xD;
    this.pfr = pfr;&#xD;
    gd.addPreviewCheckbox(pfr);&#xD;
    // &#xD;
    gd.addDialogListener(this);&#xD;
    ((Checkbox) gd.getCheckboxes().elementAt(0)).setState(true);&#xD;
    // input by the user (or macro) happens here&#xD;
    gd.showDialog();&#xD;
    if (gd.wasCanceled()) {&#xD;
        bm.delete_without_asking(true);&#xD;
        ImagePlus imp2 = WindowManager.getCurrentImage();&#xD;
        removeOverlay(imp2);&#xD;
        return DONE;&#xD;
    }&#xD;
    if (gd.wasOKed()) {&#xD;
        bm.setColour(c);&#xD;
    }&#xD;
    IJ.register(this.getClass());&#xD;
    return IJ.setupDialog(imp, FLAGS);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MFOh4BUTEemIe6OhVnSywA" name="dialogItemChanged" specification="_MFLekBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    Vector sliders = gd.getSliders();&#xD;
    tolerance = ((Scrollbar) sliders.elementAt(0)).getValue();&#xD;
    int colour = gd.getNextChoiceIndex();&#xD;
    switch(colour) {&#xD;
        case BLUE:&#xD;
            c = Color.BLUE;&#xD;
            break;&#xD;
        case RED:&#xD;
            c = Color.RED;&#xD;
            break;&#xD;
        case GREEN:&#xD;
            c = Color.GREEN;&#xD;
            break;&#xD;
        case MAGENTA:&#xD;
            c = Color.MAGENTA;&#xD;
            break;&#xD;
        case CYAN:&#xD;
            c = Color.CYAN;&#xD;
            break;&#xD;
        case YELLOW:&#xD;
            c = Color.YELLOW;&#xD;
            break;&#xD;
        case ORANGE:&#xD;
            c = Color.ORANGE;&#xD;
            break;&#xD;
        default:&#xD;
            c = Color.BLUE;&#xD;
            break;&#xD;
    }&#xD;
    return true;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MFUBcBUTEemIe6OhVnSywA" name="setup" specification="_MFQXEBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.imp = imp;&#xD;
    return DOES_8G;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MFXEwBUTEemIe6OhVnSywA" name="run" specification="_MFVPkBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    Prefs.verticalProfile = true;&#xD;
    bm.delete_without_asking(true);&#xD;
    bm.restart_bands();&#xD;
    for (int i = 0; i &lt; m.finallanes.length; i++) {&#xD;
        Roi r0 = m.finallanes[i].getRoi();&#xD;
        int x0 = r0.getBounds().x + r0.getBounds().width / 2;&#xD;
        int y0 = r0.getBounds().y;&#xD;
        int x1 = r0.getBounds().x + r0.getBounds().width / 2;&#xD;
        int y1 = r0.getBounds().y + r0.getBounds().height;&#xD;
        Line l0 = new Line(x0, y0, x1, y1);&#xD;
        l0.setWidth(15);&#xD;
        imp.setRoi(l0);&#xD;
        // Finding the peaks of the profile&#xD;
        if ((!darkbackground &amp;&amp; !imp.isInvertedLut()) || imp.isInvertedLut()) {&#xD;
            ip.invert();&#xD;
        }&#xD;
        //ProfilePlot pp = new ProfilePlot(imp);&#xD;
        double[] profile = finallanes[i].getProfile();&#xD;
        if ((!darkbackground &amp;&amp; !imp.isInvertedLut()) || imp.isInvertedLut()) {&#xD;
            ip.invert();&#xD;
        }&#xD;
        l0.setWidth(1);&#xD;
        int[] maxima = MaximumFinder.findMaxima(profile, 2, true);&#xD;
        int[] htt = higherthantolerance(maxima, profile, tolerance);&#xD;
        Arrays.sort(htt);&#xD;
        // Showing the lines&#xD;
        int r0x = r0.getBounds().x;&#xD;
        int r0y = r0.getBounds().y;&#xD;
        int w = r0.getBounds().width;&#xD;
        int[] positionsy = new int[htt.length];&#xD;
        for (int k = 0; k &lt; htt.length; k++) {&#xD;
            positionsy[k] = r0y + htt[k];&#xD;
        }&#xD;
        for (int j = 0; j &lt; htt.length; j++) {&#xD;
            /*Line line = new Line(r0x, r0y + htt[j], r0x + w, r0y + htt[j]);
                Line lineintersection = lineintersectionroi(r0,line);*/&#xD;
            Rectangle r = new Rectangle(r0x, r0y + htt[j], w, 2);&#xD;
            Roi r1 = rectangleintersectionroi(r0, r);&#xD;
            r1.setFillColor(c);&#xD;
            bm.add(imp, r1, j, i);&#xD;
        //bm.add(imp, line, j);&#xD;
        }&#xD;
    //m.finallanes[i].setProfile(profile);&#xD;
    //m.finallanes[i].setPositionbands(positionsy);&#xD;
    }&#xD;
    bm.showAll(0);&#xD;
//m.finallanes = finallanes;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MFgOsBUTEemIe6OhVnSywA" name="lineintersectionroi" specification="_MFbWMBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    Line line;&#xD;
    int[] xpointsl = l.getPoints().xpoints;&#xD;
    int[] ypointsl = l.getPoints().ypoints;&#xD;
    int len = xpointsl.length;&#xD;
    Boolean inside = false;&#xD;
    int x0 = xpointsl[0];&#xD;
    int y0 = ypointsl[0];&#xD;
    int x1 = xpointsl[len - 1];&#xD;
    int y1 = ypointsl[len - 1];&#xD;
    for (int i = 1; i &lt; len; i++) {&#xD;
        if (!inside) {&#xD;
            if (r.contains(xpointsl[i], ypointsl[i])) {&#xD;
                x0 = xpointsl[i];&#xD;
                y0 = ypointsl[i];&#xD;
                inside = true;&#xD;
            }&#xD;
        } else {&#xD;
            if (!r.contains(xpointsl[i], ypointsl[i])) {&#xD;
                x1 = xpointsl[i];&#xD;
                y1 = ypointsl[i];&#xD;
                line = new Line(x0, y0, x1, y1);&#xD;
                return line;&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    line = new Line(x0, y0, x1, y1);&#xD;
    return line;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MFpYoBUTEemIe6OhVnSywA" name="higherthantolerance" specification="_MFhc0BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    ArrayList&lt;Integer> res = new ArrayList&lt;Integer>();&#xD;
    for (int i = 0; i &lt; v.length; i++) {&#xD;
        if (p[v[i]] > tolerance) {&#xD;
            res.add(v[i]);&#xD;
        }&#xD;
    }&#xD;
    int[] ret = new int[res.size()];&#xD;
    for (int i = 0; i &lt; ret.length; i++) {&#xD;
        ret[i] = res.get(i);&#xD;
    }&#xD;
    return ret;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MFx7gBUTEemIe6OhVnSywA" name="movingaveragefilter" specification="_MFrN0BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    int lv = v.length;&#xD;
    double[] res = new double[lv];&#xD;
    // starting point &#xD;
    int sp;&#xD;
    // end point &#xD;
    int ep;&#xD;
    for (int i = 0; i &lt; lv; i++) {&#xD;
        sp = i - (avgpoints - 1) / 2;&#xD;
        if (sp &lt; 0) {&#xD;
            sp = 0;&#xD;
        }&#xD;
        ep = i + (avgpoints - 1) / 2;&#xD;
        if (ep >= lv) {&#xD;
            ep = lv - 1;&#xD;
        }&#xD;
        double partial_sum = 0;&#xD;
        for (int j = sp; j &lt;= ep; j++) {&#xD;
            partial_sum = partial_sum + v[j];&#xD;
        }&#xD;
        res[i] = partial_sum / (ep - sp + 1);&#xD;
    }&#xD;
    return res;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MF5QQBUTEemIe6OhVnSywA" name="higherthanvalue" specification="_MFzwsBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    if (from_end) {&#xD;
        int pos = 0;&#xD;
        for (int i = 0; i &lt; v.length; i++) {&#xD;
            if (value &lt; v[i]) {&#xD;
                return i;&#xD;
            }&#xD;
        }&#xD;
        return pos;&#xD;
    } else {&#xD;
        int pos = v.length - 1;&#xD;
        for (int i = v.length - 1; i >= 0; i--) {&#xD;
            if (value &lt; v[i]) {&#xD;
                return i;&#xD;
            }&#xD;
        }&#xD;
        return pos;&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MF86oBUTEemIe6OhVnSywA" name="setNPasses" specification="_MF7FcBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.nPasses = nPasses;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MF_98BUTEemIe6OhVnSywA" name="removeOverlay" specification="_MF-IwBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    if (imp != null &amp;&amp; imp.getCanvas() != null) {&#xD;
        setOverlay(imp, null);&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MGFdgBUTEemIe6OhVnSywA" name="setOverlay" specification="_MGCaMBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    if (imp == null) {&#xD;
        return;&#xD;
    }&#xD;
    ImageCanvas ic = imp.getCanvas();&#xD;
    if (ic == null) {&#xD;
        imp.setOverlay(overlay);&#xD;
        return;&#xD;
    }&#xD;
    ic.setShowAllList(overlay);&#xD;
    imp.draw();&#xD;
</body>
              </ownedBehavior>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_ME3VgRUTEemIe6OhVnSywA" name="BandSegmentation" visibility="public" method="_MFAfcBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_ME5xwBUTEemIe6OhVnSywA" name="imp" type="_MBDzkBUTEemIe6OhVnSywA"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_ME6_4BUTEemIe6OhVnSywA" name="bm" type="_MEgJIBUTEemIe6OhVnSywA"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_ME8OABUTEemIe6OhVnSywA" name="bg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_ME9cIBUTEemIe6OhVnSywA" name="l" type="_MA8e0BUTEemIe6OhVnSywA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ME-qQBUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ME_RUBUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_ME_4YBUTEemIe6OhVnSywA" name="m" type="_MEzrIBUTEemIe6OhVnSywA"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MFC7sBUTEemIe6OhVnSywA" name="showDialog" visibility="public" method="_MFH0MBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MFDiwBUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MFEw4BUTEemIe6OhVnSywA" name="imp" type="_MBDzkBUTEemIe6OhVnSywA"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MFF_ABUTEemIe6OhVnSywA" name="command"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MFHNIBUTEemIe6OhVnSywA" name="pfr"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MFLekBUTEemIe6OhVnSywA" name="dialogItemChanged" visibility="public" method="_MFOh4BUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MFMFoBUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MFMssBUTEemIe6OhVnSywA" name="gd" type="_MDQL8BUTEemIe6OhVnSywA"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MFN60BUTEemIe6OhVnSywA" name="e"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MFQXEBUTEemIe6OhVnSywA" name="setup" visibility="public" method="_MFUBcBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MFRlMBUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MFSMQBUTEemIe6OhVnSywA" name="arg"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MFTaYBUTEemIe6OhVnSywA" name="imp" type="_MBDzkBUTEemIe6OhVnSywA"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MFVPkBUTEemIe6OhVnSywA" name="run" visibility="public" method="_MFXEwBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MFWdsBUTEemIe6OhVnSywA" name="ip" type="_MCpH8BUTEemIe6OhVnSywA"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MFbWMBUTEemIe6OhVnSywA" name="lineintersectionroi" visibility="private" method="_MFgOsBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MFb9QBUTEemIe6OhVnSywA" type="_MFY58BUTEemIe6OhVnSywA" direction="return"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MFdycBUTEemIe6OhVnSywA" name="r" type="_MA8e0BUTEemIe6OhVnSywA"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MFfAkBUTEemIe6OhVnSywA" name="l" type="_MFY58BUTEemIe6OhVnSywA"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MFhc0BUTEemIe6OhVnSywA" name="higherthantolerance" visibility="private" method="_MFpYoBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MFiD4BUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MFiq8BUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MFjSABUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MFkgIBUTEemIe6OhVnSywA" name="v">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MFlHMBUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MFluQBUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MFmVUBUTEemIe6OhVnSywA" name="p">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MFnjcBUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MFoKgBUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MFoxkBUTEemIe6OhVnSywA" name="tolerance">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MFrN0BUTEemIe6OhVnSywA" name="movingaveragefilter" visibility="private" method="_MFx7gBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MFr04BUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MFtDABUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MFtqEBUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MFuRIBUTEemIe6OhVnSywA" name="v">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MFvfQBUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MFvfQRUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MFwtYBUTEemIe6OhVnSywA" name="avgpoints">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MFzwsBUTEemIe6OhVnSywA" name="higherthanvalue" visibility="private" method="_MF5QQBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MF0XwBUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MF1l4BUTEemIe6OhVnSywA" name="v">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MF2M8BUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MF20ABUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MF3bEBUTEemIe6OhVnSywA" name="value">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MF4pMBUTEemIe6OhVnSywA" name="from_end">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MF7FcBUTEemIe6OhVnSywA" name="setNPasses" visibility="public" method="_MF86oBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MF7sgBUTEemIe6OhVnSywA" name="nPasses">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MF-IwBUTEemIe6OhVnSywA" name="removeOverlay" visibility="private" method="_MF_98BUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MF_W4BUTEemIe6OhVnSywA" name="imp" type="_MBDzkBUTEemIe6OhVnSywA"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MGCaMBUTEemIe6OhVnSywA" name="setOverlay" visibility="private" method="_MGFdgBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MGDBQBUTEemIe6OhVnSywA" name="imp" type="_MBDzkBUTEemIe6OhVnSywA"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MGE2cBUTEemIe6OhVnSywA" name="overlay" type="_MEEEQRUTEemIe6OhVnSywA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_MEaCgBUTEemIe6OhVnSywA" name="DialogListener"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_MEgJIBUTEemIe6OhVnSywA" name="BandManager" visibility="public">
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MZmPYhUTEemIe6OhVnSywA" name="LOC_KEY" visibility="public" isLeaf="true" isStatic="true" isUnique="false">
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MZmPYxUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>&quot;manager.loc&quot;</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MZm2cBUTEemIe6OhVnSywA" name="BUTTONS" visibility="private" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MZm2cRUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>11</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MZm2chUTEemIe6OhVnSywA" name="DRAW" visibility="private" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MZm2cxUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>0</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MZm2dBUTEemIe6OhVnSywA" name="FILL" visibility="private" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MZm2dRUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>1</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MZm2dhUTEemIe6OhVnSywA" name="LABEL" visibility="private" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MZm2dxUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>2</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MZndgBUTEemIe6OhVnSywA" name="SHOW_ALL" visibility="private" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MZoroBUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>0</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MZpSsBUTEemIe6OhVnSywA" name="SHOW_NONE" visibility="private" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MZpSsRUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>1</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MZp5wBUTEemIe6OhVnSywA" name="LABELS" visibility="private" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MZp5wRUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>2</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MZp5whUTEemIe6OhVnSywA" name="NO_LABELS" visibility="private" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MZp5wxUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>3</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MZrH4BUTEemIe6OhVnSywA" name="MENU" visibility="private" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MZru8BUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>0</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MZru8RUTEemIe6OhVnSywA" name="COMMAND" visibility="private" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MZru8hUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>1</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MZru8xUTEemIe6OhVnSywA" name="IGNORE_POSITION" visibility="private" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MZuLMBUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>-999</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MZvZUBUTEemIe6OhVnSywA" name="CHANNEL" visibility="private" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MZxOgBUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>0</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MZx1kBUTEemIe6OhVnSywA" name="SLICE" visibility="private" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MZzDsBUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>1</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MZzqwBUTEemIe6OhVnSywA" name="FRAME" visibility="private" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MZzqwRUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>2</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MZ1f8BUTEemIe6OhVnSywA" name="SHOW_DIALOG" visibility="private" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MZ3VIBUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>3</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MZ38MBUTEemIe6OhVnSywA" name="rows" visibility="private" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MZ4jQBUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>15</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MZ4jQRUTEemIe6OhVnSywA" name="lastNonShiftClick" visibility="private" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MZ4jQhUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>-1</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MZ5KUBUTEemIe6OhVnSywA" name="allowMultipleSelections" visibility="private" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MZ6YcBUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>true</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MZ8NoBUTEemIe6OhVnSywA" name="moreButtonLabel" visibility="private" isStatic="true" isUnique="false">
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MZ9bwBUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>&quot;More &quot; + '»'</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MZ-C0BUTEemIe6OhVnSywA" name="panel" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MZ-C0RUTEemIe6OhVnSywA" name="instance" visibility="private" isStatic="true" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MZ-p4BUTEemIe6OhVnSywA" name="colorIndex" visibility="private" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MZ-p4RUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>4</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MZ-p4hUTEemIe6OhVnSywA" name="list" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MZ_Q8BUTEemIe6OhVnSywA" name="listModel" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MZ_Q8RUTEemIe6OhVnSywA" name="rois" visibility="private" isUnique="false">
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MZ_Q8hUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>new Hashtable()</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MZ_4ABUTEemIe6OhVnSywA" name="bands" visibility="private" isUnique="false">
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MZ_4ARUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>new Hashtable()</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MZ_4AhUTEemIe6OhVnSywA" name="canceled" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MaAfEBUTEemIe6OhVnSywA" name="macro" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MaAfERUTEemIe6OhVnSywA" name="ignoreInterrupts" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MaAfEhUTEemIe6OhVnSywA" name="pm" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MaAfExUTEemIe6OhVnSywA" name="moreButton" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MaBGIBUTEemIe6OhVnSywA" name="colorButton" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MaBGIRUTEemIe6OhVnSywA" name="showAllCheckbox" visibility="private" isUnique="false">
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MaBGIhUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>new Checkbox(&quot;Show All Bands&quot;, true)</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MaBGIxUTEemIe6OhVnSywA" name="bgCheckbox" visibility="private" isUnique="false">
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MaBGJBUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>new Checkbox(&quot;Dark Background&quot;, true)</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MaBtMBUTEemIe6OhVnSywA" name="histogramCheckbox" visibility="private" isUnique="false">
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MaBtMRUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>new Checkbox(&quot;Show Histogram&quot;, false)</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MaBtMhUTEemIe6OhVnSywA" name="measureAll" visibility="private" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MaCUQBUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>true</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MaCUQRUTEemIe6OhVnSywA" name="onePerSlice" visibility="private" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MaCUQhUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>true</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MaCUQxUTEemIe6OhVnSywA" name="restoreCentered" visibility="private" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MaC7UBUTEemIe6OhVnSywA" name="prevID" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MaC7URUTEemIe6OhVnSywA" name="noUpdateMode" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MaC7UhUTEemIe6OhVnSywA" name="defaultLineWidth" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MaDiYBUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>1</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MaDiYRUTEemIe6OhVnSywA" name="defaultColor" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MaEwgBUTEemIe6OhVnSywA" name="firstTime" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MaFXkBUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>false</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MaGlsBUTEemIe6OhVnSywA" name="selectedIndexes" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MaHMwBUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MaHMwRUTEemIe6OhVnSywA" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MaHz0BUTEemIe6OhVnSywA" name="appendResults" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MaIa4BUTEemIe6OhVnSywA" name="mmResults" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MaKQEBUTEemIe6OhVnSywA" name="imageID" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MaLeMBUTEemIe6OhVnSywA" name="number_of_bands" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MaNTYBUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>1</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MaOhgBUTEemIe6OhVnSywA" name="m" visibility="private" type="_MEzrIBUTEemIe6OhVnSywA" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MaQWsBUTEemIe6OhVnSywA" name="pfr" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MaQ9wBUTEemIe6OhVnSywA" name="impbands" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MaSy8BUTEemIe6OhVnSywA" name="a" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MaUBEBUTEemIe6OhVnSywA" name="changes" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MaVPMBUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>false</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_Mau30BUTEemIe6OhVnSywA" name="normalisationchanges" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_Mave4BUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>false</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_Mave4RUTEemIe6OhVnSywA" name="colour" visibility="private" isUnique="false">
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MawF8BUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>Color.BLUE</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MaxUERUTEemIe6OhVnSywA" name="undooperations" visibility="private" type="_MawF8RUTEemIe6OhVnSywA" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Max7IBUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Max7IRUTEemIe6OhVnSywA" value="*"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_Max7IhUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>new ArrayList&lt;>()</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MayiMBUTEemIe6OhVnSywA" name="redooperations" visibility="private" type="_MawF8RUTEemIe6OhVnSywA" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MayiMRUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MayiMhUTEemIe6OhVnSywA" value="*"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MayiMxUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>new ArrayList&lt;>()</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MayiNBUTEemIe6OhVnSywA" name="isundo" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MayiNRUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>false</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MazJQBUTEemIe6OhVnSywA" name="showedprofile" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MazJQRUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>-1</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MazJQhUTEemIe6OhVnSywA" name="markersedit" visibility="private" type="_MGiwgRUTEemIe6OhVnSywA" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MazJQxUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MazJRBUTEemIe6OhVnSywA" value="*"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MazJRRUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>null</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MazwUBUTEemIe6OhVnSywA" name="show" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MazwURUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>false</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MazwUhUTEemIe6OhVnSywA" name="laneid" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MazwUxUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>-1</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MdJ5sBUTEemIe6OhVnSywA" name="channel" visibility="private" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MdLH0BUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>false</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MdLu4BUTEemIe6OhVnSywA" name="slice" visibility="private" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MdMV8BUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>true</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MdM9ABUTEemIe6OhVnSywA" name="frame" visibility="private" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MdOLIBUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>false</body>
                </defaultValue>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ma1lgBUTEemIe6OhVnSywA" name="BandManager" specification="_MazwVBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    super(&quot;Band Manager&quot;);&#xD;
    this.m = m;&#xD;
    instance = this;&#xD;
    list = new JList();&#xD;
    showWindow();&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ma3asRUTEemIe6OhVnSywA" name="BandManager" specification="_Ma1lgRUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    super(&quot;Band Manager&quot;);&#xD;
    this.m = m;&#xD;
    instance = this;&#xD;
    list = new JList();&#xD;
    this.show = show;&#xD;
    showWindow();&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ma528BUTEemIe6OhVnSywA" name="BandManager" specification="_Ma4BwBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    super(&quot;Band Manager&quot;);&#xD;
    list = new JList();&#xD;
    listModel = new DefaultListModel();&#xD;
    list.setModel(listModel);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ma6eABUTEemIe6OhVnSywA" name="showWindow" specification="_Ma528RUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    ImageJ ij = IJ.getInstance();&#xD;
    addKeyListener(ij);&#xD;
    addMouseListener(this);&#xD;
    addMouseWheelListener(this);&#xD;
    WindowManager.addWindow(this);&#xD;
    //setLayout(new FlowLayout(FlowLayout.CENTER,5,5));&#xD;
    setLayout(new BorderLayout());&#xD;
    listModel = new DefaultListModel();&#xD;
    list.setModel(listModel);&#xD;
    list.setPrototypeCellValue(&quot;0000-0000-0000 &quot;);&#xD;
    list.addListSelectionListener(this);&#xD;
    list.addKeyListener(ij);&#xD;
    list.addMouseListener(this);&#xD;
    list.addMouseWheelListener(this);&#xD;
    if (IJ.isLinux()) {&#xD;
        list.setBackground(Color.white);&#xD;
    }&#xD;
    JScrollPane scrollPane = new JScrollPane(list, ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS, ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);&#xD;
    add(&quot;Center&quot;, scrollPane);&#xD;
    panel = new Panel();&#xD;
    int nButtons = BUTTONS;&#xD;
    panel.setLayout(new GridLayout(nButtons, 1, 5, 0));&#xD;
    addButton(&quot;Auto Detect&quot;);&#xD;
    addButton(&quot;Add [a]&quot;);&#xD;
    addButton(&quot;Delete&quot;);&#xD;
    addButton(&quot;Point Tool [p]&quot;);&#xD;
    addButton(&quot;Zoom [z]&quot;);&#xD;
    addButton(&quot;Hand [h]&quot;);&#xD;
    addButton(&quot;Pick colour [c]&quot;);&#xD;
    addButton(&quot;Undo [u]&quot;);&#xD;
    addButton(&quot;Redo [r]&quot;);&#xD;
    // Old version&#xD;
    //        addButton(&quot;Done&quot;);&#xD;
    //addButton(&quot;Duplicate&quot;);&#xD;
    /*      showAllCheckbox.addItemListener(this);
         panel.add(showAllCheckbox);  
        
         labelsCheckbox.addItemListener(this);
         panel.add(labelsCheckbox);*/&#xD;
    // bgCheckbox.addItemListener(this);&#xD;
    // panel.add(bgCheckbox);&#xD;
    histogramCheckbox.addItemListener(this);&#xD;
    panel.add(histogramCheckbox);&#xD;
    add(&quot;East&quot;, panel);&#xD;
    // New version&#xD;
    Panel panel1 = new Panel();&#xD;
    Button bdone = new Button(&quot;Done&quot;);&#xD;
    bdone.addActionListener(this);&#xD;
    bdone.addKeyListener(IJ.getInstance());&#xD;
    bdone.addMouseListener(this);&#xD;
    panel1.add(bdone);&#xD;
    add(&quot;South&quot;, panel1);&#xD;
    pack();&#xD;
    Dimension size = getSize();&#xD;
    if (size.width > 270) {&#xD;
        setSize(size.width - 40, size.height);&#xD;
    }&#xD;
    list.remove(0);&#xD;
    Point loc = Prefs.getLocation(LOC_KEY);&#xD;
    if (loc != null) {&#xD;
        setLocation(loc);&#xD;
    } else {&#xD;
        GUI.center(this);&#xD;
    }&#xD;
//        if (show) {&#xD;
//            show();&#xD;
//        }&#xD;
//        show();&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ma8TMRUTEemIe6OhVnSywA" name="addButton" specification="_Ma7FEBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    Button b = new Button(label);&#xD;
    b.addActionListener(this);&#xD;
    b.addKeyListener(IJ.getInstance());&#xD;
    b.addMouseListener(this);&#xD;
    if (label.equals(moreButtonLabel)) {&#xD;
        moreButton = b;&#xD;
    }&#xD;
    panel.add(b);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ma9hURUTEemIe6OhVnSywA" name="actionPerformed" specification="_Ma86QBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    String label = e.getActionCommand();&#xD;
    if (label == null) {&#xD;
        return;&#xD;
    }&#xD;
    String command = label;&#xD;
    if (command.equals(&quot;Add [a]&quot;)) {&#xD;
        add_band();&#xD;
    } else if (command.equals(&quot;Delete&quot;)) {&#xD;
        delete(false);&#xD;
    } else if (command.equals(&quot;Auto Detect&quot;)) {&#xD;
        auto_detect();&#xD;
    } else if (command.equals(&quot;Point Tool [p]&quot;)) {&#xD;
        IJ.setTool(&quot;point&quot;);&#xD;
    } else if (command.equals(&quot;Zoom [z]&quot;)) {&#xD;
        IJ.setTool(&quot;zoom&quot;);&#xD;
    } else if (command.equals(&quot;Hand [h]&quot;)) {&#xD;
        IJ.setTool(&quot;hand&quot;);&#xD;
    } else if (command.equals(&quot;Pick colour [c]&quot;)) {&#xD;
        pick_colour();&#xD;
    } else if (command.equals(&quot;Undo [u]&quot;)) {&#xD;
        undo();&#xD;
    } else if (command.equals(&quot;Redo [r]&quot;)) {&#xD;
        redo();&#xD;
    } else if (command.equals(&quot;Done&quot;)) {&#xD;
        close();&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ma_WgBUTEemIe6OhVnSywA" name="newimpbands" specification="_Ma-IYBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    int height = imp.getHeight();&#xD;
    impbands = NewImage.createImage(&quot;Histogram&quot;, height, 255, 0, 24, 0);&#xD;
    ImageProcessor ip = impbands.getProcessor();&#xD;
    IJ.run(impbands, &quot;Rotate 90 Degrees Left&quot;, &quot;&quot;);&#xD;
    IJ.run(impbands, &quot;Flip Horizontally&quot;, &quot;&quot;);&#xD;
    impbands.changes = false;&#xD;
    impbands.show();&#xD;
    impbands.getWindow().setAlwaysOnTop(true);&#xD;
    imp.show();&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MbE2EBUTEemIe6OhVnSywA" name="newimpbandswithoutshow" specification="_MbBLsBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    int height = imp.getHeight();&#xD;
    impbands = NewImage.createImage(&quot;Histogram&quot;, height, 255, 0, 24, 0);&#xD;
    ImageProcessor ip = impbands.getProcessor();&#xD;
    IJ.run(impbands, &quot;Rotate 90 Degrees Left&quot;, &quot;&quot;);&#xD;
    IJ.run(impbands, &quot;Flip Horizontally&quot;, &quot;&quot;);&#xD;
    impbands.changes = false;&#xD;
    return impbands;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MbH5YBUTEemIe6OhVnSywA" name="showprofile" specification="_MbFdIBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    Roi aux = (Utilities.belongstoany(x, y, m.getLanes()));&#xD;
    if (aux == null) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;The choosen point does not belong to any lane.&quot;, &quot;&quot;, JOptionPane.INFORMATION_MESSAGE);&#xD;
    } else {&#xD;
        int i = roibelonging(x, y, m.getLanes());&#xD;
        showedprofile = i;&#xD;
        double[] profile = m.finallanes[i].getProfile();&#xD;
        int[] xValues = new int[profile.length];&#xD;
        int[] yValues = new int[profile.length];&#xD;
        for (int j = 0; j &lt; profile.length; j++) {&#xD;
            xValues[j] = j;&#xD;
            yValues[j] = (int) profile[j];&#xD;
        }&#xD;
        if (impbands == null || !impbands.isVisible()) {&#xD;
            impbands = NewImage.createImage(&quot;Histogram&quot;, yValues.length, 255, 0, 24, 0);&#xD;
        } else {&#xD;
            if (impbands.isVisible()) {&#xD;
                IJ.run(impbands, &quot;Rotate 90 Degrees Left&quot;, &quot;&quot;);&#xD;
                IJ.run(impbands, &quot;Flip Horizontally&quot;, &quot;&quot;);&#xD;
            }&#xD;
        }&#xD;
        ImageProcessor ip = impbands.getProcessor();&#xD;
        ip.setColor(Color.white);&#xD;
        ip.fill();&#xD;
        ip.setColor(Color.black);&#xD;
        PolygonRoi p = new PolygonRoi(xValues, yValues, xValues.length, Roi.POLYLINE);&#xD;
        // ip.setColor(Color.blue);&#xD;
        Line l = new Line(y, 0, y, yValues[y]);&#xD;
        ip.draw(p);&#xD;
        ip.draw(l);&#xD;
        IJ.run(impbands, &quot;Rotate 90 Degrees Right&quot;, &quot;&quot;);&#xD;
        IJ.run(impbands, &quot;Flip Horizontally&quot;, &quot;&quot;);&#xD;
        ip = impbands.getProcessor();&#xD;
        for (int j = 1; j &lt; 11; j++) {&#xD;
            ip.setColor(new Color(240, 240, 240));&#xD;
            ip.drawLine(j * 25, 0, j * 25, yValues.length);&#xD;
            ip.setColor(Color.black);&#xD;
            ip.setFont(new Font(&quot;SansSerif&quot;, Font.PLAIN, 8));&#xD;
            ip.drawString(&quot;&quot; + j * 25, j * 25 - 15, 10);&#xD;
        }&#xD;
        if (impbands.isVisible()) {&#xD;
            impbands.updateAndDraw();&#xD;
        } else {&#xD;
            impbands.updateAndDraw();&#xD;
            impbands.show();&#xD;
        }&#xD;
        ImageWindow iw = impbands.getWindow();&#xD;
        HistogramCanvas cc = new HistogramCanvas(impbands, this);&#xD;
        ImageWindow iw2 = new ImageWindow(impbands, cc);&#xD;
        iw2.toFront();&#xD;
        //            iw2.setAlwaysOnTop(true);&#xD;
        iw.dispose();&#xD;
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();&#xD;
        double width = screenSize.getWidth();&#xD;
        iw2.setLocation((int) width - 260, 0);&#xD;
        impbands.changes = false;&#xD;
        WindowManager.getImage(m.getWindowname()).getWindow().toFront();&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MbMx4BUTEemIe6OhVnSywA" name="showprofile" specification="_MbJHgBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    Lane[] stds = getstandardlanes(m.finallanes);&#xD;
    Roi[] roisstds = new Roi[stds.length];&#xD;
    for (int i = 0; i &lt; stds.length; i++) {&#xD;
        roisstds[i] = stds[i].getRoi();&#xD;
    }&#xD;
    Roi aux = (Utilities.belongstoany(x, y, roisstds));&#xD;
    if (aux == null) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;The choosen point does not belong to any marker.&quot;, &quot;&quot;, JOptionPane.INFORMATION_MESSAGE);&#xD;
    } else {&#xD;
        int i = roibelonging(x, y, m.getLanes());&#xD;
        showedprofile = i;&#xD;
        double[] profile = m.finallanes[i].getProfile();&#xD;
        int[] xValues = new int[profile.length];&#xD;
        int[] yValues = new int[profile.length];&#xD;
        for (int j = 0; j &lt; profile.length; j++) {&#xD;
            xValues[j] = j;&#xD;
            yValues[j] = (int) profile[j];&#xD;
        }&#xD;
        if (impbands == null || !impbands.isVisible()) {&#xD;
            impbands = NewImage.createImage(&quot;Histogram&quot;, yValues.length, 255, 0, 24, 0);&#xD;
        } else {&#xD;
            if (impbands.isVisible()) {&#xD;
                IJ.run(impbands, &quot;Rotate 90 Degrees Left&quot;, &quot;&quot;);&#xD;
                IJ.run(impbands, &quot;Flip Horizontally&quot;, &quot;&quot;);&#xD;
            }&#xD;
        }&#xD;
        ImageProcessor ip = impbands.getProcessor();&#xD;
        ip.setColor(Color.white);&#xD;
        ip.fill();&#xD;
        ip.setColor(Color.black);&#xD;
        PolygonRoi p = new PolygonRoi(xValues, yValues, xValues.length, Roi.POLYLINE);&#xD;
        // ip.setColor(Color.blue);&#xD;
        Line l = new Line(y, 0, y, yValues[y]);&#xD;
        ip.draw(p);&#xD;
        ip.draw(l);&#xD;
        IJ.run(impbands, &quot;Rotate 90 Degrees Right&quot;, &quot;&quot;);&#xD;
        IJ.run(impbands, &quot;Flip Horizontally&quot;, &quot;&quot;);&#xD;
        ip = impbands.getProcessor();&#xD;
        for (int j = 1; j &lt; 11; j++) {&#xD;
            ip.setColor(new Color(240, 240, 240));&#xD;
            ip.drawLine(j * 25, 0, j * 25, yValues.length);&#xD;
            ip.setColor(Color.black);&#xD;
            ip.setFont(new Font(&quot;SansSerif&quot;, Font.PLAIN, 8));&#xD;
            ip.drawString(&quot;&quot; + j * 25, j * 25 - 15, 10);&#xD;
        }&#xD;
        if (impbands.isVisible()) {&#xD;
            impbands.updateAndDraw();&#xD;
        } else {&#xD;
            impbands.updateAndDraw();&#xD;
            impbands.show();&#xD;
        }&#xD;
        ImageWindow iw = impbands.getWindow();&#xD;
        HistogramCanvas cc = new HistogramCanvas(impbands, this);&#xD;
        ImageWindow iw2 = new ImageWindow(impbands, cc);&#xD;
        iw2.toFront();&#xD;
        //            iw2.setAlwaysOnTop(true);&#xD;
        iw.dispose();&#xD;
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();&#xD;
        double width = screenSize.getWidth();&#xD;
        iw2.setLocation((int) width - 260, 0);&#xD;
        impbands.changes = false;&#xD;
        WindowManager.getImage(m.getWindowname()).getWindow().toFront();&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MbQcQBUTEemIe6OhVnSywA" name="profile" specification="_MbNY8BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    Roi aux = (Utilities.belongstoany(x, y, m.getLanes()));&#xD;
    if (aux == null) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;The choosen point does not belong to any lane.&quot;, &quot;&quot;, JOptionPane.INFORMATION_MESSAGE);&#xD;
    } else {&#xD;
        int i = roibelonging(x, y, m.getLanes());&#xD;
        showedprofile = i;&#xD;
        double[] profile = m.finallanes[i].getProfile();&#xD;
        int[] xValues = new int[profile.length];&#xD;
        int[] yValues = new int[profile.length];&#xD;
        for (int j = 0; j &lt; profile.length; j++) {&#xD;
            xValues[j] = j;&#xD;
            yValues[j] = (int) profile[j];&#xD;
        }&#xD;
        if (impbands == null || !impbands.isVisible()) {&#xD;
            impbands = NewImage.createImage(&quot;Histogram&quot;, yValues.length, 255, 0, 24, 0);&#xD;
        } else {&#xD;
            if (impbands.isVisible()) {&#xD;
                IJ.run(impbands, &quot;Rotate 90 Degrees Left&quot;, &quot;&quot;);&#xD;
                IJ.run(impbands, &quot;Flip Horizontally&quot;, &quot;&quot;);&#xD;
            }&#xD;
        }&#xD;
        ImageProcessor ip = impbands.getProcessor();&#xD;
        ip.setColor(Color.white);&#xD;
        ip.fill();&#xD;
        ip.setColor(Color.black);&#xD;
        PolygonRoi p = new PolygonRoi(xValues, yValues, xValues.length, Roi.POLYLINE);&#xD;
        // ip.setColor(Color.blue);&#xD;
        Line l = new Line(y, 0, y, yValues[y]);&#xD;
        ip.draw(p);&#xD;
        ip.draw(l);&#xD;
        IJ.run(impbands, &quot;Rotate 90 Degrees Right&quot;, &quot;&quot;);&#xD;
        IJ.run(impbands, &quot;Flip Horizontally&quot;, &quot;&quot;);&#xD;
        ip = impbands.getProcessor();&#xD;
        for (int j = 1; j &lt; 11; j++) {&#xD;
            ip.setColor(new Color(240, 240, 240));&#xD;
            ip.drawLine(j * 25, 0, j * 25, yValues.length);&#xD;
            ip.setColor(Color.black);&#xD;
            ip.setFont(new Font(&quot;SansSerif&quot;, Font.PLAIN, 8));&#xD;
            ip.drawString(&quot;&quot; + j * 25, j * 25 - 15, 10);&#xD;
        }&#xD;
        if (impbands.isVisible()) {&#xD;
            impbands.updateAndDraw();&#xD;
            impbands.changes = false;&#xD;
            return impbands;&#xD;
        } else {&#xD;
            impbands.updateAndDraw();&#xD;
            //                impbands.show();&#xD;
            impbands.changes = false;&#xD;
            return impbands;&#xD;
        }&#xD;
    }&#xD;
    return null;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MbTfkBUTEemIe6OhVnSywA" name="add_temp_band" specification="_MbRqYBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    ImagePlus imp = WindowManager.getCurrentImage();&#xD;
    int x = m.getLanes()[showedprofile].getBounds().x;&#xD;
    Roi aux = m.getLanes()[showedprofile];&#xD;
    int r0x = aux.getBounds().x;&#xD;
    int r0y = aux.getBounds().y;&#xD;
    int w = aux.getBounds().width;&#xD;
    Rectangle rect = new Rectangle(r0x, (y - 1), w, 2);&#xD;
    Roi r1 = rectangleintersectionroi(aux, rect);&#xD;
    int lane = roibelonging(x, y, m.getLanes());&#xD;
    r1.setFillColor(Color.PINK);&#xD;
    add(WindowManager.getImage(m.getWindowname()), r1, &quot;temp-lane&quot;);&#xD;
    showAll(0);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MbUtsRUTEemIe6OhVnSywA" name="delete_temp_band" specification="_MbUtsBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    if (rois.get(&quot;temp-lane&quot;) != null) {&#xD;
        rois.remove(&quot;temp-lane&quot;);&#xD;
        listModel.removeElement(&quot;temp-lane&quot;);&#xD;
        showAll(0);&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MbVUwBUTEemIe6OhVnSywA" name="add_band" specification="_MbUtshUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    ImagePlus imp = WindowManager.getCurrentImage();&#xD;
    Roi r = imp.getRoi();&#xD;
    if (!(r == null)) {&#xD;
        int x;&#xD;
        int y = (int) r.getFloatPolygon().ypoints[0];&#xD;
        Roi aux;&#xD;
        if (imp.getTitle().equals(&quot;Histogram&quot;)) {&#xD;
            x = m.getLanes()[showedprofile].getBounds().x;&#xD;
            aux = m.getLanes()[showedprofile];&#xD;
        } else {&#xD;
            x = (int) r.getFloatPolygon().xpoints[0];&#xD;
            aux = (Utilities.belongstoany(x, y, m.getLanes()));&#xD;
        }&#xD;
        if (aux == null) {&#xD;
            JOptionPane.showMessageDialog(this, &quot;The choosen point does not belong to any lane.&quot;, &quot;&quot;, JOptionPane.INFORMATION_MESSAGE);&#xD;
        } else {&#xD;
            int r0x = aux.getBounds().x;&#xD;
            int r0y = aux.getBounds().y;&#xD;
            int w = aux.getBounds().width;&#xD;
            Rectangle rect = new Rectangle(r0x, (y - 1), w, 2);&#xD;
            Roi r1 = rectangleintersectionroi(aux, rect);&#xD;
            int lane = roibelonging(x, y, m.getLanes());&#xD;
            if (m.finallanes[lane].isIsstandard()) {&#xD;
                if (colour == Color.RED) {&#xD;
                    r1.setFillColor(Color.BLUE);&#xD;
                } else {&#xD;
                    r1.setFillColor(Color.RED);&#xD;
                }&#xD;
            } else {&#xD;
                r1.setFillColor(colour);&#xD;
            }&#xD;
            if (imp.getTitle().equals(&quot;Histogram&quot;)) {&#xD;
                add(WindowManager.getImage(m.getWindowname()), r1, 0, lane);&#xD;
            } else {&#xD;
                add(imp, r1, 0, lane);&#xD;
            }&#xD;
            showAll(0);&#xD;
            changes = true;&#xD;
            if (m.finallanes[lane].isIsstandard()) {&#xD;
                normalisationchanges = true;&#xD;
            }&#xD;
        }&#xD;
        if (!isundo) {&#xD;
            undooperations.add(new BandOperation(true, x, y));&#xD;
            redooperations = new ArrayList&lt;>();&#xD;
        }&#xD;
    } else {&#xD;
        JOptionPane.showMessageDialog(this, &quot;You must select the position of the band with the point tool.&quot;, &quot;Add band&quot;, JOptionPane.INFORMATION_MESSAGE);&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MbV70RUTEemIe6OhVnSywA" name="add_band" specification="_MbVUwRUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    ImagePlus imp = WindowManager.getCurrentImage();&#xD;
    Roi r = imp.getRoi();&#xD;
    if (!(r == null)) {&#xD;
        int x;&#xD;
        int y = (int) r.getFloatPolygon().ypoints[0];&#xD;
        Roi aux;&#xD;
        if (imp.getTitle().equals(&quot;Histogram&quot;)) {&#xD;
            x = m.getLanes()[showedprofile].getBounds().x;&#xD;
            aux = m.getLanes()[showedprofile];&#xD;
        } else {&#xD;
            x = (int) r.getFloatPolygon().xpoints[0];&#xD;
            Lane[] stds = getstandardlanes(m.finallanes);&#xD;
            Roi[] roisstds = new Roi[stds.length];&#xD;
            for (int i = 0; i &lt; stds.length; i++) {&#xD;
                roisstds[i] = stds[i].getRoi();&#xD;
            }&#xD;
            aux = (Utilities.belongstoany(x, y, roisstds));&#xD;
        }&#xD;
        if (aux == null) {&#xD;
            JOptionPane.showMessageDialog(this, &quot;The choosen point does not belong to any marker.&quot;, &quot;&quot;, JOptionPane.INFORMATION_MESSAGE);&#xD;
        } else {&#xD;
            int r0x = aux.getBounds().x;&#xD;
            int r0y = aux.getBounds().y;&#xD;
            int w = aux.getBounds().width;&#xD;
            Rectangle rect = new Rectangle(r0x, (y - 1), w, 2);&#xD;
            Roi r1 = rectangleintersectionroi(aux, rect);&#xD;
            int lane = roibelonging(x, y, m.getLanes());&#xD;
            if (m.finallanes[lane].isIsstandard()) {&#xD;
                if (colour == Color.RED) {&#xD;
                    r1.setFillColor(Color.BLUE);&#xD;
                } else {&#xD;
                    r1.setFillColor(Color.RED);&#xD;
                }&#xD;
            } else {&#xD;
                r1.setFillColor(colour);&#xD;
            }&#xD;
            if (imp.getTitle().equals(&quot;Histogram&quot;)) {&#xD;
                add(WindowManager.getImage(m.getWindowname()), r1, 0, lane);&#xD;
            } else {&#xD;
                add(imp, r1, 0, lane);&#xD;
            }&#xD;
            showAll(0);&#xD;
            changes = true;&#xD;
            if (m.finallanes[lane].isIsstandard()) {&#xD;
                normalisationchanges = true;&#xD;
            }&#xD;
        }&#xD;
        if (!isundo) {&#xD;
            undooperations.add(new BandOperation(true, x, y));&#xD;
            redooperations = new ArrayList&lt;>();&#xD;
        }&#xD;
    } else {&#xD;
        JOptionPane.showMessageDialog(this, &quot;You must select the position of the band with the point tool.&quot;, &quot;Add band&quot;, JOptionPane.INFORMATION_MESSAGE);&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MbWi4BUTEemIe6OhVnSywA" name="interpolateRois" specification="_MbV70hUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    IJ.runPlugIn(&quot;ij.plugin.RoiInterpolator&quot;, &quot;&quot;);&#xD;
    if (record()) {&#xD;
        Recorder.record(&quot;roiManager&quot;, &quot;Interpolate ROIs&quot;);&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MbWi4xUTEemIe6OhVnSywA" name="ishistogramcheckboxselected" specification="_MbWi4RUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    return histogramCheckbox.getState();&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MbXxARUTEemIe6OhVnSywA" name="itemStateChanged" specification="_MbXJ8BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    Object source = e.getSource();&#xD;
    if (source == showAllCheckbox) {&#xD;
        /*            if (firstTime) {
             labelsCheckbox.setState(true);
             }*/&#xD;
        showAll(showAllCheckbox.getState() ? SHOW_ALL : SHOW_NONE);&#xD;
        firstTime = false;&#xD;
    }&#xD;
/*if (source == labelsCheckbox) {
         if (firstTime) {
         showAllCheckbox.setState(true);
         }
         boolean editState = labelsCheckbox.getState();
         boolean showAllState = showAllCheckbox.getState();
         if (!showAllState &amp;&amp; !editState) {
         showAll(SHOW_NONE);
         } else {
         showAll(editState ? LABELS : NO_LABELS);
         if (editState) {
         showAllCheckbox.setState(true);
         }
         }
         firstTime = false;
         return;
         }*/&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MbYYEhUTEemIe6OhVnSywA" name="add" specification="_MbXxAhUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    if (shiftKeyDown) {&#xD;
        addAndDraw(altKeyDown);&#xD;
    } else if (altKeyDown) {&#xD;
        addRoi(true);&#xD;
    } else {&#xD;
        addRoi(false);&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MbcpgBUTEemIe6OhVnSywA" name="addRoi" specification="_Mba0UBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    addRoi(roi, false, null, -1);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mbd3oRUTEemIe6OhVnSywA" name="addRoi" specification="_MbdQkBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    return addRoi(null, promptForName, null, IGNORE_POSITION);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MbklUBUTEemIe6OhVnSywA" name="addRoi" specification="_MbfFwBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    ImagePlus imp = roi == null ? getImage() : WindowManager.getCurrentImage();&#xD;
    if (roi == null) {&#xD;
        if (imp == null) {&#xD;
            return false;&#xD;
        }&#xD;
        roi = imp.getRoi();&#xD;
        roi.setFillColor(colour);&#xD;
        if (roi == null) {&#xD;
            JOptionPane.showMessageDialog(this, &quot;The active image does not have a selection.&quot;, &quot;&quot;, JOptionPane.INFORMATION_MESSAGE);&#xD;
            return false;&#xD;
        }&#xD;
        if (intersectwithany(roi, getRoisAsArray())) {&#xD;
            JOptionPane.showMessageDialog(this, &quot;The new lane intersects with a lane previously added.&quot;, &quot;&quot;, JOptionPane.INFORMATION_MESSAGE);&#xD;
            imp.setRoi(0, 0, 0, 0);&#xD;
            return false;&#xD;
        }&#xD;
    }&#xD;
    if ((roi instanceof PolygonRoi) &amp;&amp; ((PolygonRoi) roi).getNCoordinates() == 0) {&#xD;
        return false;&#xD;
    }&#xD;
    if (color == null &amp;&amp; roi.getStrokeColor() != null) {&#xD;
        color = colour;&#xD;
    } else if (color == null &amp;&amp; defaultColor != null) {&#xD;
        color = colour;&#xD;
    }&#xD;
    boolean ignorePosition = false;&#xD;
    if (lineWidth == IGNORE_POSITION) {&#xD;
        ignorePosition = true;&#xD;
        lineWidth = -1;&#xD;
    }&#xD;
    if (lineWidth &lt; 0) {&#xD;
        int sw = (int) roi.getStrokeWidth();&#xD;
        lineWidth = sw > 1 ? sw : defaultLineWidth;&#xD;
    }&#xD;
    if (lineWidth > 100) {&#xD;
        lineWidth = 1;&#xD;
    }&#xD;
    int n = getCount();&#xD;
    int position = imp != null &amp;&amp; !ignorePosition ? roi.getPosition() : 0;&#xD;
    int saveCurrentSlice = imp != null ? imp.getCurrentSlice() : 0;&#xD;
    if (position > 0 &amp;&amp; position != saveCurrentSlice) {&#xD;
        imp.setSliceWithoutUpdate(position);&#xD;
    } else {&#xD;
        position = 0;&#xD;
    }&#xD;
    if (n > 0 &amp;&amp; !IJ.isMacro() &amp;&amp; imp != null) {&#xD;
        // check for duplicate&#xD;
        String label = (String) listModel.getElementAt(n - 1);&#xD;
        Roi roi2 = (Roi) rois.get(label);&#xD;
        if (roi2 != null) {&#xD;
            int slice2 = getSliceNumber(roi2, label);&#xD;
            if (roi.equals(roi2) &amp;&amp; (slice2 == -1 || slice2 == imp.getCurrentSlice()) &amp;&amp; imp.getID() == prevID &amp;&amp; !Interpreter.isBatchMode()) {&#xD;
                if (position > 0) {&#xD;
                    imp.setSliceWithoutUpdate(saveCurrentSlice);&#xD;
                }&#xD;
                return false;&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    prevID = imp != null ? imp.getID() : 0;&#xD;
    String name = roi.getName();&#xD;
    if (isStandardName(name)) {&#xD;
        name = null;&#xD;
    }&#xD;
    String label = name != null ? name : getLabel(imp, roi, -1);&#xD;
    if (promptForName) {&#xD;
        label = promptForName(label);&#xD;
    }&#xD;
    if (label == null) {&#xD;
        if (position > 0) {&#xD;
            imp.setSliceWithoutUpdate(saveCurrentSlice);&#xD;
        }&#xD;
        return false;&#xD;
    }&#xD;
    label = getUniqueName(label);&#xD;
    listModel.addElement(label);&#xD;
    roi.setName(label);&#xD;
    Roi roiCopy = (Roi) roi.clone();&#xD;
    setRoiPosition(imp, roiCopy);&#xD;
    if (lineWidth > 1) {&#xD;
        roiCopy.setStrokeWidth(lineWidth);&#xD;
    }&#xD;
    if (color != null) {&#xD;
        roiCopy.setStrokeColor(color);&#xD;
    }&#xD;
    rois.put(label, roiCopy);&#xD;
    updateShowAll();&#xD;
    if (record()) {&#xD;
        recordAdd(defaultColor, defaultLineWidth);&#xD;
    }&#xD;
    if (position > 0) {&#xD;
        imp.setSliceWithoutUpdate(saveCurrentSlice);&#xD;
    }&#xD;
    return true;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MboPsBUTEemIe6OhVnSywA" name="recordAdd" specification="_MblzcBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    if (Recorder.scriptMode()) {&#xD;
        Recorder.recordCall(&quot;rm.addRoi(imp.getRoi());&quot;);&#xD;
    } else if (color != null &amp;&amp; lineWidth == 1) {&#xD;
        Recorder.recordString(&quot;roiManager(\&quot;Add\&quot;, \&quot;&quot; + getHex(color) + &quot;\&quot;);\n&quot;);&#xD;
    } else if (lineWidth > 1) {&#xD;
        Recorder.recordString(&quot;roiManager(\&quot;Add\&quot;, \&quot;&quot; + getHex(color) + &quot;\&quot;, &quot; + lineWidth + &quot;);\n&quot;);&#xD;
    } else {&#xD;
        Recorder.record(&quot;roiManager&quot;, &quot;Add&quot;);&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MbrTABUTEemIe6OhVnSywA" name="getHex" specification="_Mbo2wBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    if (color == null) {&#xD;
        color = ImageCanvas.getShowAllColor();&#xD;
    }&#xD;
    String hex = Integer.toHexString(color.getRGB());&#xD;
    if (hex.length() == 8) {&#xD;
        hex = hex.substring(2);&#xD;
    }&#xD;
    return hex;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MbwykBUTEemIe6OhVnSywA" name="add" specification="_MbtIMBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    if (roi == null) {&#xD;
        return;&#xD;
    }&#xD;
    String label = roi.getName();&#xD;
    String label2 = label;&#xD;
    if (label == null) {&#xD;
        label = getLabel(imp, roi, n);&#xD;
    } else {&#xD;
        label = label + &quot;-&quot; + n;&#xD;
    }&#xD;
    if (label == null) {&#xD;
        return;&#xD;
    }&#xD;
    listModel.addElement(label);&#xD;
    if (label2 != null) {&#xD;
        roi.setName(label2);&#xD;
    } else {&#xD;
        roi.setName(label);&#xD;
    }&#xD;
    rois.put(label, (Roi) roi.clone());&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mb1rEBUTEemIe6OhVnSywA" name="add" specification="_MbyAsBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    roi.setName(label);&#xD;
    listModel.addElement(label);&#xD;
    rois.put(label, (Roi) roi.clone());&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mb58gRUTEemIe6OhVnSywA" name="add" specification="_Mb25MBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    if (roi == null) {&#xD;
        return;&#xD;
    }&#xD;
    String label = roi.getName();&#xD;
    String label2 = label;&#xD;
    if (label == null) {&#xD;
        label = getLabel(imp, roi, n);&#xD;
    } else {&#xD;
        label = label + &quot;-&quot; + n;&#xD;
    }&#xD;
    if (label == null) {&#xD;
        return;&#xD;
    }&#xD;
    listModel.addElement(label);&#xD;
    if (label2 != null) {&#xD;
        roi.setName(label2);&#xD;
    } else {&#xD;
        roi.setName(label);&#xD;
    }&#xD;
    rois.put(label, (Roi) roi.clone());&#xD;
    bands.put(label, new Band((Roi) roi.clone(), lane));&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mb7xsBUTEemIe6OhVnSywA" name="isStandardName" specification="_Mb58ghUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    if (name == null) {&#xD;
        return false;&#xD;
    }&#xD;
    boolean isStandard = false;&#xD;
    int len = name.length();&#xD;
    if (len >= 14 &amp;&amp; name.charAt(4) == '-' &amp;&amp; name.charAt(9) == '-') {&#xD;
        isStandard = true;&#xD;
    } else if (len >= 17 &amp;&amp; name.charAt(5) == '-' &amp;&amp; name.charAt(11) == '-') {&#xD;
        isStandard = true;&#xD;
    } else if (len >= 9 &amp;&amp; name.charAt(4) == '-') {&#xD;
        isStandard = true;&#xD;
    } else if (len >= 11 &amp;&amp; name.charAt(5) == '-') {&#xD;
        isStandard = true;&#xD;
    }&#xD;
    return isStandard;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mb_cEBUTEemIe6OhVnSywA" name="getLabel" specification="_Mb7xsRUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    String label = &quot;Band&quot; + number_of_bands;&#xD;
    number_of_bands = number_of_bands + 1;&#xD;
    return label;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_McB4UBUTEemIe6OhVnSywA" name="addAndDraw" specification="_McAqMBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    if (altKeyDown) {&#xD;
        if (!addRoi(true)) {&#xD;
            return;&#xD;
        }&#xD;
    } else if (!addRoi(false)) {&#xD;
        return;&#xD;
    }&#xD;
    ImagePlus imp = WindowManager.getCurrentImage();&#xD;
    if (imp.getTitle().equals(&quot;Histogram&quot;)) {&#xD;
        imp = WindowManager.getImage(m.getWindowname());&#xD;
    }&#xD;
    if (imp != null) {&#xD;
        Undo.setup(Undo.COMPOUND_FILTER, imp);&#xD;
        IJ.run(imp, &quot;Draw&quot;, &quot;slice&quot;);&#xD;
        Undo.setup(Undo.COMPOUND_FILTER_DONE, imp);&#xD;
    }&#xD;
    if (record()) {&#xD;
        Recorder.record(&quot;roiManager&quot;, &quot;Add &amp; Draw&quot;);&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_McFisBUTEemIe6OhVnSywA" name="delete" specification="_McDGcBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    int count = getCount();&#xD;
    if (count == 0) {&#xD;
        return error(&quot;The list is empty.&quot;);&#xD;
    }&#xD;
    int index[] = getSelectedIndexes();&#xD;
    if (index.length == 0 || (replacing &amp;&amp; count > 1)) {&#xD;
        //            String msg = &quot;Delete all items on the list?&quot;;&#xD;
        //            if (replacing) {&#xD;
        //                msg = &quot;Replace items on the list?&quot;;&#xD;
        //            }&#xD;
        //            canceled = false;&#xD;
        //            if (!IJ.isMacro() &amp;&amp; !macro) {&#xD;
        //                YesNoCancelDialog d = new YesNoCancelDialog(this, &quot;Lane Manager&quot;, msg);&#xD;
        //                if (d.cancelPressed()) {&#xD;
        //                    canceled = true;&#xD;
        //                    return false;&#xD;
        //                }&#xD;
        //                if (!d.yesPressed()) {&#xD;
        //                    return false;&#xD;
        //                }&#xD;
        //            }&#xD;
        //            index = getAllIndexes();&#xD;
        JOptionPane.showMessageDialog(this, &quot;Select a band to remove.&quot;, &quot;Remove band&quot;, JOptionPane.INFORMATION_MESSAGE);&#xD;
    }&#xD;
    if (count == index.length &amp;&amp; !replacing) {&#xD;
        rois.clear();&#xD;
        listModel.removeAllElements();&#xD;
    } else {&#xD;
        for (int i = count - 1; i >= 0; i--) {&#xD;
            boolean delete = false;&#xD;
            for (int j = 0; j &lt; index.length; j++) {&#xD;
                if (index[j] == i) {&#xD;
                    delete = true;&#xD;
                }&#xD;
            }&#xD;
            if (delete) {&#xD;
                Roi temp = (Roi) rois.get((String) listModel.getElementAt(i));&#xD;
                rois.remove((String) listModel.getElementAt(i));&#xD;
                bands.remove((String) listModel.getElementAt(i));&#xD;
                listModel.remove(i);&#xD;
                if (!isundo) {&#xD;
                    undooperations.add(new BandOperation(false, temp.getBounds().x, temp.getBounds().y));&#xD;
                    redooperations = new ArrayList&lt;>();&#xD;
                }&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    ImagePlus imp = WindowManager.getCurrentImage();&#xD;
    if (imp.getTitle().equals(&quot;Histogram&quot;)) {&#xD;
        imp = WindowManager.getImage(m.getWindowname());&#xD;
    }&#xD;
    if (count > 1 &amp;&amp; index.length == 1 &amp;&amp; imp != null) {&#xD;
        imp.deleteRoi();&#xD;
    }&#xD;
    updateShowAll();&#xD;
    if (record()) {&#xD;
        Recorder.record(&quot;roiManager&quot;, &quot;Delete&quot;);&#xD;
    }&#xD;
    changes = true;&#xD;
    return true;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_McImABUTEemIe6OhVnSywA" name="delete_without_asking" specification="_McGJwBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    int count = getCount();&#xD;
    int index[] = getAllIndexes();&#xD;
    if (count == index.length &amp;&amp; !replacing) {&#xD;
        rois.clear();&#xD;
        listModel.removeAllElements();&#xD;
    } else {&#xD;
        for (int i = count - 1; i >= 0; i--) {&#xD;
            boolean delete = false;&#xD;
            for (int j = 0; j &lt; index.length; j++) {&#xD;
                if (index[j] == i) {&#xD;
                    delete = true;&#xD;
                }&#xD;
            }&#xD;
            if (delete) {&#xD;
                rois.remove((String) listModel.getElementAt(i));&#xD;
                listModel.remove(i);&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    ImagePlus imp = WindowManager.getCurrentImage();&#xD;
    if (imp.getTitle().equals(&quot;Histogram&quot;)) {&#xD;
        imp = WindowManager.getImage(m.getWindowname());&#xD;
    }&#xD;
    if (count > 1 &amp;&amp; index.length == 1 &amp;&amp; imp != null) {&#xD;
        imp.deleteRoi();&#xD;
    }&#xD;
    return true;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_McLCQRUTEemIe6OhVnSywA" name="update" specification="_McJ0IBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    ImagePlus imp = getImage();&#xD;
    if (imp.getTitle().equals(&quot;Histogram&quot;)) {&#xD;
        imp = WindowManager.getImage(m.getWindowname());&#xD;
    }&#xD;
    if (imp == null) {&#xD;
        return false;&#xD;
    }&#xD;
    ImageCanvas ic = imp.getCanvas();&#xD;
    boolean showingAll = ic != null &amp;&amp; ic.getShowAllROIs();&#xD;
    Roi roi = imp.getRoi();&#xD;
    if (roi == null) {&#xD;
        error(&quot;The active image does not have a selection.&quot;);&#xD;
        return false;&#xD;
    }&#xD;
    int index = list.getSelectedIndex();&#xD;
    if (index &lt; 0 &amp;&amp; !showingAll) {&#xD;
        return error(&quot;Exactly one item in the list must be selected.&quot;);&#xD;
    }&#xD;
    if (index >= 0) {&#xD;
        String name = (String) listModel.getElementAt(index);&#xD;
        rois.remove(name);&#xD;
        if (clone) {&#xD;
            Roi roi2 = (Roi) roi.clone();&#xD;
            setRoiPosition(imp, roi2);&#xD;
            roi.setName(name);&#xD;
            roi2.setName(name);&#xD;
            rois.put(name, roi2);&#xD;
        } else {&#xD;
            rois.put(name, roi);&#xD;
        }&#xD;
    }&#xD;
    if (record()) {&#xD;
        Recorder.record(&quot;roiManager&quot;, &quot;Update&quot;);&#xD;
    }&#xD;
    updateShowAll();&#xD;
    return true;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_McMQYBUTEemIe6OhVnSywA" name="rename" specification="_McLpUBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    int index = list.getSelectedIndex();&#xD;
    if (index &lt; 0) {&#xD;
        return error(&quot;Exactly one item in the list must be selected.&quot;);&#xD;
    }&#xD;
    String name = (String) listModel.getElementAt(index);&#xD;
    if (name2 == null) {&#xD;
        name2 = promptForName(name);&#xD;
    }&#xD;
    if (name2 == null) {&#xD;
        return false;&#xD;
    }&#xD;
    if (name2.equals(name)) {&#xD;
        return false;&#xD;
    }&#xD;
    name2 = getUniqueName(name2);&#xD;
    Roi roi = (Roi) rois.get(name);&#xD;
    if (roi == null) {&#xD;
        return false;&#xD;
    }&#xD;
    rois.remove(name);&#xD;
    roi.setName(name2);&#xD;
    int position = getSliceNumber(name2);&#xD;
    if (position > 0 &amp;&amp; roi.getCPosition() == 0 &amp;&amp; roi.getZPosition() == 0 &amp;&amp; roi.getTPosition() == 0) {&#xD;
        roi.setPosition(position);&#xD;
    }&#xD;
    rois.put(name2, roi);&#xD;
    listModel.setElementAt(name2, index);&#xD;
    list.setSelectedIndex(index);&#xD;
    /*        if (Prefs.useNamesAsLabels &amp;&amp; labelsCheckbox.getState()) {
         ImagePlus imp = WindowManager.getCurrentImage();
         if (imp != null) {
         imp.draw();
         }
         }*/&#xD;
    if (record()) {&#xD;
        Recorder.record(&quot;roiManager&quot;, &quot;Rename&quot;, name2);&#xD;
    }&#xD;
    return true;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_McM3cRUTEemIe6OhVnSywA" name="promptForName" specification="_McMQYRUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    GenericDialog gd = new GenericDialog(&quot;ROI Manager&quot;);&#xD;
    gd.addStringField(&quot;Rename As:&quot;, name, 20);&#xD;
    gd.showDialog();&#xD;
    if (gd.wasCanceled()) {&#xD;
        return null;&#xD;
    } else {&#xD;
        return gd.getNextString();&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_McP6wBUTEemIe6OhVnSywA" name="restore" specification="_McNegBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    String label = (String) listModel.getElementAt(index);&#xD;
    Roi roi = (Roi) rois.get(label);&#xD;
    if (imp == null || roi == null) {&#xD;
        return false;&#xD;
    }&#xD;
    if (setSlice) {&#xD;
        int c = roi.getCPosition();&#xD;
        int z = roi.getZPosition();&#xD;
        int t = roi.getTPosition();&#xD;
        boolean hyperstack = imp.isHyperStack();&#xD;
        //IJ.log(&quot;restore: &quot;+hyperstack+&quot; &quot;+c+&quot; &quot;+z+&quot; &quot;+t);&#xD;
        if (hyperstack &amp;&amp; (c > 0 || z > 0 || t > 0)) {&#xD;
            imp.setPosition(c, z, t);&#xD;
        } else {&#xD;
            int n = getSliceNumber(roi, label);&#xD;
            if (n >= 1 &amp;&amp; n &lt;= imp.getStackSize()) {&#xD;
                if (hyperstack) {&#xD;
                    if (imp.getNSlices() > 1 &amp;&amp; n &lt;= imp.getNSlices()) {&#xD;
                        imp.setPosition(imp.getC(), n, imp.getT());&#xD;
                    } else if (imp.getNFrames() > 1 &amp;&amp; n &lt;= imp.getNFrames()) {&#xD;
                        imp.setPosition(imp.getC(), imp.getZ(), n);&#xD;
                    } else {&#xD;
                        imp.setPosition(n);&#xD;
                    }&#xD;
                } else {&#xD;
                    imp.setSlice(n);&#xD;
                }&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    if (showAllCheckbox.getState() &amp;&amp; !restoreCentered &amp;&amp; !noUpdateMode) {&#xD;
        roi.setImage(null);&#xD;
        imp.setRoi(roi);&#xD;
        return true;&#xD;
    }&#xD;
    Roi roi2 = (Roi) roi.clone();&#xD;
    Rectangle r = roi2.getBounds();&#xD;
    int width = imp.getWidth(), height = imp.getHeight();&#xD;
    if (restoreCentered) {&#xD;
        ImageCanvas ic = imp.getCanvas();&#xD;
        if (ic != null) {&#xD;
            Rectangle r1 = ic.getSrcRect();&#xD;
            Rectangle r2 = roi2.getBounds();&#xD;
            roi2.setLocation(r1.x + r1.width / 2 - r2.width / 2, r1.y + r1.height / 2 - r2.height / 2);&#xD;
        }&#xD;
    }&#xD;
    if (r.x >= width || r.y >= height || (r.x + r.width) &lt; 0 || (r.y + r.height) &lt; 0) {&#xD;
        roi2.setLocation((width - r.width) / 2, (height - r.height) / 2);&#xD;
    }&#xD;
    if (noUpdateMode) {&#xD;
        imp.setRoi(roi2, false);&#xD;
        noUpdateMode = false;&#xD;
    } else {&#xD;
        imp.setRoi(roi2, true);&#xD;
    }&#xD;
    return true;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_McSXABUTEemIe6OhVnSywA" name="restoreWithoutUpdate" specification="_McQh0BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    noUpdateMode = true;&#xD;
    return restore(getImage(), index, false);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_McUMMRUTEemIe6OhVnSywA" name="getSliceNumber" specification="_McS-EBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    int slice = -1;&#xD;
    if (label.length() >= 14 &amp;&amp; label.charAt(4) == '-' &amp;&amp; label.charAt(9) == '-') {&#xD;
        slice = (int) Tools.parseDouble(label.substring(0, 4), -1);&#xD;
    } else if (label.length() >= 17 &amp;&amp; label.charAt(5) == '-' &amp;&amp; label.charAt(11) == '-') {&#xD;
        slice = (int) Tools.parseDouble(label.substring(0, 5), -1);&#xD;
    } else if (label.length() >= 20 &amp;&amp; label.charAt(6) == '-' &amp;&amp; label.charAt(13) == '-') {&#xD;
        slice = (int) Tools.parseDouble(label.substring(0, 6), -1);&#xD;
    }&#xD;
    return slice;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_McX2kBUTEemIe6OhVnSywA" name="getSliceNumber" specification="_McWBYBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    int slice = roi != null ? roi.getPosition() : -1;&#xD;
    if (slice == 0) {&#xD;
        slice = -1;&#xD;
    }&#xD;
    if (slice == -1) {&#xD;
        slice = getSliceNumber(label);&#xD;
    }&#xD;
    return slice;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_McZrwBUTEemIe6OhVnSywA" name="open" specification="_McZEsBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    Macro.setOptions(null);&#xD;
    String name = null;&#xD;
    if (path == null || path.equals(&quot;&quot;)) {&#xD;
        OpenDialog od = new OpenDialog(&quot;Open Selection(s)...&quot;, &quot;&quot;);&#xD;
        String directory = od.getDirectory();&#xD;
        name = od.getFileName();&#xD;
        if (name == null) {&#xD;
            return;&#xD;
        }&#xD;
        path = directory + name;&#xD;
    }&#xD;
    if (Recorder.record &amp;&amp; !Recorder.scriptMode()) {&#xD;
        Recorder.record(&quot;roiManager&quot;, &quot;Open&quot;, path);&#xD;
    }&#xD;
    if (path.endsWith(&quot;.zip&quot;)) {&#xD;
        openZip(path);&#xD;
        return;&#xD;
    }&#xD;
    Opener o = new Opener();&#xD;
    if (name == null) {&#xD;
        name = o.getName(path);&#xD;
    }&#xD;
    Roi roi = o.openRoi(path);&#xD;
    if (roi != null) {&#xD;
        if (name.endsWith(&quot;.roi&quot;)) {&#xD;
            name = name.substring(0, name.length() - 4);&#xD;
        }&#xD;
        name = getUniqueName(name);&#xD;
        listModel.addElement(name);&#xD;
        rois.put(name, roi);&#xD;
    }&#xD;
    updateShowAll();&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MccvEBUTEemIe6OhVnSywA" name="openZip" specification="_Mcbg8BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    ZipInputStream in = null;&#xD;
    ByteArrayOutputStream out;&#xD;
    int nRois = 0;&#xD;
    try {&#xD;
        in = new ZipInputStream(new FileInputStream(path));&#xD;
        byte[] buf = new byte[1024];&#xD;
        int len;&#xD;
        ZipEntry entry = in.getNextEntry();&#xD;
        while (entry != null) {&#xD;
            String name = entry.getName();&#xD;
            if (name.endsWith(&quot;.roi&quot;)) {&#xD;
                out = new ByteArrayOutputStream();&#xD;
                while ((len = in.read(buf)) > 0) {&#xD;
                    out.write(buf, 0, len);&#xD;
                }&#xD;
                out.close();&#xD;
                byte[] bytes = out.toByteArray();&#xD;
                RoiDecoder rd = new RoiDecoder(bytes, name);&#xD;
                Roi roi = rd.getRoi();&#xD;
                if (roi != null) {&#xD;
                    name = name.substring(0, name.length() - 4);&#xD;
                    name = getUniqueName(name);&#xD;
                    listModel.addElement(name);&#xD;
                    rois.put(name, roi);&#xD;
                    nRois++;&#xD;
                }&#xD;
            }&#xD;
            entry = in.getNextEntry();&#xD;
        }&#xD;
        in.close();&#xD;
    } catch (IOException e) {&#xD;
        error(e.toString());&#xD;
    }&#xD;
    if (nRois == 0) {&#xD;
        error(&quot;This ZIP archive does not appear to contain \&quot;.roi\&quot; files&quot;);&#xD;
    }&#xD;
    updateShowAll();&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MchAgBUTEemIe6OhVnSywA" name="getUniqueName" specification="_Mcd9MBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    String name2 = name;&#xD;
    int n = 1;&#xD;
    Roi roi2 = (Roi) rois.get(name2);&#xD;
    while (roi2 != null) {&#xD;
        roi2 = (Roi) rois.get(name2);&#xD;
        if (roi2 != null) {&#xD;
            int lastDash = name2.lastIndexOf(&quot;-&quot;);&#xD;
            if (lastDash != -1 &amp;&amp; name2.length() - lastDash &lt; 5) {&#xD;
                name2 = name2.substring(0, lastDash);&#xD;
            }&#xD;
            name2 = name2 + &quot;-&quot; + n;&#xD;
            n++;&#xD;
        }&#xD;
        roi2 = (Roi) rois.get(name2);&#xD;
    }&#xD;
    return name2;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mci1sBUTEemIe6OhVnSywA" name="save" specification="_MchnkBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    if (getCount() == 0) {&#xD;
        return error(&quot;The selection list is empty.&quot;);&#xD;
    }&#xD;
    int[] indexes = getSelectedIndexes();&#xD;
    if (indexes.length == 0) {&#xD;
        indexes = getAllIndexes();&#xD;
    }&#xD;
    if (indexes.length > 1) {&#xD;
        return saveMultiple(indexes, null);&#xD;
    }&#xD;
    String name = (String) listModel.getElementAt(indexes[0]);&#xD;
    Macro.setOptions(null);&#xD;
    SaveDialog sd = new SaveDialog(&quot;Save Selection...&quot;, name, &quot;.roi&quot;);&#xD;
    String name2 = sd.getFileName();&#xD;
    if (name2 == null) {&#xD;
        return false;&#xD;
    }&#xD;
    String dir = sd.getDirectory();&#xD;
    Roi roi = (Roi) rois.get(name);&#xD;
    rois.remove(name);&#xD;
    if (!name2.endsWith(&quot;.roi&quot;)) {&#xD;
        name2 = name2 + &quot;.roi&quot;;&#xD;
    }&#xD;
    String newName = name2.substring(0, name2.length() - 4);&#xD;
    rois.put(newName, roi);&#xD;
    roi.setName(newName);&#xD;
    listModel.setElementAt(newName, indexes[0]);&#xD;
    RoiEncoder re = new RoiEncoder(dir + name2);&#xD;
    try {&#xD;
        re.write(roi);&#xD;
    } catch (IOException e) {&#xD;
        IJ.error(&quot;ROI Manager&quot;, e.getMessage());&#xD;
    }&#xD;
    if (record()) {&#xD;
        String path = dir + name2;&#xD;
        if (Recorder.scriptMode()) {&#xD;
            Recorder.recordCall(&quot;IJ.saveAs(imp, \&quot;Selection\&quot;, \&quot;&quot; + path + &quot;\&quot;);&quot;);&#xD;
        } else {&#xD;
            Recorder.record(&quot;saveAs&quot;, &quot;Selection&quot;, path);&#xD;
        }&#xD;
    }&#xD;
    return true;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_McmgEBUTEemIe6OhVnSywA" name="saveMultiple" specification="_McjcwBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    Macro.setOptions(null);&#xD;
    if (path == null) {&#xD;
        SaveDialog sd = new SaveDialog(&quot;Save ROIs...&quot;, &quot;RoiSet&quot;, &quot;.zip&quot;);&#xD;
        String name = sd.getFileName();&#xD;
        if (name == null) {&#xD;
            return false;&#xD;
        }&#xD;
        if (!(name.endsWith(&quot;.zip&quot;) || name.endsWith(&quot;.ZIP&quot;))) {&#xD;
            name = name + &quot;.zip&quot;;&#xD;
        }&#xD;
        String dir = sd.getDirectory();&#xD;
        path = dir + name;&#xD;
    }&#xD;
    try {&#xD;
        ZipOutputStream zos = new ZipOutputStream(new FileOutputStream(path));&#xD;
        DataOutputStream out = new DataOutputStream(new BufferedOutputStream(zos));&#xD;
        RoiEncoder re = new RoiEncoder(out);&#xD;
        for (int i = 0; i &lt; indexes.length; i++) {&#xD;
            String label = (String) listModel.getElementAt(indexes[i]);&#xD;
            Roi roi = (Roi) rois.get(label);&#xD;
            if (IJ.debugMode) {&#xD;
                IJ.log(&quot;saveMultiple: &quot; + i + &quot;  &quot; + label + &quot;  &quot; + roi);&#xD;
            }&#xD;
            if (roi == null) {&#xD;
                continue;&#xD;
            }&#xD;
            if (!label.endsWith(&quot;.roi&quot;)) {&#xD;
                label += &quot;.roi&quot;;&#xD;
            }&#xD;
            zos.putNextEntry(new ZipEntry(label));&#xD;
            re.write(roi);&#xD;
            out.flush();&#xD;
        }&#xD;
        out.close();&#xD;
    } catch (IOException e) {&#xD;
        error(&quot;&quot; + e);&#xD;
        return false;&#xD;
    }&#xD;
    if (record()) {&#xD;
        Recorder.record(&quot;roiManager&quot;, &quot;Save&quot;, path);&#xD;
    }&#xD;
    return true;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_McnuMRUTEemIe6OhVnSywA" name="listRois" specification="_McnuMBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    Roi[] rois = getRoisAsArray();&#xD;
    OverlayCommands.listRois(rois);&#xD;
    if (record()) {&#xD;
        Recorder.record(&quot;roiManager&quot;, &quot;List&quot;);&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_McqKcBUTEemIe6OhVnSywA" name="measure" specification="_McoVQBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    ImagePlus imp = getImage();&#xD;
    if (imp == null) {&#xD;
        return false;&#xD;
    }&#xD;
    int[] indexes = getSelectedIndexes();&#xD;
    if (indexes.length == 0) {&#xD;
        indexes = getAllIndexes();&#xD;
    }&#xD;
    if (indexes.length == 0) {&#xD;
        return false;&#xD;
    }&#xD;
    boolean allSliceOne = true;&#xD;
    for (int i = 0; i &lt; indexes.length; i++) {&#xD;
        String label = (String) listModel.getElementAt(indexes[i]);&#xD;
        Roi roi = (Roi) rois.get(label);&#xD;
        if (getSliceNumber(roi, label) > 1) {&#xD;
            allSliceOne = false;&#xD;
        }&#xD;
    }&#xD;
    int measurements = Analyzer.getMeasurements();&#xD;
    if (imp.getStackSize() > 1) {&#xD;
        Analyzer.setMeasurements(measurements | Measurements.SLICE);&#xD;
    }&#xD;
    int currentSlice = imp.getCurrentSlice();&#xD;
    Analyzer.setMeasurements(measurements &amp; (~Measurements.ADD_TO_OVERLAY));&#xD;
    for (int i = 0; i &lt; indexes.length; i++) {&#xD;
        if (restore(getImage(), indexes[i], !allSliceOne)) {&#xD;
            IJ.run(&quot;Measure&quot;);&#xD;
        } else {&#xD;
            break;&#xD;
        }&#xD;
    }&#xD;
    Analyzer.setMeasurements(measurements);&#xD;
    imp.setSlice(currentSlice);&#xD;
    if (indexes.length > 1) {&#xD;
        IJ.run(&quot;Select None&quot;);&#xD;
    }&#xD;
    if (record()) {&#xD;
        Recorder.record(&quot;roiManager&quot;, &quot;Measure&quot;);&#xD;
    }&#xD;
    return true;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MctNwRUTEemIe6OhVnSywA" name="multiMeasure" specification="_Mcr_oBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    ImagePlus imp = getImage();&#xD;
    if (imp == null) {&#xD;
        return false;&#xD;
    }&#xD;
    int[] indexes = getSelectedIndexes();&#xD;
    if (indexes.length == 0) {&#xD;
        indexes = getAllIndexes();&#xD;
    }&#xD;
    if (indexes.length == 0) {&#xD;
        return false;&#xD;
    }&#xD;
    int measurements = Analyzer.getMeasurements();&#xD;
    int nSlices = imp.getStackSize();&#xD;
    if (cmd != null) {&#xD;
        appendResults = cmd.contains(&quot;append&quot;) ? true : false;&#xD;
    }&#xD;
    if (IJ.isMacro()) {&#xD;
        if (nSlices > 1) {&#xD;
            measureAll = true;&#xD;
        }&#xD;
        onePerSlice = true;&#xD;
    } else {&#xD;
        GenericDialog gd = new GenericDialog(&quot;Multi Measure&quot;);&#xD;
        if (nSlices > 1) {&#xD;
            gd.addCheckbox(&quot;Measure all &quot; + nSlices + &quot; slices&quot;, measureAll);&#xD;
        }&#xD;
        gd.addCheckbox(&quot;One Row Per Slice&quot;, onePerSlice);&#xD;
        gd.addCheckbox(&quot;Append results&quot;, appendResults);&#xD;
        int columns = getColumnCount(imp, measurements) * indexes.length;&#xD;
        String str = nSlices == 1 ? &quot;this option&quot; : &quot;both options&quot;;&#xD;
        gd.setInsets(10, 25, 0);&#xD;
        gd.addMessage(&quot;Enabling &quot; + str + &quot; will result\n&quot; + &quot;in a table with &quot; + columns + &quot; columns.&quot;);&#xD;
        gd.showDialog();&#xD;
        if (gd.wasCanceled()) {&#xD;
            return false;&#xD;
        }&#xD;
        if (nSlices > 1) {&#xD;
            measureAll = gd.getNextBoolean();&#xD;
        }&#xD;
        onePerSlice = gd.getNextBoolean();&#xD;
        appendResults = gd.getNextBoolean();&#xD;
    }&#xD;
    if (!measureAll) {&#xD;
        nSlices = 1;&#xD;
    }&#xD;
    int currentSlice = imp.getCurrentSlice();&#xD;
    if (!onePerSlice) {&#xD;
        int measurements2 = nSlices > 1 ? measurements | Measurements.SLICE : measurements;&#xD;
        ResultsTable rt = new ResultsTable();&#xD;
        Analyzer analyzer = new Analyzer(imp, measurements2, rt);&#xD;
        for (int slice = 1; slice &lt;= nSlices; slice++) {&#xD;
            if (nSlices > 1) {&#xD;
                imp.setSliceWithoutUpdate(slice);&#xD;
            }&#xD;
            for (int i = 0; i &lt; indexes.length; i++) {&#xD;
                if (restoreWithoutUpdate(indexes[i])) {&#xD;
                    analyzer.measure();&#xD;
                } else {&#xD;
                    break;&#xD;
                }&#xD;
            }&#xD;
        }&#xD;
        rt.show(&quot;Results&quot;);&#xD;
        if (nSlices > 1) {&#xD;
            imp.setSlice(currentSlice);&#xD;
        }&#xD;
        return true;&#xD;
    }&#xD;
    // System Analyzer&#xD;
    Analyzer aSys = new Analyzer(imp);&#xD;
    ResultsTable rtSys = Analyzer.getResultsTable();&#xD;
    ResultsTable rtMulti = new ResultsTable();&#xD;
    if (appendResults &amp;&amp; mmResults != null) {&#xD;
        rtMulti = mmResults;&#xD;
    }&#xD;
    rtSys.reset();&#xD;
    for (int slice = 1; slice &lt;= nSlices; slice++) {&#xD;
        int sliceUse = slice;&#xD;
        if (nSlices == 1) {&#xD;
            sliceUse = currentSlice;&#xD;
        }&#xD;
        imp.setSliceWithoutUpdate(sliceUse);&#xD;
        rtMulti.incrementCounter();&#xD;
        if ((Analyzer.getMeasurements() &amp; Measurements.LABELS) != 0) {&#xD;
            rtMulti.addLabel(&quot;Label&quot;, imp.getTitle());&#xD;
        }&#xD;
        int roiIndex = 0;&#xD;
        for (int i = 0; i &lt; indexes.length; i++) {&#xD;
            if (restoreWithoutUpdate(indexes[i])) {&#xD;
                roiIndex++;&#xD;
                aSys.measure();&#xD;
                for (int j = 0; j &lt;= rtSys.getLastColumn(); j++) {&#xD;
                    float[] col = rtSys.getColumn(j);&#xD;
                    String head = rtSys.getColumnHeading(j);&#xD;
                    String suffix = &quot;&quot; + roiIndex;&#xD;
                    Roi roi = imp.getRoi();&#xD;
                    if (roi != null) {&#xD;
                        String name = roi.getName();&#xD;
                        if (name != null &amp;&amp; name.length() > 0 &amp;&amp; (name.length() &lt; 9 || !Character.isDigit(name.charAt(0)))) {&#xD;
                            suffix = &quot;(&quot; + name + &quot;)&quot;;&#xD;
                        }&#xD;
                    }&#xD;
                    if (head != null &amp;&amp; col != null &amp;&amp; !head.equals(&quot;Slice&quot;)) {&#xD;
                        rtMulti.addValue(head + suffix, rtSys.getValue(j, rtSys.getCounter() - 1));&#xD;
                    }&#xD;
                }&#xD;
            } else {&#xD;
                break;&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    mmResults = (ResultsTable) rtMulti.clone();&#xD;
    rtMulti.show(&quot;Results&quot;);&#xD;
    imp.setSlice(currentSlice);&#xD;
    if (indexes.length > 1) {&#xD;
        IJ.run(&quot;Select None&quot;);&#xD;
    }&#xD;
    if (record()) {&#xD;
        String arg = appendResults ? &quot; append&quot; : &quot;&quot;;&#xD;
        Recorder.record(&quot;roiManager&quot;, &quot;Multi Measure&quot; + arg);&#xD;
    }&#xD;
    return true;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mcw4IBUTEemIe6OhVnSywA" name="getColumnCount" specification="_Mcub4BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    ImageStatistics stats = imp.getStatistics(measurements);&#xD;
    ResultsTable rt = new ResultsTable();&#xD;
    Analyzer analyzer = new Analyzer(imp, measurements, rt);&#xD;
    analyzer.saveResults(stats, null);&#xD;
    int count = 0;&#xD;
    for (int i = 0; i &lt;= rt.getLastColumn(); i++) {&#xD;
        float[] col = rt.getColumn(i);&#xD;
        String head = rt.getColumnHeading(i);&#xD;
        if (head != null &amp;&amp; col != null) {&#xD;
            count++;&#xD;
        }&#xD;
    }&#xD;
    return count;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_McyGQBUTEemIe6OhVnSywA" name="multiPlot" specification="_McxfMBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    ImagePlus imp = getImage();&#xD;
    if (imp.getTitle().equals(&quot;Histogram&quot;)) {&#xD;
        imp = WindowManager.getImage(m.getWindowname());&#xD;
    }&#xD;
    if (imp == null) {&#xD;
        return;&#xD;
    }&#xD;
    int[] indexes = getSelectedIndexes();&#xD;
    if (indexes.length == 0) {&#xD;
        indexes = getAllIndexes();&#xD;
    }&#xD;
    int n = indexes.length;&#xD;
    if (n == 0) {&#xD;
        return;&#xD;
    }&#xD;
    Color[] colors = { Color.blue, Color.green, Color.magenta, Color.red, Color.cyan, Color.yellow };&#xD;
    if (n > colors.length) {&#xD;
        colors = new Color[n];&#xD;
        double c = 0;&#xD;
        double inc = 150.0 / n;&#xD;
        for (int i = 0; i &lt; n; i++) {&#xD;
            colors[i] = new Color((int) c, (int) c, (int) c);&#xD;
            c += inc;&#xD;
        }&#xD;
    }&#xD;
    int currentSlice = imp.getCurrentSlice();&#xD;
    double[][] x = new double[n][];&#xD;
    double[][] y = new double[n][];&#xD;
    double minY = Double.MAX_VALUE;&#xD;
    double maxY = -Double.MAX_VALUE;&#xD;
    double fixedMin = ProfilePlot.getFixedMin();&#xD;
    double fixedMax = ProfilePlot.getFixedMax();&#xD;
    boolean freeYScale = fixedMin == 0.0 &amp;&amp; fixedMax == 0.0;&#xD;
    if (!freeYScale) {&#xD;
        minY = fixedMin;&#xD;
        maxY = fixedMax;&#xD;
    }&#xD;
    int maxX = 0;&#xD;
    Calibration cal = imp.getCalibration();&#xD;
    double xinc = cal.pixelWidth;&#xD;
    for (int i = 0; i &lt; indexes.length; i++) {&#xD;
        if (!restore(getImage(), indexes[i], true)) {&#xD;
            break;&#xD;
        }&#xD;
        Roi roi = imp.getRoi();&#xD;
        if (roi == null) {&#xD;
            break;&#xD;
        }&#xD;
        if (roi.isArea() &amp;&amp; roi.getType() != Roi.RECTANGLE) {&#xD;
            IJ.run(imp, &quot;Area to Line&quot;, &quot;&quot;);&#xD;
        }&#xD;
        ProfilePlot pp = new ProfilePlot(imp, Prefs.verticalProfile || IJ.altKeyDown());&#xD;
        y[i] = pp.getProfile();&#xD;
        if (y[i] == null) {&#xD;
            break;&#xD;
        }&#xD;
        if (y[i].length > maxX) {&#xD;
            maxX = y[i].length;&#xD;
        }&#xD;
        if (freeYScale) {&#xD;
            double[] a = Tools.getMinMax(y[i]);&#xD;
            if (a[0] &lt; minY) {&#xD;
                minY = a[0];&#xD;
            }&#xD;
            if (a[1] > maxY) {&#xD;
                maxY = a[1];&#xD;
            }&#xD;
        }&#xD;
        double[] xx = new double[y[i].length];&#xD;
        for (int j = 0; j &lt; xx.length; j++) {&#xD;
            xx[j] = j * xinc;&#xD;
        }&#xD;
        x[i] = xx;&#xD;
    }&#xD;
    String xlabel = &quot;Distance (&quot; + cal.getUnits() + &quot;)&quot;;&#xD;
    Plot plot = new Plot(&quot;Profiles&quot;, xlabel, &quot;Value&quot;, x[0], y[0]);&#xD;
    plot.setLimits(0, maxX * xinc, minY, maxY);&#xD;
    for (int i = 1; i &lt; indexes.length; i++) {&#xD;
        plot.setColor(colors[i]);&#xD;
        if (x[i] != null) {&#xD;
            plot.addPoints(x[i], y[i], Plot.LINE);&#xD;
        }&#xD;
    }&#xD;
    plot.setColor(colors[0]);&#xD;
    if (x[0] != null) {&#xD;
        plot.show();&#xD;
    }&#xD;
    imp.setSlice(currentSlice);&#xD;
    if (indexes.length > 1) {&#xD;
        IJ.run(&quot;Select None&quot;);&#xD;
    }&#xD;
    if (record()) {&#xD;
        Recorder.record(&quot;roiManager&quot;, &quot;Multi Plot&quot;);&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MczUYBUTEemIe6OhVnSywA" name="drawOrFill" specification="_McyGQRUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    int[] indexes = getSelectedIndexes();&#xD;
    if (indexes.length == 0) {&#xD;
        indexes = getAllIndexes();&#xD;
    }&#xD;
    ImagePlus imp = WindowManager.getCurrentImage();&#xD;
    if (imp.getTitle().equals(&quot;Histogram&quot;)) {&#xD;
        imp = WindowManager.getImage(m.getWindowname());&#xD;
    }&#xD;
    imp.deleteRoi();&#xD;
    ImageProcessor ip = imp.getProcessor();&#xD;
    ip.setColor(Toolbar.getForegroundColor());&#xD;
    ip.snapshot();&#xD;
    Undo.setup(Undo.FILTER, imp);&#xD;
    Filler filler = mode == LABEL ? new Filler() : null;&#xD;
    int slice = imp.getCurrentSlice();&#xD;
    for (int i = 0; i &lt; indexes.length; i++) {&#xD;
        String name = (String) listModel.getElementAt(indexes[i]);&#xD;
        Roi roi = (Roi) rois.get(name);&#xD;
        int type = roi.getType();&#xD;
        if (roi == null) {&#xD;
            continue;&#xD;
        }&#xD;
        if (mode == FILL &amp;&amp; (type == Roi.POLYLINE || type == Roi.FREELINE || type == Roi.ANGLE)) {&#xD;
            mode = DRAW;&#xD;
        }&#xD;
        int slice2 = getSliceNumber(roi, name);&#xD;
        if (slice2 >= 1 &amp;&amp; slice2 &lt;= imp.getStackSize()) {&#xD;
            imp.setSlice(slice2);&#xD;
            ip = imp.getProcessor();&#xD;
            ip.setColor(Toolbar.getForegroundColor());&#xD;
            if (slice2 != slice) {&#xD;
                Undo.reset();&#xD;
            }&#xD;
        }&#xD;
        switch(mode) {&#xD;
            case DRAW:&#xD;
                roi.drawPixels(ip);&#xD;
                break;&#xD;
            case FILL:&#xD;
                ip.fill(roi);&#xD;
                break;&#xD;
            case LABEL:&#xD;
                roi.drawPixels(ip);&#xD;
                filler.drawLabel(imp, ip, i + 1, roi.getBounds());&#xD;
                break;&#xD;
        }&#xD;
    }&#xD;
    if (record() &amp;&amp; (mode == DRAW || mode == FILL)) {&#xD;
        Recorder.record(&quot;roiManager&quot;, mode == DRAW ? &quot;Draw&quot; : &quot;Fill&quot;);&#xD;
    }&#xD;
    if (showAllCheckbox.getState()) {&#xD;
        runCommand(&quot;show none&quot;);&#xD;
    }&#xD;
    imp.updateAndDraw();&#xD;
    return true;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mc2-wBUTEemIe6OhVnSywA" name="setProperties" specification="_Mc0igBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    boolean showDialog = color == null &amp;&amp; lineWidth == -1 &amp;&amp; fillColor == null;&#xD;
    int[] indexes = getSelectedIndexes();&#xD;
    if (indexes.length == 0) {&#xD;
        indexes = getAllIndexes();&#xD;
    }&#xD;
    int n = indexes.length;&#xD;
    if (n == 0) {&#xD;
        return;&#xD;
    }&#xD;
    Roi rpRoi = null;&#xD;
    String rpName = null;&#xD;
    Font font = null;&#xD;
    int justification = TextRoi.LEFT;&#xD;
    double opacity = -1;&#xD;
    int position = -1;&#xD;
    int cpos = -1, zpos = -1, tpos = -1;&#xD;
    if (showDialog) {&#xD;
        String label = (String) listModel.getElementAt(indexes[0]);&#xD;
        rpRoi = (Roi) rois.get(label);&#xD;
        if (n == 1) {&#xD;
            fillColor = rpRoi.getFillColor();&#xD;
            rpName = rpRoi.getName();&#xD;
        }&#xD;
        if (rpRoi.getStrokeColor() == null) {&#xD;
            rpRoi.setStrokeColor(Roi.getColor());&#xD;
        }&#xD;
        rpRoi = (Roi) rpRoi.clone();&#xD;
        if (n > 1) {&#xD;
            rpRoi.setName(&quot;range: &quot; + (indexes[0] + 1) + &quot;-&quot; + (indexes[n - 1] + 1));&#xD;
        }&#xD;
        rpRoi.setFillColor(fillColor);&#xD;
        RoiProperties rp = new RoiProperties(&quot;Properties&quot;, rpRoi);&#xD;
        if (!rp.showDialog()) {&#xD;
            return;&#xD;
        }&#xD;
        lineWidth = (int) rpRoi.getStrokeWidth();&#xD;
        defaultLineWidth = lineWidth;&#xD;
        color = rpRoi.getStrokeColor();&#xD;
        fillColor = rpRoi.getFillColor();&#xD;
        defaultColor = color;&#xD;
        position = rpRoi.getPosition();&#xD;
        cpos = rpRoi.getCPosition();&#xD;
        zpos = rpRoi.getZPosition();&#xD;
        tpos = rpRoi.getTPosition();&#xD;
        if (rpRoi instanceof TextRoi) {&#xD;
            font = ((TextRoi) rpRoi).getCurrentFont();&#xD;
            justification = ((TextRoi) rpRoi).getJustification();&#xD;
        }&#xD;
        if (rpRoi instanceof ImageRoi) {&#xD;
            opacity = ((ImageRoi) rpRoi).getOpacity();&#xD;
        }&#xD;
    }&#xD;
    ImagePlus imp = WindowManager.getCurrentImage();&#xD;
    if (imp.getTitle().equals(&quot;Histogram&quot;)) {&#xD;
        imp = WindowManager.getImage(m.getWindowname());&#xD;
    }&#xD;
    if (n == getCount() &amp;&amp; n > 1 &amp;&amp; !IJ.isMacro()) {&#xD;
        GenericDialog gd = new GenericDialog(&quot;ROI Manager&quot;);&#xD;
        gd.addMessage(&quot;Apply changes to all &quot; + n + &quot; selections?&quot;);&#xD;
        gd.showDialog();&#xD;
        if (gd.wasCanceled()) {&#xD;
            return;&#xD;
        }&#xD;
    }&#xD;
    for (int i = 0; i &lt; n; i++) {&#xD;
        String label = (String) listModel.getElementAt(indexes[i]);&#xD;
        Roi roi = (Roi) rois.get(label);&#xD;
        if (roi == null) {&#xD;
            continue;&#xD;
        }&#xD;
        //IJ.log(&quot;set &quot;+color+&quot;	 &quot;+lineWidth+&quot;	&quot;+fillColor);&#xD;
        if (color != null) {&#xD;
            roi.setStrokeColor(color);&#xD;
        }&#xD;
        if (lineWidth >= 0) {&#xD;
            roi.setStrokeWidth(lineWidth);&#xD;
        }&#xD;
        roi.setFillColor(fillColor);&#xD;
        if (cpos > 0 || zpos > 0 || tpos > 0) {&#xD;
            roi.setPosition(cpos, zpos, tpos);&#xD;
        } else if (position != -1) {&#xD;
            roi.setPosition(position);&#xD;
        }&#xD;
        if (roi instanceof TextRoi) {&#xD;
            roi.setImage(imp);&#xD;
            if (font != null) {&#xD;
                ((TextRoi) roi).setCurrentFont(font);&#xD;
            }&#xD;
            ((TextRoi) roi).setJustification(justification);&#xD;
            roi.setImage(null);&#xD;
        }&#xD;
        if ((roi instanceof ImageRoi) &amp;&amp; opacity != -1) {&#xD;
            ((ImageRoi) roi).setOpacity(opacity);&#xD;
        }&#xD;
    }&#xD;
    if (rpRoi != null &amp;&amp; rpName != null &amp;&amp; !rpRoi.getName().equals(rpName)) {&#xD;
        rename(rpRoi.getName());&#xD;
    }&#xD;
    ImageCanvas ic = imp != null ? imp.getCanvas() : null;&#xD;
    Roi roi = imp != null ? imp.getRoi() : null;&#xD;
    boolean showingAll = ic != null &amp;&amp; ic.getShowAllROIs();&#xD;
    if (roi != null &amp;&amp; (n == 1 || !showingAll)) {&#xD;
        if (lineWidth >= 0) {&#xD;
            roi.setStrokeWidth(lineWidth);&#xD;
        }&#xD;
        if (color != null) {&#xD;
            roi.setStrokeColor(color);&#xD;
        }&#xD;
        if (fillColor != null) {&#xD;
            roi.setFillColor(fillColor);&#xD;
        }&#xD;
        if (roi != null &amp;&amp; (roi instanceof TextRoi)) {&#xD;
            ((TextRoi) roi).setCurrentFont(font);&#xD;
            ((TextRoi) roi).setJustification(justification);&#xD;
        }&#xD;
        if (roi != null &amp;&amp; (roi instanceof ImageRoi) &amp;&amp; opacity != -1) {&#xD;
            ((ImageRoi) roi).setOpacity(opacity);&#xD;
        }&#xD;
    }&#xD;
    if (lineWidth > 1 &amp;&amp; !showingAll &amp;&amp; roi == null) {&#xD;
        showAll(SHOW_ALL);&#xD;
        showingAll = true;&#xD;
    }&#xD;
    if (imp != null) {&#xD;
        imp.draw();&#xD;
    }&#xD;
    if (record()) {&#xD;
        if (fillColor != null) {&#xD;
            Recorder.record(&quot;roiManager&quot;, &quot;Set Fill Color&quot;, Colors.colorToString(fillColor));&#xD;
        } else {&#xD;
            Recorder.record(&quot;roiManager&quot;, &quot;Set Color&quot;, Colors.colorToString(color != null ? color : Color.red));&#xD;
            Recorder.record(&quot;roiManager&quot;, &quot;Set Line Width&quot;, lineWidth);&#xD;
        }&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mc2-whUTEemIe6OhVnSywA" name="flatten" specification="_Mc2-wRUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    ImagePlus imp = WindowManager.getCurrentImage();&#xD;
    if (imp.getTitle().equals(&quot;Histogram&quot;)) {&#xD;
        imp = WindowManager.getImage(m.getWindowname());&#xD;
    }&#xD;
    if (imp == null) {&#xD;
        IJ.noImage();&#xD;
        return;&#xD;
    }&#xD;
    ImageCanvas ic = imp.getCanvas();&#xD;
    if ((ic != null &amp;&amp; ic.getShowAllList() == null) &amp;&amp; imp.getOverlay() == null &amp;&amp; imp.getRoi() == null) {&#xD;
        error(&quot;Image does not have an overlay or ROI&quot;);&#xD;
    } else {&#xD;
        // run Image>Flatten in separate thread&#xD;
        IJ.doCommand(&quot;Flatten&quot;);&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mc4z8BUTEemIe6OhVnSywA" name="combine" specification="_Mc4M4BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    ImagePlus imp = getImage();&#xD;
    if (imp == null) {&#xD;
        return;&#xD;
    }&#xD;
    int[] indexes = getSelectedIndexes();&#xD;
    if (indexes.length == 1) {&#xD;
        error(&quot;More than one item must be selected, or none&quot;);&#xD;
        return;&#xD;
    }&#xD;
    if (indexes.length == 0) {&#xD;
        indexes = getAllIndexes();&#xD;
    }&#xD;
    int nPointRois = 0;&#xD;
    for (int i = 0; i &lt; indexes.length; i++) {&#xD;
        Roi roi = (Roi) rois.get((String) listModel.getElementAt(indexes[i]));&#xD;
        if (roi.getType() == Roi.POINT) {&#xD;
            nPointRois++;&#xD;
        } else {&#xD;
            break;&#xD;
        }&#xD;
    }&#xD;
    if (nPointRois == indexes.length) {&#xD;
        combinePoints(imp, indexes);&#xD;
    } else {&#xD;
        combineRois(imp, indexes);&#xD;
    }&#xD;
    if (record()) {&#xD;
        Recorder.record(&quot;roiManager&quot;, &quot;Combine&quot;);&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mc73QRUTEemIe6OhVnSywA" name="combineRois" specification="_Mc6CEBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    ShapeRoi s1 = null, s2 = null;&#xD;
    ImageProcessor ip = null;&#xD;
    for (int i = 0; i &lt; indexes.length; i++) {&#xD;
        Roi roi = (Roi) rois.get((String) listModel.getElementAt(indexes[i]));&#xD;
        if (!roi.isArea()) {&#xD;
            if (ip == null) {&#xD;
                ip = new ByteProcessor(imp.getWidth(), imp.getHeight());&#xD;
            }&#xD;
            roi = convertLineToPolygon(roi, ip);&#xD;
        }&#xD;
        if (s1 == null) {&#xD;
            if (roi instanceof ShapeRoi) {&#xD;
                s1 = (ShapeRoi) roi;&#xD;
            } else {&#xD;
                s1 = new ShapeRoi(roi);&#xD;
            }&#xD;
            if (s1 == null) {&#xD;
                return;&#xD;
            }&#xD;
        } else {&#xD;
            if (roi instanceof ShapeRoi) {&#xD;
                s2 = (ShapeRoi) roi;&#xD;
            } else {&#xD;
                s2 = new ShapeRoi(roi);&#xD;
            }&#xD;
            if (s2 == null) {&#xD;
                continue;&#xD;
            }&#xD;
            s1.or(s2);&#xD;
        }&#xD;
    }&#xD;
    if (s1 != null) {&#xD;
        imp.setRoi(s1);&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mc-6kBUTEemIe6OhVnSywA" name="convertLineToPolygon" specification="_Mc9FYBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    if (roi == null) {&#xD;
        return null;&#xD;
    }&#xD;
    ip.resetRoi();&#xD;
    ip.setColor(0);&#xD;
    ip.fill();&#xD;
    ip.setColor(255);&#xD;
    if (roi.getType() == Roi.LINE &amp;&amp; roi.getStrokeWidth() > 1) {&#xD;
        ip.fillPolygon(roi.getPolygon());&#xD;
    } else {&#xD;
        roi.drawPixels(ip);&#xD;
    }&#xD;
    //new ImagePlus(&quot;ip&quot;, ip.duplicate()).show();&#xD;
    ip.setThreshold(255, 255, ImageProcessor.NO_LUT_UPDATE);&#xD;
    ThresholdToSelection tts = new ThresholdToSelection();&#xD;
    return tts.convert(ip);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MdCk8BUTEemIe6OhVnSywA" name="combinePoints" specification="_MdAIsBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    int n = indexes.length;&#xD;
    Polygon[] p = new Polygon[n];&#xD;
    int points = 0;&#xD;
    for (int i = 0; i &lt; n; i++) {&#xD;
        Roi roi = (Roi) rois.get((String) listModel.getElementAt(indexes[i]));&#xD;
        p[i] = roi.getPolygon();&#xD;
        points += p[i].npoints;&#xD;
    }&#xD;
    if (points == 0) {&#xD;
        return;&#xD;
    }&#xD;
    int[] xpoints = new int[points];&#xD;
    int[] ypoints = new int[points];&#xD;
    int index = 0;&#xD;
    for (int i = 0; i &lt; p.length; i++) {&#xD;
        for (int j = 0; j &lt; p[i].npoints; j++) {&#xD;
            xpoints[index] = p[i].xpoints[j];&#xD;
            ypoints[index] = p[i].ypoints[j];&#xD;
            index++;&#xD;
        }&#xD;
    }&#xD;
    imp.setRoi(new PointRoi(xpoints, ypoints, xpoints.length));&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MdDzEBUTEemIe6OhVnSywA" name="and" specification="_MdDMABUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    ImagePlus imp = getImage();&#xD;
    if (imp == null) {&#xD;
        return;&#xD;
    }&#xD;
    int[] indexes = getSelectedIndexes();&#xD;
    if (indexes.length == 1) {&#xD;
        error(&quot;More than one item must be selected, or none&quot;);&#xD;
        return;&#xD;
    }&#xD;
    if (indexes.length == 0) {&#xD;
        indexes = getAllIndexes();&#xD;
    }&#xD;
    ShapeRoi s1 = null, s2 = null;&#xD;
    for (int i = 0; i &lt; indexes.length; i++) {&#xD;
        Roi roi = (Roi) rois.get((String) listModel.getElementAt(indexes[i]));&#xD;
        if (roi == null || !roi.isArea()) {&#xD;
            continue;&#xD;
        }&#xD;
        if (s1 == null) {&#xD;
            if (roi instanceof ShapeRoi) {&#xD;
                s1 = (ShapeRoi) roi.clone();&#xD;
            } else {&#xD;
                s1 = new ShapeRoi(roi);&#xD;
            }&#xD;
            if (s1 == null) {&#xD;
                return;&#xD;
            }&#xD;
        } else {&#xD;
            if (roi instanceof ShapeRoi) {&#xD;
                s2 = (ShapeRoi) roi.clone();&#xD;
            } else {&#xD;
                s2 = new ShapeRoi(roi);&#xD;
            }&#xD;
            if (s2 == null) {&#xD;
                continue;&#xD;
            }&#xD;
            s1.and(s2);&#xD;
        }&#xD;
    }&#xD;
    if (s1 != null) {&#xD;
        imp.setRoi(s1);&#xD;
    }&#xD;
    if (record()) {&#xD;
        Recorder.record(&quot;roiManager&quot;, &quot;AND&quot;);&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MdFBMBUTEemIe6OhVnSywA" name="xor" specification="_MdEaIBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    ImagePlus imp = getImage();&#xD;
    if (imp == null) {&#xD;
        return;&#xD;
    }&#xD;
    int[] indexes = getSelectedIndexes();&#xD;
    if (indexes.length == 1) {&#xD;
        error(&quot;More than one item must be selected, or none&quot;);&#xD;
        return;&#xD;
    }&#xD;
    if (indexes.length == 0) {&#xD;
        indexes = getAllIndexes();&#xD;
    }&#xD;
    ShapeRoi s1 = null, s2 = null;&#xD;
    for (int i = 0; i &lt; indexes.length; i++) {&#xD;
        Roi roi = (Roi) rois.get((String) listModel.getElementAt(indexes[i]));&#xD;
        if (!roi.isArea()) {&#xD;
            continue;&#xD;
        }&#xD;
        if (s1 == null) {&#xD;
            if (roi instanceof ShapeRoi) {&#xD;
                s1 = (ShapeRoi) roi.clone();&#xD;
            } else {&#xD;
                s1 = new ShapeRoi(roi);&#xD;
            }&#xD;
            if (s1 == null) {&#xD;
                return;&#xD;
            }&#xD;
        } else {&#xD;
            if (roi instanceof ShapeRoi) {&#xD;
                s2 = (ShapeRoi) roi.clone();&#xD;
            } else {&#xD;
                s2 = new ShapeRoi(roi);&#xD;
            }&#xD;
            if (s2 == null) {&#xD;
                continue;&#xD;
            }&#xD;
            s1.xor(s2);&#xD;
        }&#xD;
    }&#xD;
    if (s1 != null) {&#xD;
        imp.setRoi(s1);&#xD;
    }&#xD;
    if (record()) {&#xD;
        Recorder.record(&quot;roiManager&quot;, &quot;XOR&quot;);&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MdGPUBUTEemIe6OhVnSywA" name="addParticles" specification="_MdFoQBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    String err = IJ.runMacroFile(&quot;ij.jar:AddParticles&quot;, null);&#xD;
    if (err != null &amp;&amp; err.length() > 0) {&#xD;
        error(err);&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MdHdcBUTEemIe6OhVnSywA" name="sort" specification="_MdG2YBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    int n = rois.size();&#xD;
    if (n == 0) {&#xD;
        return;&#xD;
    }&#xD;
    String[] labels = new String[n];&#xD;
    int index = 0;&#xD;
    for (Enumeration en = rois.keys(); en.hasMoreElements(); ) {&#xD;
        labels[index++] = (String) en.nextElement();&#xD;
    }&#xD;
    listModel.clear();&#xD;
    StringSorter.sort(labels);&#xD;
    for (int i = 0; i &lt; labels.length; i++) {&#xD;
        listModel.addElement(labels[i]);&#xD;
    }&#xD;
    if (record()) {&#xD;
        Recorder.record(&quot;roiManager&quot;, &quot;Sort&quot;);&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MdIrkRUTEemIe6OhVnSywA" name="specify" specification="_MdIrkBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    try {&#xD;
        IJ.run(&quot;Specify...&quot;);&#xD;
    } catch (Exception e) {&#xD;
        return;&#xD;
    }&#xD;
    runCommand(&quot;add&quot;);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MdQAUBUTEemIe6OhVnSywA" name="removePositions" specification="_MdOyMBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    int[] indexes = getSelectedIndexes();&#xD;
    if (indexes.length == 0) {&#xD;
        indexes = getAllIndexes();&#xD;
    }&#xD;
    if (indexes.length == 0) {&#xD;
        return;&#xD;
    }&#xD;
    boolean removeChannels = position == CHANNEL;&#xD;
    boolean removeFrames = position == FRAME;&#xD;
    boolean removeSlices = !(removeChannels || removeFrames);&#xD;
    if (position == SHOW_DIALOG) {&#xD;
        ImagePlus imp = WindowManager.getCurrentImage();&#xD;
        if (imp != null &amp;&amp; !imp.isHyperStack()) {&#xD;
            channel = false;&#xD;
            slice = true;&#xD;
            frame = false;&#xD;
        }&#xD;
        Font font = new Font(&quot;SansSerif&quot;, Font.BOLD, 12);&#xD;
        GenericDialog gd = new GenericDialog(&quot;Remove&quot;);&#xD;
        gd.setInsets(5, 15, 0);&#xD;
        gd.addMessage(&quot;Remove positions for:      &quot;, font);&#xD;
        gd.setInsets(6, 25, 0);&#xD;
        gd.addCheckbox(&quot;Channels:&quot;, channel);&#xD;
        gd.setInsets(0, 25, 0);&#xD;
        gd.addCheckbox(&quot;Slices:&quot;, slice);&#xD;
        gd.setInsets(0, 25, 0);&#xD;
        gd.addCheckbox(&quot;Frames:&quot;, frame);&#xD;
        gd.showDialog();&#xD;
        if (gd.wasCanceled()) {&#xD;
            return;&#xD;
        }&#xD;
        removeChannels = gd.getNextBoolean();&#xD;
        removeSlices = gd.getNextBoolean();&#xD;
        removeFrames = gd.getNextBoolean();&#xD;
        channel = removeChannels;&#xD;
        slice = removeSlices;&#xD;
        frame = removeFrames;&#xD;
    }&#xD;
    if (!removeChannels &amp;&amp; !removeSlices &amp;&amp; !removeFrames) {&#xD;
        slice = true;&#xD;
        return;&#xD;
    }&#xD;
    for (int i = 0; i &lt; indexes.length; i++) {&#xD;
        int index = indexes[i];&#xD;
        String name = (String) listModel.getElementAt(index);&#xD;
        Roi roi = (Roi) rois.get(name);&#xD;
        int c = roi.getCPosition();&#xD;
        int z = roi.getZPosition();&#xD;
        int t = roi.getTPosition();&#xD;
        if (c > 0 || t > 0) {&#xD;
            if (removeChannels) {&#xD;
                c = 0;&#xD;
            }&#xD;
            if (removeSlices) {&#xD;
                z = 0;&#xD;
            }&#xD;
            if (removeFrames) {&#xD;
                t = 0;&#xD;
            }&#xD;
            roi.setPosition(c, z, t);&#xD;
            continue;&#xD;
        }&#xD;
        int n = getSliceNumber(name);&#xD;
        if (n == -1) {&#xD;
            continue;&#xD;
        }&#xD;
        String name2 = name.substring(5, name.length());&#xD;
        name2 = getUniqueName(name2);&#xD;
        rois.remove(name);&#xD;
        roi.setName(name2);&#xD;
        roi.setPosition(0);&#xD;
        rois.put(name2, roi);&#xD;
        listModel.setElementAt(name2, index);&#xD;
    }&#xD;
    if (record()) {&#xD;
        if (removeChannels) {&#xD;
            Recorder.record(&quot;roiManager&quot;, &quot;Remove Channel Info&quot;);&#xD;
        }&#xD;
        if (removeSlices) {&#xD;
            Recorder.record(&quot;roiManager&quot;, &quot;Remove Slice Info&quot;);&#xD;
        }&#xD;
        if (removeFrames) {&#xD;
            Recorder.record(&quot;roiManager&quot;, &quot;Remove Frame Info&quot;);&#xD;
        }&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MdQnYRUTEemIe6OhVnSywA" name="help" specification="_MdQnYBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    String macro = &quot;run('URL...', 'url=&quot; + IJ.URL + &quot;/docs/menus/analyze.html#manager');&quot;;&#xD;
    new MacroRunner(macro);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MdSckBUTEemIe6OhVnSywA" name="labels" specification="_MdR1gBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    ImagePlus imp = WindowManager.getCurrentImage();&#xD;
    if (imp.getTitle().equals(&quot;Histogram&quot;)) {&#xD;
        imp = WindowManager.getImage(m.getWindowname());&#xD;
    }&#xD;
    if (imp != null) {&#xD;
        showAllCheckbox.setState(true);&#xD;
        //            labelsCheckbox.setState(true);&#xD;
        showAll(LABELS);&#xD;
    }&#xD;
    IJ.doCommand(&quot;Labels...&quot;);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MdURwBUTEemIe6OhVnSywA" name="options" specification="_MdTqsBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    Color c = ImageCanvas.getShowAllColor();&#xD;
    GenericDialog gd = new GenericDialog(&quot;Options&quot;);&#xD;
    //gd.addPanel(makeButtonPanel(gd), GridBagConstraints.CENTER, new Insets(5, 0, 0, 0));&#xD;
    gd.addCheckbox(&quot;Associate \&quot;Show All\&quot; ROIs with slices&quot;, Prefs.showAllSliceOnly);&#xD;
    gd.addCheckbox(&quot;Restore ROIs centered&quot;, restoreCentered);&#xD;
    gd.addCheckbox(&quot;Use ROI names as labels&quot;, Prefs.useNamesAsLabels);&#xD;
    gd.showDialog();&#xD;
    if (gd.wasCanceled()) {&#xD;
        if (c != ImageCanvas.getShowAllColor()) {&#xD;
            ImageCanvas.setShowAllColor(c);&#xD;
        }&#xD;
        return;&#xD;
    }&#xD;
    Prefs.showAllSliceOnly = gd.getNextBoolean();&#xD;
    restoreCentered = gd.getNextBoolean();&#xD;
    Prefs.useNamesAsLabels = gd.getNextBoolean();&#xD;
    ImagePlus imp = WindowManager.getCurrentImage();&#xD;
    if (imp.getTitle().equals(&quot;Histogram&quot;)) {&#xD;
        imp = WindowManager.getImage(m.getWindowname());&#xD;
    }&#xD;
    if (imp != null) {&#xD;
        Overlay overlay = imp.getOverlay();&#xD;
        if (overlay != null) {&#xD;
            overlay.drawNames(Prefs.useNamesAsLabels);&#xD;
        }&#xD;
        imp.draw();&#xD;
    }&#xD;
    if (record()) {&#xD;
        Recorder.record(&quot;roiManager&quot;, &quot;Associate&quot;, Prefs.showAllSliceOnly ? &quot;true&quot; : &quot;false&quot;);&#xD;
        Recorder.record(&quot;roiManager&quot;, &quot;Centered&quot;, restoreCentered ? &quot;true&quot; : &quot;false&quot;);&#xD;
        Recorder.record(&quot;roiManager&quot;, &quot;UseNames&quot;, Prefs.useNamesAsLabels ? &quot;true&quot; : &quot;false&quot;);&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MdXVEBUTEemIe6OhVnSywA" name="makeButtonPanel" specification="_MdVf4BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    Panel panel = new Panel();&#xD;
    //buttons.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 0));&#xD;
    colorButton = new Button(&quot;\&quot;Show All\&quot; Color...&quot;);&#xD;
    colorButton.addActionListener(this);&#xD;
    panel.add(colorButton);&#xD;
    return panel;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MdYjMBUTEemIe6OhVnSywA" name="setShowAllColor" specification="_MdX8IBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    ColorChooser cc = new ColorChooser(&quot;\&quot;Show All\&quot; Color&quot;, ImageCanvas.getShowAllColor(), false);&#xD;
    ImageCanvas.setShowAllColor(cc.getColor());&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MdZxURUTEemIe6OhVnSywA" name="split" specification="_MdZxUBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    ImagePlus imp = getImage();&#xD;
    if (imp == null) {&#xD;
        return;&#xD;
    }&#xD;
    Roi roi = imp.getRoi();&#xD;
    if (roi == null || roi.getType() != Roi.COMPOSITE) {&#xD;
        error(&quot;Image with composite selection required&quot;);&#xD;
        return;&#xD;
    }&#xD;
    boolean record = Recorder.record;&#xD;
    Recorder.record = false;&#xD;
    Roi[] rois = ((ShapeRoi) roi).getRois();&#xD;
    for (int i = 0; i &lt; rois.length; i++) {&#xD;
        imp.setRoi(rois[i]);&#xD;
        addRoi(false);&#xD;
    }&#xD;
    Recorder.record = record;&#xD;
    if (record()) {&#xD;
        Recorder.record(&quot;roiManager&quot;, &quot;Split&quot;);&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MdcNkBUTEemIe6OhVnSywA" name="showAll" specification="_Mda_cBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    ImagePlus imp = WindowManager.getCurrentImage();&#xD;
    if (imp.getTitle().equals(&quot;Histogram&quot;)) {&#xD;
        imp = WindowManager.getImage(m.getWindowname());&#xD;
    }&#xD;
    if (imp == null) {&#xD;
        return;&#xD;
    }&#xD;
    boolean showAll = mode == SHOW_ALL;&#xD;
    if (showAll) {&#xD;
        imageID = imp.getID();&#xD;
    }&#xD;
    if (mode == LABELS) {&#xD;
        showAll = true;&#xD;
        if (record()) {&#xD;
            Recorder.record(&quot;roiManager&quot;, &quot;Show All with labels&quot;);&#xD;
        }&#xD;
    } else if (mode == NO_LABELS) {&#xD;
        showAll = true;&#xD;
        if (record()) {&#xD;
            Recorder.record(&quot;roiManager&quot;, &quot;Show All without labels&quot;);&#xD;
        }&#xD;
    }&#xD;
    if (showAll) {&#xD;
        imp.deleteRoi();&#xD;
    }&#xD;
    Roi[] rois = getRoisAsArray();&#xD;
    if (mode == SHOW_NONE) {&#xD;
        removeOverlay(imp);&#xD;
        imageID = 0;&#xD;
    } else if (rois.length > 0) {&#xD;
        Overlay overlay = newOverlay();&#xD;
        for (int i = 0; i &lt; rois.length; i++) {&#xD;
            overlay.add(rois[i]);&#xD;
        }&#xD;
        setOverlay(imp, overlay);&#xD;
    }&#xD;
    if (record()) {&#xD;
        Recorder.record(&quot;roiManager&quot;, showAll ? &quot;Show All&quot; : &quot;Show None&quot;);&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MddbsRUTEemIe6OhVnSywA" name="updateShowAll" specification="_MddbsBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    ImagePlus imp = WindowManager.getCurrentImage();&#xD;
    if (imp.getTitle().equals(&quot;Histogram&quot;)) {&#xD;
        imp = WindowManager.getImage(m.getWindowname());&#xD;
    }&#xD;
    if (imp == null) {&#xD;
        return;&#xD;
    }&#xD;
    if (showAllCheckbox.getState()) {&#xD;
        Roi[] rois = getRoisAsArray();&#xD;
        if (rois.length > 0) {&#xD;
            Overlay overlay = newOverlay();&#xD;
            for (int i = 0; i &lt; rois.length; i++) {&#xD;
                overlay.add(rois[i]);&#xD;
            }&#xD;
            setOverlay(imp, overlay);&#xD;
        } else {&#xD;
            removeOverlay(imp);&#xD;
        }&#xD;
    } else {&#xD;
        removeOverlay(imp);&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mdf38RUTEemIe6OhVnSywA" name="getAllIndexes" specification="_Mdep0BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    int count = getCount();&#xD;
    int[] indexes = new int[count];&#xD;
    for (int i = 0; i &lt; count; i++) {&#xD;
        indexes[i] = i;&#xD;
    }&#xD;
    return indexes;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MdiUMBUTEemIe6OhVnSywA" name="getImage" specification="_MdhGEBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    ImagePlus imp = WindowManager.getCurrentImage();&#xD;
    if (imp == null) {&#xD;
        error(&quot;There are no images open.&quot;);&#xD;
        return null;&#xD;
    } else {&#xD;
        return imp;&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MdjiUBUTEemIe6OhVnSywA" name="error" specification="_Mdi7QBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    new MessageDialog(this, &quot;ROI Manager&quot;, msg);&#xD;
    Macro.abort();&#xD;
    return false;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mdl-kBUTEemIe6OhVnSywA" name="processWindowEvent" specification="_MdkwcBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    super.processWindowEvent(e);&#xD;
    if (e.getID() == WindowEvent.WINDOW_CLOSING) {&#xD;
        instance = null;&#xD;
    }&#xD;
    if (!IJ.isMacro()) {&#xD;
        ignoreInterrupts = false;&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mdoa0BUTEemIe6OhVnSywA" name="getInstance" specification="_MdnMsBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    return (BandManager) instance;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MdqQABUTEemIe6OhVnSywA" name="getInstance2" specification="_MdpB4BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    BandManager rm = getInstance();&#xD;
    return rm;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MdsFMRUTEemIe6OhVnSywA" name="getROIs" specification="_MdreIBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    return rois;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MdssQhUTEemIe6OhVnSywA" name="getList" specification="_MdssQBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    List awtList = new List();&#xD;
    for (int i = 0; i &lt; getCount(); i++) {&#xD;
        awtList.add((String) listModel.getElementAt(i));&#xD;
    }&#xD;
    int index = getSelectedIndex();&#xD;
    if (index >= 0) {&#xD;
        awtList.select(index);&#xD;
    }&#xD;
    return awtList;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MdssRRUTEemIe6OhVnSywA" name="getCount" specification="_MdssQxUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    return listModel.getSize();&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MduhcBUTEemIe6OhVnSywA" name="getRoiIndex" specification="_MdtTUBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    int n = getCount();&#xD;
    for (int i = 0; i &lt; n; i++) {&#xD;
        String label = (String) listModel.getElementAt(i);&#xD;
        Roi roi2 = (Roi) rois.get(label);&#xD;
        if (roi == roi2) {&#xD;
            return i;&#xD;
        }&#xD;
    }&#xD;
    return -1;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MdxkwRUTEemIe6OhVnSywA" name="getRoiIndexPos" specification="_MdvvkBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    int n = getCount();&#xD;
    for (int i = 0; i &lt; n; i++) {&#xD;
        String label = (String) listModel.getElementAt(i);&#xD;
        Roi roi2 = (Roi) rois.get(label);&#xD;
        if (roi2.contains(x, y)) {&#xD;
            return i;&#xD;
        }&#xD;
    }&#xD;
    return -1;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Md0BABUTEemIe6OhVnSywA" name="getSelectedIndex" specification="_Mdyy4BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    return list.getSelectedIndex();&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Md2dQBUTEemIe6OhVnSywA" name="getRoi" specification="_Md1PIBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    if (index &lt; 0 || index >= getCount()) {&#xD;
        return null;&#xD;
    }&#xD;
    String label = (String) listModel.getElementAt(index);&#xD;
    return (Roi) rois.get(label);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Md4ScBUTEemIe6OhVnSywA" name="getRoisAsArray" specification="_Md2dQRUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    int n = getCount();&#xD;
    Roi[] array = new Roi[n];&#xD;
    for (int i = 0; i &lt; n; i++) {&#xD;
        String label = (String) listModel.getElementAt(i);&#xD;
        array[i] = (Roi) rois.get(label);&#xD;
    }&#xD;
    return array;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Md7VwBUTEemIe6OhVnSywA" name="getBandsAsArray" specification="_Md45gBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    int n = getCount();&#xD;
    Band[] array = new Band[n];&#xD;
    for (int i = 0; i &lt; n; i++) {&#xD;
        String label = (String) listModel.getElementAt(i);&#xD;
        array[i] = (Band) bands.get(label);&#xD;
    }&#xD;
    return array;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Md9K8RUTEemIe6OhVnSywA" name="getSelectedRoisAsArray" specification="_Md7VwRUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    int[] indexes = getSelectedIndexes();&#xD;
    if (indexes.length == 0) {&#xD;
        indexes = getAllIndexes();&#xD;
    }&#xD;
    int n = indexes.length;&#xD;
    Roi[] array = new Roi[n];&#xD;
    for (int i = 0; i &lt; n; i++) {&#xD;
        String label = (String) listModel.getElementAt(indexes[i]);&#xD;
        array[i] = (Roi) rois.get(label);&#xD;
    }&#xD;
    return array;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MeAOQBUTEemIe6OhVnSywA" name="getName" specification="_Md-ZEBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    if (index >= 0 &amp;&amp; index &lt; getCount()) {&#xD;
        return (String) listModel.getElementAt(index);&#xD;
    } else {&#xD;
        return null;&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MeCqgBUTEemIe6OhVnSywA" name="getName" specification="_MeAOQRUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    int i = (int) Tools.parseDouble(index, -1);&#xD;
    BandManager instance = getInstance2();&#xD;
    if (instance != null &amp;&amp; i >= 0 &amp;&amp; i &lt; instance.getCount()) {&#xD;
        return (String) instance.listModel.getElementAt(i);&#xD;
    } else {&#xD;
        return &quot;null&quot;;&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MeGU4BUTEemIe6OhVnSywA" name="runCommand" specification="_MeD4oBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    cmd = cmd.toLowerCase();&#xD;
    macro = true;&#xD;
    boolean ok = true;&#xD;
    if (cmd.equals(&quot;add&quot;)) {&#xD;
        boolean shift = IJ.shiftKeyDown();&#xD;
        boolean alt = IJ.altKeyDown();&#xD;
        if (Interpreter.isBatchMode()) {&#xD;
            shift = false;&#xD;
            alt = false;&#xD;
        }&#xD;
        //setRoiPosition();&#xD;
        add(shift, alt);&#xD;
    } else if (cmd.equals(&quot;add &amp; draw&quot;)) {&#xD;
        addAndDraw(false);&#xD;
    } else if (cmd.equals(&quot;update&quot;)) {&#xD;
        update(true);&#xD;
    } else if (cmd.equals(&quot;update2&quot;)) {&#xD;
        update(false);&#xD;
    } else if (cmd.equals(&quot;delete&quot;)) {&#xD;
        delete(false);&#xD;
    } else if (cmd.equals(&quot;measure&quot;)) {&#xD;
        measure(COMMAND);&#xD;
    } else if (cmd.equals(&quot;draw&quot;)) {&#xD;
        drawOrFill(DRAW);&#xD;
    } else if (cmd.equals(&quot;fill&quot;)) {&#xD;
        drawOrFill(FILL);&#xD;
    } else if (cmd.equals(&quot;label&quot;)) {&#xD;
        drawOrFill(LABEL);&#xD;
    } else if (cmd.equals(&quot;and&quot;)) {&#xD;
        and();&#xD;
    } else if (cmd.equals(&quot;or&quot;) || cmd.equals(&quot;combine&quot;)) {&#xD;
        combine();&#xD;
    } else if (cmd.equals(&quot;xor&quot;)) {&#xD;
        xor();&#xD;
    } else if (cmd.equals(&quot;split&quot;)) {&#xD;
        split();&#xD;
    } else if (cmd.equals(&quot;sort&quot;)) {&#xD;
        sort();&#xD;
    } else if (cmd.startsWith(&quot;multi measure&quot;)) {&#xD;
        multiMeasure(cmd);&#xD;
    } else if (cmd.equals(&quot;multi plot&quot;)) {&#xD;
        multiPlot();&#xD;
    } else if (cmd.equals(&quot;show all&quot;)) {&#xD;
        if (WindowManager.getCurrentImage() != null) {&#xD;
            showAll(SHOW_ALL);&#xD;
            showAllCheckbox.setState(true);&#xD;
        }&#xD;
    } else if (cmd.equals(&quot;show none&quot;)) {&#xD;
        if (WindowManager.getCurrentImage() != null) {&#xD;
            showAll(SHOW_NONE);&#xD;
            showAllCheckbox.setState(false);&#xD;
        }&#xD;
    } else if (cmd.equals(&quot;show all with labels&quot;)) {&#xD;
        //            labelsCheckbox.setState(true);&#xD;
        showAll(LABELS);&#xD;
        if (Interpreter.isBatchMode()) {&#xD;
            IJ.wait(250);&#xD;
        }&#xD;
    } else if (cmd.equals(&quot;show all without labels&quot;)) {&#xD;
        //           labelsCheckbox.setState(false);&#xD;
        showAll(NO_LABELS);&#xD;
        if (Interpreter.isBatchMode()) {&#xD;
            IJ.wait(250);&#xD;
        }&#xD;
    } else if (cmd.equals(&quot;deselect&quot;) || cmd.indexOf(&quot;all&quot;) != -1) {&#xD;
        if (IJ.isMacOSX()) {&#xD;
            ignoreInterrupts = true;&#xD;
        }&#xD;
        select(-1);&#xD;
        IJ.wait(50);&#xD;
    } else if (cmd.equals(&quot;reset&quot;)) {&#xD;
        if (IJ.isMacOSX() &amp;&amp; IJ.isMacro()) {&#xD;
            ignoreInterrupts = true;&#xD;
        }&#xD;
        listModel.clear();&#xD;
        rois.clear();&#xD;
        updateShowAll();&#xD;
    } else if (cmd.equals(&quot;debug&quot;)) {&#xD;
    //IJ.log(&quot;Debug: &quot;+debugCount);&#xD;
    //for (int i=0; i&lt;debugCount; i++)&#xD;
    //	IJ.log(debug[i]);&#xD;
    } else if (cmd.equals(&quot;enable interrupts&quot;)) {&#xD;
        ignoreInterrupts = false;&#xD;
    } else if (cmd.equals(&quot;remove channel info&quot;)) {&#xD;
        removePositions(CHANNEL);&#xD;
    } else if (cmd.equals(&quot;remove slice info&quot;)) {&#xD;
        removePositions(SLICE);&#xD;
    } else if (cmd.equals(&quot;remove frame info&quot;)) {&#xD;
        removePositions(FRAME);&#xD;
    } else if (cmd.equals(&quot;interpolate rois&quot;)) {&#xD;
        interpolateRois();&#xD;
    } else {&#xD;
        ok = false;&#xD;
    }&#xD;
    macro = false;&#xD;
    return ok;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MeJYMRUTEemIe6OhVnSywA" name="runCommand" specification="_MeHjABUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    cmd = cmd.toLowerCase();&#xD;
    macro = true;&#xD;
    if (cmd.equals(&quot;open&quot;)) {&#xD;
        open(name);&#xD;
        macro = false;&#xD;
        return true;&#xD;
    } else if (cmd.equals(&quot;save&quot;)) {&#xD;
        save(name, false);&#xD;
    } else if (cmd.equals(&quot;save selected&quot;)) {&#xD;
        save(name, true);&#xD;
    } else if (cmd.equals(&quot;rename&quot;)) {&#xD;
        rename(name);&#xD;
        macro = false;&#xD;
        return true;&#xD;
    } else if (cmd.equals(&quot;set color&quot;)) {&#xD;
        Color color = Colors.decode(name, Color.cyan);&#xD;
        setProperties(color, -1, null);&#xD;
        macro = false;&#xD;
        return true;&#xD;
    } else if (cmd.equals(&quot;set fill color&quot;)) {&#xD;
        Color fillColor = Colors.decode(name, Color.cyan);&#xD;
        setProperties(null, -1, fillColor);&#xD;
        macro = false;&#xD;
        return true;&#xD;
    } else if (cmd.equals(&quot;set line width&quot;)) {&#xD;
        int lineWidth = (int) Tools.parseDouble(name, 0);&#xD;
        if (lineWidth >= 0) {&#xD;
            setProperties(null, lineWidth, null);&#xD;
        }&#xD;
        macro = false;&#xD;
        return true;&#xD;
    } else if (cmd.equals(&quot;associate&quot;)) {&#xD;
        Prefs.showAllSliceOnly = name.equals(&quot;true&quot;) ? true : false;&#xD;
        macro = false;&#xD;
        return true;&#xD;
    } else if (cmd.equals(&quot;centered&quot;)) {&#xD;
        restoreCentered = name.equals(&quot;true&quot;) ? true : false;&#xD;
        macro = false;&#xD;
        return true;&#xD;
    } else if (cmd.equals(&quot;usenames&quot;)) {&#xD;
        Prefs.useNamesAsLabels = name.equals(&quot;true&quot;) ? true : false;&#xD;
        macro = false;&#xD;
        /*            if (labelsCheckbox.getState()) {
             ImagePlus imp = WindowManager.getCurrentImage();
             if (imp != null) {
             imp.draw();
             }
             }*/&#xD;
        return true;&#xD;
    }&#xD;
    return false;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MeJ_RBUTEemIe6OhVnSywA" name="save" specification="_MeJ_QBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    if (!name.endsWith(&quot;.zip&quot;) &amp;&amp; !name.equals(&quot;&quot;)) {&#xD;
        return error(&quot;Name must end with '.zip'&quot;);&#xD;
    }&#xD;
    if (getCount() == 0) {&#xD;
        return error(&quot;The selection list is empty.&quot;);&#xD;
    }&#xD;
    int[] indexes = null;&#xD;
    if (saveSelected) {&#xD;
        indexes = getSelectedIndexes();&#xD;
        if (indexes.length == 0) {&#xD;
            indexes = getAllIndexes();&#xD;
        }&#xD;
    } else {&#xD;
        indexes = getAllIndexes();&#xD;
    }&#xD;
    boolean ok = false;&#xD;
    if (name.equals(&quot;&quot;)) {&#xD;
        ok = saveMultiple(indexes, null);&#xD;
    } else {&#xD;
        ok = saveMultiple(indexes, name);&#xD;
    }&#xD;
    macro = false;&#xD;
    return ok;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MeOQsRUTEemIe6OhVnSywA" name="runCommand" specification="_MeLNYBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    //setRoiPosition();&#xD;
    if (hexColor == null &amp;&amp; lineWidth == 1.0 &amp;&amp; (IJ.altKeyDown() &amp;&amp; !Interpreter.isBatchMode())) {&#xD;
        addRoi(true);&#xD;
    } else {&#xD;
        Color color = hexColor != null ? Colors.decode(hexColor, Color.cyan) : null;&#xD;
        addRoi(null, false, color, (int) Math.round(lineWidth));&#xD;
    }&#xD;
    return true;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MePe0RUTEemIe6OhVnSywA" name="setRoiPosition" specification="_MeO3wBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    if (imp == null || roi == null) {&#xD;
        return;&#xD;
    }&#xD;
    if (imp.isHyperStack()) {&#xD;
        roi.setPosition(imp.getChannel(), imp.getSlice(), imp.getFrame());&#xD;
    } else if (imp.getStackSize() > 1) {&#xD;
        roi.setPosition(imp.getCurrentSlice());&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MePe1BUTEemIe6OhVnSywA" name="select" specification="_MePe0hUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    select(null, index);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MeQs8BUTEemIe6OhVnSywA" name="select" specification="_MeQF4BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    selectedIndexes = null;&#xD;
    int n = getCount();&#xD;
    if (index &lt; 0) {&#xD;
        for (int i = 0; i &lt; n; i++) {&#xD;
            list.clearSelection();&#xD;
        }&#xD;
        if (record()) {&#xD;
            Recorder.record(&quot;bandManager&quot;, &quot;Deselect&quot;);&#xD;
        }&#xD;
        return;&#xD;
    }&#xD;
    if (index >= n) {&#xD;
        return;&#xD;
    }&#xD;
    boolean mm = list.getSelectionMode() == ListSelectionModel.MULTIPLE_INTERVAL_SELECTION;&#xD;
    if (mm) {&#xD;
        list.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);&#xD;
    }&#xD;
    int delay = 1;&#xD;
    long start = System.currentTimeMillis();&#xD;
    while (true) {&#xD;
        if (list.isSelectedIndex(index)) {&#xD;
            break;&#xD;
        }&#xD;
        list.clearSelection();&#xD;
        list.setSelectedIndex(index);&#xD;
    }&#xD;
    if (imp == null) {&#xD;
        imp = WindowManager.getCurrentImage();&#xD;
    }&#xD;
    if (imp != null) {&#xD;
        restore(imp, index, true);&#xD;
    }&#xD;
    if (mm) {&#xD;
        list.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MeSiIBUTEemIe6OhVnSywA" name="select" specification="_MeQs8RUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    if (!(shiftKeyDown || altKeyDown)) {&#xD;
        select(index);&#xD;
    }&#xD;
    ImagePlus imp = IJ.getImage();&#xD;
    if (imp == null) {&#xD;
        return;&#xD;
    }&#xD;
    Roi previousRoi = imp.getRoi();&#xD;
    if (previousRoi == null) {&#xD;
        select(index);&#xD;
        return;&#xD;
    }&#xD;
    Roi.previousRoi = (Roi) previousRoi.clone();&#xD;
    String label = (String) listModel.getElementAt(index);&#xD;
    Roi roi = (Roi) rois.get(label);&#xD;
    if (roi != null) {&#xD;
        roi.setImage(imp);&#xD;
        roi.update(shiftKeyDown, altKeyDown);&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MeU-YBUTEemIe6OhVnSywA" name="setEditMode" specification="_MeTwQBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    showAllCheckbox.setState(editMode);&#xD;
    //        labelsCheckbox.setState(editMode);&#xD;
    showAll(editMode ? LABELS : SHOW_NONE);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MeWzkBUTEemIe6OhVnSywA" name="close" specification="_MeWMgBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.setVisible(false);&#xD;
    WindowManager.removeWindow(this);&#xD;
    ImagePlus imp2 = WindowManager.getImage(&quot;Histogram&quot;);&#xD;
    delete_temp_band();&#xD;
    if (imp2 != null) {&#xD;
        imp2.close();&#xD;
    }&#xD;
    ImagePlus imp = WindowManager.getCurrentImage();&#xD;
    //        if (changes) {&#xD;
    if (getCount() != 0) {&#xD;
        Band[] bands1 = getBandsAsArray();&#xD;
        for (int k = 0; k &lt; m.finallanes.length; k++) {&#xD;
            Band[] temp = bandsofalane(bands1, k);&#xD;
            Roi[] temprois = getroifrombands(temp);&#xD;
            int[] res = new int[temprois.length];&#xD;
            for (int i = 0; i &lt; temprois.length; i++) {&#xD;
                int y = (int) temprois[i].getPolygon().getBounds().getCenterY();&#xD;
                res[i] = y;&#xD;
            }&#xD;
            Arrays.sort(res);&#xD;
            m.finallanes[k].setPositionbands(res);&#xD;
        }&#xD;
        //       m.setColour(colour);&#xD;
        m.setBands(bands1);&#xD;
        m.makebuttonstdavailable();&#xD;
        if (normalisationchanges) {&#xD;
            m.normalisation = false;&#xD;
        }&#xD;
    }&#xD;
    //        }&#xD;
    m.setColour(colour);&#xD;
    removeOverlay(imp);&#xD;
    IJ.setTool(&quot;rectangle&quot;);&#xD;
    // To update the database when the bands of a lane have changed&#xD;
    if (laneid != -1) {&#xD;
        try {&#xD;
            m.updatelanedb(laneid, markersedit);&#xD;
            imp.close();&#xD;
        } catch (FileNotFoundException ex) {&#xD;
            Logger.getLogger(BandManager.class.getName()).log(Level.SEVERE, null, ex);&#xD;
        } catch (UnsupportedEncodingException ex) {&#xD;
            Logger.getLogger(BandManager.class.getName()).log(Level.SEVERE, null, ex);&#xD;
        } catch (IOException ex) {&#xD;
            Logger.getLogger(BandManager.class.getName()).log(Level.SEVERE, null, ex);&#xD;
        }&#xD;
    }&#xD;
    if (a != null) {&#xD;
        try {&#xD;
            a.normalise();&#xD;
        } catch (Exception ex) {&#xD;
            Logger.getLogger(BandManager.class.getName()).log(Level.SEVERE, null, ex);&#xD;
        }&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MeYowRUTEemIe6OhVnSywA" name="moveRoisToOverlay" specification="_MeYBsBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    if (imp == null) {&#xD;
        return;&#xD;
    }&#xD;
    Roi[] rois = getRoisAsArray();&#xD;
    int n = rois.length;&#xD;
    Overlay overlay = imp.getOverlay();&#xD;
    if (overlay == null) {&#xD;
        overlay = newOverlay();&#xD;
    }&#xD;
    for (int i = 0; i &lt; n; i++) {&#xD;
        Roi roi = (Roi) rois[i].clone();&#xD;
        if (!Prefs.showAllSliceOnly) {&#xD;
            roi.setPosition(0);&#xD;
        }&#xD;
        if (roi.getStrokeWidth() == 1) {&#xD;
            roi.setStrokeWidth(0);&#xD;
        }&#xD;
        overlay.add(roi);&#xD;
    }&#xD;
    imp.setOverlay(overlay);&#xD;
    if (imp.getCanvas() != null) {&#xD;
        setOverlay(imp, null);&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mec6MBUTEemIe6OhVnSywA" name="mousePressed" specification="_Mead8BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    int x = e.getX(), y = e.getY();&#xD;
    if (e.isPopupTrigger() || e.isMetaDown()) {&#xD;
        pm.show(e.getComponent(), x, y);&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MefWcBUTEemIe6OhVnSywA" name="mouseWheelMoved" specification="_MedhQBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    synchronized (this) {&#xD;
        int index = list.getSelectedIndex();&#xD;
        int rot = event.getWheelRotation();&#xD;
        if (rot &lt; -1) {&#xD;
            rot = -1;&#xD;
        }&#xD;
        if (rot > 1) {&#xD;
            rot = 1;&#xD;
        }&#xD;
        index += rot;&#xD;
        if (index &lt; 0) {&#xD;
            index = 0;&#xD;
        }&#xD;
        if (index >= getCount()) {&#xD;
            index = getCount();&#xD;
        }&#xD;
        //IJ.log(index+&quot;  &quot;+rot);&#xD;
        select(index);&#xD;
        if (IJ.isWindows()) {&#xD;
            list.requestFocusInWindow();&#xD;
        }&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MeiZwBUTEemIe6OhVnSywA" name="setSelectedIndexes" specification="_MegkkBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    int count = getCount();&#xD;
    if (count == 0) {&#xD;
        return;&#xD;
    }&#xD;
    for (int i = 0; i &lt; indexes.length; i++) {&#xD;
        if (indexes[i] &lt; 0) {&#xD;
            indexes[i] = 0;&#xD;
        }&#xD;
        if (indexes[i] >= count) {&#xD;
            indexes[i] = count - 1;&#xD;
        }&#xD;
    }&#xD;
    selectedIndexes = indexes;&#xD;
    list.setSelectedIndices(indexes);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MeldEBUTEemIe6OhVnSywA" name="getSelectedIndexes" specification="_Mejn4BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    if (selectedIndexes != null) {&#xD;
        int[] indexes = selectedIndexes;&#xD;
        selectedIndexes = null;&#xD;
        return indexes;&#xD;
    } else {&#xD;
        return list.getSelectedIndices();&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MemEIBUTEemIe6OhVnSywA" name="newOverlay" specification="_MeldERUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    Overlay overlay = OverlayLabels.createOverlay();&#xD;
    //        overlay.drawLabels(labelsCheckbox.getState());&#xD;
    if (overlay.getLabelFont() == null &amp;&amp; overlay.getLabelColor() == null) {&#xD;
        overlay.setLabelColor(Color.white);&#xD;
        overlay.drawBackgrounds(true);&#xD;
    }&#xD;
    overlay.drawNames(Prefs.useNamesAsLabels);&#xD;
    return overlay;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Men5UBUTEemIe6OhVnSywA" name="removeOverlay" specification="_MemrMBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    if (imp != null &amp;&amp; imp.getCanvas() != null) {&#xD;
        setOverlay(imp, null);&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MerjsBUTEemIe6OhVnSywA" name="setOverlay" specification="_MepHcBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    if (imp == null) {&#xD;
        return;&#xD;
    }&#xD;
    ImageCanvas ic = imp.getCanvas();&#xD;
    if (ic == null) {&#xD;
        imp.setOverlay(overlay);&#xD;
        return;&#xD;
    }&#xD;
    ic.setShowAllList(overlay);&#xD;
    imp.draw();&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MesKwRUTEemIe6OhVnSywA" name="record" specification="_MerjsRUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    return Recorder.record &amp;&amp; !IJ.isMacro();&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Met_8BUTEemIe6OhVnSywA" name="mouseReleased" specification="_MesKwhUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MewcMBUTEemIe6OhVnSywA" name="mouseClicked" specification="_MevOEBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MexDQhUTEemIe6OhVnSywA" name="mouseEntered" specification="_MexDQBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MexqUhUTEemIe6OhVnSywA" name="mouseExited" specification="_MexqUBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MeyRYhUTEemIe6OhVnSywA" name="valueChanged" specification="_MeyRYBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    if (e.getValueIsAdjusting()) {&#xD;
        return;&#xD;
    }&#xD;
    if (getCount() == 0) {&#xD;
        if (record()) {&#xD;
            Recorder.record(&quot;roiManager&quot;, &quot;Deselect&quot;);&#xD;
        }&#xD;
        return;&#xD;
    }&#xD;
    int[] selected = list.getSelectedIndices();&#xD;
    if (selected.length == 0) {&#xD;
        return;&#xD;
    }&#xD;
    if (WindowManager.getCurrentImage() != null) {&#xD;
        if (selected.length == 1) {&#xD;
            restore(getImage(), selected[0], true);&#xD;
        }&#xD;
        if (record()) {&#xD;
            String arg = Arrays.toString(selected);&#xD;
            if (!arg.startsWith(&quot;[&quot;) || !arg.endsWith(&quot;]&quot;)) {&#xD;
                return;&#xD;
            }&#xD;
            arg = arg.substring(1, arg.length() - 1);&#xD;
            arg = arg.replace(&quot; &quot;, &quot;&quot;);&#xD;
            if (Recorder.scriptMode()) {&#xD;
                if (selected.length == 1) {&#xD;
                    Recorder.recordCall(&quot;rm.select(&quot; + arg + &quot;);&quot;);&#xD;
                } else {&#xD;
                    Recorder.recordCall(&quot;rm.setSelectedIndexes([&quot; + arg + &quot;]);&quot;);&#xD;
                }&#xD;
            } else {&#xD;
                if (selected.length == 1) {&#xD;
                    Recorder.recordString(&quot;roiManager(\&quot;Select\&quot;, &quot; + arg + &quot;);\n&quot;);&#xD;
                } else {&#xD;
                    Recorder.recordString(&quot;roiManager(\&quot;Select\&quot;, newArray(&quot; + arg + &quot;));\n&quot;);&#xD;
                }&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MezfgBUTEemIe6OhVnSywA" name="windowActivated" specification="_Mey4cBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    super.windowActivated(e);&#xD;
    ImagePlus imp = WindowManager.getCurrentImage();&#xD;
    if (imp != null) {&#xD;
        if (imageID != 0 &amp;&amp; imp.getID() != imageID) {&#xD;
            showAll(SHOW_NONE);&#xD;
            showAllCheckbox.setState(false);&#xD;
        }&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Me1UsBUTEemIe6OhVnSywA" name="fix_standard" specification="_Me0toBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    //To change body of generated methods, choose Tools | Templates.&#xD;
    throw new UnsupportedOperationException(&quot;Not supported yet.&quot;);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Me17wRUTEemIe6OhVnSywA" name="auto_detect" specification="_Me17wBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    int count = getCount();&#xD;
    if (0 &lt; count) {&#xD;
        String msg = &quot;This will remove the previous selection&quot;;&#xD;
        GenericDialog d = new GenericDialog(&quot;Confirmation&quot;, this);&#xD;
        d.addMessage(msg);&#xD;
        d.showDialog();&#xD;
        if (d.wasCanceled()) {&#xD;
            return;&#xD;
        }&#xD;
        delete_without_asking(true);&#xD;
        restart_bands();&#xD;
        number_of_bands = 1;&#xD;
    }&#xD;
    ImagePlus imp = WindowManager.getCurrentImage();&#xD;
    WindowManager.setCurrentWindow(imp.getWindow());&#xD;
    GenericDialog gd;&#xD;
    if (a == null) {&#xD;
        gd = new GenericDialog(&quot;Band Detection&quot;);&#xD;
    } else {&#xD;
        gd = new GenericDialog(&quot;Step 3 of 5. Band Detection&quot;);&#xD;
    }&#xD;
    gd.addMessage(&quot;Do you want to detect bands globally or lane by lane?&quot;);&#xD;
    gd.addMessage(&quot;&quot;);&#xD;
    gd.enableYesNoCancel(&quot;Global&quot;, &quot;Lane by lane&quot;);&#xD;
    gd.hideCancelButton();&#xD;
    gd.showDialog();&#xD;
    if (gd.wasOKed()) {&#xD;
        BandSegmentation bs = new BandSegmentation(imp, this, bgCheckbox.getState(), m.getLanes(), m);&#xD;
        if (a == null) {&#xD;
            pfr = new PlugInFilterRunner(bs, &quot;Band Detection&quot;, &quot;&quot;);&#xD;
        } else {&#xD;
            pfr = new PlugInFilterRunner(bs, &quot;Step 3 of 5. Band Detection&quot;, &quot;&quot;);&#xD;
        }&#xD;
    } else if (gd.wasCanceled()) {&#xD;
    } else {&#xD;
        BandSegmentationLane bs = new BandSegmentationLane(imp, this, bgCheckbox.getState(), m);&#xD;
        if (a == null) {&#xD;
            pfr = new PlugInFilterRunner(bs, &quot;Band Detection&quot;, &quot;&quot;);&#xD;
        } else {&#xD;
            pfr = new PlugInFilterRunner(bs, &quot;Step 3 of 5. Band Detection&quot;, &quot;&quot;);&#xD;
        }&#xD;
    }&#xD;
    runCommand(&quot;show all with labels&quot;);&#xD;
    changes = true;&#xD;
    redooperations = new ArrayList&lt;>();&#xD;
    undooperations = new ArrayList&lt;>();&#xD;
//runCommand(&quot;show all with labels&quot;);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Me17xBUTEemIe6OhVnSywA" name="getLaneid" specification="_Me17whUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    return laneid;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Me4YABUTEemIe6OhVnSywA" name="setLaneid" specification="_Me3J4BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.laneid = laneid;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Me5mIRUTEemIe6OhVnSywA" name="delete_standard" specification="_Me5mIBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    //To change body of generated methods, choose Tools | Templates.&#xD;
    throw new UnsupportedOperationException(&quot;Not supported yet.&quot;);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Me6NMRUTEemIe6OhVnSywA" name="restart_bands" specification="_Me6NMBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    number_of_bands = 1;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Me9QgBUTEemIe6OhVnSywA" name="IntegerArraytointarray" specification="_Me60QBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    int[] res = new int[a.length];&#xD;
    for (int i = 0; i &lt; a.length; i++) {&#xD;
        res[i] = a[i];&#xD;
    }&#xD;
    return res;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Me_FsRUTEemIe6OhVnSywA" name="setAssistant" specification="_Me-eoBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.a = aThis;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Me_swRUTEemIe6OhVnSywA" name="pick_colour" specification="_Me_swBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    ColourPicker cp = new ColourPicker(getRoisAsArray(), this);&#xD;
    pfr = new PlugInFilterRunner(cp, &quot;Colours&quot;, &quot;&quot;);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MfCJARUTEemIe6OhVnSywA" name="change_colour" specification="_MfA64BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    Band[] bands = getBandsAsArray();&#xD;
    Roi[] rois = getRoisAsArray();&#xD;
    colour = c;&#xD;
    for (int i = 0; i &lt; rois.length; i++) {&#xD;
        if (m.finallanes[bands[i].getLane()].isIsstandard()) {&#xD;
            if (c == Color.RED) {&#xD;
                rois[i].setFillColor(Color.BLUE);&#xD;
            } else {&#xD;
                rois[i].setFillColor(Color.RED);&#xD;
            }&#xD;
        } else {&#xD;
            rois[i].setFillColor(c);&#xD;
        }&#xD;
    }&#xD;
    updateShowAll();&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MfCwEhUTEemIe6OhVnSywA" name="setColour" specification="_MfCwEBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.colour = colour;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MfD-MhUTEemIe6OhVnSywA" name="getColour" specification="_MfD-MBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    return colour;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MfElQRUTEemIe6OhVnSywA" name="undo" specification="_MfElQBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    ImagePlus imp = WindowManager.getCurrentImage();&#xD;
    isundo = true;&#xD;
    if (undooperations != null &amp;&amp; !undooperations.isEmpty()) {&#xD;
        BandOperation bo = undooperations.get(undooperations.size() - 1);&#xD;
        if (bo.isAddBand()) {&#xD;
            list.setSelectedIndex(listModel.size() - 1);&#xD;
            delete(false);&#xD;
        } else {&#xD;
            PointRoi pr = new PointRoi(bo.getX(), bo.getY());&#xD;
            imp.setRoi(pr);&#xD;
            add_band();&#xD;
        }&#xD;
        redooperations.add(bo);&#xD;
        undooperations.remove(undooperations.size() - 1);&#xD;
    } else {&#xD;
        JOptionPane.showMessageDialog(this, &quot;Nothing to undo.&quot;, &quot;&quot;, JOptionPane.INFORMATION_MESSAGE);&#xD;
    }&#xD;
    isundo = false;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MfGacBUTEemIe6OhVnSywA" name="redo" specification="_MfFzYBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    ImagePlus imp = WindowManager.getCurrentImage();&#xD;
    isundo = true;&#xD;
    if (redooperations != null &amp;&amp; !redooperations.isEmpty()) {&#xD;
        BandOperation bo = redooperations.get(redooperations.size() - 1);&#xD;
        if (bo.isAddBand()) {&#xD;
            PointRoi pr = new PointRoi(bo.getX(), bo.getY());&#xD;
            imp.setRoi(pr);&#xD;
            add_band();&#xD;
        } else {&#xD;
            list.setSelectedIndex(listModel.size() - 1);&#xD;
            delete(false);&#xD;
        }&#xD;
        undooperations.add(bo);&#xD;
        redooperations.remove(redooperations.size() - 1);&#xD;
    } else {&#xD;
        JOptionPane.showMessageDialog(this, &quot;Nothing to redo.&quot;, &quot;&quot;, JOptionPane.INFORMATION_MESSAGE);&#xD;
    }&#xD;
    isundo = false;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MfHokRUTEemIe6OhVnSywA" name="activatehistogramdisplay" specification="_MfHBgBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    histogramCheckbox.setState(b);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MfJdwBUTEemIe6OhVnSywA" name="getAssistant" specification="_MfI2sBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    return a;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MfL6ARUTEemIe6OhVnSywA" name="setMarkersedit" specification="_MfKE0BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.markersedit = markersedit;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MfNvMBUTEemIe6OhVnSywA" name="setbgcheckboxstate" specification="_MfNIIBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    bgCheckbox.setState(b);&#xD;
</body>
              </ownedBehavior>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MazwVBUTEemIe6OhVnSywA" name="BandManager" visibility="public" method="_Ma1lgBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_Ma0-cRUTEemIe6OhVnSywA" name="m" type="_MEzrIBUTEemIe6OhVnSywA"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_Ma1lgRUTEemIe6OhVnSywA" name="BandManager" visibility="public" method="_Ma3asRUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_Ma2zoRUTEemIe6OhVnSywA" name="m" type="_MEzrIBUTEemIe6OhVnSywA"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_Ma3asBUTEemIe6OhVnSywA" name="show">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_Ma4BwBUTEemIe6OhVnSywA" name="BandManager" visibility="public" method="_Ma528BUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_Ma5P4RUTEemIe6OhVnSywA" name="hideWindow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_Ma528RUTEemIe6OhVnSywA" name="showWindow" visibility="private" method="_Ma6eABUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_Ma7FEBUTEemIe6OhVnSywA" name="addButton" visibility="private" method="_Ma8TMRUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_Ma8TMBUTEemIe6OhVnSywA" name="label"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_Ma86QBUTEemIe6OhVnSywA" name="actionPerformed" visibility="public" method="_Ma9hURUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_Ma9hUBUTEemIe6OhVnSywA" name="e"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_Ma-IYBUTEemIe6OhVnSywA" name="newimpbands" visibility="public" method="_Ma_WgBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_Ma-vcBUTEemIe6OhVnSywA" name="imp"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MbBLsBUTEemIe6OhVnSywA" name="newimpbandswithoutshow" visibility="public" method="_MbE2EBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MbCZ0BUTEemIe6OhVnSywA" direction="return"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MbDn8BUTEemIe6OhVnSywA" name="imp"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MbFdIBUTEemIe6OhVnSywA" name="showprofile" visibility="public" method="_MbH5YBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MbGEMBUTEemIe6OhVnSywA" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MbHSUBUTEemIe6OhVnSywA" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MbJHgBUTEemIe6OhVnSywA" name="showprofile" visibility="public" method="_MbMx4BUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MbKVoBUTEemIe6OhVnSywA" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MbK8sBUTEemIe6OhVnSywA" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MbLjwBUTEemIe6OhVnSywA" name="marker">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MbNY8BUTEemIe6OhVnSywA" name="profile" visibility="public" method="_MbQcQBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MbOnEBUTEemIe6OhVnSywA" direction="return"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MbPOIBUTEemIe6OhVnSywA" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MbP1MBUTEemIe6OhVnSywA" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MbRqYBUTEemIe6OhVnSywA" name="add_temp_band" visibility="public" method="_MbTfkBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MbSRcBUTEemIe6OhVnSywA" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MbUtsBUTEemIe6OhVnSywA" name="delete_temp_band" visibility="public" method="_MbUtsRUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MbUtshUTEemIe6OhVnSywA" name="add_band" visibility="public" method="_MbVUwBUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MbVUwRUTEemIe6OhVnSywA" name="add_band" visibility="public" method="_MbV70RUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MbV70BUTEemIe6OhVnSywA" name="markers">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MbV70hUTEemIe6OhVnSywA" name="interpolateRois" visibility="private" method="_MbWi4BUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MbWi4RUTEemIe6OhVnSywA" name="ishistogramcheckboxselected" visibility="public" method="_MbWi4xUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MbWi4hUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MbXJ8BUTEemIe6OhVnSywA" name="itemStateChanged" visibility="public" method="_MbXxARUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MbXxABUTEemIe6OhVnSywA" name="e"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MbXxAhUTEemIe6OhVnSywA" name="add" visibility="private" method="_MbYYEhUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MbYYEBUTEemIe6OhVnSywA" name="shiftKeyDown">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MbYYERUTEemIe6OhVnSywA" name="altKeyDown">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_Mba0UBUTEemIe6OhVnSywA" name="addRoi" visibility="public" method="_MbcpgBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MbcCcBUTEemIe6OhVnSywA" name="roi"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MbdQkBUTEemIe6OhVnSywA" name="addRoi" visibility="public" method="_Mbd3oRUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MbdQkRUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mbd3oBUTEemIe6OhVnSywA" name="promptForName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MbfFwBUTEemIe6OhVnSywA" name="addRoi" visibility="private" method="_MbklUBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mbfs0BUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mbg68BUTEemIe6OhVnSywA" name="roi"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MbiJEBUTEemIe6OhVnSywA" name="promptForName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MbjXMBUTEemIe6OhVnSywA" name="color"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mbj-QBUTEemIe6OhVnSywA" name="lineWidth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MblzcBUTEemIe6OhVnSywA" name="recordAdd" visibility="private" method="_MboPsBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MbmagBUTEemIe6OhVnSywA" name="color"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MbnBkBUTEemIe6OhVnSywA" name="lineWidth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_Mbo2wBUTEemIe6OhVnSywA" name="getHex" visibility="private" method="_MbrTABUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mbpd0BUTEemIe6OhVnSywA" direction="return"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mbqr8BUTEemIe6OhVnSywA" name="color"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MbtIMBUTEemIe6OhVnSywA" name="add" visibility="public" method="_MbwykBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MbtvQBUTEemIe6OhVnSywA" name="imp"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mbu9YBUTEemIe6OhVnSywA" name="roi"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MbwLgBUTEemIe6OhVnSywA" name="n">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MbyAsBUTEemIe6OhVnSywA" name="add" visibility="public" method="_Mb1rEBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MbynwBUTEemIe6OhVnSywA" name="imp"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mbz14BUTEemIe6OhVnSywA" name="roi"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mb1EABUTEemIe6OhVnSywA" name="label"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_Mb25MBUTEemIe6OhVnSywA" name="add" visibility="public" method="_Mb58gRUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mb3gQBUTEemIe6OhVnSywA" name="imp"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mb4uYBUTEemIe6OhVnSywA" name="roi"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mb5VcBUTEemIe6OhVnSywA" name="n">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mb58gBUTEemIe6OhVnSywA" name="lane">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_Mb58ghUTEemIe6OhVnSywA" name="isStandardName" visibility="private" method="_Mb7xsBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mb6jkBUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mb6jkRUTEemIe6OhVnSywA" name="name"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_Mb7xsRUTEemIe6OhVnSywA" name="getLabel" visibility="private" method="_Mb_cEBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mb8YwBUTEemIe6OhVnSywA" direction="return"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mb8_0BUTEemIe6OhVnSywA" name="imp"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mb-N8BUTEemIe6OhVnSywA" name="roi"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mb-1ABUTEemIe6OhVnSywA" name="n">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_McAqMBUTEemIe6OhVnSywA" name="addAndDraw" visibility="private" method="_McB4UBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_McBRQBUTEemIe6OhVnSywA" name="altKeyDown">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_McDGcBUTEemIe6OhVnSywA" name="delete" visibility="public" method="_McFisBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_McDtgBUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_McE7oBUTEemIe6OhVnSywA" name="replacing">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_McGJwBUTEemIe6OhVnSywA" name="delete_without_asking" visibility="public" method="_McImABUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_McGw0BUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_McH-8BUTEemIe6OhVnSywA" name="replacing">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_McJ0IBUTEemIe6OhVnSywA" name="update" visibility="private" method="_McLCQRUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_McKbMBUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_McLCQBUTEemIe6OhVnSywA" name="clone">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_McLpUBUTEemIe6OhVnSywA" name="rename" visibility="private" method="_McMQYBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_McLpURUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_McLpUhUTEemIe6OhVnSywA" name="name2"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_McMQYRUTEemIe6OhVnSywA" name="promptForName" visibility="private" method="_McM3cRUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_McMQYhUTEemIe6OhVnSywA" direction="return"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_McM3cBUTEemIe6OhVnSywA" name="name"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_McNegBUTEemIe6OhVnSywA" name="restore" visibility="private" method="_McP6wBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_McNegRUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_McNeghUTEemIe6OhVnSywA" name="imp"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_McOsoBUTEemIe6OhVnSywA" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_McPTsBUTEemIe6OhVnSywA" name="setSlice">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_McQh0BUTEemIe6OhVnSywA" name="restoreWithoutUpdate" visibility="private" method="_McSXABUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_McRI4BUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_McRv8BUTEemIe6OhVnSywA" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_McS-EBUTEemIe6OhVnSywA" name="getSliceNumber" visibility="public" method="_McUMMRUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_McTlIBUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_McUMMBUTEemIe6OhVnSywA" name="label"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_McWBYBUTEemIe6OhVnSywA" name="getSliceNumber" visibility="private" method="_McX2kBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_McWocBUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_McWocRUTEemIe6OhVnSywA" name="roi"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_McXPgBUTEemIe6OhVnSywA" name="label"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_McZEsBUTEemIe6OhVnSywA" name="open" visibility="private" method="_McZrwBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_McZEsRUTEemIe6OhVnSywA" name="path"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_Mcbg8BUTEemIe6OhVnSywA" name="openZip" visibility="private" method="_MccvEBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MccIABUTEemIe6OhVnSywA" name="path"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_Mcd9MBUTEemIe6OhVnSywA" name="getUniqueName" visibility="private" method="_MchAgBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_McekQBUTEemIe6OhVnSywA" direction="return"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_McfyYBUTEemIe6OhVnSywA" name="name"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MchnkBUTEemIe6OhVnSywA" name="save" visibility="private" method="_Mci1sBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MciOoBUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_McjcwBUTEemIe6OhVnSywA" name="saveMultiple" visibility="private" method="_McmgEBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_McjcwRUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MckD0BUTEemIe6OhVnSywA" name="indexes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Mckq4BUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MclR8BUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mcl5ABUTEemIe6OhVnSywA" name="path"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_McnuMBUTEemIe6OhVnSywA" name="listRois" visibility="private" method="_McnuMRUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_McoVQBUTEemIe6OhVnSywA" name="measure" visibility="private" method="_McqKcBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_McoVQRUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_McpjYBUTEemIe6OhVnSywA" name="mode">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_Mcr_oBUTEemIe6OhVnSywA" name="multiMeasure" visibility="private" method="_MctNwRUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mcr_oRUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MctNwBUTEemIe6OhVnSywA" name="cmd"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_Mcub4BUTEemIe6OhVnSywA" name="getColumnCount" visibility="private" method="_Mcw4IBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_McvC8BUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_McvqABUTEemIe6OhVnSywA" name="imp"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_McwREBUTEemIe6OhVnSywA" name="measurements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_McxfMBUTEemIe6OhVnSywA" name="multiPlot" visibility="private" method="_McyGQBUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_McyGQRUTEemIe6OhVnSywA" name="drawOrFill" visibility="private" method="_MczUYBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_McyGQhUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_McytUBUTEemIe6OhVnSywA" name="mode">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_Mc0igBUTEemIe6OhVnSywA" name="setProperties" visibility="private" method="_Mc2-wBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mc1JkBUTEemIe6OhVnSywA" name="color"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mc1woBUTEemIe6OhVnSywA" name="lineWidth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mc2XsBUTEemIe6OhVnSywA" name="fillColor"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_Mc2-wRUTEemIe6OhVnSywA" name="flatten" visibility="private" method="_Mc2-whUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_Mc4M4BUTEemIe6OhVnSywA" name="combine" visibility="private" method="_Mc4z8BUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_Mc6CEBUTEemIe6OhVnSywA" name="combineRois" visibility="private" method="_Mc73QRUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mc6pIBUTEemIe6OhVnSywA" name="imp"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mc6pIRUTEemIe6OhVnSywA" name="indexes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Mc7QMBUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Mc73QBUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_Mc9FYBUTEemIe6OhVnSywA" name="convertLineToPolygon" visibility="private" method="_Mc-6kBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mc9scBUTEemIe6OhVnSywA" direction="return"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mc9scRUTEemIe6OhVnSywA" name="roi"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mc-TgBUTEemIe6OhVnSywA" name="ip"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MdAIsBUTEemIe6OhVnSywA" name="combinePoints" visibility="private" method="_MdCk8BUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MdAvwBUTEemIe6OhVnSywA" name="imp"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MdBW0BUTEemIe6OhVnSywA" name="indexes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MdB94BUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MdB94RUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MdDMABUTEemIe6OhVnSywA" name="and" visibility="private" method="_MdDzEBUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MdEaIBUTEemIe6OhVnSywA" name="xor" visibility="private" method="_MdFBMBUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MdFoQBUTEemIe6OhVnSywA" name="addParticles" visibility="private" method="_MdGPUBUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MdG2YBUTEemIe6OhVnSywA" name="sort" visibility="private" method="_MdHdcBUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MdIrkBUTEemIe6OhVnSywA" name="specify" visibility="private" method="_MdIrkRUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MdOyMBUTEemIe6OhVnSywA" name="removePositions" visibility="private" method="_MdQAUBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MdPZQBUTEemIe6OhVnSywA" name="position">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MdQnYBUTEemIe6OhVnSywA" name="help" visibility="private" method="_MdQnYRUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MdR1gBUTEemIe6OhVnSywA" name="labels" visibility="private" method="_MdSckBUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MdTqsBUTEemIe6OhVnSywA" name="options" visibility="private" method="_MdURwBUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MdVf4BUTEemIe6OhVnSywA" name="makeButtonPanel" visibility="private" method="_MdXVEBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MdWG8BUTEemIe6OhVnSywA" direction="return"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MdWuABUTEemIe6OhVnSywA" name="gd"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MdX8IBUTEemIe6OhVnSywA" name="setShowAllColor" visibility="private" method="_MdYjMBUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MdZxUBUTEemIe6OhVnSywA" name="split" visibility="private" method="_MdZxURUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_Mda_cBUTEemIe6OhVnSywA" name="showAll" visibility="public" method="_MdcNkBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MdbmgBUTEemIe6OhVnSywA" name="mode">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MddbsBUTEemIe6OhVnSywA" name="updateShowAll" visibility="public" method="_MddbsRUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_Mdep0BUTEemIe6OhVnSywA" name="getAllIndexes" visibility="private" method="_Mdf38RUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mdep0RUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MdfQ4BUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Mdf38BUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MdhGEBUTEemIe6OhVnSywA" name="getImage" visibility="private" method="_MdiUMBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MdhtIBUTEemIe6OhVnSywA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_Mdi7QBUTEemIe6OhVnSywA" name="error" visibility="private" method="_MdjiUBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mdi7QRUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mdi7QhUTEemIe6OhVnSywA" name="msg"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MdkwcBUTEemIe6OhVnSywA" name="processWindowEvent" visibility="public" method="_Mdl-kBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MdlXgBUTEemIe6OhVnSywA" name="e"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MdnMsBUTEemIe6OhVnSywA" name="getInstance" visibility="public" isStatic="true" method="_Mdoa0BUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MdnzwBUTEemIe6OhVnSywA" type="_MEgJIBUTEemIe6OhVnSywA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MdpB4BUTEemIe6OhVnSywA" name="getInstance2" visibility="public" isStatic="true" method="_MdqQABUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mdpo8BUTEemIe6OhVnSywA" type="_MEgJIBUTEemIe6OhVnSywA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MdreIBUTEemIe6OhVnSywA" name="getROIs" visibility="public" method="_MdsFMRUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MdsFMBUTEemIe6OhVnSywA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MdssQBUTEemIe6OhVnSywA" name="getList" visibility="public" method="_MdssQhUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MdssQRUTEemIe6OhVnSywA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MdssQxUTEemIe6OhVnSywA" name="getCount" visibility="public" method="_MdssRRUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MdssRBUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MdtTUBUTEemIe6OhVnSywA" name="getRoiIndex" visibility="public" method="_MduhcBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MdtTURUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mdt6YBUTEemIe6OhVnSywA" name="roi"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MdvvkBUTEemIe6OhVnSywA" name="getRoiIndexPos" visibility="public" method="_MdxkwRUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MdwWoBUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mdw9sBUTEemIe6OhVnSywA" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MdxkwBUTEemIe6OhVnSywA" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_Mdyy4BUTEemIe6OhVnSywA" name="getSelectedIndex" visibility="public" method="_Md0BABUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MdzZ8BUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_Md1PIBUTEemIe6OhVnSywA" name="getRoi" visibility="public" method="_Md2dQBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_Md12MBUTEemIe6OhVnSywA" direction="return"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_Md12MRUTEemIe6OhVnSywA" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_Md2dQRUTEemIe6OhVnSywA" name="getRoisAsArray" visibility="public" method="_Md4ScBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_Md3EUBUTEemIe6OhVnSywA" direction="return">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Md3rYBUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Md3rYRUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_Md45gBUTEemIe6OhVnSywA" name="getBandsAsArray" visibility="public" method="_Md7VwBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_Md5gkBUTEemIe6OhVnSywA" type="_MJxqsxUTEemIe6OhVnSywA" direction="return">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Md6HoBUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Md6usBUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_Md7VwRUTEemIe6OhVnSywA" name="getSelectedRoisAsArray" visibility="public" method="_Md9K8RUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_Md780BUTEemIe6OhVnSywA" direction="return">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Md8j4BUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Md9K8BUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_Md-ZEBUTEemIe6OhVnSywA" name="getName" visibility="public" method="_MeAOQBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_Md_AIBUTEemIe6OhVnSywA" direction="return"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_Md_nMBUTEemIe6OhVnSywA" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MeAOQRUTEemIe6OhVnSywA" name="getName" visibility="public" isStatic="true" method="_MeCqgBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MeAOQhUTEemIe6OhVnSywA" direction="return"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MeBcYBUTEemIe6OhVnSywA" name="index"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MeD4oBUTEemIe6OhVnSywA" name="runCommand" visibility="public" method="_MeGU4BUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MeEfsBUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MeFGwBUTEemIe6OhVnSywA" name="cmd"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MeHjABUTEemIe6OhVnSywA" name="runCommand" visibility="public" method="_MeJYMRUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MeIKEBUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MeIxIBUTEemIe6OhVnSywA" name="cmd"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MeJYMBUTEemIe6OhVnSywA" name="name"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MeJ_QBUTEemIe6OhVnSywA" name="save" visibility="private" method="_MeJ_RBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MeJ_QRUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MeJ_QhUTEemIe6OhVnSywA" name="name"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MeJ_QxUTEemIe6OhVnSywA" name="saveSelected">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MeLNYBUTEemIe6OhVnSywA" name="runCommand" visibility="public" method="_MeOQsRUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MeL0cBUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MeNCkBUTEemIe6OhVnSywA" name="cmd"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MeNpoBUTEemIe6OhVnSywA" name="hexColor"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MeOQsBUTEemIe6OhVnSywA" name="lineWidth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MeO3wBUTEemIe6OhVnSywA" name="setRoiPosition" visibility="private" method="_MePe0RUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MeO3wRUTEemIe6OhVnSywA" name="imp"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MePe0BUTEemIe6OhVnSywA" name="roi"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MePe0hUTEemIe6OhVnSywA" name="select" visibility="public" method="_MePe1BUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MePe0xUTEemIe6OhVnSywA" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MeQF4BUTEemIe6OhVnSywA" name="select" visibility="public" method="_MeQs8BUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MeQF4RUTEemIe6OhVnSywA" name="imp"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MeQF4hUTEemIe6OhVnSywA" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MeQs8RUTEemIe6OhVnSywA" name="select" visibility="public" method="_MeSiIBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MeQs8hUTEemIe6OhVnSywA" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MeRUABUTEemIe6OhVnSywA" name="shiftKeyDown">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MeR7EBUTEemIe6OhVnSywA" name="altKeyDown">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MeTwQBUTEemIe6OhVnSywA" name="setEditMode" visibility="public" method="_MeU-YBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MeTwQRUTEemIe6OhVnSywA" name="imp"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MeUXUBUTEemIe6OhVnSywA" name="editMode">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MeWMgBUTEemIe6OhVnSywA" name="close" visibility="public" method="_MeWzkBUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MeYBsBUTEemIe6OhVnSywA" name="moveRoisToOverlay" visibility="public" method="_MeYowRUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MeYowBUTEemIe6OhVnSywA" name="imp"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_Mead8BUTEemIe6OhVnSywA" name="mousePressed" visibility="public" method="_Mec6MBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MebsEBUTEemIe6OhVnSywA" name="e"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MedhQBUTEemIe6OhVnSywA" name="mouseWheelMoved" visibility="public" method="_MefWcBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MeevYBUTEemIe6OhVnSywA" name="event"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MegkkBUTEemIe6OhVnSywA" name="setSelectedIndexes" visibility="public" method="_MeiZwBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MehLoBUTEemIe6OhVnSywA" name="indexes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MehysBUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MehysRUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_Mejn4BUTEemIe6OhVnSywA" name="getSelectedIndexes" visibility="public" method="_MeldEBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MekO8BUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Mek2ABUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Mek2ARUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MeldERUTEemIe6OhVnSywA" name="newOverlay" visibility="private" method="_MemEIBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MeldEhUTEemIe6OhVnSywA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MemrMBUTEemIe6OhVnSywA" name="removeOverlay" visibility="private" method="_Men5UBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MenSQBUTEemIe6OhVnSywA" name="imp"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MepHcBUTEemIe6OhVnSywA" name="setOverlay" visibility="private" method="_MerjsBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MeqVkBUTEemIe6OhVnSywA" name="imp"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_Meq8oBUTEemIe6OhVnSywA" name="overlay"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MerjsRUTEemIe6OhVnSywA" name="record" visibility="private" method="_MesKwRUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MesKwBUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MesKwhUTEemIe6OhVnSywA" name="mouseReleased" visibility="public" method="_Met_8BUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MetY4BUTEemIe6OhVnSywA" name="e"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MevOEBUTEemIe6OhVnSywA" name="mouseClicked" visibility="public" method="_MewcMBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mev1IBUTEemIe6OhVnSywA" name="e"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MexDQBUTEemIe6OhVnSywA" name="mouseEntered" visibility="public" method="_MexDQhUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MexDQRUTEemIe6OhVnSywA" name="e"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MexqUBUTEemIe6OhVnSywA" name="mouseExited" visibility="public" method="_MexqUhUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MexqURUTEemIe6OhVnSywA" name="e"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MeyRYBUTEemIe6OhVnSywA" name="valueChanged" visibility="public" method="_MeyRYhUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MeyRYRUTEemIe6OhVnSywA" name="e"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_Mey4cBUTEemIe6OhVnSywA" name="windowActivated" visibility="public" method="_MezfgBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mey4cRUTEemIe6OhVnSywA" name="e"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_Me0toBUTEemIe6OhVnSywA" name="fix_standard" visibility="private" method="_Me1UsBUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_Me17wBUTEemIe6OhVnSywA" name="auto_detect" visibility="public" method="_Me17wRUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_Me17whUTEemIe6OhVnSywA" name="getLaneid" visibility="public" method="_Me17xBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_Me17wxUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_Me3J4BUTEemIe6OhVnSywA" name="setLaneid" visibility="public" method="_Me4YABUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_Me3w8BUTEemIe6OhVnSywA" name="laneid">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_Me5mIBUTEemIe6OhVnSywA" name="delete_standard" visibility="private" method="_Me5mIRUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_Me6NMBUTEemIe6OhVnSywA" name="restart_bands" visibility="public" method="_Me6NMRUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_Me60QBUTEemIe6OhVnSywA" name="IntegerArraytointarray" visibility="private" method="_Me9QgBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_Me60QRUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Me7bUBUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Me7bURUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_Me8CYBUTEemIe6OhVnSywA" name="a">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_ILxaUPaLEeW5KOK8aDMdgA"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Me8pcBUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Me8pcRUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_Me-eoBUTEemIe6OhVnSywA" name="setAssistant" visibility="public" method="_Me_FsRUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_Me_FsBUTEemIe6OhVnSywA" name="aThis"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_Me_swBUTEemIe6OhVnSywA" name="pick_colour" visibility="public" method="_Me_swRUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MfA64BUTEemIe6OhVnSywA" name="change_colour" visibility="public" method="_MfCJARUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MfCJABUTEemIe6OhVnSywA" name="c"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MfCwEBUTEemIe6OhVnSywA" name="setColour" visibility="public" method="_MfCwEhUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MfCwERUTEemIe6OhVnSywA" name="colour"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MfD-MBUTEemIe6OhVnSywA" name="getColour" visibility="public" method="_MfD-MhUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MfD-MRUTEemIe6OhVnSywA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MfElQBUTEemIe6OhVnSywA" name="undo" visibility="public" method="_MfElQRUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MfFzYBUTEemIe6OhVnSywA" name="redo" visibility="public" method="_MfGacBUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MfHBgBUTEemIe6OhVnSywA" name="activatehistogramdisplay" visibility="public" method="_MfHokRUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MfHokBUTEemIe6OhVnSywA" name="b">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MfI2sBUTEemIe6OhVnSywA" name="getAssistant" visibility="public" method="_MfJdwBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MfI2sRUTEemIe6OhVnSywA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MfKE0BUTEemIe6OhVnSywA" name="setMarkersedit" visibility="public" method="_MfL6ARUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MfKr4BUTEemIe6OhVnSywA" name="markersedit" type="_MGiwgRUTEemIe6OhVnSywA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MfLS8BUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MfL6ABUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MfNIIBUTEemIe6OhVnSywA" name="setbgcheckboxstate" visibility="public" method="_MfNvMBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MfNIIRUTEemIe6OhVnSywA" name="b">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_MEzrIBUTEemIe6OhVnSywA" name="Menu" visibility="public">
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MJunYBUTEemIe6OhVnSywA" name="jButtonCrop" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MJunYRUTEemIe6OhVnSywA" name="jButtonEdit" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MJvOcBUTEemIe6OhVnSywA" name="jButtonOpen" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MJvOcRUTEemIe6OhVnSywA" name="jButtonProcessing" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MJv1gBUTEemIe6OhVnSywA" name="jButtonSave" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MJv1gRUTEemIe6OhVnSywA" name="jButton1" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MJv1ghUTEemIe6OhVnSywA" name="jToolBar1" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MJwckBUTEemIe6OhVnSywA" name="jButtonLanes" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MJwckRUTEemIe6OhVnSywA" name="jButtonDendogram" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MJwckhUTEemIe6OhVnSywA" name="jButtonHelp" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MJxDoBUTEemIe6OhVnSywA" name="pfr" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MJxDoRUTEemIe6OhVnSywA" name="lm" visibility="private" type="_MHgZ0BUTEemIe6OhVnSywA" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MJxDohUTEemIe6OhVnSywA" name="bm" visibility="private" type="_MEgJIBUTEemIe6OhVnSywA" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MJxqsBUTEemIe6OhVnSywA" name="lanes" visibility="private" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MJxqsRUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MJxqshUTEemIe6OhVnSywA" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MJxqtBUTEemIe6OhVnSywA" name="bands" visibility="private" type="_MJxqsxUTEemIe6OhVnSywA" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MJxqtRUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MJyRwBUTEemIe6OhVnSywA" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MJyRwRUTEemIe6OhVnSywA" name="finallanes" visibility="public" type="_MGiwgRUTEemIe6OhVnSywA" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MJyRwhUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MJyRwxUTEemIe6OhVnSywA" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MJyRxRUTEemIe6OhVnSywA" name="f" visibility="private" type="_MJyRxBUTEemIe6OhVnSywA" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MJy40RUTEemIe6OhVnSywA" name="o" visibility="private" type="_MJy40BUTEemIe6OhVnSywA" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MJy40hUTEemIe6OhVnSywA" name="jButtonStandards" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MJy40xUTEemIe6OhVnSywA" name="calibrationmethod" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MJzf4BUTEemIe6OhVnSywA" name="jButtonOptions" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MJzf4RUTEemIe6OhVnSywA" name="normalisation" visibility="public" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MJ0G8BUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>false</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MJ0G8RUTEemIe6OhVnSywA" name="similaritytable" visibility="public" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MJ0G8hUTEemIe6OhVnSywA" name="similaritymethod" visibility="public" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MJ0G8xUTEemIe6OhVnSywA" name="selectedlanes" visibility="public" type="_MGiwgRUTEemIe6OhVnSywA" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MJ0uABUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MJ0uARUTEemIe6OhVnSywA" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MJ0uAhUTEemIe6OhVnSywA" name="initialoffset" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MJ0uAxUTEemIe6OhVnSywA" name="invertcolour" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MJ0uBBUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>false</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MJ1VEBUTEemIe6OhVnSywA" name="saved" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MJ1VERUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>false</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MJ1VEhUTEemIe6OhVnSywA" name="colour" visibility="private" isUnique="false">
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MJ1VExUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>Color.BLUE</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MJ18IBUTEemIe6OhVnSywA" name="first_time" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MJ18IRUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>true</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MJ18IhUTEemIe6OhVnSywA" name="windowname" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MJ2jMBUTEemIe6OhVnSywA" name="changes" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MJ2jMRUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>false</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MJ2jMhUTEemIe6OhVnSywA" name="newstudy" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MJ3KQBUTEemIe6OhVnSywA" name="studyid" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MJ3KQRUTEemIe6OhVnSywA" name="experimentname" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MJ3KQhUTEemIe6OhVnSywA" name="experimentcomments" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MJ3xUBUTEemIe6OhVnSywA" name="user" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MJ3xURUTEemIe6OhVnSywA" name="marker" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MJ3xUhUTEemIe6OhVnSywA" name="selectedlanesforcomparison" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MJ3xUxUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MJ4YYBUTEemIe6OhVnSywA" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MJ4YYRUTEemIe6OhVnSywA" name="simmethod" visibility="private" isUnique="false">
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MJ4YYhUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>&quot;&quot;</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MJ4_cBUTEemIe6OhVnSywA" name="linkage" visibility="private" isUnique="false">
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MJ4_cRUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>&quot;UPGMA&quot;</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MJ5mgBUTEemIe6OhVnSywA" name="tol" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MJ5mgRUTEemIe6OhVnSywA" name="firstcomparison" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MJ5mghUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>true</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MJ5mgxUTEemIe6OhVnSywA" name="laneid" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MJ5mhBUTEemIe6OhVnSywA" name="experimentid" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MJ6NkBUTEemIe6OhVnSywA" name="e" visibility="private" type="_EJs1wBUTEemIe6OhVnSywA" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MJ6NkRUTEemIe6OhVnSywA" name="username" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MJ7bsBUTEemIe6OhVnSywA" name="lanesinfo" visibility="private" isUnique="false"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MJ9Q4BUTEemIe6OhVnSywA" name="cleanall" specification="_MJ8p0BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    lm = null;&#xD;
    bm = null;&#xD;
    lanes = null;&#xD;
    bands = null;&#xD;
    finallanes = null;&#xD;
    f = null;&#xD;
    o = null;&#xD;
    calibrationmethod = 0;&#xD;
    normalisation = false;&#xD;
    similaritytable = null;&#xD;
    similaritymethod = 0;&#xD;
    selectedlanes = null;&#xD;
    initialoffset = 0;&#xD;
    invertcolour = false;&#xD;
    saved = false;&#xD;
    jButtonLanes.setEnabled(false);&#xD;
    jButtonProcessing.setEnabled(false);&#xD;
    jButtonSave.setEnabled(false);&#xD;
    jButton1.setEnabled(false);&#xD;
    jButtonStandards.setEnabled(false);&#xD;
    jButtonDendogram.setEnabled(false);&#xD;
    jButtonOptions.setEnabled(false);&#xD;
    firstcomparison = true;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MKAUMBUTEemIe6OhVnSywA" name="Menu" specification="_MJ-fABUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    super(&quot;GelJ&quot;);&#xD;
    showWindow();&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MKCJYBUTEemIe6OhVnSywA" name="showWindow" specification="_MKBiUBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    ImagePlus imp = WindowManager.getCurrentImage();&#xD;
    boolean initialimage;&#xD;
    if (imp != null) {&#xD;
        initialimage = true;&#xD;
    } else {&#xD;
        initialimage = false;&#xD;
    }&#xD;
    jToolBar1 = new javax.swing.JToolBar();&#xD;
    jButtonOpen = new javax.swing.JButton();&#xD;
    jButtonSave = new javax.swing.JButton();&#xD;
    jButtonProcessing = new javax.swing.JButton();&#xD;
    jButtonLanes = new javax.swing.JButton();&#xD;
    jButton1 = new javax.swing.JButton();&#xD;
    jButtonStandards = new javax.swing.JButton();&#xD;
    jButtonDendogram = new javax.swing.JButton();&#xD;
    jButtonOptions = new javax.swing.JButton();&#xD;
    jButtonHelp = new javax.swing.JButton();&#xD;
    jToolBar1.setFloatable(false);&#xD;
    jToolBar1.setRollover(true);&#xD;
    // NOI18N&#xD;
    jButtonOpen.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/GelJImages/folder_open.png&quot;)));&#xD;
    jButtonOpen.setToolTipText(&quot;Open&quot;);&#xD;
    jButtonOpen.setFocusable(false);&#xD;
    jButtonOpen.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);&#xD;
    jButtonOpen.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);&#xD;
    jButtonOpen.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            try {&#xD;
                jButtonOpenActionPerformed(evt);&#xD;
            } catch (IOException ex) {&#xD;
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);&#xD;
            } catch (ClassNotFoundException ex) {&#xD;
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);&#xD;
            }&#xD;
        }&#xD;
    });&#xD;
    jToolBar1.add(jButtonOpen);&#xD;
    // NOI18N&#xD;
    jButtonSave.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/GelJImages/save.png&quot;)));&#xD;
    jButtonSave.setToolTipText(&quot;Save&quot;);&#xD;
    jButtonSave.setFocusable(false);&#xD;
    jButtonSave.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);&#xD;
    jButtonSave.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);&#xD;
    if (!initialimage) {&#xD;
        jButtonSave.setEnabled(false);&#xD;
    }&#xD;
    jButtonSave.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            try {&#xD;
                jButtonSaveActionPerformed(evt);&#xD;
            } catch (IOException ex) {&#xD;
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);&#xD;
            }&#xD;
        }&#xD;
    });&#xD;
    jToolBar1.add(jButtonSave);&#xD;
    // NOI18N&#xD;
    jButtonProcessing.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/GelJImages/processing.png&quot;)));&#xD;
    jButtonProcessing.setToolTipText(&quot;Preprocessing&quot;);&#xD;
    jButtonProcessing.setFocusable(false);&#xD;
    jButtonProcessing.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);&#xD;
    jButtonProcessing.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);&#xD;
    if (!initialimage) {&#xD;
        jButtonProcessing.setEnabled(false);&#xD;
    }&#xD;
    jButtonProcessing.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButtonProcessingActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar1.add(jButtonProcessing);&#xD;
    // NOI18N&#xD;
    jButtonLanes.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/GelJImages/lanes.png&quot;)));&#xD;
    jButtonLanes.setToolTipText(&quot;Lane detection&quot;);&#xD;
    jButtonLanes.setFocusable(false);&#xD;
    jButtonLanes.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);&#xD;
    jButtonLanes.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);&#xD;
    if (!initialimage) {&#xD;
        jButtonLanes.setEnabled(false);&#xD;
    }&#xD;
    jButtonLanes.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButtonLanesActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar1.add(jButtonLanes);&#xD;
    // NOI18N&#xD;
    jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/GelJImages/bands.png&quot;)));&#xD;
    jButton1.setToolTipText(&quot;Band detection&quot;);&#xD;
    jButton1.setEnabled(false);&#xD;
    jButton1.setFocusable(false);&#xD;
    jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);&#xD;
    jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);&#xD;
    jButton1.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton1ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar1.add(jButton1);&#xD;
    // NOI18N&#xD;
    jButtonStandards.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/GelJImages/standards.png&quot;)));&#xD;
    jButtonStandards.setToolTipText(&quot;Normalisation&quot;);&#xD;
    jButtonStandards.setEnabled(false);&#xD;
    jButtonStandards.setFocusable(false);&#xD;
    jButtonStandards.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);&#xD;
    jButtonStandards.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);&#xD;
    jButtonStandards.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            try {&#xD;
                jButtonStandardsActionPerformed(evt);&#xD;
            } catch (UnsupportedEncodingException ex) {&#xD;
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);&#xD;
            } catch (IOException ex) {&#xD;
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);&#xD;
            }&#xD;
        }&#xD;
    });&#xD;
    jToolBar1.add(jButtonStandards);&#xD;
    // NOI18N&#xD;
    jButtonDendogram.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/GelJImages/dendogram.png&quot;)));&#xD;
    jButtonDendogram.setToolTipText(&quot;Generate Dendogram&quot;);&#xD;
    jButtonDendogram.setEnabled(false);&#xD;
    jButtonDendogram.setFocusable(false);&#xD;
    jButtonDendogram.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);&#xD;
    jButtonDendogram.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);&#xD;
    jButtonDendogram.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            try {&#xD;
                jButtonDendogramActionPerformed(evt);&#xD;
            } catch (Exception ex) {&#xD;
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);&#xD;
            }&#xD;
        }&#xD;
    });&#xD;
    jToolBar1.add(jButtonDendogram);&#xD;
    // NOI18N&#xD;
    jButtonOptions.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/GelJImages/options.png&quot;)));&#xD;
    jButtonOptions.setToolTipText(&quot;Options&quot;);&#xD;
    if (!initialimage) {&#xD;
        jButtonOptions.setEnabled(false);&#xD;
    }&#xD;
    jButtonOptions.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButtonOptionsActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar1.add(jButtonOptions);&#xD;
    // NOI18N&#xD;
    jButtonHelp.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/GelJImages/help.png&quot;)));&#xD;
    jButtonHelp.setToolTipText(&quot;Help&quot;);&#xD;
    jButtonHelp.setFocusable(false);&#xD;
    jButtonHelp.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);&#xD;
    jButtonHelp.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);&#xD;
    jButtonHelp.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButtonHelpActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar1.add(jButtonHelp);&#xD;
    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);&#xD;
    this.setLayout(layout);&#xD;
    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGap(2, 2, 2).addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE).addGap(3, 3, 3)));&#xD;
    setSize(420, 75);&#xD;
    setResizable(false);&#xD;
//        show();&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MKEloBUTEemIe6OhVnSywA" name="setExperimentid" specification="_MKDXgBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.experimentid = experimentid;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MKHo8BUTEemIe6OhVnSywA" name="setUsername" specification="_MKFzwBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.username = username;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MKOWoBUTEemIe6OhVnSywA" name="jButtonOpenActionPerformed" specification="_MKI3EBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    IJ.setTool(&quot;rectangle&quot;);&#xD;
    ImagePlus imp0 = WindowManager.getCurrentImage();&#xD;
    if (imp0 != null) {&#xD;
        GenericDialog gd = new GenericDialog(&quot;Save&quot;);&#xD;
        gd.enableYesNoCancel();&#xD;
        gd.hideCancelButton();&#xD;
        gd.addMessage(&quot;Do you want to save the current study?&quot;);&#xD;
        gd.showDialog();&#xD;
        if (gd.wasOKed()) {&#xD;
            Save s = new Save(imp0, finallanes, bands, normalisation, initialoffset, invertcolour, marker);&#xD;
            s.saveinfile();&#xD;
        }&#xD;
        imp0.changes = false;&#xD;
        imp0.close();&#xD;
        cleanall();&#xD;
    }&#xD;
    if (first_time) {&#xD;
        Load ld = new Load(this);&#xD;
        ld.loadimageorstudy();&#xD;
    } else {&#xD;
        GenericDialog gd = new GenericDialog(&quot;GelJ Assistant&quot;);&#xD;
        gd.addMessage(&quot;Do you want to use the assistant?&quot;);&#xD;
        gd.hideCancelButton();&#xD;
        gd.enableYesNoCancel();&#xD;
        gd.addMessage(&quot;&quot;);&#xD;
        // gd.addHelp(&quot;&quot;);&#xD;
        // gd.setHelpLabel(&quot;Back&quot;);&#xD;
        gd.showDialog();&#xD;
        if (gd.wasOKed()) {&#xD;
            Assistant a = new Assistant(this);&#xD;
            gd.dispose();&#xD;
            a.openimageassitant();&#xD;
        } else {&#xD;
            Load ld = new Load(this);&#xD;
            ld.loadimageorstudy();&#xD;
        }&#xD;
    }&#xD;
    ImagePlus imp = WindowManager.getCurrentImage();&#xD;
    boolean initialimage;&#xD;
    if (imp != null) {&#xD;
        initialimage = true;&#xD;
    } else {&#xD;
        initialimage = false;&#xD;
    }&#xD;
    if (initialimage) {&#xD;
        windowname = imp.getTitle();&#xD;
        jButtonLanes.setEnabled(true);&#xD;
        jButtonProcessing.setEnabled(true);&#xD;
        jButtonSave.setEnabled(true);&#xD;
        jButtonOptions.setEnabled(true);&#xD;
    }&#xD;
    first_time = false;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MKQL0BUTEemIe6OhVnSywA" name="enableall" specification="_MKPkwBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    jButtonLanes.setEnabled(true);&#xD;
    jButtonProcessing.setEnabled(true);&#xD;
    jButtonSave.setEnabled(true);&#xD;
    jButtonOptions.setEnabled(true);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MKUdQBUTEemIe6OhVnSywA" name="jButtonSaveActionPerformed" specification="_MKSBABUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    if (changes) {&#xD;
        ImagePlus imp = IJ.getImage();&#xD;
        Save s = new Save(imp, finallanes, bands, normalisation, initialoffset, invertcolour, marker);&#xD;
        s.saveinfile();&#xD;
        saved = true;&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MKYHoBUTEemIe6OhVnSywA" name="jButtonEditActionPerformed" specification="_MKVrYBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    IJ.setTool(&quot;rectangle&quot;);&#xD;
    ImagePlus imp = IJ.getImage();&#xD;
    ImageEdit panelOptions = new ImageEdit(imp, this);&#xD;
    GenericDialog gdG = new GenericDialog(&quot;Image Editing&quot;);&#xD;
    gdG.add(panelOptions);&#xD;
    gdG.addMessage(&quot;&quot;);&#xD;
    gdG.showDialog();&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MKaj4BUTEemIe6OhVnSywA" name="jButtonSelectActionPerformed" specification="_MKZVwBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    ImagePlus imp = IJ.getImage();&#xD;
    IJ.setTool(&quot;rectangle&quot;);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MKdnMBUTEemIe6OhVnSywA" name="jButtonCropActionPerformed" specification="_MKcZEBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    ImagePlus imp = IJ.getImage();&#xD;
    Roi r = imp.getRoi();&#xD;
    IJ.run(imp, &quot;Crop&quot;, &quot;&quot;);&#xD;
    changes = true;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MKfcYBUTEemIe6OhVnSywA" name="jButtonProcessingActionPerformed" specification="_MKe1UBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    ImagePlus imp = IJ.getImage();&#xD;
    if (f == null) {&#xD;
        f = new PreProcessing(this);&#xD;
    } else {&#xD;
        f.showWindow();&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MKjGwBUTEemIe6OhVnSywA" name="jButtonLanesActionPerformed" specification="_MKgqgBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    changes = true;&#xD;
    lm = new LaneManager(this);&#xD;
    IJ.setTool(&quot;rectangle&quot;);&#xD;
    ImagePlus imp = WindowManager.getCurrentImage();&#xD;
    LaneManagerCanvas cc = new LaneManagerCanvas(imp);&#xD;
    new ImageWindow(imp, cc);&#xD;
    cc.requestFocus();&#xD;
    if (lanes != null) {&#xD;
        for (Roi lane : lanes) {&#xD;
            lm.addRoi(lane);&#xD;
        }&#xD;
        if (getstandardlanes(finallanes) != null) {&#xD;
            lm.fix_standards(roisfromlanes(getstandardlanes(finallanes)));&#xD;
        }&#xD;
    }&#xD;
    lm.requestFocus();&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MKnYMBUTEemIe6OhVnSywA" name="jButton1ActionPerformed" specification="_MKljABUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    if (finallanes == null || finallanes.length == 0) {&#xD;
        IJ.error(&quot;As a first step, you must detect the lanes of the image&quot;);&#xD;
    } else {&#xD;
        IJ.setTool(&quot;point&quot;);&#xD;
        bm = new BandManager(this);&#xD;
        ImagePlus imp = WindowManager.getCurrentImage();&#xD;
        BandManagerCanvas cc = new BandManagerCanvas(imp);&#xD;
        ImageWindow imageWindow = new ImageWindow(imp, cc);&#xD;
        if (finallanes != null) {&#xD;
            for (int i = 0; i &lt; finallanes.length; i++) {&#xD;
                int[] positionbands = finallanes[i].getPositionbands();&#xD;
                if (positionbands != null) {&#xD;
                    for (int b : positionbands) {&#xD;
                        Roi r0 = finallanes[i].getRoi();&#xD;
                        int r0x = r0.getBounds().x;&#xD;
                        int r0y = r0.getBounds().y;&#xD;
                        int w = r0.getBounds().width;&#xD;
                        Rectangle r = new Rectangle(r0x, r0y + b, w, 2);&#xD;
                        Roi r1 = rectangleintersectionroi(r0, r);&#xD;
                        r1.setFillColor(colour);&#xD;
                        bm.add(imp, r1, 0, i);&#xD;
                        bm.showAll(0);&#xD;
                    }&#xD;
                }&#xD;
            }&#xD;
        }&#xD;
        bm.requestFocus();&#xD;
    /*if (bands!=null){
             for (Band band : bands) {
             bm.add(imp,band.getRoi(),0,band.getLane());
             bm.showAll(0);
             }   
             }*/&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MKsQsBUTEemIe6OhVnSywA" name="jButtonStandardsActionPerformed" specification="_MKpNYBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    // If no standard has been previously defined, we ask the user whether&#xD;
    // she wants to define a standard.&#xD;
    Lane[] stds = getstandardlanes(finallanes);&#xD;
    if ((stds == null) || (stds.length == 0)) {&#xD;
        GenericDialog gdG = new GenericDialog(&quot;No Standards&quot;);&#xD;
        gdG.addMessage(&quot;You have not defined any standard yet, do you want to add them now?.&quot;);&#xD;
        gdG.showDialog();&#xD;
        if (gdG.wasOKed()) {&#xD;
            boolean[] selectstandards = selectstandards(lanesnames(finallanes), whatarestandardlanes(finallanes));&#xD;
            if (selectstandards.length &lt; 2) {&#xD;
                return;&#xD;
            } else {&#xD;
                for (int i = 0; i &lt; selectstandards.length; i++) {&#xD;
                    finallanes[i].setIsstandard(selectstandards[i]);&#xD;
                }&#xD;
            }&#xD;
        } else {&#xD;
            return;&#xD;
        }&#xD;
    }&#xD;
    if (stds.length == 1) {&#xD;
        GenericDialog gdG = new GenericDialog(&quot;No Standards&quot;);&#xD;
        gdG.addMessage(&quot;You have only defined one lane as reference lane, and you&quot; + &quot; need to define at least two lanes as reference lanes. &quot; + &quot;Would you like to add them now?&quot;);&#xD;
        gdG.showDialog();&#xD;
        if (gdG.wasOKed()) {&#xD;
            boolean[] selectstandards = selectstandards(lanesnames(finallanes), whatarestandardlanes(finallanes));&#xD;
            if (selectstandards.length &lt; 2) {&#xD;
                IJ.error(&quot;Select at least two lanes as reference lanes&quot;);&#xD;
                return;&#xD;
            } else {&#xD;
                for (int i = 0; i &lt; selectstandards.length; i++) {&#xD;
                    finallanes[i].setIsstandard(selectstandards[i]);&#xD;
                }&#xD;
            }&#xD;
        }&#xD;
        if (gdG.wasCanceled()) {&#xD;
            return;&#xD;
        }&#xD;
    }&#xD;
    // If the standard lanes have different number of bands, we ask the user&#xD;
    // whether she wants to modify the number of bands in the standards.&#xD;
    Lane[] stdlanes = getstandardlanes(finallanes);&#xD;
    int[] indexesstd = numberofbandslanes(stdlanes);&#xD;
    if (!allequal(indexesstd)) {&#xD;
        GenericDialog gdG = new GenericDialog(&quot;No Standards&quot;);&#xD;
        gdG.addMessage(&quot;The number of bands in the reference lanes is different, &quot; + &quot;all the reference lanes must have the same number of bands. &quot;);&#xD;
        for (int i = 0; i &lt; stdlanes.length; i++) {&#xD;
            gdG.addMessage(stdlanes[i].getName() + &quot; contains &quot; + stdlanes[i].getPositionbands().length + &quot;.&quot;);&#xD;
        }&#xD;
        gdG.addMessage(&quot;Would you like to modify the number of bands?&quot;);&#xD;
        gdG.showDialog();&#xD;
        if (gdG.wasOKed()) {&#xD;
            bm = new BandManager(this);&#xD;
            ImagePlus imp = WindowManager.getCurrentImage();&#xD;
            BandManagerCanvas cc = new BandManagerCanvas(imp);&#xD;
            new ImageWindow(imp, cc);&#xD;
            cc.requestFocus();&#xD;
            for (Band band : bands) {&#xD;
                bm.add(imp, band.getRoi(), 0, band.getLane());&#xD;
                bm.showAll(0);&#xD;
            }&#xD;
            return;&#xD;
        }&#xD;
        if (gdG.wasCanceled()) {&#xD;
            return;&#xD;
        }&#xD;
    }&#xD;
    // We show the dialog asking the user whether she wants to use a &#xD;
    // previously defined standard or create a new one. &#xD;
    GenericDialog gdG = new GenericDialog(&quot;Standards&quot;);&#xD;
    StandardsPanel sp = new StandardsPanel();&#xD;
    ArrayList&lt;String> availablestd = readstandardsavailable();&#xD;
    if (availablestd == null || 0 == availablestd.size()) {&#xD;
        sp.disableavailablestd();&#xD;
    }&#xD;
    sp.setlistofstandards(availablestd);&#xD;
    gdG.add(sp);&#xD;
    gdG.addMessage(&quot;&quot;);&#xD;
    gdG.showDialog();&#xD;
    if (gdG.wasCanceled()) {&#xD;
        gdG.dispose();&#xD;
        return;&#xD;
    }&#xD;
    int[] indexes = indexesstandardlanes(finallanes);&#xD;
    // and the molecular wheights for the bands of the standard.&#xD;
    if (sp.isnewstandardselected()) {&#xD;
        /////////////////////////////////////////////////////////////&#xD;
        ImagePlus imp = WindowManager.getCurrentImage();&#xD;
        NormaliseManager rm = new NormaliseManager();&#xD;
        int[] positionbands = finallanes[indexes[0]].getPositionbands();&#xD;
        if (positionbands != null) {&#xD;
            for (int b : positionbands) {&#xD;
                Roi r0 = finallanes[indexes[0]].getRoi();&#xD;
                int r0x = r0.getBounds().x;&#xD;
                int r0y = r0.getBounds().y;&#xD;
                int w = r0.getBounds().width;&#xD;
                Rectangle r = new Rectangle(r0x, r0y + b, w, 2);&#xD;
                Roi r1 = rectangleintersectionroi(r0, r);&#xD;
                rm.add(imp, r1, 0);&#xD;
                rm.showAll(0);&#xD;
            }&#xD;
        }&#xD;
        /////////////////////////////////////////////////////////////////// &#xD;
        double[] res = createStandard(finallanes[indexes[0]].getPositionbands().length);&#xD;
        rm.close();&#xD;
        if (res == null) {&#xD;
            return;&#xD;
        } else {&#xD;
            for (int i = 0; i &lt; indexes.length; i++) {&#xD;
                finallanes[indexes[i]].setStdpositionbands(res);&#xD;
            }&#xD;
        }&#xD;
    } else {&#xD;
        // If she chooses an available standard, we check that the standard contains&#xD;
        // as much molecular weights as bands in the image. In such a case, we assign&#xD;
        // the values; otherwise, we ask the user to remove/add the molecular weights that &#xD;
        // do not appear in the image. &#xD;
        String file = sp.nameoptionmenu();&#xD;
        marker = file;&#xD;
        double[] stdvalues = readstandardfromfile(file);&#xD;
        if (stdvalues.length == finallanes[indexes[0]].getPositionbands().length) {&#xD;
            for (int i = 0; i &lt; indexes.length; i++) {&#xD;
                finallanes[indexes[i]].setStdpositionbands(stdvalues);&#xD;
            }&#xD;
        } else {&#xD;
            IJ.error(&quot;The standard contains &quot; + stdvalues.length + &quot; elements,&quot; + &quot; but the reference lane contains &quot; + finallanes[indexes[0]].getPositionbands().length + &quot; bands. Please, add or remove the necessary values.&quot;);&#xD;
            /////////////////////////////////////////////////////////////&#xD;
            ImagePlus imp = WindowManager.getCurrentImage();&#xD;
            NormaliseManager rm = new NormaliseManager();&#xD;
            int[] positionbands = finallanes[indexes[0]].getPositionbands();&#xD;
            if (positionbands != null) {&#xD;
                for (int b : positionbands) {&#xD;
                    Roi r0 = finallanes[indexes[0]].getRoi();&#xD;
                    int r0x = r0.getBounds().x;&#xD;
                    int r0y = r0.getBounds().y;&#xD;
                    int w = r0.getBounds().width;&#xD;
                    Rectangle r = new Rectangle(r0x, r0y + b, w, 2);&#xD;
                    Roi r1 = rectangleintersectionroi(r0, r);&#xD;
                    rm.add(imp, r1, 0);&#xD;
                    rm.showAll(0);&#xD;
                }&#xD;
            }&#xD;
            /////////////////////////////////////////////////////////////////// &#xD;
            GenericDialog gdG2 = new GenericDialog(&quot;List of values&quot;);&#xD;
            ListofValues lp = new ListofValues();&#xD;
            lp.init();&#xD;
            lp.addelements(stdvalues);&#xD;
            gdG2.add(lp);&#xD;
            gdG2.addMessage(&quot;&quot;);&#xD;
            gdG2.showDialog();&#xD;
            // required to ask the user again for values.&#xD;
            while (stdvalues.length != finallanes[indexes[0]].getPositionbands().length) {&#xD;
                if (gdG2.wasCanceled()) {&#xD;
                    gdG2.dispose();&#xD;
                    return;&#xD;
                }&#xD;
                if (gdG2.wasOKed()) {&#xD;
                    stdvalues = lp.getelements();&#xD;
                    if (stdvalues.length != finallanes[indexes[0]].getPositionbands().length) {&#xD;
                        IJ.error(&quot;The standard contains &quot; + stdvalues.length + &quot; elements,&quot; + &quot; but the reference lane contains &quot; + finallanes[indexes[0]].getPositionbands().length + &quot; bands.&quot;);&#xD;
                        gdG2.dispose();&#xD;
                        gdG2 = new GenericDialog(&quot;List of values&quot;);&#xD;
                        lp = new ListofValues();&#xD;
                        lp.init();&#xD;
                        lp.addelements(stdvalues);&#xD;
                        gdG2.add(lp);&#xD;
                        gdG2.addMessage(&quot;&quot;);&#xD;
                        gdG2.showDialog();&#xD;
                    }&#xD;
                }&#xD;
            }&#xD;
            initialoffset = finallanes[indexes[0]].getPositionbands()[0];&#xD;
            double tempoffset = 0;&#xD;
            for (int i = 0; i &lt; indexes.length; i++) {&#xD;
                finallanes[indexes[i]].setStdpositionbands(stdvalues);&#xD;
                tempoffset = initialoffset - finallanes[indexes[i]].getPositionbands()[0];&#xD;
                finallanes[indexes[i]].setOffset(tempoffset);&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    // Finally, we ask the user to select the calibration method. &#xD;
    CurveCalibration cc = new CurveCalibration(intarraytodoublearray(finallanes[indexes[0]].getPositionbands()), finallanes[indexes[0]].getStdpositionbands(), this);&#xD;
    normalisation = true;&#xD;
/*GenericDialog gdG = new GenericDialog(&quot;Checking&quot;);
         for(int i=0;i&lt;finallanes.length;i++){
         gdG.addMessage(finallanes[i].getName() + &quot; has &quot;+ 
         finallanes[i].getPositionbands().length + &quot; bands.&quot;);
         }
         gdG.showDialog();
         */&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MKwiIBUTEemIe6OhVnSywA" name="jButtonDendogramActionPerformed" specification="_MKus8BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    if (finallanes == null || finallanes.length == 0) {&#xD;
        IJ.error(&quot;In order to create a dendogram, you must (at least) detect the &quot; + &quot;lanes of the image.&quot;);&#xD;
    } else {&#xD;
        ImagePlus imp = IJ.getImage();&#xD;
        Dendogram panelOptions = new Dendogram(imp);&#xD;
        double tolerance_aux = 100;&#xD;
        if (!normalisation) {&#xD;
            IJ.error(&quot;You have not performed the normalisation step; therefore &quot; + &quot;you will only be able to use curve-based methods for the &quot; + &quot;dendrograms.&quot;);&#xD;
        } else {&#xD;
            panelOptions.activatebandbased();&#xD;
            computestdlanes(finallanes, calibrationmethod, initialoffset);&#xD;
            int[] indexes = indexesstandardlanes(finallanes);&#xD;
            double[] stds = finallanes[indexes[0]].getStdpositionbands();&#xD;
            tolerance_aux = stds[0] - stds[stds.length - 1];&#xD;
        }&#xD;
        boolean[] temp = selectlanes(lanesnames(finallanes));&#xD;
        selectedlanesforcomparison = temp;&#xD;
        if (temp == null || temp.length == 0) {&#xD;
            return;&#xD;
        }&#xD;
        selectedlanes = new Lane[trueinbooleanarray(temp)];&#xD;
        int j = 0;&#xD;
        for (int i = 0; i &lt; temp.length; i++) {&#xD;
            if (temp[i]) {&#xD;
                selectedlanes[j] = finallanes[i];&#xD;
                j++;&#xD;
            }&#xD;
        }&#xD;
        GenericDialog gdG = new GenericDialog(&quot;Cluster Analysis&quot;);&#xD;
        gdG.add(panelOptions);&#xD;
        gdG.addMessage(&quot;&quot;);&#xD;
        gdG.showDialog();&#xD;
        if (gdG.wasCanceled()) {&#xD;
            return;&#xD;
        }&#xD;
        similaritymethod = panelOptions.getSimilarity();&#xD;
        int clustering_alg = panelOptions.getClustering();&#xD;
        tol = panelOptions.getTolerance();&#xD;
        double tolerance = tolerance_aux * panelOptions.getTolerance() / 100;&#xD;
        int output = panelOptions.getOutput();&#xD;
        LaneComparison lc;&#xD;
        switch(similaritymethod) {&#xD;
            case 0:&#xD;
                lc = new Dice(tolerance);&#xD;
                simmethod = &quot;Dice&quot;;&#xD;
                break;&#xD;
            case 1:&#xD;
                lc = new Jaccard(tolerance);&#xD;
                simmethod = &quot;Jaccard&quot;;&#xD;
                break;&#xD;
            case 2:&#xD;
                lc = new Jeffrey(tolerance);&#xD;
                simmethod = &quot;Jeffrey's X&quot;;&#xD;
                break;&#xD;
            case 3:&#xD;
                lc = new Ochiai(tolerance);&#xD;
                simmethod = &quot;Ochiai&quot;;&#xD;
                break;&#xD;
            case 4:&#xD;
                lc = new BandDifference(tolerance);&#xD;
                simmethod = &quot;Band difference&quot;;&#xD;
                break;&#xD;
            case 5:&#xD;
                lc = new PearsonCorrelation();&#xD;
                simmethod = &quot;Pearson correlation&quot;;&#xD;
                break;&#xD;
            case 6:&#xD;
                lc = new CosineCorrelation();&#xD;
                simmethod = &quot;Cosine coefficient&quot;;&#xD;
                break;&#xD;
            case 7:&#xD;
                lc = new EuclideanDistance();&#xD;
                simmethod = &quot;Euclidean distance&quot;;&#xD;
                break;&#xD;
            case 8:&#xD;
                lc = new ManhattanDistance();&#xD;
                simmethod = &quot;Manhattan distance&quot;;&#xD;
                break;&#xD;
            default:&#xD;
                lc = new PearsonCorrelation();&#xD;
                simmethod = &quot;Pearson correlation&quot;;&#xD;
                break;&#xD;
        }&#xD;
        switch(clustering_alg) {&#xD;
            case SINGLE:&#xD;
                linkage = &quot;Single linkage&quot;;&#xD;
                break;&#xD;
            case COMPLETE:&#xD;
                linkage = &quot;Complete linkage&quot;;&#xD;
                break;&#xD;
            case UPGMA:&#xD;
                linkage = &quot;UPGMA&quot;;&#xD;
                break;&#xD;
            case MEAN:&#xD;
                linkage = &quot;Mean linkage&quot;;&#xD;
                break;&#xD;
            case UPGMC:&#xD;
                linkage = &quot;UPGMC&quot;;&#xD;
                break;&#xD;
            case WARD:&#xD;
                linkage = &quot;Ward&quot;;&#xD;
                break;&#xD;
            default:&#xD;
                break;&#xD;
        }&#xD;
        similaritytable = lc.CompareLanes(selectedlanes);&#xD;
        PleaseWait pw = new PleaseWait((JDialog) null, false);&#xD;
        pw.setVisible(true);&#xD;
        pw.toFront();&#xD;
        WekaClustering wc = new WekaClustering(clustering_alg, similaritytable, selectedlanes, similaritymethod, invertcolour, output, colour, null);&#xD;
        wc.computeandvisualisecluster(pw);&#xD;
        if (firstcomparison) {&#xD;
            createnewstudy();&#xD;
            firstcomparison = false;&#xD;
        } else {&#xD;
            createnewcomparison();&#xD;
        }&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MK0zkBUTEemIe6OhVnSywA" name="externalcomputestdlanes" specification="_MKyXUBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    computestdlanes(finallanes, calibrationmethod, initialoffset);&#xD;
    return finallanes;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MK324BUTEemIe6OhVnSywA" name="jButtonOptionsActionPerformed" specification="_MK2BsBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    ImagePlus imp = IJ.getImage();&#xD;
    if (normalisation) {&#xD;
        computestdlanes(finallanes, calibrationmethod, initialoffset);&#xD;
    }&#xD;
    if (o == null) {&#xD;
        o = new Options(this);&#xD;
    } else {&#xD;
        o.setMenu(this);&#xD;
        o.showWindow();&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MK6TIRUTEemIe6OhVnSywA" name="jButtonHelpActionPerformed" specification="_MK5FABUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    //To change body of generated methods, choose Tools | Templates.&#xD;
    throw new UnsupportedOperationException(&quot;Not supported yet.&quot;);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MK_LoBUTEemIe6OhVnSywA" name="setLanes" specification="_MK8IUBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.lanes = lanes;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MLC2ABUTEemIe6OhVnSywA" name="getLanes" specification="_MLAZwBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    return lanes;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MLHHcBUTEemIe6OhVnSywA" name="setLane" specification="_MLEEIBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    lanes[pos] = lane;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MLL_8BUTEemIe6OhVnSywA" name="setBands" specification="_MLI8oBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.bands = bands;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MLPqUBUTEemIe6OhVnSywA" name="getBands" specification="_MLNOEBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    return bands;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MLRfgBUTEemIe6OhVnSywA" name="makebuttonsavailable" specification="_MLQRYBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    jButton1.setEnabled(true);&#xD;
    jButtonDendogram.setEnabled(true);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MLTUsBUTEemIe6OhVnSywA" name="makebuttonstdavailable" specification="_MLStoBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    jButtonStandards.setEnabled(true);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MLVJ4BUTEemIe6OhVnSywA" name="setCalibrationmethod" specification="_MLTUsRUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.calibrationmethod = calibrationmethod;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MLYNMBUTEemIe6OhVnSywA" name="actionPerformed" specification="_MLW_EBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MLaCYBUTEemIe6OhVnSywA" name="itemStateChanged" specification="_MLYNMRUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MLdswBUTEemIe6OhVnSywA" name="mouseClicked" specification="_MLceoBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MLgJABUTEemIe6OhVnSywA" name="mousePressed" specification="_MLe64BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MLilQBUTEemIe6OhVnSywA" name="mouseReleased" specification="_MLhXIBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MLlBgBUTEemIe6OhVnSywA" name="mouseEntered" specification="_MLjzYBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MLoE0BUTEemIe6OhVnSywA" name="mouseExited" specification="_MLmPoBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MLsWQBUTEemIe6OhVnSywA" name="mouseWheelMoved" specification="_MLrIIBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MLvZkBUTEemIe6OhVnSywA" name="valueChanged" specification="_MLtkYBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MLx10BUTEemIe6OhVnSywA" name="setNormalisation" specification="_MLwAoBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.normalisation = normalisation;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ML0SEBUTEemIe6OhVnSywA" name="setInitialoffset" specification="_MLyc4BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.initialoffset = initialoffset;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ML1gMBUTEemIe6OhVnSywA" name="changeinvertcolour" specification="_ML05IBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.invertcolour = !this.invertcolour;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ML3VYBUTEemIe6OhVnSywA" name="getinvertcolour" specification="_ML2HQBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    return invertcolour;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ML5xoBUTEemIe6OhVnSywA" name="setInvertcolour" specification="_ML4jgBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.invertcolour = invertcolour;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ML7m0BUTEemIe6OhVnSywA" name="close" specification="_ML6_wBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    if (!saved) {&#xD;
        GenericDialog gd = new GenericDialog(&quot;Save Study&quot;);&#xD;
        gd.enableYesNoCancel();&#xD;
        gd.hideCancelButton();&#xD;
        gd.addMessage(&quot;Do you want to save the study for further use?&quot;);&#xD;
        gd.addMessage(&quot;&quot;);&#xD;
        gd.showDialog();&#xD;
        if (gd.wasOKed()) {&#xD;
            ImagePlus imp = WindowManager.getCurrentImage();&#xD;
            imp.changes = false;&#xD;
            Save s = new Save(imp, finallanes, bands, normalisation, initialoffset, invertcolour, marker);&#xD;
            try {&#xD;
                s.saveinfile();&#xD;
            } catch (IOException ex) {&#xD;
                Logger.getLogger(WekaClustering.class.getName()).log(Level.SEVERE, null, ex);&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    IJ.getInstance().quit();&#xD;
    super.close();&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ML9cARUTEemIe6OhVnSywA" name="getInitialoffset" specification="_ML808BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    return initialoffset;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ML-DEhUTEemIe6OhVnSywA" name="getCalibrationmethod" specification="_ML-DEBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    return calibrationmethod;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ML-qIhUTEemIe6OhVnSywA" name="setColour" specification="_ML-qIBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.colour = colour;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ML_RMRUTEemIe6OhVnSywA" name="getColour" specification="_ML-qIxUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    return colour;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ML_RMxUTEemIe6OhVnSywA" name="sortfinallanes" specification="_ML_RMhUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    for (int i = 0; i &lt; finallanes.length - 1; i++) {&#xD;
        int min = i;&#xD;
        for (int j = i + 1; j &lt; finallanes.length; j++) {&#xD;
            if (finallanes[j].getRoi().getBounds().x &lt; finallanes[min].getRoi().getBounds().x) {&#xD;
                min = j;&#xD;
            }&#xD;
        }&#xD;
        Lane temp = finallanes[i];&#xD;
        finallanes[i] = finallanes[min];&#xD;
        finallanes[min] = temp;&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ML_4QRUTEemIe6OhVnSywA" name="setFirst_time" specification="_ML_RNBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.first_time = first_time;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ML_4RBUTEemIe6OhVnSywA" name="getWindowname" specification="_ML_4QhUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    return windowname;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MMAfUhUTEemIe6OhVnSywA" name="setWindowname" specification="_MMAfUBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.windowname = windowname;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MMBGYRUTEemIe6OhVnSywA" name="setChanges" specification="_MMAfUxUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.changes = changes;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MMBGZBUTEemIe6OhVnSywA" name="getStudyid" specification="_MMBGYhUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    return studyid;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MMBtcRUTEemIe6OhVnSywA" name="setStudyid" specification="_MMBGZRUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.studyid = studyid;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MMBtdBUTEemIe6OhVnSywA" name="isNewstudy" specification="_MMBtchUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    return newstudy;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MMCUgBUTEemIe6OhVnSywA" name="setNewstudy" specification="_MMBtdRUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.newstudy = newstudy;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MMCUgxUTEemIe6OhVnSywA" name="getExperimentname" specification="_MMCUgRUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    return experimentname;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MMC7kBUTEemIe6OhVnSywA" name="setExperimentname" specification="_MMCUhBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.experimentname = experimentname;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MMC7kxUTEemIe6OhVnSywA" name="getExperimentcomments" specification="_MMC7kRUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    return experimentcomments;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MMC7lhUTEemIe6OhVnSywA" name="setExperimentcomments" specification="_MMC7lBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.experimentcomments = experimentcomments;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MMDiohUTEemIe6OhVnSywA" name="setUser" specification="_MMDioBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.user = user;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MMEJshUTEemIe6OhVnSywA" name="setSelectedlanesforcomparison" specification="_MMDioxUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.selectedlanesforcomparison = selectedlanesforcomparison;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MMEwwhUTEemIe6OhVnSywA" name="setMarker" specification="_MMEwwBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.marker = marker;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MMFX0hUTEemIe6OhVnSywA" name="setSimmethod" specification="_MMFX0BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.simmethod = simmethod;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MMF-4hUTEemIe6OhVnSywA" name="setLinkage" specification="_MMF-4BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.linkage = linkage;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MMGl8RUTEemIe6OhVnSywA" name="setTol" specification="_MMF-4xUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.tol = tol;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MMGl8xUTEemIe6OhVnSywA" name="changefirstcomparison" specification="_MMGl8hUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    firstcomparison = false;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MMHNABUTEemIe6OhVnSywA" name="createnewstudy" specification="_MMGl9BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    /// Creation of the study&#xD;
    studyid = lastStudyid();&#xD;
    String name = &quot;Study-&quot; + studyid;&#xD;
    String comments = &quot;&quot;;&#xD;
    java.util.Calendar cal = java.util.Calendar.getInstance();&#xD;
    java.util.Date utilDate = cal.getTime();&#xD;
    Date date = new Date(utilDate.getTime());&#xD;
    // Creating folders&#xD;
    File folder0 = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/GelJDBImages/&quot;);&#xD;
    if (!folder0.exists()) {&#xD;
        folder0.mkdir();&#xD;
    }&#xD;
    username = getUser(user).getUsername();&#xD;
    File folderuser = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/GelJDBImages/&quot; + studyid);&#xD;
    if (!folderuser.exists()) {&#xD;
        folderuser.mkdir();&#xD;
    }&#xD;
    File folder = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/GelJDBImages/&quot; + studyid + &quot;/&quot; + username);&#xD;
    folder.mkdir();&#xD;
    File folderexp = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/GelJDBImages/&quot; + studyid + &quot;/&quot; + username + &quot;/experiments/&quot;);&#xD;
    folderexp.mkdir();&#xD;
    File foldercomp = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/GelJDBImages/&quot; + studyid + &quot;/&quot; + username + &quot;/comparisons/&quot;);&#xD;
    foldercomp.mkdir();&#xD;
    String path = System.getProperty(&quot;user.dir&quot;) + &quot;/GelJDBImages/&quot; + studyid + &quot;/&quot; + username;&#xD;
    User u = getUser(user);&#xD;
    Study s = new Study(studyid, name, date, path, comments, u);&#xD;
    insertStudy(s);&#xD;
    //// Creation of the experiment&#xD;
    experimentid = lastExperimentid();&#xD;
    experimentname = &quot;Experiment-&quot; + experimentid;&#xD;
    Marker m = null;&#xD;
    if (marker != null) {&#xD;
        m = getMarker(marker);&#xD;
    } else {&#xD;
        m = getMarker(lastMarkerid() - 1);&#xD;
    }&#xD;
    e = new Experiment(experimentid, experimentname, date, windowname, calibrationmethod, &quot;&quot;, s, m, u);&#xD;
    insertExperiment(e);&#xD;
    // Creation of the folder where the experiment image will be saved.&#xD;
    File folderexp1 = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/GelJDBImages/&quot; + studyid + &quot;/&quot; + username + &quot;/experiments/&quot; + experimentid + &quot;/&quot;);&#xD;
    folderexp1.mkdir();&#xD;
    ImagePlus imp = WindowManager.getImage(windowname);&#xD;
    String pathimage = folderexp1 + &quot;/&quot; + windowname;&#xD;
    IJ.save(imp, pathimage);&#xD;
    //// Creation of the lanes to store them in the database&#xD;
    // Creation of the folder where the lanes will be saved.&#xD;
    File folderexplanes = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/GelJDBImages/&quot; + studyid + &quot;/&quot; + username + &quot;/experiments/&quot; + experimentid + &quot;/lanes/&quot;);&#xD;
    folderexplanes.mkdir();&#xD;
    // For each lane, we create a lanedb instance that is added to the database&#xD;
    laneid = lastLaneid();&#xD;
    updatelanesdb();&#xD;
    //// Creation of the comparison&#xD;
    int compid = lastComparisonid();&#xD;
    String compname = &quot;Comparison-&quot; + compid;&#xD;
    Comparison c = new Comparison(compid, compname, date, simmethod, linkage, tol, &quot;&quot;, s);&#xD;
    insertComparison(c);&#xD;
    /// Adding the selected lanes to the comparison&#xD;
    for (int i = 0; i &lt; selectedlanesforcomparison.length; i++) {&#xD;
        if (selectedlanesforcomparison[i]) {&#xD;
            insertComparisonLane(compid, laneid + i);&#xD;
        }&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MMIbIBUTEemIe6OhVnSywA" name="storeexperiment" specification="_MMH0EBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    username = getUser(user).getUsername();&#xD;
    java.util.Calendar cal = java.util.Calendar.getInstance();&#xD;
    java.util.Date utilDate = cal.getTime();&#xD;
    Date date = new Date(utilDate.getTime());&#xD;
    //// Creation of the experiment&#xD;
    experimentid = lastExperimentid();&#xD;
    experimentname = &quot;Experiment-&quot; + experimentid;&#xD;
    Marker m = null;&#xD;
    if (marker != null) {&#xD;
        m = getMarker(marker);&#xD;
    } else {&#xD;
        m = getMarker(lastMarkerid() - 1);&#xD;
    }&#xD;
    e = new Experiment(experimentid, experimentname, date, windowname, calibrationmethod, &quot;&quot;, getStudy(studyid), m, getUser(user));&#xD;
    insertExperiment(e);&#xD;
    // Creation of the folder where the experiment image will be saved.&#xD;
    File folderexp1 = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/GelJDBImages/&quot; + studyid + &quot;/&quot; + username + &quot;/experiments/&quot; + experimentid + &quot;/&quot;);&#xD;
    folderexp1.mkdir();&#xD;
    ImagePlus imp = WindowManager.getCurrentImage();&#xD;
    imp.deleteRoi();&#xD;
    imp.setOverlay(null);&#xD;
    String pathimage = folderexp1 + &quot;/&quot; + imp.getTitle();&#xD;
    IJ.save(imp, pathimage);&#xD;
    //// Creation of the lanes to store them in the database&#xD;
    // Creation of the folder where the lanes will be saved.&#xD;
    File folderexplanes = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/GelJDBImages/&quot; + studyid + &quot;/&quot; + username + &quot;/experiments/&quot; + experimentid + &quot;/lanes/&quot;);&#xD;
    folderexplanes.mkdir();&#xD;
    // For each lane, we create a lanedb instance that is added to the database&#xD;
    laneid = lastLaneid();&#xD;
    updatelanesdb();&#xD;
    return e;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MMJpQBUTEemIe6OhVnSywA" name="createnewcomparison" specification="_MMJCMBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    Study s = getStudy(studyid);&#xD;
    java.util.Calendar cal = java.util.Calendar.getInstance();&#xD;
    java.util.Date utilDate = cal.getTime();&#xD;
    Date date = new Date(utilDate.getTime());&#xD;
    // We update the lanes information just in case&#xD;
    updatelanesdb();&#xD;
    //// Creation of the comparison&#xD;
    int compid = lastComparisonid();&#xD;
    String compname = &quot;Comparison-&quot; + compid;&#xD;
    Comparison c = new Comparison(compid, compname, date, simmethod, linkage, tol, &quot;&quot;, s);&#xD;
    insertComparison(c);&#xD;
    /// Adding the selected lanes to the comparison&#xD;
    for (int i = 0; i &lt; selectedlanesforcomparison.length; i++) {&#xD;
        if (selectedlanesforcomparison[i]) {&#xD;
            insertComparisonLane(compid, laneid + i);&#xD;
        }&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MMKQUBUTEemIe6OhVnSywA" name="updatelanesdb" specification="_MMJpQRUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    for (int i = 0; i &lt; finallanes.length; i++) {&#xD;
        if (firstcomparison) {&#xD;
            String label = finallanes[i].getName();&#xD;
            LaneInfo l = (LaneInfo) lanesinfo.get(label);&#xD;
            String strainnumber = &quot;&quot; + (i + 1);&#xD;
            if (!l.getStrainNumber().equals(&quot;&quot;)) {&#xD;
                strainnumber = l.getStrainNumber();&#xD;
            }&#xD;
            LaneDB lanedb = new LaneDB(laneid + i, l.getGenus(), l.getSpecies(), &quot;&quot; + strainnumber, l.getCountry(), &quot;&quot;, finallanes[i].isIsstandard(), &quot;&quot;, e);&#xD;
            insertLane(lanedb);&#xD;
        }&#xD;
        /// Create folder&#xD;
        String folderlanepath = System.getProperty(&quot;user.dir&quot;) + &quot;/GelJDBImages/&quot; + studyid + &quot;/&quot; + username + &quot;/experiments/&quot; + experimentid + &quot;/lanes/&quot; + (laneid + i) + &quot;/&quot;;&#xD;
        File folderlane = new File(folderlanepath);&#xD;
        folderlane.mkdir();&#xD;
        /// Add files to folder&#xD;
        // Saving the image&#xD;
        IJ.saveAsTiff(finallanes[i].getImp(), folderlanepath + (laneid + i) + &quot;.tiff&quot;);&#xD;
        // Saving the molecular weights&#xD;
        String lanemws = folderlanepath + (laneid + i) + &quot;.mw&quot;;&#xD;
        PrintWriter writermws = new PrintWriter(lanemws, &quot;UTF-8&quot;);&#xD;
        for (int j = 0; j &lt; finallanes[i].getStdpositionbands().length; j++) {&#xD;
            writermws.println(finallanes[i].getStdpositionbands()[j]);&#xD;
        }&#xD;
        writermws.close();&#xD;
        // Saving the band positions&#xD;
        String lanebands = folderlanepath + (laneid + i) + &quot;.bands&quot;;&#xD;
        PrintWriter writerbands = new PrintWriter(lanebands, &quot;UTF-8&quot;);&#xD;
        for (int j = 0; j &lt; finallanes[i].getPositionbands().length; j++) {&#xD;
            writerbands.println(finallanes[i].getPositionbands()[j]);&#xD;
        }&#xD;
        writerbands.close();&#xD;
        // Saving the curve&#xD;
        String lanecurve = folderlanepath + (laneid + i) + &quot;.curve&quot;;&#xD;
        PrintWriter writercurve = new PrintWriter(lanecurve, &quot;UTF-8&quot;);&#xD;
        for (int j = 0; j &lt; finallanes[i].getProfile().length; j++) {&#xD;
            writercurve.println(finallanes[i].getProfile()[j]);&#xD;
        }&#xD;
        writercurve.close();&#xD;
        writermws.close();&#xD;
        // Saving the band positions&#xD;
        String lanebands2 = folderlanepath + (laneid + i) + &quot;.bands2&quot;;&#xD;
        PrintWriter writerbands2 = new PrintWriter(lanebands2, &quot;UTF-8&quot;);&#xD;
        for (int j = 0; j &lt; finallanes[i].getPositionbands2().length; j++) {&#xD;
            writerbands2.println(finallanes[i].getPositionbands2()[j]);&#xD;
        }&#xD;
        writerbands2.close();&#xD;
        RoiEncoder.save(finallanes[i].getRoi(), folderlanepath + (laneid + i) + &quot;.roi&quot;);&#xD;
    // Saving the roi&#xD;
    //            String laneroi = folderlanepath + (laneid + i) + &quot;.roi&quot;;&#xD;
    //            PrintWriter writerroi = new PrintWriter(laneroi, &quot;UTF-8&quot;);&#xD;
    //            &#xD;
    //            Roi p = finallanes[i].getRoi();          &#xD;
    //            for (int j = 0; j &lt; finallanes[i].getRoi().getPolygon().npoints; j++) {&#xD;
    //                writerroi.println(finallanes[i].getRoi().getPolygon().xpoints[j] + &quot;,&quot; + &#xD;
    //                        finallanes[i].getRoi().getPolygon().ypoints[j]);&#xD;
    //            }&#xD;
    //            writerroi.close();&#xD;
    //            &#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MMMFgBUTEemIe6OhVnSywA" name="updatelanedb" specification="_MMK3YBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    Lane[] newlanes = new Lane[markers.length + 1];&#xD;
    System.arraycopy(markers, 0, newlanes, 0, markers.length);&#xD;
    newlanes[markers.length] = finallanes[0];&#xD;
    computestdlane(finallanes[0], marker, invertcolour);&#xD;
    /// Create folder&#xD;
    String folderlanepath = System.getProperty(&quot;user.dir&quot;) + &quot;/GelJDBImages/&quot; + studyid + &quot;/&quot; + username + &quot;/experiments/&quot; + experimentid + &quot;/lanes/&quot; + id + &quot;/&quot;;&#xD;
    /// Add files to folder&#xD;
    // Saving the molecular weights&#xD;
    String lanemws = folderlanepath + id + &quot;.mw&quot;;&#xD;
    PrintWriter writermws = new PrintWriter(lanemws, &quot;UTF-8&quot;);&#xD;
    for (int j = 0; j &lt; finallanes[0].getStdpositionbands().length; j++) {&#xD;
        writermws.println(finallanes[0].getStdpositionbands()[j]);&#xD;
    }&#xD;
    writermws.close();&#xD;
    // Saving the band positions&#xD;
    String lanebands = folderlanepath + id + &quot;.bands&quot;;&#xD;
    PrintWriter writerbands = new PrintWriter(lanebands, &quot;UTF-8&quot;);&#xD;
    for (int j = 0; j &lt; finallanes[0].getPositionbands().length; j++) {&#xD;
        writerbands.println(finallanes[0].getPositionbands()[j]);&#xD;
    }&#xD;
    writerbands.close();&#xD;
    // Saving the band positions&#xD;
    String lanebands2 = folderlanepath + id + &quot;.bands2&quot;;&#xD;
    PrintWriter writerbands2 = new PrintWriter(lanebands2, &quot;UTF-8&quot;);&#xD;
    for (int j = 0; j &lt; finallanes[0].getPositionbands2().length; j++) {&#xD;
        writerbands2.println(finallanes[0].getPositionbands2()[j]);&#xD;
    }&#xD;
    writerbands2.close();&#xD;
    // Saving the curve&#xD;
    String lanecurve = folderlanepath + id + &quot;.curve&quot;;&#xD;
    PrintWriter writercurve = new PrintWriter(lanecurve, &quot;UTF-8&quot;);&#xD;
    for (int j = 0; j &lt; finallanes[0].getProfile().length; j++) {&#xD;
        writercurve.println(finallanes[0].getProfile()[j]);&#xD;
    }&#xD;
    writercurve.close();&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MMMskRUTEemIe6OhVnSywA" name="bandmanagerfunctionality" specification="_MMMFgRUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    if (finallanes == null || finallanes.length == 0) {&#xD;
        IJ.error(&quot;As a first step, you must detect the lanes of the image&quot;);&#xD;
    } else {&#xD;
        IJ.setTool(&quot;point&quot;);&#xD;
        bm = new BandManager(this, true);&#xD;
        ImagePlus imp = WindowManager.getCurrentImage();&#xD;
        BandManagerCanvas cc = new BandManagerCanvas(imp);&#xD;
        ImageWindow imageWindow = new ImageWindow(imp, cc);&#xD;
        if (finallanes != null) {&#xD;
            for (int i = 0; i &lt; finallanes.length; i++) {&#xD;
                int[] positionbands = finallanes[i].getPositionbands();&#xD;
                if (positionbands != null) {&#xD;
                    for (int b : positionbands) {&#xD;
                        Roi r0 = finallanes[i].getRoi();&#xD;
                        int r0x = r0.getBounds().x;&#xD;
                        int r0y = r0.getBounds().y;&#xD;
                        int w = r0.getBounds().width;&#xD;
                        Rectangle r = new Rectangle(r0x, r0y + b, w, 2);&#xD;
                        Roi r1 = rectangleintersectionroi(r0, r);&#xD;
                        r1.setFillColor(colour);&#xD;
                        bm.add(imp, r1, 0, i);&#xD;
                        bm.showAll(0);&#xD;
                    }&#xD;
                }&#xD;
            }&#xD;
        }&#xD;
        bm.requestFocus();&#xD;
    /*if (bands!=null){
             for (Band band : bands) {
             bm.add(imp,band.getRoi(),0,band.getLane());
             bm.showAll(0);
             }   
             }*/&#xD;
    }&#xD;
    return bm;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MMNToBUTEemIe6OhVnSywA" name="setLm" specification="_MMMskhUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.lm = lm;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MMNToxUTEemIe6OhVnSywA" name="getLanesinfo" specification="_MMNToRUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    return lanesinfo;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MMN6shUTEemIe6OhVnSywA" name="setLanesinfo" specification="_MMN6sBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.lanesinfo = lanesinfo;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MMOhwRUTEemIe6OhVnSywA" name="getMarkername" specification="_MMN6sxUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    return marker;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MMPI0BUTEemIe6OhVnSywA" name="savestandardadditionalinfo" specification="_MMOhwhUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    int[] indexes = indexesstandardlanes(finallanes);&#xD;
    double[] info = { 28, 289, 9 };&#xD;
    String workingfile2 = System.getProperty(&quot;user.dir&quot;) + &quot;/standardfiles/info/&quot; + marker + &quot;.info&quot;;&#xD;
    PrintWriter writer2 = new PrintWriter(workingfile2, &quot;UTF-8&quot;);&#xD;
    writer2.println(finallanes[indexes[0]].getImp().getWidth());&#xD;
    writer2.println(finallanes[indexes[0]].getImp().getHeight());&#xD;
    writer2.println(calibrationmethod);&#xD;
    writer2.close();&#xD;
    int[] pos = finallanes[indexes[0]].getPositionbands();&#xD;
    workingfile2 = System.getProperty(&quot;user.dir&quot;) + &quot;/standardfiles/info/&quot; + marker + &quot;.pos&quot;;&#xD;
    writer2 = new PrintWriter(workingfile2, &quot;UTF-8&quot;);&#xD;
    for (int i = 0; i &lt; pos.length; i++) {&#xD;
        writer2.println(pos[i]);&#xD;
    }&#xD;
    writer2.close();&#xD;
</body>
              </ownedBehavior>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MJ8p0BUTEemIe6OhVnSywA" name="cleanall" visibility="private" method="_MJ9Q4BUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MJ-fABUTEemIe6OhVnSywA" name="Menu" visibility="public" method="_MKAUMBUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MKBiUBUTEemIe6OhVnSywA" name="showWindow" visibility="private" method="_MKCJYBUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MKDXgBUTEemIe6OhVnSywA" name="setExperimentid" visibility="public" method="_MKEloBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MKD-kBUTEemIe6OhVnSywA" name="experimentid">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MKFzwBUTEemIe6OhVnSywA" name="setUsername" visibility="public" method="_MKHo8BUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MKHB4BUTEemIe6OhVnSywA" name="username"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MKI3EBUTEemIe6OhVnSywA" name="jButtonOpenActionPerformed" visibility="private" method="_MKOWoBUTEemIe6OhVnSywA" raisedException="_MKLTUBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MKJeIBUTEemIe6OhVnSywA" name="evt"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MKPkwBUTEemIe6OhVnSywA" name="enableall" visibility="public" method="_MKQL0BUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MKSBABUTEemIe6OhVnSywA" name="jButtonSaveActionPerformed" visibility="private" method="_MKUdQBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MKSoEBUTEemIe6OhVnSywA" name="evt"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MKVrYBUTEemIe6OhVnSywA" name="jButtonEditActionPerformed" visibility="private" method="_MKYHoBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MKW5gBUTEemIe6OhVnSywA" name="evt"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MKZVwBUTEemIe6OhVnSywA" name="jButtonSelectActionPerformed" visibility="private" method="_MKaj4BUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MKZ80BUTEemIe6OhVnSywA" name="evt"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MKcZEBUTEemIe6OhVnSywA" name="jButtonCropActionPerformed" visibility="private" method="_MKdnMBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MKdAIBUTEemIe6OhVnSywA" name="evt"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MKe1UBUTEemIe6OhVnSywA" name="jButtonProcessingActionPerformed" visibility="private" method="_MKfcYBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MKe1URUTEemIe6OhVnSywA" name="evt"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MKgqgBUTEemIe6OhVnSywA" name="jButtonLanesActionPerformed" visibility="private" method="_MKjGwBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MKh4oBUTEemIe6OhVnSywA" name="evt"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MKljABUTEemIe6OhVnSywA" name="jButton1ActionPerformed" visibility="private" method="_MKnYMBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MKmKEBUTEemIe6OhVnSywA" name="evt"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MKpNYBUTEemIe6OhVnSywA" name="jButtonStandardsActionPerformed" visibility="private" method="_MKsQsBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MKqbgBUTEemIe6OhVnSywA" name="evt"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MKus8BUTEemIe6OhVnSywA" name="jButtonDendogramActionPerformed" visibility="private" method="_MKwiIBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MKvUABUTEemIe6OhVnSywA" name="evt"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MKyXUBUTEemIe6OhVnSywA" name="externalcomputestdlanes" visibility="public" method="_MK0zkBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MKy-YBUTEemIe6OhVnSywA" type="_MGiwgRUTEemIe6OhVnSywA" direction="return">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MKzlcBUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MK0MgBUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MK2BsBUTEemIe6OhVnSywA" name="jButtonOptionsActionPerformed" visibility="private" method="_MK324BUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MK3P0BUTEemIe6OhVnSywA" name="evt"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MK5FABUTEemIe6OhVnSywA" name="jButtonHelpActionPerformed" visibility="private" method="_MK6TIRUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MK6TIBUTEemIe6OhVnSywA" name="evt"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MK8IUBUTEemIe6OhVnSywA" name="setLanes" visibility="public" method="_MK_LoBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MK8vYBUTEemIe6OhVnSywA" name="lanes">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MK99gBUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MK-kkBUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MLAZwBUTEemIe6OhVnSywA" name="getLanes" visibility="public" method="_MLC2ABUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MLBA0BUTEemIe6OhVnSywA" direction="return">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MLBn4BUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MLCO8BUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MLEEIBUTEemIe6OhVnSywA" name="setLane" visibility="public" method="_MLHHcBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MLFSQBUTEemIe6OhVnSywA" name="lane"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MLGgYBUTEemIe6OhVnSywA" name="pos">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MLI8oBUTEemIe6OhVnSywA" name="setBands" visibility="public" method="_MLL_8BUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MLKKwBUTEemIe6OhVnSywA" name="bands" type="_MJxqsxUTEemIe6OhVnSywA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MLKx0BUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MLLY4BUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MLNOEBUTEemIe6OhVnSywA" name="getBands" visibility="public" method="_MLPqUBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MLN1IBUTEemIe6OhVnSywA" type="_MJxqsxUTEemIe6OhVnSywA" direction="return">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MLOcMBUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MLPDQBUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MLQRYBUTEemIe6OhVnSywA" name="makebuttonsavailable" visibility="public" method="_MLRfgBUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MLStoBUTEemIe6OhVnSywA" name="makebuttonstdavailable" visibility="public" method="_MLTUsBUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MLTUsRUTEemIe6OhVnSywA" name="setCalibrationmethod" visibility="public" method="_MLVJ4BUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MLUi0BUTEemIe6OhVnSywA" name="calibrationmethod">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MLW_EBUTEemIe6OhVnSywA" name="actionPerformed" visibility="public" method="_MLYNMBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MLXmIBUTEemIe6OhVnSywA" name="e"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MLYNMRUTEemIe6OhVnSywA" name="itemStateChanged" visibility="public" method="_MLaCYBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MLZbUBUTEemIe6OhVnSywA" name="e"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MLceoBUTEemIe6OhVnSywA" name="mouseClicked" visibility="public" method="_MLdswBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MLdFsBUTEemIe6OhVnSywA" name="e"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MLe64BUTEemIe6OhVnSywA" name="mousePressed" visibility="public" method="_MLgJABUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MLfh8BUTEemIe6OhVnSywA" name="e"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MLhXIBUTEemIe6OhVnSywA" name="mouseReleased" visibility="public" method="_MLilQBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MLh-MBUTEemIe6OhVnSywA" name="e"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MLjzYBUTEemIe6OhVnSywA" name="mouseEntered" visibility="public" method="_MLlBgBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MLkacBUTEemIe6OhVnSywA" name="e"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MLmPoBUTEemIe6OhVnSywA" name="mouseExited" visibility="public" method="_MLoE0BUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MLndwBUTEemIe6OhVnSywA" name="e"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MLrIIBUTEemIe6OhVnSywA" name="mouseWheelMoved" visibility="public" method="_MLsWQBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MLrvMBUTEemIe6OhVnSywA" name="e"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MLtkYBUTEemIe6OhVnSywA" name="valueChanged" visibility="public" method="_MLvZkBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MLuygBUTEemIe6OhVnSywA" name="e"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MLwAoBUTEemIe6OhVnSywA" name="setNormalisation" visibility="public" method="_MLx10BUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MLxOwBUTEemIe6OhVnSywA" name="normalisation">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MLyc4BUTEemIe6OhVnSywA" name="setInitialoffset" visibility="public" method="_ML0SEBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MLzrABUTEemIe6OhVnSywA" name="initialoffset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_ML05IBUTEemIe6OhVnSywA" name="changeinvertcolour" visibility="public" method="_ML1gMBUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_ML2HQBUTEemIe6OhVnSywA" name="getinvertcolour" visibility="public" method="_ML3VYBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_ML2uUBUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_ML4jgBUTEemIe6OhVnSywA" name="setInvertcolour" visibility="public" method="_ML5xoBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_ML5KkBUTEemIe6OhVnSywA" name="invertcolour">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_ML6_wBUTEemIe6OhVnSywA" name="close" visibility="public" method="_ML7m0BUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_ML808BUTEemIe6OhVnSywA" name="getInitialoffset" visibility="public" method="_ML9cARUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_ML9cABUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_ML-DEBUTEemIe6OhVnSywA" name="getCalibrationmethod" visibility="public" method="_ML-DEhUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_ML-DERUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_ML-qIBUTEemIe6OhVnSywA" name="setColour" visibility="public" method="_ML-qIhUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_ML-qIRUTEemIe6OhVnSywA" name="colour"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_ML-qIxUTEemIe6OhVnSywA" name="getColour" visibility="public" method="_ML_RMRUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_ML_RMBUTEemIe6OhVnSywA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_ML_RMhUTEemIe6OhVnSywA" name="sortfinallanes" visibility="public" method="_ML_RMxUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_ML_RNBUTEemIe6OhVnSywA" name="setFirst_time" visibility="public" method="_ML_4QRUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_ML_4QBUTEemIe6OhVnSywA" name="first_time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_ML_4QhUTEemIe6OhVnSywA" name="getWindowname" visibility="public" method="_ML_4RBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_ML_4QxUTEemIe6OhVnSywA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MMAfUBUTEemIe6OhVnSywA" name="setWindowname" visibility="public" method="_MMAfUhUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MMAfURUTEemIe6OhVnSywA" name="windowname"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MMAfUxUTEemIe6OhVnSywA" name="setChanges" visibility="public" method="_MMBGYRUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MMBGYBUTEemIe6OhVnSywA" name="changes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MMBGYhUTEemIe6OhVnSywA" name="getStudyid" visibility="public" method="_MMBGZBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MMBGYxUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MMBGZRUTEemIe6OhVnSywA" name="setStudyid" visibility="public" method="_MMBtcRUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MMBtcBUTEemIe6OhVnSywA" name="studyid">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MMBtchUTEemIe6OhVnSywA" name="isNewstudy" visibility="public" method="_MMBtdBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MMBtcxUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MMBtdRUTEemIe6OhVnSywA" name="setNewstudy" visibility="public" method="_MMCUgBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MMBtdhUTEemIe6OhVnSywA" name="newstudy">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MMCUgRUTEemIe6OhVnSywA" name="getExperimentname" visibility="public" method="_MMCUgxUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MMCUghUTEemIe6OhVnSywA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MMCUhBUTEemIe6OhVnSywA" name="setExperimentname" visibility="public" method="_MMC7kBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MMCUhRUTEemIe6OhVnSywA" name="experimentname"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MMC7kRUTEemIe6OhVnSywA" name="getExperimentcomments" visibility="public" method="_MMC7kxUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MMC7khUTEemIe6OhVnSywA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MMC7lBUTEemIe6OhVnSywA" name="setExperimentcomments" visibility="public" method="_MMC7lhUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MMC7lRUTEemIe6OhVnSywA" name="experimentcomments"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MMDioBUTEemIe6OhVnSywA" name="setUser" visibility="public" method="_MMDiohUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MMDioRUTEemIe6OhVnSywA" name="user">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MMDioxUTEemIe6OhVnSywA" name="setSelectedlanesforcomparison" visibility="public" method="_MMEJshUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MMDipBUTEemIe6OhVnSywA" name="selectedlanesforcomparison">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MMEJsBUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MMEJsRUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MMEwwBUTEemIe6OhVnSywA" name="setMarker" visibility="public" method="_MMEwwhUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MMEwwRUTEemIe6OhVnSywA" name="marker"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MMFX0BUTEemIe6OhVnSywA" name="setSimmethod" visibility="public" method="_MMFX0hUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MMFX0RUTEemIe6OhVnSywA" name="simmethod"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MMF-4BUTEemIe6OhVnSywA" name="setLinkage" visibility="public" method="_MMF-4hUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MMF-4RUTEemIe6OhVnSywA" name="linkage"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MMF-4xUTEemIe6OhVnSywA" name="setTol" visibility="public" method="_MMGl8RUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MMGl8BUTEemIe6OhVnSywA" name="tol">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MMGl8hUTEemIe6OhVnSywA" name="changefirstcomparison" visibility="public" method="_MMGl8xUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MMGl9BUTEemIe6OhVnSywA" name="createnewstudy" visibility="public" method="_MMHNABUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MMH0EBUTEemIe6OhVnSywA" name="storeexperiment" visibility="public" method="_MMIbIBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MMH0ERUTEemIe6OhVnSywA" type="_EJs1wBUTEemIe6OhVnSywA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MMJCMBUTEemIe6OhVnSywA" name="createnewcomparison" visibility="public" method="_MMJpQBUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MMJpQRUTEemIe6OhVnSywA" name="updatelanesdb" visibility="private" method="_MMKQUBUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MMK3YBUTEemIe6OhVnSywA" name="updatelanedb" visibility="public" method="_MMMFgBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MMK3YRUTEemIe6OhVnSywA" name="id">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MMK3YhUTEemIe6OhVnSywA" name="markers" type="_MGiwgRUTEemIe6OhVnSywA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MMLecBUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MMLecRUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MMMFgRUTEemIe6OhVnSywA" name="bandmanagerfunctionality" visibility="public" method="_MMMskRUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MMMskBUTEemIe6OhVnSywA" type="_MEgJIBUTEemIe6OhVnSywA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MMMskhUTEemIe6OhVnSywA" name="setLm" visibility="public" method="_MMNToBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MMMskxUTEemIe6OhVnSywA" name="lm" type="_MHgZ0BUTEemIe6OhVnSywA"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MMNToRUTEemIe6OhVnSywA" name="getLanesinfo" visibility="public" method="_MMNToxUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MMNTohUTEemIe6OhVnSywA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MMN6sBUTEemIe6OhVnSywA" name="setLanesinfo" visibility="public" method="_MMN6shUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MMN6sRUTEemIe6OhVnSywA" name="lanesinfo"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MMN6sxUTEemIe6OhVnSywA" name="getMarkername" visibility="public" method="_MMOhwRUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MMOhwBUTEemIe6OhVnSywA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MMOhwhUTEemIe6OhVnSywA" name="savestandardadditionalinfo" visibility="public" method="_MMPI0BUTEemIe6OhVnSywA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_MFY58BUTEemIe6OhVnSywA" name="Line"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_MGJu8BUTEemIe6OhVnSywA" name="Filters" visibility="public">
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MGOncRUTEemIe6OhVnSywA" name="MEAN" visibility="public" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MGPOgBUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>0</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MGPOgRUTEemIe6OhVnSywA" name="MIN" visibility="public" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MGPOghUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>1</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MGP1kBUTEemIe6OhVnSywA" name="MAX" visibility="public" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MGP1kRUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>2</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MGP1khUTEemIe6OhVnSywA" name="VARIANCE" visibility="public" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MGP1kxUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>3</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MGP1lBUTEemIe6OhVnSywA" name="MEDIAN" visibility="public" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MGQcoBUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>4</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MGQcoRUTEemIe6OhVnSywA" name="Gaussian" visibility="public" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MGQcohUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>5</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MGQcoxUTEemIe6OhVnSywA" name="FLAGS" visibility="private" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MGQcpBUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>DOES_ALL | SUPPORTS_MASKING | KEEP_PREVIEW | FINAL_PROCESSING</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MGRDsBUTEemIe6OhVnSywA" name="radius" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MGRDsRUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>2</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MGRDshUTEemIe6OhVnSywA" name="filter" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MGRDsxUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>0</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MGRDtBUTEemIe6OhVnSywA" name="nPasses" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MGRDtRUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>1</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MGS44RUTEemIe6OhVnSywA" name="rf" visibility="private" isUnique="false">
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MGTf8BUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>new RankFilters()</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MGTf8RUTEemIe6OhVnSywA" name="pfr" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MGUHABUTEemIe6OhVnSywA" name="imp" visibility="private" isUnique="false"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MGVVIRUTEemIe6OhVnSywA" name="showDialog" specification="_MGUHARUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    GenericDialog gd = new GenericDialog(command);&#xD;
    String[] filters = { &quot;Mean&quot;, &quot;Minimum&quot;, &quot;Maximum&quot;, &quot;Variance&quot;, &quot;Median&quot;, &quot;Gaussian&quot; };&#xD;
    gd.addChoice(&quot;Filter:&quot;, filters, &quot;Mean&quot;);&#xD;
    gd.addNumericField(&quot;Radius:&quot;, radius, 2);&#xD;
    this.imp = imp;&#xD;
    this.pfr = pfr;&#xD;
    gd.addPreviewCheckbox(pfr);&#xD;
    gd.addDialogListener(this);&#xD;
    // input by the user (or macro) happens here&#xD;
    gd.showDialog();&#xD;
    if (gd.wasCanceled())&#xD;
        return DONE;&#xD;
    IJ.register(this.getClass());&#xD;
    return IJ.setupDialog(imp, FLAGS);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MGV8MRUTEemIe6OhVnSywA" name="setNPasses" specification="_MGVVIhUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.nPasses = nPasses;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MGWjQhUTEemIe6OhVnSywA" name="setup" specification="_MGV8MhUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.imp = imp;&#xD;
    return FLAGS;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MGaNoBUTEemIe6OhVnSywA" name="run" specification="_MGY_gBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    if (filter &lt; 5)&#xD;
        rf.rank(imp.getProcessor(), radius, filter);&#xD;
    ip.blurGaussian(radius);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MGdQ8RUTEemIe6OhVnSywA" name="dialogItemChanged" specification="_MGcC0RUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    radius = gd.getNextNumber();&#xD;
    filter = gd.getNextChoiceIndex();&#xD;
    if (radius &lt; 0 || gd.invalidNumber())&#xD;
        return false;&#xD;
    return true;&#xD;
</body>
              </ownedBehavior>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MGUHARUTEemIe6OhVnSywA" name="showDialog" visibility="public" method="_MGVVIRUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MGUuEBUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MGUuERUTEemIe6OhVnSywA" name="imp"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MGUuEhUTEemIe6OhVnSywA" name="command"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MGVVIBUTEemIe6OhVnSywA" name="pfr"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MGVVIhUTEemIe6OhVnSywA" name="setNPasses" visibility="public" method="_MGV8MRUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MGV8MBUTEemIe6OhVnSywA" name="nPasses">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MGV8MhUTEemIe6OhVnSywA" name="setup" visibility="public" method="_MGWjQhUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MGV8MxUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MGWjQBUTEemIe6OhVnSywA" name="arg"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MGWjQRUTEemIe6OhVnSywA" name="imp"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MGY_gBUTEemIe6OhVnSywA" name="run" visibility="public" method="_MGaNoBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MGZmkBUTEemIe6OhVnSywA" name="ip"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MGcC0RUTEemIe6OhVnSywA" name="dialogItemChanged" visibility="public" method="_MGdQ8RUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MGcp4BUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MGcp4RUTEemIe6OhVnSywA" name="gd"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MGdQ8BUTEemIe6OhVnSywA" name="e"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_MGg7UBUTEemIe6OhVnSywA" name="WekaClustering" visibility="public">
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MGg7URUTEemIe6OhVnSywA" name="SINGLE" visibility="public" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MGg7UhUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>0</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MGg7UxUTEemIe6OhVnSywA" name="COMPLETE" visibility="public" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MGg7VBUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>1</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MGhiYBUTEemIe6OhVnSywA" name="UPGMA" visibility="public" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MGhiYRUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>2</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MGhiYhUTEemIe6OhVnSywA" name="MEAN" visibility="public" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MGhiYxUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>3</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MGhiZBUTEemIe6OhVnSywA" name="UPGMC" visibility="public" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MGhiZRUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>4</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MGhiZhUTEemIe6OhVnSywA" name="WARD" visibility="public" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MGhiZxUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>5</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MGhiaBUTEemIe6OhVnSywA" name="NEIGHBOR_JOINING" visibility="public" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MGhiaRUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>7</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MGiJcBUTEemIe6OhVnSywA" name="linktype" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MGiJcRUTEemIe6OhVnSywA" name="data" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MGiJchUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MGiJcxUTEemIe6OhVnSywA" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MGiJdBUTEemIe6OhVnSywA" name="names" visibility="private" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MGiJdRUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MGiwgBUTEemIe6OhVnSywA" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MGiwghUTEemIe6OhVnSywA" name="finallanes" visibility="private" type="_MGiwgRUTEemIe6OhVnSywA" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MGiwgxUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MGiwhBUTEemIe6OhVnSywA" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MGjXkBUTEemIe6OhVnSywA" name="link" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MGjXkRUTEemIe6OhVnSywA" name="method" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MGj-oBUTEemIe6OhVnSywA" name="invert" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MGj-oRUTEemIe6OhVnSywA" name="output" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MGj-ohUTEemIe6OhVnSywA" name="m" visibility="private" type="_MEzrIBUTEemIe6OhVnSywA" isUnique="false">
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MGklsBUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>null</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MGklsRUTEemIe6OhVnSywA" name="c" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MGlMwBUTEemIe6OhVnSywA" name="fields" visibility="private" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MGlMwRUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MGlMwhUTEemIe6OhVnSywA" value="*"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MGqFQBUTEemIe6OhVnSywA" name="WekaClustering" specification="_MGma4BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.linktype = linktype;&#xD;
    this.data = data;&#xD;
    this.finallanes = finallanes;&#xD;
    this.method = method;&#xD;
    this.invert = invert;&#xD;
    this.output = output;&#xD;
    this.c = c;&#xD;
    this.fields = fields;&#xD;
    names = lanesnames(this.finallanes);&#xD;
    switch(linktype) {&#xD;
        case SINGLE:&#xD;
            link = &quot;Single linkage&quot;;&#xD;
            break;&#xD;
        case COMPLETE:&#xD;
            link = &quot;Complete linkage&quot;;&#xD;
            break;&#xD;
        case UPGMA:&#xD;
            link = &quot;UPGMA&quot;;&#xD;
            break;&#xD;
        case MEAN:&#xD;
            link = &quot;Mean linkage&quot;;&#xD;
            break;&#xD;
        case UPGMC:&#xD;
            link = &quot;UPGMC&quot;;&#xD;
            break;&#xD;
        case WARD:&#xD;
            link = &quot;Ward&quot;;&#xD;
            break;&#xD;
        default:&#xD;
            break;&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MGtIkBUTEemIe6OhVnSywA" name="WekaClustering" specification="_MGqFQRUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.linktype = linktype;&#xD;
    this.data = data;&#xD;
    this.finallanes = finallanes;&#xD;
    this.method = method;&#xD;
    this.invert = invert;&#xD;
    this.output = output;&#xD;
    this.m = m;&#xD;
    this.c = m.getColour();&#xD;
    this.fields = fields;&#xD;
    names = lanesnames(this.finallanes);&#xD;
    switch(linktype) {&#xD;
        case SINGLE:&#xD;
            link = &quot;Single linkage&quot;;&#xD;
            break;&#xD;
        case COMPLETE:&#xD;
            link = &quot;Complete linkage&quot;;&#xD;
            break;&#xD;
        case UPGMA:&#xD;
            link = &quot;UPGMA&quot;;&#xD;
            break;&#xD;
        case MEAN:&#xD;
            link = &quot;Mean linkage&quot;;&#xD;
            break;&#xD;
        case UPGMC:&#xD;
            link = &quot;UPGMC&quot;;&#xD;
            break;&#xD;
        case WARD:&#xD;
            link = &quot;Ward&quot;;&#xD;
            break;&#xD;
        default:&#xD;
            break;&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MGtvoRUTEemIe6OhVnSywA" name="computeandvisualisecluster" specification="_MGtIkRUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    int len = data.length;&#xD;
    // We create a feature vector and the attributes to the feature vector&#xD;
    FastVector fvWekaAttributes = new FastVector(len);&#xD;
    for (int i = 0; i &lt; len; i++) {&#xD;
        fvWekaAttributes.addElement(new Attribute(names[i]));&#xD;
    }&#xD;
    // We create an empty set of instances&#xD;
    Instances ins_data = new Instances(&quot;Rel&quot;, fvWekaAttributes, len);&#xD;
    // We create the instances and add them to the set of instances&#xD;
    for (int j = 0; j &lt; len; j++) {&#xD;
        Instance ins = new DenseInstance(len);&#xD;
        for (int k = 0; k &lt; len; k++) {&#xD;
            ins.setValue((Attribute) fvWekaAttributes.elementAt(k), data[j][k]);&#xD;
        }&#xD;
        ins_data.add(ins);&#xD;
    }&#xD;
    // We define the cluster instance&#xD;
    // Define the cluster instance&#xD;
    HierarchicalClusterer hc = new HierarchicalClusterer();&#xD;
    hc.setNumClusters(1);&#xD;
    hc.setLinkType(new SelectedTag(linktype, TAGS_LINK_TYPE));&#xD;
    hc.setDistanceFunction(new EuclideanDistance());&#xD;
    hc.buildClusterermatrix(ins_data, data);&#xD;
    String graph = hc.graph();&#xD;
    String graph1 = changespanishdot(graph);&#xD;
    //hierarchicaltreevisualise(graph);&#xD;
    //String[] temp = namesinorder(graph.substring(8));&#xD;
    String[] newnames = namesinorder(graph1.substring(8));&#xD;
    Lane[] reorderlanes = reorderlanes(finallanes, newnames);&#xD;
    /*
         Montage m = new Montage(IJ.getImage(),getImagesfromfinallanes(reorderlanes,method));
        

        
        
         switch (linktype){
         case SINGLE:
         m.createMontage(&quot;Reordered Lanes using Single Linkage&quot;);
         break;
         case COMPLETE:
         m.createMontage(&quot;Reordered Lanes using Complete Linkage&quot;);
         break;    
         case UPGMA:
         m.createMontage(&quot;Reordered Lanes using UPGMA&quot;);
         break;     
         case MEAN:
         m.createMontage(&quot;Reordered Lanes using Mean Linkage&quot;);
         break;
         case UPGMC:
         m.createMontage(&quot;Reordered Lanes using UPGMC&quot;);
         break; 
         case WARD:
         m.createMontage(&quot;Reordered Lanes using WARD&quot;);
         break; 
         default:
         break;
         }
         */&#xD;
    ClusterDraw cd = new ClusterDraw(graph1, reorderlanes, method, invert, output, c, fields);&#xD;
    cd.showDiagram(pw);&#xD;
    return graph1;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MGuWshUTEemIe6OhVnSywA" name="hierarchicaltreevisualise" specification="_MGuWsBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    final javax.swing.JFrame jf = new javax.swing.JFrame(link + &quot; clustering&quot;);&#xD;
    jf.setSize(400, 500);&#xD;
    jf.getContentPane().setLayout(new BorderLayout());&#xD;
    HierarchyVisualizer tv = new HierarchyVisualizer(graph.substring(7));&#xD;
    jf.getContentPane().add(tv, BorderLayout.CENTER);&#xD;
    jf.addWindowListener(new java.awt.event.WindowAdapter() {&#xD;
&#xD;
        @Override&#xD;
        public void windowClosing(java.awt.event.WindowEvent e) {&#xD;
            jf.dispose();&#xD;
        }&#xD;
    });&#xD;
    jf.setVisible(true);&#xD;
    tv.fitToScreen();&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MGvk0BUTEemIe6OhVnSywA" name="changespanishdot" specification="_MGu9wBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    boolean remains = true;&#xD;
    String temp = s;&#xD;
    String res = &quot;&quot;;&#xD;
    while (remains) {&#xD;
        if (temp.contains(&quot;:0,&quot;)) {&#xD;
            int pos = temp.indexOf(&quot;:0,&quot;);&#xD;
            char c = temp.charAt(pos + 3);&#xD;
            if (c >= '0' &amp;&amp; c &lt;= '9') {&#xD;
                res = res + temp.substring(0, pos) + &quot;:0.&quot;;&#xD;
                temp = temp.substring(pos + 3);&#xD;
            } else {&#xD;
                res = res + temp.substring(0, pos) + &quot;:0,&quot;;&#xD;
                temp = temp.substring(pos + 3);&#xD;
            }&#xD;
        } else {&#xD;
            res = res + temp;&#xD;
            remains = false;&#xD;
        }&#xD;
    }&#xD;
    return res;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MGwL4RUTEemIe6OhVnSywA" name="removecommafromname" specification="_MGvk0RUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    if (s.contains(&quot;,&quot;)) {&#xD;
        return s.substring(s.indexOf(&quot;,&quot;) + 1);&#xD;
    } else {&#xD;
        return s;&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MGxaAxUTEemIe6OhVnSywA" name="removenameswithcommas" specification="_MGwy8BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    String[] res = new String[ls.length];&#xD;
    for (int i = 0; i &lt; ls.length; i++) {&#xD;
        res[i] = removecommafromname(ls[i]);&#xD;
    }&#xD;
    return res;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MGyoIBUTEemIe6OhVnSywA" name="namesinorder" specification="_MGxaBBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    boolean remains = true;&#xD;
    String[] res = new String[finallanes.length];&#xD;
    int i = 0;&#xD;
    String temp = str;&#xD;
    while (remains) {&#xD;
        if (temp.startsWith(&quot;(&quot;)) {&#xD;
            temp = temp.substring(1);&#xD;
        } else if (temp.contains(&quot;:&quot;) &amp;&amp; (temp.charAt(temp.indexOf(&quot;:&quot;) - 1) == ')')) {&#xD;
            temp = temp.substring(temp.indexOf(&quot;:&quot;) + 1);&#xD;
        } else if (temp.contains(&quot;:&quot;)) {&#xD;
            String temp1 = temp.substring(0, temp.indexOf(&quot;:&quot;));&#xD;
            if (temp1.contains(&quot;(&quot;)) {&#xD;
                if (temp1.contains(&quot;,&quot;)) {&#xD;
                    if (temp1.indexOf(&quot;,&quot;) &lt; temp1.indexOf(&quot;(&quot;)) {&#xD;
                        res[i] = removeinitialbrakets(temp1.substring(temp1.indexOf(&quot;(&quot;) + 1));&#xD;
                    } else {&#xD;
                        res[i] = removeinitialbrakets(temp1.substring(temp1.indexOf(&quot;,&quot;) + 1));&#xD;
                    }&#xD;
                } else {&#xD;
                    res[i] = removeinitialbrakets(temp1.substring(temp1.indexOf(&quot;(&quot;) + 1));&#xD;
                }&#xD;
            } else if (temp1.contains(&quot;,&quot;)) {&#xD;
                res[i] = removeinitialbrakets(temp1.substring(temp1.indexOf(&quot;,&quot;) + 1));&#xD;
            } else {&#xD;
                res[i] = removeinitialbrakets(temp1);&#xD;
            }&#xD;
            i++;&#xD;
            temp = temp.substring(temp.indexOf(&quot;:&quot;) + 1);&#xD;
        } else {&#xD;
            remains = false;&#xD;
        }&#xD;
    }&#xD;
    return res;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MGzPMRUTEemIe6OhVnSywA" name="removeinitialbrakets" specification="_MGyoIRUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    String temp = str;&#xD;
    while (temp.startsWith(&quot;(&quot;)) {&#xD;
        temp = temp.substring(1);&#xD;
    }&#xD;
    return temp;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MG0dUxUTEemIe6OhVnSywA" name="reorderlanes" specification="_MGzPMhUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    Lane[] res = new Lane[l.length];&#xD;
    for (int i = 0; i &lt; l.length; i++) {&#xD;
        res[i] = lanewithname(l, names[i]);&#xD;
    }&#xD;
    return res;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MG1rcRUTEemIe6OhVnSywA" name="lanewithname" specification="_MG1EYBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    for (Lane l1 : l) {&#xD;
        if (l1.getName().equals(name)) {&#xD;
            return l1;&#xD;
        }&#xD;
    }&#xD;
    return null;&#xD;
</body>
              </ownedBehavior>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MGma4BUTEemIe6OhVnSywA" name="WekaClustering" visibility="public" method="_MGqFQBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MGnpARUTEemIe6OhVnSywA" name="linktype">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MGoQEBUTEemIe6OhVnSywA" name="data">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MGoQERUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MGoQEhUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MGoQExUTEemIe6OhVnSywA" name="finallanes" type="_MGiwgRUTEemIe6OhVnSywA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MGo3IBUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MGo3IRUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MGo3IhUTEemIe6OhVnSywA" name="method">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MGo3IxUTEemIe6OhVnSywA" name="invert">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MGo3JBUTEemIe6OhVnSywA" name="output">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MGpeMBUTEemIe6OhVnSywA" name="c"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MGpeMRUTEemIe6OhVnSywA" name="fields">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MGpeMhUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MGpeMxUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MGqFQRUTEemIe6OhVnSywA" name="WekaClustering" visibility="public" method="_MGtIkBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MGrTYRUTEemIe6OhVnSywA" name="linktype">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MGrTYhUTEemIe6OhVnSywA" name="data">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MGr6cBUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MGr6cRUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MGr6chUTEemIe6OhVnSywA" name="finallanes" type="_MGiwgRUTEemIe6OhVnSywA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MGr6cxUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MGr6dBUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MGr6dRUTEemIe6OhVnSywA" name="method">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MGr6dhUTEemIe6OhVnSywA" name="invert">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MGshgBUTEemIe6OhVnSywA" name="output">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MGshgRUTEemIe6OhVnSywA" name="m" type="_MEzrIBUTEemIe6OhVnSywA"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MGshghUTEemIe6OhVnSywA" name="fields">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MGshgxUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MGshhBUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MGtIkRUTEemIe6OhVnSywA" name="computeandvisualisecluster" visibility="public" method="_MGtvoRUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MGtIkhUTEemIe6OhVnSywA" direction="return"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MGtvoBUTEemIe6OhVnSywA" name="pw"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MGuWsBUTEemIe6OhVnSywA" name="hierarchicaltreevisualise" visibility="public" method="_MGuWshUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MGuWsRUTEemIe6OhVnSywA" name="graph"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MGu9wBUTEemIe6OhVnSywA" name="changespanishdot" visibility="private" method="_MGvk0BUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MGu9wRUTEemIe6OhVnSywA" direction="return"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MGu9whUTEemIe6OhVnSywA" name="s"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MGvk0RUTEemIe6OhVnSywA" name="removecommafromname" visibility="private" method="_MGwL4RUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MGvk0hUTEemIe6OhVnSywA" direction="return"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MGwL4BUTEemIe6OhVnSywA" name="s"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MGwy8BUTEemIe6OhVnSywA" name="removenameswithcommas" visibility="private" method="_MGxaAxUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MGwy8RUTEemIe6OhVnSywA" direction="return">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MGwy8hUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MGwy8xUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MGxaABUTEemIe6OhVnSywA" name="ls">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MGxaARUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MGxaAhUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MGxaBBUTEemIe6OhVnSywA" name="namesinorder" visibility="private" method="_MGyoIBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MGyBEBUTEemIe6OhVnSywA" direction="return">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MGyBERUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MGyBEhUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MGyBExUTEemIe6OhVnSywA" name="str"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MGyoIRUTEemIe6OhVnSywA" name="removeinitialbrakets" visibility="private" method="_MGzPMRUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MGyoIhUTEemIe6OhVnSywA" direction="return"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MGzPMBUTEemIe6OhVnSywA" name="str"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MGzPMhUTEemIe6OhVnSywA" name="reorderlanes" visibility="private" method="_MG0dUxUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MGzPMxUTEemIe6OhVnSywA" type="_MGiwgRUTEemIe6OhVnSywA" direction="return">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MGz2QBUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MGz2QRUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MGz2QhUTEemIe6OhVnSywA" name="l" type="_MGiwgRUTEemIe6OhVnSywA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MGz2QxUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MGz2RBUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MG0dUBUTEemIe6OhVnSywA" name="names">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MG0dURUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MG0dUhUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MG1EYBUTEemIe6OhVnSywA" name="lanewithname" visibility="private" method="_MG1rcRUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MG1EYRUTEemIe6OhVnSywA" type="_MGiwgRUTEemIe6OhVnSywA" direction="return"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MG1EYhUTEemIe6OhVnSywA" name="l" type="_MGiwgRUTEemIe6OhVnSywA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MG1EYxUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MG1EZBUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MG1rcBUTEemIe6OhVnSywA" name="name"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_MGiwgRUTEemIe6OhVnSywA" name="Lane" visibility="public">
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MMb9IBUTEemIe6OhVnSywA" name="imp" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MMckMBUTEemIe6OhVnSywA" name="name" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MMckMRUTEemIe6OhVnSywA" name="roi" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MMckMhUTEemIe6OhVnSywA" name="profile" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MMdLQBUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MMdLQRUTEemIe6OhVnSywA" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MMdLQhUTEemIe6OhVnSywA" name="positionbands" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MMdLQxUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MMdLRBUTEemIe6OhVnSywA" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MMdyUBUTEemIe6OhVnSywA" name="positionbands2" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MMdyURUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MMdyUhUTEemIe6OhVnSywA" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MMdyUxUTEemIe6OhVnSywA" name="stdpositionbands" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MMdyVBUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MMeZYBUTEemIe6OhVnSywA" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MMeZYRUTEemIe6OhVnSywA" name="markerpositionbands" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MMeZYhUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MMeZYxUTEemIe6OhVnSywA" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MMeZZBUTEemIe6OhVnSywA" name="isstandard" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MMfAcBUTEemIe6OhVnSywA" name="offset" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MMfAcRUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>0</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MMg1oBUTEemIe6OhVnSywA" name="curve" visibility="private" isUnique="false">
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MMg1oRUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>null</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MMg1ohUTEemIe6OhVnSywA" name="curvemethod" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MMg1oxUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>0</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MMhcsBUTEemIe6OhVnSywA" name="genus" visibility="private" isUnique="false">
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MMhcsRUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>&quot;&quot;</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MMhcshUTEemIe6OhVnSywA" name="species" visibility="private" isUnique="false">
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MMiDwBUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>&quot;&quot;</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MMiDwRUTEemIe6OhVnSywA" name="country" visibility="private" isUnique="false">
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MMiDwhUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>&quot;&quot;</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MMiDwxUTEemIe6OhVnSywA" name="MLST" visibility="private" isUnique="false">
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MMiq0BUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>&quot;&quot;</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MMiq0RUTEemIe6OhVnSywA" name="StrainNumber" visibility="private" isUnique="false">
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MMiq0hUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>&quot;&quot;</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MMiq0xUTEemIe6OhVnSywA" name="scalefactor" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MMiq1BUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>1.0</body>
                </defaultValue>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MMm8QBUTEemIe6OhVnSywA" name="Lane" specification="_MMjR4BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.imp = imp;&#xD;
    this.name = name;&#xD;
    this.roi = roi;&#xD;
    this.isstandard = isstandard;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MMqmohUTEemIe6OhVnSywA" name="Lane" specification="_MMm8QRUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.imp = imp;&#xD;
    this.name = name;&#xD;
    this.roi = roi;&#xD;
    this.isstandard = isstandard;&#xD;
    this.genus = genus;&#xD;
    this.species = species;&#xD;
    this.country = country;&#xD;
    this.MLST = MLST;&#xD;
    this.StrainNumber = StrainNumber;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MMtC4BUTEemIe6OhVnSywA" name="Lane" specification="_MMqmoxUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.imp = imp;&#xD;
    this.name = name;&#xD;
    this.roi = roi;&#xD;
    this.profile = profile;&#xD;
    this.positionbands = positionbands;&#xD;
    this.stdpositionbands = stdpositionbands;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MMtC4xUTEemIe6OhVnSywA" name="setIsstandard" specification="_MMtC4RUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.isstandard = isstandard;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MMtp8BUTEemIe6OhVnSywA" name="getImp" specification="_MMtC5BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    return imp;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MMtp8xUTEemIe6OhVnSywA" name="setImp" specification="_MMtp8RUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.imp = imp;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MMuRABUTEemIe6OhVnSywA" name="isIsstandard" specification="_MMtp9BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    return isstandard;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MMuRBRUTEemIe6OhVnSywA" name="getProfile" specification="_MMuRARUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    return profile;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MMu4EhUTEemIe6OhVnSywA" name="getPositionbands" specification="_MMuRBhUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    return positionbands;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MMu4FxUTEemIe6OhVnSywA" name="getStdpositionbands" specification="_MMu4ExUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    return stdpositionbands;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MMvfIhUTEemIe6OhVnSywA" name="getName" specification="_MMvfIBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    return name;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MMwGMBUTEemIe6OhVnSywA" name="getRoi" specification="_MMvfIxUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    return roi;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MMwtQBUTEemIe6OhVnSywA" name="setRoi" specification="_MMwGMRUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.roi = roi;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MMxUURUTEemIe6OhVnSywA" name="setProfile" specification="_MMwtQRUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.profile = profile;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MMx7YRUTEemIe6OhVnSywA" name="setPositionbands" specification="_MMxUUhUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.positionbands = positionbands;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MMyicBUTEemIe6OhVnSywA" name="setStdpositionbands" specification="_MMx7YhUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.stdpositionbands = stdpositionbands;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MMyicxUTEemIe6OhVnSywA" name="getOffset" specification="_MMyicRUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    return offset;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MMzwkBUTEemIe6OhVnSywA" name="setOffset" specification="_MMyidBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.offset = offset;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MM1lwBUTEemIe6OhVnSywA" name="showprofile" specification="_MM0-sBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    double[] xValues = new double[profile.length];&#xD;
    for (int i = 0; i &lt; profile.length; i++) {&#xD;
        xValues[i] = i;&#xD;
    }&#xD;
    Plot plot = new Plot(&quot;Profile of &quot; + name, &quot;&quot;, &quot;&quot;, xValues, profile);&#xD;
    plot.show();&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MM6eQBUTEemIe6OhVnSywA" name="numberofstdlanes" specification="_MM3a8BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    int res = 0;&#xD;
    for (Lane l : lanes) {&#xD;
        if (l.isIsstandard()) {&#xD;
            res++;&#xD;
        }&#xD;
    }&#xD;
    return res;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MM_90BUTEemIe6OhVnSywA" name="numberofbandslanes" specification="_MM7sYBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    int[] res = new int[lanes.length];&#xD;
    int i = 0;&#xD;
    for (Lane l : lanes) {&#xD;
        res[i] = l.getPositionbands().length;&#xD;
        i++;&#xD;
    }&#xD;
    return res;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MNDBIBUTEemIe6OhVnSywA" name="getstandardlanes" specification="_MNAk4BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    Lane[] res = new Lane[numberofstdlanes(lanes)];&#xD;
    int i = 0;&#xD;
    for (Lane l : lanes) {&#xD;
        if (l.isIsstandard()) {&#xD;
            res[i] = l;&#xD;
            i++;&#xD;
        }&#xD;
    }&#xD;
    return res;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MNH5oBUTEemIe6OhVnSywA" name="indexesstandardlanes" specification="_MNDoMBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    int[] res = new int[numberofstdlanes(lanes)];&#xD;
    int i = 0;&#xD;
    for (int j = 0; j &lt; lanes.length; j++) {&#xD;
        if (lanes[j].isIsstandard()) {&#xD;
            res[i] = j;&#xD;
            i++;&#xD;
        }&#xD;
    }&#xD;
    return res;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MNMLERUTEemIe6OhVnSywA" name="indexesnonstandardlanes" specification="_MNJHwBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    int[] res = new int[lanes.length - numberofstdlanes(lanes)];&#xD;
    int i = 0;&#xD;
    for (int j = 0; j &lt; lanes.length; j++) {&#xD;
        if (!lanes[j].isIsstandard()) {&#xD;
            res[i] = j;&#xD;
            i++;&#xD;
        }&#xD;
    }&#xD;
    return res;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MNS4wBUTEemIe6OhVnSywA" name="lanesnames" specification="_MNNZMBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    String[] res = new String[l.length];&#xD;
    for (int i = 0; i &lt; l.length; i++) {&#xD;
        res[i] = l[i].getName();&#xD;
    }&#xD;
    return res;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MNXxQBUTEemIe6OhVnSywA" name="roisfromlanes" specification="_MNTf0BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    Roi[] res = new Roi[l.length];&#xD;
    for (int i = 0; i &lt; l.length; i++) {&#xD;
        res[i] = l[i].getRoi();&#xD;
    }&#xD;
    return res;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MNcpwBUTEemIe6OhVnSywA" name="posroiinlanes" specification="_MNY_YBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    for (int i = 0; i &lt; l.length; i++) {&#xD;
        if (l[i].getRoi().equals(r)) {&#xD;
            return i;&#xD;
        }&#xD;
    }&#xD;
    return -1;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MNftEBUTEemIe6OhVnSywA" name="whatarestandardlanes" specification="_MNdQ0BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    boolean[] res = new boolean[lanes.length];&#xD;
    for (int i = 0; i &lt; lanes.length; i++) {&#xD;
        res[i] = lanes[i].isIsstandard();&#xD;
    }&#xD;
    return res;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MNiwYBUTEemIe6OhVnSywA" name="biggerlane" specification="_MNgUIBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    int res = 0;&#xD;
    for (Lane l : lanes) {&#xD;
        if (res &lt; l.getStdpositionbands().length) {&#xD;
            res = l.getStdpositionbands().length;&#xD;
        }&#xD;
    }&#xD;
    return res;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MNqsMBUTEemIe6OhVnSywA" name="getImagesfromfinallanes" specification="_MNklkBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    ImagePlus[] res = new ImagePlus[lanes.length];&#xD;
    if (method &lt; 5) {&#xD;
        for (int i = 0; i &lt; lanes.length; i++) {&#xD;
            ImagePlus imp = lanes[i].getImp();&#xD;
            IJ.run(imp, &quot;RGB Color&quot;, &quot;&quot;);&#xD;
            ImagePlus imp2 = imp.duplicate();&#xD;
            int[] pos = lanes[i].getPositionbands2();&#xD;
            ImageProcessor ip = imp2.getProcessor();&#xD;
            if (invert) {&#xD;
                ip.invert();&#xD;
            }&#xD;
            ip.setColor(c);&#xD;
            for (int j = 0; j &lt; pos.length; j++) {&#xD;
                ip.drawRect(0, pos[j], imp2.getWidth(), 2);&#xD;
            }&#xD;
            //ip.translate(0, lanes[i].getOffset());&#xD;
            res[i] = imp2;&#xD;
        }&#xD;
    } else {&#xD;
        for (int i = 0; i &lt; lanes.length; i++) {&#xD;
            ImagePlus imp = lanes[i].getImp();&#xD;
            res[i] = imp;&#xD;
        }&#xD;
    }&#xD;
    return res;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MNvksRUTEemIe6OhVnSywA" name="getonlyImagesfromfinallanes" specification="_MNr6UBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    ImagePlus[] res = new ImagePlus[lanes.length];&#xD;
    for (int i = 0; i &lt; lanes.length; i++) {&#xD;
        ImagePlus imp = lanes[i].getImp();&#xD;
        res[i] = imp;&#xD;
    }&#xD;
    return res;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MN0dMBUTEemIe6OhVnSywA" name="getonlybandsfromfinallanes" specification="_MNwy0BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    ImagePlus[] res = new ImagePlus[lanes.length];&#xD;
    for (int i = 0; i &lt; lanes.length; i++) {&#xD;
        ImagePlus imp = lanes[i].getImp();&#xD;
        ImagePlus imp2 = IJ.createImage(lanes[i].getName(), imp.getWidth(), imp.getHeight(), 0, 32);&#xD;
        int[] pos = lanes[i].getPositionbands2();&#xD;
        ImageProcessor ip = imp2.getProcessor();&#xD;
        if (invert) {&#xD;
            ip.invert();&#xD;
        }&#xD;
        ip.setColor(Color.blue);&#xD;
        for (int j = 0; j &lt; pos.length; j++) {&#xD;
            ip.drawRect(0, pos[j], imp2.getWidth(), 2);&#xD;
        }&#xD;
        //ip.translate(0, lanes[i].getOffset());&#xD;
        res[i] = imp2;&#xD;
    }&#xD;
    return res;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MN4uoRUTEemIe6OhVnSywA" name="getemptyimages" specification="_MN1rUBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    ImagePlus[] res = new ImagePlus[lanes.length];&#xD;
    double scalefactor = 1;&#xD;
    if (lanes[0].getImp().getHeight() &lt; 600) {&#xD;
        scalefactor = 600 / (double) lanes[0].getImp().getHeight();&#xD;
    }&#xD;
    for (int i = 0; i &lt; lanes.length; i++) {&#xD;
        res[i] = IJ.createImage(&quot;&quot;, &quot;white-8&quot;, (int) (lanes[i].getImp().getWidth() * scalefactor), 2, 0);&#xD;
    }&#xD;
    return res;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MN6j0BUTEemIe6OhVnSywA" name="getCurve" specification="_MN5VsBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    return curve;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MN9AEBUTEemIe6OhVnSywA" name="setCurve" specification="_MN7x8BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.curve = curve;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MN-1QBUTEemIe6OhVnSywA" name="getCurvemethod" specification="_MN-OMBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    return curvemethod;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MOBRgBUTEemIe6OhVnSywA" name="setCurvemethod" specification="_MOADYBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.curvemethod = curvemethod;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MODGsRUTEemIe6OhVnSywA" name="setName" specification="_MOCfoBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.name = name;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MOEU0BUTEemIe6OhVnSywA" name="getGenus" specification="_MODGshUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    return genus;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MOGxEBUTEemIe6OhVnSywA" name="setGenus" specification="_MOFi8BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.genus = genus;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MOImQBUTEemIe6OhVnSywA" name="getSpecies" specification="_MOHYIBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    return species;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MOLCgBUTEemIe6OhVnSywA" name="setSpecies" specification="_MOJ0YBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.species = species;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MONewBUTEemIe6OhVnSywA" name="getCountry" specification="_MOMQoBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    return country;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MOP7ABUTEemIe6OhVnSywA" name="setCountry" specification="_MOOs4BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.country = country;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MOSXQBUTEemIe6OhVnSywA" name="getMLST" specification="_MORJIBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    return MLST;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MOUzgBUTEemIe6OhVnSywA" name="setMLST" specification="_MOTlYBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.MLST = MLST;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MOXPwBUTEemIe6OhVnSywA" name="getStrainNumber" specification="_MOWBoBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    return StrainNumber;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MOZsABUTEemIe6OhVnSywA" name="setStrainNumber" specification="_MOYd4BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.StrainNumber = StrainNumber;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MOcvUBUTEemIe6OhVnSywA" name="getMarkerpositionbands" specification="_MOa6IBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    return markerpositionbands;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MOfyoBUTEemIe6OhVnSywA" name="setMarkerpositionbands" specification="_MOdWYBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.markerpositionbands = markerpositionbands;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MOhn0BUTEemIe6OhVnSywA" name="getScalefactor" specification="_MOgZsBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    return scalefactor;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MOjdABUTEemIe6OhVnSywA" name="setScalefactor" specification="_MOi18BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.scalefactor = scalefactor;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MOl5QRUTEemIe6OhVnSywA" name="getPositionbands2" specification="_MOkrIBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    return positionbands2;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MOo8kBUTEemIe6OhVnSywA" name="setPositionbands2" specification="_MOnHYBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.positionbands2 = positionbands2;&#xD;
</body>
              </ownedBehavior>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MMjR4BUTEemIe6OhVnSywA" name="Lane" visibility="public" method="_MMm8QBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MMluIBUTEemIe6OhVnSywA" name="imp"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MMluIRUTEemIe6OhVnSywA" name="name"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MMmVMBUTEemIe6OhVnSywA" name="roi"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MMmVMRUTEemIe6OhVnSywA" name="isstandard">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MMm8QRUTEemIe6OhVnSywA" name="Lane" visibility="public" method="_MMqmohUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MMoxcRUTEemIe6OhVnSywA" name="imp"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MMpYgBUTEemIe6OhVnSywA" name="name"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MMpYgRUTEemIe6OhVnSywA" name="roi"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MMpYghUTEemIe6OhVnSywA" name="isstandard">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MMp_kBUTEemIe6OhVnSywA" name="genus"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MMp_kRUTEemIe6OhVnSywA" name="species"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MMp_khUTEemIe6OhVnSywA" name="country"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MMqmoBUTEemIe6OhVnSywA" name="MLST"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MMqmoRUTEemIe6OhVnSywA" name="StrainNumber"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MMqmoxUTEemIe6OhVnSywA" name="Lane" visibility="public" method="_MMtC4BUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MMr0wRUTEemIe6OhVnSywA" name="imp"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MMr0whUTEemIe6OhVnSywA" name="name"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MMsb0BUTEemIe6OhVnSywA" name="roi"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MMsb0RUTEemIe6OhVnSywA" name="profile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MMsb0hUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MMsb0xUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MMsb1BUTEemIe6OhVnSywA" name="positionbands">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MMsb1RUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MMsb1hUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MMsb1xUTEemIe6OhVnSywA" name="stdpositionbands">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MMsb2BUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MMsb2RUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MMtC4RUTEemIe6OhVnSywA" name="setIsstandard" visibility="public" method="_MMtC4xUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MMtC4hUTEemIe6OhVnSywA" name="isstandard">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MMtC5BUTEemIe6OhVnSywA" name="getImp" visibility="public" method="_MMtp8BUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MMtC5RUTEemIe6OhVnSywA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MMtp8RUTEemIe6OhVnSywA" name="setImp" visibility="public" method="_MMtp8xUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MMtp8hUTEemIe6OhVnSywA" name="imp"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MMtp9BUTEemIe6OhVnSywA" name="isIsstandard" visibility="public" method="_MMuRABUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MMtp9RUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MMuRARUTEemIe6OhVnSywA" name="getProfile" visibility="public" method="_MMuRBRUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MMuRAhUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MMuRAxUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MMuRBBUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MMuRBhUTEemIe6OhVnSywA" name="getPositionbands" visibility="public" method="_MMu4EhUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MMuRBxUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MMu4EBUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MMu4ERUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MMu4ExUTEemIe6OhVnSywA" name="getStdpositionbands" visibility="public" method="_MMu4FxUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MMu4FBUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MMu4FRUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MMu4FhUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MMvfIBUTEemIe6OhVnSywA" name="getName" visibility="public" method="_MMvfIhUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MMvfIRUTEemIe6OhVnSywA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MMvfIxUTEemIe6OhVnSywA" name="getRoi" visibility="public" method="_MMwGMBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MMvfJBUTEemIe6OhVnSywA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MMwGMRUTEemIe6OhVnSywA" name="setRoi" visibility="public" method="_MMwtQBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MMwGMhUTEemIe6OhVnSywA" name="roi"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MMwtQRUTEemIe6OhVnSywA" name="setProfile" visibility="public" method="_MMxUURUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MMwtQhUTEemIe6OhVnSywA" name="profile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MMwtQxUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MMxUUBUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MMxUUhUTEemIe6OhVnSywA" name="setPositionbands" visibility="public" method="_MMx7YRUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MMxUUxUTEemIe6OhVnSywA" name="positionbands">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MMxUVBUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MMx7YBUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MMx7YhUTEemIe6OhVnSywA" name="setStdpositionbands" visibility="public" method="_MMyicBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MMx7YxUTEemIe6OhVnSywA" name="stdpositionbands">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MMx7ZBUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MMx7ZRUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MMyicRUTEemIe6OhVnSywA" name="getOffset" visibility="public" method="_MMyicxUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MMyichUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MMyidBUTEemIe6OhVnSywA" name="setOffset" visibility="public" method="_MMzwkBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MMyidRUTEemIe6OhVnSywA" name="offset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MM0-sBUTEemIe6OhVnSywA" name="showprofile" visibility="public" method="_MM1lwBUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MM3a8BUTEemIe6OhVnSywA" name="numberofstdlanes" visibility="private" isStatic="true" method="_MM6eQBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MM4CABUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MM4pEBUTEemIe6OhVnSywA" name="lanes" type="_MGiwgRUTEemIe6OhVnSywA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MM5QIBUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MM53MBUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MM7sYBUTEemIe6OhVnSywA" name="numberofbandslanes" visibility="public" isStatic="true" method="_MM_90BUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MM86gBUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MM9hkBUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MM-IoBUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MM-vsBUTEemIe6OhVnSywA" name="lanes" type="_MGiwgRUTEemIe6OhVnSywA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MM_WwBUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MM_WwRUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MNAk4BUTEemIe6OhVnSywA" name="getstandardlanes" visibility="public" isStatic="true" method="_MNDBIBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MNBL8BUTEemIe6OhVnSywA" type="_MGiwgRUTEemIe6OhVnSywA" direction="return">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MNBL8RUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MNBL8hUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MNBzABUTEemIe6OhVnSywA" name="lanes" type="_MGiwgRUTEemIe6OhVnSywA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MNCaEBUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MNCaERUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MNDoMBUTEemIe6OhVnSywA" name="indexesstandardlanes" visibility="public" isStatic="true" method="_MNH5oBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MNE2UBUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MNFdYBUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MNGEcBUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MNGEcRUTEemIe6OhVnSywA" name="lanes" type="_MGiwgRUTEemIe6OhVnSywA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MNGrgBUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MNHSkBUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MNJHwBUTEemIe6OhVnSywA" name="indexesnonstandardlanes" visibility="public" isStatic="true" method="_MNMLERUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MNJu0BUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MNKV4BUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MNKV4RUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MNK88BUTEemIe6OhVnSywA" name="lanes" type="_MGiwgRUTEemIe6OhVnSywA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MNLkABUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MNMLEBUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MNNZMBUTEemIe6OhVnSywA" name="lanesnames" visibility="public" isStatic="true" method="_MNS4wBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MNOnUBUTEemIe6OhVnSywA" direction="return">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MNP1cBUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MNQcgBUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MNRDkBUTEemIe6OhVnSywA" name="l" type="_MGiwgRUTEemIe6OhVnSywA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MNRqoBUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MNSRsBUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MNTf0BUTEemIe6OhVnSywA" name="roisfromlanes" visibility="public" isStatic="true" method="_MNXxQBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MNUt8BUTEemIe6OhVnSywA" direction="return">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MNVVABUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MNV8EBUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MNWjIBUTEemIe6OhVnSywA" name="l" type="_MGiwgRUTEemIe6OhVnSywA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MNXKMBUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MNXKMRUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MNY_YBUTEemIe6OhVnSywA" name="posroiinlanes" visibility="public" isStatic="true" method="_MNcpwBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MNZmcBUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MNaNgBUTEemIe6OhVnSywA" name="l" type="_MGiwgRUTEemIe6OhVnSywA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MNa0kBUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MNbboBUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MNcCsBUTEemIe6OhVnSywA" name="r"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MNdQ0BUTEemIe6OhVnSywA" name="whatarestandardlanes" visibility="public" isStatic="true" method="_MNftEBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MNdQ0RUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MNdQ0hUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MNd34BUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MNee8BUTEemIe6OhVnSywA" name="lanes" type="_MGiwgRUTEemIe6OhVnSywA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MNee8RUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MNfGABUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MNgUIBUTEemIe6OhVnSywA" name="biggerlane" visibility="public" isStatic="true" method="_MNiwYBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MNg7MBUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MNhiQBUTEemIe6OhVnSywA" name="lanes" type="_MGiwgRUTEemIe6OhVnSywA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MNiJUBUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MNiJURUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MNklkBUTEemIe6OhVnSywA" name="getImagesfromfinallanes" visibility="public" isStatic="true" method="_MNqsMBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MNlMoBUTEemIe6OhVnSywA" direction="return">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MNlzsBUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MNmawBUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MNnB0BUTEemIe6OhVnSywA" name="lanes" type="_MGiwgRUTEemIe6OhVnSywA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MNno4BUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MNoP8BUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MNo3ABUTEemIe6OhVnSywA" name="method">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MNpeEBUTEemIe6OhVnSywA" name="c"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MNqFIBUTEemIe6OhVnSywA" name="invert">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_f-GnEPaLEeW5KOK8aDMdgA"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MNr6UBUTEemIe6OhVnSywA" name="getonlyImagesfromfinallanes" visibility="public" isStatic="true" method="_MNvksRUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MNtIcBUTEemIe6OhVnSywA" direction="return">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MNtvgBUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MNtvgRUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MNuWkBUTEemIe6OhVnSywA" name="lanes" type="_MGiwgRUTEemIe6OhVnSywA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MNu9oBUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MNvksBUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MNwy0BUTEemIe6OhVnSywA" name="getonlybandsfromfinallanes" visibility="public" isStatic="true" method="_MN0dMBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MNxZ4BUTEemIe6OhVnSywA" direction="return">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MNyA8BUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MNyoABUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MNyoARUTEemIe6OhVnSywA" name="lanes" type="_MGiwgRUTEemIe6OhVnSywA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MNzPEBUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MNz2IBUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MNz2IRUTEemIe6OhVnSywA" name="invert">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MN1rUBUTEemIe6OhVnSywA" name="getemptyimages" visibility="public" isStatic="true" method="_MN4uoRUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MN2SYBUTEemIe6OhVnSywA" direction="return">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MN25cBUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MN25cRUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MN3ggBUTEemIe6OhVnSywA" name="lanes" type="_MGiwgRUTEemIe6OhVnSywA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MN4HkBUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MN4uoBUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MN5VsBUTEemIe6OhVnSywA" name="getCurve" visibility="public" method="_MN6j0BUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MN58wBUTEemIe6OhVnSywA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MN7x8BUTEemIe6OhVnSywA" name="setCurve" visibility="public" method="_MN9AEBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MN8ZABUTEemIe6OhVnSywA" name="curve"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MN-OMBUTEemIe6OhVnSywA" name="getCurvemethod" visibility="public" method="_MN-1QBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MN-OMRUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MOADYBUTEemIe6OhVnSywA" name="setCurvemethod" visibility="public" method="_MOBRgBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MOAqcBUTEemIe6OhVnSywA" name="curvemethod">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MOCfoBUTEemIe6OhVnSywA" name="setName" visibility="public" method="_MODGsRUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MODGsBUTEemIe6OhVnSywA" name="name"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MODGshUTEemIe6OhVnSywA" name="getGenus" visibility="public" method="_MOEU0BUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MODtwBUTEemIe6OhVnSywA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MOFi8BUTEemIe6OhVnSywA" name="setGenus" visibility="public" method="_MOGxEBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MOGKABUTEemIe6OhVnSywA" name="genus"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MOHYIBUTEemIe6OhVnSywA" name="getSpecies" visibility="public" method="_MOImQBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MOH_MBUTEemIe6OhVnSywA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MOJ0YBUTEemIe6OhVnSywA" name="setSpecies" visibility="public" method="_MOLCgBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MOKbcBUTEemIe6OhVnSywA" name="species"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MOMQoBUTEemIe6OhVnSywA" name="getCountry" visibility="public" method="_MONewBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MOM3sBUTEemIe6OhVnSywA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MOOs4BUTEemIe6OhVnSywA" name="setCountry" visibility="public" method="_MOP7ABUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MOPT8BUTEemIe6OhVnSywA" name="country"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MORJIBUTEemIe6OhVnSywA" name="getMLST" visibility="public" method="_MOSXQBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MORwMBUTEemIe6OhVnSywA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MOTlYBUTEemIe6OhVnSywA" name="setMLST" visibility="public" method="_MOUzgBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MOUMcBUTEemIe6OhVnSywA" name="MLST"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MOWBoBUTEemIe6OhVnSywA" name="getStrainNumber" visibility="public" method="_MOXPwBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MOWBoRUTEemIe6OhVnSywA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MOYd4BUTEemIe6OhVnSywA" name="setStrainNumber" visibility="public" method="_MOZsABUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MOZE8BUTEemIe6OhVnSywA" name="StrainNumber"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MOa6IBUTEemIe6OhVnSywA" name="getMarkerpositionbands" visibility="public" method="_MOcvUBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MObhMBUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MObhMRUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MOcIQBUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MOdWYBUTEemIe6OhVnSywA" name="setMarkerpositionbands" visibility="public" method="_MOfyoBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MOd9cBUTEemIe6OhVnSywA" name="markerpositionbands">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MOekgBUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MOfLkBUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MOgZsBUTEemIe6OhVnSywA" name="getScalefactor" visibility="public" method="_MOhn0BUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MOhAwBUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MOi18BUTEemIe6OhVnSywA" name="setScalefactor" visibility="public" method="_MOjdABUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MOi18RUTEemIe6OhVnSywA" name="scalefactor">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MOkrIBUTEemIe6OhVnSywA" name="getPositionbands2" visibility="public" method="_MOl5QRUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MOkrIRUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MOlSMBUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MOl5QBUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MOnHYBUTEemIe6OhVnSywA" name="setPositionbands2" visibility="public" method="_MOo8kBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MOnucBUTEemIe6OhVnSywA" name="positionbands2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MOoVgBUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MOoVgRUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_MG4HsBUTEemIe6OhVnSywA" name="MenuGelJ" visibility="public">
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MG-1YBUTEemIe6OhVnSywA" name="jButton1" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MG-1YRUTEemIe6OhVnSywA" name="jButtonDendogram" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MG-1YhUTEemIe6OhVnSywA" name="jButtonHelp" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MG-1YxUTEemIe6OhVnSywA" name="jButtonLanes" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MG_ccBUTEemIe6OhVnSywA" name="jButtonOpen" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MG_ccRUTEemIe6OhVnSywA" name="jButtonOptions" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MHADgBUTEemIe6OhVnSywA" name="jButtonProcessing" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MHADgRUTEemIe6OhVnSywA" name="jButtonSave" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MHAqkBUTEemIe6OhVnSywA" name="jButtonStandards" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MHAqkRUTEemIe6OhVnSywA" name="jToolBar1" visibility="private" isUnique="false"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MG584RUTEemIe6OhVnSywA" name="MenuGelJ" specification="_MG4uwRUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    //this.imp = imp;&#xD;
    initComponents();&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MG6j8BUTEemIe6OhVnSywA" name="initComponents" specification="_MG584hUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    jToolBar1 = new javax.swing.JToolBar();&#xD;
    jButtonOpen = new javax.swing.JButton();&#xD;
    jButtonSave = new javax.swing.JButton();&#xD;
    jButtonProcessing = new javax.swing.JButton();&#xD;
    jButtonLanes = new javax.swing.JButton();&#xD;
    jButton1 = new javax.swing.JButton();&#xD;
    jButtonStandards = new javax.swing.JButton();&#xD;
    jButtonDendogram = new javax.swing.JButton();&#xD;
    jButtonOptions = new javax.swing.JButton();&#xD;
    jButtonHelp = new javax.swing.JButton();&#xD;
    jToolBar1.setFloatable(false);&#xD;
    jToolBar1.setRollover(true);&#xD;
    // NOI18N&#xD;
    jButtonOpen.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/ij/workspace/GelJ/Images/folder_open.png&quot;)));&#xD;
    jButtonOpen.setToolTipText(&quot;Open&quot;);&#xD;
    jButtonOpen.setFocusable(false);&#xD;
    jButtonOpen.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);&#xD;
    jButtonOpen.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);&#xD;
    jButtonOpen.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButtonOpenActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar1.add(jButtonOpen);&#xD;
    // NOI18N&#xD;
    jButtonSave.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/ij/workspace/GelJ/Images/save.png&quot;)));&#xD;
    jButtonSave.setToolTipText(&quot;Save&quot;);&#xD;
    jButtonSave.setFocusable(false);&#xD;
    jButtonSave.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);&#xD;
    jButtonSave.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);&#xD;
    jButtonSave.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButtonSaveActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar1.add(jButtonSave);&#xD;
    // NOI18N&#xD;
    jButtonProcessing.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/ij/workspace/GelJ/Images/processing.png&quot;)));&#xD;
    jButtonProcessing.setToolTipText(&quot;Preprocessing&quot;);&#xD;
    jButtonProcessing.setFocusable(false);&#xD;
    jButtonProcessing.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);&#xD;
    jButtonProcessing.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);&#xD;
    jButtonProcessing.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButtonProcessingActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar1.add(jButtonProcessing);&#xD;
    // NOI18N&#xD;
    jButtonLanes.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/ij/workspace/GelJ/Images/lanes.png&quot;)));&#xD;
    jButtonLanes.setToolTipText(&quot;Lane detection&quot;);&#xD;
    jButtonLanes.setFocusable(false);&#xD;
    jButtonLanes.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);&#xD;
    jButtonLanes.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);&#xD;
    jButtonLanes.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButtonLanesActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar1.add(jButtonLanes);&#xD;
    // NOI18N&#xD;
    jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/ij/workspace/GelJ/Images/bands.png&quot;)));&#xD;
    jButton1.setToolTipText(&quot;Band detection&quot;);&#xD;
    jButton1.setEnabled(false);&#xD;
    jButton1.setFocusable(false);&#xD;
    jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);&#xD;
    jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);&#xD;
    jButton1.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton1ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar1.add(jButton1);&#xD;
    // NOI18N&#xD;
    jButtonStandards.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/ij/workspace/GelJ/Images/standards.png&quot;)));&#xD;
    jButtonStandards.setToolTipText(&quot;Normalisation&quot;);&#xD;
    jButtonStandards.setEnabled(false);&#xD;
    jButtonStandards.setFocusable(false);&#xD;
    jButtonStandards.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);&#xD;
    jButtonStandards.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);&#xD;
    jButtonStandards.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButtonStandardsActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar1.add(jButtonStandards);&#xD;
    // NOI18N&#xD;
    jButtonDendogram.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/ij/workspace/GelJ/Images/dendogram.png&quot;)));&#xD;
    jButtonDendogram.setToolTipText(&quot;Generate Dendogram&quot;);&#xD;
    jButtonDendogram.setEnabled(false);&#xD;
    jButtonDendogram.setFocusable(false);&#xD;
    jButtonDendogram.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);&#xD;
    jButtonDendogram.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);&#xD;
    jButtonDendogram.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButtonDendogramActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar1.add(jButtonDendogram);&#xD;
    // NOI18N&#xD;
    jButtonOptions.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/ij/workspace/GelJ/Images/options.png&quot;)));&#xD;
    jButtonOptions.setToolTipText(&quot;Options&quot;);&#xD;
    jButtonOptions.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButtonOptionsActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar1.add(jButtonOptions);&#xD;
    // NOI18N&#xD;
    jButtonHelp.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/ij/workspace/GelJ/Images/help.png&quot;)));&#xD;
    jButtonHelp.setToolTipText(&quot;Help&quot;);&#xD;
    jButtonHelp.setFocusable(false);&#xD;
    jButtonHelp.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);&#xD;
    jButtonHelp.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);&#xD;
    jButtonHelp.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButtonHelpActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar1.add(jButtonHelp);&#xD;
    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);&#xD;
    this.setLayout(layout);&#xD;
    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGap(2, 2, 2).addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE).addGap(3, 3, 3)));&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MG7LARUTEemIe6OhVnSywA" name="jButtonProcessingActionPerformed" specification="_MG6j8RUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
//GEN-FIRST:event_jButtonProcessingActionPerformed&#xD;
// TODO add your handling code here:&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MG7yEhUTEemIe6OhVnSywA" name="jButtonLanesActionPerformed" specification="_MG7yEBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
//GEN-FIRST:event_jButtonLanesActionPerformed&#xD;
// TODO add your handling code here:&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MG8ZIRUTEemIe6OhVnSywA" name="jButton1ActionPerformed" specification="_MG7yExUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
//GEN-FIRST:event_jButton1ActionPerformed&#xD;
// TODO add your handling code here:&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MG8ZJBUTEemIe6OhVnSywA" name="jButtonDendogramActionPerformed" specification="_MG8ZIhUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
//GEN-FIRST:event_jButtonDendogramActionPerformed&#xD;
// TODO add your handling code here:&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MG9AMRUTEemIe6OhVnSywA" name="jButtonStandardsActionPerformed" specification="_MG8ZJRUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
//GEN-FIRST:event_jButtonStandardsActionPerformed&#xD;
// TODO add your handling code here:&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MG9ANBUTEemIe6OhVnSywA" name="jButtonOptionsActionPerformed" specification="_MG9AMhUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
//GEN-FIRST:event_jButtonOptionsActionPerformed&#xD;
// TODO add your handling code here:&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MG9nQhUTEemIe6OhVnSywA" name="jButtonSaveActionPerformed" specification="_MG9nQBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
//GEN-FIRST:event_jButtonSaveActionPerformed&#xD;
// TODO add your handling code here:&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MG9nRRUTEemIe6OhVnSywA" name="jButtonHelpActionPerformed" specification="_MG9nQxUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
//GEN-FIRST:event_jButtonHelpActionPerformed&#xD;
// TODO add your handling code here:&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MG-OUhUTEemIe6OhVnSywA" name="jButtonOpenActionPerformed" specification="_MG-OUBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
//GEN-FIRST:event_jButtonOpenActionPerformed&#xD;
// TODO add your handling code here:&#xD;
</body>
              </ownedBehavior>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MG4uwRUTEemIe6OhVnSywA" name="MenuGelJ" visibility="public" method="_MG584RUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MG584hUTEemIe6OhVnSywA" name="initComponents" visibility="private" method="_MG6j8BUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MG6j8RUTEemIe6OhVnSywA" name="jButtonProcessingActionPerformed" visibility="private" method="_MG7LARUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MG7LABUTEemIe6OhVnSywA" name="evt"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MG7yEBUTEemIe6OhVnSywA" name="jButtonLanesActionPerformed" visibility="private" method="_MG7yEhUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MG7yERUTEemIe6OhVnSywA" name="evt"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MG7yExUTEemIe6OhVnSywA" name="jButton1ActionPerformed" visibility="private" method="_MG8ZIRUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MG8ZIBUTEemIe6OhVnSywA" name="evt"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MG8ZIhUTEemIe6OhVnSywA" name="jButtonDendogramActionPerformed" visibility="private" method="_MG8ZJBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MG8ZIxUTEemIe6OhVnSywA" name="evt"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MG8ZJRUTEemIe6OhVnSywA" name="jButtonStandardsActionPerformed" visibility="private" method="_MG9AMRUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MG9AMBUTEemIe6OhVnSywA" name="evt"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MG9AMhUTEemIe6OhVnSywA" name="jButtonOptionsActionPerformed" visibility="private" method="_MG9ANBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MG9AMxUTEemIe6OhVnSywA" name="evt"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MG9nQBUTEemIe6OhVnSywA" name="jButtonSaveActionPerformed" visibility="private" method="_MG9nQhUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MG9nQRUTEemIe6OhVnSywA" name="evt"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MG9nQxUTEemIe6OhVnSywA" name="jButtonHelpActionPerformed" visibility="private" method="_MG9nRRUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MG9nRBUTEemIe6OhVnSywA" name="evt"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MG-OUBUTEemIe6OhVnSywA" name="jButtonOpenActionPerformed" visibility="private" method="_MG-OUhUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MG-OURUTEemIe6OhVnSywA" name="evt"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_MHGKIBUTEemIe6OhVnSywA" name="LaneBackground" visibility="public">
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MHKbkBUTEemIe6OhVnSywA" name="nPasses" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MHLpsBUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>1</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MHM30BUTEemIe6OhVnSywA" name="dup" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MHNe4BUTEemIe6OhVnSywA" name="imp1" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MHSXYBUTEemIe6OhVnSywA" name="r" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MHTlgBUTEemIe6OhVnSywA" name="radius" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MHUzoBUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>50</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MHWo0BUTEemIe6OhVnSywA" name="FLAGS" visibility="private" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MHX28BUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>DOES_ALL | SUPPORTS_MASKING | KEEP_PREVIEW | FINAL_PROCESSING</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MHZFEBUTEemIe6OhVnSywA" name="lightBackground" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MHaTMBUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>false</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MHdWgBUTEemIe6OhVnSywA" name="bs" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MHfLsBUTEemIe6OhVnSywA" name="changedbg" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MHhn8BUTEemIe6OhVnSywA" name="lm" visibility="private" type="_MHgZ0BUTEemIe6OhVnSywA" isUnique="false"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MHrY8BUTEemIe6OhVnSywA" name="LaneBackground" specification="_MHjdIBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.dup = dup;&#xD;
    this.r = r;&#xD;
    this.imp1 = imp1;&#xD;
    lightBackground = background;&#xD;
    this.changedbg = changedbg;&#xD;
    this.lm = lm;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MHw4gBUTEemIe6OhVnSywA" name="showDialog" specification="_MHtOIBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    GenericDialog gd = new GenericDialog(&quot;Background Subtraction&quot;);&#xD;
    gd.addSlider(&quot;Radius&quot;, 0, 100, 50);&#xD;
    gd.addPreviewCheckbox(pfr);&#xD;
    gd.addDialogListener(this);&#xD;
    gd.showDialog();&#xD;
    if (gd.wasCanceled()) {&#xD;
        imp.close();&#xD;
        return DONE;&#xD;
    }&#xD;
    if (gd.wasOKed()) {&#xD;
        imp1.setRoi(r);&#xD;
        IJ.run(imp, &quot;Select All&quot;, &quot;&quot;);&#xD;
        IJ.run(imp, &quot;Copy&quot;, &quot;&quot;);&#xD;
        imp.changes = false;&#xD;
        changedbg = true;&#xD;
        lm.changedbg = true;&#xD;
        imp.close();&#xD;
    }&#xD;
    return IJ.setupDialog(imp, FLAGS);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MHzUwBUTEemIe6OhVnSywA" name="setNPasses" specification="_MHyGoBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.nPasses = nPasses;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MH3mMBUTEemIe6OhVnSywA" name="setup" specification="_MH0i4BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.imp1 = imp;&#xD;
    return DOES_8G;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MH6pgBUTEemIe6OhVnSywA" name="run" specification="_MH40UBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    bs = new BackgroundSubtracter();&#xD;
    bs.subtractBackround(ip, radius);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MH-T4BUTEemIe6OhVnSywA" name="dialogItemChanged" specification="_MH73oBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    Vector sliders = gd.getSliders();&#xD;
    radius = ((Scrollbar) sliders.elementAt(0)).getValue();&#xD;
    lightBackground = gd.getNextBoolean();&#xD;
    return true;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MIClUBUTEemIe6OhVnSywA" name="rollingBallBackground" specification="_MIAJEBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    boolean invertedLut = ip.isInvertedLut();&#xD;
    boolean invert = (invertedLut &amp;&amp; !lightBackground) || (!invertedLut &amp;&amp; lightBackground);&#xD;
    RollingBall ball = new RollingBall(radius);&#xD;
    FloatProcessor fp = null;&#xD;
    for (int channelNumber = 0; channelNumber &lt; ip.getNChannels(); channelNumber++) {&#xD;
        fp = ip.toFloat(channelNumber, fp);&#xD;
        //float images need a snapshot to subtract&#xD;
        fp.snapshot();&#xD;
        //currently holds the background&#xD;
        float[] bgPixels = (float[]) fp.getPixels();&#xD;
        if (ip instanceof FloatProcessor) {&#xD;
            //here ip and fp are the same (bgPixels will be output)&#xD;
            //original data in the snapshot&#xD;
            float[] snapshotPixels = (float[]) fp.getSnapshotPixels();&#xD;
            for (int p = 0; p &lt; bgPixels.length; p++) {&#xD;
                bgPixels[p] = snapshotPixels[p] - bgPixels[p];&#xD;
            }&#xD;
        //for all others, the image data are in ip, the background is in fp&#xD;
        } else if (ip instanceof ShortProcessor) {&#xD;
            //includes 0.5 for rounding when converting float to short&#xD;
            float offset = invert ? 65535.5f : 0.5f;&#xD;
            short[] pixels = (short[]) ip.getPixels();&#xD;
            for (int p = 0; p &lt; bgPixels.length; p++) {&#xD;
                float value = (pixels[p] &amp; 0xffff) - bgPixels[p] + offset;&#xD;
                if (value &lt; 0f) {&#xD;
                    value = 0f;&#xD;
                }&#xD;
                if (value > 65535f) {&#xD;
                    value = 65535f;&#xD;
                }&#xD;
                pixels[p] = (short) (value);&#xD;
            }&#xD;
        } else if (ip instanceof ByteProcessor) {&#xD;
            //includes 0.5 for rounding when converting float to byte&#xD;
            float offset = invert ? 255.5f : 0.5f;&#xD;
            byte[] pixels = (byte[]) ip.getPixels();&#xD;
            for (int p = 0; p &lt; bgPixels.length; p++) {&#xD;
                float value = (pixels[p] &amp; 0xff) - bgPixels[p] + offset;&#xD;
                if (value &lt; 0f) {&#xD;
                    value = 0f;&#xD;
                }&#xD;
                if (value > 255f) {&#xD;
                    value = 255f;&#xD;
                }&#xD;
                pixels[p] = (byte) (value);&#xD;
            }&#xD;
        } else if (ip instanceof ColorProcessor) {&#xD;
            float offset = invert ? 255.5f : 0.5f;&#xD;
            int[] pixels = (int[]) ip.getPixels();&#xD;
            int shift = 16 - 8 * channelNumber;&#xD;
            int byteMask = 255 &lt;&lt; shift;&#xD;
            int resetMask = 0xffffffff ^ (255 &lt;&lt; shift);&#xD;
            for (int p = 0; p &lt; bgPixels.length; p++) {&#xD;
                int pxl = pixels[p];&#xD;
                float value = ((pxl &amp; byteMask) >> shift) - bgPixels[p] + offset;&#xD;
                if (value &lt; 0f) {&#xD;
                    value = 0f;&#xD;
                }&#xD;
                if (value > 255f) {&#xD;
                    value = 255f;&#xD;
                }&#xD;
                pixels[p] = (pxl &amp; resetMask) | ((int) value &lt;&lt; shift);&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MHjdIBUTEemIe6OhVnSywA" name="LaneBackground" visibility="public" method="_MHrY8BUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MHl5YBUTEemIe6OhVnSywA" name="dup"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MHnHgBUTEemIe6OhVnSywA" name="imp1"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MHoVoBUTEemIe6OhVnSywA" name="r"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MHo8sBUTEemIe6OhVnSywA" name="background">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MHqK0BUTEemIe6OhVnSywA" name="changedbg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MHqx4BUTEemIe6OhVnSywA" name="lm" type="_MHgZ0BUTEemIe6OhVnSywA"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MHtOIBUTEemIe6OhVnSywA" name="showDialog" visibility="public" method="_MHw4gBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MHt1MBUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MHucQBUTEemIe6OhVnSywA" name="imp"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MHvqYBUTEemIe6OhVnSywA" name="command"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MHwRcBUTEemIe6OhVnSywA" name="pfr"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MHyGoBUTEemIe6OhVnSywA" name="setNPasses" visibility="public" method="_MHzUwBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MHytsBUTEemIe6OhVnSywA" name="nPasses">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MH0i4BUTEemIe6OhVnSywA" name="setup" visibility="public" method="_MH3mMBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MH1J8BUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MH2YEBUTEemIe6OhVnSywA" name="arg"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MH2_IBUTEemIe6OhVnSywA" name="imp"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MH40UBUTEemIe6OhVnSywA" name="run" visibility="public" method="_MH6pgBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MH6CcBUTEemIe6OhVnSywA" name="ip"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MH73oBUTEemIe6OhVnSywA" name="dialogItemChanged" visibility="public" method="_MH-T4BUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MH8esBUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MH9FwBUTEemIe6OhVnSywA" name="gd"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MH9s0BUTEemIe6OhVnSywA" name="e"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MIAJEBUTEemIe6OhVnSywA" name="rollingBallBackground" visibility="public" method="_MIClUBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MIAwIBUTEemIe6OhVnSywA" name="ip"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MIBXMBUTEemIe6OhVnSywA" name="radius">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MIB-QBUTEemIe6OhVnSywA" name="lightBackground">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_MIDzcBUTEemIe6OhVnSywA" name="RollingBall">
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MIDzcRUTEemIe6OhVnSywA" name="data" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7W3wkBydEduyofBvg4RL2w"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MIFBkBUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MIFBkRUTEemIe6OhVnSywA" value="*"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MIFooBUTEemIe6OhVnSywA" name="width" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MIGPsBUTEemIe6OhVnSywA" name="shrinkFactor" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MIJTABUTEemIe6OhVnSywA" name="RollingBall" specification="_MIHd0BUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    int arcTrimPer;&#xD;
    if (radius &lt;= 10) {&#xD;
        shrinkFactor = 1;&#xD;
        // trim 24% in x and y&#xD;
        arcTrimPer = 24;&#xD;
    } else if (radius &lt;= 30) {&#xD;
        shrinkFactor = 2;&#xD;
        // trim 24% in x and y&#xD;
        arcTrimPer = 24;&#xD;
    } else if (radius &lt;= 100) {&#xD;
        shrinkFactor = 4;&#xD;
        // trim 32% in x and y&#xD;
        arcTrimPer = 32;&#xD;
    } else {&#xD;
        shrinkFactor = 8;&#xD;
        // trim 40% in x and y&#xD;
        arcTrimPer = 40;&#xD;
    }&#xD;
    buildRollingBall(radius, arcTrimPer);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MIMWUBUTEemIe6OhVnSywA" name="buildRollingBall" specification="_MIKhIBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    // rolling ball radius squared&#xD;
    double rsquare;&#xD;
    // # of pixels trimmed off each end of ball to make patch&#xD;
    int xtrim;&#xD;
    // x,y-values on patch relative to center of rolling ball&#xD;
    int xval, yval;&#xD;
    // radius of rolling ball (downscaled in x,y and z when image is shrunk)&#xD;
    double smallballradius;&#xD;
    // distance in x or y from center of patch to any edge (patch &quot;radius&quot;)&#xD;
    int halfWidth;&#xD;
    this.shrinkFactor = shrinkFactor;&#xD;
    smallballradius = ballradius / shrinkFactor;&#xD;
    if (smallballradius &lt; 1) {&#xD;
        smallballradius = 1;&#xD;
    }&#xD;
    rsquare = smallballradius * smallballradius;&#xD;
    // only use a patch of the rolling ball&#xD;
    xtrim = (int) (arcTrimPer * smallballradius) / 100;&#xD;
    halfWidth = (int) Math.round(smallballradius - xtrim);&#xD;
    width = 2 * halfWidth + 1;&#xD;
    data = new float[width * width];&#xD;
    for (int y = 0, p = 0; y &lt; width; y++) {&#xD;
        for (int x = 0; x &lt; width; x++, p++) {&#xD;
            xval = x - halfWidth;&#xD;
            yval = y - halfWidth;&#xD;
            double temp = rsquare - xval * xval - yval * yval;&#xD;
            data[p] = temp > 0. ? (float) (Math.sqrt(temp)) : 0f;&#xD;
        //-Float.MAX_VALUE might be better than 0f, but gives different results than earlier versions&#xD;
        }&#xD;
    }&#xD;
//IJ.log(ballradius+&quot;\t&quot;+smallballradius+&quot;\t&quot;+width); //###&#xD;
//IJ.log(&quot;half patch width=&quot;+halfWidth+&quot;, size=&quot;+data.length);&#xD;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MIHd0BUTEemIe6OhVnSywA" name="RollingBall" visibility="private" method="_MIJTABUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MIIr8BUTEemIe6OhVnSywA" name="radius">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MIKhIBUTEemIe6OhVnSywA" name="buildRollingBall" visibility="private" method="_MIMWUBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MILIMBUTEemIe6OhVnSywA" name="ballradius">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MILvQBUTEemIe6OhVnSywA" name="arcTrimPer">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_MHgZ0BUTEemIe6OhVnSywA" name="LaneManager" visibility="public">
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MPHdsBUTEemIe6OhVnSywA" name="LOC_KEY" visibility="public" isLeaf="true" isStatic="true" isUnique="false">
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MPHdsRUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>&quot;manager.loc&quot;</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MPIEwBUTEemIe6OhVnSywA" name="BUTTONS" visibility="private" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MPIEwRUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>11</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MPIEwhUTEemIe6OhVnSywA" name="DRAW" visibility="private" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MPIEwxUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>0</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MPIr0BUTEemIe6OhVnSywA" name="FILL" visibility="private" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MPIr0RUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>1</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MPIr0hUTEemIe6OhVnSywA" name="LABEL" visibility="private" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MPIr0xUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>2</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MPIr1BUTEemIe6OhVnSywA" name="SHOW_ALL" visibility="private" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MPJS4BUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>0</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MPJS4RUTEemIe6OhVnSywA" name="SHOW_NONE" visibility="private" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MPJS4hUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>1</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MPJS4xUTEemIe6OhVnSywA" name="LABELS" visibility="private" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MPJS5BUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>2</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MPJS5RUTEemIe6OhVnSywA" name="NO_LABELS" visibility="private" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MPJ58BUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>3</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MPJ58RUTEemIe6OhVnSywA" name="MENU" visibility="private" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MPJ58hUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>0</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MPJ58xUTEemIe6OhVnSywA" name="COMMAND" visibility="private" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MPJ59BUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>1</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MPKhABUTEemIe6OhVnSywA" name="IGNORE_POSITION" visibility="private" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MPKhARUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>-999</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MPKhAhUTEemIe6OhVnSywA" name="CHANNEL" visibility="private" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MPKhAxUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>0</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MPKhBBUTEemIe6OhVnSywA" name="SLICE" visibility="private" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MPKhBRUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>1</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MPLIEBUTEemIe6OhVnSywA" name="FRAME" visibility="private" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MPLIERUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>2</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MPLIEhUTEemIe6OhVnSywA" name="SHOW_DIALOG" visibility="private" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MPLIExUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>3</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MPLIFBUTEemIe6OhVnSywA" name="rows" visibility="private" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MPLvIBUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>15</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MPLvIRUTEemIe6OhVnSywA" name="lastNonShiftClick" visibility="private" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MPLvIhUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>-1</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MPLvIxUTEemIe6OhVnSywA" name="allowMultipleSelections" visibility="private" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MPMWMBUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>true</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MPM9QBUTEemIe6OhVnSywA" name="moreButtonLabel" visibility="private" isStatic="true" isUnique="false">
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MPM9QRUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>&quot;More &quot; + '»'</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MPOycRUTEemIe6OhVnSywA" name="panel" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MPPZgBUTEemIe6OhVnSywA" name="instance" visibility="private" isStatic="true" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MPQAkBUTEemIe6OhVnSywA" name="colorIndex" visibility="private" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MPQAkRUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>4</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MPQnoBUTEemIe6OhVnSywA" name="list" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MPQnoRUTEemIe6OhVnSywA" name="listModel" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MPR1wBUTEemIe6OhVnSywA" name="rois" visibility="private" isUnique="false">
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MPTD4BUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>new Hashtable()</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MPU5EBUTEemIe6OhVnSywA" name="stds" visibility="private" isUnique="false">
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MPWHMBUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>new Hashtable()</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MPX8YBUTEemIe6OhVnSywA" name="lanesinfo" visibility="private" isUnique="false">
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MPZKgBUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>new Hashtable()</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MPa_sBUTEemIe6OhVnSywA" name="stdslabels" visibility="private" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MPc04BUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MPdb8BUTEemIe6OhVnSywA" value="*"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MPeDABUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>new ArrayList&lt;String>()</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MPfRIBUTEemIe6OhVnSywA" name="canceled" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MPhGUBUTEemIe6OhVnSywA" name="macro" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MPi7gBUTEemIe6OhVnSywA" name="ignoreInterrupts" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MPnM8BUTEemIe6OhVnSywA" name="pm" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MPpCIBUTEemIe6OhVnSywA" name="pm2" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MPsFcBUTEemIe6OhVnSywA" name="editButton" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MPsFcRUTEemIe6OhVnSywA" name="colorButton" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MPtTkBUTEemIe6OhVnSywA" name="selectionModeButton" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MPw98BUTEemIe6OhVnSywA" name="showAllCheckbox" visibility="private" isUnique="false">
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MPyMEBUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>new Checkbox(&quot;Show All&quot;, true)</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MP0BQBUTEemIe6OhVnSywA" name="bgCheckbox" visibility="private" isUnique="false">
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MP1PYBUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>new Checkbox(&quot;Dark Background&quot;, true)</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MP2dgBUTEemIe6OhVnSywA" name="editButtonLabel" visibility="private" isLeaf="true" isStatic="true" isUnique="false">
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MP4SsBUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>&quot;Edit Lane &quot; + '»'</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MP45wBUTEemIe6OhVnSywA" name="selectionMode" visibility="private" isLeaf="true" isStatic="true" isUnique="false">
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MP7WABUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>&quot;Selection Mode &quot; + '»'</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MP8kIBUTEemIe6OhVnSywA" name="measureAll" visibility="private" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MP9LMBUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>true</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MP-ZUBUTEemIe6OhVnSywA" name="onePerSlice" visibility="private" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MP_ncBUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>true</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MQAOgBUTEemIe6OhVnSywA" name="restoreCentered" visibility="private" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MQCqwBUTEemIe6OhVnSywA" name="prevID" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MQEf8BUTEemIe6OhVnSywA" name="noUpdateMode" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MQG8MBUTEemIe6OhVnSywA" name="defaultLineWidth" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MQHjQBUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>1</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MQIKUBUTEemIe6OhVnSywA" name="defaultColor" visibility="private" isUnique="false">
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MQJ_gBUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>Color.BLUE</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MQLNoBUTEemIe6OhVnSywA" name="firstTime" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MQL0sBUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>false</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MQNC0BUTEemIe6OhVnSywA" name="selectedIndexes" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MQOQ8BUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MQOQ8RUTEemIe6OhVnSywA" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MQPfEBUTEemIe6OhVnSywA" name="appendResults" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MQTJcBUTEemIe6OhVnSywA" name="mmResults" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MQTwgBUTEemIe6OhVnSywA" name="imageID" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MQTwgRUTEemIe6OhVnSywA" name="number_of_lanes" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MQU-oBUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>1</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MQWMwBUTEemIe6OhVnSywA" name="m" visibility="private" type="_MEzrIBUTEemIe6OhVnSywA" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MQWMwRUTEemIe6OhVnSywA" name="changedbg" visibility="public" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MQWMwhUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>false</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MQZ3IBUTEemIe6OhVnSywA" name="a" visibility="private" isUnique="false">
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MQaeMBUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>null</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MQbFQBUTEemIe6OhVnSywA" name="first_time" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MQbsUBUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>true</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MQc6cBUTEemIe6OhVnSywA" name="changeall" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MQeIkBUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>false</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MTHz8BUTEemIe6OhVnSywA" name="channel" visibility="private" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MTJCEBUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>false</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MTJpIBUTEemIe6OhVnSywA" name="slice" visibility="private" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MTK3QBUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>true</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MTLeUBUTEemIe6OhVnSywA" name="frame" visibility="private" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MTMscBUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>false</body>
                </defaultValue>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MQjBEBUTEemIe6OhVnSywA" name="LaneManager" specification="_MQfWsBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    super(&quot;Lane Manager&quot;);&#xD;
    this.m = m;&#xD;
    instance = this;&#xD;
    list = new JList();&#xD;
    showWindow();&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MQpHsBUTEemIe6OhVnSywA" name="LaneManager" specification="_MQk2QBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    super(&quot;Lane Manager&quot;);&#xD;
    this.m = m;&#xD;
    this.a = a;&#xD;
    instance = this;&#xD;
    list = new JList();&#xD;
    showWindow();&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MQtZIBUTEemIe6OhVnSywA" name="LaneManager" specification="_MQpuwBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    super(&quot;Lane Manager&quot;);&#xD;
    list = new JList();&#xD;
    listModel = new DefaultListModel();&#xD;
    list.setModel(listModel);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MQunQRUTEemIe6OhVnSywA" name="showWindow" specification="_MQunQBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    ImageJ ij = IJ.getInstance();&#xD;
    addKeyListener(ij);&#xD;
    addMouseListener(this);&#xD;
    addMouseWheelListener(this);&#xD;
    WindowManager.addWindow(this);&#xD;
    //setLayout(new FlowLayout(FlowLayout.CENTER,5,5));&#xD;
    setLayout(new BorderLayout());&#xD;
    listModel = new DefaultListModel();&#xD;
    list.setModel(listModel);&#xD;
    list.setPrototypeCellValue(&quot;0000-0000-0000 &quot;);&#xD;
    list.addListSelectionListener(this);&#xD;
    list.addKeyListener(ij);&#xD;
    list.addMouseListener(this);&#xD;
    list.addMouseWheelListener(this);&#xD;
    if (IJ.isLinux()) {&#xD;
        list.setBackground(Color.white);&#xD;
    }&#xD;
    JScrollPane scrollPane = new JScrollPane(list, ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS, ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);&#xD;
    add(&quot;Center&quot;, scrollPane);&#xD;
    panel = new Panel();&#xD;
    int nButtons = BUTTONS;&#xD;
    panel.setLayout(new GridLayout(nButtons, 1, 5, 0));&#xD;
    addButton(&quot;Auto Detect&quot;);&#xD;
    addButton(&quot;Add [a]&quot;);&#xD;
    addButton(&quot;Delete&quot;);&#xD;
    addButton(editButtonLabel);&#xD;
    addButton(&quot;Fix Reference Lane [f]&quot;);&#xD;
    addButton(&quot;Delete Reference Lane&quot;);&#xD;
    addButton(&quot;Show Reference Lanes&quot;);&#xD;
    addButton(selectionMode);&#xD;
    // Old version&#xD;
    //        addButton(&quot;Done&quot;);&#xD;
    //        showAllCheckbox.addItemListener(this);&#xD;
    //        panel.add(showAllCheckbox);&#xD;
    bgCheckbox.addItemListener(this);&#xD;
    panel.add(bgCheckbox);&#xD;
    add(&quot;East&quot;, panel);&#xD;
    // New version&#xD;
    Panel panel1 = new Panel();&#xD;
    Button bdone = new Button(&quot;Done&quot;);&#xD;
    bdone.addActionListener(this);&#xD;
    bdone.addKeyListener(IJ.getInstance());&#xD;
    bdone.addMouseListener(this);&#xD;
    panel1.add(bdone);&#xD;
    add(&quot;South&quot;, panel1);&#xD;
    addPopupMenu();&#xD;
    addPopupMenuSelection();&#xD;
    pack();&#xD;
    Dimension size = getSize();&#xD;
    if (size.width > 270) {&#xD;
        setSize(size.width - 40, size.height);&#xD;
    }&#xD;
    list.remove(0);&#xD;
    Point loc = Prefs.getLocation(LOC_KEY);&#xD;
    if (loc != null) {&#xD;
        setLocation(loc);&#xD;
    } else {&#xD;
        GUI.center(this);&#xD;
    }&#xD;
//        show();&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MQy4sBUTEemIe6OhVnSywA" name="addButton" specification="_MQwccBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    Button b = new Button(label);&#xD;
    b.addActionListener(this);&#xD;
    b.addKeyListener(IJ.getInstance());&#xD;
    b.addMouseListener(this);&#xD;
    if (label.equals(editButtonLabel)) {&#xD;
        editButton = b;&#xD;
    }&#xD;
    if (label.equals(selectionMode)) {&#xD;
        selectionModeButton = b;&#xD;
    }&#xD;
    panel.add(b);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MQzfwRUTEemIe6OhVnSywA" name="addPopupMenu" specification="_MQzfwBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    pm = new PopupMenu();&#xD;
    //addPopupItem(&quot;Select All&quot;);&#xD;
    addPopupItem(&quot;Rename&quot;);&#xD;
    addPopupItem(&quot;Adjust Contrast/Brightness&quot;);&#xD;
    addPopupItem(&quot;Background removal&quot;);&#xD;
    add(pm);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MQ3KIBUTEemIe6OhVnSywA" name="addPopupItem" specification="_MQ1U8BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    MenuItem mi = new MenuItem(s);&#xD;
    mi.addActionListener(this);&#xD;
    pm.add(mi);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MQ4YQBUTEemIe6OhVnSywA" name="addPopupMenuSelection" specification="_MQ3xMBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    pm2 = new PopupMenu();&#xD;
    addPopupItemSelection(&quot;Rectangle&quot;);&#xD;
    addPopupItemSelection(&quot;Polygon&quot;);&#xD;
    add(pm2);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MQ8CoBUTEemIe6OhVnSywA" name="addPopupItemSelection" specification="_MQ6NcBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    MenuItem mi = new MenuItem(s);&#xD;
    mi.addActionListener(this);&#xD;
    pm2.add(mi);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MQ930BUTEemIe6OhVnSywA" name="actionPerformed" specification="_MQ9QwBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    String label = e.getActionCommand();&#xD;
    ImagePlus imp = WindowManager.getCurrentImage();&#xD;
    if (label == null) {&#xD;
        return;&#xD;
    }&#xD;
    String command = label;&#xD;
    if (command.equals(&quot;Add [a]&quot;)) {&#xD;
        IJ.run(imp, &quot;8-bit&quot;, &quot;&quot;);&#xD;
        runCommand(&quot;add&quot;);&#xD;
    } else if (command.equals(&quot;Delete&quot;)) {&#xD;
        IJ.run(imp, &quot;8-bit&quot;, &quot;&quot;);&#xD;
        delete(false);&#xD;
    } else if (command.equals(&quot;Auto Detect&quot;)) {&#xD;
        IJ.run(imp, &quot;8-bit&quot;, &quot;&quot;);&#xD;
        auto_detect();&#xD;
    } else if (command.equals(&quot;Fix Reference Lane [f]&quot;)) {&#xD;
        IJ.run(imp, &quot;8-bit&quot;, &quot;&quot;);&#xD;
        fix_standard();&#xD;
    } else if (command.equals(&quot;Delete Reference Lane&quot;)) {&#xD;
        IJ.run(imp, &quot;8-bit&quot;, &quot;&quot;);&#xD;
        delete_standard();&#xD;
    } else if (command.equals(&quot;Rename&quot;)) {&#xD;
        IJ.run(imp, &quot;8-bit&quot;, &quot;&quot;);&#xD;
        rename(null);&#xD;
    } else if (command.equals(&quot;Show Reference Lanes&quot;)) {&#xD;
        IJ.run(imp, &quot;8-bit&quot;, &quot;&quot;);&#xD;
        show_standards();&#xD;
    } else if (command.equals(editButtonLabel)) {&#xD;
        Point ploc = panel.getLocation();&#xD;
        Point bloc = editButton.getLocation();&#xD;
        pm.show(this, ploc.x, bloc.y);&#xD;
    } else if (command.equals(&quot;Adjust Contrast/Brightness&quot;)) {&#xD;
        IJ.run(imp, &quot;RGB Color&quot;, &quot;&quot;);&#xD;
        adjustcontrastbrightness(imp);&#xD;
    } else if (command.equals(&quot;Background removal&quot;)) {&#xD;
        IJ.run(imp, &quot;8-bit&quot;, &quot;&quot;);&#xD;
        backgroundremoval(imp);&#xD;
    } else if (command.equals(selectionMode)) {&#xD;
        Point ploc1 = panel.getLocation();&#xD;
        Point bloc1 = selectionModeButton.getLocation();&#xD;
        pm2.show(this, ploc1.x, bloc1.y);&#xD;
    } else if (command.equals(&quot;Rectangle&quot;)) {&#xD;
        IJ.setTool(&quot;rectangle&quot;);&#xD;
    } else if (command.equals(&quot;Polygon&quot;)) {&#xD;
        IJ.setTool(&quot;polygon&quot;);&#xD;
    } else if (command.equals(&quot;Done&quot;)) {&#xD;
        close();&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MQ930hUTEemIe6OhVnSywA" name="interpolateRois" specification="_MQ930RUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    IJ.runPlugIn(&quot;ij.plugin.RoiInterpolator&quot;, &quot;&quot;);&#xD;
    if (record()) {&#xD;
        Recorder.record(&quot;roiManager&quot;, &quot;Interpolate ROIs&quot;);&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MQ-e4RUTEemIe6OhVnSywA" name="itemStateChanged" specification="_MQ930xUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    Object source = e.getSource();&#xD;
    if (source == showAllCheckbox) {&#xD;
        /* if (firstTime) {
             labelsCheckbox.setState(true);
             }*/&#xD;
        showAll(showAllCheckbox.getState() ? SHOW_ALL : SHOW_NONE);&#xD;
        firstTime = false;&#xD;
    }&#xD;
/*if (source == labelsCheckbox) {
         if (firstTime) {
         showAllCheckbox.setState(true);
         }
         boolean editState = labelsCheckbox.getState();
         boolean showAllState = showAllCheckbox.getState();
         if (!showAllState &amp;&amp; !editState) {
         showAll(SHOW_NONE);
         } else {
         showAll(editState ? LABELS : NO_LABELS);
         if (editState) {
         showAllCheckbox.setState(true);
         }
         }
         firstTime = false;
         return;
         } */&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MRCJQRUTEemIe6OhVnSywA" name="add" specification="_MRAUEBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    if (shiftKeyDown) {&#xD;
        addAndDraw(altKeyDown);&#xD;
    } else if (altKeyDown) {&#xD;
        addRoi(true);&#xD;
    } else {&#xD;
        addRoi(false);&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MRGasBUTEemIe6OhVnSywA" name="addRoi" specification="_MRElgBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    addRoi(roi, false, defaultColor, -1);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MRJeABUTEemIe6OhVnSywA" name="addRoi" specification="_MRHBwBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    return addRoi(null, promptForName, defaultColor, IGNORE_POSITION);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MRRZ0BUTEemIe6OhVnSywA" name="addRoi" specification="_MRLTMBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    ImagePlus imp = roi == null ? getImage() : WindowManager.getCurrentImage();&#xD;
    if (roi == null) {&#xD;
        if (imp == null) {&#xD;
            return false;&#xD;
        }&#xD;
        roi = imp.getRoi();&#xD;
        if (roi == null) {&#xD;
            JOptionPane.showMessageDialog(this, &quot;The active image does not have a selection.&quot;, &quot;Add lane&quot;, JOptionPane.INFORMATION_MESSAGE);&#xD;
            return false;&#xD;
        }&#xD;
    //            if (intersectwithany(roi, getRoisAsArray())) {&#xD;
    //                JOptionPane.showMessageDialog(this, &quot;The new lane intersects with a lane added previously.&quot;, &quot;Add lane&quot;, JOptionPane.INFORMATION_MESSAGE);&#xD;
    //                imp.setRoi(0, 0, 0, 0);&#xD;
    //                return false;&#xD;
    //            }&#xD;
    }&#xD;
    if ((roi instanceof PolygonRoi) &amp;&amp; ((PolygonRoi) roi).getNCoordinates() == 0) {&#xD;
        return false;&#xD;
    }&#xD;
    if (color == null &amp;&amp; roi.getStrokeColor() != null) {&#xD;
        color = roi.getStrokeColor();&#xD;
    } else if (color == null &amp;&amp; defaultColor != null) {&#xD;
        color = defaultColor;&#xD;
    }&#xD;
    boolean ignorePosition = false;&#xD;
    if (lineWidth == IGNORE_POSITION) {&#xD;
        ignorePosition = true;&#xD;
        lineWidth = -1;&#xD;
    }&#xD;
    if (lineWidth &lt; 0) {&#xD;
        int sw = (int) roi.getStrokeWidth();&#xD;
        lineWidth = sw > 1 ? sw : defaultLineWidth;&#xD;
    }&#xD;
    if (lineWidth > 100) {&#xD;
        lineWidth = 1;&#xD;
    }&#xD;
    int n = getCount();&#xD;
    int position = imp != null &amp;&amp; !ignorePosition ? roi.getPosition() : 0;&#xD;
    int saveCurrentSlice = imp != null ? imp.getCurrentSlice() : 0;&#xD;
    if (position > 0 &amp;&amp; position != saveCurrentSlice) {&#xD;
        imp.setSliceWithoutUpdate(position);&#xD;
    } else {&#xD;
        position = 0;&#xD;
    }&#xD;
    if (n > 0 &amp;&amp; !IJ.isMacro() &amp;&amp; imp != null) {&#xD;
        // check for duplicate&#xD;
        String label = (String) listModel.getElementAt(n - 1);&#xD;
        Roi roi2 = (Roi) rois.get(label);&#xD;
        if (roi2 != null) {&#xD;
            int slice2 = getSliceNumber(roi2, label);&#xD;
            if (roi.equals(roi2) &amp;&amp; (slice2 == -1 || slice2 == imp.getCurrentSlice()) &amp;&amp; imp.getID() == prevID &amp;&amp; !Interpreter.isBatchMode()) {&#xD;
                if (position > 0) {&#xD;
                    imp.setSliceWithoutUpdate(saveCurrentSlice);&#xD;
                }&#xD;
                return false;&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    prevID = imp != null ? imp.getID() : 0;&#xD;
    String name = roi.getName();&#xD;
    if (isStandardName(name)) {&#xD;
        name = null;&#xD;
    }&#xD;
    String label = name != null ? name : getLabel(imp, roi, -1);&#xD;
    if (promptForName) {&#xD;
        label = promptForName(label);&#xD;
    }&#xD;
    if (label == null) {&#xD;
        if (position > 0) {&#xD;
            imp.setSliceWithoutUpdate(saveCurrentSlice);&#xD;
        }&#xD;
        return false;&#xD;
    }&#xD;
    label = getUniqueName(label);&#xD;
    listModel.addElement(label);&#xD;
    roi.setName(label);&#xD;
    Roi roiCopy = (Roi) roi.clone();&#xD;
    setRoiPosition(imp, roiCopy);&#xD;
    if (lineWidth > 1) {&#xD;
        roiCopy.setStrokeWidth(lineWidth);&#xD;
    }&#xD;
    if (color != null) {&#xD;
        roiCopy.setStrokeColor(color);&#xD;
    }&#xD;
    rois.put(label, roiCopy);&#xD;
    lanesinfo.put(label, new LaneInfo());&#xD;
    updateShowAll();&#xD;
    if (record()) {&#xD;
        recordAdd(defaultColor, defaultLineWidth);&#xD;
    }&#xD;
    if (position > 0) {&#xD;
        imp.setSliceWithoutUpdate(saveCurrentSlice);&#xD;
    }&#xD;
    //////////////////////////////////////////////////////////&#xD;
    Roi[] rois = getRoisAsArray();&#xD;
    list.setSelectedIndex(rois.length - 1);&#xD;
    rename(&quot;temp&quot;);&#xD;
    Roi[] rs = getRoisAsArray();&#xD;
    number_of_lanes = 1;&#xD;
    int i = 0;&#xD;
    int pos = 1;&#xD;
    while (rois[i].getBounds().x &lt; rois[rois.length - 1].getBounds().x &amp;&amp; i &lt; rois.length) {&#xD;
        list.setSelectedIndex(i);&#xD;
        rename(&quot;Lane&quot; + number_of_lanes);&#xD;
        number_of_lanes++;&#xD;
        i++;&#xD;
    }&#xD;
    pos = number_of_lanes;&#xD;
    number_of_lanes++;&#xD;
    while (i &lt; rois.length - 1) {&#xD;
        list.setSelectedIndex(i + 1);&#xD;
        rename(&quot;Lane&quot; + number_of_lanes + 1);&#xD;
        list.setSelectedIndex(i);&#xD;
        rename(&quot;Lane&quot; + number_of_lanes);&#xD;
        number_of_lanes++;&#xD;
        i++;&#xD;
    }&#xD;
    list.setSelectedIndex(rois.length - 1);&#xD;
    rename(&quot;Lane&quot; + pos);&#xD;
    return true;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MRVrQBUTEemIe6OhVnSywA" name="recordAdd" specification="_MRSn8BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    if (Recorder.scriptMode()) {&#xD;
        Recorder.recordCall(&quot;rm.addRoi(imp.getRoi());&quot;);&#xD;
    } else if (color != null &amp;&amp; lineWidth == 1) {&#xD;
        Recorder.recordString(&quot;roiManager(\&quot;Add\&quot;, \&quot;&quot; + getHex(color) + &quot;\&quot;);\n&quot;);&#xD;
    } else if (lineWidth > 1) {&#xD;
        Recorder.recordString(&quot;roiManager(\&quot;Add\&quot;, \&quot;&quot; + getHex(color) + &quot;\&quot;, &quot; + lineWidth + &quot;);\n&quot;);&#xD;
    } else {&#xD;
        Recorder.record(&quot;roiManager&quot;, &quot;Add&quot;);&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MRYukBUTEemIe6OhVnSywA" name="getHex" specification="_MRVrQRUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    if (color == null) {&#xD;
        color = ImageCanvas.getShowAllColor();&#xD;
    }&#xD;
    String hex = Integer.toHexString(color.getRGB());&#xD;
    if (hex.length() == 8) {&#xD;
        hex = hex.substring(2);&#xD;
    }&#xD;
    return hex;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MRfcQBUTEemIe6OhVnSywA" name="add" specification="_MRajwBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    if (roi == null) {&#xD;
        return;&#xD;
    }&#xD;
    String label = roi.getName();&#xD;
    String label2 = label;&#xD;
    if (label == null) {&#xD;
        label = getLabel(imp, roi, n);&#xD;
    } else {&#xD;
        label = label + &quot;-&quot; + n;&#xD;
    }&#xD;
    if (label == null) {&#xD;
        return;&#xD;
    }&#xD;
    listModel.addElement(label);&#xD;
    if (label2 != null) {&#xD;
        roi.setName(label2);&#xD;
    } else {&#xD;
        roi.setName(label);&#xD;
    }&#xD;
    roi.setStrokeColor(defaultColor);&#xD;
    rois.put(label, (Roi) roi.clone());&#xD;
    lanesinfo.put(label, new LaneInfo());&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MRh4gBUTEemIe6OhVnSywA" name="isStandardName" specification="_MRfcQRUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    if (name == null) {&#xD;
        return false;&#xD;
    }&#xD;
    boolean isStandard = false;&#xD;
    int len = name.length();&#xD;
    if (len >= 14 &amp;&amp; name.charAt(4) == '-' &amp;&amp; name.charAt(9) == '-') {&#xD;
        isStandard = true;&#xD;
    } else if (len >= 17 &amp;&amp; name.charAt(5) == '-' &amp;&amp; name.charAt(11) == '-') {&#xD;
        isStandard = true;&#xD;
    } else if (len >= 9 &amp;&amp; name.charAt(4) == '-') {&#xD;
        isStandard = true;&#xD;
    } else if (len >= 11 &amp;&amp; name.charAt(5) == '-') {&#xD;
        isStandard = true;&#xD;
    }&#xD;
    return isStandard;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MRn_IBUTEemIe6OhVnSywA" name="getLabel" specification="_MRjtsBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    String label = &quot;Lane&quot; + number_of_lanes;&#xD;
    number_of_lanes = number_of_lanes + 1;&#xD;
    return label;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MRqbYBUTEemIe6OhVnSywA" name="addAndDraw" specification="_MRpNQBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    if (altKeyDown) {&#xD;
        if (!addRoi(true)) {&#xD;
            return;&#xD;
        }&#xD;
    } else if (!addRoi(false)) {&#xD;
        return;&#xD;
    }&#xD;
    ImagePlus imp = WindowManager.getCurrentImage();&#xD;
    if (imp != null) {&#xD;
        Undo.setup(Undo.COMPOUND_FILTER, imp);&#xD;
        IJ.run(imp, &quot;Draw&quot;, &quot;slice&quot;);&#xD;
        Undo.setup(Undo.COMPOUND_FILTER_DONE, imp);&#xD;
    }&#xD;
    if (record()) {&#xD;
        Recorder.record(&quot;roiManager&quot;, &quot;Add &amp; Draw&quot;);&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MRus0BUTEemIe6OhVnSywA" name="delete" specification="_MRsQkBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    int count = getCount();&#xD;
    if (count == 0) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;No lane has been added.&quot;, &quot;&quot;, JOptionPane.INFORMATION_MESSAGE);&#xD;
    }&#xD;
    int index[] = getSelectedIndexes();&#xD;
    if (index.length == 0 || (replacing &amp;&amp; count > 1)) {&#xD;
        //            String msg = &quot;Delete all items on the list?&quot;;&#xD;
        //            if (replacing) {&#xD;
        //                msg = &quot;Replace items on the list?&quot;;&#xD;
        //            }&#xD;
        //            canceled = false;&#xD;
        //            if (!IJ.isMacro() &amp;&amp; !macro) {&#xD;
        //                YesNoCancelDialog d = new YesNoCancelDialog(this, &quot;Lane Manager&quot;, msg);&#xD;
        //                if (d.cancelPressed()) {&#xD;
        //                    canceled = true;&#xD;
        //                    return false;&#xD;
        //                }&#xD;
        //                if (!d.yesPressed()) {&#xD;
        //                    stdslabels = new ArrayList&lt;String>();&#xD;
        //                    return false;&#xD;
        //                }&#xD;
        //            }&#xD;
        //            index = getAllIndexes();&#xD;
        JOptionPane.showMessageDialog(this, &quot;Select a lane to remove.&quot;, &quot;Remove lane&quot;, JOptionPane.INFORMATION_MESSAGE);&#xD;
    }&#xD;
    if (count == index.length &amp;&amp; !replacing) {&#xD;
        rois.clear();&#xD;
        lanesinfo.clear();&#xD;
        listModel.removeAllElements();&#xD;
        stdslabels = new ArrayList&lt;String>();&#xD;
        number_of_lanes = 1;&#xD;
    } else {&#xD;
        for (int i = count - 1; i >= 0; i--) {&#xD;
            boolean delete = false;&#xD;
            for (int j = 0; j &lt; index.length; j++) {&#xD;
                if (index[j] == i) {&#xD;
                    delete = true;&#xD;
                    String label = (String) listModel.getElementAt(index[j]);&#xD;
                    if (stdslabels.contains(label)) {&#xD;
                        stdslabels.remove(label);&#xD;
                        stds.remove(label);&#xD;
                    }&#xD;
                }&#xD;
            }&#xD;
            if (delete) {&#xD;
                rois.remove((String) listModel.getElementAt(i));&#xD;
                lanesinfo.remove((String) listModel.getElementAt(i));&#xD;
                listModel.remove(i);&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    ImagePlus imp = WindowManager.getCurrentImage();&#xD;
    if (count > 1 &amp;&amp; index.length == 1 &amp;&amp; imp != null) {&#xD;
        imp.deleteRoi();&#xD;
    }&#xD;
    updateShowAll();&#xD;
    if (record()) {&#xD;
        Recorder.record(&quot;roiManager&quot;, &quot;Delete&quot;);&#xD;
    }&#xD;
    /////////////////////////////////////////////////// Sorting rois&#xD;
    Roi[] rs = getRoisAsArray();&#xD;
    number_of_lanes = 1;&#xD;
    for (int i = 0; i &lt; rs.length; i++) {&#xD;
        list.setSelectedIndex(i);&#xD;
        rename(&quot;Lane&quot; + number_of_lanes);&#xD;
        number_of_lanes++;&#xD;
    }&#xD;
    return true;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MRxwIBUTEemIe6OhVnSywA" name="delete_without_asking" specification="_MRv68BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    int count = getCount();&#xD;
    int index[] = getAllIndexes();&#xD;
    if (count == index.length &amp;&amp; !replacing) {&#xD;
        rois.clear();&#xD;
        lanesinfo.clear();&#xD;
        listModel.removeAllElements();&#xD;
    } else {&#xD;
        for (int i = count - 1; i >= 0; i--) {&#xD;
            boolean delete = false;&#xD;
            for (int j = 0; j &lt; index.length; j++) {&#xD;
                if (index[j] == i) {&#xD;
                    delete = true;&#xD;
                }&#xD;
            }&#xD;
            if (delete) {&#xD;
                rois.remove((String) listModel.getElementAt(i));&#xD;
                lanesinfo.remove((String) listModel.getElementAt(i));&#xD;
                listModel.remove(i);&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    ImagePlus imp = WindowManager.getCurrentImage();&#xD;
    if (count > 1 &amp;&amp; index.length == 1 &amp;&amp; imp != null) {&#xD;
        imp.deleteRoi();&#xD;
    }&#xD;
    stdslabels = new ArrayList&lt;String>();&#xD;
    return true;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MR1agBUTEemIe6OhVnSywA" name="update" specification="_MRy-QBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    ImagePlus imp = getImage();&#xD;
    if (imp == null) {&#xD;
        return false;&#xD;
    }&#xD;
    ImageCanvas ic = imp.getCanvas();&#xD;
    boolean showingAll = ic != null &amp;&amp; ic.getShowAllROIs();&#xD;
    Roi roi = imp.getRoi();&#xD;
    if (roi == null) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;The active image does not have a selection.&quot;, &quot;&quot;, JOptionPane.INFORMATION_MESSAGE);&#xD;
        return false;&#xD;
    }&#xD;
    int index = list.getSelectedIndex();&#xD;
    if (index &lt; 0 &amp;&amp; !showingAll) {&#xD;
        return error(&quot;Exactly one item in the list must be selected.&quot;);&#xD;
    }&#xD;
    if (index >= 0) {&#xD;
        String name = (String) listModel.getElementAt(index);&#xD;
        rois.remove(name);&#xD;
        lanesinfo.remove(name);&#xD;
        if (clone) {&#xD;
            Roi roi2 = (Roi) roi.clone();&#xD;
            setRoiPosition(imp, roi2);&#xD;
            roi.setName(name);&#xD;
            roi2.setName(name);&#xD;
            rois.put(name, roi2);&#xD;
        } else {&#xD;
            rois.put(name, roi);&#xD;
        }&#xD;
        lanesinfo.put(name, new LaneInfo());&#xD;
    }&#xD;
    if (record()) {&#xD;
        Recorder.record(&quot;roiManager&quot;, &quot;Update&quot;);&#xD;
    }&#xD;
    updateShowAll();&#xD;
    return true;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MR5r8BUTEemIe6OhVnSywA" name="rename" specification="_MR3PsBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    int index = list.getSelectedIndex();&#xD;
    if (index &lt; 0) {&#xD;
        return error(&quot;Exactly one item in the list must be selected.&quot;);&#xD;
    }&#xD;
    String name = (String) listModel.getElementAt(index);&#xD;
    if (name2 == null) {&#xD;
        name2 = promptForName(name);&#xD;
    }&#xD;
    if (name2 == null) {&#xD;
        return false;&#xD;
    }&#xD;
    if (name2.equals(name)) {&#xD;
        return false;&#xD;
    }&#xD;
    name2 = getUniqueName(name2);&#xD;
    Roi roi = (Roi) rois.get(name);&#xD;
    if (roi == null) {&#xD;
        return false;&#xD;
    }&#xD;
    rois.remove(name);&#xD;
    lanesinfo.remove(name);&#xD;
    roi.setName(name2);&#xD;
    int position = getSliceNumber(name2);&#xD;
    if (position > 0 &amp;&amp; roi.getCPosition() == 0 &amp;&amp; roi.getZPosition() == 0 &amp;&amp; roi.getTPosition() == 0) {&#xD;
        roi.setPosition(position);&#xD;
    }&#xD;
    rois.put(name2, roi);&#xD;
    lanesinfo.put(name2, new LaneInfo());&#xD;
    listModel.setElementAt(name2, index);&#xD;
    list.setSelectedIndex(index);&#xD;
    /*        if (Prefs.useNamesAsLabels &amp;&amp; labelsCheckbox.getState()) {
         ImagePlus imp = WindowManager.getCurrentImage();
         if (imp != null) {
         imp.draw();
         }
         }*/&#xD;
    if (record()) {&#xD;
        Recorder.record(&quot;roiManager&quot;, &quot;Rename&quot;, name2);&#xD;
    }&#xD;
    return true;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MR99YBUTEemIe6OhVnSywA" name="promptForName" specification="_MR7hIBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    GenericDialog gd = new GenericDialog(&quot;ROI Manager&quot;);&#xD;
    gd.addStringField(&quot;Rename As:&quot;, name, 20);&#xD;
    gd.showDialog();&#xD;
    if (gd.wasCanceled()) {&#xD;
        return null;&#xD;
    } else {&#xD;
        return gd.getNextString();&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MSEEABUTEemIe6OhVnSywA" name="restore" specification="_MR_ykBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    String label = (String) listModel.getElementAt(index);&#xD;
    Roi roi = (Roi) rois.get(label);&#xD;
    if (imp == null || roi == null) {&#xD;
        return false;&#xD;
    }&#xD;
    if (setSlice) {&#xD;
        int c = roi.getCPosition();&#xD;
        int z = roi.getZPosition();&#xD;
        int t = roi.getTPosition();&#xD;
        boolean hyperstack = imp.isHyperStack();&#xD;
        //IJ.log(&quot;restore: &quot;+hyperstack+&quot; &quot;+c+&quot; &quot;+z+&quot; &quot;+t);&#xD;
        if (hyperstack &amp;&amp; (c > 0 || z > 0 || t > 0)) {&#xD;
            imp.setPosition(c, z, t);&#xD;
        } else {&#xD;
            int n = getSliceNumber(roi, label);&#xD;
            if (n >= 1 &amp;&amp; n &lt;= imp.getStackSize()) {&#xD;
                if (hyperstack) {&#xD;
                    if (imp.getNSlices() > 1 &amp;&amp; n &lt;= imp.getNSlices()) {&#xD;
                        imp.setPosition(imp.getC(), n, imp.getT());&#xD;
                    } else if (imp.getNFrames() > 1 &amp;&amp; n &lt;= imp.getNFrames()) {&#xD;
                        imp.setPosition(imp.getC(), imp.getZ(), n);&#xD;
                    } else {&#xD;
                        imp.setPosition(n);&#xD;
                    }&#xD;
                } else {&#xD;
                    imp.setSlice(n);&#xD;
                }&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    if (showAllCheckbox.getState() &amp;&amp; !restoreCentered &amp;&amp; !noUpdateMode) {&#xD;
        roi.setImage(null);&#xD;
        imp.setRoi(roi);&#xD;
        return true;&#xD;
    }&#xD;
    Roi roi2 = (Roi) roi.clone();&#xD;
    Rectangle r = roi2.getBounds();&#xD;
    int width = imp.getWidth(), height = imp.getHeight();&#xD;
    if (restoreCentered) {&#xD;
        ImageCanvas ic = imp.getCanvas();&#xD;
        if (ic != null) {&#xD;
            Rectangle r1 = ic.getSrcRect();&#xD;
            Rectangle r2 = roi2.getBounds();&#xD;
            roi2.setLocation(r1.x + r1.width / 2 - r2.width / 2, r1.y + r1.height / 2 - r2.height / 2);&#xD;
        }&#xD;
    }&#xD;
    if (r.x >= width || r.y >= height || (r.x + r.width) &lt; 0 || (r.y + r.height) &lt; 0) {&#xD;
        roi2.setLocation((width - r.width) / 2, (height - r.height) / 2);&#xD;
    }&#xD;
    if (noUpdateMode) {&#xD;
        imp.setRoi(roi2, false);&#xD;
        noUpdateMode = false;&#xD;
    } else {&#xD;
        imp.setRoi(roi2, true);&#xD;
    }&#xD;
    return true;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MSHHURUTEemIe6OhVnSywA" name="restoreWithoutUpdate" specification="_MSF5MBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    noUpdateMode = true;&#xD;
    return restore(getImage(), index, false);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MSLYwBUTEemIe6OhVnSywA" name="getSliceNumber" specification="_MSI8gBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    int slice = -1;&#xD;
    if (label.length() >= 14 &amp;&amp; label.charAt(4) == '-' &amp;&amp; label.charAt(9) == '-') {&#xD;
        slice = (int) Tools.parseDouble(label.substring(0, 4), -1);&#xD;
    } else if (label.length() >= 17 &amp;&amp; label.charAt(5) == '-' &amp;&amp; label.charAt(11) == '-') {&#xD;
        slice = (int) Tools.parseDouble(label.substring(0, 5), -1);&#xD;
    } else if (label.length() >= 20 &amp;&amp; label.charAt(6) == '-' &amp;&amp; label.charAt(13) == '-') {&#xD;
        slice = (int) Tools.parseDouble(label.substring(0, 6), -1);&#xD;
    }&#xD;
    return slice;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MSQRQBUTEemIe6OhVnSywA" name="getSliceNumber" specification="_MSNN8BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    int slice = roi != null ? roi.getPosition() : -1;&#xD;
    if (slice == 0) {&#xD;
        slice = -1;&#xD;
    }&#xD;
    if (slice == -1) {&#xD;
        slice = getSliceNumber(label);&#xD;
    }&#xD;
    return slice;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MSTUkBUTEemIe6OhVnSywA" name="open" specification="_MSRfYBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    Macro.setOptions(null);&#xD;
    String name = null;&#xD;
    if (path == null || path.equals(&quot;&quot;)) {&#xD;
        OpenDialog od = new OpenDialog(&quot;Open Selection(s)...&quot;, &quot;&quot;);&#xD;
        String directory = od.getDirectory();&#xD;
        name = od.getFileName();&#xD;
        if (name == null) {&#xD;
            return;&#xD;
        }&#xD;
        path = directory + name;&#xD;
    }&#xD;
    if (Recorder.record &amp;&amp; !Recorder.scriptMode()) {&#xD;
        Recorder.record(&quot;roiManager&quot;, &quot;Open&quot;, path);&#xD;
    }&#xD;
    if (path.endsWith(&quot;.zip&quot;)) {&#xD;
        openZip(path);&#xD;
        return;&#xD;
    }&#xD;
    Opener o = new Opener();&#xD;
    if (name == null) {&#xD;
        name = o.getName(path);&#xD;
    }&#xD;
    Roi roi = o.openRoi(path);&#xD;
    if (roi != null) {&#xD;
        if (name.endsWith(&quot;.roi&quot;)) {&#xD;
            name = name.substring(0, name.length() - 4);&#xD;
        }&#xD;
        name = getUniqueName(name);&#xD;
        listModel.addElement(name);&#xD;
        rois.put(name, roi);&#xD;
        lanesinfo.put(name, new LaneInfo());&#xD;
    }&#xD;
    updateShowAll();&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MSWX4BUTEemIe6OhVnSywA" name="openZip" specification="_MSUisBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    ZipInputStream in = null;&#xD;
    ByteArrayOutputStream out;&#xD;
    int nRois = 0;&#xD;
    try {&#xD;
        in = new ZipInputStream(new FileInputStream(path));&#xD;
        byte[] buf = new byte[1024];&#xD;
        int len;&#xD;
        ZipEntry entry = in.getNextEntry();&#xD;
        while (entry != null) {&#xD;
            String name = entry.getName();&#xD;
            if (name.endsWith(&quot;.roi&quot;)) {&#xD;
                out = new ByteArrayOutputStream();&#xD;
                while ((len = in.read(buf)) > 0) {&#xD;
                    out.write(buf, 0, len);&#xD;
                }&#xD;
                out.close();&#xD;
                byte[] bytes = out.toByteArray();&#xD;
                RoiDecoder rd = new RoiDecoder(bytes, name);&#xD;
                Roi roi = rd.getRoi();&#xD;
                if (roi != null) {&#xD;
                    name = name.substring(0, name.length() - 4);&#xD;
                    name = getUniqueName(name);&#xD;
                    listModel.addElement(name);&#xD;
                    rois.put(name, roi);&#xD;
                    lanesinfo.put(name, new LaneInfo());&#xD;
                    nRois++;&#xD;
                }&#xD;
            }&#xD;
            entry = in.getNextEntry();&#xD;
        }&#xD;
        in.close();&#xD;
    } catch (IOException e) {&#xD;
        error(e.toString());&#xD;
    }&#xD;
    if (nRois == 0) {&#xD;
        error(&quot;This ZIP archive does not appear to contain \&quot;.roi\&quot; files&quot;);&#xD;
    }&#xD;
    updateShowAll();&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MSZbMBUTEemIe6OhVnSywA" name="getUniqueName" specification="_MSYNEBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    String name2 = name;&#xD;
    int n = 1;&#xD;
    Roi roi2 = (Roi) rois.get(name2);&#xD;
    while (roi2 != null) {&#xD;
        roi2 = (Roi) rois.get(name2);&#xD;
        if (roi2 != null) {&#xD;
            int lastDash = name2.lastIndexOf(&quot;-&quot;);&#xD;
            if (lastDash != -1 &amp;&amp; name2.length() - lastDash &lt; 5) {&#xD;
                name2 = name2.substring(0, lastDash);&#xD;
            }&#xD;
            name2 = name2 + &quot;-&quot; + n;&#xD;
            n++;&#xD;
        }&#xD;
        roi2 = (Roi) rois.get(name2);&#xD;
    }&#xD;
    return name2;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MSb3cBUTEemIe6OhVnSywA" name="save" specification="_MSapUBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    if (getCount() == 0) {&#xD;
        return error(&quot;The selection list is empty.&quot;);&#xD;
    }&#xD;
    int[] indexes = getSelectedIndexes();&#xD;
    if (indexes.length == 0) {&#xD;
        indexes = getAllIndexes();&#xD;
    }&#xD;
    if (indexes.length > 1) {&#xD;
        return saveMultiple(indexes, null);&#xD;
    }&#xD;
    String name = (String) listModel.getElementAt(indexes[0]);&#xD;
    Macro.setOptions(null);&#xD;
    SaveDialog sd = new SaveDialog(&quot;Save Selection...&quot;, name, &quot;.roi&quot;);&#xD;
    String name2 = sd.getFileName();&#xD;
    if (name2 == null) {&#xD;
        return false;&#xD;
    }&#xD;
    String dir = sd.getDirectory();&#xD;
    Roi roi = (Roi) rois.get(name);&#xD;
    rois.remove(name);&#xD;
    lanesinfo.remove(name);&#xD;
    if (!name2.endsWith(&quot;.roi&quot;)) {&#xD;
        name2 = name2 + &quot;.roi&quot;;&#xD;
    }&#xD;
    String newName = name2.substring(0, name2.length() - 4);&#xD;
    rois.put(newName, roi);&#xD;
    lanesinfo.put(newName, new LaneInfo());&#xD;
    roi.setName(newName);&#xD;
    listModel.setElementAt(newName, indexes[0]);&#xD;
    RoiEncoder re = new RoiEncoder(dir + name2);&#xD;
    try {&#xD;
        re.write(roi);&#xD;
    } catch (IOException e) {&#xD;
        IJ.error(&quot;ROI Manager&quot;, e.getMessage());&#xD;
    }&#xD;
    if (record()) {&#xD;
        String path = dir + name2;&#xD;
        if (Recorder.scriptMode()) {&#xD;
            Recorder.recordCall(&quot;IJ.saveAs(imp, \&quot;Selection\&quot;, \&quot;&quot; + path + &quot;\&quot;);&quot;);&#xD;
        } else {&#xD;
            Recorder.record(&quot;saveAs&quot;, &quot;Selection&quot;, path);&#xD;
        }&#xD;
    }&#xD;
    return true;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MShXABUTEemIe6OhVnSywA" name="saveMultiple" specification="_MSdsoBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    Macro.setOptions(null);&#xD;
    if (path == null) {&#xD;
        SaveDialog sd = new SaveDialog(&quot;Save ROIs...&quot;, &quot;RoiSet&quot;, &quot;.zip&quot;);&#xD;
        String name = sd.getFileName();&#xD;
        if (name == null) {&#xD;
            return false;&#xD;
        }&#xD;
        if (!(name.endsWith(&quot;.zip&quot;) || name.endsWith(&quot;.ZIP&quot;))) {&#xD;
            name = name + &quot;.zip&quot;;&#xD;
        }&#xD;
        String dir = sd.getDirectory();&#xD;
        path = dir + name;&#xD;
    }&#xD;
    try {&#xD;
        ZipOutputStream zos = new ZipOutputStream(new FileOutputStream(path));&#xD;
        DataOutputStream out = new DataOutputStream(new BufferedOutputStream(zos));&#xD;
        RoiEncoder re = new RoiEncoder(out);&#xD;
        for (int i = 0; i &lt; indexes.length; i++) {&#xD;
            String label = (String) listModel.getElementAt(indexes[i]);&#xD;
            Roi roi = (Roi) rois.get(label);&#xD;
            if (IJ.debugMode) {&#xD;
                IJ.log(&quot;saveMultiple: &quot; + i + &quot;  &quot; + label + &quot;  &quot; + roi);&#xD;
            }&#xD;
            if (roi == null) {&#xD;
                continue;&#xD;
            }&#xD;
            if (!label.endsWith(&quot;.roi&quot;)) {&#xD;
                label += &quot;.roi&quot;;&#xD;
            }&#xD;
            zos.putNextEntry(new ZipEntry(label));&#xD;
            re.write(roi);&#xD;
            out.flush();&#xD;
        }&#xD;
        out.close();&#xD;
    } catch (IOException e) {&#xD;
        error(&quot;&quot; + e);&#xD;
        return false;&#xD;
    }&#xD;
    if (record()) {&#xD;
        Recorder.record(&quot;roiManager&quot;, &quot;Save&quot;, path);&#xD;
    }&#xD;
    return true;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MSjzQBUTEemIe6OhVnSywA" name="measure" specification="_MSilIBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    ImagePlus imp = getImage();&#xD;
    if (imp == null) {&#xD;
        return false;&#xD;
    }&#xD;
    int[] indexes = getSelectedIndexes();&#xD;
    if (indexes.length == 0) {&#xD;
        indexes = getAllIndexes();&#xD;
    }&#xD;
    if (indexes.length == 0) {&#xD;
        return false;&#xD;
    }&#xD;
    boolean allSliceOne = true;&#xD;
    for (int i = 0; i &lt; indexes.length; i++) {&#xD;
        String label = (String) listModel.getElementAt(indexes[i]);&#xD;
        Roi roi = (Roi) rois.get(label);&#xD;
        if (getSliceNumber(roi, label) > 1) {&#xD;
            allSliceOne = false;&#xD;
        }&#xD;
    }&#xD;
    int measurements = Analyzer.getMeasurements();&#xD;
    if (imp.getStackSize() > 1) {&#xD;
        Analyzer.setMeasurements(measurements | Measurements.SLICE);&#xD;
    }&#xD;
    int currentSlice = imp.getCurrentSlice();&#xD;
    Analyzer.setMeasurements(measurements &amp; (~Measurements.ADD_TO_OVERLAY));&#xD;
    for (int i = 0; i &lt; indexes.length; i++) {&#xD;
        if (restore(getImage(), indexes[i], !allSliceOne)) {&#xD;
            IJ.run(&quot;Measure&quot;);&#xD;
        } else {&#xD;
            break;&#xD;
        }&#xD;
    }&#xD;
    Analyzer.setMeasurements(measurements);&#xD;
    imp.setSlice(currentSlice);&#xD;
    if (indexes.length > 1) {&#xD;
        IJ.run(&quot;Select None&quot;);&#xD;
    }&#xD;
    if (record()) {&#xD;
        Recorder.record(&quot;roiManager&quot;, &quot;Measure&quot;);&#xD;
    }&#xD;
    return true;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MSndoBUTEemIe6OhVnSywA" name="multiMeasure" specification="_MSlocBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    ImagePlus imp = getImage();&#xD;
    if (imp == null) {&#xD;
        return false;&#xD;
    }&#xD;
    int[] indexes = getSelectedIndexes();&#xD;
    if (indexes.length == 0) {&#xD;
        indexes = getAllIndexes();&#xD;
    }&#xD;
    if (indexes.length == 0) {&#xD;
        return false;&#xD;
    }&#xD;
    int measurements = Analyzer.getMeasurements();&#xD;
    int nSlices = imp.getStackSize();&#xD;
    if (cmd != null) {&#xD;
        appendResults = cmd.contains(&quot;append&quot;) ? true : false;&#xD;
    }&#xD;
    if (IJ.isMacro()) {&#xD;
        if (nSlices > 1) {&#xD;
            measureAll = true;&#xD;
        }&#xD;
        onePerSlice = true;&#xD;
    } else {&#xD;
        GenericDialog gd = new GenericDialog(&quot;Multi Measure&quot;);&#xD;
        if (nSlices > 1) {&#xD;
            gd.addCheckbox(&quot;Measure all &quot; + nSlices + &quot; slices&quot;, measureAll);&#xD;
        }&#xD;
        gd.addCheckbox(&quot;One Row Per Slice&quot;, onePerSlice);&#xD;
        gd.addCheckbox(&quot;Append results&quot;, appendResults);&#xD;
        int columns = getColumnCount(imp, measurements) * indexes.length;&#xD;
        String str = nSlices == 1 ? &quot;this option&quot; : &quot;both options&quot;;&#xD;
        gd.setInsets(10, 25, 0);&#xD;
        gd.addMessage(&quot;Enabling &quot; + str + &quot; will result\n&quot; + &quot;in a table with &quot; + columns + &quot; columns.&quot;);&#xD;
        gd.showDialog();&#xD;
        if (gd.wasCanceled()) {&#xD;
            return false;&#xD;
        }&#xD;
        if (nSlices > 1) {&#xD;
            measureAll = gd.getNextBoolean();&#xD;
        }&#xD;
        onePerSlice = gd.getNextBoolean();&#xD;
        appendResults = gd.getNextBoolean();&#xD;
    }&#xD;
    if (!measureAll) {&#xD;
        nSlices = 1;&#xD;
    }&#xD;
    int currentSlice = imp.getCurrentSlice();&#xD;
    if (!onePerSlice) {&#xD;
        int measurements2 = nSlices > 1 ? measurements | Measurements.SLICE : measurements;&#xD;
        ResultsTable rt = new ResultsTable();&#xD;
        Analyzer analyzer = new Analyzer(imp, measurements2, rt);&#xD;
        for (int slice = 1; slice &lt;= nSlices; slice++) {&#xD;
            if (nSlices > 1) {&#xD;
                imp.setSliceWithoutUpdate(slice);&#xD;
            }&#xD;
            for (int i = 0; i &lt; indexes.length; i++) {&#xD;
                if (restoreWithoutUpdate(indexes[i])) {&#xD;
                    analyzer.measure();&#xD;
                } else {&#xD;
                    break;&#xD;
                }&#xD;
            }&#xD;
        }&#xD;
        rt.show(&quot;Results&quot;);&#xD;
        if (nSlices > 1) {&#xD;
            imp.setSlice(currentSlice);&#xD;
        }&#xD;
        return true;&#xD;
    }&#xD;
    // System Analyzer&#xD;
    Analyzer aSys = new Analyzer(imp);&#xD;
    ResultsTable rtSys = Analyzer.getResultsTable();&#xD;
    ResultsTable rtMulti = new ResultsTable();&#xD;
    if (appendResults &amp;&amp; mmResults != null) {&#xD;
        rtMulti = mmResults;&#xD;
    }&#xD;
    rtSys.reset();&#xD;
    for (int slice = 1; slice &lt;= nSlices; slice++) {&#xD;
        int sliceUse = slice;&#xD;
        if (nSlices == 1) {&#xD;
            sliceUse = currentSlice;&#xD;
        }&#xD;
        imp.setSliceWithoutUpdate(sliceUse);&#xD;
        rtMulti.incrementCounter();&#xD;
        if ((Analyzer.getMeasurements() &amp; Measurements.LABELS) != 0) {&#xD;
            rtMulti.addLabel(&quot;Label&quot;, imp.getTitle());&#xD;
        }&#xD;
        int roiIndex = 0;&#xD;
        for (int i = 0; i &lt; indexes.length; i++) {&#xD;
            if (restoreWithoutUpdate(indexes[i])) {&#xD;
                roiIndex++;&#xD;
                aSys.measure();&#xD;
                for (int j = 0; j &lt;= rtSys.getLastColumn(); j++) {&#xD;
                    float[] col = rtSys.getColumn(j);&#xD;
                    String head = rtSys.getColumnHeading(j);&#xD;
                    String suffix = &quot;&quot; + roiIndex;&#xD;
                    Roi roi = imp.getRoi();&#xD;
                    if (roi != null) {&#xD;
                        String name = roi.getName();&#xD;
                        if (name != null &amp;&amp; name.length() > 0 &amp;&amp; (name.length() &lt; 9 || !Character.isDigit(name.charAt(0)))) {&#xD;
                            suffix = &quot;(&quot; + name + &quot;)&quot;;&#xD;
                        }&#xD;
                    }&#xD;
                    if (head != null &amp;&amp; col != null &amp;&amp; !head.equals(&quot;Slice&quot;)) {&#xD;
                        rtMulti.addValue(head + suffix, rtSys.getValue(j, rtSys.getCounter() - 1));&#xD;
                    }&#xD;
                }&#xD;
            } else {&#xD;
                break;&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    mmResults = (ResultsTable) rtMulti.clone();&#xD;
    rtMulti.show(&quot;Results&quot;);&#xD;
    imp.setSlice(currentSlice);&#xD;
    if (indexes.length > 1) {&#xD;
        IJ.run(&quot;Select None&quot;);&#xD;
    }&#xD;
    if (record()) {&#xD;
        String arg = appendResults ? &quot; append&quot; : &quot;&quot;;&#xD;
        Recorder.record(&quot;roiManager&quot;, &quot;Multi Measure&quot; + arg);&#xD;
    }&#xD;
    return true;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MSrIABUTEemIe6OhVnSywA" name="getColumnCount" specification="_MSorwBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    ImageStatistics stats = imp.getStatistics(measurements);&#xD;
    ResultsTable rt = new ResultsTable();&#xD;
    Analyzer analyzer = new Analyzer(imp, measurements, rt);&#xD;
    analyzer.saveResults(stats, null);&#xD;
    int count = 0;&#xD;
    for (int i = 0; i &lt;= rt.getLastColumn(); i++) {&#xD;
        float[] col = rt.getColumn(i);&#xD;
        String head = rt.getColumnHeading(i);&#xD;
        if (head != null &amp;&amp; col != null) {&#xD;
            count++;&#xD;
        }&#xD;
    }&#xD;
    return count;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MSsWIBUTEemIe6OhVnSywA" name="multiPlot" specification="_MSrvEBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    ImagePlus imp = getImage();&#xD;
    if (imp == null) {&#xD;
        return;&#xD;
    }&#xD;
    int[] indexes = getSelectedIndexes();&#xD;
    if (indexes.length == 0) {&#xD;
        indexes = getAllIndexes();&#xD;
    }&#xD;
    int n = indexes.length;&#xD;
    if (n == 0) {&#xD;
        return;&#xD;
    }&#xD;
    Color[] colors = { Color.blue, Color.green, Color.magenta, Color.red, Color.cyan, Color.yellow };&#xD;
    if (n > colors.length) {&#xD;
        colors = new Color[n];&#xD;
        double c = 0;&#xD;
        double inc = 150.0 / n;&#xD;
        for (int i = 0; i &lt; n; i++) {&#xD;
            colors[i] = new Color((int) c, (int) c, (int) c);&#xD;
            c += inc;&#xD;
        }&#xD;
    }&#xD;
    int currentSlice = imp.getCurrentSlice();&#xD;
    double[][] x = new double[n][];&#xD;
    double[][] y = new double[n][];&#xD;
    double minY = Double.MAX_VALUE;&#xD;
    double maxY = -Double.MAX_VALUE;&#xD;
    double fixedMin = ProfilePlot.getFixedMin();&#xD;
    double fixedMax = ProfilePlot.getFixedMax();&#xD;
    boolean freeYScale = fixedMin == 0.0 &amp;&amp; fixedMax == 0.0;&#xD;
    if (!freeYScale) {&#xD;
        minY = fixedMin;&#xD;
        maxY = fixedMax;&#xD;
    }&#xD;
    int maxX = 0;&#xD;
    Calibration cal = imp.getCalibration();&#xD;
    double xinc = cal.pixelWidth;&#xD;
    for (int i = 0; i &lt; indexes.length; i++) {&#xD;
        if (!restore(getImage(), indexes[i], true)) {&#xD;
            break;&#xD;
        }&#xD;
        Roi roi = imp.getRoi();&#xD;
        if (roi == null) {&#xD;
            break;&#xD;
        }&#xD;
        if (roi.isArea() &amp;&amp; roi.getType() != Roi.RECTANGLE) {&#xD;
            IJ.run(imp, &quot;Area to Line&quot;, &quot;&quot;);&#xD;
        }&#xD;
        ProfilePlot pp = new ProfilePlot(imp, Prefs.verticalProfile || IJ.altKeyDown());&#xD;
        y[i] = pp.getProfile();&#xD;
        if (y[i] == null) {&#xD;
            break;&#xD;
        }&#xD;
        if (y[i].length > maxX) {&#xD;
            maxX = y[i].length;&#xD;
        }&#xD;
        if (freeYScale) {&#xD;
            double[] a = Tools.getMinMax(y[i]);&#xD;
            if (a[0] &lt; minY) {&#xD;
                minY = a[0];&#xD;
            }&#xD;
            if (a[1] > maxY) {&#xD;
                maxY = a[1];&#xD;
            }&#xD;
        }&#xD;
        double[] xx = new double[y[i].length];&#xD;
        for (int j = 0; j &lt; xx.length; j++) {&#xD;
            xx[j] = j * xinc;&#xD;
        }&#xD;
        x[i] = xx;&#xD;
    }&#xD;
    String xlabel = &quot;Distance (&quot; + cal.getUnits() + &quot;)&quot;;&#xD;
    Plot plot = new Plot(&quot;Profiles&quot;, xlabel, &quot;Value&quot;, x[0], y[0]);&#xD;
    plot.setLimits(0, maxX * xinc, minY, maxY);&#xD;
    for (int i = 1; i &lt; indexes.length; i++) {&#xD;
        plot.setColor(colors[i]);&#xD;
        if (x[i] != null) {&#xD;
            plot.addPoints(x[i], y[i], Plot.LINE);&#xD;
        }&#xD;
    }&#xD;
    plot.setColor(colors[0]);&#xD;
    if (x[0] != null) {&#xD;
        plot.show();&#xD;
    }&#xD;
    imp.setSlice(currentSlice);&#xD;
    if (indexes.length > 1) {&#xD;
        IJ.run(&quot;Select None&quot;);&#xD;
    }&#xD;
    if (record()) {&#xD;
        Recorder.record(&quot;roiManager&quot;, &quot;Multi Plot&quot;);&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MSuyYBUTEemIe6OhVnSywA" name="drawOrFill" specification="_MSs9MBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    int[] indexes = getSelectedIndexes();&#xD;
    if (indexes.length == 0) {&#xD;
        indexes = getAllIndexes();&#xD;
    }&#xD;
    ImagePlus imp = WindowManager.getCurrentImage();&#xD;
    imp.deleteRoi();&#xD;
    ImageProcessor ip = imp.getProcessor();&#xD;
    ip.setColor(Toolbar.getForegroundColor());&#xD;
    ip.snapshot();&#xD;
    Undo.setup(Undo.FILTER, imp);&#xD;
    Filler filler = mode == LABEL ? new Filler() : null;&#xD;
    int slice = imp.getCurrentSlice();&#xD;
    for (int i = 0; i &lt; indexes.length; i++) {&#xD;
        String name = (String) listModel.getElementAt(indexes[i]);&#xD;
        Roi roi = (Roi) rois.get(name);&#xD;
        int type = roi.getType();&#xD;
        if (roi == null) {&#xD;
            continue;&#xD;
        }&#xD;
        if (mode == FILL &amp;&amp; (type == Roi.POLYLINE || type == Roi.FREELINE || type == Roi.ANGLE)) {&#xD;
            mode = DRAW;&#xD;
        }&#xD;
        int slice2 = getSliceNumber(roi, name);&#xD;
        if (slice2 >= 1 &amp;&amp; slice2 &lt;= imp.getStackSize()) {&#xD;
            imp.setSlice(slice2);&#xD;
            ip = imp.getProcessor();&#xD;
            ip.setColor(Toolbar.getForegroundColor());&#xD;
            if (slice2 != slice) {&#xD;
                Undo.reset();&#xD;
            }&#xD;
        }&#xD;
        switch(mode) {&#xD;
            case DRAW:&#xD;
                roi.drawPixels(ip);&#xD;
                break;&#xD;
            case FILL:&#xD;
                ip.fill(roi);&#xD;
                break;&#xD;
            case LABEL:&#xD;
                roi.drawPixels(ip);&#xD;
                filler.drawLabel(imp, ip, i + 1, roi.getBounds());&#xD;
                break;&#xD;
        }&#xD;
    }&#xD;
    if (record() &amp;&amp; (mode == DRAW || mode == FILL)) {&#xD;
        Recorder.record(&quot;roiManager&quot;, mode == DRAW ? &quot;Draw&quot; : &quot;Fill&quot;);&#xD;
    }&#xD;
    if (showAllCheckbox.getState()) {&#xD;
        runCommand(&quot;show none&quot;);&#xD;
    }&#xD;
    imp.updateAndDraw();&#xD;
    return true;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MSycwBUTEemIe6OhVnSywA" name="setProperties" specification="_MSwAgBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    boolean showDialog = color == null &amp;&amp; lineWidth == -1 &amp;&amp; fillColor == null;&#xD;
    int[] indexes = getSelectedIndexes();&#xD;
    if (indexes.length == 0) {&#xD;
        indexes = getAllIndexes();&#xD;
    }&#xD;
    int n = indexes.length;&#xD;
    if (n == 0) {&#xD;
        return;&#xD;
    }&#xD;
    Roi rpRoi = null;&#xD;
    String rpName = null;&#xD;
    Font font = null;&#xD;
    int justification = TextRoi.LEFT;&#xD;
    double opacity = -1;&#xD;
    int position = -1;&#xD;
    int cpos = -1, zpos = -1, tpos = -1;&#xD;
    if (showDialog) {&#xD;
        String label = (String) listModel.getElementAt(indexes[0]);&#xD;
        rpRoi = (Roi) rois.get(label);&#xD;
        if (n == 1) {&#xD;
            fillColor = rpRoi.getFillColor();&#xD;
            rpName = rpRoi.getName();&#xD;
        }&#xD;
        if (rpRoi.getStrokeColor() == null) {&#xD;
            rpRoi.setStrokeColor(Roi.getColor());&#xD;
        }&#xD;
        rpRoi = (Roi) rpRoi.clone();&#xD;
        if (n > 1) {&#xD;
            rpRoi.setName(&quot;range: &quot; + (indexes[0] + 1) + &quot;-&quot; + (indexes[n - 1] + 1));&#xD;
        }&#xD;
        rpRoi.setFillColor(fillColor);&#xD;
        RoiProperties rp = new RoiProperties(&quot;Properties&quot;, rpRoi);&#xD;
        if (!rp.showDialog()) {&#xD;
            return;&#xD;
        }&#xD;
        lineWidth = (int) rpRoi.getStrokeWidth();&#xD;
        defaultLineWidth = lineWidth;&#xD;
        color = rpRoi.getStrokeColor();&#xD;
        fillColor = rpRoi.getFillColor();&#xD;
        defaultColor = color;&#xD;
        position = rpRoi.getPosition();&#xD;
        cpos = rpRoi.getCPosition();&#xD;
        zpos = rpRoi.getZPosition();&#xD;
        tpos = rpRoi.getTPosition();&#xD;
        if (rpRoi instanceof TextRoi) {&#xD;
            font = ((TextRoi) rpRoi).getCurrentFont();&#xD;
            justification = ((TextRoi) rpRoi).getJustification();&#xD;
        }&#xD;
        if (rpRoi instanceof ImageRoi) {&#xD;
            opacity = ((ImageRoi) rpRoi).getOpacity();&#xD;
        }&#xD;
    }&#xD;
    ImagePlus imp = WindowManager.getCurrentImage();&#xD;
    if (n == getCount() &amp;&amp; n > 1 &amp;&amp; !IJ.isMacro()) {&#xD;
        GenericDialog gd = new GenericDialog(&quot;ROI Manager&quot;);&#xD;
        gd.addMessage(&quot;Apply changes to all &quot; + n + &quot; selections?&quot;);&#xD;
        gd.showDialog();&#xD;
        if (gd.wasCanceled()) {&#xD;
            return;&#xD;
        }&#xD;
    }&#xD;
    for (int i = 0; i &lt; n; i++) {&#xD;
        String label = (String) listModel.getElementAt(indexes[i]);&#xD;
        Roi roi = (Roi) rois.get(label);&#xD;
        if (roi == null) {&#xD;
            continue;&#xD;
        }&#xD;
        //IJ.log(&quot;set &quot;+color+&quot;	 &quot;+lineWidth+&quot;	&quot;+fillColor);&#xD;
        if (color != null) {&#xD;
            roi.setStrokeColor(color);&#xD;
        }&#xD;
        if (lineWidth >= 0) {&#xD;
            roi.setStrokeWidth(lineWidth);&#xD;
        }&#xD;
        roi.setFillColor(fillColor);&#xD;
        if (cpos > 0 || zpos > 0 || tpos > 0) {&#xD;
            roi.setPosition(cpos, zpos, tpos);&#xD;
        } else if (position != -1) {&#xD;
            roi.setPosition(position);&#xD;
        }&#xD;
        if (roi instanceof TextRoi) {&#xD;
            roi.setImage(imp);&#xD;
            if (font != null) {&#xD;
                ((TextRoi) roi).setCurrentFont(font);&#xD;
            }&#xD;
            ((TextRoi) roi).setJustification(justification);&#xD;
            roi.setImage(null);&#xD;
        }&#xD;
        if ((roi instanceof ImageRoi) &amp;&amp; opacity != -1) {&#xD;
            ((ImageRoi) roi).setOpacity(opacity);&#xD;
        }&#xD;
    }&#xD;
    if (rpRoi != null &amp;&amp; rpName != null &amp;&amp; !rpRoi.getName().equals(rpName)) {&#xD;
        rename(rpRoi.getName());&#xD;
    }&#xD;
    ImageCanvas ic = imp != null ? imp.getCanvas() : null;&#xD;
    Roi roi = imp != null ? imp.getRoi() : null;&#xD;
    boolean showingAll = ic != null &amp;&amp; ic.getShowAllROIs();&#xD;
    if (roi != null &amp;&amp; (n == 1 || !showingAll)) {&#xD;
        if (lineWidth >= 0) {&#xD;
            roi.setStrokeWidth(lineWidth);&#xD;
        }&#xD;
        if (color != null) {&#xD;
            roi.setStrokeColor(color);&#xD;
        }&#xD;
        if (fillColor != null) {&#xD;
            roi.setFillColor(fillColor);&#xD;
        }&#xD;
        if (roi != null &amp;&amp; (roi instanceof TextRoi)) {&#xD;
            ((TextRoi) roi).setCurrentFont(font);&#xD;
            ((TextRoi) roi).setJustification(justification);&#xD;
        }&#xD;
        if (roi != null &amp;&amp; (roi instanceof ImageRoi) &amp;&amp; opacity != -1) {&#xD;
            ((ImageRoi) roi).setOpacity(opacity);&#xD;
        }&#xD;
    }&#xD;
    if (lineWidth > 1 &amp;&amp; !showingAll &amp;&amp; roi == null) {&#xD;
        showAll(SHOW_ALL);&#xD;
        showingAll = true;&#xD;
    }&#xD;
    if (imp != null) {&#xD;
        imp.draw();&#xD;
    }&#xD;
    if (record()) {&#xD;
        if (fillColor != null) {&#xD;
            Recorder.record(&quot;roiManager&quot;, &quot;Set Fill Color&quot;, Colors.colorToString(fillColor));&#xD;
        } else {&#xD;
            Recorder.record(&quot;roiManager&quot;, &quot;Set Color&quot;, Colors.colorToString(color != null ? color : Color.red));&#xD;
            Recorder.record(&quot;roiManager&quot;, &quot;Set Line Width&quot;, lineWidth);&#xD;
        }&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MS0R8BUTEemIe6OhVnSywA" name="flatten" specification="_MSzq4BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    ImagePlus imp = WindowManager.getCurrentImage();&#xD;
    if (imp == null) {&#xD;
        IJ.noImage();&#xD;
        return;&#xD;
    }&#xD;
    ImageCanvas ic = imp.getCanvas();&#xD;
    if ((ic != null &amp;&amp; ic.getShowAllList() == null) &amp;&amp; imp.getOverlay() == null &amp;&amp; imp.getRoi() == null) {&#xD;
        error(&quot;Image does not have an overlay or ROI&quot;);&#xD;
    } else {&#xD;
        // run Image>Flatten in separate thread&#xD;
        IJ.doCommand(&quot;Flatten&quot;);&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MS0R8hUTEemIe6OhVnSywA" name="combine" specification="_MS0R8RUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    ImagePlus imp = getImage();&#xD;
    if (imp == null) {&#xD;
        return;&#xD;
    }&#xD;
    int[] indexes = getSelectedIndexes();&#xD;
    if (indexes.length == 1) {&#xD;
        error(&quot;More than one item must be selected, or none&quot;);&#xD;
        return;&#xD;
    }&#xD;
    if (indexes.length == 0) {&#xD;
        indexes = getAllIndexes();&#xD;
    }&#xD;
    int nPointRois = 0;&#xD;
    for (int i = 0; i &lt; indexes.length; i++) {&#xD;
        Roi roi = (Roi) rois.get((String) listModel.getElementAt(indexes[i]));&#xD;
        if (roi.getType() == Roi.POINT) {&#xD;
            nPointRois++;&#xD;
        } else {&#xD;
            break;&#xD;
        }&#xD;
    }&#xD;
    if (nPointRois == indexes.length) {&#xD;
        combinePoints(imp, indexes);&#xD;
    } else {&#xD;
        combineRois(imp, indexes);&#xD;
    }&#xD;
    if (record()) {&#xD;
        Recorder.record(&quot;roiManager&quot;, &quot;Combine&quot;);&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MS38UBUTEemIe6OhVnSywA" name="combineRois" specification="_MS1gEBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    ShapeRoi s1 = null, s2 = null;&#xD;
    ImageProcessor ip = null;&#xD;
    for (int i = 0; i &lt; indexes.length; i++) {&#xD;
        Roi roi = (Roi) rois.get((String) listModel.getElementAt(indexes[i]));&#xD;
        if (!roi.isArea()) {&#xD;
            if (ip == null) {&#xD;
                ip = new ByteProcessor(imp.getWidth(), imp.getHeight());&#xD;
            }&#xD;
            roi = convertLineToPolygon(roi, ip);&#xD;
        }&#xD;
        if (s1 == null) {&#xD;
            if (roi instanceof ShapeRoi) {&#xD;
                s1 = (ShapeRoi) roi;&#xD;
            } else {&#xD;
                s1 = new ShapeRoi(roi);&#xD;
            }&#xD;
            if (s1 == null) {&#xD;
                return;&#xD;
            }&#xD;
        } else {&#xD;
            if (roi instanceof ShapeRoi) {&#xD;
                s2 = (ShapeRoi) roi;&#xD;
            } else {&#xD;
                s2 = new ShapeRoi(roi);&#xD;
            }&#xD;
            if (s2 == null) {&#xD;
                continue;&#xD;
            }&#xD;
            s1.or(s2);&#xD;
        }&#xD;
    }&#xD;
    if (s1 != null) {&#xD;
        imp.setRoi(s1);&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MS7msBUTEemIe6OhVnSywA" name="convertLineToPolygon" specification="_MS5KcBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    if (roi == null) {&#xD;
        return null;&#xD;
    }&#xD;
    ip.resetRoi();&#xD;
    ip.setColor(0);&#xD;
    ip.fill();&#xD;
    ip.setColor(255);&#xD;
    if (roi.getType() == Roi.LINE &amp;&amp; roi.getStrokeWidth() > 1) {&#xD;
        ip.fillPolygon(roi.getPolygon());&#xD;
    } else {&#xD;
        roi.drawPixels(ip);&#xD;
    }&#xD;
    //new ImagePlus(&quot;ip&quot;, ip.duplicate()).show();&#xD;
    ip.setThreshold(255, 255, ImageProcessor.NO_LUT_UPDATE);&#xD;
    ThresholdToSelection tts = new ThresholdToSelection();&#xD;
    return tts.convert(ip);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MS_4IBUTEemIe6OhVnSywA" name="combinePoints" specification="_MS800BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    int n = indexes.length;&#xD;
    Polygon[] p = new Polygon[n];&#xD;
    int points = 0;&#xD;
    for (int i = 0; i &lt; n; i++) {&#xD;
        Roi roi = (Roi) rois.get((String) listModel.getElementAt(indexes[i]));&#xD;
        p[i] = roi.getPolygon();&#xD;
        points += p[i].npoints;&#xD;
    }&#xD;
    if (points == 0) {&#xD;
        return;&#xD;
    }&#xD;
    int[] xpoints = new int[points];&#xD;
    int[] ypoints = new int[points];&#xD;
    int index = 0;&#xD;
    for (int i = 0; i &lt; p.length; i++) {&#xD;
        for (int j = 0; j &lt; p[i].npoints; j++) {&#xD;
            xpoints[index] = p[i].xpoints[j];&#xD;
            ypoints[index] = p[i].ypoints[j];&#xD;
            index++;&#xD;
        }&#xD;
    }&#xD;
    imp.setRoi(new PointRoi(xpoints, ypoints, xpoints.length));&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MTBGQBUTEemIe6OhVnSywA" name="and" specification="_MTAfMBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    ImagePlus imp = getImage();&#xD;
    if (imp == null) {&#xD;
        return;&#xD;
    }&#xD;
    int[] indexes = getSelectedIndexes();&#xD;
    if (indexes.length == 1) {&#xD;
        error(&quot;More than one item must be selected, or none&quot;);&#xD;
        return;&#xD;
    }&#xD;
    if (indexes.length == 0) {&#xD;
        indexes = getAllIndexes();&#xD;
    }&#xD;
    ShapeRoi s1 = null, s2 = null;&#xD;
    for (int i = 0; i &lt; indexes.length; i++) {&#xD;
        Roi roi = (Roi) rois.get((String) listModel.getElementAt(indexes[i]));&#xD;
        if (roi == null || !roi.isArea()) {&#xD;
            continue;&#xD;
        }&#xD;
        if (s1 == null) {&#xD;
            if (roi instanceof ShapeRoi) {&#xD;
                s1 = (ShapeRoi) roi.clone();&#xD;
            } else {&#xD;
                s1 = new ShapeRoi(roi);&#xD;
            }&#xD;
            if (s1 == null) {&#xD;
                return;&#xD;
            }&#xD;
        } else {&#xD;
            if (roi instanceof ShapeRoi) {&#xD;
                s2 = (ShapeRoi) roi.clone();&#xD;
            } else {&#xD;
                s2 = new ShapeRoi(roi);&#xD;
            }&#xD;
            if (s2 == null) {&#xD;
                continue;&#xD;
            }&#xD;
            s1.and(s2);&#xD;
        }&#xD;
    }&#xD;
    if (s1 != null) {&#xD;
        imp.setRoi(s1);&#xD;
    }&#xD;
    if (record()) {&#xD;
        Recorder.record(&quot;roiManager&quot;, &quot;AND&quot;);&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MTCUYRUTEemIe6OhVnSywA" name="xor" specification="_MTCUYBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    ImagePlus imp = getImage();&#xD;
    if (imp == null) {&#xD;
        return;&#xD;
    }&#xD;
    int[] indexes = getSelectedIndexes();&#xD;
    if (indexes.length == 1) {&#xD;
        error(&quot;More than one item must be selected, or none&quot;);&#xD;
        return;&#xD;
    }&#xD;
    if (indexes.length == 0) {&#xD;
        indexes = getAllIndexes();&#xD;
    }&#xD;
    ShapeRoi s1 = null, s2 = null;&#xD;
    for (int i = 0; i &lt; indexes.length; i++) {&#xD;
        Roi roi = (Roi) rois.get((String) listModel.getElementAt(indexes[i]));&#xD;
        if (!roi.isArea()) {&#xD;
            continue;&#xD;
        }&#xD;
        if (s1 == null) {&#xD;
            if (roi instanceof ShapeRoi) {&#xD;
                s1 = (ShapeRoi) roi.clone();&#xD;
            } else {&#xD;
                s1 = new ShapeRoi(roi);&#xD;
            }&#xD;
            if (s1 == null) {&#xD;
                return;&#xD;
            }&#xD;
        } else {&#xD;
            if (roi instanceof ShapeRoi) {&#xD;
                s2 = (ShapeRoi) roi.clone();&#xD;
            } else {&#xD;
                s2 = new ShapeRoi(roi);&#xD;
            }&#xD;
            if (s2 == null) {&#xD;
                continue;&#xD;
            }&#xD;
            s1.xor(s2);&#xD;
        }&#xD;
    }&#xD;
    if (s1 != null) {&#xD;
        imp.setRoi(s1);&#xD;
    }&#xD;
    if (record()) {&#xD;
        Recorder.record(&quot;roiManager&quot;, &quot;XOR&quot;);&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MTDigRUTEemIe6OhVnSywA" name="addParticles" specification="_MTDigBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    String err = IJ.runMacroFile(&quot;ij.jar:AddParticles&quot;, null);&#xD;
    if (err != null &amp;&amp; err.length() > 0) {&#xD;
        error(err);&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MTFXsBUTEemIe6OhVnSywA" name="sort" specification="_MTEwoBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    int n = rois.size();&#xD;
    if (n == 0) {&#xD;
        return;&#xD;
    }&#xD;
    String[] labels = new String[n];&#xD;
    int index = 0;&#xD;
    for (Enumeration en = rois.keys(); en.hasMoreElements(); ) {&#xD;
        labels[index++] = (String) en.nextElement();&#xD;
    }&#xD;
    listModel.clear();&#xD;
    StringSorter.sort(labels);&#xD;
    for (int i = 0; i &lt; labels.length; i++) {&#xD;
        listModel.addElement(labels[i]);&#xD;
    }&#xD;
    if (record()) {&#xD;
        Recorder.record(&quot;roiManager&quot;, &quot;Sort&quot;);&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MTGl0BUTEemIe6OhVnSywA" name="specify" specification="_MTF-wBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    try {&#xD;
        IJ.run(&quot;Specify...&quot;);&#xD;
    } catch (Exception e) {&#xD;
        return;&#xD;
    }&#xD;
    runCommand(&quot;add&quot;);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MTOhoBUTEemIe6OhVnSywA" name="removePositions" specification="_MTNTgBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    int[] indexes = getSelectedIndexes();&#xD;
    if (indexes.length == 0) {&#xD;
        indexes = getAllIndexes();&#xD;
    }&#xD;
    if (indexes.length == 0) {&#xD;
        return;&#xD;
    }&#xD;
    boolean removeChannels = position == CHANNEL;&#xD;
    boolean removeFrames = position == FRAME;&#xD;
    boolean removeSlices = !(removeChannels || removeFrames);&#xD;
    if (position == SHOW_DIALOG) {&#xD;
        ImagePlus imp = WindowManager.getCurrentImage();&#xD;
        if (imp != null &amp;&amp; !imp.isHyperStack()) {&#xD;
            channel = false;&#xD;
            slice = true;&#xD;
            frame = false;&#xD;
        }&#xD;
        Font font = new Font(&quot;SansSerif&quot;, Font.BOLD, 12);&#xD;
        GenericDialog gd = new GenericDialog(&quot;Remove&quot;);&#xD;
        gd.setInsets(5, 15, 0);&#xD;
        gd.addMessage(&quot;Remove positions for:      &quot;, font);&#xD;
        gd.setInsets(6, 25, 0);&#xD;
        gd.addCheckbox(&quot;Channels:&quot;, channel);&#xD;
        gd.setInsets(0, 25, 0);&#xD;
        gd.addCheckbox(&quot;Slices:&quot;, slice);&#xD;
        gd.setInsets(0, 25, 0);&#xD;
        gd.addCheckbox(&quot;Frames:&quot;, frame);&#xD;
        gd.showDialog();&#xD;
        if (gd.wasCanceled()) {&#xD;
            return;&#xD;
        }&#xD;
        removeChannels = gd.getNextBoolean();&#xD;
        removeSlices = gd.getNextBoolean();&#xD;
        removeFrames = gd.getNextBoolean();&#xD;
        channel = removeChannels;&#xD;
        slice = removeSlices;&#xD;
        frame = removeFrames;&#xD;
    }&#xD;
    if (!removeChannels &amp;&amp; !removeSlices &amp;&amp; !removeFrames) {&#xD;
        slice = true;&#xD;
        return;&#xD;
    }&#xD;
    for (int i = 0; i &lt; indexes.length; i++) {&#xD;
        int index = indexes[i];&#xD;
        String name = (String) listModel.getElementAt(index);&#xD;
        Roi roi = (Roi) rois.get(name);&#xD;
        int c = roi.getCPosition();&#xD;
        int z = roi.getZPosition();&#xD;
        int t = roi.getTPosition();&#xD;
        if (c > 0 || t > 0) {&#xD;
            if (removeChannels) {&#xD;
                c = 0;&#xD;
            }&#xD;
            if (removeSlices) {&#xD;
                z = 0;&#xD;
            }&#xD;
            if (removeFrames) {&#xD;
                t = 0;&#xD;
            }&#xD;
            roi.setPosition(c, z, t);&#xD;
            continue;&#xD;
        }&#xD;
        int n = getSliceNumber(name);&#xD;
        if (n == -1) {&#xD;
            continue;&#xD;
        }&#xD;
        String name2 = name.substring(5, name.length());&#xD;
        name2 = getUniqueName(name2);&#xD;
        rois.remove(name);&#xD;
        lanesinfo.remove(name);&#xD;
        roi.setName(name2);&#xD;
        roi.setPosition(0);&#xD;
        rois.put(name2, roi);&#xD;
        lanesinfo.put(name2, new LaneInfo());&#xD;
        listModel.setElementAt(name2, index);&#xD;
    }&#xD;
    if (record()) {&#xD;
        if (removeChannels) {&#xD;
            Recorder.record(&quot;roiManager&quot;, &quot;Remove Channel Info&quot;);&#xD;
        }&#xD;
        if (removeSlices) {&#xD;
            Recorder.record(&quot;roiManager&quot;, &quot;Remove Slice Info&quot;);&#xD;
        }&#xD;
        if (removeFrames) {&#xD;
            Recorder.record(&quot;roiManager&quot;, &quot;Remove Frame Info&quot;);&#xD;
        }&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MTPvwBUTEemIe6OhVnSywA" name="help" specification="_MTPIsBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    String macro = &quot;run('URL...', 'url=&quot; + IJ.URL + &quot;/docs/menus/analyze.html#manager');&quot;;&#xD;
    new MacroRunner(macro);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MTRk8BUTEemIe6OhVnSywA" name="labels" specification="_MTQ94BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    ImagePlus imp = WindowManager.getCurrentImage();&#xD;
    if (imp != null) {&#xD;
        showAllCheckbox.setState(true);&#xD;
        //            labelsCheckbox.setState(true);&#xD;
        showAll(LABELS);&#xD;
    }&#xD;
    IJ.doCommand(&quot;Labels...&quot;);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MTSzERUTEemIe6OhVnSywA" name="options" specification="_MTSzEBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    Color c = ImageCanvas.getShowAllColor();&#xD;
    GenericDialog gd = new GenericDialog(&quot;Options&quot;);&#xD;
    //gd.addPanel(makeButtonPanel(gd), GridBagConstraints.CENTER, new Insets(5, 0, 0, 0));&#xD;
    gd.addCheckbox(&quot;Associate \&quot;Show All\&quot; ROIs with slices&quot;, Prefs.showAllSliceOnly);&#xD;
    gd.addCheckbox(&quot;Restore ROIs centered&quot;, restoreCentered);&#xD;
    gd.addCheckbox(&quot;Use ROI names as labels&quot;, Prefs.useNamesAsLabels);&#xD;
    gd.showDialog();&#xD;
    if (gd.wasCanceled()) {&#xD;
        if (c != ImageCanvas.getShowAllColor()) {&#xD;
            ImageCanvas.setShowAllColor(c);&#xD;
        }&#xD;
        return;&#xD;
    }&#xD;
    Prefs.showAllSliceOnly = gd.getNextBoolean();&#xD;
    restoreCentered = gd.getNextBoolean();&#xD;
    Prefs.useNamesAsLabels = gd.getNextBoolean();&#xD;
    ImagePlus imp = WindowManager.getCurrentImage();&#xD;
    if (imp != null) {&#xD;
        Overlay overlay = imp.getOverlay();&#xD;
        if (overlay != null) {&#xD;
            overlay.drawNames(Prefs.useNamesAsLabels);&#xD;
        }&#xD;
        imp.draw();&#xD;
    }&#xD;
    if (record()) {&#xD;
        Recorder.record(&quot;roiManager&quot;, &quot;Associate&quot;, Prefs.showAllSliceOnly ? &quot;true&quot; : &quot;false&quot;);&#xD;
        Recorder.record(&quot;roiManager&quot;, &quot;Centered&quot;, restoreCentered ? &quot;true&quot; : &quot;false&quot;);&#xD;
        Recorder.record(&quot;roiManager&quot;, &quot;UseNames&quot;, Prefs.useNamesAsLabels ? &quot;true&quot; : &quot;false&quot;);&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MTWdcBUTEemIe6OhVnSywA" name="makeButtonPanel" specification="_MTUBMBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    Panel panel = new Panel();&#xD;
    //buttons.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 0));&#xD;
    colorButton = new Button(&quot;\&quot;Show All\&quot; Color...&quot;);&#xD;
    colorButton.addActionListener(this);&#xD;
    panel.add(colorButton);&#xD;
    return panel;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MTXrkBUTEemIe6OhVnSywA" name="setShowAllColor" specification="_MTXEgBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    ColorChooser cc = new ColorChooser(&quot;\&quot;Show All\&quot; Color&quot;, ImageCanvas.getShowAllColor(), false);&#xD;
    ImageCanvas.setShowAllColor(cc.getColor());&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MTY5sBUTEemIe6OhVnSywA" name="split" specification="_MTYSoBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    ImagePlus imp = getImage();&#xD;
    if (imp == null) {&#xD;
        return;&#xD;
    }&#xD;
    Roi roi = imp.getRoi();&#xD;
    if (roi == null || roi.getType() != Roi.COMPOSITE) {&#xD;
        error(&quot;Image with composite selection required&quot;);&#xD;
        return;&#xD;
    }&#xD;
    boolean record = Recorder.record;&#xD;
    Recorder.record = false;&#xD;
    Roi[] rois = ((ShapeRoi) roi).getRois();&#xD;
    for (int i = 0; i &lt; rois.length; i++) {&#xD;
        imp.setRoi(rois[i]);&#xD;
        addRoi(false);&#xD;
    }&#xD;
    Recorder.record = record;&#xD;
    if (record()) {&#xD;
        Recorder.record(&quot;roiManager&quot;, &quot;Split&quot;);&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MTau4BUTEemIe6OhVnSywA" name="showAll" specification="_MTZgwBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    ImagePlus imp = WindowManager.getCurrentImage();&#xD;
    if (imp == null) {&#xD;
        return;&#xD;
    }&#xD;
    boolean showAll = mode == SHOW_ALL;&#xD;
    if (showAll) {&#xD;
        imageID = imp.getID();&#xD;
    }&#xD;
    if (mode == LABELS) {&#xD;
        showAll = true;&#xD;
        if (record()) {&#xD;
            Recorder.record(&quot;roiManager&quot;, &quot;Show All with labels&quot;);&#xD;
        }&#xD;
    } else if (mode == NO_LABELS) {&#xD;
        showAll = true;&#xD;
        if (record()) {&#xD;
            Recorder.record(&quot;roiManager&quot;, &quot;Show All without labels&quot;);&#xD;
        }&#xD;
    }&#xD;
    if (showAll) {&#xD;
        imp.deleteRoi();&#xD;
    }&#xD;
    Roi[] rois = getRoisAsArray();&#xD;
    if (mode == SHOW_NONE) {&#xD;
        removeOverlay(imp);&#xD;
        imageID = 0;&#xD;
    } else if (rois.length > 0) {&#xD;
        Overlay overlay = newOverlay();&#xD;
        for (int i = 0; i &lt; rois.length; i++) {&#xD;
            overlay.add(rois[i]);&#xD;
        }&#xD;
        setOverlay(imp, overlay);&#xD;
    }&#xD;
    if (record()) {&#xD;
        Recorder.record(&quot;roiManager&quot;, showAll ? &quot;Show All&quot; : &quot;Show None&quot;);&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MTb9ARUTEemIe6OhVnSywA" name="updateShowAll" specification="_MTb9ABUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    ImagePlus imp = WindowManager.getCurrentImage();&#xD;
    if (imp == null) {&#xD;
        return;&#xD;
    }&#xD;
    if (showAllCheckbox.getState()) {&#xD;
        Roi[] rois = getRoisAsArray();&#xD;
        if (rois.length > 0) {&#xD;
            Overlay overlay = newOverlay();&#xD;
            for (int i = 0; i &lt; rois.length; i++) {&#xD;
                overlay.add(rois[i]);&#xD;
            }&#xD;
            setOverlay(imp, overlay);&#xD;
        } else {&#xD;
            removeOverlay(imp);&#xD;
        }&#xD;
    } else {&#xD;
        removeOverlay(imp);&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MTeZQBUTEemIe6OhVnSywA" name="getAllIndexes" specification="_MTdLIBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    int count = getCount();&#xD;
    int[] indexes = new int[count];&#xD;
    for (int i = 0; i &lt; count; i++) {&#xD;
        indexes[i] = i;&#xD;
    }&#xD;
    return indexes;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MTgOcBUTEemIe6OhVnSywA" name="getImage" specification="_MTfAUBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    ImagePlus imp = WindowManager.getCurrentImage();&#xD;
    if (imp == null) {&#xD;
        error(&quot;There are no images open.&quot;);&#xD;
        return null;&#xD;
    } else {&#xD;
        return imp;&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MTiqsRUTEemIe6OhVnSywA" name="error" specification="_MThckBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    JOptionPane.showMessageDialog(this, msg, &quot;&quot;, JOptionPane.INFORMATION_MESSAGE);&#xD;
    Macro.abort();&#xD;
    return false;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MTluABUTEemIe6OhVnSywA" name="processWindowEvent" specification="_MTkf4BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    super.processWindowEvent(e);&#xD;
    if (e.getID() == WindowEvent.WINDOW_CLOSING) {&#xD;
        instance = null;&#xD;
    }&#xD;
    if (!IJ.isMacro()) {&#xD;
        ignoreInterrupts = false;&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MTnjMRUTEemIe6OhVnSywA" name="getInstance" specification="_MTmVEBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    return (LaneManager) instance;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MTpYYRUTEemIe6OhVnSywA" name="getInstance2" specification="_MToKQBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    LaneManager rm = getInstance();&#xD;
    return rm;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MTr0oBUTEemIe6OhVnSywA" name="getROIs" specification="_MTqmgBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    return rois;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MTtp0BUTEemIe6OhVnSywA" name="getList" specification="_MTsbsBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    List awtList = new List();&#xD;
    for (int i = 0; i &lt; getCount(); i++) {&#xD;
        awtList.add((String) listModel.getElementAt(i));&#xD;
    }&#xD;
    int index = getSelectedIndex();&#xD;
    if (index >= 0) {&#xD;
        awtList.select(index);&#xD;
    }&#xD;
    return awtList;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MTwGEBUTEemIe6OhVnSywA" name="getCount" specification="_MTu38BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    return listModel.getSize();&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MTx7QRUTEemIe6OhVnSywA" name="getCountStd" specification="_MTxUMBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    return stds.size();&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MT0-kBUTEemIe6OhVnSywA" name="getRoiIndex" specification="_MTzJYBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    int n = getCount();&#xD;
    for (int i = 0; i &lt; n; i++) {&#xD;
        String label = (String) listModel.getElementAt(i);&#xD;
        Roi roi2 = (Roi) rois.get(label);&#xD;
        if (roi == roi2) {&#xD;
            return i;&#xD;
        }&#xD;
    }&#xD;
    return -1;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MT4B4BUTEemIe6OhVnSywA" name="getRoiIndexPos" specification="_MT2MsBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    int n = getCount();&#xD;
    for (int i = 0; i &lt; n; i++) {&#xD;
        String label = (String) listModel.getElementAt(i);&#xD;
        Roi roi2 = (Roi) rois.get(label);&#xD;
        if (roi2.contains(x, y)) {&#xD;
            return i;&#xD;
        }&#xD;
    }&#xD;
    return -1;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MT53EBUTEemIe6OhVnSywA" name="getSelectedIndex" specification="_MT4o8BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    return list.getSelectedIndex();&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MT8TUBUTEemIe6OhVnSywA" name="getRoi" specification="_MT6eIBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    if (index &lt; 0 || index >= getCount()) {&#xD;
        return null;&#xD;
    }&#xD;
    String label = (String) listModel.getElementAt(index);&#xD;
    return (Roi) rois.get(label);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MT_WoBUTEemIe6OhVnSywA" name="getRoisAsArray" specification="_MT9hcBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    int n = getCount();&#xD;
    Roi[] array = new Roi[n];&#xD;
    for (int i = 0; i &lt; n; i++) {&#xD;
        String label = (String) listModel.getElementAt(i);&#xD;
        array[i] = (Roi) rois.get(label);&#xD;
    }&#xD;
    return array;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MUBy4RUTEemIe6OhVnSywA" name="getStdAsArray" specification="_MT_9sBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    int n = getCountStd();&#xD;
    Roi[] array = new Roi[n];&#xD;
    for (int i = 0; i &lt; n; i++) {&#xD;
        String label = stdslabels.get(i);&#xD;
        array[i] = (Roi) stds.get(label);&#xD;
    }&#xD;
    return array;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MUE2MBUTEemIe6OhVnSywA" name="getSelectedRoisAsArray" specification="_MUDBABUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    int[] indexes = getSelectedIndexes();&#xD;
    if (indexes.length == 0) {&#xD;
        indexes = getAllIndexes();&#xD;
    }&#xD;
    int n = indexes.length;&#xD;
    Roi[] array = new Roi[n];&#xD;
    for (int i = 0; i &lt; n; i++) {&#xD;
        String label = (String) listModel.getElementAt(indexes[i]);&#xD;
        array[i] = (Roi) rois.get(label);&#xD;
    }&#xD;
    return array;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MUH5gBUTEemIe6OhVnSywA" name="getName" specification="_MUGEUBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    if (index >= 0 &amp;&amp; index &lt; getCount()) {&#xD;
        return (String) listModel.getElementAt(index);&#xD;
    } else {&#xD;
        return null;&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MUKVwBUTEemIe6OhVnSywA" name="getName" specification="_MUJHoBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    int i = (int) Tools.parseDouble(index, -1);&#xD;
    LaneManager instance = getInstance2();&#xD;
    if (instance != null &amp;&amp; i >= 0 &amp;&amp; i &lt; instance.getCount()) {&#xD;
        return (String) instance.listModel.getElementAt(i);&#xD;
    } else {&#xD;
        return &quot;null&quot;;&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MUNZEBUTEemIe6OhVnSywA" name="runCommand" specification="_MULj4BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    cmd = cmd.toLowerCase();&#xD;
    macro = true;&#xD;
    boolean ok = true;&#xD;
    if (cmd.equals(&quot;add&quot;)) {&#xD;
        boolean shift = IJ.shiftKeyDown();&#xD;
        boolean alt = IJ.altKeyDown();&#xD;
        if (Interpreter.isBatchMode()) {&#xD;
            shift = false;&#xD;
            alt = false;&#xD;
        }&#xD;
        //setRoiPosition();&#xD;
        add(shift, alt);&#xD;
    } else if (cmd.equals(&quot;add &amp; draw&quot;)) {&#xD;
        addAndDraw(false);&#xD;
    } else if (cmd.equals(&quot;update&quot;)) {&#xD;
        update(true);&#xD;
    } else if (cmd.equals(&quot;update2&quot;)) {&#xD;
        update(false);&#xD;
    } else if (cmd.equals(&quot;delete&quot;)) {&#xD;
        delete(false);&#xD;
    } else if (cmd.equals(&quot;measure&quot;)) {&#xD;
        measure(COMMAND);&#xD;
    } else if (cmd.equals(&quot;draw&quot;)) {&#xD;
        drawOrFill(DRAW);&#xD;
    } else if (cmd.equals(&quot;fill&quot;)) {&#xD;
        drawOrFill(FILL);&#xD;
    } else if (cmd.equals(&quot;label&quot;)) {&#xD;
        drawOrFill(LABEL);&#xD;
    } else if (cmd.equals(&quot;and&quot;)) {&#xD;
        and();&#xD;
    } else if (cmd.equals(&quot;or&quot;) || cmd.equals(&quot;combine&quot;)) {&#xD;
        combine();&#xD;
    } else if (cmd.equals(&quot;xor&quot;)) {&#xD;
        xor();&#xD;
    } else if (cmd.equals(&quot;split&quot;)) {&#xD;
        split();&#xD;
    } else if (cmd.equals(&quot;sort&quot;)) {&#xD;
        sort();&#xD;
    } else if (cmd.startsWith(&quot;multi measure&quot;)) {&#xD;
        multiMeasure(cmd);&#xD;
    } else if (cmd.equals(&quot;multi plot&quot;)) {&#xD;
        multiPlot();&#xD;
    } else if (cmd.equals(&quot;show all&quot;)) {&#xD;
        if (WindowManager.getCurrentImage() != null) {&#xD;
            showAll(SHOW_ALL);&#xD;
            showAllCheckbox.setState(true);&#xD;
        }&#xD;
    } else if (cmd.equals(&quot;show none&quot;)) {&#xD;
        if (WindowManager.getCurrentImage() != null) {&#xD;
            showAll(SHOW_NONE);&#xD;
            showAllCheckbox.setState(false);&#xD;
        }&#xD;
    } else if (cmd.equals(&quot;show all with labels&quot;)) {&#xD;
        //            labelsCheckbox.setState(true);&#xD;
        showAll(LABELS);&#xD;
        if (Interpreter.isBatchMode()) {&#xD;
            IJ.wait(250);&#xD;
        }&#xD;
    } else if (cmd.equals(&quot;show all without labels&quot;)) {&#xD;
        //            labelsCheckbox.setState(false);&#xD;
        showAll(NO_LABELS);&#xD;
        if (Interpreter.isBatchMode()) {&#xD;
            IJ.wait(250);&#xD;
        }&#xD;
    } else if (cmd.equals(&quot;deselect&quot;) || cmd.indexOf(&quot;all&quot;) != -1) {&#xD;
        if (IJ.isMacOSX()) {&#xD;
            ignoreInterrupts = true;&#xD;
        }&#xD;
        select(-1);&#xD;
        IJ.wait(50);&#xD;
    } else if (cmd.equals(&quot;reset&quot;)) {&#xD;
        if (IJ.isMacOSX() &amp;&amp; IJ.isMacro()) {&#xD;
            ignoreInterrupts = true;&#xD;
        }&#xD;
        listModel.clear();&#xD;
        rois.clear();&#xD;
        updateShowAll();&#xD;
    } else if (cmd.equals(&quot;debug&quot;)) {&#xD;
    //IJ.log(&quot;Debug: &quot;+debugCount);&#xD;
    //for (int i=0; i&lt;debugCount; i++)&#xD;
    //	IJ.log(debug[i]);&#xD;
    } else if (cmd.equals(&quot;enable interrupts&quot;)) {&#xD;
        ignoreInterrupts = false;&#xD;
    } else if (cmd.equals(&quot;remove channel info&quot;)) {&#xD;
        removePositions(CHANNEL);&#xD;
    } else if (cmd.equals(&quot;remove slice info&quot;)) {&#xD;
        removePositions(SLICE);&#xD;
    } else if (cmd.equals(&quot;remove frame info&quot;)) {&#xD;
        removePositions(FRAME);&#xD;
    } else if (cmd.equals(&quot;interpolate rois&quot;)) {&#xD;
        interpolateRois();&#xD;
    } else {&#xD;
        ok = false;&#xD;
    }&#xD;
    macro = false;&#xD;
    return ok;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MURDcBUTEemIe6OhVnSywA" name="runCommand" specification="_MUOnMBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    cmd = cmd.toLowerCase();&#xD;
    macro = true;&#xD;
    if (cmd.equals(&quot;open&quot;)) {&#xD;
        open(name);&#xD;
        macro = false;&#xD;
        return true;&#xD;
    } else if (cmd.equals(&quot;save&quot;)) {&#xD;
        save(name, false);&#xD;
    } else if (cmd.equals(&quot;save selected&quot;)) {&#xD;
        save(name, true);&#xD;
    } else if (cmd.equals(&quot;rename&quot;)) {&#xD;
        rename(name);&#xD;
        macro = false;&#xD;
        return true;&#xD;
    } else if (cmd.equals(&quot;set color&quot;)) {&#xD;
        Color color = Colors.decode(name, Color.cyan);&#xD;
        setProperties(color, -1, null);&#xD;
        macro = false;&#xD;
        return true;&#xD;
    } else if (cmd.equals(&quot;set fill color&quot;)) {&#xD;
        Color fillColor = Colors.decode(name, Color.cyan);&#xD;
        setProperties(null, -1, fillColor);&#xD;
        macro = false;&#xD;
        return true;&#xD;
    } else if (cmd.equals(&quot;set line width&quot;)) {&#xD;
        int lineWidth = (int) Tools.parseDouble(name, 0);&#xD;
        if (lineWidth >= 0) {&#xD;
            setProperties(null, lineWidth, null);&#xD;
        }&#xD;
        macro = false;&#xD;
        return true;&#xD;
    } else if (cmd.equals(&quot;associate&quot;)) {&#xD;
        Prefs.showAllSliceOnly = name.equals(&quot;true&quot;) ? true : false;&#xD;
        macro = false;&#xD;
        return true;&#xD;
    } else if (cmd.equals(&quot;centered&quot;)) {&#xD;
        restoreCentered = name.equals(&quot;true&quot;) ? true : false;&#xD;
        macro = false;&#xD;
        return true;&#xD;
    } else if (cmd.equals(&quot;usenames&quot;)) {&#xD;
        Prefs.useNamesAsLabels = name.equals(&quot;true&quot;) ? true : false;&#xD;
        macro = false;&#xD;
        /*            if (labelsCheckbox.getState()) {
             ImagePlus imp = WindowManager.getCurrentImage();
             if (imp != null) {
             imp.draw();
             }
             }*/&#xD;
        return true;&#xD;
    }&#xD;
    return false;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MUUGwBUTEemIe6OhVnSywA" name="save" specification="_MUSRkBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    if (!name.endsWith(&quot;.zip&quot;) &amp;&amp; !name.equals(&quot;&quot;)) {&#xD;
        return error(&quot;Name must end with '.zip'&quot;);&#xD;
    }&#xD;
    if (getCount() == 0) {&#xD;
        return error(&quot;The selection list is empty.&quot;);&#xD;
    }&#xD;
    int[] indexes = null;&#xD;
    if (saveSelected) {&#xD;
        indexes = getSelectedIndexes();&#xD;
        if (indexes.length == 0) {&#xD;
            indexes = getAllIndexes();&#xD;
        }&#xD;
    } else {&#xD;
        indexes = getAllIndexes();&#xD;
    }&#xD;
    boolean ok = false;&#xD;
    if (name.equals(&quot;&quot;)) {&#xD;
        ok = saveMultiple(indexes, null);&#xD;
    } else {&#xD;
        ok = saveMultiple(indexes, name);&#xD;
    }&#xD;
    macro = false;&#xD;
    return ok;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MUYYMBUTEemIe6OhVnSywA" name="runCommand" specification="_MUVU4BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    //setRoiPosition();&#xD;
    if (hexColor == null &amp;&amp; lineWidth == 1.0 &amp;&amp; (IJ.altKeyDown() &amp;&amp; !Interpreter.isBatchMode())) {&#xD;
        addRoi(true);&#xD;
    } else {&#xD;
        Color color = hexColor != null ? Colors.decode(hexColor, Color.cyan) : null;&#xD;
        addRoi(null, false, color, (int) Math.round(lineWidth));&#xD;
    }&#xD;
    return true;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MUa0cBUTEemIe6OhVnSywA" name="setRoiPosition" specification="_MUY_QBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    if (imp == null || roi == null) {&#xD;
        return;&#xD;
    }&#xD;
    if (imp.isHyperStack()) {&#xD;
        roi.setPosition(imp.getChannel(), imp.getSlice(), imp.getFrame());&#xD;
    } else if (imp.getStackSize() > 1) {&#xD;
        roi.setPosition(imp.getCurrentSlice());&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MUcpoBUTEemIe6OhVnSywA" name="select" specification="_MUbbgBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    select(null, index);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MUee0BUTEemIe6OhVnSywA" name="select" specification="_MUcpoRUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    selectedIndexes = null;&#xD;
    int n = getCount();&#xD;
    if (index &lt; 0) {&#xD;
        for (int i = 0; i &lt; n; i++) {&#xD;
            list.clearSelection();&#xD;
        }&#xD;
        if (record()) {&#xD;
            Recorder.record(&quot;laneManager&quot;, &quot;Deselect&quot;);&#xD;
        }&#xD;
        return;&#xD;
    }&#xD;
    if (index >= n) {&#xD;
        return;&#xD;
    }&#xD;
    boolean mm = list.getSelectionMode() == ListSelectionModel.MULTIPLE_INTERVAL_SELECTION;&#xD;
    if (mm) {&#xD;
        list.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);&#xD;
    }&#xD;
    int delay = 1;&#xD;
    long start = System.currentTimeMillis();&#xD;
    while (true) {&#xD;
        if (list.isSelectedIndex(index)) {&#xD;
            break;&#xD;
        }&#xD;
        list.clearSelection();&#xD;
        list.setSelectedIndex(index);&#xD;
    }&#xD;
    if (imp == null) {&#xD;
        imp = WindowManager.getCurrentImage();&#xD;
    }&#xD;
    if (imp != null) {&#xD;
        restore(imp, index, true);&#xD;
    }&#xD;
    if (mm) {&#xD;
        list.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MUhiIBUTEemIe6OhVnSywA" name="select" specification="_MUfF4BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    if (!(shiftKeyDown || altKeyDown)) {&#xD;
        select(index);&#xD;
    }&#xD;
    ImagePlus imp = IJ.getImage();&#xD;
    if (imp == null) {&#xD;
        return;&#xD;
    }&#xD;
    Roi previousRoi = imp.getRoi();&#xD;
    if (previousRoi == null) {&#xD;
        select(index);&#xD;
        return;&#xD;
    }&#xD;
    Roi.previousRoi = (Roi) previousRoi.clone();&#xD;
    String label = (String) listModel.getElementAt(index);&#xD;
    Roi roi = (Roi) rois.get(label);&#xD;
    if (roi != null) {&#xD;
        roi.setImage(imp);&#xD;
        roi.update(shiftKeyDown, altKeyDown);&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MUklcBUTEemIe6OhVnSywA" name="setEditMode" specification="_MUiJMBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    showAllCheckbox.setState(editMode);&#xD;
    //        labelsCheckbox.setState(editMode);&#xD;
    showAll(editMode ? LABELS : SHOW_NONE);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MUlzkBUTEemIe6OhVnSywA" name="close" specification="_MUlMgBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.setVisible(false);&#xD;
    WindowManager.removeWindow(this);&#xD;
    if (getCount() != 0) {&#xD;
        ImagePlus imp = WindowManager.getCurrentImage();&#xD;
        Roi[] rois2 = getRoisAsArray();&#xD;
        m.setLanes(rois2);&#xD;
        m.finallanes = new Lane[getCount()];&#xD;
        Rectangle r;&#xD;
        Roi ri;&#xD;
        IJ.run(imp, &quot;8-bit&quot;, &quot;&quot;);&#xD;
        for (int i = 0; i &lt; getCount(); i++) {&#xD;
            ri = getRoi(i);&#xD;
            r = ri.getBounds();&#xD;
            r = new Rectangle(r.x, 0, r.width, imp.getHeight());&#xD;
            imp.deleteRoi();&#xD;
            ImagePlus impr = imp.duplicate();&#xD;
            for (int k = 0; k &lt; impr.getWidth(); k++) {&#xD;
                for (int j = 0; j &lt; impr.getHeight(); j++) {&#xD;
                    if (!ri.contains(k, j)) {&#xD;
                        impr.getProcessor().putPixel(k, j, 0);&#xD;
                    }&#xD;
                }&#xD;
            }&#xD;
            impr.updateAndDraw();&#xD;
            impr.setRoi(ri);&#xD;
            impr = impr.duplicate();&#xD;
            IJ.run(impr, &quot;RGB Color&quot;, &quot;&quot;);&#xD;
            String label = (String) listModel.getElementAt(i);&#xD;
            LaneInfo li = (LaneInfo) lanesinfo.get(label);&#xD;
            if (stdslabels.contains(label)) {&#xD;
                m.finallanes[i] = new Lane(impr, ri.getName(), ri, true, li.getGenus(), li.getSpecies(), li.getCountry(), li.getMLST(), li.getStrainNumber());&#xD;
            } else {&#xD;
                m.finallanes[i] = new Lane(impr, ri.getName(), ri, false, li.getGenus(), li.getSpecies(), li.getCountry(), li.getMLST(), li.getStrainNumber());&#xD;
            }&#xD;
            Prefs.verticalProfile = true;&#xD;
            if ((!bgCheckbox.getState() &amp;&amp; !imp.isInvertedLut()) || imp.isInvertedLut()) {&#xD;
                impr.getProcessor().invert();&#xD;
            }&#xD;
            ImagePlus impr2 = impr.duplicate();&#xD;
            IJ.run(impr2, &quot;Rotate 90 Degrees Left&quot;, &quot;&quot;);&#xD;
            IJ.run(impr2, &quot;Select All&quot;, &quot;&quot;);&#xD;
            ProfilePlot pp = new ProfilePlot(impr2);&#xD;
            double[] profile = pp.getProfile();&#xD;
            if ((!bgCheckbox.getState() &amp;&amp; !imp.isInvertedLut()) || imp.isInvertedLut()) {&#xD;
                impr2.getProcessor().invert();&#xD;
            }&#xD;
            m.finallanes[i].setProfile(profile);&#xD;
        }&#xD;
        m.sortfinallanes();&#xD;
        m.setLanesinfo(lanesinfo);&#xD;
        imp.deleteRoi();&#xD;
        //moveRoisToOverlay(imp);&#xD;
        m.makebuttonsavailable();&#xD;
        removeOverlay(imp);&#xD;
    }&#xD;
    if (a != null) {&#xD;
        removeOverlay(WindowManager.getCurrentImage());&#xD;
        try {&#xD;
            a.addreferencelanes();&#xD;
        } catch (Exception ex) {&#xD;
            Logger.getLogger(LaneManager.class.getName()).log(Level.SEVERE, null, ex);&#xD;
        }&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MUo24BUTEemIe6OhVnSywA" name="setAssistant" specification="_MUnowBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.a = a;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MUrTIBUTEemIe6OhVnSywA" name="moveRoisToOverlay" specification="_MUqFABUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    if (imp == null) {&#xD;
        return;&#xD;
    }&#xD;
    Roi[] rois = getRoisAsArray();&#xD;
    int n = rois.length;&#xD;
    Overlay overlay = imp.getOverlay();&#xD;
    if (overlay == null) {&#xD;
        overlay = newOverlay();&#xD;
    }&#xD;
    for (int i = 0; i &lt; n; i++) {&#xD;
        Roi roi = (Roi) rois[i].clone();&#xD;
        if (!Prefs.showAllSliceOnly) {&#xD;
            roi.setPosition(0);&#xD;
        }&#xD;
        if (roi.getStrokeWidth() == 1) {&#xD;
            roi.setStrokeWidth(0);&#xD;
        }&#xD;
        overlay.add(roi);&#xD;
    }&#xD;
    imp.setOverlay(overlay);&#xD;
    if (imp.getCanvas() != null) {&#xD;
        setOverlay(imp, null);&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MUuWcBUTEemIe6OhVnSywA" name="mousePressed" specification="_MUshQBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    int x = e.getX(), y = e.getY();&#xD;
    if (e.isPopupTrigger() || e.isMetaDown()) {&#xD;
        pm.show(e.getComponent(), x, y);&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MUwysBUTEemIe6OhVnSywA" name="mouseWheelMoved" specification="_MUvkkBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    synchronized (this) {&#xD;
        int index = list.getSelectedIndex();&#xD;
        int rot = event.getWheelRotation();&#xD;
        if (rot &lt; -1) {&#xD;
            rot = -1;&#xD;
        }&#xD;
        if (rot > 1) {&#xD;
            rot = 1;&#xD;
        }&#xD;
        index += rot;&#xD;
        if (index &lt; 0) {&#xD;
            index = 0;&#xD;
        }&#xD;
        if (index >= getCount()) {&#xD;
            index = getCount();&#xD;
        }&#xD;
        //IJ.log(index+&quot;  &quot;+rot);&#xD;
        select(index);&#xD;
        if (IJ.isWindows()) {&#xD;
            list.requestFocusInWindow();&#xD;
        }&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MUyn4BUTEemIe6OhVnSywA" name="setSelectedIndexes" specification="_MUwysRUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    int count = getCount();&#xD;
    if (count == 0) {&#xD;
        return;&#xD;
    }&#xD;
    for (int i = 0; i &lt; indexes.length; i++) {&#xD;
        if (indexes[i] &lt; 0) {&#xD;
            indexes[i] = 0;&#xD;
        }&#xD;
        if (indexes[i] >= count) {&#xD;
            indexes[i] = count - 1;&#xD;
        }&#xD;
    }&#xD;
    selectedIndexes = indexes;&#xD;
    list.setSelectedIndices(indexes);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MU1EIBUTEemIe6OhVnSywA" name="getSelectedIndexes" specification="_MUzO8BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    if (selectedIndexes != null) {&#xD;
        int[] indexes = selectedIndexes;&#xD;
        selectedIndexes = null;&#xD;
        return indexes;&#xD;
    } else {&#xD;
        return list.getSelectedIndices();&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MU4HcBUTEemIe6OhVnSywA" name="newOverlay" specification="_MU1rMBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    Overlay overlay = OverlayLabels.createOverlay();&#xD;
    //        overlay.drawLabels(labelsCheckbox.getState());&#xD;
    if (overlay.getLabelFont() == null &amp;&amp; overlay.getLabelColor() == null) {&#xD;
        overlay.setLabelColor(Color.white);&#xD;
        overlay.drawBackgrounds(true);&#xD;
    }&#xD;
    overlay.drawNames(Prefs.useNamesAsLabels);&#xD;
    return overlay;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MU7KwBUTEemIe6OhVnSywA" name="removeOverlay" specification="_MU58oBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    if (imp != null &amp;&amp; imp.getCanvas() != null) {&#xD;
        setOverlay(imp, null);&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MU-OEBUTEemIe6OhVnSywA" name="setOverlay" specification="_MU8Y4BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    if (imp == null) {&#xD;
        return;&#xD;
    }&#xD;
    ImageCanvas ic = imp.getCanvas();&#xD;
    if (ic == null) {&#xD;
        imp.setOverlay(overlay);&#xD;
        return;&#xD;
    }&#xD;
    ic.setShowAllList(overlay);&#xD;
    imp.draw();&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MVADQBUTEemIe6OhVnSywA" name="record" specification="_MU_cMBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    return Recorder.record &amp;&amp; !IJ.isMacro();&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MVCfgBUTEemIe6OhVnSywA" name="mouseReleased" specification="_MVBRYBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MVE7wBUTEemIe6OhVnSywA" name="mouseClicked" specification="_MVDtoBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MVHYABUTEemIe6OhVnSywA" name="mouseEntered" specification="_MVGJ4BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MVJNMRUTEemIe6OhVnSywA" name="mouseExited" specification="_MVH_EBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MVLpcBUTEemIe6OhVnSywA" name="valueChanged" specification="_MVKbUBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    if (e.getValueIsAdjusting()) {&#xD;
        return;&#xD;
    }&#xD;
    if (getCount() == 0) {&#xD;
        if (record()) {&#xD;
            Recorder.record(&quot;roiManager&quot;, &quot;Deselect&quot;);&#xD;
        }&#xD;
        return;&#xD;
    }&#xD;
    int[] selected = list.getSelectedIndices();&#xD;
    if (selected.length == 0) {&#xD;
        return;&#xD;
    }&#xD;
    if (WindowManager.getCurrentImage() != null) {&#xD;
        if (selected.length == 1) {&#xD;
            restore(getImage(), selected[0], true);&#xD;
        }&#xD;
        if (record()) {&#xD;
            String arg = Arrays.toString(selected);&#xD;
            if (!arg.startsWith(&quot;[&quot;) || !arg.endsWith(&quot;]&quot;)) {&#xD;
                return;&#xD;
            }&#xD;
            arg = arg.substring(1, arg.length() - 1);&#xD;
            arg = arg.replace(&quot; &quot;, &quot;&quot;);&#xD;
            if (Recorder.scriptMode()) {&#xD;
                if (selected.length == 1) {&#xD;
                    Recorder.recordCall(&quot;rm.select(&quot; + arg + &quot;);&quot;);&#xD;
                } else {&#xD;
                    Recorder.recordCall(&quot;rm.setSelectedIndexes([&quot; + arg + &quot;]);&quot;);&#xD;
                }&#xD;
            } else {&#xD;
                if (selected.length == 1) {&#xD;
                    Recorder.recordString(&quot;roiManager(\&quot;Select\&quot;, &quot; + arg + &quot;);\n&quot;);&#xD;
                } else {&#xD;
                    Recorder.recordString(&quot;roiManager(\&quot;Select\&quot;, newArray(&quot; + arg + &quot;));\n&quot;);&#xD;
                }&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MVOFsBUTEemIe6OhVnSywA" name="windowActivated" specification="_MVM3kBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    super.windowActivated(e);&#xD;
    ImagePlus imp = WindowManager.getCurrentImage();&#xD;
    if (imp != null) {&#xD;
        if (imageID != 0 &amp;&amp; imp.getID() != imageID) {&#xD;
            showAll(SHOW_NONE);&#xD;
            showAllCheckbox.setState(false);&#xD;
        }&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MVP64BUTEemIe6OhVnSywA" name="fix_standard" specification="_MVOFsRUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    int count = getCount();&#xD;
    if (count == 0) {&#xD;
        return error(&quot;First, you need to detect the lanes.&quot;);&#xD;
    }&#xD;
    int index[] = getSelectedIndexes();&#xD;
    if (index.length == 0) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;Select a lane to fix it as standard.&quot;, &quot;Fix standard&quot;, JOptionPane.INFORMATION_MESSAGE);&#xD;
        return false;&#xD;
    }&#xD;
    String res = &quot;&quot;;&#xD;
    for (int j = 0; j &lt; index.length; j++) {&#xD;
        String label = (String) listModel.getElementAt(index[j]);&#xD;
        if (stdslabels.contains(label)) {&#xD;
            return error(&quot;You have already included &quot; + label + &quot; as reference lane.&quot;);&#xD;
        } else {&#xD;
            stdslabels.add(label);&#xD;
            if (defaultColor == Color.RED) {&#xD;
                ((Roi) rois.get(label)).setStrokeColor(Color.BLUE);&#xD;
            } else {&#xD;
                ((Roi) rois.get(label)).setStrokeColor(Color.RED);&#xD;
            }&#xD;
            IJ.getImage().setRoi((Roi) null);&#xD;
            stds.put(label, rois.get(label));&#xD;
            res = res + &quot; &quot; + label + &quot;,&quot;;&#xD;
        }&#xD;
    }&#xD;
    if (record()) {&#xD;
        Recorder.record(&quot;LaneManager&quot;, &quot;Fix Standard&quot;);&#xD;
    }&#xD;
    return true;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MVTlQBUTEemIe6OhVnSywA" name="fix_standards" specification="_MVRJABUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    String label;&#xD;
    for (int i = 0; i &lt; newrois.length; i++) {&#xD;
        label = newrois[i].getName();&#xD;
        ((Roi) rois.get(label)).setStrokeColor(Color.RED);&#xD;
        stdslabels.add(label);&#xD;
        stds.put(label, newrois[i]);&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MVWBgBUTEemIe6OhVnSywA" name="change_colour" specification="_MVUzYBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    Roi[] rois0 = getRoisAsArray();&#xD;
    defaultColor = c;&#xD;
    for (int j = 0; j &lt; rois0.length; j++) {&#xD;
        String label = (String) listModel.getElementAt(j);&#xD;
        if (stdslabels.contains(label)) {&#xD;
            if (c == Color.RED) {&#xD;
                rois0[j].setStrokeColor(Color.BLUE);&#xD;
            } else {&#xD;
                rois0[j].setStrokeColor(Color.RED);&#xD;
            }&#xD;
        } else {&#xD;
            rois0[j].setStrokeColor(c);&#xD;
        }&#xD;
    }&#xD;
    updateShowAll();&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MVXPoBUTEemIe6OhVnSywA" name="auto_detect" specification="_MVWokBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    int count = getCount();&#xD;
    if (0 &lt; count) {&#xD;
        String msg = &quot;This will remove the previous selection&quot;;&#xD;
        GenericDialog d = new GenericDialog(&quot;Confirmation&quot;, this);&#xD;
        d.addMessage(msg);&#xD;
        d.showDialog();&#xD;
        if (d.wasCanceled()) {&#xD;
            return;&#xD;
        }&#xD;
        delete_without_asking(true);&#xD;
        number_of_lanes = 1;&#xD;
    }&#xD;
    ImagePlus imp = WindowManager.getCurrentImage();&#xD;
    LaneSegmentation ls = new LaneSegmentation(imp, this, bgCheckbox.getState());&#xD;
    runCommand(&quot;show all with labels&quot;);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MVZE0BUTEemIe6OhVnSywA" name="delete_standard" specification="_MVX2sBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    int count = getCount();&#xD;
    int count2 = getCountStd();&#xD;
    if (count == 0) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;Select a lane to delete it as standard.&quot;, &quot;Delete standard&quot;, JOptionPane.INFORMATION_MESSAGE);&#xD;
        return false;&#xD;
    }&#xD;
    if (count2 == 0) {&#xD;
        return error(&quot;You have not added any reference lane yet.&quot;);&#xD;
    }&#xD;
    int index[] = getSelectedIndexes();&#xD;
    if (index.length == 0) {&#xD;
        return error(&quot;Select a lane.&quot;);&#xD;
    }&#xD;
    for (int j = 0; j &lt; index.length; j++) {&#xD;
        String label = (String) listModel.getElementAt(index[j]);&#xD;
        if (stdslabels.contains(label)) {&#xD;
            stdslabels.remove(label);&#xD;
            stds.remove(label);&#xD;
            ((Roi) rois.get(label)).setStrokeColor(defaultColor);&#xD;
            IJ.getImage().setRoi((Roi) null);&#xD;
        //                error(&quot;The lane &quot; + label + &quot; has been removed as standard.&quot; );&#xD;
        } else {&#xD;
            return error(&quot;The lane &quot; + label + &quot; is not a standard lane.&quot;);&#xD;
        }&#xD;
    }&#xD;
    if (record()) {&#xD;
        Recorder.record(&quot;LaneManager&quot;, &quot;Delete Standard&quot;);&#xD;
    }&#xD;
    return true;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MVbhEBUTEemIe6OhVnSywA" name="keyTyped" specification="_MVaS8BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MVdWQBUTEemIe6OhVnSywA" name="keyPressed" specification="_MVcIIBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    if (e.getKeyCode() == KeyEvent.VK_LEFT) {&#xD;
        IJ.error(&quot;Your pressed left&quot;);&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MVfygBUTEemIe6OhVnSywA" name="keyReleased" specification="_MVekYBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MVgZkBUTEemIe6OhVnSywA" name="show_standards" specification="_MVfygRUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    int count = stdslabels.size();&#xD;
    if (count == 0) {&#xD;
        return error(&quot;You have not added any standard yet.&quot;);&#xD;
    } else if (count == 1) {&#xD;
        return error(&quot;The standard that you have selected is &quot; + stdslabels.get(0));&#xD;
    } else {&#xD;
        String res = &quot;&quot;;&#xD;
        for (int i = 0; i &lt; count - 1; i++) {&#xD;
            res = res + stdslabels.get(i) + &quot;, &quot;;&#xD;
        }&#xD;
        res = res + &quot;and &quot; + stdslabels.get(count - 1) + &quot;.&quot;;&#xD;
        return error(&quot;The standards that you have selected are &quot; + res);&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MVhnsBUTEemIe6OhVnSywA" name="skew" specification="_MVhAoBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    //To change body of generated methods, choose Tools | Templates.&#xD;
    throw new UnsupportedOperationException(&quot;Not supported yet.&quot;);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MVkrABUTEemIe6OhVnSywA" name="adjustcontrastbrightness" specification="_MVi10BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    int count = getCount();&#xD;
    if (count == 0) {&#xD;
        return error(&quot;First, you need to detect the lanes.&quot;);&#xD;
    }&#xD;
    int index[] = getSelectedIndexes();&#xD;
    if (index.length == 0) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;Select a lane to adjust its contrast.&quot;, &quot;Adjust contrast&quot;, JOptionPane.INFORMATION_MESSAGE);&#xD;
        return false;&#xD;
    }&#xD;
    String label = (String) listModel.getElementAt(index[0]);&#xD;
    imp.setRoi((Roi) rois.get(label));&#xD;
    IJ.run(&quot;Brightness/Contrast...&quot;);&#xD;
    if (record()) {&#xD;
        Recorder.record(&quot;LaneManager&quot;, &quot;Brightness/Contrast lane&quot;);&#xD;
    }&#xD;
    return true;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MVnHQBUTEemIe6OhVnSywA" name="backgroundremoval" specification="_MVl5IBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    int count = getCount();&#xD;
    if (count == 0) {&#xD;
        return error(&quot;First, you need to detect the lanes.&quot;);&#xD;
    }&#xD;
    int index[] = getSelectedIndexes();&#xD;
    if (index.length == 0) {&#xD;
        return error(&quot;Select a lane.&quot;);&#xD;
    }&#xD;
    String label = (String) listModel.getElementAt(index[0]);&#xD;
    imp.setRoi((Roi) rois.get(label));&#xD;
    ImagePlus dup = imp.duplicate();&#xD;
    dup.show();&#xD;
    LaneBackground bs = new LaneBackground(dup, imp, imp.getRoi(), !bgCheckbox.getState(), changedbg, this);&#xD;
    PlugInFilterRunner pfr = new PlugInFilterRunner(bs, &quot;LaneBackground&quot;, &quot;&quot;);&#xD;
    if (changedbg) {&#xD;
        IJ.run(imp, &quot;Paste&quot;, &quot;&quot;);&#xD;
    }&#xD;
    changedbg = false;&#xD;
    if (record()) {&#xD;
        Recorder.record(&quot;LaneManager&quot;, &quot;Background subtraction lane&quot;);&#xD;
    }&#xD;
    return true;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MVpjgBUTEemIe6OhVnSywA" name="setbgcheckboxstate" specification="_MVoVYBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    bgCheckbox.setState(b);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MVrYsBUTEemIe6OhVnSywA" name="getnumberofstds" specification="_MVqxoBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    return stds.size();&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MVsm0BUTEemIe6OhVnSywA" name="add_info_about_lane" specification="_MVr_wBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    int count = getCount();&#xD;
    if (count == 0) {&#xD;
        error(&quot;First, you need to detect the lanes.&quot;);&#xD;
        return;&#xD;
    }&#xD;
    int index[] = getSelectedIndexes();&#xD;
    if (index.length == 0) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;Select a lane to add its information.&quot;, &quot;Add information&quot;, JOptionPane.INFORMATION_MESSAGE);&#xD;
        return;&#xD;
    }&#xD;
    if (index.length > 1) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;Select only one lane to add its information.&quot;, &quot;Add information&quot;, JOptionPane.INFORMATION_MESSAGE);&#xD;
        return;&#xD;
    }&#xD;
    // &#xD;
    String label = (String) listModel.getElementAt(index[0]);&#xD;
    LaneInfo l = (LaneInfo) lanesinfo.get(label);&#xD;
    changeall = false;&#xD;
    InfoLane il = new InfoLane(l, firstTime, this);&#xD;
    il.setVisible(true);&#xD;
    lanesinfo.put(label, l);&#xD;
    first_time = false;&#xD;
    if (changeall) {&#xD;
        int n = getCount();&#xD;
        for (int i = 0; i &lt; n; i++) {&#xD;
            String label1 = (String) listModel.getElementAt(i);&#xD;
            LaneInfo l1 = (LaneInfo) lanesinfo.get(label1);&#xD;
            l1.setGenus(l.getGenus());&#xD;
            l1.setSpecies(l.getSpecies());&#xD;
            lanesinfo.put(label1, l1);&#xD;
        }&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MVvDEBUTEemIe6OhVnSywA" name="getLanesinfo" specification="_MVt08BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    return lanesinfo;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MVxfUBUTEemIe6OhVnSywA" name="setLanesinfo" specification="_MVwRMBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.lanesinfo = lanesinfo;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MVzUgBUTEemIe6OhVnSywA" name="setChangeall" specification="_MVyGYBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.changeall = changeall;&#xD;
</body>
              </ownedBehavior>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MQfWsBUTEemIe6OhVnSywA" name="LaneManager" visibility="public" method="_MQjBEBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MQhy8BUTEemIe6OhVnSywA" name="m" type="_MEzrIBUTEemIe6OhVnSywA"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MQk2QBUTEemIe6OhVnSywA" name="LaneManager" visibility="public" method="_MQpHsBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MQnSgBUTEemIe6OhVnSywA" name="m" type="_MEzrIBUTEemIe6OhVnSywA"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MQogoBUTEemIe6OhVnSywA" name="a"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MQpuwBUTEemIe6OhVnSywA" name="LaneManager" visibility="public" method="_MQtZIBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MQsyEBUTEemIe6OhVnSywA" name="hideWindow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MQunQBUTEemIe6OhVnSywA" name="showWindow" visibility="private" method="_MQunQRUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MQwccBUTEemIe6OhVnSywA" name="addButton" visibility="private" method="_MQy4sBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MQxqkBUTEemIe6OhVnSywA" name="label"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MQzfwBUTEemIe6OhVnSywA" name="addPopupMenu" visibility="private" method="_MQzfwRUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MQ1U8BUTEemIe6OhVnSywA" name="addPopupItem" visibility="private" method="_MQ3KIBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MQ2jEBUTEemIe6OhVnSywA" name="s"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MQ3xMBUTEemIe6OhVnSywA" name="addPopupMenuSelection" visibility="private" method="_MQ4YQBUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MQ6NcBUTEemIe6OhVnSywA" name="addPopupItemSelection" visibility="private" method="_MQ8CoBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MQ7bkBUTEemIe6OhVnSywA" name="s"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MQ9QwBUTEemIe6OhVnSywA" name="actionPerformed" visibility="public" method="_MQ930BUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MQ9QwRUTEemIe6OhVnSywA" name="e"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MQ930RUTEemIe6OhVnSywA" name="interpolateRois" visibility="private" method="_MQ930hUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MQ930xUTEemIe6OhVnSywA" name="itemStateChanged" visibility="public" method="_MQ-e4RUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MQ-e4BUTEemIe6OhVnSywA" name="e"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MRAUEBUTEemIe6OhVnSywA" name="add" visibility="private" method="_MRCJQRUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MRA7IBUTEemIe6OhVnSywA" name="shiftKeyDown">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MRCJQBUTEemIe6OhVnSywA" name="altKeyDown">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MRElgBUTEemIe6OhVnSywA" name="addRoi" visibility="public" method="_MRGasBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MRFzoBUTEemIe6OhVnSywA" name="roi"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MRHBwBUTEemIe6OhVnSywA" name="addRoi" visibility="public" method="_MRJeABUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MRHo0BUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MRI28BUTEemIe6OhVnSywA" name="promptForName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MRLTMBUTEemIe6OhVnSywA" name="addRoi" visibility="private" method="_MRRZ0BUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MRL6QBUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MRNIYBUTEemIe6OhVnSywA" name="roi"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MRNvcBUTEemIe6OhVnSywA" name="promptForName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MRPkoBUTEemIe6OhVnSywA" name="color"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MRQLsBUTEemIe6OhVnSywA" name="lineWidth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MRSn8BUTEemIe6OhVnSywA" name="recordAdd" visibility="private" method="_MRVrQBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MRT2EBUTEemIe6OhVnSywA" name="color"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MRUdIBUTEemIe6OhVnSywA" name="lineWidth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MRVrQRUTEemIe6OhVnSywA" name="getHex" visibility="private" method="_MRYukBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MRWSUBUTEemIe6OhVnSywA" direction="return"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MRXgcBUTEemIe6OhVnSywA" name="color"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MRajwBUTEemIe6OhVnSywA" name="add" visibility="public" method="_MRfcQBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MRcY8BUTEemIe6OhVnSywA" name="imp"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MRdnEBUTEemIe6OhVnSywA" name="roi"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MReOIBUTEemIe6OhVnSywA" name="n">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MRfcQRUTEemIe6OhVnSywA" name="isStandardName" visibility="private" method="_MRh4gBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MRgDUBUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MRhRcBUTEemIe6OhVnSywA" name="name"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MRjtsBUTEemIe6OhVnSywA" name="getLabel" visibility="private" method="_MRn_IBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MRkUwBUTEemIe6OhVnSywA" direction="return"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MRli4BUTEemIe6OhVnSywA" name="imp"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MRmxABUTEemIe6OhVnSywA" name="roi"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MRnYEBUTEemIe6OhVnSywA" name="n">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MRpNQBUTEemIe6OhVnSywA" name="addAndDraw" visibility="private" method="_MRqbYBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MRp0UBUTEemIe6OhVnSywA" name="altKeyDown">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MRsQkBUTEemIe6OhVnSywA" name="delete" visibility="public" method="_MRus0BUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MRs3oBUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MRtesBUTEemIe6OhVnSywA" name="replacing">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MRv68BUTEemIe6OhVnSywA" name="delete_without_asking" visibility="public" method="_MRxwIBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MRwiABUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MRxJEBUTEemIe6OhVnSywA" name="replacing">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MRy-QBUTEemIe6OhVnSywA" name="update" visibility="private" method="_MR1agBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MRzlUBUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MR0zcBUTEemIe6OhVnSywA" name="clone">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MR3PsBUTEemIe6OhVnSywA" name="rename" visibility="public" method="_MR5r8BUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MR32wBUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MR4d0BUTEemIe6OhVnSywA" name="name2"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MR7hIBUTEemIe6OhVnSywA" name="promptForName" visibility="private" method="_MR99YBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MR8IMBUTEemIe6OhVnSywA" direction="return"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MR9WUBUTEemIe6OhVnSywA" name="name"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MR_ykBUTEemIe6OhVnSywA" name="restore" visibility="private" method="_MSEEABUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MSAZoBUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MSBnwBUTEemIe6OhVnSywA" name="imp"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MSC14BUTEemIe6OhVnSywA" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MSDc8BUTEemIe6OhVnSywA" name="setSlice">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MSF5MBUTEemIe6OhVnSywA" name="restoreWithoutUpdate" visibility="private" method="_MSHHURUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MSF5MRUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MSHHUBUTEemIe6OhVnSywA" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MSI8gBUTEemIe6OhVnSywA" name="getSliceNumber" visibility="public" method="_MSLYwBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MSJjkBUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MSKxsBUTEemIe6OhVnSywA" name="label"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MSNN8BUTEemIe6OhVnSywA" name="getSliceNumber" visibility="private" method="_MSQRQBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MSN1ABUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MSPDIBUTEemIe6OhVnSywA" name="roi"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MSPqMBUTEemIe6OhVnSywA" name="label"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MSRfYBUTEemIe6OhVnSywA" name="open" visibility="private" method="_MSTUkBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MSStgBUTEemIe6OhVnSywA" name="path"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MSUisBUTEemIe6OhVnSywA" name="openZip" visibility="private" method="_MSWX4BUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MSVw0BUTEemIe6OhVnSywA" name="path"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MSYNEBUTEemIe6OhVnSywA" name="getUniqueName" visibility="private" method="_MSZbMBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MSYNERUTEemIe6OhVnSywA" direction="return"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MSY0IBUTEemIe6OhVnSywA" name="name"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MSapUBUTEemIe6OhVnSywA" name="save" visibility="private" method="_MSb3cBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MSbQYBUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MSdsoBUTEemIe6OhVnSywA" name="saveMultiple" visibility="private" method="_MShXABUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MSeTsBUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MSe6wBUTEemIe6OhVnSywA" name="indexes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MSfh0BUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MSgI4BUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MSgv8BUTEemIe6OhVnSywA" name="path"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MSilIBUTEemIe6OhVnSywA" name="measure" visibility="private" method="_MSjzQBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MSilIRUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MSjMMBUTEemIe6OhVnSywA" name="mode">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MSlocBUTEemIe6OhVnSywA" name="multiMeasure" visibility="private" method="_MSndoBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MSmPgBUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MSm2kBUTEemIe6OhVnSywA" name="cmd"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MSorwBUTEemIe6OhVnSywA" name="getColumnCount" visibility="private" method="_MSrIABUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MSpS0BUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MSp54BUTEemIe6OhVnSywA" name="imp"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MSqg8BUTEemIe6OhVnSywA" name="measurements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MSrvEBUTEemIe6OhVnSywA" name="multiPlot" visibility="private" method="_MSsWIBUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MSs9MBUTEemIe6OhVnSywA" name="drawOrFill" visibility="private" method="_MSuyYBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MStkQBUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MSuLUBUTEemIe6OhVnSywA" name="mode">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MSwAgBUTEemIe6OhVnSywA" name="setProperties" visibility="private" method="_MSycwBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MSwnkBUTEemIe6OhVnSywA" name="color"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MSxOoBUTEemIe6OhVnSywA" name="lineWidth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MSx1sBUTEemIe6OhVnSywA" name="fillColor"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MSzq4BUTEemIe6OhVnSywA" name="flatten" visibility="private" method="_MS0R8BUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MS0R8RUTEemIe6OhVnSywA" name="combine" visibility="private" method="_MS0R8hUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MS1gEBUTEemIe6OhVnSywA" name="combineRois" visibility="private" method="_MS38UBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MS2HIBUTEemIe6OhVnSywA" name="imp"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MS2uMBUTEemIe6OhVnSywA" name="indexes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MS3VQBUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MS3VQRUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MS5KcBUTEemIe6OhVnSywA" name="convertLineToPolygon" visibility="private" method="_MS7msBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MS5xgBUTEemIe6OhVnSywA" direction="return"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MS6YkBUTEemIe6OhVnSywA" name="roi"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MS6_oBUTEemIe6OhVnSywA" name="ip"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MS800BUTEemIe6OhVnSywA" name="combinePoints" visibility="private" method="_MS_4IBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MS9b4BUTEemIe6OhVnSywA" name="imp"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MS-qABUTEemIe6OhVnSywA" name="indexes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MS_REBUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MS_RERUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MTAfMBUTEemIe6OhVnSywA" name="and" visibility="private" method="_MTBGQBUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MTCUYBUTEemIe6OhVnSywA" name="xor" visibility="private" method="_MTCUYRUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MTDigBUTEemIe6OhVnSywA" name="addParticles" visibility="private" method="_MTDigRUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MTEwoBUTEemIe6OhVnSywA" name="sort" visibility="private" method="_MTFXsBUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MTF-wBUTEemIe6OhVnSywA" name="specify" visibility="private" method="_MTGl0BUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MTNTgBUTEemIe6OhVnSywA" name="removePositions" visibility="private" method="_MTOhoBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MTN6kBUTEemIe6OhVnSywA" name="position">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MTPIsBUTEemIe6OhVnSywA" name="help" visibility="private" method="_MTPvwBUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MTQ94BUTEemIe6OhVnSywA" name="labels" visibility="private" method="_MTRk8BUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MTSzEBUTEemIe6OhVnSywA" name="options" visibility="private" method="_MTSzERUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MTUBMBUTEemIe6OhVnSywA" name="makeButtonPanel" visibility="private" method="_MTWdcBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MTUoQBUTEemIe6OhVnSywA" direction="return"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MTV2YBUTEemIe6OhVnSywA" name="gd"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MTXEgBUTEemIe6OhVnSywA" name="setShowAllColor" visibility="private" method="_MTXrkBUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MTYSoBUTEemIe6OhVnSywA" name="split" visibility="private" method="_MTY5sBUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MTZgwBUTEemIe6OhVnSywA" name="showAll" visibility="private" method="_MTau4BUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MTaH0BUTEemIe6OhVnSywA" name="mode">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MTb9ABUTEemIe6OhVnSywA" name="updateShowAll" visibility="public" method="_MTb9ARUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MTdLIBUTEemIe6OhVnSywA" name="getAllIndexes" visibility="private" method="_MTeZQBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MTdyMBUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MTdyMRUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MTdyMhUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MTfAUBUTEemIe6OhVnSywA" name="getImage" visibility="private" method="_MTgOcBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MTfnYBUTEemIe6OhVnSywA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MThckBUTEemIe6OhVnSywA" name="error" visibility="private" method="_MTiqsRUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MTiDoBUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MTiqsBUTEemIe6OhVnSywA" name="msg"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MTkf4BUTEemIe6OhVnSywA" name="processWindowEvent" visibility="public" method="_MTluABUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MTlG8BUTEemIe6OhVnSywA" name="e"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MTmVEBUTEemIe6OhVnSywA" name="getInstance" visibility="public" isStatic="true" method="_MTnjMRUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MTnjMBUTEemIe6OhVnSywA" type="_MHgZ0BUTEemIe6OhVnSywA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MToKQBUTEemIe6OhVnSywA" name="getInstance2" visibility="public" isStatic="true" method="_MTpYYRUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MTpYYBUTEemIe6OhVnSywA" type="_MHgZ0BUTEemIe6OhVnSywA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MTqmgBUTEemIe6OhVnSywA" name="getROIs" visibility="public" method="_MTr0oBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MTrNkBUTEemIe6OhVnSywA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MTsbsBUTEemIe6OhVnSywA" name="getList" visibility="public" method="_MTtp0BUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MTtCwBUTEemIe6OhVnSywA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MTu38BUTEemIe6OhVnSywA" name="getCount" visibility="public" method="_MTwGEBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MTvfABUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MTxUMBUTEemIe6OhVnSywA" name="getCountStd" visibility="public" method="_MTx7QRUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MTx7QBUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MTzJYBUTEemIe6OhVnSywA" name="getRoiIndex" visibility="public" method="_MT0-kBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MTzwcBUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MT0XgBUTEemIe6OhVnSywA" name="roi"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MT2MsBUTEemIe6OhVnSywA" name="getRoiIndexPos" visibility="public" method="_MT4B4BUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MT2MsRUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MT2zwBUTEemIe6OhVnSywA" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MT3a0BUTEemIe6OhVnSywA" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MT4o8BUTEemIe6OhVnSywA" name="getSelectedIndex" visibility="public" method="_MT53EBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MT5QABUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MT6eIBUTEemIe6OhVnSywA" name="getRoi" visibility="public" method="_MT8TUBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MT7FMBUTEemIe6OhVnSywA" direction="return"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MT7sQBUTEemIe6OhVnSywA" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MT9hcBUTEemIe6OhVnSywA" name="getRoisAsArray" visibility="public" method="_MT_WoBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MT-IgBUTEemIe6OhVnSywA" direction="return">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MT-vkBUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MT-vkRUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MT_9sBUTEemIe6OhVnSywA" name="getStdAsArray" visibility="public" method="_MUBy4RUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MUBL0BUTEemIe6OhVnSywA" direction="return">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MUBL0RUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MUBy4BUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MUDBABUTEemIe6OhVnSywA" name="getSelectedRoisAsArray" visibility="public" method="_MUE2MBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MUDoEBUTEemIe6OhVnSywA" direction="return">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MUEPIBUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MUEPIRUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MUGEUBUTEemIe6OhVnSywA" name="getName" visibility="public" method="_MUH5gBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MUGrYBUTEemIe6OhVnSywA" direction="return"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MUHScBUTEemIe6OhVnSywA" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MUJHoBUTEemIe6OhVnSywA" name="getName" visibility="public" isStatic="true" method="_MUKVwBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MUJusBUTEemIe6OhVnSywA" direction="return"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MUJusRUTEemIe6OhVnSywA" name="index"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MULj4BUTEemIe6OhVnSywA" name="runCommand" visibility="public" method="_MUNZEBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MUMK8BUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MUMyABUTEemIe6OhVnSywA" name="cmd"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MUOnMBUTEemIe6OhVnSywA" name="runCommand" visibility="public" method="_MURDcBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MUOnMRUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MUP1UBUTEemIe6OhVnSywA" name="cmd"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MUQcYBUTEemIe6OhVnSywA" name="name"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MUSRkBUTEemIe6OhVnSywA" name="save" visibility="private" method="_MUUGwBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MUSRkRUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MUS4oBUTEemIe6OhVnSywA" name="name"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MUTfsBUTEemIe6OhVnSywA" name="saveSelected">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MUVU4BUTEemIe6OhVnSywA" name="runCommand" visibility="public" method="_MUYYMBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MUV78BUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MUWjABUTEemIe6OhVnSywA" name="cmd"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MUXKEBUTEemIe6OhVnSywA" name="hexColor"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MUXxIBUTEemIe6OhVnSywA" name="lineWidth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MUY_QBUTEemIe6OhVnSywA" name="setRoiPosition" visibility="private" method="_MUa0cBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MUZmUBUTEemIe6OhVnSywA" name="imp"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MUaNYBUTEemIe6OhVnSywA" name="roi"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MUbbgBUTEemIe6OhVnSywA" name="select" visibility="public" method="_MUcpoBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MUcCkBUTEemIe6OhVnSywA" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MUcpoRUTEemIe6OhVnSywA" name="select" visibility="public" method="_MUee0BUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MUdQsBUTEemIe6OhVnSywA" name="imp"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MUd3wBUTEemIe6OhVnSywA" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MUfF4BUTEemIe6OhVnSywA" name="select" visibility="public" method="_MUhiIBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MUfs8BUTEemIe6OhVnSywA" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MUgUABUTEemIe6OhVnSywA" name="shiftKeyDown">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MUg7EBUTEemIe6OhVnSywA" name="altKeyDown">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MUiJMBUTEemIe6OhVnSywA" name="setEditMode" visibility="public" method="_MUklcBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MUjXUBUTEemIe6OhVnSywA" name="imp"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MUj-YBUTEemIe6OhVnSywA" name="editMode">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MUlMgBUTEemIe6OhVnSywA" name="close" visibility="public" method="_MUlzkBUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MUnowBUTEemIe6OhVnSywA" name="setAssistant" visibility="public" method="_MUo24BUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MUoP0BUTEemIe6OhVnSywA" name="a"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MUqFABUTEemIe6OhVnSywA" name="moveRoisToOverlay" visibility="public" method="_MUrTIBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MUqsEBUTEemIe6OhVnSywA" name="imp"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MUshQBUTEemIe6OhVnSywA" name="mousePressed" visibility="public" method="_MUuWcBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MUtvYBUTEemIe6OhVnSywA" name="e"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MUvkkBUTEemIe6OhVnSywA" name="mouseWheelMoved" visibility="public" method="_MUwysBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MUwLoBUTEemIe6OhVnSywA" name="event"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MUwysRUTEemIe6OhVnSywA" name="setSelectedIndexes" visibility="public" method="_MUyn4BUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MUxZwBUTEemIe6OhVnSywA" name="indexes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MUyA0BUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MUyA0RUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MUzO8BUTEemIe6OhVnSywA" name="getSelectedIndexes" visibility="public" method="_MU1EIBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MUz2ABUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MU0dEBUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MU0dERUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MU1rMBUTEemIe6OhVnSywA" name="newOverlay" visibility="private" method="_MU4HcBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MU3gYBUTEemIe6OhVnSywA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MU58oBUTEemIe6OhVnSywA" name="removeOverlay" visibility="private" method="_MU7KwBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MU6jsBUTEemIe6OhVnSywA" name="imp"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MU8Y4BUTEemIe6OhVnSywA" name="setOverlay" visibility="private" method="_MU-OEBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MU8_8BUTEemIe6OhVnSywA" name="imp"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MU9nABUTEemIe6OhVnSywA" name="overlay"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MU_cMBUTEemIe6OhVnSywA" name="record" visibility="private" method="_MVADQBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MU_cMRUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MVBRYBUTEemIe6OhVnSywA" name="mouseReleased" visibility="public" method="_MVCfgBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MVB4cBUTEemIe6OhVnSywA" name="e"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MVDtoBUTEemIe6OhVnSywA" name="mouseClicked" visibility="public" method="_MVE7wBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MVEUsBUTEemIe6OhVnSywA" name="e"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MVGJ4BUTEemIe6OhVnSywA" name="mouseEntered" visibility="public" method="_MVHYABUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MVGw8BUTEemIe6OhVnSywA" name="e"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MVH_EBUTEemIe6OhVnSywA" name="mouseExited" visibility="public" method="_MVJNMRUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MVJNMBUTEemIe6OhVnSywA" name="e"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MVKbUBUTEemIe6OhVnSywA" name="valueChanged" visibility="public" method="_MVLpcBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MVLCYBUTEemIe6OhVnSywA" name="e"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MVM3kBUTEemIe6OhVnSywA" name="windowActivated" visibility="public" method="_MVOFsBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MVNeoBUTEemIe6OhVnSywA" name="e"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MVOFsRUTEemIe6OhVnSywA" name="fix_standard" visibility="public" method="_MVP64BUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MVOswBUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MVRJABUTEemIe6OhVnSywA" name="fix_standards" visibility="public" method="_MVTlQBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MVSXIBUTEemIe6OhVnSywA" name="newrois">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MVS-MBUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MVS-MRUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MVUzYBUTEemIe6OhVnSywA" name="change_colour" visibility="public" method="_MVWBgBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MVVacBUTEemIe6OhVnSywA" name="c"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MVWokBUTEemIe6OhVnSywA" name="auto_detect" visibility="public" method="_MVXPoBUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MVX2sBUTEemIe6OhVnSywA" name="delete_standard" visibility="public" method="_MVZE0BUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MVYdwBUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MVaS8BUTEemIe6OhVnSywA" name="keyTyped" visibility="public" method="_MVbhEBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MVa6ABUTEemIe6OhVnSywA" name="e"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MVcIIBUTEemIe6OhVnSywA" name="keyPressed" visibility="public" method="_MVdWQBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MVcvMBUTEemIe6OhVnSywA" name="e"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MVekYBUTEemIe6OhVnSywA" name="keyReleased" visibility="public" method="_MVfygBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MVfLcBUTEemIe6OhVnSywA" name="e"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MVfygRUTEemIe6OhVnSywA" name="show_standards" visibility="public" method="_MVgZkBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MVfyghUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MVhAoBUTEemIe6OhVnSywA" name="skew" visibility="private" method="_MVhnsBUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MVi10BUTEemIe6OhVnSywA" name="adjustcontrastbrightness" visibility="public" method="_MVkrABUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MVjc4BUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MVkD8BUTEemIe6OhVnSywA" name="imp"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MVl5IBUTEemIe6OhVnSywA" name="backgroundremoval" visibility="public" method="_MVnHQBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MVl5IRUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MVmgMBUTEemIe6OhVnSywA" name="imp"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MVoVYBUTEemIe6OhVnSywA" name="setbgcheckboxstate" visibility="public" method="_MVpjgBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MVo8cBUTEemIe6OhVnSywA" name="b">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MVqxoBUTEemIe6OhVnSywA" name="getnumberofstds" visibility="public" method="_MVrYsBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MVqxoRUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MVr_wBUTEemIe6OhVnSywA" name="add_info_about_lane" visibility="public" method="_MVsm0BUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MVt08BUTEemIe6OhVnSywA" name="getLanesinfo" visibility="public" method="_MVvDEBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MVucABUTEemIe6OhVnSywA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MVwRMBUTEemIe6OhVnSywA" name="setLanesinfo" visibility="public" method="_MVxfUBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MVw4QBUTEemIe6OhVnSywA" name="lanesinfo"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MVyGYBUTEemIe6OhVnSywA" name="setChangeall" visibility="public" method="_MVzUgBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MVytcBUTEemIe6OhVnSywA" name="changeall">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_MISc8BUTEemIe6OhVnSywA" name="BandSegmentationLane" visibility="public">
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MIWHUBUTEemIe6OhVnSywA" name="imp" visibility="private" type="_MBDzkBUTEemIe6OhVnSywA" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MIXVcBUTEemIe6OhVnSywA" name="bm" visibility="private" type="_MEgJIBUTEemIe6OhVnSywA" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MIYjkBUTEemIe6OhVnSywA" name="darkbackground" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MIZxsBUTEemIe6OhVnSywA" name="BLUE" visibility="public" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MIa_0BUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>0</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MIbm4BUTEemIe6OhVnSywA" name="RED" visibility="public" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MIc1ABUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>1</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MIeDIBUTEemIe6OhVnSywA" name="GREEN" visibility="public" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MIfRQBUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>2</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MIf4UBUTEemIe6OhVnSywA" name="MAGENTA" visibility="public" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MIhGcBUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>3</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MIhtgBUTEemIe6OhVnSywA" name="CYAN" visibility="public" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MIi7oBUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>4</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MIjisBUTEemIe6OhVnSywA" name="YELLOW" visibility="public" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MIkw0BUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>5</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MIlX4BUTEemIe6OhVnSywA" name="ORANGE" visibility="public" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MImmABUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>6</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MInNEBUTEemIe6OhVnSywA" name="FLAGS" visibility="private" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MIobMBUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>DOES_ALL | SUPPORTS_MASKING | KEEP_PREVIEW | FINAL_PROCESSING</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MIpCQBUTEemIe6OhVnSywA" name="nPasses" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MIqQYBUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>1</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MIsFkBUTEemIe6OhVnSywA" name="pfr" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MItTsBUTEemIe6OhVnSywA" name="m" visibility="private" type="_MEzrIBUTEemIe6OhVnSywA" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MIuh0BUTEemIe6OhVnSywA" name="c" visibility="private" isUnique="false">
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MIvv8BUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>Color.BLUE</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MIwXABUTEemIe6OhVnSywA" name="tolerances" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MIxlIBUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MIyMMBUTEemIe6OhVnSywA" value="*"/>
              </ownedAttribute>
              <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_MIU5MBUTEemIe6OhVnSywA" name="BandSegmentationLane implements DialogListener" client="_MISc8BUTEemIe6OhVnSywA" supplier="_MEaCgBUTEemIe6OhVnSywA" contract="_MEaCgBUTEemIe6OhVnSywA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MI4S0BUTEemIe6OhVnSywA" name="BandSegmentationLane" specification="_MIyzQBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.imp = imp;&#xD;
    this.bm = bm;&#xD;
    darkbackground = bg;&#xD;
    this.m = m;&#xD;
    c = bm.getColour();&#xD;
    tolerances = new int[m.finallanes.length];&#xD;
//run(imp.getProcessor());&#xD;
//showDialog(imp, null, pfr);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MI-ZcBUTEemIe6OhVnSywA" name="showDialog" specification="_MI5g8BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    GenericDialog gd = new GenericDialog(command);&#xD;
    gd.addMessage(&quot;Fix the tolerance to find bands&quot;);&#xD;
    for (int i = 0; i &lt; m.finallanes.length; i++) {&#xD;
        gd.addSlider(&quot;Tolerance Lane &quot; + (i + 1), 25, 255, 255);&#xD;
    }&#xD;
    String[] colours = { &quot;blue&quot;, &quot;red&quot;, &quot;green&quot;, &quot;magenta&quot;, &quot;cyan&quot;, &quot;yellow&quot;, &quot;orange&quot; };&#xD;
    gd.addChoice(&quot;Colour&quot;, colours, &quot;blue&quot;);&#xD;
    this.imp = imp;&#xD;
    this.pfr = pfr;&#xD;
    gd.addPreviewCheckbox(pfr);&#xD;
    // &#xD;
    gd.addDialogListener(this);&#xD;
    ((Checkbox) gd.getCheckboxes().elementAt(0)).setState(true);&#xD;
    // input by the user (or macro) happens here&#xD;
    gd.showDialog();&#xD;
    if (gd.wasCanceled()) {&#xD;
        bm.delete_without_asking(true);&#xD;
        ImagePlus imp2 = WindowManager.getCurrentImage();&#xD;
        removeOverlay(imp2);&#xD;
        return DONE;&#xD;
    }&#xD;
    if (gd.wasOKed()) {&#xD;
        bm.setColour(c);&#xD;
    }&#xD;
    IJ.register(this.getClass());&#xD;
    return IJ.setupDialog(imp, FLAGS);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MJA1sBUTEemIe6OhVnSywA" name="dialogItemChanged" specification="_MI_nkBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    Vector sliders = gd.getSliders();&#xD;
    for (int i = 0; i &lt; m.finallanes.length; i++) {&#xD;
        tolerances[i] = ((Scrollbar) sliders.elementAt(i)).getValue();&#xD;
    }&#xD;
    int colour = gd.getNextChoiceIndex();&#xD;
    switch(colour) {&#xD;
        case BLUE:&#xD;
            c = Color.BLUE;&#xD;
            break;&#xD;
        case RED:&#xD;
            c = Color.RED;&#xD;
            break;&#xD;
        case GREEN:&#xD;
            c = Color.GREEN;&#xD;
            break;&#xD;
        case MAGENTA:&#xD;
            c = Color.MAGENTA;&#xD;
            break;&#xD;
        case CYAN:&#xD;
            c = Color.CYAN;&#xD;
            break;&#xD;
        case YELLOW:&#xD;
            c = Color.YELLOW;&#xD;
            break;&#xD;
        case ORANGE:&#xD;
            c = Color.ORANGE;&#xD;
            break;&#xD;
        default:&#xD;
            c = Color.BLUE;&#xD;
            break;&#xD;
    }&#xD;
    return true;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MJCD0BUTEemIe6OhVnSywA" name="setup" specification="_MJA1sRUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.imp = imp;&#xD;
    return DOES_8G;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MJCq4BUTEemIe6OhVnSywA" name="run" specification="_MJCD0RUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    Prefs.verticalProfile = true;&#xD;
    bm.delete_without_asking(true);&#xD;
    bm.restart_bands();&#xD;
    for (int i = 0; i &lt; m.finallanes.length; i++) {&#xD;
        Roi r0 = m.finallanes[i].getRoi();&#xD;
        int x0 = r0.getBounds().x + r0.getBounds().width / 2;&#xD;
        int y0 = r0.getBounds().y;&#xD;
        int x1 = r0.getBounds().x + r0.getBounds().width / 2;&#xD;
        int y1 = r0.getBounds().y + r0.getBounds().height;&#xD;
        Line l0 = new Line(x0, y0, x1, y1);&#xD;
        l0.setWidth(15);&#xD;
        imp.setRoi(l0);&#xD;
        // Finding the peaks of the profile&#xD;
        if ((!darkbackground &amp;&amp; !imp.isInvertedLut()) || imp.isInvertedLut()) {&#xD;
            ip.invert();&#xD;
        }&#xD;
        //ProfilePlot pp = new ProfilePlot(imp);&#xD;
        double[] profile = m.finallanes[i].getProfile();&#xD;
        if ((!darkbackground &amp;&amp; !imp.isInvertedLut()) || imp.isInvertedLut()) {&#xD;
            ip.invert();&#xD;
        }&#xD;
        l0.setWidth(1);&#xD;
        int[] maxima = MaximumFinder.findMaxima(profile, 2, true);&#xD;
        int[] htt = higherthantolerance(maxima, profile, tolerances[i]);&#xD;
        Arrays.sort(htt);&#xD;
        // Showing the lines&#xD;
        int r0x = r0.getBounds().x;&#xD;
        int r0y = r0.getBounds().y;&#xD;
        int w = r0.getBounds().width;&#xD;
        int[] positionsy = new int[htt.length];&#xD;
        for (int k = 0; k &lt; htt.length; k++) {&#xD;
            positionsy[k] = r0y + htt[k];&#xD;
        }&#xD;
        for (int j = 0; j &lt; htt.length; j++) {&#xD;
            /*Line line = new Line(r0x, r0y + htt[j], r0x + w, r0y + htt[j]);
             Line lineintersection = lineintersectionroi(r0,line);*/&#xD;
            Rectangle r = new Rectangle(r0x, r0y + htt[j], w, 2);&#xD;
            Roi r1 = rectangleintersectionroi(r0, r);&#xD;
            r1.setFillColor(c);&#xD;
            bm.add(imp, r1, j, i);&#xD;
        //bm.add(imp, line, j);&#xD;
        }&#xD;
    }&#xD;
    //m.finallanes[i].setProfile(profile);&#xD;
    //m.finallanes[i].setPositionbands(positionsy);&#xD;
    bm.showAll(0);&#xD;
//m.finallanes = finallanes;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MJDR8hUTEemIe6OhVnSywA" name="lineintersectionroi" specification="_MJCq4RUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    Line line;&#xD;
    int[] xpointsl = l.getPoints().xpoints;&#xD;
    int[] ypointsl = l.getPoints().ypoints;&#xD;
    int len = xpointsl.length;&#xD;
    Boolean inside = false;&#xD;
    int x0 = xpointsl[0];&#xD;
    int y0 = ypointsl[0];&#xD;
    int x1 = xpointsl[len - 1];&#xD;
    int y1 = ypointsl[len - 1];&#xD;
    for (int i = 1; i &lt; len; i++) {&#xD;
        if (!inside) {&#xD;
            if (r.contains(xpointsl[i], ypointsl[i])) {&#xD;
                x0 = xpointsl[i];&#xD;
                y0 = ypointsl[i];&#xD;
                inside = true;&#xD;
            }&#xD;
        } else {&#xD;
            if (!r.contains(xpointsl[i], ypointsl[i])) {&#xD;
                x1 = xpointsl[i];&#xD;
                y1 = ypointsl[i];&#xD;
                line = new Line(x0, y0, x1, y1);&#xD;
                return line;&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    line = new Line(x0, y0, x1, y1);&#xD;
    return line;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MJFHIBUTEemIe6OhVnSywA" name="higherthantolerance" specification="_MJD5ABUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    ArrayList&lt;Integer> res = new ArrayList&lt;Integer>();&#xD;
    for (int i = 0; i &lt; v.length; i++) {&#xD;
        if (p[v[i]] > tolerance) {&#xD;
            res.add(v[i]);&#xD;
        }&#xD;
    }&#xD;
    int[] ret = new int[res.size()];&#xD;
    for (int i = 0; i &lt; ret.length; i++) {&#xD;
        ret[i] = res.get(i);&#xD;
    }&#xD;
    return ret;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MJFuNBUTEemIe6OhVnSywA" name="movingaveragefilter" specification="_MJFHIRUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    int lv = v.length;&#xD;
    double[] res = new double[lv];&#xD;
    // starting point &#xD;
    int sp;&#xD;
    // end point &#xD;
    int ep;&#xD;
    for (int i = 0; i &lt; lv; i++) {&#xD;
        sp = i - (avgpoints - 1) / 2;&#xD;
        if (sp &lt; 0) {&#xD;
            sp = 0;&#xD;
        }&#xD;
        ep = i + (avgpoints - 1) / 2;&#xD;
        if (ep >= lv) {&#xD;
            ep = lv - 1;&#xD;
        }&#xD;
        double partial_sum = 0;&#xD;
        for (int j = sp; j &lt;= ep; j++) {&#xD;
            partial_sum = partial_sum + v[j];&#xD;
        }&#xD;
        res[i] = partial_sum / (ep - sp + 1);&#xD;
    }&#xD;
    return res;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MJG8URUTEemIe6OhVnSywA" name="higherthanvalue" specification="_MJGVQBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    if (from_end) {&#xD;
        int pos = 0;&#xD;
        for (int i = 0; i &lt; v.length; i++) {&#xD;
            if (value &lt; v[i]) {&#xD;
                return i;&#xD;
            }&#xD;
        }&#xD;
        return pos;&#xD;
    } else {&#xD;
        int pos = v.length - 1;&#xD;
        for (int i = v.length - 1; i >= 0; i--) {&#xD;
            if (value &lt; v[i]) {&#xD;
                return i;&#xD;
            }&#xD;
        }&#xD;
        return pos;&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MJHjYBUTEemIe6OhVnSywA" name="setNPasses" specification="_MJG8UhUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.nPasses = nPasses;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MJHjYxUTEemIe6OhVnSywA" name="removeOverlay" specification="_MJHjYRUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    if (imp != null &amp;&amp; imp.getCanvas() != null) {&#xD;
        setOverlay(imp, null);&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MJIKcxUTEemIe6OhVnSywA" name="setOverlay" specification="_MJIKcBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    if (imp == null) {&#xD;
        return;&#xD;
    }&#xD;
    ImageCanvas ic = imp.getCanvas();&#xD;
    if (ic == null) {&#xD;
        imp.setOverlay(overlay);&#xD;
        return;&#xD;
    }&#xD;
    ic.setShowAllList(overlay);&#xD;
    imp.draw();&#xD;
</body>
              </ownedBehavior>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MIyzQBUTEemIe6OhVnSywA" name="BandSegmentationLane" visibility="public" method="_MI4S0BUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MI1PgBUTEemIe6OhVnSywA" name="imp" type="_MBDzkBUTEemIe6OhVnSywA"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MI12kBUTEemIe6OhVnSywA" name="bm" type="_MEgJIBUTEemIe6OhVnSywA"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MI3EsBUTEemIe6OhVnSywA" name="bg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MI3rwBUTEemIe6OhVnSywA" name="m" type="_MEzrIBUTEemIe6OhVnSywA"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MI5g8BUTEemIe6OhVnSywA" name="showDialog" visibility="public" method="_MI-ZcBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MI6IABUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MI7WIBUTEemIe6OhVnSywA" name="imp" type="_MBDzkBUTEemIe6OhVnSywA"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MI8kQBUTEemIe6OhVnSywA" name="command"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MI9yYBUTEemIe6OhVnSywA" name="pfr"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MI_nkBUTEemIe6OhVnSywA" name="dialogItemChanged" visibility="public" method="_MJA1sBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MI_nkRUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MJAOoBUTEemIe6OhVnSywA" name="gd" type="_MDQL8BUTEemIe6OhVnSywA"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MJAOoRUTEemIe6OhVnSywA" name="e"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MJA1sRUTEemIe6OhVnSywA" name="setup" visibility="public" method="_MJCD0BUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MJBcwBUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MJBcwRUTEemIe6OhVnSywA" name="arg"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MJBcwhUTEemIe6OhVnSywA" name="imp" type="_MBDzkBUTEemIe6OhVnSywA"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MJCD0RUTEemIe6OhVnSywA" name="run" visibility="public" method="_MJCq4BUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MJCD0hUTEemIe6OhVnSywA" name="ip" type="_MCpH8BUTEemIe6OhVnSywA"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MJCq4RUTEemIe6OhVnSywA" name="lineintersectionroi" visibility="private" method="_MJDR8hUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MJCq4hUTEemIe6OhVnSywA" type="_MFY58BUTEemIe6OhVnSywA" direction="return"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MJDR8BUTEemIe6OhVnSywA" name="r" type="_MA8e0BUTEemIe6OhVnSywA"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MJDR8RUTEemIe6OhVnSywA" name="l" type="_MFY58BUTEemIe6OhVnSywA"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MJD5ABUTEemIe6OhVnSywA" name="higherthantolerance" visibility="private" method="_MJFHIBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MJD5ARUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MJD5AhUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MJD5AxUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MJD5BBUTEemIe6OhVnSywA" name="v">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MJEgEBUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MJEgERUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MJEgEhUTEemIe6OhVnSywA" name="p">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MJEgExUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MJEgFBUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MJEgFRUTEemIe6OhVnSywA" name="tolerance">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MJFHIRUTEemIe6OhVnSywA" name="movingaveragefilter" visibility="private" method="_MJFuNBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MJFHIhUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MJFHIxUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MJFHJBUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MJFuMBUTEemIe6OhVnSywA" name="v">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MJFuMRUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MJFuMhUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MJFuMxUTEemIe6OhVnSywA" name="avgpoints">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MJGVQBUTEemIe6OhVnSywA" name="higherthanvalue" visibility="private" method="_MJG8URUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MJGVQRUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MJGVQhUTEemIe6OhVnSywA" name="v">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MJGVQxUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MJGVRBUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MJGVRRUTEemIe6OhVnSywA" name="value">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MJG8UBUTEemIe6OhVnSywA" name="from_end">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MJG8UhUTEemIe6OhVnSywA" name="setNPasses" visibility="public" method="_MJHjYBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MJG8UxUTEemIe6OhVnSywA" name="nPasses">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MJHjYRUTEemIe6OhVnSywA" name="removeOverlay" visibility="private" method="_MJHjYxUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MJHjYhUTEemIe6OhVnSywA" name="imp" type="_MBDzkBUTEemIe6OhVnSywA"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MJIKcBUTEemIe6OhVnSywA" name="setOverlay" visibility="private" method="_MJIKcxUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MJIKcRUTEemIe6OhVnSywA" name="imp" type="_MBDzkBUTEemIe6OhVnSywA"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MJIKchUTEemIe6OhVnSywA" name="overlay" type="_MEEEQRUTEemIe6OhVnSywA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_MJLNwBUTEemIe6OhVnSywA" name="ImageEdit" visibility="public">
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MJL00RUTEemIe6OhVnSywA" name="imp" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MJMb4BUTEemIe6OhVnSywA" name="m" visibility="private" type="_MEzrIBUTEemIe6OhVnSywA" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MJTJkBUTEemIe6OhVnSywA" name="jButtonFlipH" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MJTJkRUTEemIe6OhVnSywA" name="jButtonFlipV" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MJTJkhUTEemIe6OhVnSywA" name="jButtonInvert" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MJTwoBUTEemIe6OhVnSywA" name="jButtonRotate" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MJTwoRUTEemIe6OhVnSywA" name="jButtonRotateL" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MJUXsBUTEemIe6OhVnSywA" name="jButtonRotateR" visibility="private" isUnique="false"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MJOREhUTEemIe6OhVnSywA" name="ImageEdit" specification="_MJMb4RUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.imp = imp;&#xD;
    this.m = m;&#xD;
    initComponents();&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MJO4IRUTEemIe6OhVnSywA" name="initComponents" specification="_MJO4IBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    jButtonFlipH = new javax.swing.JButton();&#xD;
    jButtonFlipV = new javax.swing.JButton();&#xD;
    jButtonRotateL = new javax.swing.JButton();&#xD;
    jButtonRotateR = new javax.swing.JButton();&#xD;
    jButtonRotate = new javax.swing.JButton();&#xD;
    jButtonInvert = new javax.swing.JButton();&#xD;
    jButtonFlipH.setText(&quot;Flip Horizontally&quot;);&#xD;
    jButtonFlipH.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButtonFlipHActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jButtonFlipV.setText(&quot;Flip Vertically&quot;);&#xD;
    jButtonFlipV.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButtonFlipVActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jButtonRotateL.setText(&quot;Rotate 90Âº Left&quot;);&#xD;
    jButtonRotateL.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButtonRotateLActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jButtonRotateR.setText(&quot;Rotate 90Âº Right&quot;);&#xD;
    jButtonRotateR.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButtonRotateRActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jButtonRotate.setText(&quot;Rotate&quot;);&#xD;
    jButtonRotate.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButtonRotateActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jButtonInvert.setText(&quot;Invert&quot;);&#xD;
    jButtonInvert.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButtonInvertActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);&#xD;
    this.setLayout(layout);&#xD;
    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jButtonFlipH, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jButtonFlipV, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jButtonRotateL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jButtonRotateR, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE).addComponent(jButtonRotate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jButtonInvert, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));&#xD;
    layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addComponent(jButtonFlipH).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButtonFlipV).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButtonRotateL).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButtonRotateR).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButtonRotate).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButtonInvert)));&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MJPfMBUTEemIe6OhVnSywA" name="jButtonFlipHActionPerformed" specification="_MJO4IhUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    //GEN-FIRST:event_jButtonFlipHActionPerformed&#xD;
    IJ.run(imp, &quot;Flip Horizontally&quot;, &quot;&quot;);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MJQGQBUTEemIe6OhVnSywA" name="jButtonFlipVActionPerformed" specification="_MJPfMRUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    //GEN-FIRST:event_jButtonFlipVActionPerformed&#xD;
    IJ.run(imp, &quot;Flip Vertically&quot;, &quot;&quot;);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MJQtURUTEemIe6OhVnSywA" name="jButtonRotateLActionPerformed" specification="_MJQGQRUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    //GEN-FIRST:event_jButtonRotateLActionPerformed&#xD;
    IJ.run(imp, &quot;Rotate 90 Degrees Left&quot;, &quot;&quot;);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MJRUYhUTEemIe6OhVnSywA" name="jButtonRotateRActionPerformed" specification="_MJRUYBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    //GEN-FIRST:event_jButtonRotateRActionPerformed&#xD;
    IJ.run(imp, &quot;Rotate 90 Degrees Right&quot;, &quot;&quot;);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MJR7chUTEemIe6OhVnSywA" name="jButtonRotateActionPerformed" specification="_MJR7cBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    //GEN-FIRST:event_jButtonRotateActionPerformed&#xD;
    IJ.run(imp, &quot;Rotate... &quot;, &quot;&quot;);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MJSighUTEemIe6OhVnSywA" name="jButtonInvertActionPerformed" specification="_MJSigBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    //GEN-FIRST:event_jButtonInvertActionPerformed&#xD;
    IJ.run(imp, &quot;Invert&quot;, &quot;&quot;);&#xD;
    m.changeinvertcolour();&#xD;
</body>
              </ownedBehavior>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MJMb4RUTEemIe6OhVnSywA" name="ImageEdit" visibility="public" method="_MJOREhUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MJOREBUTEemIe6OhVnSywA" name="imp"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MJORERUTEemIe6OhVnSywA" name="m" type="_MEzrIBUTEemIe6OhVnSywA"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MJO4IBUTEemIe6OhVnSywA" name="initComponents" visibility="private" method="_MJO4IRUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MJO4IhUTEemIe6OhVnSywA" name="jButtonFlipHActionPerformed" visibility="private" method="_MJPfMBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MJO4IxUTEemIe6OhVnSywA" name="evt"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MJPfMRUTEemIe6OhVnSywA" name="jButtonFlipVActionPerformed" visibility="private" method="_MJQGQBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MJPfMhUTEemIe6OhVnSywA" name="evt"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MJQGQRUTEemIe6OhVnSywA" name="jButtonRotateLActionPerformed" visibility="private" method="_MJQtURUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MJQtUBUTEemIe6OhVnSywA" name="evt"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MJRUYBUTEemIe6OhVnSywA" name="jButtonRotateRActionPerformed" visibility="private" method="_MJRUYhUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MJRUYRUTEemIe6OhVnSywA" name="evt"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MJR7cBUTEemIe6OhVnSywA" name="jButtonRotateActionPerformed" visibility="private" method="_MJR7chUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MJR7cRUTEemIe6OhVnSywA" name="evt"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MJSigBUTEemIe6OhVnSywA" name="jButtonInvertActionPerformed" visibility="private" method="_MJSighUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MJSigRUTEemIe6OhVnSywA" name="evt"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_MJxqsxUTEemIe6OhVnSywA" name="Band" visibility="public">
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MWl-sBUTEemIe6OhVnSywA" name="roi" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MWl-sRUTEemIe6OhVnSywA" name="lane" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MWnz4hUTEemIe6OhVnSywA" name="Band" specification="_MWmlwBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.roi = roi;&#xD;
    this.lane = lane;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MWoa8hUTEemIe6OhVnSywA" name="getRoi" specification="_MWoa8BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    return roi;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MWpCARUTEemIe6OhVnSywA" name="getLane" specification="_MWoa8xUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    return lane;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MWq3MhUTEemIe6OhVnSywA" name="getroifrombands" specification="_MWpCAhUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    Roi[] res = new Roi[bands.length];&#xD;
    for (int i = 0; i &lt; bands.length; i++) {&#xD;
        res[i] = bands[i].getRoi();&#xD;
    }&#xD;
    return res;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MWtTcRUTEemIe6OhVnSywA" name="bandsofalanenumber" specification="_MWq3MxUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    int n = 0;&#xD;
    for (Band b : bands) {&#xD;
        if (b.getLane() == lane) {&#xD;
            n++;&#xD;
        }&#xD;
    }&#xD;
    return n;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MWwWwRUTEemIe6OhVnSywA" name="bandsofalane" specification="_MWuhkBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    int n = bandsofalanenumber(bands, lane);&#xD;
    Band[] res = new Band[n];&#xD;
    int i = 0;&#xD;
    for (Band b : bands) {&#xD;
        if (b.getLane() == lane) {&#xD;
            res[i] = b;&#xD;
            i++;&#xD;
        }&#xD;
    }&#xD;
    return res;&#xD;
</body>
              </ownedBehavior>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MWmlwBUTEemIe6OhVnSywA" name="Band" visibility="public" method="_MWnz4hUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MWnz4BUTEemIe6OhVnSywA" name="roi"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MWnz4RUTEemIe6OhVnSywA" name="lane">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MWoa8BUTEemIe6OhVnSywA" name="getRoi" visibility="public" method="_MWoa8hUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MWoa8RUTEemIe6OhVnSywA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MWoa8xUTEemIe6OhVnSywA" name="getLane" visibility="public" method="_MWpCARUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MWpCABUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MWpCAhUTEemIe6OhVnSywA" name="getroifrombands" visibility="public" isStatic="true" method="_MWq3MhUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MWpCAxUTEemIe6OhVnSywA" direction="return">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MWpCBBUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MWppEBUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MWqQIBUTEemIe6OhVnSywA" name="bands" type="_MJxqsxUTEemIe6OhVnSywA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MWq3MBUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MWq3MRUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MWq3MxUTEemIe6OhVnSywA" name="bandsofalanenumber" visibility="private" isStatic="true" method="_MWtTcRUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MWreQBUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MWreQRUTEemIe6OhVnSywA" name="bands" type="_MJxqsxUTEemIe6OhVnSywA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MWsFUBUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MWssYBUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MWtTcBUTEemIe6OhVnSywA" name="lane">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MWuhkBUTEemIe6OhVnSywA" name="bandsofalane" visibility="public" isStatic="true" method="_MWwWwRUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MWvIoBUTEemIe6OhVnSywA" type="_MJxqsxUTEemIe6OhVnSywA" direction="return">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MWvvsBUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MWvvsRUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MWvvshUTEemIe6OhVnSywA" name="bands" type="_MJxqsxUTEemIe6OhVnSywA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MWvvsxUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MWvvtBUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MWwWwBUTEemIe6OhVnSywA" name="lane">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_MJyRxBUTEemIe6OhVnSywA" name="PreProcessing" visibility="public">
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MffcABUTEemIe6OhVnSywA" name="jButtonBackground" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MffcARUTEemIe6OhVnSywA" name="jButtonCB" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MfgqIBUTEemIe6OhVnSywA" name="jButtonFilter" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_Mfh4QBUTEemIe6OhVnSywA" name="jButtonGamma" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MfjGYBUTEemIe6OhVnSywA" name="jButtonFlipH" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MfkUgBUTEemIe6OhVnSywA" name="jButtonFlipV" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MflioBUTEemIe6OhVnSywA" name="jButtonInvert" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MfmwwBUTEemIe6OhVnSywA" name="jButtonRotate" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_Mfn-4BUTEemIe6OhVnSywA" name="jButtonRotateL" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_Mfol8BUTEemIe6OhVnSywA" name="jButtonRotateR" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MfpNABUTEemIe6OhVnSywA" name="jButtonCrop" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MfqbIBUTEemIe6OhVnSywA" name="jButtonDone" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MfrpQBUTEemIe6OhVnSywA" name="pfr" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MfsQUBUTEemIe6OhVnSywA" name="m" visibility="private" type="_MEzrIBUTEemIe6OhVnSywA" isUnique="false"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MfvToBUTEemIe6OhVnSywA" name="PreProcessing" specification="_Mfs3YBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    super(&quot;Preprocessing&quot;);&#xD;
    showWindow();&#xD;
    this.m = m;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MfwhwBUTEemIe6OhVnSywA" name="showWindow" specification="_Mfv6sBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    jButtonCrop = new javax.swing.JButton();&#xD;
    jButtonCB = new javax.swing.JButton();&#xD;
    jButtonGamma = new javax.swing.JButton();&#xD;
    // jButtonAdjustL = new javax.swing.JButton();&#xD;
    jButtonBackground = new javax.swing.JButton();&#xD;
    jButtonFilter = new javax.swing.JButton();&#xD;
    jButtonFlipH = new javax.swing.JButton();&#xD;
    jButtonFlipV = new javax.swing.JButton();&#xD;
    jButtonRotateL = new javax.swing.JButton();&#xD;
    jButtonRotateR = new javax.swing.JButton();&#xD;
    jButtonRotate = new javax.swing.JButton();&#xD;
    jButtonInvert = new javax.swing.JButton();&#xD;
    jButtonCrop.setText(&quot;Crop&quot;);&#xD;
    jButtonCrop.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButtonCropActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jButtonFlipH.setText(&quot;Flip Horizontally&quot;);&#xD;
    jButtonFlipH.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButtonFlipHActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jButtonFlipV.setText(&quot;Flip Vertically&quot;);&#xD;
    jButtonFlipV.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButtonFlipVActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jButtonRotateL.setText(&quot;Rotate 90Âº Left&quot;);&#xD;
    jButtonRotateL.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButtonRotateLActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jButtonRotateR.setText(&quot;Rotate 90Âº Right&quot;);&#xD;
    jButtonRotateR.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButtonRotateRActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jButtonRotate.setText(&quot;Rotate&quot;);&#xD;
    jButtonRotate.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButtonRotateActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jButtonInvert.setText(&quot;Invert&quot;);&#xD;
    jButtonInvert.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButtonInvertActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jButtonCB.setText(&quot;Brightness/Contrast&quot;);&#xD;
    jButtonCB.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButtonCBActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jButtonGamma.setText(&quot;Gamma Correction&quot;);&#xD;
    jButtonGamma.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButtonGammaActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    /*jButtonAdjustL.setText(&quot;Adjust Linear Histogram&quot;);
        jButtonBackground.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAdjustLActionPerformed(evt);
            }
        });*/&#xD;
    jButtonBackground.setText(&quot;Global Background Removal&quot;);&#xD;
    jButtonBackground.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButtonBackgroundActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jButtonFilter.setText(&quot;Apply Filter&quot;);&#xD;
    jButtonFilter.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButtonFilterActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);&#xD;
    this.setLayout(layout);&#xD;
    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jButtonCrop, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jButtonFlipH, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jButtonFlipV, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jButtonRotateL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jButtonRotateR, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jButtonRotate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jButtonInvert, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jButtonCB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jButtonGamma, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jButtonBackground, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jButtonFilter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));&#xD;
    layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addComponent(jButtonCrop).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButtonFlipH).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButtonFlipV).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButtonRotateL).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButtonRotateR).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButtonRotate).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButtonInvert).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButtonCB).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButtonGamma).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButtonBackground).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButtonFilter)));&#xD;
    setSize(250, 380);&#xD;
    setResizable(false);&#xD;
    show();&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mfy-ABUTEemIe6OhVnSywA" name="jButtonCBActionPerformed" specification="_Mfxv4BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    IJ.run(&quot;Brightness/Contrast...&quot;, &quot;&quot;);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mf1aQBUTEemIe6OhVnSywA" name="jButtonGammaActionPerformed" specification="_MfzlEBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    IJ.run(&quot;Gamma...&quot;, &quot;&quot;);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mf32gBUTEemIe6OhVnSywA" name="jButtonBackgroundActionPerformed" specification="_Mf2oYBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    IJ.run(&quot;Subtract Background...&quot;, &quot;&quot;);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mf5rsRUTEemIe6OhVnSywA" name="jButtonFilterActionPerformed" specification="_Mf4dkBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    ImagePlus imp = IJ.getImage();&#xD;
    Filters f = new Filters();&#xD;
    pfr = new PlugInFilterRunner(f, &quot;Filters&quot;, &quot;&quot;);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mf8H8BUTEemIe6OhVnSywA" name="jButtonFlipHActionPerformed" specification="_Mf7g4BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    ImagePlus imp = IJ.getImage();&#xD;
    IJ.run(imp, &quot;Flip Horizontally&quot;, &quot;&quot;);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mf8vARUTEemIe6OhVnSywA" name="jButtonFlipVActionPerformed" specification="_Mf8H8RUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    ImagePlus imp = IJ.getImage();&#xD;
    IJ.run(imp, &quot;Flip Vertically&quot;, &quot;&quot;);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mf_yUBUTEemIe6OhVnSywA" name="jButtonRotateLActionPerformed" specification="_Mf99IBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    ImagePlus imp = IJ.getImage();&#xD;
    IJ.run(imp, &quot;Rotate 90 Degrees Left&quot;, &quot;&quot;);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MgCOkBUTEemIe6OhVnSywA" name="jButtonRotateRActionPerformed" specification="_MgBAcBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    ImagePlus imp = IJ.getImage();&#xD;
    IJ.run(imp, &quot;Rotate 90 Degrees Right&quot;, &quot;&quot;);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MgEDwRUTEemIe6OhVnSywA" name="jButtonRotateActionPerformed" specification="_MgC1oBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    ImagePlus imp = IJ.getImage();&#xD;
    IJ.run(imp, &quot;Rotate... &quot;, &quot;&quot;);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MgGgABUTEemIe6OhVnSywA" name="jButtonInvertActionPerformed" specification="_MgFR4BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    ImagePlus imp = IJ.getImage();&#xD;
    IJ.run(imp, &quot;Invert&quot;, &quot;&quot;);&#xD;
    m.changeinvertcolour();&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MgHuIBUTEemIe6OhVnSywA" name="jButtonCropActionPerformed" specification="_MgHHEBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    ImagePlus imp = IJ.getImage();&#xD;
    Roi r = imp.getRoi();&#xD;
    IJ.run(imp, &quot;Crop&quot;, &quot;&quot;);&#xD;
</body>
              </ownedBehavior>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_Mfs3YBUTEemIe6OhVnSywA" name="PreProcessing" visibility="public" method="_MfvToBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MfuskBUTEemIe6OhVnSywA" name="m" type="_MEzrIBUTEemIe6OhVnSywA"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_Mfv6sBUTEemIe6OhVnSywA" name="showWindow" visibility="private" method="_MfwhwBUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_Mfxv4BUTEemIe6OhVnSywA" name="jButtonCBActionPerformed" visibility="private" method="_Mfy-ABUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MfyW8BUTEemIe6OhVnSywA" name="evt"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MfzlEBUTEemIe6OhVnSywA" name="jButtonGammaActionPerformed" visibility="private" method="_Mf1aQBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mf0zMBUTEemIe6OhVnSywA" name="evt"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_Mf2oYBUTEemIe6OhVnSywA" name="jButtonBackgroundActionPerformed" visibility="private" method="_Mf32gBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mf3PcBUTEemIe6OhVnSywA" name="evt"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_Mf4dkBUTEemIe6OhVnSywA" name="jButtonFilterActionPerformed" visibility="private" method="_Mf5rsRUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mf5rsBUTEemIe6OhVnSywA" name="evt"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_Mf7g4BUTEemIe6OhVnSywA" name="jButtonFlipHActionPerformed" visibility="private" method="_Mf8H8BUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mf7g4RUTEemIe6OhVnSywA" name="evt"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_Mf8H8RUTEemIe6OhVnSywA" name="jButtonFlipVActionPerformed" visibility="private" method="_Mf8vARUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mf8vABUTEemIe6OhVnSywA" name="evt"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_Mf99IBUTEemIe6OhVnSywA" name="jButtonRotateLActionPerformed" visibility="private" method="_Mf_yUBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mf-kMBUTEemIe6OhVnSywA" name="evt"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MgBAcBUTEemIe6OhVnSywA" name="jButtonRotateRActionPerformed" visibility="private" method="_MgCOkBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MgBngBUTEemIe6OhVnSywA" name="evt"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MgC1oBUTEemIe6OhVnSywA" name="jButtonRotateActionPerformed" visibility="private" method="_MgEDwRUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MgEDwBUTEemIe6OhVnSywA" name="evt"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MgFR4BUTEemIe6OhVnSywA" name="jButtonInvertActionPerformed" visibility="private" method="_MgGgABUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MgF48BUTEemIe6OhVnSywA" name="evt"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MgHHEBUTEemIe6OhVnSywA" name="jButtonCropActionPerformed" visibility="private" method="_MgHuIBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MgHHERUTEemIe6OhVnSywA" name="evt"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_MJy40BUTEemIe6OhVnSywA" name="Options" visibility="public">
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MgN0wBUTEemIe6OhVnSywA" name="jButtonModifyStandards" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MgPp8BUTEemIe6OhVnSywA" name="jButtonMWTable" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MgRfIBUTEemIe6OhVnSywA" name="jButtonSimilarityTable" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MgStQBUTEemIe6OhVnSywA" name="jButtonProtocols" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MgT7YBUTEemIe6OhVnSywA" name="menu" visibility="private" type="_MEzrIBUTEemIe6OhVnSywA" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MgVwkBUTEemIe6OhVnSywA" name="mwtable" visibility="private" isUnique="false"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MgZa8BUTEemIe6OhVnSywA" name="Options" specification="_MgW-sBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    super(&quot;Options&quot;);&#xD;
    this.menu = menu;&#xD;
    showWindow();&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mgb3MBUTEemIe6OhVnSywA" name="setMenu" specification="_MgapEBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.menu = menu;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MgdFUBUTEemIe6OhVnSywA" name="showWindow" specification="_MgceQBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    jButtonModifyStandards = new javax.swing.JButton();&#xD;
    jButtonModifyStandards.setText(&quot;Edit Standards&quot;);&#xD;
    jButtonModifyStandards.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButtonModifyStandardsActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jButtonMWTable = new javax.swing.JButton();&#xD;
    jButtonMWTable.setText(&quot;Molecular Weight Table&quot;);&#xD;
    jButtonMWTable.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButtonMWTableActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jButtonSimilarityTable = new javax.swing.JButton();&#xD;
    jButtonSimilarityTable.setText(&quot;Similarity Table&quot;);&#xD;
    jButtonSimilarityTable.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButtonSimilarityTableActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jButtonProtocols = new javax.swing.JButton();&#xD;
    jButtonProtocols.setText(&quot;Edit Standards&quot;);&#xD;
    jButtonProtocols.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButtonProtocolsActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    /* jButtonrflines = new javax.swing.JButton(); 
         jButtonrflines.setText(&quot;Calibrate using rf-lines&quot;);
         jButtonrflines.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
         jButtonrflinesActionPerformed(evt);
         }
         });
        
        
        
         jButton3DViewer = new javax.swing.JButton(); 
         jButton3DViewer.setText(&quot;3D Viewer&quot;);
         jButton3DViewer.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
         jButton3DViewerActionPerformed(evt);
         }
         });*/&#xD;
    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);&#xD;
    this.setLayout(layout);&#xD;
    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jButtonModifyStandards, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jButtonMWTable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jButtonSimilarityTable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jButtonProtocols, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));&#xD;
    layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addComponent(jButtonModifyStandards).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButtonMWTable).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButtonSimilarityTable).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButtonProtocols).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)));&#xD;
    setSize(250, 122);&#xD;
    setResizable(false);&#xD;
    show();&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MggIoBUTEemIe6OhVnSywA" name="jButtonProtocolsActionPerformed" specification="_Mge6gBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    GenericDialog gd = new GenericDialog(&quot;Edit Protocols&quot;);&#xD;
    Protocols p = new Protocols();&#xD;
    p.addprotocols();&#xD;
    gd.add(p);&#xD;
    gd.addMessage(&quot;&quot;);&#xD;
    gd.showDialog();&#xD;
    if (gd.wasCanceled()) {&#xD;
        gd.dispose();&#xD;
    }&#xD;
    if (gd.wasOKed()) {&#xD;
        gd.dispose();&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mgik4BUTEemIe6OhVnSywA" name="jButtonModifyStandardsActionPerformed" specification="_MghWwBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    GenericDialog gd = new GenericDialog(&quot;Edit standards&quot;);&#xD;
    ModifyStandards ms = new ModifyStandards();&#xD;
    ms.addstandards();&#xD;
    gd.add(ms);&#xD;
    gd.addMessage(&quot;&quot;);&#xD;
    gd.showDialog();&#xD;
    if (gd.wasCanceled()) {&#xD;
        gd.dispose();&#xD;
    }&#xD;
    if (gd.wasOKed()) {&#xD;
        gd.dispose();&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MglBIBUTEemIe6OhVnSywA" name="jButtonMWTableActionPerformed" specification="_MgjzABUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    if (!menu.normalisation) {&#xD;
        IJ.error(&quot;You have not performed the normalisation step.&quot;);&#xD;
    } else {&#xD;
        Lane[] lanes = menu.externalcomputestdlanes();&#xD;
        if (mwtable == null) {&#xD;
            mwtable = new ResultsTable();&#xD;
        } else {&#xD;
            mwtable.show(&quot;Molecular Weight Table&quot;);&#xD;
        }&#xD;
        for (int i = 0; i &lt; lanes.length; i++) {&#xD;
            mwtable.setHeading(i, lanes[i].getName());&#xD;
        }&#xD;
        int bl = biggerlane(lanes);&#xD;
        for (int i = 0; i &lt; bl; i++) {&#xD;
            mwtable.incrementCounter();&#xD;
        }&#xD;
        for (Lane l : lanes) {&#xD;
            double[] stds = l.getStdpositionbands();&#xD;
            for (int i = 0; i &lt; stds.length; i++) {&#xD;
                mwtable.setValue(l.getName(), i, stds[i]);&#xD;
            }&#xD;
            for (int i = stds.length; i &lt; bl; i++) {&#xD;
                mwtable.setValue(l.getName(), i, &quot;-&quot;);&#xD;
            }&#xD;
        }&#xD;
        mwtable.show(&quot;Molecular Weight Table&quot;);&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mgm2URUTEemIe6OhVnSywA" name="jButtonSimilarityTableActionPerformed" specification="_MgmPQBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    SimilarityTable st = new SimilarityTable(menu.similaritytable, menu.similaritymethod, lanesnames(menu.selectedlanes));&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mgp5oBUTEemIe6OhVnSywA" name="jButtonrflinesActionPerformed" specification="_MgoEcBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    if (!menu.normalisation) {&#xD;
        IJ.error(&quot;You have not performed the normalisation step.&quot;);&#xD;
    } else {&#xD;
        String[][] data = extractbandnamesfromlanes(menu.finallanes);&#xD;
        paintrflines(data);&#xD;
        rftable rf = new rftable(data, menu, WindowManager.getCurrentImage());&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MguLEBUTEemIe6OhVnSywA" name="extractbandnamesfromlanes" specification="_MgqgsBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    ArrayList&lt;double[]> lanes = new ArrayList&lt;double[]>();&#xD;
    // We add the mw positions of each lane to the arraylist lanes&#xD;
    for (int i = 0; i &lt; finallanes.length; i++) {&#xD;
        lanes.add(finallanes[i].getStdpositionbands());&#xD;
    }&#xD;
    ArrayList&lt;ArrayList&lt;String>> res = new ArrayList&lt;ArrayList&lt;String>>();&#xD;
    ArrayList&lt;ArrayList&lt;Integer>> usedindexes = new ArrayList&lt;ArrayList&lt;Integer>>();&#xD;
    for (int i = 0; i &lt; finallanes.length; i++) {&#xD;
        res.add(new ArrayList&lt;String>());&#xD;
        usedindexes.add(new ArrayList&lt;Integer>());&#xD;
    }&#xD;
    /// We obtain the tolerance value&#xD;
    int[] indexes = indexesstandardlanes(finallanes);&#xD;
    double[] stds = finallanes[indexes[0]].getStdpositionbands();&#xD;
    double tolerance = (stds[0] - stds[stds.length - 1]) * 0.03;&#xD;
    // We create an array that keeps track of the current band position&#xD;
    // in each lane&#xD;
    int[] bandposition = initarrayones(finallanes.length);&#xD;
    double val = takefirstmaximum(lanes);&#xD;
    int pos = takefirstmaximumposition(lanes);&#xD;
    while (val != -10000) {&#xD;
        // We either go to the left of the max position&#xD;
        for (int j = pos; j >= 0; j--) {&#xD;
            if (lanes.get(j) == null) {&#xD;
                res.get(j).add(&quot;&quot;);&#xD;
            } else if (val - tolerance &lt; lanes.get(j)[0] &amp;&amp; lanes.get(j)[0] &lt; val + tolerance) {&#xD;
                val = lanes.get(j)[0];&#xD;
                // Add the band to the result &#xD;
                res.get(j).add(&quot;Band &quot; + bandposition[j]);&#xD;
                // Remove the first element of the lane&#xD;
                lanes.set(j, removefirstelementarray(lanes.get(j)));&#xD;
                // Increase by 1 the band position&#xD;
                bandposition[j] = bandposition[j] + 1;&#xD;
            } else {&#xD;
                res.get(j).add(&quot;&quot;);&#xD;
            }&#xD;
        }&#xD;
        // or to the right&#xD;
        for (int j = pos + 1; j &lt; lanes.size(); j++) {&#xD;
            if (lanes.get(j) == null) {&#xD;
                res.get(j).add(&quot;&quot;);&#xD;
            } else if (val - tolerance &lt; lanes.get(j)[0] &amp;&amp; lanes.get(j)[0] &lt; val + tolerance) {&#xD;
                val = lanes.get(j)[0];&#xD;
                // Add the band to the result &#xD;
                res.get(j).add(&quot;Band &quot; + bandposition[j]);&#xD;
                // Remove the first element of the lane&#xD;
                lanes.set(j, removefirstelementarray(lanes.get(j)));&#xD;
                // Increase by 1 the band position&#xD;
                bandposition[j] = bandposition[j] + 1;&#xD;
            } else {&#xD;
                res.get(j).add(&quot;&quot;);&#xD;
            }&#xD;
        }&#xD;
        val = takefirstmaximum(lanes);&#xD;
        pos = takefirstmaximumposition(lanes);&#xD;
    }&#xD;
    return matrixconversion(res);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mg0RsBUTEemIe6OhVnSywA" name="matrixconversion" specification="_MgwnUBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    String[][] res = new String[data.get(0).size()][data.size()];&#xD;
    for (int i = 0; i &lt; data.size(); i++) {&#xD;
        for (int j = 0; j &lt; data.get(0).size(); j++) {&#xD;
            res[j][i] = data.get(i).get(j);&#xD;
        }&#xD;
    }&#xD;
    return res;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mg2t8BUTEemIe6OhVnSywA" name="getbiggerarray" specification="_Mg1f0BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    int max = 0;&#xD;
    for (int i = 0; i &lt; lanes.size(); i++) {&#xD;
        if (max &lt; lanes.get(i).length) {&#xD;
            max = lanes.get(i).length;&#xD;
        }&#xD;
    }&#xD;
    return max;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mg5xQBUTEemIe6OhVnSywA" name="initarrayones" specification="_Mg3VABUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    int[] res = new int[size];&#xD;
    for (int i = 0; i &lt; size; i++) {&#xD;
        res[i] = 1;&#xD;
    }&#xD;
    return res;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mg80kRUTEemIe6OhVnSywA" name="takefirstmaximum" specification="_Mg6YUBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    double max = -10000;&#xD;
    for (int i = 0; i &lt; lanes.size(); i++) {&#xD;
        if (lanes.get(i) == null || lanes.get(i).length == 0) {&#xD;
        } else {&#xD;
            if (max &lt; lanes.get(i)[0]) {&#xD;
                max = lanes.get(i)[0];&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    return max;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mg_34RUTEemIe6OhVnSywA" name="takefirstmaximumposition" specification="_Mg-CsBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    int max = -10000;&#xD;
    int pos = -1;&#xD;
    for (int i = 0; i &lt; lanes.size(); i++) {&#xD;
        if (lanes.get(i) == null || lanes.get(i).length == 0) {&#xD;
        } else {&#xD;
            if (max &lt; lanes.get(i)[0]) {&#xD;
                pos = i;&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    return pos;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MhDiQRUTEemIe6OhVnSywA" name="removefirstelementarray" specification="_MhBGABUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    if (array == null || array.length == 0) {&#xD;
        return array;&#xD;
    } else if (array.length == 1) {&#xD;
        return null;&#xD;
    } else {&#xD;
        double[] res = new double[array.length - 1];&#xD;
        for (int i = 1; i &lt; array.length; i++) {&#xD;
            res[i - 1] = array[i];&#xD;
        }&#xD;
        return res;&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MhHMoBUTEemIe6OhVnSywA" name="paintrflines" specification="_MhEwYBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    ImagePlus imp = WindowManager.getCurrentImage();&#xD;
    Overlay o = imp.getOverlay();&#xD;
    for (int i = 0; i &lt; data.length; i++) {&#xD;
        ArrayList&lt;Integer> xpoints = new ArrayList&lt;Integer>();&#xD;
        ArrayList&lt;Integer> ypoints = new ArrayList&lt;Integer>();&#xD;
        for (int j = 0; j &lt; data[i].length; j++) {&#xD;
            if (data[i][j] != &quot;&quot;) {&#xD;
                int k = Integer.parseInt(data[i][j].substring(5));&#xD;
                PointRoi p = new PointRoi(menu.finallanes[j].getRoi().getBounds().x + (menu.finallanes[j].getRoi().getBounds().width / 2), menu.finallanes[j].getPositionbands()[k - 1]);&#xD;
                imp.setRoi(p);&#xD;
                IJ.run(&quot;Add Selection...&quot;);&#xD;
                xpoints.add(menu.finallanes[j].getRoi().getBounds().x + (menu.finallanes[j].getRoi().getBounds().width / 2));&#xD;
                ypoints.add(menu.finallanes[j].getPositionbands()[k - 1]);&#xD;
            }&#xD;
        }&#xD;
        PolygonRoi polygonRoi = new PolygonRoi(transformintarraylisttoarray(xpoints), transformintarraylisttoarray(ypoints), xpoints.size(), Roi.POLYLINE);&#xD;
        o = imp.getOverlay();&#xD;
        o.addElement(polygonRoi);&#xD;
    }&#xD;
    IJ.run(&quot;Show Overlay&quot;, &quot;&quot;);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MhJo4BUTEemIe6OhVnSywA" name="transformintarraylisttoarray" specification="_MhHzsBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    int[] res = new int[a.size()];&#xD;
    for (int i = 0; i &lt; a.size(); i++) {&#xD;
        res[i] = a.get(i);&#xD;
    }&#xD;
    return res;&#xD;
</body>
              </ownedBehavior>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MgW-sBUTEemIe6OhVnSywA" name="Options" visibility="public" method="_MgZa8BUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MgYz4BUTEemIe6OhVnSywA" name="menu" type="_MEzrIBUTEemIe6OhVnSywA"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MgapEBUTEemIe6OhVnSywA" name="setMenu" visibility="public" method="_Mgb3MBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MgbQIBUTEemIe6OhVnSywA" name="menu" type="_MEzrIBUTEemIe6OhVnSywA"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MgceQBUTEemIe6OhVnSywA" name="showWindow" visibility="private" method="_MgdFUBUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_Mge6gBUTEemIe6OhVnSywA" name="jButtonProtocolsActionPerformed" visibility="private" method="_MggIoBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MgfhkBUTEemIe6OhVnSywA" name="evt"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MghWwBUTEemIe6OhVnSywA" name="jButtonModifyStandardsActionPerformed" visibility="private" method="_Mgik4BUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mgh90BUTEemIe6OhVnSywA" name="evt"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MgjzABUTEemIe6OhVnSywA" name="jButtonMWTableActionPerformed" visibility="private" method="_MglBIBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MgkaEBUTEemIe6OhVnSywA" name="evt"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MgmPQBUTEemIe6OhVnSywA" name="jButtonSimilarityTableActionPerformed" visibility="private" method="_Mgm2URUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mgm2UBUTEemIe6OhVnSywA" name="evt"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MgoEcBUTEemIe6OhVnSywA" name="jButtonrflinesActionPerformed" visibility="private" method="_Mgp5oBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MgpSkBUTEemIe6OhVnSywA" name="evt"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MgqgsBUTEemIe6OhVnSywA" name="extractbandnamesfromlanes" visibility="private" method="_MguLEBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MgrHwBUTEemIe6OhVnSywA" direction="return">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MgsV4BUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MgsV4RUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mgs88BUTEemIe6OhVnSywA" name="finallanes" type="_MGiwgRUTEemIe6OhVnSywA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MgtkABUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MgtkARUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MgwnUBUTEemIe6OhVnSywA" name="matrixconversion" visibility="private" method="_Mg0RsBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mgx1cBUTEemIe6OhVnSywA" direction="return">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MgycgBUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MgycgRUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MgzDkBUTEemIe6OhVnSywA" name="data">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MgzqoBUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MgzqoRUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_Mg1f0BUTEemIe6OhVnSywA" name="getbiggerarray" visibility="private" method="_Mg2t8BUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mg1f0RUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mg1f0hUTEemIe6OhVnSywA" name="lanes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_KgG0cPaLEeW5KOK8aDMdgA"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Mg2G4BUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Mg2G4RUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_Mg3VABUTEemIe6OhVnSywA" name="initarrayones" visibility="private" method="_Mg5xQBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mg38EBUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Mg4jIBUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Mg4jIRUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mg5KMBUTEemIe6OhVnSywA" name="size">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_Mg6YUBUTEemIe6OhVnSywA" name="takefirstmaximum" visibility="private" method="_Mg80kRUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mg6_YBUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mg7mcBUTEemIe6OhVnSywA" name="lanes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_KgG0cPaLEeW5KOK8aDMdgA"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Mg8NgBUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Mg80kBUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_Mg-CsBUTEemIe6OhVnSywA" name="takefirstmaximumposition" visibility="private" method="_Mg_34RUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mg-pwBUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mg_Q0BUTEemIe6OhVnSywA" name="lanes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_KgG0cPaLEeW5KOK8aDMdgA"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Mg_Q0RUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Mg_34BUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MhBGABUTEemIe6OhVnSywA" name="removefirstelementarray" visibility="private" method="_MhDiQRUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MhBGARUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MhBtEBUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MhCUIBUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MhCUIRUTEemIe6OhVnSywA" name="array">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MhC7MBUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MhDiQBUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MhEwYBUTEemIe6OhVnSywA" name="paintrflines" visibility="public" method="_MhHMoBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MhFXcBUTEemIe6OhVnSywA" name="data">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MhF-gBUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MhGlkBUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MhHzsBUTEemIe6OhVnSywA" name="transformintarraylisttoarray" visibility="private" method="_MhJo4BUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MhIawBUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MhIawRUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MhIawhUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MhIawxUTEemIe6OhVnSywA" name="a">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_ILxaUPaLEeW5KOK8aDMdgA"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MhJB0BUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MhJB0RUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_MKLTUBUTEemIe6OhVnSywA" name="ClassNotFoundException"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_MMSMIBUTEemIe6OhVnSywA" name="WaitMessage" visibility="public">
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MMTaQRUTEemIe6OhVnSywA" name="jLabel1" visibility="private" isUnique="false"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MMV2gRUTEemIe6OhVnSywA" name="WaitMessage" specification="_MMUBUBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    super(title);&#xD;
    showWindow();&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MMWdkBUTEemIe6OhVnSywA" name="showWindow" specification="_MMV2ghUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    jLabel1 = new javax.swing.JLabel();&#xD;
    jLabel1.setText(&quot;Please, wait...&quot;);&#xD;
    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);&#xD;
    this.setLayout(layout);&#xD;
    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)));&#xD;
    layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addComponent(jLabel1).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    setSize(200, 41);&#xD;
    setResizable(false);&#xD;
    show();&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MMWdkhUTEemIe6OhVnSywA" name="close" specification="_MMWdkRUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    super.close();&#xD;
</body>
              </ownedBehavior>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MMUBUBUTEemIe6OhVnSywA" name="WaitMessage" visibility="public" method="_MMV2gRUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MMV2gBUTEemIe6OhVnSywA" name="title"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MMV2ghUTEemIe6OhVnSywA" name="showWindow" visibility="private" method="_MMWdkBUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MMWdkRUTEemIe6OhVnSywA" name="close" visibility="public" method="_MMWdkhUTEemIe6OhVnSywA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_MV2X0BUTEemIe6OhVnSywA" name="ColourPicker" visibility="public">
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MV4NABUTEemIe6OhVnSywA" name="BLUE" visibility="public" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MV40EBUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>0</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MV5bIBUTEemIe6OhVnSywA" name="RED" visibility="public" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MV6CMBUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>1</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MV6CMRUTEemIe6OhVnSywA" name="GREEN" visibility="public" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MV6CMhUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>2</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MV6CMxUTEemIe6OhVnSywA" name="MAGENTA" visibility="public" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MV6CNBUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>3</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MV6CNRUTEemIe6OhVnSywA" name="CYAN" visibility="public" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MV6CNhUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>4</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MV6CNxUTEemIe6OhVnSywA" name="YELLOW" visibility="public" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MV6pQBUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>5</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MV6pQRUTEemIe6OhVnSywA" name="ORANGE" visibility="public" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MV6pQhUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>6</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MV6pQxUTEemIe6OhVnSywA" name="FLAGS" visibility="private" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MV6pRBUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>DOES_ALL | SUPPORTS_MASKING | KEEP_PREVIEW | FINAL_PROCESSING</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MV6pRRUTEemIe6OhVnSywA" name="colour" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MV6pRhUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>0</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MV6pRxUTEemIe6OhVnSywA" name="nPasses" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MV7QUBUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>1</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MV7QURUTEemIe6OhVnSywA" name="pfr" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MV7QUhUTEemIe6OhVnSywA" name="imp" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MV7QUxUTEemIe6OhVnSywA" name="rois" visibility="private" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MV7QVBUTEemIe6OhVnSywA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MV73YBUTEemIe6OhVnSywA" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MV73YRUTEemIe6OhVnSywA" name="bm" visibility="private" type="_MEgJIBUTEemIe6OhVnSywA" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MV73YhUTEemIe6OhVnSywA" name="c" visibility="private" isUnique="false">
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MV8ecBUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>Color.BLUE</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MV9skBUTEemIe6OhVnSywA" name="originalcolour" visibility="private" isUnique="false"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MWClEBUTEemIe6OhVnSywA" name="ColourPicker" specification="_MV-6sBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.rois = rois;&#xD;
    this.bm = bm;&#xD;
    originalcolour = bm.getColour();&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MWFoYRUTEemIe6OhVnSywA" name="showDialog" specification="_MWDzMBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    GenericDialog gd = new GenericDialog(command);&#xD;
    String[] colours = { &quot;blue&quot;, &quot;red&quot;, &quot;green&quot;, &quot;magenta&quot;, &quot;cyan&quot;, &quot;yellow&quot;, &quot;orange&quot; };&#xD;
    gd.addChoice(&quot;Colour:&quot;, colours, &quot;blue&quot;);&#xD;
    this.imp = imp;&#xD;
    this.pfr = pfr;&#xD;
    gd.addPreviewCheckbox(pfr);&#xD;
    gd.addDialogListener(this);&#xD;
    ((Checkbox) gd.getCheckboxes().elementAt(0)).setState(true);&#xD;
    // input by the user (or macro) happens here&#xD;
    gd.showDialog();&#xD;
    if (gd.wasCanceled()) {&#xD;
        for (Roi r : rois) {&#xD;
            r.setFillColor(originalcolour);&#xD;
        }&#xD;
        return DONE;&#xD;
    }&#xD;
    if (gd.wasOKed())&#xD;
        bm.setColour(c);&#xD;
    IJ.register(this.getClass());&#xD;
    return IJ.setupDialog(imp, FLAGS);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MWGPcRUTEemIe6OhVnSywA" name="setNPasses" specification="_MWFoYhUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.nPasses = nPasses;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MWIrsRUTEemIe6OhVnSywA" name="setup" specification="_MWG2gBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.imp = imp;&#xD;
    return FLAGS;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MWJ50BUTEemIe6OhVnSywA" name="run" specification="_MWJSwBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    switch(colour) {&#xD;
        case BLUE:&#xD;
            c = Color.BLUE;&#xD;
            break;&#xD;
        case RED:&#xD;
            c = Color.RED;&#xD;
            break;&#xD;
        case GREEN:&#xD;
            c = Color.GREEN;&#xD;
            break;&#xD;
        case MAGENTA:&#xD;
            c = Color.MAGENTA;&#xD;
            break;&#xD;
        case CYAN:&#xD;
            c = Color.CYAN;&#xD;
            break;&#xD;
        case YELLOW:&#xD;
            c = Color.YELLOW;&#xD;
            break;&#xD;
        case ORANGE:&#xD;
            c = Color.ORANGE;&#xD;
            break;&#xD;
        default:&#xD;
            c = Color.BLUE;&#xD;
            break;&#xD;
    }&#xD;
    for (Roi r : rois) {&#xD;
        r.setFillColor(c);&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MWNkMRUTEemIe6OhVnSywA" name="dialogItemChanged" specification="_MWLvABUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    colour = gd.getNextChoiceIndex();&#xD;
    return true;&#xD;
</body>
              </ownedBehavior>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MV-6sBUTEemIe6OhVnSywA" name="ColourPicker" visibility="public" method="_MWClEBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MWAI0RUTEemIe6OhVnSywA" name="rois">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MWAv4BUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MWBW8BUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MWB-ABUTEemIe6OhVnSywA" name="bm" type="_MEgJIBUTEemIe6OhVnSywA"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MWDzMBUTEemIe6OhVnSywA" name="showDialog" visibility="public" method="_MWFoYRUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MWDzMRUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MWDzMhUTEemIe6OhVnSywA" name="imp"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MWFBUBUTEemIe6OhVnSywA" name="command"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MWFoYBUTEemIe6OhVnSywA" name="pfr"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MWFoYhUTEemIe6OhVnSywA" name="setNPasses" visibility="public" method="_MWGPcRUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MWGPcBUTEemIe6OhVnSywA" name="nPasses">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MWG2gBUTEemIe6OhVnSywA" name="setup" visibility="public" method="_MWIrsRUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MWG2gRUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MWHdkBUTEemIe6OhVnSywA" name="arg"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MWIrsBUTEemIe6OhVnSywA" name="imp"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MWJSwBUTEemIe6OhVnSywA" name="run" visibility="public" method="_MWJ50BUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MWJSwRUTEemIe6OhVnSywA" name="ip"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MWLvABUTEemIe6OhVnSywA" name="dialogItemChanged" visibility="public" method="_MWNkMRUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MWLvARUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MWM9IBUTEemIe6OhVnSywA" name="gd"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MWNkMBUTEemIe6OhVnSywA" name="e"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_MWOyUBUTEemIe6OhVnSywA" name="LaneInfo" visibility="public">
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MWQAcBUTEemIe6OhVnSywA" name="genus" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MWQngBUTEemIe6OhVnSywA" name="species" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MWR1oBUTEemIe6OhVnSywA" name="country" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MWScsBUTEemIe6OhVnSywA" name="MLST" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MWTDwBUTEemIe6OhVnSywA" name="StrainNumber" visibility="private" isUnique="false"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MWX8QRUTEemIe6OhVnSywA" name="LaneInfo" specification="_MWU48BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.genus = genus;&#xD;
    this.species = species;&#xD;
    this.country = country;&#xD;
    this.MLST = MLST;&#xD;
    this.StrainNumber = StrainNumber;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MWZxcBUTEemIe6OhVnSywA" name="LaneInfo" specification="_MWX8QhUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.genus = &quot;&quot;;&#xD;
    this.species = &quot;&quot;;&#xD;
    this.country = &quot;&quot;;&#xD;
    this.MLST = &quot;&quot;;&#xD;
    this.StrainNumber = &quot;&quot;;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MWcNsBUTEemIe6OhVnSywA" name="getGenus" specification="_MWa_kBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    return genus;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MWdb0BUTEemIe6OhVnSywA" name="setGenus" specification="_MWc0wBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.genus = genus;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MWf4EBUTEemIe6OhVnSywA" name="getSpecies" specification="_MWep8BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    return species;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MWhGMRUTEemIe6OhVnSywA" name="setSpecies" specification="_MWgfIBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.species = species;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MWhtQRUTEemIe6OhVnSywA" name="getCountry" specification="_MWhGMhUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    return country;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MWhtRBUTEemIe6OhVnSywA" name="setCountry" specification="_MWhtQhUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.country = country;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MWiUUBUTEemIe6OhVnSywA" name="getMLST" specification="_MWhtRRUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    return MLST;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MWiUUxUTEemIe6OhVnSywA" name="setMLST" specification="_MWiUURUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.MLST = MLST;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MWi7YRUTEemIe6OhVnSywA" name="getStrainNumber" specification="_MWiUVBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    return StrainNumber;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MWi7ZBUTEemIe6OhVnSywA" name="setStrainNumber" specification="_MWi7YhUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.StrainNumber = StrainNumber;&#xD;
</body>
              </ownedBehavior>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MWU48BUTEemIe6OhVnSywA" name="LaneInfo" visibility="public" method="_MWX8QRUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MWWHEBUTEemIe6OhVnSywA" name="genus"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MWXVMBUTEemIe6OhVnSywA" name="species"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MWXVMRUTEemIe6OhVnSywA" name="country"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MWXVMhUTEemIe6OhVnSywA" name="MLST"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MWX8QBUTEemIe6OhVnSywA" name="StrainNumber"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MWX8QhUTEemIe6OhVnSywA" name="LaneInfo" visibility="public" method="_MWZxcBUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MWa_kBUTEemIe6OhVnSywA" name="getGenus" visibility="public" method="_MWcNsBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MWbmoBUTEemIe6OhVnSywA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MWc0wBUTEemIe6OhVnSywA" name="setGenus" visibility="public" method="_MWdb0BUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MWc0wRUTEemIe6OhVnSywA" name="genus"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MWep8BUTEemIe6OhVnSywA" name="getSpecies" visibility="public" method="_MWf4EBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MWfRABUTEemIe6OhVnSywA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MWgfIBUTEemIe6OhVnSywA" name="setSpecies" visibility="public" method="_MWhGMRUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MWhGMBUTEemIe6OhVnSywA" name="species"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MWhGMhUTEemIe6OhVnSywA" name="getCountry" visibility="public" method="_MWhtQRUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MWhtQBUTEemIe6OhVnSywA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MWhtQhUTEemIe6OhVnSywA" name="setCountry" visibility="public" method="_MWhtRBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MWhtQxUTEemIe6OhVnSywA" name="country"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MWhtRRUTEemIe6OhVnSywA" name="getMLST" visibility="public" method="_MWiUUBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MWhtRhUTEemIe6OhVnSywA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MWiUURUTEemIe6OhVnSywA" name="setMLST" visibility="public" method="_MWiUUxUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MWiUUhUTEemIe6OhVnSywA" name="MLST"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MWiUVBUTEemIe6OhVnSywA" name="getStrainNumber" visibility="public" method="_MWi7YRUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MWi7YBUTEemIe6OhVnSywA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MWi7YhUTEemIe6OhVnSywA" name="setStrainNumber" visibility="public" method="_MWi7ZBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MWi7YxUTEemIe6OhVnSywA" name="StrainNumber"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_MW3EcBUTEemIe6OhVnSywA" name="Dendogram" visibility="public">
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MW5gsBUTEemIe6OhVnSywA" name="imp" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MW6HwBUTEemIe6OhVnSywA" name="SINGLE" visibility="private" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MW6HwRUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>0</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MW6HwhUTEemIe6OhVnSywA" name="COMPLETE" visibility="private" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MW6HwxUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>1</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MW6HxBUTEemIe6OhVnSywA" name="UPGMA" visibility="private" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MW6HxRUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>2</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MW6u0BUTEemIe6OhVnSywA" name="MEAN" visibility="private" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MW6u0RUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>3</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MW6u0hUTEemIe6OhVnSywA" name="UPGMC" visibility="private" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MW6u0xUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>4</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MW6u1BUTEemIe6OhVnSywA" name="WARD" visibility="private" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MW6u1RUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>5</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MW6u1hUTEemIe6OhVnSywA" name="NEIGHBOR_JOINING" visibility="private" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MW6u1xUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>7</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MW7V4BUTEemIe6OhVnSywA" name="Dice" visibility="private" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MW7V4RUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>0</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MW7V4hUTEemIe6OhVnSywA" name="Jacckard" visibility="private" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MW7V4xUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>1</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MW7V5BUTEemIe6OhVnSywA" name="Jeffrey" visibility="private" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MW7V5RUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>2</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MW788BUTEemIe6OhVnSywA" name="Ochiai" visibility="private" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MW788RUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>3</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MW788hUTEemIe6OhVnSywA" name="Bandd" visibility="private" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MW788xUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>4</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MW789BUTEemIe6OhVnSywA" name="Pearson" visibility="private" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MW789RUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>5</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MW789hUTEemIe6OhVnSywA" name="Cosine" visibility="private" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MW9yIBUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>6</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MW-ZMBUTEemIe6OhVnSywA" name="Euclidean" visibility="private" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MW_AQBUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>7</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MW_AQRUTEemIe6OhVnSywA" name="Manhattan" visibility="private" isLeaf="true" isStatic="true" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MW_AQhUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>8</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MW_AQxUTEemIe6OhVnSywA" name="similarity" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MW_nUBUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>Pearson</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MW_nURUTEemIe6OhVnSywA" name="clustering" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MW_nUhUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>UPGMA</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MXA1cBUTEemIe6OhVnSywA" name="output" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MXBcgBUTEemIe6OhVnSywA" name="defaultValue">
                  <language>JAVA</language>
                  <body>1</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MXmrUhUTEemIe6OhVnSywA" name="Clustergroup" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MXnSYBUTEemIe6OhVnSywA" name="JRBanddiference" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MXnSYRUTEemIe6OhVnSywA" name="Similaritygroup" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MXn5cBUTEemIe6OhVnSywA" name="buttonGroup1" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MXn5cRUTEemIe6OhVnSywA" name="jLabel1" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MXn5chUTEemIe6OhVnSywA" name="jLabel4" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MXoggBUTEemIe6OhVnSywA" name="jPanel1" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MXpHkBUTEemIe6OhVnSywA" name="jPanel2" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MXqVsBUTEemIe6OhVnSywA" name="jPanel3" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MXq8wBUTEemIe6OhVnSywA" name="jPanel4" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MXq8wRUTEemIe6OhVnSywA" name="jPanel5" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MXsK4BUTEemIe6OhVnSywA" name="jRComplete" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MXtZABUTEemIe6OhVnSywA" name="jRCosine" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MXvOMBUTEemIe6OhVnSywA" name="jRDice" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MXv1QBUTEemIe6OhVnSywA" name="jREuclidean" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MXxDYBUTEemIe6OhVnSywA" name="jRJaccard" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MXyRgBUTEemIe6OhVnSywA" name="jRJeffrey" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MXzfoBUTEemIe6OhVnSywA" name="jRManhattan" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MX0twBUTEemIe6OhVnSywA" name="jRMean" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MX174BUTEemIe6OhVnSywA" name="jROchiai" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MX3KABUTEemIe6OhVnSywA" name="jRPearson" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MX4YIBUTEemIe6OhVnSywA" name="jRSingle" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MX4_MBUTEemIe6OhVnSywA" name="jRUPGMA" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MX4_MRUTEemIe6OhVnSywA" name="jRUPGMC" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MX5mQBUTEemIe6OhVnSywA" name="jRWard" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MX5mQRUTEemIe6OhVnSywA" name="jRadioDendrogram" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MX6NUBUTEemIe6OhVnSywA" name="jRadioDendrogramBands" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MX6NURUTEemIe6OhVnSywA" name="jRadioDendrogramImageBands" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MX6NUhUTEemIe6OhVnSywA" name="jRadioDendrogramImages" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MX60YBUTEemIe6OhVnSywA" name="txtTolerance" visibility="private" isUnique="false"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MXEf0RUTEemIe6OhVnSywA" name="Dendogram" specification="_MXCqoBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.imp = imp;&#xD;
    initComponents();&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MXEf1BUTEemIe6OhVnSywA" name="getSimilarity" specification="_MXEf0hUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    return similarity;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MXFG4hUTEemIe6OhVnSywA" name="getClustering" specification="_MXFG4BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    return clustering;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MXFG5RUTEemIe6OhVnSywA" name="getTolerance" specification="_MXFG4xUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    return Integer.parseInt(txtTolerance.getText());&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MXFt8hUTEemIe6OhVnSywA" name="getOutput" specification="_MXFt8BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    return output;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MXHjIBUTEemIe6OhVnSywA" name="initComponents" specification="_MXGVABUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    Similaritygroup = new javax.swing.ButtonGroup();&#xD;
    Clustergroup = new javax.swing.ButtonGroup();&#xD;
    buttonGroup1 = new javax.swing.ButtonGroup();&#xD;
    jPanel1 = new javax.swing.JPanel();&#xD;
    jRUPGMA = new javax.swing.JRadioButton();&#xD;
    jRWard = new javax.swing.JRadioButton();&#xD;
    jRUPGMC = new javax.swing.JRadioButton();&#xD;
    jRSingle = new javax.swing.JRadioButton();&#xD;
    jRComplete = new javax.swing.JRadioButton();&#xD;
    jRMean = new javax.swing.JRadioButton();&#xD;
    jPanel2 = new javax.swing.JPanel();&#xD;
    jPanel3 = new javax.swing.JPanel();&#xD;
    jRPearson = new javax.swing.JRadioButton();&#xD;
    jRCosine = new javax.swing.JRadioButton();&#xD;
    jREuclidean = new javax.swing.JRadioButton();&#xD;
    jRManhattan = new javax.swing.JRadioButton();&#xD;
    jPanel4 = new javax.swing.JPanel();&#xD;
    jRDice = new javax.swing.JRadioButton();&#xD;
    jRJaccard = new javax.swing.JRadioButton();&#xD;
    jRJeffrey = new javax.swing.JRadioButton();&#xD;
    jROchiai = new javax.swing.JRadioButton();&#xD;
    jLabel1 = new javax.swing.JLabel();&#xD;
    txtTolerance = new javax.swing.JTextField();&#xD;
    jLabel4 = new javax.swing.JLabel();&#xD;
    JRBanddiference = new javax.swing.JRadioButton();&#xD;
    jPanel5 = new javax.swing.JPanel();&#xD;
    jRadioDendrogram = new javax.swing.JRadioButton();&#xD;
    jRadioDendrogramImageBands = new javax.swing.JRadioButton();&#xD;
    jRadioDendrogramImages = new javax.swing.JRadioButton();&#xD;
    jRadioDendrogramBands = new javax.swing.JRadioButton();&#xD;
    // NOI18N&#xD;
    setName(&quot;&quot;);&#xD;
    jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Cluster method&quot;));&#xD;
    // NOI18N&#xD;
    jPanel1.setName(&quot;Cluster Analysis&quot;);&#xD;
    Clustergroup.add(jRUPGMA);&#xD;
    jRUPGMA.setSelected(true);&#xD;
    jRUPGMA.setText(&quot;UPGMA&quot;);&#xD;
    jRUPGMA.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jRUPGMAActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    Clustergroup.add(jRWard);&#xD;
    jRWard.setText(&quot;Ward&quot;);&#xD;
    jRWard.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jRWardActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    Clustergroup.add(jRUPGMC);&#xD;
    jRUPGMC.setText(&quot;UPGMC&quot;);&#xD;
    jRUPGMC.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jRUPGMCActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    Clustergroup.add(jRSingle);&#xD;
    jRSingle.setText(&quot;Single linkage&quot;);&#xD;
    jRSingle.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jRSingleActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    Clustergroup.add(jRComplete);&#xD;
    jRComplete.setText(&quot;Complete linkage&quot;);&#xD;
    jRComplete.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jRCompleteActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    Clustergroup.add(jRMean);&#xD;
    jRMean.setText(&quot;Mean linkage&quot;);&#xD;
    jRMean.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jRMeanActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);&#xD;
    jPanel1.setLayout(jPanel1Layout);&#xD;
    jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel1Layout.createSequentialGroup().addContainerGap().addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jRUPGMA).addComponent(jRWard)).addGap(39, 39, 39).addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jRUPGMC).addComponent(jRComplete)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jRMean).addComponent(jRSingle)).addGap(56, 56, 56)));&#xD;
    jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel1Layout.createSequentialGroup().addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jRUPGMA).addComponent(jRUPGMC).addComponent(jRSingle)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jRWard).addComponent(jRComplete).addComponent(jRMean)).addGap(60, 60, 60)));&#xD;
    jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Similarity coefficient&quot;));&#xD;
    jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Curve Based&quot;));&#xD;
    Similaritygroup.add(jRPearson);&#xD;
    jRPearson.setSelected(true);&#xD;
    jRPearson.setText(&quot;Pearson correlation&quot;);&#xD;
    jRPearson.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jRPearsonActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    Similaritygroup.add(jRCosine);&#xD;
    jRCosine.setText(&quot;Cosine coefficient&quot;);&#xD;
    jRCosine.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jRCosineActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    Similaritygroup.add(jREuclidean);&#xD;
    jREuclidean.setText(&quot;Euclidean distance&quot;);&#xD;
    jREuclidean.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jREuclideanActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    Similaritygroup.add(jRManhattan);&#xD;
    jRManhattan.setText(&quot;Manhattan distance&quot;);&#xD;
    jRManhattan.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jRManhattanActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);&#xD;
    jPanel3.setLayout(jPanel3Layout);&#xD;
    jPanel3Layout.setHorizontalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel3Layout.createSequentialGroup().addContainerGap().addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jRCosine).addComponent(jRPearson).addComponent(jREuclidean).addComponent(jRManhattan)).addContainerGap(32, Short.MAX_VALUE)));&#xD;
    jPanel3Layout.setVerticalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel3Layout.createSequentialGroup().addContainerGap().addComponent(jRPearson).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jRCosine).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jREuclidean).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jRManhattan).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Band Based&quot;));&#xD;
    Similaritygroup.add(jRDice);&#xD;
    jRDice.setText(&quot;Dice&quot;);&#xD;
    jRDice.setEnabled(false);&#xD;
    jRDice.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jRDiceActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    Similaritygroup.add(jRJaccard);&#xD;
    jRJaccard.setText(&quot;Jaccard&quot;);&#xD;
    jRJaccard.setEnabled(false);&#xD;
    jRJaccard.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jRJaccardActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    Similaritygroup.add(jRJeffrey);&#xD;
    jRJeffrey.setText(&quot;Jeffrey's X&quot;);&#xD;
    jRJeffrey.setEnabled(false);&#xD;
    jRJeffrey.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jRJeffreyActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    Similaritygroup.add(jROchiai);&#xD;
    jROchiai.setText(&quot;Ochiai&quot;);&#xD;
    jROchiai.setEnabled(false);&#xD;
    jROchiai.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jROchiaiActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jLabel1.setText(&quot;Tolerance:&quot;);&#xD;
    txtTolerance.setText(&quot;3&quot;);&#xD;
    txtTolerance.setEnabled(false);&#xD;
    jLabel4.setText(&quot;%&quot;);&#xD;
    Similaritygroup.add(JRBanddiference);&#xD;
    JRBanddiference.setText(&quot;Band difference&quot;);&#xD;
    JRBanddiference.setEnabled(false);&#xD;
    javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);&#xD;
    jPanel4.setLayout(jPanel4Layout);&#xD;
    jPanel4Layout.setHorizontalGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel4Layout.createSequentialGroup().addContainerGap().addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addGroup(jPanel4Layout.createSequentialGroup().addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false).addComponent(JRBanddiference).addGroup(jPanel4Layout.createSequentialGroup().addComponent(jLabel1).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(txtTolerance, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel4).addGap(0, 0, Short.MAX_VALUE)).addGroup(jPanel4Layout.createSequentialGroup().addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jRDice).addComponent(jRJaccard)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE).addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jROchiai).addComponent(jRJeffrey)).addContainerGap()))));&#xD;
    jPanel4Layout.setVerticalGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel4Layout.createSequentialGroup().addContainerGap().addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jRDice).addComponent(jRJeffrey)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jRJaccard).addComponent(jROchiai)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(JRBanddiference).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel1).addComponent(txtTolerance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel4)).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);&#xD;
    jPanel2.setLayout(jPanel2Layout);&#xD;
    jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel2Layout.createSequentialGroup().addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addGap(18, 18, 18).addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jPanel2Layout.setVerticalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup().addContainerGap(16, Short.MAX_VALUE).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addContainerGap()));&#xD;
    jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Output&quot;));&#xD;
    buttonGroup1.add(jRadioDendrogram);&#xD;
    jRadioDendrogram.setText(&quot;Dendrogram&quot;);&#xD;
    jRadioDendrogram.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jRadioDendrogramActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    buttonGroup1.add(jRadioDendrogramImageBands);&#xD;
    jRadioDendrogramImageBands.setText(&quot;Dendrogram + Images + Bands&quot;);&#xD;
    jRadioDendrogramImageBands.setEnabled(false);&#xD;
    jRadioDendrogramImageBands.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jRadioDendrogramImageBandsActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    buttonGroup1.add(jRadioDendrogramImages);&#xD;
    jRadioDendrogramImages.setSelected(true);&#xD;
    jRadioDendrogramImages.setText(&quot;Dendrogram + Images&quot;);&#xD;
    jRadioDendrogramImages.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jRadioDendrogramImagesActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    buttonGroup1.add(jRadioDendrogramBands);&#xD;
    jRadioDendrogramBands.setText(&quot;Dendrogram + Bands&quot;);&#xD;
    jRadioDendrogramBands.setEnabled(false);&#xD;
    jRadioDendrogramBands.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jRadioDendrogramBandsActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);&#xD;
    jPanel5.setLayout(jPanel5Layout);&#xD;
    jPanel5Layout.setHorizontalGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel5Layout.createSequentialGroup().addContainerGap().addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jRadioDendrogramImageBands).addComponent(jRadioDendrogramBands)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jRadioDendrogram).addComponent(jRadioDendrogramImages)).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jPanel5Layout.setVerticalGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel5Layout.createSequentialGroup().addGap(7, 7, 7).addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jRadioDendrogramImageBands).addComponent(jRadioDendrogramImages)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jRadioDendrogram).addComponent(jRadioDendrogramBands)).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);&#xD;
    this.setLayout(layout);&#xD;
    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)).addGroup(layout.createSequentialGroup().addGap(4, 4, 4).addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addGap(0, 0, Short.MAX_VALUE)).addGroup(layout.createSequentialGroup().addContainerGap().addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGap(2, 2, 2).addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MXJ_YBUTEemIe6OhVnSywA" name="jRManhattanActionPerformed" specification="_MXIKMBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    //GEN-FIRST:event_jRManhattanActionPerformed&#xD;
    if (jRManhattan.isSelected()) {&#xD;
        txtTolerance.setEnabled(false);&#xD;
        jRadioDendrogramBands.setEnabled(false);&#xD;
        jRadioDendrogramImageBands.setEnabled(false);&#xD;
    }&#xD;
    if (jRadioDendrogramBands.isSelected() || jRadioDendrogramImageBands.isSelected()) {&#xD;
        jRadioDendrogramImages.setSelected(true);&#xD;
    }&#xD;
    similarity = Manhattan;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MXMboBUTEemIe6OhVnSywA" name="jREuclideanActionPerformed" specification="_MXLNgBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    //GEN-FIRST:event_jREuclideanActionPerformed&#xD;
    if (jREuclidean.isSelected()) {&#xD;
        txtTolerance.setEnabled(false);&#xD;
        jRadioDendrogramBands.setEnabled(false);&#xD;
        jRadioDendrogramImageBands.setEnabled(false);&#xD;
    }&#xD;
    if (jRadioDendrogramBands.isSelected() || jRadioDendrogramImageBands.isSelected()) {&#xD;
        jRadioDendrogramImages.setSelected(true);&#xD;
    }&#xD;
    similarity = Euclidean;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MXOQ0BUTEemIe6OhVnSywA" name="jRCosineActionPerformed" specification="_MXNpwBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    //GEN-FIRST:event_jRCosineActionPerformed&#xD;
    if (jRCosine.isSelected()) {&#xD;
        txtTolerance.setEnabled(false);&#xD;
        jRadioDendrogramBands.setEnabled(false);&#xD;
        jRadioDendrogramImageBands.setEnabled(false);&#xD;
    }&#xD;
    if (jRadioDendrogramBands.isSelected() || jRadioDendrogramImageBands.isSelected()) {&#xD;
        jRadioDendrogramImages.setSelected(true);&#xD;
    }&#xD;
    similarity = Cosine;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MXR7MBUTEemIe6OhVnSywA" name="jRPearsonActionPerformed" specification="_MXQGABUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    //GEN-FIRST:event_jRPearsonActionPerformed&#xD;
    if (jRPearson.isSelected()) {&#xD;
        txtTolerance.setEnabled(false);&#xD;
        jRadioDendrogramBands.setEnabled(false);&#xD;
        jRadioDendrogramImageBands.setEnabled(false);&#xD;
    }&#xD;
    if (jRadioDendrogramBands.isSelected() || jRadioDendrogramImageBands.isSelected()) {&#xD;
        jRadioDendrogramImages.setSelected(true);&#xD;
    }&#xD;
    similarity = Pearson;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MXSiQhUTEemIe6OhVnSywA" name="jROchiaiActionPerformed" specification="_MXSiQBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    //GEN-FIRST:event_jROchiaiActionPerformed&#xD;
    if (jROchiai.isSelected()) {&#xD;
        txtTolerance.setEnabled(true);&#xD;
        jRadioDendrogramBands.setEnabled(true);&#xD;
        jRadioDendrogramImageBands.setEnabled(true);&#xD;
    }&#xD;
    similarity = Ochiai;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MXTJURUTEemIe6OhVnSywA" name="jRJeffreyActionPerformed" specification="_MXSiQxUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    //GEN-FIRST:event_jRJeffreyActionPerformed&#xD;
    if (jRJeffrey.isSelected()) {&#xD;
        txtTolerance.setEnabled(true);&#xD;
        jRadioDendrogramBands.setEnabled(true);&#xD;
        jRadioDendrogramImageBands.setEnabled(true);&#xD;
    }&#xD;
    similarity = Jeffrey;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MXTwYRUTEemIe6OhVnSywA" name="jRJaccardActionPerformed" specification="_MXTJUhUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    //GEN-FIRST:event_jRJaccardActionPerformed&#xD;
    if (jRJaccard.isSelected()) {&#xD;
        txtTolerance.setEnabled(true);&#xD;
        jRadioDendrogramBands.setEnabled(true);&#xD;
        jRadioDendrogramImageBands.setEnabled(true);&#xD;
    }&#xD;
    similarity = Jacckard;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MXTwZBUTEemIe6OhVnSywA" name="jRDiceActionPerformed" specification="_MXTwYhUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    //GEN-FIRST:event_jRDiceActionPerformed&#xD;
    if (jRDice.isSelected()) {&#xD;
        txtTolerance.setEnabled(true);&#xD;
        jRadioDendrogramBands.setEnabled(true);&#xD;
        jRadioDendrogramImageBands.setEnabled(true);&#xD;
    }&#xD;
    similarity = Dice;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MXU-gBUTEemIe6OhVnSywA" name="jRUPGMAActionPerformed" specification="_MXUXcBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    //GEN-FIRST:event_jRUPGMAActionPerformed&#xD;
    clustering = UPGMA;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MXXawBUTEemIe6OhVnSywA" name="jRUPGMCActionPerformed" specification="_MXWMoBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    //GEN-FIRST:event_jRUPGMCActionPerformed&#xD;
    clustering = UPGMC;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MXYo4RUTEemIe6OhVnSywA" name="jRWardActionPerformed" specification="_MXXawRUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    //GEN-FIRST:event_jRWardActionPerformed&#xD;
    clustering = WARD;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MXbsMBUTEemIe6OhVnSywA" name="jRSingleActionPerformed" specification="_MXZ3ABUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    //GEN-FIRST:event_jRSingleActionPerformed&#xD;
    clustering = SINGLE;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MXcTQhUTEemIe6OhVnSywA" name="jRCompleteActionPerformed" specification="_MXcTQBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    //GEN-FIRST:event_jRCompleteActionPerformed&#xD;
    clustering = COMPLETE;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MXc6URUTEemIe6OhVnSywA" name="jRMeanActionPerformed" specification="_MXcTQxUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    //GEN-FIRST:event_jRMeanActionPerformed&#xD;
    clustering = MEAN;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MXevgRUTEemIe6OhVnSywA" name="jRadioDendrogramImageBandsActionPerformed" specification="_MXeIcBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    //GEN-FIRST:event_jRadioDendrogramImageBandsActionPerformed&#xD;
    output = 0;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MXhLwRUTEemIe6OhVnSywA" name="jRadioDendrogramImagesActionPerformed" specification="_MXf9oBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    //GEN-FIRST:event_jRadioDendrogramImagesActionPerformed&#xD;
    output = 1;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MXkPEBUTEemIe6OhVnSywA" name="jRadioDendrogramBandsActionPerformed" specification="_MXiZ4BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    //GEN-FIRST:event_jRadioDendrogramBandsActionPerformed&#xD;
    output = 2;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MXmEQhUTEemIe6OhVnSywA" name="jRadioDendrogramActionPerformed" specification="_MXmEQBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    //GEN-FIRST:event_jRadioDendrogramActionPerformed&#xD;
    output = 3;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MXmrURUTEemIe6OhVnSywA" name="activatebandbased" specification="_MXmrUBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    jRDice.setEnabled(true);&#xD;
    jRJaccard.setEnabled(true);&#xD;
    jRJeffrey.setEnabled(true);&#xD;
    jROchiai.setEnabled(true);&#xD;
    JRBanddiference.setEnabled(true);&#xD;
    similarity = Dice;&#xD;
    jRDice.setSelected(true);&#xD;
    txtTolerance.setEnabled(true);&#xD;
    jRadioDendrogramImageBands.setEnabled(true);&#xD;
    jRadioDendrogramBands.setEnabled(true);&#xD;
    jRadioDendrogramImageBands.setSelected(true);&#xD;
    output = 0;&#xD;
</body>
              </ownedBehavior>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MXCqoBUTEemIe6OhVnSywA" name="Dendogram" visibility="public" method="_MXEf0RUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MXEf0BUTEemIe6OhVnSywA" name="imp"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MXEf0hUTEemIe6OhVnSywA" name="getSimilarity" visibility="public" method="_MXEf1BUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MXEf0xUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MXFG4BUTEemIe6OhVnSywA" name="getClustering" visibility="public" method="_MXFG4hUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MXFG4RUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MXFG4xUTEemIe6OhVnSywA" name="getTolerance" visibility="public" method="_MXFG5RUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MXFG5BUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MXFt8BUTEemIe6OhVnSywA" name="getOutput" visibility="public" method="_MXFt8hUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MXFt8RUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MXGVABUTEemIe6OhVnSywA" name="initComponents" visibility="private" method="_MXHjIBUTEemIe6OhVnSywA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MXIKMBUTEemIe6OhVnSywA" name="jRManhattanActionPerformed" visibility="private" method="_MXJ_YBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MXIxQBUTEemIe6OhVnSywA" name="evt"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MXLNgBUTEemIe6OhVnSywA" name="jREuclideanActionPerformed" visibility="private" method="_MXMboBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MXL0kBUTEemIe6OhVnSywA" name="evt"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MXNpwBUTEemIe6OhVnSywA" name="jRCosineActionPerformed" visibility="private" method="_MXOQ0BUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MXNpwRUTEemIe6OhVnSywA" name="evt"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MXQGABUTEemIe6OhVnSywA" name="jRPearsonActionPerformed" visibility="private" method="_MXR7MBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MXRUIBUTEemIe6OhVnSywA" name="evt"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MXSiQBUTEemIe6OhVnSywA" name="jROchiaiActionPerformed" visibility="private" method="_MXSiQhUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MXSiQRUTEemIe6OhVnSywA" name="evt"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MXSiQxUTEemIe6OhVnSywA" name="jRJeffreyActionPerformed" visibility="private" method="_MXTJURUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MXTJUBUTEemIe6OhVnSywA" name="evt"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MXTJUhUTEemIe6OhVnSywA" name="jRJaccardActionPerformed" visibility="private" method="_MXTwYRUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MXTwYBUTEemIe6OhVnSywA" name="evt"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MXTwYhUTEemIe6OhVnSywA" name="jRDiceActionPerformed" visibility="private" method="_MXTwZBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MXTwYxUTEemIe6OhVnSywA" name="evt"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MXUXcBUTEemIe6OhVnSywA" name="jRUPGMAActionPerformed" visibility="private" method="_MXU-gBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MXUXcRUTEemIe6OhVnSywA" name="evt"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MXWMoBUTEemIe6OhVnSywA" name="jRUPGMCActionPerformed" visibility="private" method="_MXXawBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MXWzsBUTEemIe6OhVnSywA" name="evt"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MXXawRUTEemIe6OhVnSywA" name="jRWardActionPerformed" visibility="private" method="_MXYo4RUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MXYo4BUTEemIe6OhVnSywA" name="evt"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MXZ3ABUTEemIe6OhVnSywA" name="jRSingleActionPerformed" visibility="private" method="_MXbsMBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MXbFIBUTEemIe6OhVnSywA" name="evt"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MXcTQBUTEemIe6OhVnSywA" name="jRCompleteActionPerformed" visibility="private" method="_MXcTQhUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MXcTQRUTEemIe6OhVnSywA" name="evt"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MXcTQxUTEemIe6OhVnSywA" name="jRMeanActionPerformed" visibility="private" method="_MXc6URUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MXc6UBUTEemIe6OhVnSywA" name="evt"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MXeIcBUTEemIe6OhVnSywA" name="jRadioDendrogramImageBandsActionPerformed" visibility="private" method="_MXevgRUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MXevgBUTEemIe6OhVnSywA" name="evt"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MXf9oBUTEemIe6OhVnSywA" name="jRadioDendrogramImagesActionPerformed" visibility="private" method="_MXhLwRUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MXhLwBUTEemIe6OhVnSywA" name="evt"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MXiZ4BUTEemIe6OhVnSywA" name="jRadioDendrogramBandsActionPerformed" visibility="private" method="_MXkPEBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MXjoABUTEemIe6OhVnSywA" name="evt"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MXmEQBUTEemIe6OhVnSywA" name="jRadioDendrogramActionPerformed" visibility="private" method="_MXmEQhUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MXmEQRUTEemIe6OhVnSywA" name="evt"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MXmrUBUTEemIe6OhVnSywA" name="activatebandbased" visibility="public" method="_MXmrURUTEemIe6OhVnSywA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_MX93sBUTEemIe6OhVnSywA" name="LaneSegmentation" visibility="public">
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MYCJIBUTEemIe6OhVnSywA" name="imp" visibility="private" type="_MBDzkBUTEemIe6OhVnSywA" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MYDXQBUTEemIe6OhVnSywA" name="lm" visibility="private" type="_MHgZ0BUTEemIe6OhVnSywA" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MYElYBUTEemIe6OhVnSywA" name="darkbackground" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MYL6IBUTEemIe6OhVnSywA" name="LaneSegmentation" specification="_MYGakBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.imp = imp;&#xD;
    this.lm = lm;&#xD;
    darkbackground = bg;&#xD;
    run(imp.getProcessor());&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MYSAwBUTEemIe6OhVnSywA" name="setup" specification="_MYOWYBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.imp = imp;&#xD;
    return DOES_8G;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MYVrIBUTEemIe6OhVnSywA" name="run" specification="_MYT18BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    // We obtain the width and the height of the image.&#xD;
    int w = imp.getWidth();&#xD;
    int h = imp.getHeight();&#xD;
    // We select the whole image as region of interest&#xD;
    imp.setRoi(0, 0, w, h);&#xD;
    // profile of the image rotated 90 degrees to the left. &#xD;
    if ((!darkbackground &amp;&amp; !imp.isInvertedLut()) || imp.isInvertedLut()) {&#xD;
        IJ.run(imp, &quot;Invert&quot;, &quot;&quot;);&#xD;
    }&#xD;
    ProfilePlot pp = new ProfilePlot(imp);&#xD;
    double[] profile = pp.getProfile();&#xD;
    IJ.run(imp, &quot;Rotate 90 Degrees Left&quot;, &quot;&quot;);&#xD;
    imp.setRoi(0, 0, h, w);&#xD;
    ProfilePlot pp_inv = new ProfilePlot(imp);&#xD;
    double[] profile_inv = pp_inv.getProfile();&#xD;
    IJ.run(imp, &quot;Rotate 90 Degrees Right&quot;, &quot;&quot;);&#xD;
    if ((!darkbackground &amp;&amp; !imp.isInvertedLut()) || imp.isInvertedLut()) {&#xD;
        IJ.run(imp, &quot;Invert&quot;, &quot;&quot;);&#xD;
    }&#xD;
    // This image is cropped to remove the empty regions that can be found &#xD;
    // in the borders of the image. To this aim, we use the intensity &#xD;
    // profile to obtain the point where interesting information starts to &#xD;
    // arise. We fix to 80 the value for the minimum intensity. We also&#xD;
    // crop the image from the top and the bottom. &#xD;
    int cropleft = higherthanvalue(profile, 1, true);&#xD;
    int cropright = higherthanvalue(profile, 1, false);&#xD;
    int croptop = higherthanvalue(profile_inv, 1, true);&#xD;
    int cropbottom = higherthanvalue(profile_inv, 1, false);&#xD;
    // The profile is also cropped. &#xD;
    profile = Arrays.copyOfRange(profile, cropleft, cropright);&#xD;
    // We smooth the profile applying an average filter.&#xD;
    double[] avgprofile = movingaveragefilter(profile, 11);&#xD;
    // We obtain the local minimum of the smoothed profile, and short such &#xD;
    // an array.&#xD;
    int[] minima = MaximumFinder.findMinima(avgprofile, 1, true);&#xD;
    Arrays.sort(minima);&#xD;
    // int[] maxima = MaximumFinder.findMaxima(avgprofile, 4, false);&#xD;
    double[] xvalues = new double[avgprofile.length];&#xD;
    for (int i = 0; i &lt; xvalues.length; i++) {&#xD;
        xvalues[i] = i;&#xD;
    }&#xD;
    for (int j = 0; j &lt; minima.length; j++) {&#xD;
        if (j == 0) {&#xD;
            float[] xPoints = { cropleft + 2, cropleft + 2, cropleft + 2, cropleft + minima[0] - 2, cropleft + minima[0] - 2, cropleft + minima[0] - 2 };&#xD;
            float[] yPoints = { croptop, (cropbottom - croptop) / 2, cropbottom, cropbottom, (cropbottom - croptop) / 2, croptop };&#xD;
            PolygonRoi pr = new PolygonRoi(xPoints, yPoints, Roi.POLYGON);&#xD;
            lm.add(imp, pr, j);&#xD;
        } else if (j == (minima.length - 1)) {&#xD;
            float[] xPoints2 = { cropleft + minima[j - 1] + 2, cropleft + minima[j - 1] + 2, cropleft + minima[j - 1] + 2, cropleft + minima[j] - 2, cropleft + minima[j] - 2, cropleft + minima[j] - 2 };&#xD;
            float[] yPoints2 = { croptop, (cropbottom - croptop) / 2, cropbottom, cropbottom, (cropbottom - croptop) / 2, croptop };&#xD;
            PolygonRoi pr2 = new PolygonRoi(xPoints2, yPoints2, Roi.POLYGON);&#xD;
            lm.add(imp, pr2, j);&#xD;
            float[] xPoints = { cropleft + minima[j] + 2, cropleft + minima[j] + 2, cropleft + minima[j] + 2, cropright - 2, cropright - 2, cropright - 2 };&#xD;
            float[] yPoints = { croptop, (cropbottom - croptop) / 2, cropbottom, cropbottom, (cropbottom - croptop) / 2, croptop };&#xD;
            PolygonRoi pr = new PolygonRoi(xPoints, yPoints, Roi.POLYGON);&#xD;
            lm.add(imp, pr, j + 1);&#xD;
        } else {&#xD;
            float[] xPoints = { cropleft + minima[j - 1] + 2, cropleft + minima[j - 1] + 2, cropleft + minima[j - 1] + 2, cropleft + minima[j] - 2, cropleft + minima[j] - 2, cropleft + minima[j] - 2 };&#xD;
            float[] yPoints = { croptop, (cropbottom - croptop) / 2, cropbottom, cropbottom, (cropbottom - croptop) / 2, croptop };&#xD;
            PolygonRoi pr = new PolygonRoi(xPoints, yPoints, Roi.POLYGON);&#xD;
            lm.add(imp, pr, j);&#xD;
        }&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MYc_4BUTEemIe6OhVnSywA" name="movingaveragefilter" specification="_MYXgUBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    int lv = v.length;&#xD;
    double[] res = new double[lv];&#xD;
    // starting point &#xD;
    int sp;&#xD;
    // end point &#xD;
    int ep;&#xD;
    for (int i = 0; i &lt; lv; i++) {&#xD;
        sp = i - (avgpoints - 1) / 2;&#xD;
        if (sp &lt; 0) {&#xD;
            sp = 0;&#xD;
        }&#xD;
        ep = i + (avgpoints - 1) / 2;&#xD;
        if (ep >= lv) {&#xD;
            ep = lv - 1;&#xD;
        }&#xD;
        double partial_sum = 0;&#xD;
        for (int j = sp; j &lt;= ep; j++) {&#xD;
            partial_sum = partial_sum + v[j];&#xD;
        }&#xD;
        res[i] = partial_sum / (ep - sp + 1);&#xD;
    }&#xD;
    return res;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MYjtkBUTEemIe6OhVnSywA" name="higherthanvalue" specification="_MYeOABUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    if (from_end) {&#xD;
        int pos = 0;&#xD;
        for (int i = 0; i &lt; v.length; i++) {&#xD;
            if (value &lt; v[i]) {&#xD;
                return i;&#xD;
            }&#xD;
        }&#xD;
        return pos;&#xD;
    } else {&#xD;
        int pos = v.length - 1;&#xD;
        for (int i = v.length - 1; i >= 0; i--) {&#xD;
            if (value &lt; v[i]) {&#xD;
                return i;&#xD;
            }&#xD;
        }&#xD;
        return pos;&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MYGakBUTEemIe6OhVnSywA" name="LaneSegmentation" visibility="public" method="_MYL6IBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MYJd4BUTEemIe6OhVnSywA" name="imp" type="_MBDzkBUTEemIe6OhVnSywA"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MYKE8BUTEemIe6OhVnSywA" name="lm" type="_MHgZ0BUTEemIe6OhVnSywA"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MYLTEBUTEemIe6OhVnSywA" name="bg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MYOWYBUTEemIe6OhVnSywA" name="setup" visibility="public" method="_MYSAwBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MYO9cBUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MYQLkBUTEemIe6OhVnSywA" name="arg"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MYRZsBUTEemIe6OhVnSywA" name="imp" type="_MBDzkBUTEemIe6OhVnSywA"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MYT18BUTEemIe6OhVnSywA" name="run" visibility="public" method="_MYVrIBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MYVEEBUTEemIe6OhVnSywA" name="ip" type="_MCpH8BUTEemIe6OhVnSywA"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MYXgUBUTEemIe6OhVnSywA" name="movingaveragefilter" visibility="private" method="_MYc_4BUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MYYHYBUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MYYucBUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MYZVgBUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MYZ8kBUTEemIe6OhVnSywA" name="v">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MYajoBUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MYbKsBUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MYbxwBUTEemIe6OhVnSywA" name="avgpoints">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MYeOABUTEemIe6OhVnSywA" name="higherthanvalue" visibility="private" method="_MYjtkBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MYe1EBUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MYgDMBUTEemIe6OhVnSywA" name="v">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MYgqQBUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MYhRUBUTEemIe6OhVnSywA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MYh4YBUTEemIe6OhVnSywA" name="value">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MYjGgBUTEemIe6OhVnSywA" name="from_end">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_MYnX8BUTEemIe6OhVnSywA" name="GelJ" visibility="public">
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MYsQcBUTEemIe6OhVnSywA" name="imp" visibility="private" isUnique="false"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MYv60BUTEemIe6OhVnSywA" name="run" specification="_MYuFoBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    //imp = IJ.getImage();&#xD;
    /* MenuGelJ panelOptions = new MenuGelJ();
        GenericDialog gdG = new GenericDialog(&quot;GelJ Menu&quot;);
        gdG.add(panelOptions);
        //gdG.addMessage(&quot;&quot;);
        gdG.hideCancelButton();
        gdG.showDialog();   */&#xD;
    Menu m = new Menu();&#xD;
    m.setVisible(false);&#xD;
    Assistant a = new Assistant(m);&#xD;
    a.initAssistant();&#xD;
</body>
              </ownedBehavior>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MYuFoBUTEemIe6OhVnSywA" name="run" visibility="public" method="_MYv60BUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MYvTwBUTEemIe6OhVnSywA" name="args"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_MawF8RUTEemIe6OhVnSywA" name="BandOperation">
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MfNvMRUTEemIe6OhVnSywA" name="operation" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MfO9UBUTEemIe6OhVnSywA" name="x" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_MfPkYBUTEemIe6OhVnSywA" name="y" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MfSnshUTEemIe6OhVnSywA" name="BandOperation" specification="_MfQygBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.operation = operation;&#xD;
    this.x = x;&#xD;
    this.y = y;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MfUc4RUTEemIe6OhVnSywA" name="isAddBand" specification="_MfT10BUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    return operation;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MfW5IBUTEemIe6OhVnSywA" name="getX" specification="_MfVrABUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    return x;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MfXgMhUTEemIe6OhVnSywA" name="setX" specification="_MfXgMBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.x = x;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MfZVYRUTEemIe6OhVnSywA" name="getY" specification="_MfYuUBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    return y;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MfbxoBUTEemIe6OhVnSywA" name="setY" specification="_MfajgBUTEemIe6OhVnSywA">
                <language>JAVA</language>
                <body>&#xD;
    this.y = y;&#xD;
</body>
              </ownedBehavior>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MfQygBUTEemIe6OhVnSywA" name="BandOperation" visibility="public" method="_MfSnshUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MfSAoBUTEemIe6OhVnSywA" name="operation">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MfSnsBUTEemIe6OhVnSywA" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MfSnsRUTEemIe6OhVnSywA" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MfT10BUTEemIe6OhVnSywA" name="isAddBand" visibility="public" method="_MfUc4RUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MfUc4BUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MfVrABUTEemIe6OhVnSywA" name="getX" visibility="public" method="_MfW5IBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MfWSEBUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MfXgMBUTEemIe6OhVnSywA" name="setX" visibility="public" method="_MfXgMhUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MfXgMRUTEemIe6OhVnSywA" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MfYuUBUTEemIe6OhVnSywA" name="getY" visibility="public" method="_MfZVYRUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MfZVYBUTEemIe6OhVnSywA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_MfajgBUTEemIe6OhVnSywA" name="setY" visibility="public" method="_MfbxoBUTEemIe6OhVnSywA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_MfbKkBUTEemIe6OhVnSywA" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_MhMFIBUTEemIe6OhVnSywA" name="Assistant4">
              <packagedElement xmi:type="uml:Class" xmi:id="_MhNTQBUTEemIe6OhVnSywA" name="step1_2" visibility="public">
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MhOhYBUTEemIe6OhVnSywA" name="close" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MhPvgBUTEemIe6OhVnSywA" name="defaultValue">
                    <language>JAVA</language>
                    <body>true</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MhQ9oBUTEemIe6OhVnSywA" name="imp" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MhRksBUTEemIe6OhVnSywA" name="ia" visibility="private" type="_MhQ9oRUTEemIe6OhVnSywA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MhdK4RUTEemIe6OhVnSywA" name="jButton2" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MhdK4hUTEemIe6OhVnSywA" name="jLabel1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mhdx8BUTEemIe6OhVnSywA" name="jLabel2" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mhdx8RUTEemIe6OhVnSywA" name="jLabel3" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mhdx8hUTEemIe6OhVnSywA" name="jLabel4" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MheZABUTEemIe6OhVnSywA" name="jLabel5" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MheZARUTEemIe6OhVnSywA" name="jLabel6" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MheZAhUTEemIe6OhVnSywA" name="jLabel7" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MheZAxUTEemIe6OhVnSywA" name="jLabel8" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MhfAEBUTEemIe6OhVnSywA" name="jPanel1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MhfAERUTEemIe6OhVnSywA" name="jPanel2" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MhfAEhUTEemIe6OhVnSywA" name="jPanel3" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MhfAExUTEemIe6OhVnSywA" name="jPanel4" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MhfnIBUTEemIe6OhVnSywA" name="jPanel5" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MhfnIRUTEemIe6OhVnSywA" name="jScrollPane1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MhfnIhUTEemIe6OhVnSywA" name="jTextArea1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MhhcUBUTEemIe6OhVnSywA" name="jbBack" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MhiDYBUTEemIe6OhVnSywA" name="jbInvert" visibility="private" isUnique="false"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MhUA8BUTEemIe6OhVnSywA" name="step1_2" specification="_MhRksRUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    super();&#xD;
    initComponents();&#xD;
    this.imp = imp;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MhXrUBUTEemIe6OhVnSywA" name="step1_2" specification="_MhVPEBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    super();&#xD;
    initComponents();&#xD;
    this.imp = imp;&#xD;
    this.ia = aThis;&#xD;
    Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();&#xD;
    double width = screenSize.getWidth();&#xD;
    setVisible(true);&#xD;
    setLocation((int) width - 515, 0);&#xD;
    imp.getWindow().setAlwaysOnTop(true);&#xD;
    setAlwaysOnTop(true);&#xD;
    toFront();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MhZggBUTEemIe6OhVnSywA" name="initComponents" specification="_MhY5cBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    jPanel4 = new javax.swing.JPanel();&#xD;
    jButton2 = new javax.swing.JButton();&#xD;
    jbBack = new javax.swing.JButton();&#xD;
    jPanel5 = new javax.swing.JPanel();&#xD;
    jLabel1 = new javax.swing.JLabel();&#xD;
    jLabel2 = new javax.swing.JLabel();&#xD;
    jLabel3 = new javax.swing.JLabel();&#xD;
    jLabel4 = new javax.swing.JLabel();&#xD;
    jLabel5 = new javax.swing.JLabel();&#xD;
    jLabel6 = new javax.swing.JLabel();&#xD;
    jLabel7 = new javax.swing.JLabel();&#xD;
    jLabel8 = new javax.swing.JLabel();&#xD;
    jPanel1 = new javax.swing.JPanel();&#xD;
    jPanel2 = new javax.swing.JPanel();&#xD;
    jScrollPane1 = new javax.swing.JScrollPane();&#xD;
    jTextArea1 = new javax.swing.JTextArea();&#xD;
    jPanel3 = new javax.swing.JPanel();&#xD;
    jbInvert = new javax.swing.JButton();&#xD;
    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);&#xD;
    setTitle(&quot;Image analysis&quot;);&#xD;
    setResizable(false);&#xD;
    addWindowListener(new java.awt.event.WindowAdapter() {&#xD;
&#xD;
        public void windowClosed(java.awt.event.WindowEvent evt) {&#xD;
            formWindowClosed(evt);&#xD;
        }&#xD;
    });&#xD;
    jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());&#xD;
    jButton2.setText(&quot;Next>&quot;);&#xD;
    jButton2.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton2ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jbBack.setText(&quot;&lt;Back&quot;);&#xD;
    jbBack.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbBackActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);&#xD;
    jPanel4.setLayout(jPanel4Layout);&#xD;
    jPanel4Layout.setHorizontalGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addComponent(jbBack).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButton2)));&#xD;
    jPanel4Layout.setVerticalGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jButton2).addComponent(jbBack))));&#xD;
    jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Steps&quot;)));&#xD;
    jPanel5.setForeground(new java.awt.Color(0, 17, 255));&#xD;
    jLabel1.setText(&quot;Step 1. Image preprocessing&quot;);&#xD;
    jLabel2.setText(&quot;1.1. Crop&quot;);&#xD;
    jLabel3.setForeground(new java.awt.Color(0, 15, 255));&#xD;
    jLabel3.setText(&quot;1.2. Invert&quot;);&#xD;
    jLabel4.setText(&quot;1.3. Adjust contrast&quot;);&#xD;
    jLabel5.setText(&quot;1.4. Other operations&quot;);&#xD;
    jLabel6.setText(&quot;Step 2. Lane detection&quot;);&#xD;
    jLabel7.setText(&quot;Step 3. Normalisation&quot;);&#xD;
    jLabel8.setText(&quot;Step 4. Band detection&quot;);&#xD;
    javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);&#xD;
    jPanel5.setLayout(jPanel5Layout);&#xD;
    jPanel5Layout.setHorizontalGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel5Layout.createSequentialGroup().addContainerGap().addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel1).addGroup(jPanel5Layout.createSequentialGroup().addGap(12, 12, 12).addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel3).addComponent(jLabel2).addComponent(jLabel4).addComponent(jLabel5))).addComponent(jLabel6).addComponent(jLabel7).addComponent(jLabel8)).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jPanel5Layout.setVerticalGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel5Layout.createSequentialGroup().addContainerGap().addComponent(jLabel1).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel2).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel3).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel4).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel5).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel6).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel7).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel8).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Help&quot;));&#xD;
    jTextArea1.setEditable(false);&#xD;
    jTextArea1.setColumns(20);&#xD;
    jTextArea1.setRows(5);&#xD;
    jTextArea1.setText(&quot;In this step, you can invert the\ncolour of the image. Just press\nthe Invert button.&quot;);&#xD;
    jScrollPane1.setViewportView(jTextArea1);&#xD;
    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);&#xD;
    jPanel2.setLayout(jPanel2Layout);&#xD;
    jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING));&#xD;
    jPanel2Layout.setVerticalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE));&#xD;
    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);&#xD;
    jPanel1.setLayout(jPanel1Layout);&#xD;
    jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));&#xD;
    jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup().addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)));&#xD;
    jPanel3.setBorder(null);&#xD;
    jbInvert.setText(&quot;Invert&quot;);&#xD;
    jbInvert.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbInvertActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);&#xD;
    jPanel3.setLayout(jPanel3Layout);&#xD;
    jPanel3Layout.setHorizontalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jbInvert, javax.swing.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE));&#xD;
    jPanel3Layout.setVerticalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel3Layout.createSequentialGroup().addComponent(jbInvert).addContainerGap(292, Short.MAX_VALUE)));&#xD;
    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());&#xD;
    getContentPane().setLayout(layout);&#xD;
    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(layout.createSequentialGroup().addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))));&#xD;
    layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(layout.createSequentialGroup().addContainerGap().addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)));&#xD;
    pack();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MhbVsRUTEemIe6OhVnSywA" name="jbInvertActionPerformed" specification="_MhauoBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jbInvertActionPerformed&#xD;
    IJ.run(imp, &quot;Invert&quot;, &quot;&quot;);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mhb8wRUTEemIe6OhVnSywA" name="formWindowClosed" specification="_MhbVshUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_formWindowClosed&#xD;
    try {&#xD;
        if (close) {&#xD;
            ia.saveUnfinishedExperiment(this, 1);&#xD;
            close = false;&#xD;
        }&#xD;
    } catch (IOException ex) {&#xD;
        Logger.getLogger(step1_2.class.getName()).log(Level.SEVERE, null, ex);&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mhcj0BUTEemIe6OhVnSywA" name="jbBackActionPerformed" specification="_Mhb8whUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jbBackActionPerformed&#xD;
    close = false;&#xD;
    this.dispose();&#xD;
    step1_1 s = new step1_1(imp, ia);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MhdK4BUTEemIe6OhVnSywA" name="jButton2ActionPerformed" specification="_Mhcj0RUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton2ActionPerformed&#xD;
    close = false;&#xD;
    this.dispose();&#xD;
    step1_3 s = new step1_3(imp, ia);&#xD;
    System.out.println();&#xD;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MhRksRUTEemIe6OhVnSywA" name="step1_2" visibility="public" method="_MhUA8BUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MhTZ4BUTEemIe6OhVnSywA" name="imp"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MhVPEBUTEemIe6OhVnSywA" name="step1_2" visibility="public" method="_MhXrUBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MhWdMBUTEemIe6OhVnSywA" name="imp"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MhXEQBUTEemIe6OhVnSywA" name="aThis" type="_MhQ9oRUTEemIe6OhVnSywA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MhY5cBUTEemIe6OhVnSywA" name="initComponents" visibility="private" method="_MhZggBUTEemIe6OhVnSywA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MhauoBUTEemIe6OhVnSywA" name="jbInvertActionPerformed" visibility="private" method="_MhbVsRUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MhbVsBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MhbVshUTEemIe6OhVnSywA" name="formWindowClosed" visibility="private" method="_Mhb8wRUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mhb8wBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Mhb8whUTEemIe6OhVnSywA" name="jbBackActionPerformed" visibility="private" method="_Mhcj0BUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mhb8wxUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Mhcj0RUTEemIe6OhVnSywA" name="jButton2ActionPerformed" visibility="private" method="_MhdK4BUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mhcj0hUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_MhQ9oRUTEemIe6OhVnSywA" name="Image_Assistant" visibility="public">
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mrq20BUTEemIe6OhVnSywA" name="m" visibility="public" type="_MEzrIBUTEemIe6OhVnSywA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrssABUTEemIe6OhVnSywA" name="geljdb" visibility="public" type="_Gul0YBUTEemIe6OhVnSywA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrssARUTEemIe6OhVnSywA" name="darkbg" visibility="public" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MrssAhUTEemIe6OhVnSywA" name="defaultValue">
                    <language>JAVA</language>
                    <body>true</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MruhMhUTEemIe6OhVnSywA" name="Image_Assistant" specification="_MrssAxUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    this.m = m;&#xD;
    this.geljdb = geljdb;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MruhNBUTEemIe6OhVnSywA" name="runAssistant" specification="_MruhMxUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    Opener o = new Opener();&#xD;
    ImagePlus imp1 = o.openImage(&quot;C:\\Users\\casaenad\\Desktop\\geljv2(1)\\example1.jpg&quot;);&#xD;
    if (imp1 == null) {&#xD;
        JOptionPane.showMessageDialog(m, &quot;Select a valid image file&quot;, &quot;Error&quot;, JOptionPane.ERROR_MESSAGE);&#xD;
        geljdb.enableall();&#xD;
        return;&#xD;
    }&#xD;
    imp1.show();&#xD;
    IJ.run(imp1, &quot;Scale to Fit&quot;, &quot;&quot;);&#xD;
    imp1.getWindow().setLocked(true);&#xD;
    m.setWindowname(imp1.getTitle());&#xD;
    step1_1 s = new step1_1(imp1, this);&#xD;
    imp1.getWindow().toFront();&#xD;
    System.out.println();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MrvvUBUTEemIe6OhVnSywA" name="saveUnfinishedExperiment" specification="_MrvIQBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    if (IJ.getImage() != null) {&#xD;
        //            if (step == 8) {&#xD;
        //                IJ.getImage().changes = false;&#xD;
        //                IJ.getImage().close();&#xD;
        //            }&#xD;
        ImagePlus imp1 = IJ.getImage();&#xD;
        int id = lastUnfinishedExperimentid();&#xD;
        Save s = new Save(imp1, m.finallanes, m.getBands(), m.normalisation, m.getInitialoffset(), darkbg, m.getMarkername());&#xD;
        Study study = getStudy(geljdb.studyid);&#xD;
        s.saveunfinishedexperiment(study, id);&#xD;
        int option = JOptionPane.showConfirmDialog(d, &quot;The current analysis is unfinished, &quot; + &quot;do you want to save it for further use?&quot;, &quot;Save&quot;, JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null);&#xD;
        if (option == JOptionPane.YES_OPTION) {&#xD;
            String name = JOptionPane.showInputDialog(&quot;Introduce a name&quot;);&#xD;
            UnfinishedExperiment ue = new UnfinishedExperiment(id, name, step, study);&#xD;
            insertUnfinishedExperiment(ue);&#xD;
        }&#xD;
        //            if (step == 8) {&#xD;
        //                IJ.getImage().changes = false;&#xD;
        //                IJ.getImage().close();&#xD;
        //            }&#xD;
        d.dispose();&#xD;
        imp1.getWindow().close();&#xD;
        geljdb.enableall();&#xD;
        geljdb.toFront();&#xD;
    } else {&#xD;
        d.dispose();&#xD;
        geljdb.enableall();&#xD;
        geljdb.toFront();&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mrw9cRUTEemIe6OhVnSywA" name="saveUnfinishedExperiment" specification="_MrvvURUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    if (WindowManager.getCurrentImage() != null) {&#xD;
        //            if (step == 8) {&#xD;
        //                IJ.getImage().changes = false;&#xD;
        //                IJ.getImage().close();&#xD;
        //            }&#xD;
        ImagePlus imp1 = IJ.getImage();&#xD;
        imp1.getWindow().setLocked(false);&#xD;
        imp1.getWindow().toBack();&#xD;
        int id = lastUnfinishedExperimentid();&#xD;
        Save s = new Save(imp1, m.finallanes, m.getBands(), m.normalisation, m.getInitialoffset(), !darkbg, m.getMarkername());&#xD;
        Study study = getStudy(geljdb.studyid);&#xD;
        s.saveunfinishedexperiment(study, id);&#xD;
        int option = JOptionPane.showConfirmDialog(d, &quot;The current analysis is unfinished, &quot; + &quot;do you want to save it for further use?\n &quot; + &quot;(Unfinished experiments can be opened from the menu Tools > Experiments > Unfinished Experiments)&quot;, &quot;Save&quot;, JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null);&#xD;
        if (option == JOptionPane.YES_OPTION) {&#xD;
            String name = JOptionPane.showInputDialog(&quot;Introduce a name&quot;);&#xD;
            UnfinishedExperiment ue = new UnfinishedExperiment(id, name, step, study);&#xD;
            insertUnfinishedExperiment(ue);&#xD;
        }&#xD;
        //            if (step == 8) {&#xD;
        //                IJ.getImage().changes = false;&#xD;
        //                IJ.getImage().close();&#xD;
        //            }&#xD;
        d.dispose();&#xD;
        imp1.getWindow().close();&#xD;
        geljdb.activateemptytoolbar();&#xD;
        geljdb.enableall();&#xD;
        geljdb.toFront();&#xD;
    } else {&#xD;
        d.dispose();&#xD;
        geljdb.activateemptytoolbar();&#xD;
        geljdb.enableall();&#xD;
        geljdb.toFront();&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MrxkgRUTEemIe6OhVnSywA" name="finishnormalisation" specification="_MrxkgBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //        computestdlanes(m.finallanes, m.getCalibrationmethod(), m.getInitialoffset());&#xD;
    computestdlanes(m);&#xD;
    ImagePlus imp = IJ.getImage();&#xD;
    String name = imp.getTitle();&#xD;
    imp.getWindow().setLocked(false);&#xD;
    imp.changes = false;&#xD;
    imp.close();&#xD;
    createnewimage();&#xD;
    imp = IJ.getImage();&#xD;
    imp.setTitle(name);&#xD;
    imp.getWindow().setLocked(true);&#xD;
    Step4_1 s41 = new Step4_1(imp, this, darkbg);&#xD;
//        m.setStudyid(geljdb.studyid);&#xD;
//        m.setUser(geljdb.userid);&#xD;
//&#xD;
//        NormaliseManager nm = new NormaliseManager(true);&#xD;
//        nm.delete_without_asking(true);&#xD;
//        nm.dispose();&#xD;
//&#xD;
//        Experiment e = m.storeexperiment();&#xD;
//        ImagePlus imp = IJ.getImage();&#xD;
//        imp.getWindow().setLocked(false);&#xD;
//        imp.changes = false;&#xD;
//        imp.close();&#xD;
//&#xD;
//        NewExperiment ne = new NewExperiment(geljdb, true, e);&#xD;
//        ne.setVisible(true);&#xD;
//&#xD;
//        geljdb.updateexperiments(true, true);&#xD;
//        geljdb.enableall();&#xD;
//&#xD;
//        geljdb.toFront();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MryLkRUTEemIe6OhVnSywA" name="computemws" specification="_MryLkBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    computemwlanes(m);&#xD;
    m.setStudyid(geljdb.studyid);&#xD;
    m.setUser(geljdb.userid);&#xD;
    //        NormaliseManager nm = new NormaliseManager(true);&#xD;
    //        nm.delete_without_asking(true);&#xD;
    //        nm.dispose();&#xD;
    Experiment e = m.storeexperiment();&#xD;
    ImagePlus imp = IJ.getImage();&#xD;
    imp.getWindow().setLocked(false);&#xD;
    imp.changes = false;&#xD;
    imp.close();&#xD;
    NewExperiment ne = new NewExperiment(geljdb, true, e);&#xD;
    System.err.println(&quot;ahioo&quot;);&#xD;
    ne.setVisible(false);&#xD;
    System.err.println(&quot;ahiooooooooo&quot;);&#xD;
    geljdb.updateexperiments(true, true);&#xD;
    geljdb.enableall();&#xD;
    geljdb.toFront();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MryyoBUTEemIe6OhVnSywA" name="createnewimage" specification="_MryLkhUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    int w = m.finallanes[0].getImp().getWidth();&#xD;
    int height = m.finallanes[0].getImp().getHeight();&#xD;
    int width = w * m.finallanes.length;&#xD;
    ImagePlus imp = IJ.createImage(&quot;Normalised &quot; + m.getTitle(), &quot;rgb-black&quot;, width, height, 1);&#xD;
    ImageProcessor ip = imp.getProcessor();&#xD;
    for (int i = 0; i &lt; m.finallanes.length; i++) {&#xD;
        ip.insert(m.finallanes[i].getImp().getProcessor(), i * w, 0);&#xD;
    }&#xD;
    if (!darkbg) {&#xD;
        ip.invert();&#xD;
    }&#xD;
    imp.updateAndDraw();&#xD;
    imp.show();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MryyoxUTEemIe6OhVnSywA" name="recoverstep0" specification="_MryyoRUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    imp.getWindow().setLocked(true);&#xD;
    step1_1 s = new step1_1(imp, this);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MrzZshUTEemIe6OhVnSywA" name="recoverstep1" specification="_MrzZsBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    imp.getWindow().setLocked(true);&#xD;
    step1_2 s = new step1_2(imp, this);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mr0AwhUTEemIe6OhVnSywA" name="recoverstep2" specification="_Mr0AwBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    imp.getWindow().setLocked(true);&#xD;
    step1_3 s = new step1_3(imp, this);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mr0n0hUTEemIe6OhVnSywA" name="recoverstep3" specification="_Mr0n0BUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    imp.getWindow().setLocked(true);&#xD;
    Step1_4 s = new Step1_4(imp, this);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mr1O4hUTEemIe6OhVnSywA" name="recoverstep4" specification="_Mr1O4BUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    imp.getWindow().setLocked(true);&#xD;
    step2_1 s = new step2_1(imp, this);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mr118RUTEemIe6OhVnSywA" name="recoverstep5" specification="_Mr1O4xUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    ImageWindow iw = imp.getWindow();&#xD;
    LaneManagerCanvas cc = new LaneManagerCanvas(imp);&#xD;
    ImageWindow iw2 = new ImageWindow(imp, cc);&#xD;
    imp.changes = false;&#xD;
    iw.dispose();&#xD;
    iw2.setLocked(true);&#xD;
    step2_2 s = new step2_2(imp, this, true, null);&#xD;
    s.getLm().auto_detect();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mr2dABUTEemIe6OhVnSywA" name="recoverstep6" specification="_Mr118hUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    ImageWindow iw = imp.getWindow();&#xD;
    BandManagerMarkerCanvas cc = new BandManagerMarkerCanvas(imp);&#xD;
    ImageWindow iw2 = new ImageWindow(imp, cc);&#xD;
    iw2.setLocked(true);&#xD;
    iw.dispose();&#xD;
    Step3_1 s = new Step3_1(imp, this, !m.getinvertcolour());&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mr2dAxUTEemIe6OhVnSywA" name="recoverstep6b" specification="_Mr2dARUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    ImageWindow iw = imp.getWindow();&#xD;
    BandManagerCanvas cc = new BandManagerCanvas(imp);&#xD;
    ImageWindow iw2 = new ImageWindow(imp, cc);&#xD;
    iw.dispose();&#xD;
    iw2.setLocked(true);&#xD;
    //cambiado por carlos&#xD;
    step3_3 s = new step3_3(imp);&#xD;
    BandManager bm = s.getBm();&#xD;
    bm.delete_without_asking(false);&#xD;
    if (m.finallanes != null) {&#xD;
        for (int i = 0; i &lt; m.finallanes.length; i++) {&#xD;
            int[] positionbands = m.finallanes[i].getPositionbands();&#xD;
            if (positionbands != null) {&#xD;
                for (int b : positionbands) {&#xD;
                    Roi r0 = m.finallanes[i].getRoi();&#xD;
                    int r0x = r0.getBounds().x;&#xD;
                    int r0y = r0.getBounds().y;&#xD;
                    int w = r0.getBounds().width;&#xD;
                    Rectangle r = new Rectangle(r0x, r0y + b, w, 2);&#xD;
                    Roi r1 = rectangleintersectionroi(r0, r);&#xD;
                    if (m.finallanes[i].isIsstandard()) {&#xD;
                        if (m.getColour() == Color.RED) {&#xD;
                            r1.setFillColor(Color.BLUE);&#xD;
                        } else {&#xD;
                            r1.setFillColor(Color.RED);&#xD;
                        }&#xD;
                    } else {&#xD;
                        r1.setFillColor(m.getColour());&#xD;
                    }&#xD;
                    bm.add(imp, r1, 0, i);&#xD;
                    bm.showAll(0);&#xD;
                }&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    bm.requestFocus();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mr3EEhUTEemIe6OhVnSywA" name="recoverstep7" specification="_Mr3EEBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    imp.getWindow().setLocked(true);&#xD;
    Step4_1 s = new Step4_1(imp, this, !m.getinvertcolour());&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mr3rIhUTEemIe6OhVnSywA" name="recoverstep8" specification="_Mr3rIBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    ImageWindow iw = imp.getWindow();&#xD;
    BandManagerCanvas cc = new BandManagerCanvas(imp);&#xD;
    ImageWindow iw2 = new ImageWindow(imp, cc);&#xD;
    iw.dispose();&#xD;
    iw2.setLocked(true);&#xD;
    Step4_3 s = new Step4_3(imp, this, !m.getinvertcolour(), null);&#xD;
    BandManager bm = s.getBm();&#xD;
    bm.delete_without_asking(false);&#xD;
    if (m.finallanes != null) {&#xD;
        for (int i = 0; i &lt; m.finallanes.length; i++) {&#xD;
            int[] positionbands = m.finallanes[i].getPositionbands();&#xD;
            if (positionbands != null) {&#xD;
                for (int b : positionbands) {&#xD;
                    Roi r0 = m.finallanes[i].getRoi();&#xD;
                    int r0x = r0.getBounds().x;&#xD;
                    int r0y = r0.getBounds().y;&#xD;
                    int w = r0.getBounds().width;&#xD;
                    Rectangle r = new Rectangle(r0x, r0y + b, w, 2);&#xD;
                    Roi r1 = rectangleintersectionroi(r0, r);&#xD;
                    if (m.finallanes[i].isIsstandard()) {&#xD;
                        if (m.getColour() == Color.RED) {&#xD;
                            r1.setFillColor(Color.BLUE);&#xD;
                        } else {&#xD;
                            r1.setFillColor(Color.RED);&#xD;
                        }&#xD;
                    } else {&#xD;
                        r1.setFillColor(m.getColour());&#xD;
                    }&#xD;
                    bm.add(imp, r1, 0, i);&#xD;
                    bm.showAll(0);&#xD;
                }&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    bm.requestFocus();&#xD;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MrssAxUTEemIe6OhVnSywA" name="Image_Assistant" visibility="public" method="_MruhMhUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MruhMBUTEemIe6OhVnSywA" name="m" type="_MEzrIBUTEemIe6OhVnSywA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MruhMRUTEemIe6OhVnSywA" name="geljdb" type="_Gul0YBUTEemIe6OhVnSywA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MruhMxUTEemIe6OhVnSywA" name="runAssistant" visibility="public" method="_MruhNBUTEemIe6OhVnSywA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MrvIQBUTEemIe6OhVnSywA" name="saveUnfinishedExperiment" visibility="public" method="_MrvvUBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MrvIQRUTEemIe6OhVnSywA" name="d"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MrvIQhUTEemIe6OhVnSywA" name="step">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MrvvURUTEemIe6OhVnSywA" name="saveUnfinishedExperiment" visibility="public" method="_Mrw9cRUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MrwWYBUTEemIe6OhVnSywA" name="d"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mrw9cBUTEemIe6OhVnSywA" name="step">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MrxkgBUTEemIe6OhVnSywA" name="finishnormalisation" visibility="public" method="_MrxkgRUTEemIe6OhVnSywA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MryLkBUTEemIe6OhVnSywA" name="computemws" visibility="public" method="_MryLkRUTEemIe6OhVnSywA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MryLkhUTEemIe6OhVnSywA" name="createnewimage" visibility="private" method="_MryyoBUTEemIe6OhVnSywA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MryyoRUTEemIe6OhVnSywA" name="recoverstep0" visibility="public" method="_MryyoxUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MryyohUTEemIe6OhVnSywA" name="imp"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MrzZsBUTEemIe6OhVnSywA" name="recoverstep1" visibility="public" method="_MrzZshUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MrzZsRUTEemIe6OhVnSywA" name="imp"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Mr0AwBUTEemIe6OhVnSywA" name="recoverstep2" visibility="public" method="_Mr0AwhUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mr0AwRUTEemIe6OhVnSywA" name="imp"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Mr0n0BUTEemIe6OhVnSywA" name="recoverstep3" visibility="public" method="_Mr0n0hUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mr0n0RUTEemIe6OhVnSywA" name="imp"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Mr1O4BUTEemIe6OhVnSywA" name="recoverstep4" visibility="public" method="_Mr1O4hUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mr1O4RUTEemIe6OhVnSywA" name="imp"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Mr1O4xUTEemIe6OhVnSywA" name="recoverstep5" visibility="public" method="_Mr118RUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mr118BUTEemIe6OhVnSywA" name="imp"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Mr118hUTEemIe6OhVnSywA" name="recoverstep6" visibility="public" method="_Mr2dABUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mr118xUTEemIe6OhVnSywA" name="imp"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Mr2dARUTEemIe6OhVnSywA" name="recoverstep6b" visibility="public" method="_Mr2dAxUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mr2dAhUTEemIe6OhVnSywA" name="imp"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Mr3EEBUTEemIe6OhVnSywA" name="recoverstep7" visibility="public" method="_Mr3EEhUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mr3EERUTEemIe6OhVnSywA" name="imp"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Mr3rIBUTEemIe6OhVnSywA" name="recoverstep8" visibility="public" method="_Mr3rIhUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mr3rIRUTEemIe6OhVnSywA" name="imp"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_Mhu3sBUTEemIe6OhVnSywA" name="Step3_3" visibility="public">
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mhws4BUTEemIe6OhVnSywA" name="close" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_Mhx7ABUTEemIe6OhVnSywA" name="defaultValue">
                    <language>JAVA</language>
                    <body>true</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MhzJIBUTEemIe6OhVnSywA" name="imp" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MhzwMBUTEemIe6OhVnSywA" name="ia" visibility="private" type="_MhQ9oRUTEemIe6OhVnSywA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mh0-UBUTEemIe6OhVnSywA" name="darkbg" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mh2zgBUTEemIe6OhVnSywA" name="availablestd" visibility="private" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Mh4BoBUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Mh4osBUTEemIe6OhVnSywA" value="*"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mh5PwBUTEemIe6OhVnSywA" name="rm" visibility="private" type="_L_mbABUTEemIe6OhVnSywA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MiuWMBUTEemIe6OhVnSywA" name="buttonGroup1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MivkUBUTEemIe6OhVnSywA" name="jButton2" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MiwycBUTEemIe6OhVnSywA" name="jComboBox1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MiyAkBUTEemIe6OhVnSywA" name="jLabel1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MizOsBUTEemIe6OhVnSywA" name="jLabel10" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Miz1wBUTEemIe6OhVnSywA" name="jLabel11" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mi1D4BUTEemIe6OhVnSywA" name="jLabel12" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mi2SABUTEemIe6OhVnSywA" name="jLabel13" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mi3gIBUTEemIe6OhVnSywA" name="jLabel14" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mi4uQBUTEemIe6OhVnSywA" name="jLabel15" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mi58YBUTEemIe6OhVnSywA" name="jLabel16" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mi7KgBUTEemIe6OhVnSywA" name="jLabel17" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mi8YoBUTEemIe6OhVnSywA" name="jLabel18" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mi8_sBUTEemIe6OhVnSywA" name="jLabel19" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mi-04BUTEemIe6OhVnSywA" name="jLabel2" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mi_b8BUTEemIe6OhVnSywA" name="jLabel20" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MjBRIBUTEemIe6OhVnSywA" name="jLabel21" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MjCfQBUTEemIe6OhVnSywA" name="jLabel22" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MjDtYBUTEemIe6OhVnSywA" name="jLabel23" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MjDtYRUTEemIe6OhVnSywA" name="jLabel24" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MjE7gBUTEemIe6OhVnSywA" name="jLabel25" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MjGJoBUTEemIe6OhVnSywA" name="jLabel26" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MjHXwBUTEemIe6OhVnSywA" name="jLabel27" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MjIl4BUTEemIe6OhVnSywA" name="jLabel28" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MjJM8BUTEemIe6OhVnSywA" name="jLabel29" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MjLCIBUTEemIe6OhVnSywA" name="jLabel3" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MjM3UBUTEemIe6OhVnSywA" name="jLabel30" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MjNeYBUTEemIe6OhVnSywA" name="jLabel31" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MjNeYRUTEemIe6OhVnSywA" name="jLabel32" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MjNeYhUTEemIe6OhVnSywA" name="jLabel33" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MjOFcBUTEemIe6OhVnSywA" name="jLabel34" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MjOFcRUTEemIe6OhVnSywA" name="jLabel35" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MjOFchUTEemIe6OhVnSywA" name="jLabel36" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MjOsgBUTEemIe6OhVnSywA" name="jLabel37" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MjPTkBUTEemIe6OhVnSywA" name="jLabel38" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MjPTkRUTEemIe6OhVnSywA" name="jLabel39" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MjP6oBUTEemIe6OhVnSywA" name="jLabel4" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MjP6oRUTEemIe6OhVnSywA" name="jLabel40" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MjP6ohUTEemIe6OhVnSywA" name="jLabel41" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MjQhsBUTEemIe6OhVnSywA" name="jLabel42" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MjQhsRUTEemIe6OhVnSywA" name="jLabel43" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MjRIwBUTEemIe6OhVnSywA" name="jLabel44" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MjSW4BUTEemIe6OhVnSywA" name="jLabel45" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MjUMEBUTEemIe6OhVnSywA" name="jLabel46" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MjVaMBUTEemIe6OhVnSywA" name="jLabel47" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MjWoUBUTEemIe6OhVnSywA" name="jLabel48" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MjX2cBUTEemIe6OhVnSywA" name="jLabel5" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MjZEkBUTEemIe6OhVnSywA" name="jLabel6" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MjZroBUTEemIe6OhVnSywA" name="jLabel7" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mja5wBUTEemIe6OhVnSywA" name="jLabel8" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MjcH4BUTEemIe6OhVnSywA" name="jLabel9" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MjdWABUTEemIe6OhVnSywA" name="jPanel1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MjekIBUTEemIe6OhVnSywA" name="jPanel2" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MjfLMBUTEemIe6OhVnSywA" name="jPanel3" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MjhAYBUTEemIe6OhVnSywA" name="jPanel4" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MjhncBUTEemIe6OhVnSywA" name="jPanel5" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MjjcoBUTEemIe6OhVnSywA" name="jPanel6" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MjkqwBUTEemIe6OhVnSywA" name="jScrollPane1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mjl44BUTEemIe6OhVnSywA" name="jScrollPane2" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MjnHABUTEemIe6OhVnSywA" name="jTextArea1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mjo8MBUTEemIe6OhVnSywA" name="jTextField1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MjqKUBUTEemIe6OhVnSywA" name="jTextField10" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MjrYcBUTEemIe6OhVnSywA" name="jTextField11" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MjsmkBUTEemIe6OhVnSywA" name="jTextField12" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mjt0sBUTEemIe6OhVnSywA" name="jTextField13" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MjvC0BUTEemIe6OhVnSywA" name="jTextField14" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MjwQ8BUTEemIe6OhVnSywA" name="jTextField15" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MjyGIBUTEemIe6OhVnSywA" name="jTextField16" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mjz7UBUTEemIe6OhVnSywA" name="jTextField17" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mj1JcBUTEemIe6OhVnSywA" name="jTextField18" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mj2XkBUTEemIe6OhVnSywA" name="jTextField19" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mj4MwBUTEemIe6OhVnSywA" name="jTextField2" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mj5a4BUTEemIe6OhVnSywA" name="jTextField20" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mj6pABUTEemIe6OhVnSywA" name="jTextField21" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mj8eMBUTEemIe6OhVnSywA" name="jTextField22" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mj9sUBUTEemIe6OhVnSywA" name="jTextField23" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mj_hgBUTEemIe6OhVnSywA" name="jTextField24" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MkAvoBUTEemIe6OhVnSywA" name="jTextField25" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MkB9wBUTEemIe6OhVnSywA" name="jTextField26" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MkCk0BUTEemIe6OhVnSywA" name="jTextField27" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MkDy8BUTEemIe6OhVnSywA" name="jTextField28" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MkFBEBUTEemIe6OhVnSywA" name="jTextField29" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MkGPMBUTEemIe6OhVnSywA" name="jTextField3" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MkIEYBUTEemIe6OhVnSywA" name="jTextField30" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MkJSgBUTEemIe6OhVnSywA" name="jTextField31" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MkJ5kBUTEemIe6OhVnSywA" name="jTextField32" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MkLHsBUTEemIe6OhVnSywA" name="jTextField33" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MkMV0BUTEemIe6OhVnSywA" name="jTextField34" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MkNj8BUTEemIe6OhVnSywA" name="jTextField35" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MkOyEBUTEemIe6OhVnSywA" name="jTextField36" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MkQAMBUTEemIe6OhVnSywA" name="jTextField37" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MkROUBUTEemIe6OhVnSywA" name="jTextField38" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MkR1YBUTEemIe6OhVnSywA" name="jTextField39" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MkTqkBUTEemIe6OhVnSywA" name="jTextField4" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MkU4sBUTEemIe6OhVnSywA" name="jTextField40" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MkWG0BUTEemIe6OhVnSywA" name="jTextField41" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MkWt4BUTEemIe6OhVnSywA" name="jTextField5" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MkX8ABUTEemIe6OhVnSywA" name="jTextField6" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MkZKIBUTEemIe6OhVnSywA" name="jTextField7" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MkaYQBUTEemIe6OhVnSywA" name="jTextField8" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MkbmYBUTEemIe6OhVnSywA" name="jTextField9" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mkc0gBUTEemIe6OhVnSywA" name="jbBack" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MkdbkBUTEemIe6OhVnSywA" name="jrbavailable" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MkepsBUTEemIe6OhVnSywA" name="jrbnew" visibility="private" isUnique="false"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mh-vUBUTEemIe6OhVnSywA" name="Step3_3" specification="_Mh7E8BUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    super();&#xD;
    initComponents();&#xD;
    this.imp = imp;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MiGrIBUTEemIe6OhVnSywA" name="Step3_3" specification="_MiAkgBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    super();&#xD;
    initComponents();&#xD;
    this.imp = imp;&#xD;
    this.ia = aThis;&#xD;
    this.darkbg = darkbg;&#xD;
    availablestd = readstandardsavailable();&#xD;
    if (availablestd == null || 0 == availablestd.size()) {&#xD;
        jrbavailable.setEnabled(false);&#xD;
        jrbnew.setSelected(true);&#xD;
    } else {&#xD;
        for (String std1 : availablestd) {&#xD;
            jComboBox1.addItem(std1);&#xD;
        }&#xD;
    }&#xD;
    Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();&#xD;
    double width = screenSize.getWidth();&#xD;
    setVisible(true);&#xD;
    setLocation((int) width - 535, 0);&#xD;
    imp.getWindow().setAlwaysOnTop(true);&#xD;
    setAlwaysOnTop(true);&#xD;
    JTextField[] textfields = { jTextField2, jTextField3, jTextField4, jTextField5, jTextField6, jTextField7, jTextField8, jTextField9, jTextField10, jTextField11, jTextField12, jTextField13, jTextField14, jTextField15, jTextField16, jTextField17, jTextField18, jTextField19, jTextField20, jTextField21, jTextField22, jTextField23, jTextField24, jTextField25, jTextField26, jTextField27, jTextField28, jTextField29, jTextField30, jTextField31, jTextField32, jTextField33, jTextField34, jTextField35, jTextField36, jTextField37, jTextField38, jTextField39, jTextField40, jTextField41 };&#xD;
    JLabel[] labels = { jLabel5, jLabel9, jLabel10, jLabel11, jLabel12, jLabel13, jLabel14, jLabel15, jLabel16, jLabel17, jLabel18, jLabel19, jLabel20, jLabel21, jLabel22, jLabel23, jLabel24, jLabel25, jLabel26, jLabel27, jLabel28, jLabel29, jLabel30, jLabel31, jLabel32, jLabel33, jLabel34, jLabel35, jLabel36, jLabel37, jLabel38, jLabel39, jLabel40, jLabel41, jLabel42, jLabel43, jLabel44, jLabel45, jLabel46, jLabel47 };&#xD;
    int[] indexes = indexesstandardlanes(ia.m.finallanes);&#xD;
    initiatenecessarytextFields(textfields, labels, ia.m.finallanes[indexes[0]].getPositionbands().length);&#xD;
    jTextField1.setEnabled(false);&#xD;
    disable_enable_textFields(textfields, false);&#xD;
    rm = new NormaliseManager();&#xD;
    int[] positionbands = ia.m.finallanes[indexes[0]].getPositionbands();&#xD;
    if (positionbands != null) {&#xD;
        for (int b : positionbands) {&#xD;
            Roi r0 = ia.m.finallanes[indexes[0]].getRoi();&#xD;
            int r0x = r0.getBounds().x;&#xD;
            int r0y = r0.getBounds().y;&#xD;
            int w = r0.getBounds().width;&#xD;
            Rectangle r = new Rectangle(r0x, r0y + b - 1, w, 2);&#xD;
            Roi r1 = rectangleintersectionroi(r0, r);&#xD;
            rm.add(imp, r1, 0);&#xD;
            rm.showAll(0);&#xD;
        }&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MiKVgBUTEemIe6OhVnSywA" name="initComponents" specification="_MiHSMBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    buttonGroup1 = new javax.swing.ButtonGroup();&#xD;
    jPanel4 = new javax.swing.JPanel();&#xD;
    jButton2 = new javax.swing.JButton();&#xD;
    jbBack = new javax.swing.JButton();&#xD;
    jPanel5 = new javax.swing.JPanel();&#xD;
    jLabel1 = new javax.swing.JLabel();&#xD;
    jLabel6 = new javax.swing.JLabel();&#xD;
    jLabel7 = new javax.swing.JLabel();&#xD;
    jLabel3 = new javax.swing.JLabel();&#xD;
    jLabel4 = new javax.swing.JLabel();&#xD;
    jLabel48 = new javax.swing.JLabel();&#xD;
    jLabel8 = new javax.swing.JLabel();&#xD;
    jPanel1 = new javax.swing.JPanel();&#xD;
    jPanel2 = new javax.swing.JPanel();&#xD;
    jScrollPane1 = new javax.swing.JScrollPane();&#xD;
    jTextArea1 = new javax.swing.JTextArea();&#xD;
    jPanel3 = new javax.swing.JPanel();&#xD;
    jrbavailable = new javax.swing.JRadioButton();&#xD;
    jrbnew = new javax.swing.JRadioButton();&#xD;
    jComboBox1 = new javax.swing.JComboBox();&#xD;
    jScrollPane2 = new javax.swing.JScrollPane();&#xD;
    jPanel6 = new javax.swing.JPanel();&#xD;
    jLabel5 = new javax.swing.JLabel();&#xD;
    jLabel9 = new javax.swing.JLabel();&#xD;
    jLabel10 = new javax.swing.JLabel();&#xD;
    jLabel11 = new javax.swing.JLabel();&#xD;
    jLabel12 = new javax.swing.JLabel();&#xD;
    jLabel13 = new javax.swing.JLabel();&#xD;
    jLabel14 = new javax.swing.JLabel();&#xD;
    jLabel15 = new javax.swing.JLabel();&#xD;
    jLabel16 = new javax.swing.JLabel();&#xD;
    jLabel17 = new javax.swing.JLabel();&#xD;
    jLabel18 = new javax.swing.JLabel();&#xD;
    jLabel19 = new javax.swing.JLabel();&#xD;
    jLabel20 = new javax.swing.JLabel();&#xD;
    jLabel21 = new javax.swing.JLabel();&#xD;
    jLabel22 = new javax.swing.JLabel();&#xD;
    jLabel23 = new javax.swing.JLabel();&#xD;
    jLabel24 = new javax.swing.JLabel();&#xD;
    jLabel25 = new javax.swing.JLabel();&#xD;
    jLabel26 = new javax.swing.JLabel();&#xD;
    jLabel27 = new javax.swing.JLabel();&#xD;
    jLabel28 = new javax.swing.JLabel();&#xD;
    jLabel29 = new javax.swing.JLabel();&#xD;
    jLabel30 = new javax.swing.JLabel();&#xD;
    jLabel31 = new javax.swing.JLabel();&#xD;
    jLabel32 = new javax.swing.JLabel();&#xD;
    jLabel33 = new javax.swing.JLabel();&#xD;
    jLabel34 = new javax.swing.JLabel();&#xD;
    jLabel35 = new javax.swing.JLabel();&#xD;
    jLabel36 = new javax.swing.JLabel();&#xD;
    jLabel2 = new javax.swing.JLabel();&#xD;
    jTextField1 = new javax.swing.JTextField();&#xD;
    jTextField2 = new javax.swing.JTextField();&#xD;
    jTextField3 = new javax.swing.JTextField();&#xD;
    jTextField4 = new javax.swing.JTextField();&#xD;
    jTextField5 = new javax.swing.JTextField();&#xD;
    jTextField6 = new javax.swing.JTextField();&#xD;
    jTextField7 = new javax.swing.JTextField();&#xD;
    jTextField8 = new javax.swing.JTextField();&#xD;
    jTextField9 = new javax.swing.JTextField();&#xD;
    jTextField10 = new javax.swing.JTextField();&#xD;
    jTextField11 = new javax.swing.JTextField();&#xD;
    jTextField12 = new javax.swing.JTextField();&#xD;
    jTextField13 = new javax.swing.JTextField();&#xD;
    jTextField14 = new javax.swing.JTextField();&#xD;
    jTextField15 = new javax.swing.JTextField();&#xD;
    jTextField16 = new javax.swing.JTextField();&#xD;
    jTextField17 = new javax.swing.JTextField();&#xD;
    jTextField18 = new javax.swing.JTextField();&#xD;
    jTextField19 = new javax.swing.JTextField();&#xD;
    jTextField20 = new javax.swing.JTextField();&#xD;
    jTextField21 = new javax.swing.JTextField();&#xD;
    jTextField22 = new javax.swing.JTextField();&#xD;
    jTextField23 = new javax.swing.JTextField();&#xD;
    jTextField24 = new javax.swing.JTextField();&#xD;
    jTextField25 = new javax.swing.JTextField();&#xD;
    jTextField26 = new javax.swing.JTextField();&#xD;
    jTextField27 = new javax.swing.JTextField();&#xD;
    jTextField28 = new javax.swing.JTextField();&#xD;
    jTextField29 = new javax.swing.JTextField();&#xD;
    jTextField30 = new javax.swing.JTextField();&#xD;
    jLabel37 = new javax.swing.JLabel();&#xD;
    jTextField31 = new javax.swing.JTextField();&#xD;
    jLabel38 = new javax.swing.JLabel();&#xD;
    jTextField32 = new javax.swing.JTextField();&#xD;
    jLabel39 = new javax.swing.JLabel();&#xD;
    jTextField33 = new javax.swing.JTextField();&#xD;
    jLabel40 = new javax.swing.JLabel();&#xD;
    jTextField34 = new javax.swing.JTextField();&#xD;
    jLabel41 = new javax.swing.JLabel();&#xD;
    jTextField35 = new javax.swing.JTextField();&#xD;
    jLabel42 = new javax.swing.JLabel();&#xD;
    jTextField36 = new javax.swing.JTextField();&#xD;
    jTextField37 = new javax.swing.JTextField();&#xD;
    jLabel43 = new javax.swing.JLabel();&#xD;
    jTextField38 = new javax.swing.JTextField();&#xD;
    jLabel44 = new javax.swing.JLabel();&#xD;
    jTextField39 = new javax.swing.JTextField();&#xD;
    jLabel45 = new javax.swing.JLabel();&#xD;
    jTextField40 = new javax.swing.JTextField();&#xD;
    jLabel46 = new javax.swing.JLabel();&#xD;
    jTextField41 = new javax.swing.JTextField();&#xD;
    jLabel47 = new javax.swing.JLabel();&#xD;
    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);&#xD;
    setTitle(&quot;Image analysis&quot;);&#xD;
    setResizable(false);&#xD;
    addWindowListener(new java.awt.event.WindowAdapter() {&#xD;
&#xD;
        public void windowClosed(java.awt.event.WindowEvent evt) {&#xD;
            formWindowClosed(evt);&#xD;
        }&#xD;
    });&#xD;
    jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());&#xD;
    jButton2.setText(&quot;Next>&quot;);&#xD;
    jButton2.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton2ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jbBack.setText(&quot;&lt;Back&quot;);&#xD;
    jbBack.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbBackActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);&#xD;
    jPanel4.setLayout(jPanel4Layout);&#xD;
    jPanel4Layout.setHorizontalGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addComponent(jbBack).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButton2)));&#xD;
    jPanel4Layout.setVerticalGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jButton2).addComponent(jbBack))));&#xD;
    jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Steps&quot;)));&#xD;
    jPanel5.setForeground(new java.awt.Color(0, 17, 255));&#xD;
    jLabel1.setText(&quot;Step 1. Image preprocessing&quot;);&#xD;
    jLabel6.setText(&quot;Step 2. Lane detection&quot;);&#xD;
    jLabel7.setText(&quot;Step 3. Normalisation&quot;);&#xD;
    jLabel3.setText(&quot;3.1. Markers threshold&quot;);&#xD;
    jLabel4.setText(&quot;3.2. Markers picking&quot;);&#xD;
    jLabel48.setForeground(new java.awt.Color(0, 15, 255));&#xD;
    jLabel48.setText(&quot;3.3. Migration model&quot;);&#xD;
    jLabel8.setText(&quot;Step 4. Band detection&quot;);&#xD;
    javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);&#xD;
    jPanel5.setLayout(jPanel5Layout);&#xD;
    jPanel5Layout.setHorizontalGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel5Layout.createSequentialGroup().addContainerGap().addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel1).addComponent(jLabel6).addComponent(jLabel7).addComponent(jLabel8).addGroup(jPanel5Layout.createSequentialGroup().addGap(12, 12, 12).addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel4).addComponent(jLabel3).addComponent(jLabel48)))).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jPanel5Layout.setVerticalGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel5Layout.createSequentialGroup().addContainerGap().addComponent(jLabel1).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel6).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel7).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel3).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel4).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel48).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel8).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Help&quot;));&#xD;
    jTextArea1.setEditable(false);&#xD;
    jTextArea1.setColumns(20);&#xD;
    jTextArea1.setRows(5);&#xD;
    jTextArea1.setText(&quot;In this step, you will normalise the\nimage. If you want to use a\npreviously defined standard, \nselect it from the above list, and \npress Next. Otherwise, select the\nNew standard option and introduce\nthe molecular weights of the bands\nfrom top to bottom.&quot;);&#xD;
    jScrollPane1.setViewportView(jTextArea1);&#xD;
    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);&#xD;
    jPanel2.setLayout(jPanel2Layout);&#xD;
    jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE));&#xD;
    jPanel2Layout.setVerticalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE));&#xD;
    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);&#xD;
    jPanel1.setLayout(jPanel1Layout);&#xD;
    jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));&#xD;
    jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup().addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)));&#xD;
    jPanel3.setBorder(null);&#xD;
    buttonGroup1.add(jrbavailable);&#xD;
    jrbavailable.setSelected(true);&#xD;
    jrbavailable.setText(&quot;Use available standard&quot;);&#xD;
    jrbavailable.addItemListener(new java.awt.event.ItemListener() {&#xD;
&#xD;
        public void itemStateChanged(java.awt.event.ItemEvent evt) {&#xD;
            jrbavailableItemStateChanged(evt);&#xD;
        }&#xD;
    });&#xD;
    buttonGroup1.add(jrbnew);&#xD;
    jrbnew.setText(&quot;New standard&quot;);&#xD;
    jrbnew.addItemListener(new java.awt.event.ItemListener() {&#xD;
&#xD;
        public void itemStateChanged(java.awt.event.ItemEvent evt) {&#xD;
            jrbnewItemStateChanged(evt);&#xD;
        }&#xD;
    });&#xD;
    jScrollPane2.setAutoscrolls(true);&#xD;
    jLabel5.setText(&quot;Band 1:&quot;);&#xD;
    jLabel9.setText(&quot;Band 2:&quot;);&#xD;
    jLabel10.setText(&quot;Band 3:&quot;);&#xD;
    jLabel11.setText(&quot;Band 4:&quot;);&#xD;
    jLabel12.setText(&quot;Band 5:&quot;);&#xD;
    jLabel13.setText(&quot;Band 6:&quot;);&#xD;
    jLabel14.setText(&quot;Band 7:&quot;);&#xD;
    jLabel15.setText(&quot;Band 8:&quot;);&#xD;
    jLabel16.setText(&quot;Band 9:&quot;);&#xD;
    jLabel17.setText(&quot;Band 10:&quot;);&#xD;
    jLabel18.setText(&quot;Band 11:&quot;);&#xD;
    jLabel19.setText(&quot;Band 12:&quot;);&#xD;
    jLabel20.setText(&quot;Band 13:&quot;);&#xD;
    jLabel21.setText(&quot;Band 14:&quot;);&#xD;
    jLabel22.setText(&quot;Band 15:&quot;);&#xD;
    jLabel23.setText(&quot;Band 16:&quot;);&#xD;
    jLabel24.setText(&quot;Band 17:&quot;);&#xD;
    jLabel25.setText(&quot;Band 18:&quot;);&#xD;
    jLabel26.setText(&quot;Band 19:&quot;);&#xD;
    jLabel27.setText(&quot;Band 20:&quot;);&#xD;
    jLabel28.setText(&quot;Band 21:&quot;);&#xD;
    jLabel29.setText(&quot;Band 22:&quot;);&#xD;
    jLabel30.setText(&quot;Band 23:&quot;);&#xD;
    jLabel31.setText(&quot;Band 24:&quot;);&#xD;
    jLabel32.setText(&quot;Band 25:&quot;);&#xD;
    jLabel33.setText(&quot;Band 26:&quot;);&#xD;
    jLabel34.setText(&quot;Band 27:&quot;);&#xD;
    jLabel35.setText(&quot;Band 28:&quot;);&#xD;
    jLabel36.setText(&quot;Band 29:&quot;);&#xD;
    jLabel2.setText(&quot;Name:&quot;);&#xD;
    jLabel37.setText(&quot;Band 30:&quot;);&#xD;
    jLabel38.setText(&quot;Band 31:&quot;);&#xD;
    jLabel39.setText(&quot;Band 32:&quot;);&#xD;
    jLabel40.setText(&quot;Band 33:&quot;);&#xD;
    jLabel41.setText(&quot;Band 34:&quot;);&#xD;
    jLabel42.setText(&quot;Band 35:&quot;);&#xD;
    jLabel43.setText(&quot;Band 36:&quot;);&#xD;
    jLabel44.setText(&quot;Band 37:&quot;);&#xD;
    jLabel45.setText(&quot;Band 38:&quot;);&#xD;
    jLabel46.setText(&quot;Band 39:&quot;);&#xD;
    jLabel47.setText(&quot;Band 40:&quot;);&#xD;
    javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);&#xD;
    jPanel6.setLayout(jPanel6Layout);&#xD;
    jPanel6Layout.setHorizontalGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel6Layout.createSequentialGroup().addContainerGap().addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false).addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup().addComponent(jLabel35).addGap(18, 18, 18).addComponent(jTextField29, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup().addComponent(jLabel34).addGap(18, 18, 18).addComponent(jTextField28, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup().addComponent(jLabel32).addGap(18, 18, 18).addComponent(jTextField26, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup().addComponent(jLabel25).addGap(18, 18, 18).addComponent(jTextField19, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup().addComponent(jLabel24).addGap(18, 18, 18).addComponent(jTextField18, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup().addComponent(jLabel19).addGap(18, 18, 18).addComponent(jTextField13, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup().addComponent(jLabel18).addGap(18, 18, 18).addComponent(jTextField12, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup().addComponent(jLabel36).addGap(18, 18, 18).addComponent(jTextField30, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup().addComponent(jLabel33).addGap(18, 18, 18).addComponent(jTextField27, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup().addComponent(jLabel31).addGap(18, 18, 18).addComponent(jTextField25, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup().addComponent(jLabel30).addGap(18, 18, 18).addComponent(jTextField24, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup().addComponent(jLabel29).addGap(18, 18, 18).addComponent(jTextField23, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup().addComponent(jLabel28).addGap(18, 18, 18).addComponent(jTextField22, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup().addComponent(jLabel27).addGap(18, 18, 18).addComponent(jTextField21, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup().addComponent(jLabel26).addGap(18, 18, 18).addComponent(jTextField20, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup().addComponent(jLabel23).addGap(18, 18, 18).addComponent(jTextField17, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup().addComponent(jLabel22).addGap(18, 18, 18).addComponent(jTextField16, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup().addComponent(jLabel17).addGap(18, 18, 18).addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup().addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel10).addComponent(jLabel5).addComponent(jLabel9).addComponent(jLabel2).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel11).addComponent(jLabel12).addComponent(jLabel13))).addComponent(jLabel14).addComponent(jLabel15).addComponent(jLabel16)).addGap(28, 28, 28).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))).addGroup(jPanel6Layout.createSequentialGroup().addComponent(jLabel21).addGap(18, 18, 18).addComponent(jTextField15, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE).addGap(1, 1, 1)).addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup().addComponent(jLabel20).addGap(18, 18, 18).addComponent(jTextField14, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))).addGroup(jPanel6Layout.createSequentialGroup().addComponent(jLabel37).addGap(18, 18, 18).addComponent(jTextField31, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(jPanel6Layout.createSequentialGroup().addComponent(jLabel38).addGap(18, 18, 18).addComponent(jTextField32, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(jPanel6Layout.createSequentialGroup().addComponent(jLabel39).addGap(18, 18, 18).addComponent(jTextField33, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(jPanel6Layout.createSequentialGroup().addComponent(jLabel40).addGap(18, 18, 18).addComponent(jTextField34, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(jPanel6Layout.createSequentialGroup().addComponent(jLabel41).addGap(18, 18, 18).addComponent(jTextField35, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(jPanel6Layout.createSequentialGroup().addComponent(jLabel42).addGap(18, 18, 18).addComponent(jTextField36, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(jPanel6Layout.createSequentialGroup().addComponent(jLabel43).addGap(18, 18, 18).addComponent(jTextField37, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(jPanel6Layout.createSequentialGroup().addComponent(jLabel44).addGap(18, 18, 18).addComponent(jTextField38, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(jPanel6Layout.createSequentialGroup().addComponent(jLabel45).addGap(18, 18, 18).addComponent(jTextField39, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(jPanel6Layout.createSequentialGroup().addComponent(jLabel46).addGap(18, 18, 18).addComponent(jTextField40, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(jPanel6Layout.createSequentialGroup().addComponent(jLabel47).addGap(18, 18, 18).addComponent(jTextField41, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))).addGap(0, 39, Short.MAX_VALUE)));&#xD;
    jPanel6Layout.setVerticalGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel6Layout.createSequentialGroup().addContainerGap().addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel2).addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel5).addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel9).addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel10).addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel11).addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel12).addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel13).addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel14).addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel15).addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel16).addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel17).addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel18).addComponent(jTextField12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel19).addComponent(jTextField13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel20).addComponent(jTextField14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel21).addComponent(jTextField15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel22).addComponent(jTextField16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel23).addComponent(jTextField17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel24).addComponent(jTextField18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel25).addComponent(jTextField19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel26).addComponent(jTextField20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel27).addComponent(jTextField21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel28).addComponent(jTextField22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel29).addComponent(jTextField23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel30).addComponent(jTextField24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel31).addComponent(jTextField25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel32).addComponent(jTextField26, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel33).addComponent(jTextField27, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel34).addComponent(jTextField28, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel35).addComponent(jTextField29, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel36).addComponent(jTextField30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel37).addComponent(jTextField31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel38).addComponent(jTextField32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel39).addComponent(jTextField33, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel40).addComponent(jTextField34, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel41).addComponent(jTextField35, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel42).addComponent(jTextField36, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel43).addComponent(jTextField37, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel44).addComponent(jTextField38, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel45).addComponent(jTextField39, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel46).addComponent(jTextField40, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel47).addComponent(jTextField41, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jScrollPane2.setViewportView(jPanel6);&#xD;
    javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);&#xD;
    jPanel3.setLayout(jPanel3Layout);&#xD;
    jPanel3Layout.setHorizontalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel3Layout.createSequentialGroup().addContainerGap().addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel3Layout.createSequentialGroup().addGap(12, 12, 12).addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 254, Short.MAX_VALUE)).addGroup(jPanel3Layout.createSequentialGroup().addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel3Layout.createSequentialGroup().addGap(12, 12, 12).addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)).addComponent(jrbnew).addComponent(jrbavailable)).addGap(0, 0, Short.MAX_VALUE))).addContainerGap()));&#xD;
    jPanel3Layout.setVerticalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel3Layout.createSequentialGroup().addComponent(jrbavailable).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jrbnew).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE).addContainerGap()));&#xD;
    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());&#xD;
    getContentPane().setLayout(layout);&#xD;
    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(layout.createSequentialGroup().addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))));&#xD;
    layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(layout.createSequentialGroup().addContainerGap().addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)));&#xD;
    pack();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MiMKsBUTEemIe6OhVnSywA" name="formWindowClosed" specification="_MiLjoBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_formWindowClosed&#xD;
    try {&#xD;
        if (close) {&#xD;
            ia.saveUnfinishedExperiment(this, 6);&#xD;
            close = false;&#xD;
        } else {&#xD;
        }&#xD;
    } catch (IOException ex) {&#xD;
        Logger.getLogger(Step3_3.class.getName()).log(Level.SEVERE, null, ex);&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MiMxwRUTEemIe6OhVnSywA" name="jbBackActionPerformed" specification="_MiMKsRUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jbBackActionPerformed&#xD;
    close = false;&#xD;
    imp.deleteRoi();&#xD;
    Step3_2 s1i = new Step3_2(imp, ia, darkbg, null);&#xD;
    BandManager bm = s1i.getBm();&#xD;
    bm.delete_without_asking(false);&#xD;
    if (ia.m.finallanes != null) {&#xD;
        for (int i = 0; i &lt; ia.m.finallanes.length; i++) {&#xD;
            int[] positionbands = ia.m.finallanes[i].getPositionbands();&#xD;
            if (positionbands != null) {&#xD;
                for (int b : positionbands) {&#xD;
                    Roi r0 = ia.m.finallanes[i].getRoi();&#xD;
                    int r0x = r0.getBounds().x;&#xD;
                    int r0y = r0.getBounds().y;&#xD;
                    int w = r0.getBounds().width;&#xD;
                    Rectangle r = new Rectangle(r0x, r0y + b - 1, w, 2);&#xD;
                    Roi r1 = rectangleintersectionroi(r0, r);&#xD;
                    r1.setFillColor(ia.m.getColour());&#xD;
                    bm.add(imp, r1, 0, i);&#xD;
                    bm.showAll(0);&#xD;
                }&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    bm.requestFocus();&#xD;
    this.dispose();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MiRDMBUTEemIe6OhVnSywA" name="jButton2ActionPerformed" specification="_MiOm8BUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton2ActionPerformed&#xD;
    //        Stopwatch swAll = new Stopwatch();&#xD;
    //        long parciales =0;&#xD;
    close = false;&#xD;
    this.setAlwaysOnTop(false);&#xD;
    imp.getWindow().setAlwaysOnTop(false);&#xD;
    int[] indexes = indexesstandardlanes(ia.m.finallanes);&#xD;
    // and the molecular wheights for the bands of the standard.&#xD;
    if (jrbnew.isSelected()) {&#xD;
        ArrayList&lt;String> names = readstandardsavailable();&#xD;
        double temp;&#xD;
        int fail = -1;&#xD;
        String newname = jTextField1.getText();&#xD;
        JTextField[] textFields = { jTextField2, jTextField3, jTextField4, jTextField5, jTextField6, jTextField7, jTextField8, jTextField9, jTextField10, jTextField11, jTextField12, jTextField13, jTextField14, jTextField15, jTextField16, jTextField17, jTextField18, jTextField19, jTextField20, jTextField21, jTextField22, jTextField23, jTextField24, jTextField25, jTextField26, jTextField27, jTextField28, jTextField29, jTextField30, jTextField31, jTextField32, jTextField33, jTextField34, jTextField35, jTextField36, jTextField37, jTextField38, jTextField39, jTextField40, jTextField41 };&#xD;
        if (names.contains(newname)) {&#xD;
            JOptionPane.showMessageDialog(this, &quot;There is already a standard called &quot; + newname + &quot;.&quot;, &quot;Error&quot;, JOptionPane.ERROR_MESSAGE);&#xD;
            return;&#xD;
        }&#xD;
        if (newname.equals(&quot;&quot;)) {&#xD;
            JOptionPane.showMessageDialog(this, &quot;The name of the standard should not be empty.&quot;, &quot;Error&quot;, JOptionPane.ERROR_MESSAGE);&#xD;
            return;&#xD;
        }&#xD;
        //            int[] indexes = indexesstandardlanes(ia.m.finallanes);&#xD;
        double[] res = getvalues(textFields, ia.m.finallanes[indexes[0]].getPositionbands().length);&#xD;
        if (res == null) {&#xD;
            return;&#xD;
        }&#xD;
        if (!(sorted(res))) {&#xD;
            JOptionPane.showMessageDialog(this, &quot;The values of the bands are not sorted.&quot;, &quot;Error&quot;, JOptionPane.ERROR_MESSAGE);&#xD;
            return;&#xD;
        }&#xD;
        try {&#xD;
            rm.close();&#xD;
            ia.m.setMarker(newname);&#xD;
            save_standard(newname, res);&#xD;
        } catch (FileNotFoundException ex) {&#xD;
            Logger.getLogger(Step3_3.class.getName()).log(Level.SEVERE, null, ex);&#xD;
        } catch (UnsupportedEncodingException ex) {&#xD;
            Logger.getLogger(Step3_3.class.getName()).log(Level.SEVERE, null, ex);&#xD;
        }&#xD;
        for (int i = 0; i &lt; indexes.length; i++) {&#xD;
            ia.m.finallanes[indexes[i]].setStdpositionbands(res);&#xD;
        }&#xD;
        PleaseWait pw = new PleaseWait(this, false);&#xD;
        pw.setVisible(true);&#xD;
        pw.toFront();&#xD;
        CurveCalibration cc = new CurveCalibration(intarraytodoublearray(ia.m.finallanes[indexes[0]].getPositionbands()), ia.m.finallanes[indexes[0]].getStdpositionbands(), ia.m, ia, this);&#xD;
        pw.dispose();&#xD;
        ia.m.normalisation = true;&#xD;
    } else {&#xD;
        // If she chooses an available standard, we check that the standard contains&#xD;
        // as much molecular weights as bands in the image. In such a case, we assign&#xD;
        // the values; otherwise, we ask the user to remove/add the molecular weights that &#xD;
        // do not appear in the image. &#xD;
        String file = (String) jComboBox1.getSelectedItem();&#xD;
        ia.m.setMarker(file);&#xD;
        double[] stdvalues;&#xD;
        try {&#xD;
            stdvalues = readstandardfromfile(file);&#xD;
        } catch (IOException ex) {&#xD;
            Logger.getLogger(Step3_3.class.getName()).log(Level.SEVERE, null, ex);&#xD;
            return;&#xD;
        }&#xD;
        if (stdvalues.length == ia.m.finallanes[indexes[0]].getPositionbands().length) {&#xD;
            for (int i = 0; i &lt; indexes.length; i++) {&#xD;
                ia.m.finallanes[indexes[i]].setStdpositionbands(stdvalues);&#xD;
            }&#xD;
        } else {&#xD;
            ////            	Stopwatch swM1 = new Stopwatch();&#xD;
            System.err.println(&quot;[Message1] The standard contains &quot; + stdvalues.length + &quot; elements,&quot; + &quot; but the reference lane contains &quot; + ia.m.finallanes[indexes[0]].getPositionbands().length + &quot; bands. Please, add or remove the necessary values.&quot;);&#xD;
            ////               parciales= parciales + swM1.elapsedTime();&#xD;
            /////////////////////////////////////////////////////////////&#xD;
            NormaliseManager rm = new NormaliseManager();&#xD;
            int[] positionbands = ia.m.finallanes[indexes[0]].getPositionbands();&#xD;
            if (positionbands != null) {&#xD;
                for (int b : positionbands) {&#xD;
                    Roi r0 = ia.m.finallanes[indexes[0]].getRoi();&#xD;
                    int r0x = r0.getBounds().x;&#xD;
                    int r0y = r0.getBounds().y;&#xD;
                    int w = r0.getBounds().width;&#xD;
                    Rectangle r = new Rectangle(r0x, r0y + b - 1, w, 2);&#xD;
                    Roi r1 = rectangleintersectionroi(r0, r);&#xD;
                    rm.add(imp, r1, 0);&#xD;
                    rm.showAll(0);&#xD;
                }&#xD;
            }&#xD;
            /////////////////////////////////////////////////////////////////// &#xD;
            GenericDialog gdG2 = new GenericDialog(&quot;List of values&quot;);&#xD;
            ListofValues lp = new ListofValues();&#xD;
            lp.init();&#xD;
            lp.addelements(stdvalues);&#xD;
            gdG2.add(lp);&#xD;
            gdG2.addMessage(&quot;&quot;);&#xD;
            //                Stopwatch swM2 = new Stopwatch();&#xD;
            gdG2.showDialog();&#xD;
            while (stdvalues.length != ia.m.finallanes[indexes[0]].getPositionbands().length) {&#xD;
                if (gdG2.wasCanceled()) {&#xD;
                    gdG2.dispose();&#xD;
                    return;&#xD;
                }&#xD;
                if (gdG2.wasOKed()) {&#xD;
                    stdvalues = lp.getelements();&#xD;
                    if (stdvalues.length != ia.m.finallanes[indexes[0]].getPositionbands().length) {&#xD;
                        //                        	Stopwatch swM3 = new Stopwatch();&#xD;
                        System.err.println(&quot;[Message2] The standard contains &quot; + stdvalues.length + &quot; elements,&quot; + &quot; but the reference lane contains &quot; + ia.m.finallanes[indexes[0]].getPositionbands().length + &quot; bands.&quot;);&#xD;
                        //                            parciales = parciales + swM3.elapsedTime();&#xD;
                        gdG2.dispose();&#xD;
                        gdG2 = new GenericDialog(&quot;List of values&quot;);&#xD;
                        lp = new ListofValues();&#xD;
                        lp.init();&#xD;
                        lp.addelements(stdvalues);&#xD;
                        gdG2.add(lp);&#xD;
                        gdG2.addMessage(&quot;&quot;);&#xD;
                        //                            Stopwatch swM4 = new Stopwatch();&#xD;
                        gdG2.showDialog();&#xD;
                    //                            parciales = parciales+swM4.elapsedTime();&#xD;
                    }&#xD;
                }&#xD;
            }&#xD;
            rm.close();&#xD;
            ia.m.setInitialoffset(ia.m.finallanes[indexes[0]].getPositionbands()[0]);&#xD;
            double tempoffset = 0;&#xD;
            for (int i = 0; i &lt; indexes.length; i++) {&#xD;
                ia.m.finallanes[indexes[i]].setStdpositionbands(stdvalues);&#xD;
                tempoffset = ia.m.getInitialoffset() - ia.m.finallanes[indexes[i]].getPositionbands()[0];&#xD;
                ia.m.finallanes[indexes[i]].setOffset(tempoffset);&#xD;
            }&#xD;
        }&#xD;
        // Finally, we ask the user to select the calibration method. &#xD;
        PleaseWait pw = new PleaseWait(this, false);&#xD;
        pw.setVisible(true);&#xD;
        pw.toFront();&#xD;
        try {&#xD;
            //            CurveCalibration cc = new CurveCalibration(&#xD;
            //                    intarraytodoublearray(ia.m.finallanes[indexes[0]].getPositionbands()),&#xD;
            //                    ia.m.finallanes[indexes[0]].getStdpositionbands(),&#xD;
            //                    ia.m, ia, this);&#xD;
            this.dispose();&#xD;
            ia.finishnormalisation();&#xD;
        } catch (UnsupportedEncodingException ex) {&#xD;
            Logger.getLogger(Step3_3.class.getName()).log(Level.SEVERE, null, ex);&#xD;
        } catch (IOException ex) {&#xD;
            Logger.getLogger(Step3_3.class.getName()).log(Level.SEVERE, null, ex);&#xD;
        }&#xD;
        pw.dispose();&#xD;
    }&#xD;
    ia.m.normalisation = true;&#xD;
    System.out.println();&#xD;
//        long total = swAll.elapsedTime();&#xD;
//        System.out.println(&quot;Step3_3.jButton2ActionPerformed;&quot;+(total-parciales));&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MiVUoBUTEemIe6OhVnSywA" name="jrbnewItemStateChanged" specification="_MiTfcBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jrbnewItemStateChanged&#xD;
    JTextField[] textfields = { jTextField1, jTextField2, jTextField3, jTextField4, jTextField5, jTextField6, jTextField7, jTextField8, jTextField9, jTextField10, jTextField11, jTextField12, jTextField13, jTextField14, jTextField15, jTextField16, jTextField17, jTextField18, jTextField19, jTextField20, jTextField21, jTextField22, jTextField23, jTextField24, jTextField25, jTextField26, jTextField27, jTextField28, jTextField29, jTextField30, jTextField31, jTextField32, jTextField33, jTextField34, jTextField35, jTextField36, jTextField37, jTextField38, jTextField39, jTextField40, jTextField41 };&#xD;
    if (jrbnew.isSelected()) {&#xD;
        disable_enable_textFields(textfields, true);&#xD;
        jComboBox1.setEnabled(false);&#xD;
    } else {&#xD;
        disable_enable_textFields(textfields, false);&#xD;
        jComboBox1.setEnabled(true);&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MiXJ0BUTEemIe6OhVnSywA" name="jrbavailableItemStateChanged" specification="_MiV7sBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jrbavailableItemStateChanged&#xD;
    JTextField[] textfields = { jTextField1, jTextField2, jTextField3, jTextField4, jTextField5, jTextField6, jTextField7, jTextField8, jTextField9, jTextField10, jTextField11, jTextField12, jTextField13, jTextField14, jTextField15, jTextField16, jTextField17, jTextField18, jTextField19, jTextField20, jTextField21, jTextField22, jTextField23, jTextField24, jTextField25, jTextField26, jTextField27, jTextField28, jTextField29, jTextField30, jTextField31, jTextField32, jTextField33, jTextField34, jTextField35, jTextField36, jTextField37, jTextField38, jTextField39, jTextField40, jTextField41 };&#xD;
    if (jrbavailable.isSelected()) {&#xD;
        disable_enable_textFields(textfields, false);&#xD;
        jComboBox1.setEnabled(true);&#xD;
    } else {&#xD;
        disable_enable_textFields(textfields, true);&#xD;
        jComboBox1.setEnabled(false);&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MicCURUTEemIe6OhVnSywA" name="sorted" specification="_MiY_ABUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    for (int i = 0; i &lt; res.length - 1; i++) {&#xD;
        if (res[i] &lt; res[i + 1]) {&#xD;
            return false;&#xD;
        }&#xD;
    }&#xD;
    return true;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MijXEBUTEemIe6OhVnSywA" name="initiatenecessarytextFields" specification="_MieekBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    for (int i = n; i &lt; textFields.length; i++) {&#xD;
        textFields[i].setVisible(false);&#xD;
        labels[i].setVisible(false);&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MinogBUTEemIe6OhVnSywA" name="disable_enable_textFields" specification="_MiklMBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    for (int i = 0; i &lt; textFields.length; i++) {&#xD;
        textFields[i].setEnabled(enable);&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MitIEBUTEemIe6OhVnSywA" name="getvalues" specification="_MipdsBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    double[] res = new double[n];&#xD;
    double temp;&#xD;
    for (int i = 0; i &lt; n; i++) {&#xD;
        try {&#xD;
            temp = Double.parseDouble(textFields[i].getText());&#xD;
        } catch (NumberFormatException e) {&#xD;
            JOptionPane.showMessageDialog(this, &quot;You must introduce numerical values.&quot;, &quot;Error&quot;, JOptionPane.ERROR_MESSAGE);&#xD;
            return null;&#xD;
        }&#xD;
        if (temp &lt; 0) {&#xD;
            JOptionPane.showMessageDialog(this, &quot;You must introduce positive values.&quot;, &quot;Error&quot;, JOptionPane.ERROR_MESSAGE);&#xD;
            return null;&#xD;
        }&#xD;
        res[i] = temp;&#xD;
    }&#xD;
    return res;&#xD;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Mh7E8BUTEemIe6OhVnSywA" name="Step3_3" visibility="public" method="_Mh-vUBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mh9hMBUTEemIe6OhVnSywA" name="imp"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MiAkgBUTEemIe6OhVnSywA" name="Step3_3" visibility="public" method="_MiGrIBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MiEO4BUTEemIe6OhVnSywA" name="imp"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MiFdABUTEemIe6OhVnSywA" name="aThis" type="_MhQ9oRUTEemIe6OhVnSywA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MiGEEBUTEemIe6OhVnSywA" name="darkbg">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MiHSMBUTEemIe6OhVnSywA" name="initComponents" visibility="private" method="_MiKVgBUTEemIe6OhVnSywA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MiLjoBUTEemIe6OhVnSywA" name="formWindowClosed" visibility="private" method="_MiMKsBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MiLjoRUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MiMKsRUTEemIe6OhVnSywA" name="jbBackActionPerformed" visibility="private" method="_MiMxwRUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MiMxwBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MiOm8BUTEemIe6OhVnSywA" name="jButton2ActionPerformed" visibility="private" method="_MiRDMBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MiQcIBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MiTfcBUTEemIe6OhVnSywA" name="jrbnewItemStateChanged" visibility="private" method="_MiVUoBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MiUGgBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MiV7sBUTEemIe6OhVnSywA" name="jrbavailableItemStateChanged" visibility="private" method="_MiXJ0BUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MiWiwBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MiY_ABUTEemIe6OhVnSywA" name="sorted" visibility="private" isStatic="true" method="_MicCURUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MiZmEBUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mia0MBUTEemIe6OhVnSywA" name="res">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MibbQBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MicCUBUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MieekBUTEemIe6OhVnSywA" name="initiatenecessarytextFields" visibility="private" method="_MijXEBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MifFoBUTEemIe6OhVnSywA" name="textFields">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MigTwBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MigTwRUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mig60BUTEemIe6OhVnSywA" name="labels">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MiiI8BUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MiiI8RUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MiiwABUTEemIe6OhVnSywA" name="n">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MiklMBUTEemIe6OhVnSywA" name="disable_enable_textFields" visibility="private" method="_MinogBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MilMQBUTEemIe6OhVnSywA" name="textFields">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MilzUBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MimaYBUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MinBcBUTEemIe6OhVnSywA" name="enable">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MipdsBUTEemIe6OhVnSywA" name="getvalues" visibility="private" method="_MitIEBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MipdsRUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MipdshUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MiqEwBUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Miqr0BUTEemIe6OhVnSywA" name="textFields">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MirS4BUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Mir58BUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MishABUTEemIe6OhVnSywA" name="n">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_MkkwUBUTEemIe6OhVnSywA" name="Step4_1" visibility="public">
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MkmlgBUTEemIe6OhVnSywA" name="close" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MknMkBUTEemIe6OhVnSywA" name="defaultValue">
                    <language>JAVA</language>
                    <body>true</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MkoasBUTEemIe6OhVnSywA" name="imp" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MkpBwBUTEemIe6OhVnSywA" name="ia" visibility="private" type="_MhQ9oRUTEemIe6OhVnSywA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MkqP4BUTEemIe6OhVnSywA" name="bm" visibility="private" type="_MEgJIBUTEemIe6OhVnSywA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mkq28BUTEemIe6OhVnSywA" name="darkbg" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MksFEBUTEemIe6OhVnSywA" name="threshold" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_KgG0cPaLEeW5KOK8aDMdgA"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MleIMBUTEemIe6OhVnSywA" name="buttonGroup1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MlfWUBUTEemIe6OhVnSywA" name="jButton2" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MlgkcBUTEemIe6OhVnSywA" name="jComboBox1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MlhLgBUTEemIe6OhVnSywA" name="jLabel1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MliZoBUTEemIe6OhVnSywA" name="jLabel2" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MljnwBUTEemIe6OhVnSywA" name="jLabel3" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mlk14BUTEemIe6OhVnSywA" name="jLabel4" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MlmEABUTEemIe6OhVnSywA" name="jLabel5" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MlnSIBUTEemIe6OhVnSywA" name="jLabel6" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MlogQBUTEemIe6OhVnSywA" name="jLabel7" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MlpuYBUTEemIe6OhVnSywA" name="jLabel8" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mlq8gBUTEemIe6OhVnSywA" name="jLabel9" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MlsKoBUTEemIe6OhVnSywA" name="jPanel1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MltYwBUTEemIe6OhVnSywA" name="jPanel2" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mlum4BUTEemIe6OhVnSywA" name="jPanel3" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mlv1ABUTEemIe6OhVnSywA" name="jPanel4" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MlwcEBUTEemIe6OhVnSywA" name="jPanel5" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MlxqMBUTEemIe6OhVnSywA" name="jScrollPane1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mly4UBUTEemIe6OhVnSywA" name="jSlider1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Ml0GcBUTEemIe6OhVnSywA" name="jTextArea1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Ml1UkBUTEemIe6OhVnSywA" name="jbBack" visibility="private" isUnique="false"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MkvIYBUTEemIe6OhVnSywA" name="Step4_1" specification="_MktTMBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    super();&#xD;
    initComponents();&#xD;
    this.imp = imp;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mk0n8BUTEemIe6OhVnSywA" name="Step4_1" specification="_Mkw9kBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    super();&#xD;
    initComponents();&#xD;
    this.imp = imp;&#xD;
    this.ia = aThis;&#xD;
    this.darkbg = darkbg;&#xD;
    IJ.setTool(&quot;point&quot;);&#xD;
    bm = new BandManager(ia.m);&#xD;
    bm.delete_without_asking(true);&#xD;
    bm.setbgcheckboxstate(darkbg);&#xD;
    bm.setVisible(false);&#xD;
    Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();&#xD;
    double width = screenSize.getWidth();&#xD;
    setVisible(true);&#xD;
    setLocation((int) width - 515, 0);&#xD;
    imp.getWindow().setAlwaysOnTop(true);&#xD;
    setAlwaysOnTop(true);&#xD;
    toFront();&#xD;
    threshold = (double) StandardUtils.readexperimentconfig();&#xD;
    if (threshold != -1) {&#xD;
        jSlider1.setValue((int) (double) threshold);&#xD;
    }&#xD;
    globalselectbands();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mk2dIBUTEemIe6OhVnSywA" name="getBm" specification="_Mk1PABUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    return bm;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mk3EMRUTEemIe6OhVnSywA" name="globalselectbands" specification="_Mk3EMBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    threshold = (double) jSlider1.getValue();&#xD;
    int colour = jComboBox1.getSelectedIndex();&#xD;
    Color c;&#xD;
    switch(colour) {&#xD;
        case BLUE:&#xD;
            c = Color.BLUE;&#xD;
            break;&#xD;
        case RED:&#xD;
            c = Color.RED;&#xD;
            break;&#xD;
        case GREEN:&#xD;
            c = Color.GREEN;&#xD;
            break;&#xD;
        case MAGENTA:&#xD;
            c = Color.MAGENTA;&#xD;
            break;&#xD;
        case CYAN:&#xD;
            c = Color.CYAN;&#xD;
            break;&#xD;
        case YELLOW:&#xD;
            c = Color.YELLOW;&#xD;
            break;&#xD;
        case ORANGE:&#xD;
            c = Color.ORANGE;&#xD;
            break;&#xD;
        default:&#xD;
            c = Color.BLUE;&#xD;
            break;&#xD;
    }&#xD;
    Prefs.verticalProfile = true;&#xD;
    bm.delete_without_asking(true);&#xD;
    bm.restart_bands();&#xD;
    ImageProcessor ip = imp.getProcessor();&#xD;
    int w = imp.getWidth() / ia.m.finallanes.length;&#xD;
    int h = imp.getHeight();&#xD;
    for (int i = 0; i &lt; ia.m.finallanes.length; i++) {&#xD;
        //            Roi r0 = ia.m.finallanes[i].getRoi();&#xD;
        int x0 = i * w + w / 2;&#xD;
        int y0 = 0;&#xD;
        int x1 = i * w + w / 2;&#xD;
        int y1 = h;&#xD;
        Line l0 = new Line(x0, y0, x1, y1);&#xD;
        l0.setWidth(15);&#xD;
        imp.setRoi(l0);&#xD;
        // Finding the peaks of the profile&#xD;
        if ((!darkbg &amp;&amp; !imp.isInvertedLut()) || imp.isInvertedLut()) {&#xD;
            ip.invert();&#xD;
        }&#xD;
        //ProfilePlot pp = new ProfilePlot(imp);&#xD;
        double[] profile = ia.m.finallanes[i].getProfile();&#xD;
        if ((!darkbg &amp;&amp; !imp.isInvertedLut()) || imp.isInvertedLut()) {&#xD;
            ip.invert();&#xD;
        }&#xD;
        l0.setWidth(1);&#xD;
        int[] maxima = MaximumFinder.findMaxima(profile, 2, true);&#xD;
        int[] htt = higherthantolerance(maxima, profile, threshold);&#xD;
        Arrays.sort(htt);&#xD;
        // Showing the lines&#xD;
        int r0x = i * w;&#xD;
        int r0y = 0;&#xD;
        Roi r0 = new Roi(r0x, r0y, w, h);&#xD;
        int[] positionsy = new int[htt.length];&#xD;
        for (int k = 0; k &lt; htt.length; k++) {&#xD;
            positionsy[k] = r0y + htt[k];&#xD;
        }&#xD;
        for (int j = 0; j &lt; htt.length; j++) {&#xD;
            /*Line line = new Line(r0x, r0y + htt[j], r0x + w, r0y + htt[j]);
                 Line lineintersection = lineintersectionroi(r0,line);*/&#xD;
            Rectangle r = new Rectangle(r0x, r0y + htt[j], w, 2);&#xD;
            Roi r1 = rectangleintersectionroi(r0, r);&#xD;
            if (!ia.m.finallanes[i].isIsstandard()) {&#xD;
                r1.setFillColor(c);&#xD;
                bm.add(imp, r1, j, i);&#xD;
            }&#xD;
        //bm.add(imp, line, j);&#xD;
        }&#xD;
    //m.finallanes[i].setProfile(profile);&#xD;
    //m.finallanes[i].setPositionbands(positionsy);&#xD;
    }&#xD;
    bm.showAll(0);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mk9K0BUTEemIe6OhVnSywA" name="lineintersectionroi" specification="_Mk6ukBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    Line line;&#xD;
    int[] xpointsl = l.getPoints().xpoints;&#xD;
    int[] ypointsl = l.getPoints().ypoints;&#xD;
    int len = xpointsl.length;&#xD;
    Boolean inside = false;&#xD;
    int x0 = xpointsl[0];&#xD;
    int y0 = ypointsl[0];&#xD;
    int x1 = xpointsl[len - 1];&#xD;
    int y1 = ypointsl[len - 1];&#xD;
    for (int i = 1; i &lt; len; i++) {&#xD;
        if (!inside) {&#xD;
            if (r.contains(xpointsl[i], ypointsl[i])) {&#xD;
                x0 = xpointsl[i];&#xD;
                y0 = ypointsl[i];&#xD;
                inside = true;&#xD;
            }&#xD;
        } else {&#xD;
            if (!r.contains(xpointsl[i], ypointsl[i])) {&#xD;
                x1 = xpointsl[i];&#xD;
                y1 = ypointsl[i];&#xD;
                line = new Line(x0, y0, x1, y1);&#xD;
                return line;&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    line = new Line(x0, y0, x1, y1);&#xD;
    return line;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MlCqYBUTEemIe6OhVnSywA" name="higherthantolerance" specification="_Mk-Y8BUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    ArrayList&lt;Integer> res = new ArrayList&lt;Integer>();&#xD;
    for (int i = 0; i &lt; v.length; i++) {&#xD;
        if (p[v[i]] > tolerance) {&#xD;
            res.add(v[i]);&#xD;
        }&#xD;
    }&#xD;
    int[] ret = new int[res.size()];&#xD;
    for (int i = 0; i &lt; ret.length; i++) {&#xD;
        ret[i] = res.get(i);&#xD;
    }&#xD;
    return ret;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MlG70BUTEemIe6OhVnSywA" name="movingaveragefilter" specification="_MlDRcBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    int lv = v.length;&#xD;
    double[] res = new double[lv];&#xD;
    // starting point &#xD;
    int sp;&#xD;
    // end point &#xD;
    int ep;&#xD;
    for (int i = 0; i &lt; lv; i++) {&#xD;
        sp = i - (avgpoints - 1) / 2;&#xD;
        if (sp &lt; 0) {&#xD;
            sp = 0;&#xD;
        }&#xD;
        ep = i + (avgpoints - 1) / 2;&#xD;
        if (ep >= lv) {&#xD;
            ep = lv - 1;&#xD;
        }&#xD;
        double partial_sum = 0;&#xD;
        for (int j = sp; j &lt;= ep; j++) {&#xD;
            partial_sum = partial_sum + v[j];&#xD;
        }&#xD;
        res[i] = partial_sum / (ep - sp + 1);&#xD;
    }&#xD;
    return res;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MlLNQBUTEemIe6OhVnSywA" name="higherthanvalue" specification="_MlIJ8BUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    if (from_end) {&#xD;
        int pos = 0;&#xD;
        for (int i = 0; i &lt; v.length; i++) {&#xD;
            if (value &lt; v[i]) {&#xD;
                return i;&#xD;
            }&#xD;
        }&#xD;
        return pos;&#xD;
    } else {&#xD;
        int pos = v.length - 1;&#xD;
        for (int i = v.length - 1; i >= 0; i--) {&#xD;
            if (value &lt; v[i]) {&#xD;
                return i;&#xD;
            }&#xD;
        }&#xD;
        return pos;&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MlNCcRUTEemIe6OhVnSywA" name="removeOverlay" specification="_MlMbYBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    if (imp != null &amp;&amp; imp.getCanvas() != null) {&#xD;
        setOverlay(imp, null);&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MlQs0BUTEemIe6OhVnSywA" name="setOverlay" specification="_MlO3oBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    if (imp == null) {&#xD;
        return;&#xD;
    }&#xD;
    ImageCanvas ic = imp.getCanvas();&#xD;
    if (ic == null) {&#xD;
        imp.setOverlay(overlay);&#xD;
        return;&#xD;
    }&#xD;
    ic.setShowAllList(overlay);&#xD;
    imp.draw();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MlSiABUTEemIe6OhVnSywA" name="initComponents" specification="_MlR68BUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    buttonGroup1 = new javax.swing.ButtonGroup();&#xD;
    jPanel4 = new javax.swing.JPanel();&#xD;
    jButton2 = new javax.swing.JButton();&#xD;
    jbBack = new javax.swing.JButton();&#xD;
    jPanel5 = new javax.swing.JPanel();&#xD;
    jLabel1 = new javax.swing.JLabel();&#xD;
    jLabel6 = new javax.swing.JLabel();&#xD;
    jLabel7 = new javax.swing.JLabel();&#xD;
    jLabel8 = new javax.swing.JLabel();&#xD;
    jLabel2 = new javax.swing.JLabel();&#xD;
    jLabel3 = new javax.swing.JLabel();&#xD;
    jLabel4 = new javax.swing.JLabel();&#xD;
    jPanel1 = new javax.swing.JPanel();&#xD;
    jPanel2 = new javax.swing.JPanel();&#xD;
    jScrollPane1 = new javax.swing.JScrollPane();&#xD;
    jTextArea1 = new javax.swing.JTextArea();&#xD;
    jPanel3 = new javax.swing.JPanel();&#xD;
    jSlider1 = new javax.swing.JSlider();&#xD;
    jLabel5 = new javax.swing.JLabel();&#xD;
    jLabel9 = new javax.swing.JLabel();&#xD;
    jComboBox1 = new javax.swing.JComboBox();&#xD;
    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);&#xD;
    setTitle(&quot;Image analysis&quot;);&#xD;
    setResizable(false);&#xD;
    addWindowListener(new java.awt.event.WindowAdapter() {&#xD;
&#xD;
        public void windowClosed(java.awt.event.WindowEvent evt) {&#xD;
            formWindowClosed(evt);&#xD;
        }&#xD;
    });&#xD;
    jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());&#xD;
    jButton2.setText(&quot;Next>&quot;);&#xD;
    jButton2.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton2ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jbBack.setText(&quot;Cancel&quot;);&#xD;
    jbBack.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbBackActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);&#xD;
    jPanel4.setLayout(jPanel4Layout);&#xD;
    jPanel4Layout.setHorizontalGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addComponent(jbBack).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButton2)));&#xD;
    jPanel4Layout.setVerticalGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jButton2).addComponent(jbBack))));&#xD;
    jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Steps&quot;)));&#xD;
    jPanel5.setForeground(new java.awt.Color(0, 17, 255));&#xD;
    jLabel1.setText(&quot;Step 1. Image preprocessing&quot;);&#xD;
    jLabel6.setText(&quot;Step 2. Lane detection&quot;);&#xD;
    jLabel7.setText(&quot;Step 4. Band detection&quot;);&#xD;
    jLabel8.setText(&quot;Step 3. Normalisation&quot;);&#xD;
    jLabel2.setForeground(new java.awt.Color(0, 15, 255));&#xD;
    jLabel2.setText(&quot;4.1. Global threshold&quot;);&#xD;
    jLabel3.setText(&quot;4.2. Lane threshold&quot;);&#xD;
    jLabel4.setText(&quot;4.3. Band picking&quot;);&#xD;
    javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);&#xD;
    jPanel5.setLayout(jPanel5Layout);&#xD;
    jPanel5Layout.setHorizontalGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel5Layout.createSequentialGroup().addContainerGap().addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel1).addComponent(jLabel6).addComponent(jLabel7).addComponent(jLabel8).addGroup(jPanel5Layout.createSequentialGroup().addGap(12, 12, 12).addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel3).addComponent(jLabel2).addComponent(jLabel4)))).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jPanel5Layout.setVerticalGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel5Layout.createSequentialGroup().addContainerGap().addComponent(jLabel1).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel6).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel8).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel7).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel2).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel3).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel4).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Help&quot;));&#xD;
    jTextArea1.setEditable(false);&#xD;
    jTextArea1.setColumns(20);&#xD;
    jTextArea1.setRows(5);&#xD;
    jTextArea1.setText(&quot;In this step, you can fix a global \nthreshold to automatically locate\nthe bands of the image. Just move\nthe above scrollbar.\n\nYou can also select the colour of\nthe bands.&quot;);&#xD;
    jScrollPane1.setViewportView(jTextArea1);&#xD;
    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);&#xD;
    jPanel2.setLayout(jPanel2Layout);&#xD;
    jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 258, Short.MAX_VALUE));&#xD;
    jPanel2Layout.setVerticalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE));&#xD;
    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);&#xD;
    jPanel1.setLayout(jPanel1Layout);&#xD;
    jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));&#xD;
    jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup().addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)));&#xD;
    jSlider1.setMaximum(255);&#xD;
    jSlider1.setValue(150);&#xD;
    jSlider1.addChangeListener(new javax.swing.event.ChangeListener() {&#xD;
&#xD;
        public void stateChanged(javax.swing.event.ChangeEvent evt) {&#xD;
            jSlider1StateChanged(evt);&#xD;
        }&#xD;
    });&#xD;
    jLabel5.setText(&quot;Threshold:&quot;);&#xD;
    jLabel9.setText(&quot;Colour:&quot;);&#xD;
    jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { &quot;blue&quot;, &quot;red&quot;, &quot;green&quot;, &quot;magenta&quot;, &quot;cyan&quot;, &quot;yellow&quot;, &quot;orange&quot; }));&#xD;
    jComboBox1.addItemListener(new java.awt.event.ItemListener() {&#xD;
&#xD;
        public void itemStateChanged(java.awt.event.ItemEvent evt) {&#xD;
            jComboBox1ItemStateChanged(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);&#xD;
    jPanel3.setLayout(jPanel3Layout);&#xD;
    jPanel3Layout.setHorizontalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jSlider1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(jPanel3Layout.createSequentialGroup().addContainerGap().addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel3Layout.createSequentialGroup().addComponent(jLabel5).addGap(0, 0, Short.MAX_VALUE)).addGroup(jPanel3Layout.createSequentialGroup().addComponent(jLabel9).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))).addContainerGap()));&#xD;
    jPanel3Layout.setVerticalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel3Layout.createSequentialGroup().addGap(21, 21, 21).addComponent(jLabel5).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addGap(18, 18, 18).addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel9).addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addContainerGap(198, Short.MAX_VALUE)));&#xD;
    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());&#xD;
    getContentPane().setLayout(layout);&#xD;
    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(layout.createSequentialGroup().addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))));&#xD;
    layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(layout.createSequentialGroup().addContainerGap().addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)));&#xD;
    pack();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MlTwIRUTEemIe6OhVnSywA" name="formWindowClosed" specification="_MlTJEBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_formWindowClosed&#xD;
    try {&#xD;
        if (close) {&#xD;
            ia.saveUnfinishedExperiment(this, 7);&#xD;
            close = false;&#xD;
        } else {&#xD;
        }&#xD;
    } catch (IOException ex) {&#xD;
        Logger.getLogger(Step4_1.class.getName()).log(Level.SEVERE, null, ex);&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MlWMYBUTEemIe6OhVnSywA" name="jbBackActionPerformed" specification="_MlU-QBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jbBackActionPerformed&#xD;
    close = true;&#xD;
    this.dispose();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MlYooBUTEemIe6OhVnSywA" name="jButton2ActionPerformed" specification="_MlXagBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton2ActionPerformed&#xD;
    close = false;&#xD;
    Color c = Color.BLUE;&#xD;
    switch(jComboBox1.getSelectedIndex()) {&#xD;
        case BLUE:&#xD;
            c = Color.BLUE;&#xD;
            break;&#xD;
        case RED:&#xD;
            c = Color.RED;&#xD;
            break;&#xD;
        case GREEN:&#xD;
            c = Color.GREEN;&#xD;
            break;&#xD;
        case MAGENTA:&#xD;
            c = Color.MAGENTA;&#xD;
            break;&#xD;
        case CYAN:&#xD;
            c = Color.CYAN;&#xD;
            break;&#xD;
        case YELLOW:&#xD;
            c = Color.YELLOW;&#xD;
            break;&#xD;
        case ORANGE:&#xD;
            c = Color.ORANGE;&#xD;
            break;&#xD;
        default:&#xD;
            c = Color.BLUE;&#xD;
            break;&#xD;
    }&#xD;
    ImageWindow iw = imp.getWindow();&#xD;
    iw.setLocked(false);&#xD;
    BandManagerCanvas cc = new BandManagerCanvas(imp);&#xD;
    ImageWindow iw2 = new ImageWindow(imp, cc);&#xD;
    iw2.setLocked(true);&#xD;
    iw.dispose();&#xD;
    int threshold = jSlider1.getValue();&#xD;
    try {&#xD;
        StandardUtils.save_experimentconfig(threshold);&#xD;
    } catch (FileNotFoundException ex) {&#xD;
        Logger.getLogger(Step4_1.class.getName()).log(Level.SEVERE, null, ex);&#xD;
    } catch (UnsupportedEncodingException ex) {&#xD;
        Logger.getLogger(Step4_1.class.getName()).log(Level.SEVERE, null, ex);&#xD;
    }&#xD;
    Step4_2 s = new Step4_2(imp, ia, darkbg, bm, threshold, c);&#xD;
    this.dispose();&#xD;
    System.out.println();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MlbE4BUTEemIe6OhVnSywA" name="jSlider1StateChanged" specification="_MlZ2wBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jSlider1StateChanged&#xD;
    globalselectbands();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mlc6ERUTEemIe6OhVnSywA" name="jComboBox1ItemStateChanged" specification="_MlcTABUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jComboBox1ItemStateChanged&#xD;
    globalselectbands();&#xD;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MktTMBUTEemIe6OhVnSywA" name="Step4_1" visibility="public" method="_MkvIYBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MkuhUBUTEemIe6OhVnSywA" name="imp"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Mkw9kBUTEemIe6OhVnSywA" name="Step4_1" visibility="public" method="_Mk0n8BUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MkyywBUTEemIe6OhVnSywA" name="imp"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MkzZ0BUTEemIe6OhVnSywA" name="aThis" type="_MhQ9oRUTEemIe6OhVnSywA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MkzZ0RUTEemIe6OhVnSywA" name="darkbg">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Mk1PABUTEemIe6OhVnSywA" name="getBm" visibility="public" method="_Mk2dIBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mk12EBUTEemIe6OhVnSywA" type="_MEgJIBUTEemIe6OhVnSywA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Mk3EMBUTEemIe6OhVnSywA" name="globalselectbands" visibility="private" method="_Mk3EMRUTEemIe6OhVnSywA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Mk6ukBUTEemIe6OhVnSywA" name="lineintersectionroi" visibility="private" method="_Mk9K0BUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mk7VoBUTEemIe6OhVnSywA" direction="return"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mk78sBUTEemIe6OhVnSywA" name="r"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mk8jwBUTEemIe6OhVnSywA" name="l"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Mk-Y8BUTEemIe6OhVnSywA" name="higherthantolerance" visibility="private" method="_MlCqYBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mk-Y8RUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Mk_AABUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Mk_nEBUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mk_nERUTEemIe6OhVnSywA" name="v">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MlAOIBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MlAOIRUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MlA1MBUTEemIe6OhVnSywA" name="p">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MlBcQBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MlBcQRUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MlCDUBUTEemIe6OhVnSywA" name="tolerance">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MlDRcBUTEemIe6OhVnSywA" name="movingaveragefilter" visibility="private" method="_MlG70BUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MlD4gBUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MlEfkBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MlFGoBUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MlFGoRUTEemIe6OhVnSywA" name="v">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MlFtsBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MlGUwBUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MlGUwRUTEemIe6OhVnSywA" name="avgpoints">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MlIJ8BUTEemIe6OhVnSywA" name="higherthanvalue" visibility="private" method="_MlLNQBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MlIxABUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MlIxARUTEemIe6OhVnSywA" name="v">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MlJYEBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MlJ_IBUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MlJ_IRUTEemIe6OhVnSywA" name="value">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MlKmMBUTEemIe6OhVnSywA" name="from_end">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MlMbYBUTEemIe6OhVnSywA" name="removeOverlay" visibility="private" method="_MlNCcRUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MlNCcBUTEemIe6OhVnSywA" name="imp"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MlO3oBUTEemIe6OhVnSywA" name="setOverlay" visibility="private" method="_MlQs0BUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MlPesBUTEemIe6OhVnSywA" name="imp"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MlQFwBUTEemIe6OhVnSywA" name="overlay"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MlR68BUTEemIe6OhVnSywA" name="initComponents" visibility="private" method="_MlSiABUTEemIe6OhVnSywA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MlTJEBUTEemIe6OhVnSywA" name="formWindowClosed" visibility="private" method="_MlTwIRUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MlTwIBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MlU-QBUTEemIe6OhVnSywA" name="jbBackActionPerformed" visibility="private" method="_MlWMYBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MlVlUBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MlXagBUTEemIe6OhVnSywA" name="jButton2ActionPerformed" visibility="private" method="_MlYooBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MlYBkBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MlZ2wBUTEemIe6OhVnSywA" name="jSlider1StateChanged" visibility="private" method="_MlbE4BUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mlad0BUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MlcTABUTEemIe6OhVnSywA" name="jComboBox1ItemStateChanged" visibility="private" method="_Mlc6ERUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mlc6EBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_Ml60IBUTEemIe6OhVnSywA" name="step2_2" visibility="public">
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Ml8pUBUTEemIe6OhVnSywA" name="close" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_Ml9QYBUTEemIe6OhVnSywA" name="defaultValue">
                    <language>JAVA</language>
                    <body>true</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Ml-egBUTEemIe6OhVnSywA" name="imp" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Ml_FkBUTEemIe6OhVnSywA" name="ia" visibility="private" type="_MhQ9oRUTEemIe6OhVnSywA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MmATsBUTEemIe6OhVnSywA" name="lm" visibility="private" type="_MHgZ0BUTEemIe6OhVnSywA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MmA6wBUTEemIe6OhVnSywA" name="darkbg" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MmjGQBUTEemIe6OhVnSywA" name="buttonGroup1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MmjtUBUTEemIe6OhVnSywA" name="jButton1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MmjtURUTEemIe6OhVnSywA" name="jButton2" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MmkUYBUTEemIe6OhVnSywA" name="jButton3" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MmmJkBUTEemIe6OhVnSywA" name="jButton5" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mmn-wBUTEemIe6OhVnSywA" name="jButton6" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mmol0BUTEemIe6OhVnSywA" name="jButton7" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MmqbABUTEemIe6OhVnSywA" name="jButton8" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MmrpIBUTEemIe6OhVnSywA" name="jComboBox1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mms3QBUTEemIe6OhVnSywA" name="jLabel1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MmuFYBUTEemIe6OhVnSywA" name="jLabel2" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mmv6kBUTEemIe6OhVnSywA" name="jLabel3" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MmxIsBUTEemIe6OhVnSywA" name="jLabel4" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MmyW0BUTEemIe6OhVnSywA" name="jLabel5" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mmzk8BUTEemIe6OhVnSywA" name="jLabel6" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mm1aIBUTEemIe6OhVnSywA" name="jLabel7" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mm2oQBUTEemIe6OhVnSywA" name="jLabel8" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mm32YBUTEemIe6OhVnSywA" name="jPanel1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mm4dcBUTEemIe6OhVnSywA" name="jPanel2" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mm5rkBUTEemIe6OhVnSywA" name="jPanel3" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mm65sBUTEemIe6OhVnSywA" name="jPanel4" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mm8H0BUTEemIe6OhVnSywA" name="jPanel5" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mm8u4BUTEemIe6OhVnSywA" name="jPanel6" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mm99ABUTEemIe6OhVnSywA" name="jPanel7" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mm_LIBUTEemIe6OhVnSywA" name="jScrollPane1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MnAZQBUTEemIe6OhVnSywA" name="jTextArea1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MnBnYBUTEemIe6OhVnSywA" name="jbBack" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MnC1gBUTEemIe6OhVnSywA" name="jbaddinfo" visibility="private" isUnique="false"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MmFzQBUTEemIe6OhVnSywA" name="step2_2" specification="_MmCI4BUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    super();&#xD;
    initComponents();&#xD;
    this.imp = imp;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MmNIABUTEemIe6OhVnSywA" name="step2_2" specification="_MmHocBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    super();&#xD;
    IJ.setTool(&quot;rectangle&quot;);&#xD;
    initComponents();&#xD;
    this.imp = imp;&#xD;
    this.ia = aThis;&#xD;
    this.darkbg = darkbg;&#xD;
    if (lm == null) {&#xD;
        this.lm = new LaneManager(ia.m);&#xD;
        this.lm.delete_without_asking(true);&#xD;
    } else {&#xD;
        this.lm = lm;&#xD;
    }&#xD;
    this.lm.setbgcheckboxstate(darkbg);&#xD;
    this.lm.updateShowAll();&#xD;
    Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();&#xD;
    double width = screenSize.getWidth();&#xD;
    setVisible(true);&#xD;
    setLocation((int) width - 515, 0);&#xD;
    imp.getWindow().setAlwaysOnTop(true);&#xD;
    setAlwaysOnTop(true);&#xD;
    toFront();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MmPkQBUTEemIe6OhVnSywA" name="getLm" specification="_MmOWIBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    return lm;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MmSAgBUTEemIe6OhVnSywA" name="initComponents" specification="_MmQyYBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    buttonGroup1 = new javax.swing.ButtonGroup();&#xD;
    jPanel4 = new javax.swing.JPanel();&#xD;
    jButton2 = new javax.swing.JButton();&#xD;
    jbBack = new javax.swing.JButton();&#xD;
    jPanel5 = new javax.swing.JPanel();&#xD;
    jLabel1 = new javax.swing.JLabel();&#xD;
    jLabel6 = new javax.swing.JLabel();&#xD;
    jLabel7 = new javax.swing.JLabel();&#xD;
    jLabel8 = new javax.swing.JLabel();&#xD;
    jLabel2 = new javax.swing.JLabel();&#xD;
    jLabel3 = new javax.swing.JLabel();&#xD;
    jLabel4 = new javax.swing.JLabel();&#xD;
    jPanel1 = new javax.swing.JPanel();&#xD;
    jPanel2 = new javax.swing.JPanel();&#xD;
    jScrollPane1 = new javax.swing.JScrollPane();&#xD;
    jTextArea1 = new javax.swing.JTextArea();&#xD;
    jPanel3 = new javax.swing.JPanel();&#xD;
    jPanel6 = new javax.swing.JPanel();&#xD;
    jButton1 = new javax.swing.JButton();&#xD;
    jButton3 = new javax.swing.JButton();&#xD;
    jButton5 = new javax.swing.JButton();&#xD;
    jButton6 = new javax.swing.JButton();&#xD;
    jLabel5 = new javax.swing.JLabel();&#xD;
    jComboBox1 = new javax.swing.JComboBox();&#xD;
    jbaddinfo = new javax.swing.JButton();&#xD;
    jPanel7 = new javax.swing.JPanel();&#xD;
    jButton7 = new javax.swing.JButton();&#xD;
    jButton8 = new javax.swing.JButton();&#xD;
    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);&#xD;
    setTitle(&quot;Image analysis&quot;);&#xD;
    setResizable(false);&#xD;
    addWindowListener(new java.awt.event.WindowAdapter() {&#xD;
&#xD;
        public void windowClosed(java.awt.event.WindowEvent evt) {&#xD;
            formWindowClosed(evt);&#xD;
        }&#xD;
    });&#xD;
    jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());&#xD;
    jButton2.setText(&quot;Next>&quot;);&#xD;
    jButton2.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton2ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jbBack.setText(&quot;&lt;Back&quot;);&#xD;
    jbBack.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbBackActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);&#xD;
    jPanel4.setLayout(jPanel4Layout);&#xD;
    jPanel4Layout.setHorizontalGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addComponent(jbBack).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButton2)));&#xD;
    jPanel4Layout.setVerticalGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jButton2).addComponent(jbBack))));&#xD;
    jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Steps&quot;)));&#xD;
    jPanel5.setForeground(new java.awt.Color(0, 17, 255));&#xD;
    jLabel1.setText(&quot;Step 1. Image preprocessing&quot;);&#xD;
    jLabel6.setText(&quot;Step 2. Lane detection&quot;);&#xD;
    jLabel7.setText(&quot;Step 3. Normalisation&quot;);&#xD;
    jLabel8.setText(&quot;Step 4. Band detection&quot;);&#xD;
    jLabel2.setText(&quot;2.1. Background&quot;);&#xD;
    jLabel3.setForeground(new java.awt.Color(0, 15, 255));&#xD;
    jLabel3.setText(&quot;2.2. Lane edition&quot;);&#xD;
    jLabel4.setText(&quot;2.3. Fix reference lanes&quot;);&#xD;
    javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);&#xD;
    jPanel5.setLayout(jPanel5Layout);&#xD;
    jPanel5Layout.setHorizontalGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel5Layout.createSequentialGroup().addContainerGap().addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel1).addComponent(jLabel6).addComponent(jLabel7).addComponent(jLabel8).addGroup(jPanel5Layout.createSequentialGroup().addGap(12, 12, 12).addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel3).addComponent(jLabel2).addComponent(jLabel4)))).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jPanel5Layout.setVerticalGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel5Layout.createSequentialGroup().addContainerGap().addComponent(jLabel1).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel6).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel2).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel3).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel4).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel7).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel8).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Help&quot;));&#xD;
    jTextArea1.setEditable(false);&#xD;
    jTextArea1.setColumns(20);&#xD;
    jTextArea1.setRows(5);&#xD;
    jTextArea1.setText(&quot;In this step, the lanes of the image\nhave been detected. You can edit\nthem using the above buttons. \n\nThe available shortcuts are \nindicated between brackets.&quot;);&#xD;
    jScrollPane1.setViewportView(jTextArea1);&#xD;
    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);&#xD;
    jPanel2.setLayout(jPanel2Layout);&#xD;
    jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 258, Short.MAX_VALUE));&#xD;
    jPanel2Layout.setVerticalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE));&#xD;
    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);&#xD;
    jPanel1.setLayout(jPanel1Layout);&#xD;
    jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));&#xD;
    jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup().addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)));&#xD;
    jPanel3.setBorder(null);&#xD;
    jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Edition tools&quot;));&#xD;
    jButton1.setText(&quot;Add lane [a]&quot;);&#xD;
    jButton1.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton1ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jButton3.setText(&quot;Delete lane&quot;);&#xD;
    jButton3.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton3ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jButton5.setText(&quot;Adjust contrast of lane&quot;);&#xD;
    jButton5.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton5ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jButton6.setText(&quot;Remove background of lane&quot;);&#xD;
    jButton6.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton6ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jLabel5.setText(&quot;Colour:&quot;);&#xD;
    jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { &quot;blue&quot;, &quot;red&quot;, &quot;green&quot;, &quot;magenta&quot;, &quot;cyan&quot;, &quot;yellow&quot;, &quot;orange&quot; }));&#xD;
    jComboBox1.addItemListener(new java.awt.event.ItemListener() {&#xD;
&#xD;
        public void itemStateChanged(java.awt.event.ItemEvent evt) {&#xD;
            jComboBox1ItemStateChanged(evt);&#xD;
        }&#xD;
    });&#xD;
    jbaddinfo.setText(&quot;Add information about lane&quot;);&#xD;
    jbaddinfo.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbaddinfoActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);&#xD;
    jPanel6.setLayout(jPanel6Layout);&#xD;
    jPanel6Layout.setHorizontalGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, 258, Short.MAX_VALUE).addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, 258, Short.MAX_VALUE).addGroup(jPanel6Layout.createSequentialGroup().addComponent(jLabel5).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)).addComponent(jbaddinfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));&#xD;
    jPanel6Layout.setVerticalGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel6Layout.createSequentialGroup().addComponent(jButton1).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButton3).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jbaddinfo).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButton5).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButton6).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel5).addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Selection tools&quot;));&#xD;
    jButton7.setText(&quot;Rectangle tool&quot;);&#xD;
    jButton7.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton7ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jButton8.setText(&quot;Polygon tool&quot;);&#xD;
    jButton8.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton8ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);&#xD;
    jPanel7.setLayout(jPanel7Layout);&#xD;
    jPanel7Layout.setHorizontalGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));&#xD;
    jPanel7Layout.setVerticalGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel7Layout.createSequentialGroup().addContainerGap().addComponent(jButton7).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButton8).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);&#xD;
    jPanel3.setLayout(jPanel3Layout);&#xD;
    jPanel3Layout.setHorizontalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));&#xD;
    jPanel3Layout.setVerticalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel3Layout.createSequentialGroup().addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());&#xD;
    getContentPane().setLayout(layout);&#xD;
    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(layout.createSequentialGroup().addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))));&#xD;
    layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(layout.createSequentialGroup().addContainerGap().addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)));&#xD;
    pack();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MmUcwBUTEemIe6OhVnSywA" name="formWindowClosed" specification="_MmTOoBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_formWindowClosed&#xD;
    try {&#xD;
        if (close) {&#xD;
            ia.saveUnfinishedExperiment(this, 5);&#xD;
            close = false;&#xD;
        } else {&#xD;
        }&#xD;
    } catch (IOException ex) {&#xD;
        Logger.getLogger(step2_2.class.getName()).log(Level.SEVERE, null, ex);&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MmW5ARUTEemIe6OhVnSywA" name="jbBackActionPerformed" specification="_MmVq4BUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jbBackActionPerformed&#xD;
    close = false;&#xD;
    imp.deleteRoi();&#xD;
    lm.close();&#xD;
    this.dispose();&#xD;
    ImageWindow iw = imp.getWindow();&#xD;
    iw.setLocked(false);&#xD;
    ImageCanvas cc = new ImageCanvas(imp);&#xD;
    ImageWindow iw2 = new ImageWindow(imp, cc);&#xD;
    iw2.setLocked(true);&#xD;
    imp.changes = false;&#xD;
    iw.dispose();&#xD;
    cc.requestFocus();&#xD;
    step2_1 s = new step2_1(imp, ia);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MmZVQBUTEemIe6OhVnSywA" name="jButton2ActionPerformed" specification="_MmYHIBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton2ActionPerformed&#xD;
    close = false;&#xD;
    step2_3 s = new step2_3(imp, ia, darkbg, lm);&#xD;
    this.dispose();&#xD;
    System.out.println();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MmcYkBUTEemIe6OhVnSywA" name="jButton8ActionPerformed" specification="_MmbKcBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton8ActionPerformed&#xD;
    IJ.setTool(&quot;polygon&quot;);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mme00BUTEemIe6OhVnSywA" name="jButton7ActionPerformed" specification="_MmdmsBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton7ActionPerformed&#xD;
    IJ.setTool(&quot;rectangle&quot;);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MmgC8BUTEemIe6OhVnSywA" name="jButton6ActionPerformed" specification="_Mmfb4BUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton6ActionPerformed&#xD;
    IJ.run(imp, &quot;8-bit&quot;, &quot;&quot;);&#xD;
    this.setAlwaysOnTop(false);&#xD;
    imp.getWindow().setAlwaysOnTop(false);&#xD;
    lm.backgroundremoval(imp);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MmgC8xUTEemIe6OhVnSywA" name="jButton5ActionPerformed" specification="_MmgC8RUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton5ActionPerformed&#xD;
    IJ.run(imp, &quot;RGB Color&quot;, &quot;&quot;);&#xD;
    this.setAlwaysOnTop(false);&#xD;
    imp.getWindow().setAlwaysOnTop(false);&#xD;
    lm.adjustcontrastbrightness(imp);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MmgqAhUTEemIe6OhVnSywA" name="jButton3ActionPerformed" specification="_MmgqABUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton3ActionPerformed&#xD;
    IJ.run(imp, &quot;8-bit&quot;, &quot;&quot;);&#xD;
    this.setAlwaysOnTop(false);&#xD;
    imp.getWindow().setAlwaysOnTop(false);&#xD;
    lm.delete(false);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MmhREhUTEemIe6OhVnSywA" name="jButton1ActionPerformed" specification="_MmhREBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton1ActionPerformed&#xD;
    IJ.run(imp, &quot;8-bit&quot;, &quot;&quot;);&#xD;
    this.setAlwaysOnTop(false);&#xD;
    imp.getWindow().setAlwaysOnTop(false);&#xD;
    lm.runCommand(&quot;add&quot;);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mmh4IRUTEemIe6OhVnSywA" name="jComboBox1ItemStateChanged" specification="_MmhRExUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jComboBox1ItemStateChanged&#xD;
    this.setAlwaysOnTop(false);&#xD;
    imp.getWindow().setAlwaysOnTop(false);&#xD;
    int colour = jComboBox1.getSelectedIndex();&#xD;
    Color c;&#xD;
    switch(colour) {&#xD;
        case BLUE:&#xD;
            c = Color.BLUE;&#xD;
            break;&#xD;
        case RED:&#xD;
            c = Color.RED;&#xD;
            break;&#xD;
        case GREEN:&#xD;
            c = Color.GREEN;&#xD;
            break;&#xD;
        case MAGENTA:&#xD;
            c = Color.MAGENTA;&#xD;
            break;&#xD;
        case CYAN:&#xD;
            c = Color.CYAN;&#xD;
            break;&#xD;
        case YELLOW:&#xD;
            c = Color.YELLOW;&#xD;
            break;&#xD;
        case ORANGE:&#xD;
            c = Color.ORANGE;&#xD;
            break;&#xD;
        default:&#xD;
            c = Color.BLUE;&#xD;
            break;&#xD;
    }&#xD;
    lm.change_colour(c);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MmifMhUTEemIe6OhVnSywA" name="jbaddinfoActionPerformed" specification="_MmifMBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jbaddinfoActionPerformed&#xD;
    IJ.run(imp, &quot;8-bit&quot;, &quot;&quot;);&#xD;
    this.setAlwaysOnTop(false);&#xD;
    imp.getWindow().setAlwaysOnTop(false);&#xD;
    lm.add_info_about_lane();&#xD;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MmCI4BUTEemIe6OhVnSywA" name="step2_2" visibility="public" method="_MmFzQBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MmFMMBUTEemIe6OhVnSywA" name="imp"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MmHocBUTEemIe6OhVnSywA" name="step2_2" visibility="public" method="_MmNIABUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MmKEsBUTEemIe6OhVnSywA" name="imp"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MmKrwBUTEemIe6OhVnSywA" name="aThis" type="_MhQ9oRUTEemIe6OhVnSywA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MmLS0BUTEemIe6OhVnSywA" name="darkbg">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MmL54BUTEemIe6OhVnSywA" name="lm" type="_MHgZ0BUTEemIe6OhVnSywA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MmOWIBUTEemIe6OhVnSywA" name="getLm" visibility="public" method="_MmPkQBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MmO9MBUTEemIe6OhVnSywA" type="_MHgZ0BUTEemIe6OhVnSywA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MmQyYBUTEemIe6OhVnSywA" name="initComponents" visibility="private" method="_MmSAgBUTEemIe6OhVnSywA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MmTOoBUTEemIe6OhVnSywA" name="formWindowClosed" visibility="private" method="_MmUcwBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MmT1sBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MmVq4BUTEemIe6OhVnSywA" name="jbBackActionPerformed" visibility="private" method="_MmW5ARUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MmW5ABUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MmYHIBUTEemIe6OhVnSywA" name="jButton2ActionPerformed" visibility="private" method="_MmZVQBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MmYuMBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MmbKcBUTEemIe6OhVnSywA" name="jButton8ActionPerformed" visibility="private" method="_MmcYkBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MmbxgBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MmdmsBUTEemIe6OhVnSywA" name="jButton7ActionPerformed" visibility="private" method="_Mme00BUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MmeNwBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Mmfb4BUTEemIe6OhVnSywA" name="jButton6ActionPerformed" visibility="private" method="_MmgC8BUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mmfb4RUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MmgC8RUTEemIe6OhVnSywA" name="jButton5ActionPerformed" visibility="private" method="_MmgC8xUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MmgC8hUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MmgqABUTEemIe6OhVnSywA" name="jButton3ActionPerformed" visibility="private" method="_MmgqAhUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MmgqARUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MmhREBUTEemIe6OhVnSywA" name="jButton1ActionPerformed" visibility="private" method="_MmhREhUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MmhRERUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MmhRExUTEemIe6OhVnSywA" name="jComboBox1ItemStateChanged" visibility="private" method="_Mmh4IRUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mmh4IBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MmifMBUTEemIe6OhVnSywA" name="jbaddinfoActionPerformed" visibility="private" method="_MmifMhUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MmifMRUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_MnGf4BUTEemIe6OhVnSywA" name="step2_3" visibility="public">
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MnIVEBUTEemIe6OhVnSywA" name="close" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MnJjMBUTEemIe6OhVnSywA" name="defaultValue">
                    <language>JAVA</language>
                    <body>true</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MnKxUBUTEemIe6OhVnSywA" name="imp" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MnL_cBUTEemIe6OhVnSywA" name="ia" visibility="private" type="_MhQ9oRUTEemIe6OhVnSywA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MnNNkBUTEemIe6OhVnSywA" name="lm" visibility="private" type="_MHgZ0BUTEemIe6OhVnSywA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MnObsBUTEemIe6OhVnSywA" name="darkbg" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mn0RkBUTEemIe6OhVnSywA" name="buttonGroup1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mn1fsBUTEemIe6OhVnSywA" name="jButton1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mn2t0BUTEemIe6OhVnSywA" name="jButton2" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mn2t0RUTEemIe6OhVnSywA" name="jButton3" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mn2t0hUTEemIe6OhVnSywA" name="jLabel1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mn3U4BUTEemIe6OhVnSywA" name="jLabel2" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mn3U4RUTEemIe6OhVnSywA" name="jLabel3" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mn3U4hUTEemIe6OhVnSywA" name="jLabel4" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mn3U4xUTEemIe6OhVnSywA" name="jLabel6" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mn378BUTEemIe6OhVnSywA" name="jLabel7" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mn378RUTEemIe6OhVnSywA" name="jLabel8" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mn378hUTEemIe6OhVnSywA" name="jPanel1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mn4jABUTEemIe6OhVnSywA" name="jPanel2" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mn4jARUTEemIe6OhVnSywA" name="jPanel3" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mn4jAhUTEemIe6OhVnSywA" name="jPanel4" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mn5KEBUTEemIe6OhVnSywA" name="jPanel5" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mn5KERUTEemIe6OhVnSywA" name="jScrollPane1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mn5KEhUTEemIe6OhVnSywA" name="jTextArea1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mn5xIBUTEemIe6OhVnSywA" name="jbBack" visibility="private" isUnique="false"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MnTUMBUTEemIe6OhVnSywA" name="step2_3" specification="_MnPp0BUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    super();&#xD;
    initComponents();&#xD;
    this.imp = imp;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MndFMBUTEemIe6OhVnSywA" name="step2_3" specification="_MnVwcBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    super();&#xD;
    initComponents();&#xD;
    this.imp = imp;&#xD;
    this.ia = aThis;&#xD;
    this.darkbg = darkbg;&#xD;
    if (lm == null) {&#xD;
        this.lm = new LaneManager(ia.m);&#xD;
        this.lm.delete_without_asking(true);&#xD;
    } else {&#xD;
        this.lm = lm;&#xD;
    }&#xD;
    this.lm.setbgcheckboxstate(darkbg);&#xD;
    this.lm.updateShowAll();&#xD;
    Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();&#xD;
    double width = screenSize.getWidth();&#xD;
    setVisible(true);&#xD;
    setLocation((int) width - 515, 0);&#xD;
    imp.getWindow().setAlwaysOnTop(true);&#xD;
    setAlwaysOnTop(true);&#xD;
    toFront();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mne6YBUTEemIe6OhVnSywA" name="getLm" specification="_MndsQBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    return lm;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MnhWoBUTEemIe6OhVnSywA" name="initComponents" specification="_MngIgBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    buttonGroup1 = new javax.swing.ButtonGroup();&#xD;
    jPanel4 = new javax.swing.JPanel();&#xD;
    jButton2 = new javax.swing.JButton();&#xD;
    jbBack = new javax.swing.JButton();&#xD;
    jPanel5 = new javax.swing.JPanel();&#xD;
    jLabel1 = new javax.swing.JLabel();&#xD;
    jLabel6 = new javax.swing.JLabel();&#xD;
    jLabel7 = new javax.swing.JLabel();&#xD;
    jLabel8 = new javax.swing.JLabel();&#xD;
    jLabel2 = new javax.swing.JLabel();&#xD;
    jLabel3 = new javax.swing.JLabel();&#xD;
    jLabel4 = new javax.swing.JLabel();&#xD;
    jPanel1 = new javax.swing.JPanel();&#xD;
    jPanel2 = new javax.swing.JPanel();&#xD;
    jScrollPane1 = new javax.swing.JScrollPane();&#xD;
    jTextArea1 = new javax.swing.JTextArea();&#xD;
    jPanel3 = new javax.swing.JPanel();&#xD;
    jButton1 = new javax.swing.JButton();&#xD;
    jButton3 = new javax.swing.JButton();&#xD;
    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);&#xD;
    setTitle(&quot;Image analysis&quot;);&#xD;
    setResizable(false);&#xD;
    addWindowListener(new java.awt.event.WindowAdapter() {&#xD;
&#xD;
        public void windowClosed(java.awt.event.WindowEvent evt) {&#xD;
            formWindowClosed(evt);&#xD;
        }&#xD;
    });&#xD;
    jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());&#xD;
    jButton2.setText(&quot;Next>&quot;);&#xD;
    jButton2.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton2ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jbBack.setText(&quot;&lt;Back&quot;);&#xD;
    jbBack.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbBackActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);&#xD;
    jPanel4.setLayout(jPanel4Layout);&#xD;
    jPanel4Layout.setHorizontalGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addComponent(jbBack).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButton2)));&#xD;
    jPanel4Layout.setVerticalGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jButton2).addComponent(jbBack))));&#xD;
    jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Steps&quot;)));&#xD;
    jPanel5.setForeground(new java.awt.Color(0, 17, 255));&#xD;
    jLabel1.setText(&quot;Step 1. Image preprocessing&quot;);&#xD;
    jLabel6.setText(&quot;Step 2. Lane detection&quot;);&#xD;
    jLabel7.setText(&quot;Step 3. Normalisation&quot;);&#xD;
    jLabel8.setText(&quot;Step 4. Band detection&quot;);&#xD;
    jLabel2.setText(&quot;2.1. Background&quot;);&#xD;
    jLabel3.setText(&quot;2.2. Lane edition&quot;);&#xD;
    jLabel4.setForeground(new java.awt.Color(0, 15, 255));&#xD;
    jLabel4.setText(&quot;2.3. Fix reference lanes&quot;);&#xD;
    javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);&#xD;
    jPanel5.setLayout(jPanel5Layout);&#xD;
    jPanel5Layout.setHorizontalGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel5Layout.createSequentialGroup().addContainerGap().addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel1).addComponent(jLabel6).addComponent(jLabel7).addComponent(jLabel8).addGroup(jPanel5Layout.createSequentialGroup().addGap(12, 12, 12).addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel3).addComponent(jLabel2).addComponent(jLabel4)))).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jPanel5Layout.setVerticalGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel5Layout.createSequentialGroup().addContainerGap().addComponent(jLabel1).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel6).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel2).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel3).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel4).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel7).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel8).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Help&quot;));&#xD;
    jTextArea1.setEditable(false);&#xD;
    jTextArea1.setColumns(20);&#xD;
    jTextArea1.setRows(5);&#xD;
    jTextArea1.setText(&quot;In this step, you must fix the \nreference lanes of the image. You\nmust indicate, at least, one \nreference lane. In order to do \nthat, select a lane and press the\nFix reference lane button, or \nselect a lane and press the f key.&quot;);&#xD;
    jScrollPane1.setViewportView(jTextArea1);&#xD;
    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);&#xD;
    jPanel2.setLayout(jPanel2Layout);&#xD;
    jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 258, Short.MAX_VALUE));&#xD;
    jPanel2Layout.setVerticalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE));&#xD;
    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);&#xD;
    jPanel1.setLayout(jPanel1Layout);&#xD;
    jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));&#xD;
    jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup().addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)));&#xD;
    jPanel3.setBorder(null);&#xD;
    jButton1.setText(&quot;Fix reference lane [f]&quot;);&#xD;
    jButton1.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton1ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jButton3.setText(&quot;Delete reference lane&quot;);&#xD;
    jButton3.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton3ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);&#xD;
    jPanel3.setLayout(jPanel3Layout);&#xD;
    jPanel3Layout.setHorizontalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE));&#xD;
    jPanel3Layout.setVerticalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel3Layout.createSequentialGroup().addComponent(jButton1).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButton3).addGap(0, 257, Short.MAX_VALUE)));&#xD;
    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());&#xD;
    getContentPane().setLayout(layout);&#xD;
    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(layout.createSequentialGroup().addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))));&#xD;
    layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(layout.createSequentialGroup().addContainerGap().addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)));&#xD;
    pack();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MnloEBUTEemIe6OhVnSywA" name="formWindowClosed" specification="_MnjL0BUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_formWindowClosed&#xD;
    try {&#xD;
        if (close) {&#xD;
            ia.saveUnfinishedExperiment(this, 5);&#xD;
            close = false;&#xD;
        } else {&#xD;
        }&#xD;
    } catch (IOException ex) {&#xD;
        Logger.getLogger(step2_3.class.getName()).log(Level.SEVERE, null, ex);&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MnorYBUTEemIe6OhVnSywA" name="jbBackActionPerformed" specification="_Mnm2MBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jbBackActionPerformed&#xD;
    close = false;&#xD;
    step2_2 s = new step2_2(imp, ia, darkbg, lm);&#xD;
    this.dispose();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MnrusBUTEemIe6OhVnSywA" name="jButton2ActionPerformed" specification="_MnqgkBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton2ActionPerformed&#xD;
    close = false;&#xD;
    if (lm.getnumberofstds() &lt; 1) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;You must select (at least) one reference lane&quot;, &quot;Reference Lanes&quot;, JOptionPane.INFORMATION_MESSAGE);&#xD;
        return;&#xD;
    }&#xD;
    lm.close();&#xD;
    ia.m.setLm(null);&#xD;
    ImageWindow iw = imp.getWindow();&#xD;
    iw.setLocked(false);&#xD;
    BandManagerMarkerCanvas cc = new BandManagerMarkerCanvas(imp);&#xD;
    ImageWindow iw2 = new ImageWindow(imp, cc);&#xD;
    iw2.setLocked(true);&#xD;
    iw.dispose();&#xD;
    Step3_1 s = new Step3_1(imp, ia, darkbg);&#xD;
    this.dispose();&#xD;
    System.out.println();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MnvZEBUTEemIe6OhVnSywA" name="jButton3ActionPerformed" specification="_Mntj4BUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton3ActionPerformed&#xD;
    IJ.run(imp, &quot;8-bit&quot;, &quot;&quot;);&#xD;
    this.setAlwaysOnTop(false);&#xD;
    imp.getWindow().setAlwaysOnTop(false);&#xD;
    lm.delete_standard();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MnzDcBUTEemIe6OhVnSywA" name="jButton1ActionPerformed" specification="_MnxOQBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton1ActionPerformed&#xD;
    IJ.run(imp, &quot;8-bit&quot;, &quot;&quot;);&#xD;
    this.setAlwaysOnTop(false);&#xD;
    imp.getWindow().setAlwaysOnTop(false);&#xD;
    lm.fix_standard();&#xD;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MnPp0BUTEemIe6OhVnSywA" name="step2_3" visibility="public" method="_MnTUMBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MnStIBUTEemIe6OhVnSywA" name="imp"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MnVwcBUTEemIe6OhVnSywA" name="step2_3" visibility="public" method="_MndFMBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MnYzwBUTEemIe6OhVnSywA" name="imp"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MnaB4BUTEemIe6OhVnSywA" name="aThis" type="_MhQ9oRUTEemIe6OhVnSywA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mnao8BUTEemIe6OhVnSywA" name="darkbg">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mnb3EBUTEemIe6OhVnSywA" name="lm" type="_MHgZ0BUTEemIe6OhVnSywA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MndsQBUTEemIe6OhVnSywA" name="getLm" visibility="public" method="_Mne6YBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MneTUBUTEemIe6OhVnSywA" type="_MHgZ0BUTEemIe6OhVnSywA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MngIgBUTEemIe6OhVnSywA" name="initComponents" visibility="private" method="_MnhWoBUTEemIe6OhVnSywA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MnjL0BUTEemIe6OhVnSywA" name="formWindowClosed" visibility="private" method="_MnloEBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MnkZ8BUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Mnm2MBUTEemIe6OhVnSywA" name="jbBackActionPerformed" visibility="private" method="_MnorYBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MnoEUBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MnqgkBUTEemIe6OhVnSywA" name="jButton2ActionPerformed" visibility="private" method="_MnrusBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MnrHoBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Mntj4BUTEemIe6OhVnSywA" name="jButton3ActionPerformed" visibility="private" method="_MnvZEBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MnuK8BUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MnxOQBUTEemIe6OhVnSywA" name="jButton1ActionPerformed" visibility="private" method="_MnzDcBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mnx1UBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_Mn9bgBUTEemIe6OhVnSywA" name="step1_1" visibility="public">
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mn_QsBUTEemIe6OhVnSywA" name="imp" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MoAe0BUTEemIe6OhVnSywA" name="ia" visibility="private" type="_MhQ9oRUTEemIe6OhVnSywA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MoCUABUTEemIe6OhVnSywA" name="close" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MoDiIBUTEemIe6OhVnSywA" name="defaultValue">
                    <language>JAVA</language>
                    <body>true</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_ModKwBUTEemIe6OhVnSywA" name="jBUndo" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Moe_8BUTEemIe6OhVnSywA" name="jButton2" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MogOEBUTEemIe6OhVnSywA" name="jLabel1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MohcMBUTEemIe6OhVnSywA" name="jLabel2" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MojRYBUTEemIe6OhVnSywA" name="jLabel3" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MolGkBUTEemIe6OhVnSywA" name="jLabel4" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mom7wBUTEemIe6OhVnSywA" name="jLabel5" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Moow8BUTEemIe6OhVnSywA" name="jLabel6" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mop_EBUTEemIe6OhVnSywA" name="jLabel7" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mor0QBUTEemIe6OhVnSywA" name="jLabel8" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MotpcBUTEemIe6OhVnSywA" name="jPanel1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MowFsBUTEemIe6OhVnSywA" name="jPanel2" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MoxT0BUTEemIe6OhVnSywA" name="jPanel3" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Moyh8BUTEemIe6OhVnSywA" name="jPanel4" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MozwEBUTEemIe6OhVnSywA" name="jPanel5" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mo0-MBUTEemIe6OhVnSywA" name="jScrollPane1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mo2zYBUTEemIe6OhVnSywA" name="jTextArea1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mo4BgBUTEemIe6OhVnSywA" name="jbCrop" visibility="private" isUnique="false"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MoIaoBUTEemIe6OhVnSywA" name="step1_1" specification="_MoEwQBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    super();&#xD;
    initComponents();&#xD;
    this.imp = imp;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MoN6MBUTEemIe6OhVnSywA" name="step1_1" specification="_MoJowBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    initComponents();&#xD;
    this.imp = imp;&#xD;
    this.ia = aThis;&#xD;
    IJ.setTool(&quot;rectangle&quot;);&#xD;
    Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();&#xD;
    double width = screenSize.getWidth();&#xD;
    setVisible(true);&#xD;
    setLocation((int) width - 515, 0);&#xD;
    imp.getWindow().setAlwaysOnTop(true);&#xD;
    setAlwaysOnTop(true);&#xD;
    toFront();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MoQWcBUTEemIe6OhVnSywA" name="initComponents" specification="_MoPIUBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    jPanel4 = new javax.swing.JPanel();&#xD;
    jButton2 = new javax.swing.JButton();&#xD;
    jPanel5 = new javax.swing.JPanel();&#xD;
    jLabel1 = new javax.swing.JLabel();&#xD;
    jLabel2 = new javax.swing.JLabel();&#xD;
    jLabel3 = new javax.swing.JLabel();&#xD;
    jLabel4 = new javax.swing.JLabel();&#xD;
    jLabel5 = new javax.swing.JLabel();&#xD;
    jLabel6 = new javax.swing.JLabel();&#xD;
    jLabel7 = new javax.swing.JLabel();&#xD;
    jLabel8 = new javax.swing.JLabel();&#xD;
    jPanel1 = new javax.swing.JPanel();&#xD;
    jPanel2 = new javax.swing.JPanel();&#xD;
    jScrollPane1 = new javax.swing.JScrollPane();&#xD;
    jTextArea1 = new javax.swing.JTextArea();&#xD;
    jPanel3 = new javax.swing.JPanel();&#xD;
    jbCrop = new javax.swing.JButton();&#xD;
    jBUndo = new javax.swing.JButton();&#xD;
    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);&#xD;
    setTitle(&quot;Image analysis&quot;);&#xD;
    setResizable(false);&#xD;
    addWindowListener(new java.awt.event.WindowAdapter() {&#xD;
&#xD;
        public void windowClosed(java.awt.event.WindowEvent evt) {&#xD;
            formWindowClosed(evt);&#xD;
        }&#xD;
    });&#xD;
    jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());&#xD;
    jButton2.setText(&quot;Next>&quot;);&#xD;
    jButton2.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton2ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);&#xD;
    jPanel4.setLayout(jPanel4Layout);&#xD;
    jPanel4Layout.setHorizontalGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addComponent(jButton2)));&#xD;
    jPanel4Layout.setVerticalGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addComponent(jButton2)));&#xD;
    jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Steps&quot;)));&#xD;
    jPanel5.setForeground(new java.awt.Color(0, 17, 255));&#xD;
    jLabel1.setText(&quot;Step 1. Image preprocessing&quot;);&#xD;
    jLabel2.setForeground(new java.awt.Color(0, 15, 255));&#xD;
    jLabel2.setText(&quot;1.1. Crop&quot;);&#xD;
    jLabel3.setText(&quot;1.2. Invert&quot;);&#xD;
    jLabel4.setText(&quot;1.3. Adjust contrast&quot;);&#xD;
    jLabel5.setText(&quot;1.4. Other operations&quot;);&#xD;
    jLabel6.setText(&quot;Step 2. Lane detection&quot;);&#xD;
    jLabel7.setText(&quot;Step 3. Normalisation&quot;);&#xD;
    jLabel8.setText(&quot;Step 4. Band detection&quot;);&#xD;
    javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);&#xD;
    jPanel5.setLayout(jPanel5Layout);&#xD;
    jPanel5Layout.setHorizontalGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel5Layout.createSequentialGroup().addContainerGap().addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel1).addGroup(jPanel5Layout.createSequentialGroup().addGap(12, 12, 12).addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel3).addComponent(jLabel2).addComponent(jLabel4).addComponent(jLabel5))).addComponent(jLabel6).addComponent(jLabel7).addComponent(jLabel8)).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jPanel5Layout.setVerticalGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel5Layout.createSequentialGroup().addContainerGap().addComponent(jLabel1).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel2).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel3).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel4).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel5).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel6).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel7).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel8).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Help&quot;));&#xD;
    jTextArea1.setEditable(false);&#xD;
    jTextArea1.setColumns(20);&#xD;
    jTextArea1.setRows(5);&#xD;
    jTextArea1.setText(&quot;In this step, you can crop the\nimage. Just select the region to\ncrop, and then press the Crop\nbutton. You can undo the \ncropping, pressing the Undo\nbutton. Once that you have\nfinished, press the Next button.&quot;);&#xD;
    jScrollPane1.setViewportView(jTextArea1);&#xD;
    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);&#xD;
    jPanel2.setLayout(jPanel2Layout);&#xD;
    jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING));&#xD;
    jPanel2Layout.setVerticalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE));&#xD;
    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);&#xD;
    jPanel1.setLayout(jPanel1Layout);&#xD;
    jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));&#xD;
    jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup().addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)));&#xD;
    jPanel3.setBorder(null);&#xD;
    jbCrop.setText(&quot;Crop&quot;);&#xD;
    jbCrop.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbCropActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jBUndo.setText(&quot;Undo&quot;);&#xD;
    jBUndo.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jBUndoActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);&#xD;
    jPanel3.setLayout(jPanel3Layout);&#xD;
    jPanel3Layout.setHorizontalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jbCrop, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jBUndo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));&#xD;
    jPanel3Layout.setVerticalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel3Layout.createSequentialGroup().addComponent(jbCrop).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jBUndo).addContainerGap(257, Short.MAX_VALUE)));&#xD;
    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());&#xD;
    getContentPane().setLayout(layout);&#xD;
    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(layout.createSequentialGroup().addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))));&#xD;
    layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(layout.createSequentialGroup().addContainerGap().addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)));&#xD;
    pack();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MoTZwBUTEemIe6OhVnSywA" name="jbCropActionPerformed" specification="_MoSLoBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jbCropActionPerformed&#xD;
    this.setAlwaysOnTop(false);&#xD;
    imp.getWindow().setAlwaysOnTop(false);&#xD;
    IJ.run(imp, &quot;Crop&quot;, &quot;&quot;);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MoXEIBUTEemIe6OhVnSywA" name="jBUndoActionPerformed" specification="_MoVO8BUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jBUndoActionPerformed&#xD;
    this.setAlwaysOnTop(false);&#xD;
    imp.getWindow().setAlwaysOnTop(false);&#xD;
    IJ.run(imp, &quot;Undo&quot;, &quot;&quot;);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MoZgYBUTEemIe6OhVnSywA" name="formWindowClosed" specification="_MoYSQBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_formWindowClosed&#xD;
    try {&#xD;
        if (close) {&#xD;
            ia.saveUnfinishedExperiment(this, 0);&#xD;
            close = false;&#xD;
        }&#xD;
    } catch (IOException ex) {&#xD;
        Logger.getLogger(step1_1.class.getName()).log(Level.SEVERE, null, ex);&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mob8oBUTEemIe6OhVnSywA" name="jButton2ActionPerformed" specification="_MoaugBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton2ActionPerformed&#xD;
    close = false;&#xD;
    this.dispose();&#xD;
    while (imp.getWidth() > 1500 || imp.getHeight() > 1500) {&#xD;
        ImageProcessor ip = imp.getProcessor();&#xD;
        ImageProcessor ip1 = ip.resize((int) (imp.getWidth() * .5), (int) (imp.getHeight() * .5));&#xD;
        imp.setProcessor(ip1);&#xD;
        imp.updateAndDraw();&#xD;
    }&#xD;
    step1_2 s = new step1_2(imp, ia);&#xD;
    System.out.println();&#xD;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MoEwQBUTEemIe6OhVnSywA" name="step1_1" visibility="public" method="_MoIaoBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MoHzkBUTEemIe6OhVnSywA" name="imp"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MoJowBUTEemIe6OhVnSywA" name="step1_1" visibility="public" method="_MoN6MBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MoMsEBUTEemIe6OhVnSywA" name="imp"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MoNTIBUTEemIe6OhVnSywA" name="aThis" type="_MhQ9oRUTEemIe6OhVnSywA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MoPIUBUTEemIe6OhVnSywA" name="initComponents" visibility="private" method="_MoQWcBUTEemIe6OhVnSywA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MoSLoBUTEemIe6OhVnSywA" name="jbCropActionPerformed" visibility="private" method="_MoTZwBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MoSysBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MoVO8BUTEemIe6OhVnSywA" name="jBUndoActionPerformed" visibility="private" method="_MoXEIBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MoWdEBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MoYSQBUTEemIe6OhVnSywA" name="formWindowClosed" visibility="private" method="_MoZgYBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MoY5UBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MoaugBUTEemIe6OhVnSywA" name="jButton2ActionPerformed" visibility="private" method="_Mob8oBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MoaugRUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_MpAkYBUTEemIe6OhVnSywA" name="Step4_2" visibility="public">
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MpBygBUTEemIe6OhVnSywA" name="close" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MpBygRUTEemIe6OhVnSywA" name="defaultValue">
                    <language>JAVA</language>
                    <body>true</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MpByghUTEemIe6OhVnSywA" name="imp" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MpBygxUTEemIe6OhVnSywA" name="ia" visibility="private" type="_MhQ9oRUTEemIe6OhVnSywA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MpCZkBUTEemIe6OhVnSywA" name="bm" visibility="private" type="_MEgJIBUTEemIe6OhVnSywA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MpCZkRUTEemIe6OhVnSywA" name="darkbg" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MpCZkhUTEemIe6OhVnSywA" name="tolerance" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MpDAoBUTEemIe6OhVnSywA" name="c" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrB9oBUTEemIe6OhVnSywA" name="buttonGroup1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrDLwBUTEemIe6OhVnSywA" name="jButton2" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrDy0BUTEemIe6OhVnSywA" name="jLabel1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrEZ4BUTEemIe6OhVnSywA" name="jLabel10" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrFoABUTEemIe6OhVnSywA" name="jLabel11" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrGPEBUTEemIe6OhVnSywA" name="jLabel12" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrIEQBUTEemIe6OhVnSywA" name="jLabel13" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrIrUBUTEemIe6OhVnSywA" name="jLabel14" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrJ5cBUTEemIe6OhVnSywA" name="jLabel15" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrKggBUTEemIe6OhVnSywA" name="jLabel16" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrLuoBUTEemIe6OhVnSywA" name="jLabel17" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrMVsBUTEemIe6OhVnSywA" name="jLabel18" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrM8wBUTEemIe6OhVnSywA" name="jLabel19" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrM8wRUTEemIe6OhVnSywA" name="jLabel2" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrM8whUTEemIe6OhVnSywA" name="jLabel20" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrM8wxUTEemIe6OhVnSywA" name="jLabel21" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrM8xBUTEemIe6OhVnSywA" name="jLabel22" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrNj0BUTEemIe6OhVnSywA" name="jLabel23" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrNj0RUTEemIe6OhVnSywA" name="jLabel24" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrNj0hUTEemIe6OhVnSywA" name="jLabel25" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrNj0xUTEemIe6OhVnSywA" name="jLabel26" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrOK4BUTEemIe6OhVnSywA" name="jLabel27" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrOK4RUTEemIe6OhVnSywA" name="jLabel28" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrOK4hUTEemIe6OhVnSywA" name="jLabel29" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrOK4xUTEemIe6OhVnSywA" name="jLabel3" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrOx8BUTEemIe6OhVnSywA" name="jLabel30" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrOx8RUTEemIe6OhVnSywA" name="jLabel31" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrOx8hUTEemIe6OhVnSywA" name="jLabel32" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrOx8xUTEemIe6OhVnSywA" name="jLabel33" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrPZABUTEemIe6OhVnSywA" name="jLabel34" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrPZARUTEemIe6OhVnSywA" name="jLabel35" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrPZAhUTEemIe6OhVnSywA" name="jLabel36" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrPZAxUTEemIe6OhVnSywA" name="jLabel4" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrQAEBUTEemIe6OhVnSywA" name="jLabel6" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrQAERUTEemIe6OhVnSywA" name="jLabel7" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrQAEhUTEemIe6OhVnSywA" name="jLabel8" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrQnIBUTEemIe6OhVnSywA" name="jLabel9" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrQnIRUTEemIe6OhVnSywA" name="jPanel1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrQnIhUTEemIe6OhVnSywA" name="jPanel2" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrQnIxUTEemIe6OhVnSywA" name="jPanel4" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrROMBUTEemIe6OhVnSywA" name="jPanel5" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrROMRUTEemIe6OhVnSywA" name="jPanel6" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrROMhUTEemIe6OhVnSywA" name="jScrollPane1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrR1QBUTEemIe6OhVnSywA" name="jScrollPane2" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrR1QRUTEemIe6OhVnSywA" name="jSlider10" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrR1QhUTEemIe6OhVnSywA" name="jSlider11" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrScUBUTEemIe6OhVnSywA" name="jSlider12" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrScURUTEemIe6OhVnSywA" name="jSlider13" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrScUhUTEemIe6OhVnSywA" name="jSlider14" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrTDYBUTEemIe6OhVnSywA" name="jSlider15" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrTDYRUTEemIe6OhVnSywA" name="jSlider16" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrTDYhUTEemIe6OhVnSywA" name="jSlider17" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrTDYxUTEemIe6OhVnSywA" name="jSlider18" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrTqcBUTEemIe6OhVnSywA" name="jSlider19" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrTqcRUTEemIe6OhVnSywA" name="jSlider2" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrTqchUTEemIe6OhVnSywA" name="jSlider20" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrTqcxUTEemIe6OhVnSywA" name="jSlider21" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrURgBUTEemIe6OhVnSywA" name="jSlider22" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrURgRUTEemIe6OhVnSywA" name="jSlider23" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrURghUTEemIe6OhVnSywA" name="jSlider24" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrURgxUTEemIe6OhVnSywA" name="jSlider25" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrU4kBUTEemIe6OhVnSywA" name="jSlider26" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrU4kRUTEemIe6OhVnSywA" name="jSlider27" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrU4khUTEemIe6OhVnSywA" name="jSlider28" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrU4kxUTEemIe6OhVnSywA" name="jSlider29" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrVfoBUTEemIe6OhVnSywA" name="jSlider3" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrVfoRUTEemIe6OhVnSywA" name="jSlider4" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrVfohUTEemIe6OhVnSywA" name="jSlider5" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrVfoxUTEemIe6OhVnSywA" name="jSlider6" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrWGsBUTEemIe6OhVnSywA" name="jSlider7" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrWGsRUTEemIe6OhVnSywA" name="jSlider8" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrWGshUTEemIe6OhVnSywA" name="jSlider9" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrWGsxUTEemIe6OhVnSywA" name="jTextArea1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrWtwBUTEemIe6OhVnSywA" name="jbBack" visibility="private" isUnique="false"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MpE10RUTEemIe6OhVnSywA" name="Step4_2" specification="_MpDAoRUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    super();&#xD;
    initComponents();&#xD;
    this.imp = imp;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MpK8cBUTEemIe6OhVnSywA" name="Step4_2" specification="_MpE10hUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    super();&#xD;
    initComponents();&#xD;
    this.imp = imp;&#xD;
    this.ia = aThis;&#xD;
    this.darkbg = darkbg;&#xD;
    this.bm = bm;&#xD;
    this.c = c;&#xD;
    this.tolerance = tolerance;&#xD;
    IJ.setTool(&quot;point&quot;);&#xD;
    bm.updateShowAll();&#xD;
    Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();&#xD;
    double width = screenSize.getWidth();&#xD;
    setVisible(true);&#xD;
    setLocation((int) width - 515, 0);&#xD;
    imp.getWindow().setAlwaysOnTop(true);&#xD;
    setAlwaysOnTop(true);&#xD;
    toFront();&#xD;
    JSlider[] sliders = { jSlider2, jSlider3, jSlider4, jSlider5, jSlider6, jSlider7, jSlider8, jSlider9, jSlider10, jSlider11, jSlider12, jSlider13, jSlider14, jSlider15, jSlider16, jSlider17, jSlider18, jSlider19, jSlider20, jSlider21, jSlider22, jSlider23, jSlider24, jSlider25, jSlider26, jSlider27, jSlider28, jSlider29 };&#xD;
    JLabel[] labels = { jLabel9, jLabel10, jLabel11, jLabel12, jLabel13, jLabel14, jLabel15, jLabel16, jLabel17, jLabel18, jLabel19, jLabel20, jLabel21, jLabel22, jLabel23, jLabel24, jLabel25, jLabel26, jLabel27, jLabel28, jLabel29, jLabel30, jLabel31, jLabel32, jLabel33, jLabel34, jLabel35, jLabel36 };&#xD;
    int[] indexes = indexesstandardlanes(ia.m.finallanes);&#xD;
    initiatenecessaryscrollbars(sliders, labels, ia.m.finallanes.length - indexes.length, tolerance);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MpSRMBUTEemIe6OhVnSywA" name="initiatenecessaryscrollbars" specification="_MpMxoBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    for (int i = 0; i &lt; n; i++) {&#xD;
        scrollbars[i].setValue(tolerance);&#xD;
    }&#xD;
    for (int i = n; i &lt; scrollbars.length; i++) {&#xD;
        scrollbars[i].setVisible(false);&#xD;
        labels[i].setVisible(false);&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MpY-4BUTEemIe6OhVnSywA" name="gettolerances" specification="_MpUGYBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    int[] res = new int[n];&#xD;
    for (int i = 0; i &lt; n; i++) {&#xD;
        res[i] = scrollbars[i].getValue();&#xD;
    }&#xD;
    return res;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mpa0EBUTEemIe6OhVnSywA" name="localselectbands" specification="_MpaNABUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    JSlider[] sliders = { jSlider2, jSlider3, jSlider4, jSlider5, jSlider6, jSlider7, jSlider8, jSlider9, jSlider10, jSlider11, jSlider12, jSlider13, jSlider14, jSlider15, jSlider16, jSlider17, jSlider18, jSlider19, jSlider20, jSlider21, jSlider22, jSlider23, jSlider24, jSlider25, jSlider26, jSlider27, jSlider28, jSlider29 };&#xD;
    int[] tolerances = gettolerances(sliders, ia.m.finallanes.length);&#xD;
    Prefs.verticalProfile = true;&#xD;
    bm.delete_without_asking(true);&#xD;
    bm.restart_bands();&#xD;
    ImageProcessor ip = imp.getProcessor();&#xD;
    int[] indexes = indexesnonstandardlanes(ia.m.finallanes);&#xD;
    int w = imp.getWidth() / ia.m.finallanes.length;&#xD;
    int h = imp.getHeight();&#xD;
    for (int i = 0; i &lt; indexes.length; i++) {&#xD;
        //            Roi r0 = ia.m.finallanes[indexes[i]].getRoi();&#xD;
        int x0 = indexes[i] * w + w / 2;&#xD;
        int y0 = 0;&#xD;
        int x1 = indexes[i] * w + w / 2;&#xD;
        int y1 = h;&#xD;
        Line l0 = new Line(x0, y0, x1, y1);&#xD;
        l0.setWidth(15);&#xD;
        imp.setRoi(l0);&#xD;
        // Finding the peaks of the profile&#xD;
        if ((!darkbg &amp;&amp; !imp.isInvertedLut()) || imp.isInvertedLut()) {&#xD;
            ip.invert();&#xD;
        }&#xD;
        //ProfilePlot pp = new ProfilePlot(imp);&#xD;
        double[] profile = ia.m.finallanes[i + 1].getProfile();&#xD;
        if ((!darkbg &amp;&amp; !imp.isInvertedLut()) || imp.isInvertedLut()) {&#xD;
            ip.invert();&#xD;
        }&#xD;
        l0.setWidth(1);&#xD;
        int[] maxima = MaximumFinder.findMaxima(profile, 2, true);&#xD;
        int[] htt = higherthantolerance(maxima, profile, tolerances[i]);&#xD;
        Arrays.sort(htt);&#xD;
        // Showing the lines&#xD;
        int r0x = indexes[i] * w;&#xD;
        int r0y = 0;&#xD;
        Roi r0 = new Roi(r0x, r0y, w, h);&#xD;
        int[] positionsy = new int[htt.length];&#xD;
        for (int k = 0; k &lt; htt.length; k++) {&#xD;
            positionsy[k] = r0y + htt[k];&#xD;
        }&#xD;
        for (int j = 0; j &lt; htt.length; j++) {&#xD;
            /*Line line = new Line(r0x, r0y + htt[j], r0x + w, r0y + htt[j]);
                 Line lineintersection = lineintersectionroi(r0,line);*/&#xD;
            Rectangle r = new Rectangle(r0x, r0y + htt[j], w, 2);&#xD;
            Roi r1 = rectangleintersectionroi(r0, r);&#xD;
            if (ia.m.finallanes[indexes[i]].isIsstandard()) {&#xD;
                if (c == Color.RED) {&#xD;
                    r1.setFillColor(Color.BLUE);&#xD;
                } else {&#xD;
                    r1.setFillColor(Color.RED);&#xD;
                }&#xD;
            } else {&#xD;
                r1.setFillColor(c);&#xD;
                bm.add(imp, r1, j, indexes[i]);&#xD;
            }&#xD;
        //bm.add(imp, line, j);&#xD;
        }&#xD;
    }&#xD;
    //m.finallanes[i].setProfile(profile);&#xD;
    //m.finallanes[i].setPositionbands(positionsy);&#xD;
    bm.showAll(0);&#xD;
//m.finallanes = finallanes;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MpfFgBUTEemIe6OhVnSywA" name="lineintersectionroi" specification="_MpcpQBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    Line line;&#xD;
    int[] xpointsl = l.getPoints().xpoints;&#xD;
    int[] ypointsl = l.getPoints().ypoints;&#xD;
    int len = xpointsl.length;&#xD;
    Boolean inside = false;&#xD;
    int x0 = xpointsl[0];&#xD;
    int y0 = ypointsl[0];&#xD;
    int x1 = xpointsl[len - 1];&#xD;
    int y1 = ypointsl[len - 1];&#xD;
    for (int i = 1; i &lt; len; i++) {&#xD;
        if (!inside) {&#xD;
            if (r.contains(xpointsl[i], ypointsl[i])) {&#xD;
                x0 = xpointsl[i];&#xD;
                y0 = ypointsl[i];&#xD;
                inside = true;&#xD;
            }&#xD;
        } else {&#xD;
            if (!r.contains(xpointsl[i], ypointsl[i])) {&#xD;
                x1 = xpointsl[i];&#xD;
                y1 = ypointsl[i];&#xD;
                line = new Line(x0, y0, x1, y1);&#xD;
                return line;&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    line = new Line(x0, y0, x1, y1);&#xD;
    return line;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MpmaQBUTEemIe6OhVnSywA" name="higherthantolerance" specification="_MpgToBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    ArrayList&lt;Integer> res = new ArrayList&lt;Integer>();&#xD;
    for (int i = 0; i &lt; v.length; i++) {&#xD;
        if (p[v[i]] > tolerance) {&#xD;
            res.add(v[i]);&#xD;
        }&#xD;
    }&#xD;
    int[] ret = new int[res.size()];&#xD;
    for (int i = 0; i &lt; ret.length; i++) {&#xD;
        ret[i] = res.get(i);&#xD;
    }&#xD;
    return ret;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MptvABUTEemIe6OhVnSywA" name="movingaveragefilter" specification="_MpnoYBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    int lv = v.length;&#xD;
    double[] res = new double[lv];&#xD;
    // starting point &#xD;
    int sp;&#xD;
    // end point &#xD;
    int ep;&#xD;
    for (int i = 0; i &lt; lv; i++) {&#xD;
        sp = i - (avgpoints - 1) / 2;&#xD;
        if (sp &lt; 0) {&#xD;
            sp = 0;&#xD;
        }&#xD;
        ep = i + (avgpoints - 1) / 2;&#xD;
        if (ep >= lv) {&#xD;
            ep = lv - 1;&#xD;
        }&#xD;
        double partial_sum = 0;&#xD;
        for (int j = sp; j &lt;= ep; j++) {&#xD;
            partial_sum = partial_sum + v[j];&#xD;
        }&#xD;
        res[i] = partial_sum / (ep - sp + 1);&#xD;
    }&#xD;
    return res;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mpz1oBUTEemIe6OhVnSywA" name="higherthanvalue" specification="_Mpu9IBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    if (from_end) {&#xD;
        int pos = 0;&#xD;
        for (int i = 0; i &lt; v.length; i++) {&#xD;
            if (value &lt; v[i]) {&#xD;
                return i;&#xD;
            }&#xD;
        }&#xD;
        return pos;&#xD;
    } else {&#xD;
        int pos = v.length - 1;&#xD;
        for (int i = v.length - 1; i >= 0; i--) {&#xD;
            if (value &lt; v[i]) {&#xD;
                return i;&#xD;
            }&#xD;
        }&#xD;
        return pos;&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mp3gABUTEemIe6OhVnSywA" name="removeOverlay" specification="_Mp1q0BUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    if (imp != null &amp;&amp; imp.getCanvas() != null) {&#xD;
        setOverlay(imp, null);&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mp7KYBUTEemIe6OhVnSywA" name="setOverlay" specification="_Mp4uIBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    if (imp == null) {&#xD;
        return;&#xD;
    }&#xD;
    ImageCanvas ic = imp.getCanvas();&#xD;
    if (ic == null) {&#xD;
        imp.setOverlay(overlay);&#xD;
        return;&#xD;
    }&#xD;
    ic.setShowAllList(overlay);&#xD;
    imp.draw();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mp9moBUTEemIe6OhVnSywA" name="getBm" specification="_Mp8YgBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    return bm;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MqBRABUTEemIe6OhVnSywA" name="initComponents" specification="_Mp-NsBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    buttonGroup1 = new javax.swing.ButtonGroup();&#xD;
    jPanel4 = new javax.swing.JPanel();&#xD;
    jButton2 = new javax.swing.JButton();&#xD;
    jbBack = new javax.swing.JButton();&#xD;
    jPanel5 = new javax.swing.JPanel();&#xD;
    jLabel1 = new javax.swing.JLabel();&#xD;
    jLabel6 = new javax.swing.JLabel();&#xD;
    jLabel8 = new javax.swing.JLabel();&#xD;
    jLabel7 = new javax.swing.JLabel();&#xD;
    jLabel2 = new javax.swing.JLabel();&#xD;
    jLabel3 = new javax.swing.JLabel();&#xD;
    jLabel4 = new javax.swing.JLabel();&#xD;
    jPanel1 = new javax.swing.JPanel();&#xD;
    jPanel2 = new javax.swing.JPanel();&#xD;
    jScrollPane1 = new javax.swing.JScrollPane();&#xD;
    jTextArea1 = new javax.swing.JTextArea();&#xD;
    jScrollPane2 = new javax.swing.JScrollPane();&#xD;
    jPanel6 = new javax.swing.JPanel();&#xD;
    jLabel9 = new javax.swing.JLabel();&#xD;
    jSlider2 = new javax.swing.JSlider();&#xD;
    jLabel10 = new javax.swing.JLabel();&#xD;
    jLabel11 = new javax.swing.JLabel();&#xD;
    jLabel12 = new javax.swing.JLabel();&#xD;
    jLabel13 = new javax.swing.JLabel();&#xD;
    jLabel14 = new javax.swing.JLabel();&#xD;
    jLabel15 = new javax.swing.JLabel();&#xD;
    jLabel16 = new javax.swing.JLabel();&#xD;
    jLabel17 = new javax.swing.JLabel();&#xD;
    jLabel18 = new javax.swing.JLabel();&#xD;
    jLabel19 = new javax.swing.JLabel();&#xD;
    jLabel20 = new javax.swing.JLabel();&#xD;
    jLabel21 = new javax.swing.JLabel();&#xD;
    jLabel22 = new javax.swing.JLabel();&#xD;
    jLabel23 = new javax.swing.JLabel();&#xD;
    jLabel24 = new javax.swing.JLabel();&#xD;
    jLabel25 = new javax.swing.JLabel();&#xD;
    jLabel26 = new javax.swing.JLabel();&#xD;
    jLabel27 = new javax.swing.JLabel();&#xD;
    jLabel28 = new javax.swing.JLabel();&#xD;
    jLabel29 = new javax.swing.JLabel();&#xD;
    jLabel30 = new javax.swing.JLabel();&#xD;
    jLabel31 = new javax.swing.JLabel();&#xD;
    jLabel32 = new javax.swing.JLabel();&#xD;
    jLabel33 = new javax.swing.JLabel();&#xD;
    jLabel34 = new javax.swing.JLabel();&#xD;
    jLabel35 = new javax.swing.JLabel();&#xD;
    jLabel36 = new javax.swing.JLabel();&#xD;
    jSlider3 = new javax.swing.JSlider();&#xD;
    jSlider4 = new javax.swing.JSlider();&#xD;
    jSlider5 = new javax.swing.JSlider();&#xD;
    jSlider6 = new javax.swing.JSlider();&#xD;
    jSlider7 = new javax.swing.JSlider();&#xD;
    jSlider8 = new javax.swing.JSlider();&#xD;
    jSlider9 = new javax.swing.JSlider();&#xD;
    jSlider10 = new javax.swing.JSlider();&#xD;
    jSlider11 = new javax.swing.JSlider();&#xD;
    jSlider12 = new javax.swing.JSlider();&#xD;
    jSlider13 = new javax.swing.JSlider();&#xD;
    jSlider14 = new javax.swing.JSlider();&#xD;
    jSlider15 = new javax.swing.JSlider();&#xD;
    jSlider16 = new javax.swing.JSlider();&#xD;
    jSlider17 = new javax.swing.JSlider();&#xD;
    jSlider18 = new javax.swing.JSlider();&#xD;
    jSlider19 = new javax.swing.JSlider();&#xD;
    jSlider20 = new javax.swing.JSlider();&#xD;
    jSlider21 = new javax.swing.JSlider();&#xD;
    jSlider22 = new javax.swing.JSlider();&#xD;
    jSlider23 = new javax.swing.JSlider();&#xD;
    jSlider24 = new javax.swing.JSlider();&#xD;
    jSlider25 = new javax.swing.JSlider();&#xD;
    jSlider26 = new javax.swing.JSlider();&#xD;
    jSlider27 = new javax.swing.JSlider();&#xD;
    jSlider28 = new javax.swing.JSlider();&#xD;
    jSlider29 = new javax.swing.JSlider();&#xD;
    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);&#xD;
    setTitle(&quot;Image analysis&quot;);&#xD;
    setResizable(false);&#xD;
    addWindowListener(new java.awt.event.WindowAdapter() {&#xD;
&#xD;
        public void windowClosed(java.awt.event.WindowEvent evt) {&#xD;
            formWindowClosed(evt);&#xD;
        }&#xD;
    });&#xD;
    jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());&#xD;
    jButton2.setText(&quot;Next>&quot;);&#xD;
    jButton2.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton2ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jbBack.setText(&quot;Cancel&quot;);&#xD;
    jbBack.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbBackActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);&#xD;
    jPanel4.setLayout(jPanel4Layout);&#xD;
    jPanel4Layout.setHorizontalGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addComponent(jbBack).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButton2)));&#xD;
    jPanel4Layout.setVerticalGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jButton2).addComponent(jbBack))));&#xD;
    jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Steps&quot;)));&#xD;
    jPanel5.setForeground(new java.awt.Color(0, 17, 255));&#xD;
    jLabel1.setText(&quot;Step 1. Image preprocessing&quot;);&#xD;
    jLabel6.setText(&quot;Step 2. Lane detection&quot;);&#xD;
    jLabel8.setText(&quot;Step 3. Normalisation&quot;);&#xD;
    jLabel7.setText(&quot;Step 4. Band detection&quot;);&#xD;
    jLabel2.setText(&quot;4.1. Global threshold&quot;);&#xD;
    jLabel3.setForeground(new java.awt.Color(0, 15, 255));&#xD;
    jLabel3.setText(&quot;4.2. Lane threshold&quot;);&#xD;
    jLabel4.setText(&quot;4.3. Band picking&quot;);&#xD;
    javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);&#xD;
    jPanel5.setLayout(jPanel5Layout);&#xD;
    jPanel5Layout.setHorizontalGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel5Layout.createSequentialGroup().addContainerGap().addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel1).addComponent(jLabel6).addComponent(jLabel7).addComponent(jLabel8).addGroup(jPanel5Layout.createSequentialGroup().addGap(12, 12, 12).addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel3).addComponent(jLabel2).addComponent(jLabel4)))).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jPanel5Layout.setVerticalGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel5Layout.createSequentialGroup().addContainerGap().addComponent(jLabel1).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel6).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel8).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel7).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel2).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel3).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel4).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Help&quot;));&#xD;
    jTextArea1.setEditable(false);&#xD;
    jTextArea1.setColumns(20);&#xD;
    jTextArea1.setRows(5);&#xD;
    jTextArea1.setText(&quot;In this step, you can fix a \nthreshold for each lane of the\nimage.&quot;);&#xD;
    jScrollPane1.setViewportView(jTextArea1);&#xD;
    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);&#xD;
    jPanel2.setLayout(jPanel2Layout);&#xD;
    jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING));&#xD;
    jPanel2Layout.setVerticalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE));&#xD;
    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);&#xD;
    jPanel1.setLayout(jPanel1Layout);&#xD;
    jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));&#xD;
    jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup().addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)));&#xD;
    jLabel9.setText(&quot;Lane 2:&quot;);&#xD;
    jSlider2.setMaximum(255);&#xD;
    jSlider2.addChangeListener(new javax.swing.event.ChangeListener() {&#xD;
&#xD;
        public void stateChanged(javax.swing.event.ChangeEvent evt) {&#xD;
            jSlider2StateChanged(evt);&#xD;
        }&#xD;
    });&#xD;
    jLabel10.setText(&quot;Lane 3:&quot;);&#xD;
    jLabel11.setText(&quot;Lane 4:&quot;);&#xD;
    jLabel12.setText(&quot;Lane 5:&quot;);&#xD;
    jLabel13.setText(&quot;Lane 6:&quot;);&#xD;
    jLabel14.setText(&quot;Lane 7:&quot;);&#xD;
    jLabel15.setText(&quot;Lane 8:&quot;);&#xD;
    jLabel16.setText(&quot;Lane 9:&quot;);&#xD;
    jLabel17.setText(&quot;Lane 10:&quot;);&#xD;
    jLabel18.setText(&quot;Lane 11:&quot;);&#xD;
    jLabel19.setText(&quot;Lane 12:&quot;);&#xD;
    jLabel20.setText(&quot;Lane 13:&quot;);&#xD;
    jLabel21.setText(&quot;Lane 14:&quot;);&#xD;
    jLabel22.setText(&quot;Lane 15:&quot;);&#xD;
    jLabel23.setText(&quot;Lane 16:&quot;);&#xD;
    jLabel24.setText(&quot;Lane 17:&quot;);&#xD;
    jLabel25.setText(&quot;Lane 18:&quot;);&#xD;
    jLabel26.setText(&quot;Lane 19:&quot;);&#xD;
    jLabel27.setText(&quot;Lane 20:&quot;);&#xD;
    jLabel28.setText(&quot;Lane 21:&quot;);&#xD;
    jLabel29.setText(&quot;Lane 22:&quot;);&#xD;
    jLabel30.setText(&quot;Lane 23:&quot;);&#xD;
    jLabel31.setText(&quot;Lane 24:&quot;);&#xD;
    jLabel32.setText(&quot;Lane 25:&quot;);&#xD;
    jLabel33.setText(&quot;Lane 26:&quot;);&#xD;
    jLabel34.setText(&quot;Lane 27:&quot;);&#xD;
    jLabel35.setText(&quot;Lane 28:&quot;);&#xD;
    jLabel36.setText(&quot;Lane 29:&quot;);&#xD;
    jSlider3.setMaximum(255);&#xD;
    jSlider3.addChangeListener(new javax.swing.event.ChangeListener() {&#xD;
&#xD;
        public void stateChanged(javax.swing.event.ChangeEvent evt) {&#xD;
            jSlider3StateChanged(evt);&#xD;
        }&#xD;
    });&#xD;
    jSlider4.setMaximum(255);&#xD;
    jSlider4.addChangeListener(new javax.swing.event.ChangeListener() {&#xD;
&#xD;
        public void stateChanged(javax.swing.event.ChangeEvent evt) {&#xD;
            jSlider4StateChanged(evt);&#xD;
        }&#xD;
    });&#xD;
    jSlider5.setMaximum(255);&#xD;
    jSlider5.addChangeListener(new javax.swing.event.ChangeListener() {&#xD;
&#xD;
        public void stateChanged(javax.swing.event.ChangeEvent evt) {&#xD;
            jSlider5StateChanged(evt);&#xD;
        }&#xD;
    });&#xD;
    jSlider6.setMaximum(255);&#xD;
    jSlider6.addChangeListener(new javax.swing.event.ChangeListener() {&#xD;
&#xD;
        public void stateChanged(javax.swing.event.ChangeEvent evt) {&#xD;
            jSlider6StateChanged(evt);&#xD;
        }&#xD;
    });&#xD;
    jSlider7.setMaximum(255);&#xD;
    jSlider7.addChangeListener(new javax.swing.event.ChangeListener() {&#xD;
&#xD;
        public void stateChanged(javax.swing.event.ChangeEvent evt) {&#xD;
            jSlider7StateChanged(evt);&#xD;
        }&#xD;
    });&#xD;
    jSlider8.setMaximum(255);&#xD;
    jSlider8.addChangeListener(new javax.swing.event.ChangeListener() {&#xD;
&#xD;
        public void stateChanged(javax.swing.event.ChangeEvent evt) {&#xD;
            jSlider8StateChanged(evt);&#xD;
        }&#xD;
    });&#xD;
    jSlider9.setMaximum(255);&#xD;
    jSlider9.addChangeListener(new javax.swing.event.ChangeListener() {&#xD;
&#xD;
        public void stateChanged(javax.swing.event.ChangeEvent evt) {&#xD;
            jSlider9StateChanged(evt);&#xD;
        }&#xD;
    });&#xD;
    jSlider10.setMaximum(255);&#xD;
    jSlider10.addChangeListener(new javax.swing.event.ChangeListener() {&#xD;
&#xD;
        public void stateChanged(javax.swing.event.ChangeEvent evt) {&#xD;
            jSlider10StateChanged(evt);&#xD;
        }&#xD;
    });&#xD;
    jSlider11.setMaximum(255);&#xD;
    jSlider11.addChangeListener(new javax.swing.event.ChangeListener() {&#xD;
&#xD;
        public void stateChanged(javax.swing.event.ChangeEvent evt) {&#xD;
            jSlider11StateChanged(evt);&#xD;
        }&#xD;
    });&#xD;
    jSlider12.setMaximum(255);&#xD;
    jSlider12.addChangeListener(new javax.swing.event.ChangeListener() {&#xD;
&#xD;
        public void stateChanged(javax.swing.event.ChangeEvent evt) {&#xD;
            jSlider12StateChanged(evt);&#xD;
        }&#xD;
    });&#xD;
    jSlider13.setMaximum(255);&#xD;
    jSlider13.addChangeListener(new javax.swing.event.ChangeListener() {&#xD;
&#xD;
        public void stateChanged(javax.swing.event.ChangeEvent evt) {&#xD;
            jSlider13StateChanged(evt);&#xD;
        }&#xD;
    });&#xD;
    jSlider14.setMaximum(255);&#xD;
    jSlider14.addChangeListener(new javax.swing.event.ChangeListener() {&#xD;
&#xD;
        public void stateChanged(javax.swing.event.ChangeEvent evt) {&#xD;
            jSlider14StateChanged(evt);&#xD;
        }&#xD;
    });&#xD;
    jSlider15.setMaximum(255);&#xD;
    jSlider15.addChangeListener(new javax.swing.event.ChangeListener() {&#xD;
&#xD;
        public void stateChanged(javax.swing.event.ChangeEvent evt) {&#xD;
            jSlider15StateChanged(evt);&#xD;
        }&#xD;
    });&#xD;
    jSlider16.setMaximum(255);&#xD;
    jSlider16.addChangeListener(new javax.swing.event.ChangeListener() {&#xD;
&#xD;
        public void stateChanged(javax.swing.event.ChangeEvent evt) {&#xD;
            jSlider16StateChanged(evt);&#xD;
        }&#xD;
    });&#xD;
    jSlider17.setMaximum(255);&#xD;
    jSlider17.addChangeListener(new javax.swing.event.ChangeListener() {&#xD;
&#xD;
        public void stateChanged(javax.swing.event.ChangeEvent evt) {&#xD;
            jSlider17StateChanged(evt);&#xD;
        }&#xD;
    });&#xD;
    jSlider18.setMaximum(255);&#xD;
    jSlider18.addChangeListener(new javax.swing.event.ChangeListener() {&#xD;
&#xD;
        public void stateChanged(javax.swing.event.ChangeEvent evt) {&#xD;
            jSlider18StateChanged(evt);&#xD;
        }&#xD;
    });&#xD;
    jSlider19.setMaximum(255);&#xD;
    jSlider19.addChangeListener(new javax.swing.event.ChangeListener() {&#xD;
&#xD;
        public void stateChanged(javax.swing.event.ChangeEvent evt) {&#xD;
            jSlider19StateChanged(evt);&#xD;
        }&#xD;
    });&#xD;
    jSlider20.setMaximum(255);&#xD;
    jSlider20.addChangeListener(new javax.swing.event.ChangeListener() {&#xD;
&#xD;
        public void stateChanged(javax.swing.event.ChangeEvent evt) {&#xD;
            jSlider20StateChanged(evt);&#xD;
        }&#xD;
    });&#xD;
    jSlider21.setMaximum(255);&#xD;
    jSlider21.addChangeListener(new javax.swing.event.ChangeListener() {&#xD;
&#xD;
        public void stateChanged(javax.swing.event.ChangeEvent evt) {&#xD;
            jSlider21StateChanged(evt);&#xD;
        }&#xD;
    });&#xD;
    jSlider22.setMaximum(255);&#xD;
    jSlider22.addChangeListener(new javax.swing.event.ChangeListener() {&#xD;
&#xD;
        public void stateChanged(javax.swing.event.ChangeEvent evt) {&#xD;
            jSlider22StateChanged(evt);&#xD;
        }&#xD;
    });&#xD;
    jSlider23.setMaximum(255);&#xD;
    jSlider23.addChangeListener(new javax.swing.event.ChangeListener() {&#xD;
&#xD;
        public void stateChanged(javax.swing.event.ChangeEvent evt) {&#xD;
            jSlider23StateChanged(evt);&#xD;
        }&#xD;
    });&#xD;
    jSlider24.setMaximum(255);&#xD;
    jSlider24.addChangeListener(new javax.swing.event.ChangeListener() {&#xD;
&#xD;
        public void stateChanged(javax.swing.event.ChangeEvent evt) {&#xD;
            jSlider24StateChanged(evt);&#xD;
        }&#xD;
    });&#xD;
    jSlider25.setMaximum(255);&#xD;
    jSlider25.addChangeListener(new javax.swing.event.ChangeListener() {&#xD;
&#xD;
        public void stateChanged(javax.swing.event.ChangeEvent evt) {&#xD;
            jSlider25StateChanged(evt);&#xD;
        }&#xD;
    });&#xD;
    jSlider26.setMaximum(255);&#xD;
    jSlider26.addChangeListener(new javax.swing.event.ChangeListener() {&#xD;
&#xD;
        public void stateChanged(javax.swing.event.ChangeEvent evt) {&#xD;
            jSlider26StateChanged(evt);&#xD;
        }&#xD;
    });&#xD;
    jSlider27.setMaximum(255);&#xD;
    jSlider27.addChangeListener(new javax.swing.event.ChangeListener() {&#xD;
&#xD;
        public void stateChanged(javax.swing.event.ChangeEvent evt) {&#xD;
            jSlider27StateChanged(evt);&#xD;
        }&#xD;
    });&#xD;
    jSlider28.setMaximum(255);&#xD;
    jSlider28.addChangeListener(new javax.swing.event.ChangeListener() {&#xD;
&#xD;
        public void stateChanged(javax.swing.event.ChangeEvent evt) {&#xD;
            jSlider28StateChanged(evt);&#xD;
        }&#xD;
    });&#xD;
    jSlider29.setMaximum(255);&#xD;
    jSlider29.addChangeListener(new javax.swing.event.ChangeListener() {&#xD;
&#xD;
        public void stateChanged(javax.swing.event.ChangeEvent evt) {&#xD;
            jSlider29StateChanged(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);&#xD;
    jPanel6.setLayout(jPanel6Layout);&#xD;
    jPanel6Layout.setHorizontalGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel6Layout.createSequentialGroup().addContainerGap().addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup().addComponent(jLabel9).addContainerGap(204, Short.MAX_VALUE)).addGroup(jPanel6Layout.createSequentialGroup().addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false).addGroup(jPanel6Layout.createSequentialGroup().addComponent(jLabel35).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jSlider28, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(jPanel6Layout.createSequentialGroup().addComponent(jLabel34).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jSlider27, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(jPanel6Layout.createSequentialGroup().addComponent(jLabel32).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jSlider25, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(jPanel6Layout.createSequentialGroup().addComponent(jLabel25).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jSlider18, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(jPanel6Layout.createSequentialGroup().addComponent(jLabel24).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jSlider17, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(jPanel6Layout.createSequentialGroup().addComponent(jLabel21).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jSlider14, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(jPanel6Layout.createSequentialGroup().addComponent(jLabel19).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jSlider12, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(jPanel6Layout.createSequentialGroup().addComponent(jLabel18).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jSlider11, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(jPanel6Layout.createSequentialGroup().addComponent(jLabel15).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jSlider8, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(jPanel6Layout.createSequentialGroup().addComponent(jLabel14).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jSlider7, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup().addComponent(jLabel36).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jSlider29, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup().addComponent(jLabel33).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jSlider26, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup().addComponent(jLabel31).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jSlider24, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup().addComponent(jLabel30).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jSlider23, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup().addComponent(jLabel29).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jSlider22, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup().addComponent(jLabel28).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jSlider21, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup().addComponent(jLabel27).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jSlider20, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup().addComponent(jLabel26).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jSlider19, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup().addComponent(jLabel23).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jSlider16, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup().addComponent(jLabel22).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jSlider15, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup().addComponent(jLabel20).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jSlider13, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup().addComponent(jLabel17).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jSlider10, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup().addComponent(jLabel16).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jSlider9, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(jPanel6Layout.createSequentialGroup().addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel10).addComponent(jLabel11).addComponent(jLabel12).addComponent(jLabel13)).addGap(33, 33, 33).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addComponent(jSlider2, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jSlider3, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jSlider4, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jSlider5, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jSlider6, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)))).addGap(0, 0, Short.MAX_VALUE)))));&#xD;
    jPanel6Layout.setVerticalGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel6Layout.createSequentialGroup().addContainerGap().addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel9).addComponent(jSlider2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel10).addComponent(jSlider3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel11).addComponent(jSlider4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel12).addComponent(jSlider5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel13).addComponent(jSlider6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel14).addComponent(jSlider7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel15).addComponent(jSlider8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel16).addComponent(jSlider9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel17).addComponent(jSlider10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel18).addComponent(jSlider11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel19).addComponent(jSlider12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel20).addComponent(jSlider13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel21).addComponent(jSlider14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel22).addComponent(jSlider15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel23).addComponent(jSlider16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel24).addComponent(jSlider17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel25).addComponent(jSlider18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel26).addComponent(jSlider19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel27).addComponent(jSlider20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel28).addComponent(jSlider21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel29).addComponent(jSlider22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel30).addComponent(jSlider23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel31).addComponent(jSlider24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel32).addComponent(jSlider25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel33).addComponent(jSlider26, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel34).addComponent(jSlider27, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel35).addComponent(jSlider28, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel36).addComponent(jSlider29, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jScrollPane2.setViewportView(jPanel6);&#xD;
    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());&#xD;
    getContentPane().setLayout(layout);&#xD;
    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(layout.createSequentialGroup().addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jScrollPane2))));&#xD;
    layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(layout.createSequentialGroup().addContainerGap().addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)));&#xD;
    pack();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MqEUUBUTEemIe6OhVnSywA" name="formWindowClosed" specification="_MqDGMBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_formWindowClosed&#xD;
    try {&#xD;
        if (close) {&#xD;
            ia.saveUnfinishedExperiment(this, 7);&#xD;
            close = false;&#xD;
        } else {&#xD;
        }&#xD;
    } catch (IOException ex) {&#xD;
        Logger.getLogger(Step4_2.class.getName()).log(Level.SEVERE, null, ex);&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MqGwkBUTEemIe6OhVnSywA" name="jbBackActionPerformed" specification="_MqFicBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jbBackActionPerformed&#xD;
    close = true;&#xD;
    this.dispose();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MqJz4BUTEemIe6OhVnSywA" name="jButton2ActionPerformed" specification="_MqH-sBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton2ActionPerformed&#xD;
    close = false;&#xD;
    Step4_3 s = new Step4_3(imp, ia, darkbg, bm);&#xD;
    this.dispose();&#xD;
    System.out.println();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MqM3MBUTEemIe6OhVnSywA" name="jSlider2StateChanged" specification="_MqLCABUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jSlider2StateChanged&#xD;
    localselectbands();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MqOsYBUTEemIe6OhVnSywA" name="jSlider3StateChanged" specification="_MqOFUBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jSlider3StateChanged&#xD;
    localselectbands();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MqRvsBUTEemIe6OhVnSywA" name="jSlider4StateChanged" specification="_MqQhkBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jSlider4StateChanged&#xD;
    localselectbands();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MqUzABUTEemIe6OhVnSywA" name="jSlider5StateChanged" specification="_MqS90BUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jSlider5StateChanged&#xD;
    localselectbands();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MqX2UBUTEemIe6OhVnSywA" name="jSlider6StateChanged" specification="_MqWoMBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jSlider6StateChanged&#xD;
    localselectbands();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MqaSkBUTEemIe6OhVnSywA" name="jSlider7StateChanged" specification="_MqZEcBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jSlider7StateChanged&#xD;
    localselectbands();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MqdV4BUTEemIe6OhVnSywA" name="jSlider8StateChanged" specification="_MqcHwBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jSlider8StateChanged&#xD;
    localselectbands();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MqfyIRUTEemIe6OhVnSywA" name="jSlider9StateChanged" specification="_MqekABUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jSlider9StateChanged&#xD;
    localselectbands();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MqiOYBUTEemIe6OhVnSywA" name="jSlider10StateChanged" specification="_MqhAQBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jSlider10StateChanged&#xD;
    localselectbands();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MqkDkBUTEemIe6OhVnSywA" name="jSlider11StateChanged" specification="_Mqi1cBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jSlider11StateChanged&#xD;
    localselectbands();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mqmf0BUTEemIe6OhVnSywA" name="jSlider12StateChanged" specification="_MqkqoBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jSlider12StateChanged&#xD;
    localselectbands();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mqo8EBUTEemIe6OhVnSywA" name="jSlider13StateChanged" specification="_Mqnt8BUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jSlider13StateChanged&#xD;
    localselectbands();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MqqxQRUTEemIe6OhVnSywA" name="jSlider14StateChanged" specification="_MqqKMBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jSlider14StateChanged&#xD;
    localselectbands();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MqsmcRUTEemIe6OhVnSywA" name="jSlider15StateChanged" specification="_MqrYUBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jSlider15StateChanged&#xD;
    localselectbands();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MqvCsBUTEemIe6OhVnSywA" name="jSlider16StateChanged" specification="_Mqt0kBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jSlider16StateChanged&#xD;
    localselectbands();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mqw34RUTEemIe6OhVnSywA" name="jSlider17StateChanged" specification="_MqwQ0BUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jSlider17StateChanged&#xD;
    localselectbands();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MqzUIBUTEemIe6OhVnSywA" name="jSlider18StateChanged" specification="_MqyGABUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jSlider18StateChanged&#xD;
    localselectbands();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mq1wYBUTEemIe6OhVnSywA" name="jSlider19StateChanged" specification="_Mq0iQBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jSlider19StateChanged&#xD;
    localselectbands();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mq3lkRUTEemIe6OhVnSywA" name="jSlider20StateChanged" specification="_Mq2-gBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jSlider20StateChanged&#xD;
    localselectbands();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mq6B0BUTEemIe6OhVnSywA" name="jSlider21StateChanged" specification="_Mq4zsBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jSlider21StateChanged&#xD;
    localselectbands();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mq8eEBUTEemIe6OhVnSywA" name="jSlider22StateChanged" specification="_Mq7P8BUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jSlider22StateChanged&#xD;
    localselectbands();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mq9sMRUTEemIe6OhVnSywA" name="jSlider23StateChanged" specification="_Mq9FIBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jSlider23StateChanged&#xD;
    localselectbands();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mq9sNBUTEemIe6OhVnSywA" name="jSlider24StateChanged" specification="_Mq9sMhUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jSlider24StateChanged&#xD;
    localselectbands();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mq-TQhUTEemIe6OhVnSywA" name="jSlider25StateChanged" specification="_Mq-TQBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jSlider25StateChanged&#xD;
    localselectbands();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mq-6UBUTEemIe6OhVnSywA" name="jSlider26StateChanged" specification="_Mq-TQxUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jSlider26StateChanged&#xD;
    localselectbands();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mq-6UxUTEemIe6OhVnSywA" name="jSlider27StateChanged" specification="_Mq-6URUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jSlider27StateChanged&#xD;
    localselectbands();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mq_hYRUTEemIe6OhVnSywA" name="jSlider28StateChanged" specification="_Mq-6VBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jSlider28StateChanged&#xD;
    localselectbands();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MrAvgBUTEemIe6OhVnSywA" name="jSlider29StateChanged" specification="_Mq_hYhUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jSlider29StateChanged&#xD;
    localselectbands();&#xD;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MpDAoRUTEemIe6OhVnSywA" name="Step4_2" visibility="public" method="_MpE10RUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MpE10BUTEemIe6OhVnSywA" name="imp"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MpE10hUTEemIe6OhVnSywA" name="Step4_2" visibility="public" method="_MpK8cBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MpHSEBUTEemIe6OhVnSywA" name="imp"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MpH5IBUTEemIe6OhVnSywA" name="aThis" type="_MhQ9oRUTEemIe6OhVnSywA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MpIgMBUTEemIe6OhVnSywA" name="darkbg">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MpJHQBUTEemIe6OhVnSywA" name="bm" type="_MEgJIBUTEemIe6OhVnSywA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MpJuUBUTEemIe6OhVnSywA" name="tolerance">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MpKVYBUTEemIe6OhVnSywA" name="c"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MpMxoBUTEemIe6OhVnSywA" name="initiatenecessaryscrollbars" visibility="private" method="_MpSRMBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MpNYsBUTEemIe6OhVnSywA" name="scrollbars">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MpN_wBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MpOm0BUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MpPN4BUTEemIe6OhVnSywA" name="labels">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MpP08BUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MpQcABUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MpRDEBUTEemIe6OhVnSywA" name="n">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MpRqIBUTEemIe6OhVnSywA" name="tolerance">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MpUGYBUTEemIe6OhVnSywA" name="gettolerances" visibility="private" method="_MpY-4BUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MpUtcBUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MpVUgBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MpVUgRUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MpV7kBUTEemIe6OhVnSywA" name="scrollbars">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MpWioBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MpXwwBUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MpYX0BUTEemIe6OhVnSywA" name="n">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MpaNABUTEemIe6OhVnSywA" name="localselectbands" visibility="private" method="_Mpa0EBUTEemIe6OhVnSywA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MpcpQBUTEemIe6OhVnSywA" name="lineintersectionroi" visibility="private" method="_MpfFgBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MpdQUBUTEemIe6OhVnSywA" direction="return"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mpd3YBUTEemIe6OhVnSywA" name="r"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MpeecBUTEemIe6OhVnSywA" name="l"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MpgToBUTEemIe6OhVnSywA" name="higherthantolerance" visibility="private" method="_MpmaQBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mpg6sBUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MphhwBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MpiI0BUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mpiv4BUTEemIe6OhVnSywA" name="v">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MpjW8BUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Mpj-ABUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MpklEBUTEemIe6OhVnSywA" name="p">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MplMIBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MplMIRUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MplzMBUTEemIe6OhVnSywA" name="tolerance">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MpnoYBUTEemIe6OhVnSywA" name="movingaveragefilter" visibility="private" method="_MptvABUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mpo2gBUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MppdkBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MpqEoBUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MpqrsBUTEemIe6OhVnSywA" name="v">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MprSwBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Mpr50BUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MptH8BUTEemIe6OhVnSywA" name="avgpoints">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Mpu9IBUTEemIe6OhVnSywA" name="higherthanvalue" visibility="private" method="_Mpz1oBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MpvkMBUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MpwyUBUTEemIe6OhVnSywA" name="v">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MpxZYBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MpyAcBUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MpyngBUTEemIe6OhVnSywA" name="value">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MpzOkBUTEemIe6OhVnSywA" name="from_end">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Mp1q0BUTEemIe6OhVnSywA" name="removeOverlay" visibility="private" method="_Mp3gABUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mp2R4BUTEemIe6OhVnSywA" name="imp"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Mp4uIBUTEemIe6OhVnSywA" name="setOverlay" visibility="private" method="_Mp7KYBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mp58QBUTEemIe6OhVnSywA" name="imp"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mp6jUBUTEemIe6OhVnSywA" name="overlay"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Mp8YgBUTEemIe6OhVnSywA" name="getBm" visibility="public" method="_Mp9moBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mp8_kBUTEemIe6OhVnSywA" type="_MEgJIBUTEemIe6OhVnSywA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Mp-NsBUTEemIe6OhVnSywA" name="initComponents" visibility="private" method="_MqBRABUTEemIe6OhVnSywA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MqDGMBUTEemIe6OhVnSywA" name="formWindowClosed" visibility="private" method="_MqEUUBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MqDtQBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MqFicBUTEemIe6OhVnSywA" name="jbBackActionPerformed" visibility="private" method="_MqGwkBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MqGJgBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MqH-sBUTEemIe6OhVnSywA" name="jButton2ActionPerformed" visibility="private" method="_MqJz4BUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MqJM0BUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MqLCABUTEemIe6OhVnSywA" name="jSlider2StateChanged" visibility="private" method="_MqM3MBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MqMQIBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MqOFUBUTEemIe6OhVnSywA" name="jSlider3StateChanged" visibility="private" method="_MqOsYBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MqOFURUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MqQhkBUTEemIe6OhVnSywA" name="jSlider4StateChanged" visibility="private" method="_MqRvsBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MqRIoBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MqS90BUTEemIe6OhVnSywA" name="jSlider5StateChanged" visibility="private" method="_MqUzABUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MqUL8BUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MqWoMBUTEemIe6OhVnSywA" name="jSlider6StateChanged" visibility="private" method="_MqX2UBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MqXPQBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MqZEcBUTEemIe6OhVnSywA" name="jSlider7StateChanged" visibility="private" method="_MqaSkBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MqZrgBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MqcHwBUTEemIe6OhVnSywA" name="jSlider8StateChanged" visibility="private" method="_MqdV4BUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mqcu0BUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MqekABUTEemIe6OhVnSywA" name="jSlider9StateChanged" visibility="private" method="_MqfyIRUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MqfyIBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MqhAQBUTEemIe6OhVnSywA" name="jSlider10StateChanged" visibility="private" method="_MqiOYBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MqhnUBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Mqi1cBUTEemIe6OhVnSywA" name="jSlider11StateChanged" visibility="private" method="_MqkDkBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MqjcgBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MqkqoBUTEemIe6OhVnSywA" name="jSlider12StateChanged" visibility="private" method="_Mqmf0BUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mql4wBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Mqnt8BUTEemIe6OhVnSywA" name="jSlider13StateChanged" visibility="private" method="_Mqo8EBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MqoVABUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MqqKMBUTEemIe6OhVnSywA" name="jSlider14StateChanged" visibility="private" method="_MqqxQRUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MqqxQBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MqrYUBUTEemIe6OhVnSywA" name="jSlider15StateChanged" visibility="private" method="_MqsmcRUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MqsmcBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Mqt0kBUTEemIe6OhVnSywA" name="jSlider16StateChanged" visibility="private" method="_MqvCsBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MquboBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MqwQ0BUTEemIe6OhVnSywA" name="jSlider17StateChanged" visibility="private" method="_Mqw34RUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mqw34BUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MqyGABUTEemIe6OhVnSywA" name="jSlider18StateChanged" visibility="private" method="_MqzUIBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MqytEBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Mq0iQBUTEemIe6OhVnSywA" name="jSlider19StateChanged" visibility="private" method="_Mq1wYBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mq1JUBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Mq2-gBUTEemIe6OhVnSywA" name="jSlider20StateChanged" visibility="private" method="_Mq3lkRUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mq3lkBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Mq4zsBUTEemIe6OhVnSywA" name="jSlider21StateChanged" visibility="private" method="_Mq6B0BUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mq5awBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Mq7P8BUTEemIe6OhVnSywA" name="jSlider22StateChanged" visibility="private" method="_Mq8eEBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mq73ABUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Mq9FIBUTEemIe6OhVnSywA" name="jSlider23StateChanged" visibility="private" method="_Mq9sMRUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mq9sMBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Mq9sMhUTEemIe6OhVnSywA" name="jSlider24StateChanged" visibility="private" method="_Mq9sNBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mq9sMxUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Mq-TQBUTEemIe6OhVnSywA" name="jSlider25StateChanged" visibility="private" method="_Mq-TQhUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mq-TQRUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Mq-TQxUTEemIe6OhVnSywA" name="jSlider26StateChanged" visibility="private" method="_Mq-6UBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mq-TRBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Mq-6URUTEemIe6OhVnSywA" name="jSlider27StateChanged" visibility="private" method="_Mq-6UxUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mq-6UhUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Mq-6VBUTEemIe6OhVnSywA" name="jSlider28StateChanged" visibility="private" method="_Mq_hYRUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mq_hYBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Mq_hYhUTEemIe6OhVnSywA" name="jSlider29StateChanged" visibility="private" method="_MrAvgBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MrAIcBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_Mrc0YBUTEemIe6OhVnSywA" name="step2_1" visibility="public">
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrdbcRUTEemIe6OhVnSywA" name="close" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MrdbchUTEemIe6OhVnSywA" name="defaultValue">
                    <language>JAVA</language>
                    <body>true</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrdbcxUTEemIe6OhVnSywA" name="imp" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MreCgBUTEemIe6OhVnSywA" name="ia" visibility="private" type="_MhQ9oRUTEemIe6OhVnSywA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mri7ABUTEemIe6OhVnSywA" name="buttonGroup1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mri7ARUTEemIe6OhVnSywA" name="jButton2" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mri7AhUTEemIe6OhVnSywA" name="jLabel1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrjiEBUTEemIe6OhVnSywA" name="jLabel2" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrjiERUTEemIe6OhVnSywA" name="jLabel3" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrjiEhUTEemIe6OhVnSywA" name="jLabel4" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrjiExUTEemIe6OhVnSywA" name="jLabel6" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrjiFBUTEemIe6OhVnSywA" name="jLabel7" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrkJIBUTEemIe6OhVnSywA" name="jLabel8" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrkJIRUTEemIe6OhVnSywA" name="jPanel1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrkJIhUTEemIe6OhVnSywA" name="jPanel2" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrkwMBUTEemIe6OhVnSywA" name="jPanel3" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrkwMRUTEemIe6OhVnSywA" name="jPanel4" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrkwMhUTEemIe6OhVnSywA" name="jPanel5" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrlXQBUTEemIe6OhVnSywA" name="jScrollPane1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrlXQRUTEemIe6OhVnSywA" name="jTextArea1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MrlXQhUTEemIe6OhVnSywA" name="jbBack" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mrl-UBUTEemIe6OhVnSywA" name="jrbdark" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mrl-URUTEemIe6OhVnSywA" name="jrblight" visibility="private" isUnique="false"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MrfQoRUTEemIe6OhVnSywA" name="step2_1" specification="_MreCgRUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    super();&#xD;
    initComponents();&#xD;
    this.imp = imp;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MrhF0BUTEemIe6OhVnSywA" name="step2_1" specification="_MrfQohUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    super();&#xD;
    initComponents();&#xD;
    this.imp = imp;&#xD;
    this.ia = aThis;&#xD;
    Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();&#xD;
    double width = screenSize.getWidth();&#xD;
    setVisible(true);&#xD;
    setLocation((int) width - 515, 0);&#xD;
    imp.getWindow().setAlwaysOnTop(true);&#xD;
    setAlwaysOnTop(true);&#xD;
    toFront();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MrhF0hUTEemIe6OhVnSywA" name="initComponents" specification="_MrhF0RUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    buttonGroup1 = new javax.swing.ButtonGroup();&#xD;
    jPanel5 = new javax.swing.JPanel();&#xD;
    jLabel1 = new javax.swing.JLabel();&#xD;
    jLabel6 = new javax.swing.JLabel();&#xD;
    jLabel7 = new javax.swing.JLabel();&#xD;
    jLabel8 = new javax.swing.JLabel();&#xD;
    jLabel2 = new javax.swing.JLabel();&#xD;
    jLabel3 = new javax.swing.JLabel();&#xD;
    jLabel4 = new javax.swing.JLabel();&#xD;
    jPanel1 = new javax.swing.JPanel();&#xD;
    jPanel2 = new javax.swing.JPanel();&#xD;
    jScrollPane1 = new javax.swing.JScrollPane();&#xD;
    jTextArea1 = new javax.swing.JTextArea();&#xD;
    jPanel3 = new javax.swing.JPanel();&#xD;
    jrbdark = new javax.swing.JRadioButton();&#xD;
    jrblight = new javax.swing.JRadioButton();&#xD;
    jPanel4 = new javax.swing.JPanel();&#xD;
    jButton2 = new javax.swing.JButton();&#xD;
    jbBack = new javax.swing.JButton();&#xD;
    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);&#xD;
    setTitle(&quot;Image analysis&quot;);&#xD;
    setResizable(false);&#xD;
    addWindowListener(new java.awt.event.WindowAdapter() {&#xD;
&#xD;
        public void windowClosed(java.awt.event.WindowEvent evt) {&#xD;
            formWindowClosed(evt);&#xD;
        }&#xD;
    });&#xD;
    jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Steps&quot;)));&#xD;
    jPanel5.setForeground(new java.awt.Color(0, 17, 255));&#xD;
    jLabel1.setText(&quot;Step 1. Image preprocessing&quot;);&#xD;
    jLabel6.setText(&quot;Step 2. Lane detection&quot;);&#xD;
    jLabel7.setText(&quot;Step 3. Normalisation&quot;);&#xD;
    jLabel8.setText(&quot;Step 4. Band detection&quot;);&#xD;
    jLabel2.setForeground(new java.awt.Color(0, 15, 255));&#xD;
    jLabel2.setText(&quot;2.1. Background&quot;);&#xD;
    jLabel3.setText(&quot;2.2. Lane edition&quot;);&#xD;
    jLabel4.setText(&quot;2.3. Fix reference lanes&quot;);&#xD;
    javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);&#xD;
    jPanel5.setLayout(jPanel5Layout);&#xD;
    jPanel5Layout.setHorizontalGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel5Layout.createSequentialGroup().addContainerGap().addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel1).addComponent(jLabel6).addComponent(jLabel7).addComponent(jLabel8).addGroup(jPanel5Layout.createSequentialGroup().addGap(12, 12, 12).addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel3).addComponent(jLabel2).addComponent(jLabel4)))).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jPanel5Layout.setVerticalGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel5Layout.createSequentialGroup().addContainerGap().addComponent(jLabel1).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel6).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel2).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel3).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel4).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel7).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel8).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Help&quot;));&#xD;
    jTextArea1.setEditable(false);&#xD;
    jTextArea1.setColumns(20);&#xD;
    jTextArea1.setRows(5);&#xD;
    jTextArea1.setText(&quot;In this step, you must indicate if\nthe background of the image is\ndark or light.&quot;);&#xD;
    jScrollPane1.setViewportView(jTextArea1);&#xD;
    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);&#xD;
    jPanel2.setLayout(jPanel2Layout);&#xD;
    jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 258, Short.MAX_VALUE));&#xD;
    jPanel2Layout.setVerticalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE));&#xD;
    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);&#xD;
    jPanel1.setLayout(jPanel1Layout);&#xD;
    jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));&#xD;
    jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup().addContainerGap(60, Short.MAX_VALUE).addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)));&#xD;
    jPanel3.setBorder(null);&#xD;
    buttonGroup1.add(jrbdark);&#xD;
    jrbdark.setSelected(true);&#xD;
    jrbdark.setText(&quot;Dark background&quot;);&#xD;
    buttonGroup1.add(jrblight);&#xD;
    jrblight.setText(&quot;Light background&quot;);&#xD;
    javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);&#xD;
    jPanel3.setLayout(jPanel3Layout);&#xD;
    jPanel3Layout.setHorizontalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel3Layout.createSequentialGroup().addContainerGap().addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jrbdark).addComponent(jrblight)).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jPanel3Layout.setVerticalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel3Layout.createSequentialGroup().addComponent(jrbdark).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jrblight).addGap(0, 267, Short.MAX_VALUE)));&#xD;
    jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());&#xD;
    jButton2.setText(&quot;Next>&quot;);&#xD;
    jButton2.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton2ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jbBack.setText(&quot;&lt;Back&quot;);&#xD;
    jbBack.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbBackActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);&#xD;
    jPanel4.setLayout(jPanel4Layout);&#xD;
    jPanel4Layout.setHorizontalGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addComponent(jbBack).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButton2)));&#xD;
    jPanel4Layout.setVerticalGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jButton2).addComponent(jbBack))));&#xD;
    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());&#xD;
    getContentPane().setLayout(layout);&#xD;
    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))).addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));&#xD;
    layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(layout.createSequentialGroup().addContainerGap().addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)));&#xD;
    pack();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mrhs4hUTEemIe6OhVnSywA" name="formWindowClosed" specification="_Mrhs4BUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_formWindowClosed&#xD;
    try {&#xD;
        if (close) {&#xD;
            ia.saveUnfinishedExperiment(this, 5);&#xD;
            close = false;&#xD;
        } else {&#xD;
        }&#xD;
    } catch (IOException ex) {&#xD;
        Logger.getLogger(step2_1.class.getName()).log(Level.SEVERE, null, ex);&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MriT8RUTEemIe6OhVnSywA" name="jbBackActionPerformed" specification="_Mrhs4xUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jbBackActionPerformed&#xD;
    close = false;&#xD;
    this.dispose();&#xD;
    Step1_4 s = new Step1_4(imp, ia);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MriT9BUTEemIe6OhVnSywA" name="jButton2ActionPerformed" specification="_MriT8hUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton2ActionPerformed&#xD;
    close = false;&#xD;
    ImageWindow iw = imp.getWindow();&#xD;
    iw.setLocked(false);&#xD;
    LaneManagerCanvas cc = new LaneManagerCanvas(imp);&#xD;
    ImageWindow iw2 = new ImageWindow(imp, cc);&#xD;
    iw2.setLocked(true);&#xD;
    imp.changes = false;&#xD;
    iw.dispose();&#xD;
    cc.requestFocus();&#xD;
    step2_2 s = null;&#xD;
    if (jrbdark.isSelected()) {&#xD;
        s = new step2_2(imp, ia, true, null);&#xD;
        ia.darkbg = true;&#xD;
    } else {&#xD;
        s = new step2_2(imp, ia, false, null);&#xD;
        ia.darkbg = false;&#xD;
    }&#xD;
    s.getLm().auto_detect();&#xD;
    this.dispose();&#xD;
    System.out.println();&#xD;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MreCgRUTEemIe6OhVnSywA" name="step2_1" visibility="public" method="_MrfQoRUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MrfQoBUTEemIe6OhVnSywA" name="imp"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MrfQohUTEemIe6OhVnSywA" name="step2_1" visibility="public" method="_MrhF0BUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MrgewRUTEemIe6OhVnSywA" name="imp"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MrgewhUTEemIe6OhVnSywA" name="aThis" type="_MhQ9oRUTEemIe6OhVnSywA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MrhF0RUTEemIe6OhVnSywA" name="initComponents" visibility="private" method="_MrhF0hUTEemIe6OhVnSywA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Mrhs4BUTEemIe6OhVnSywA" name="formWindowClosed" visibility="private" method="_Mrhs4hUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mrhs4RUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Mrhs4xUTEemIe6OhVnSywA" name="jbBackActionPerformed" visibility="private" method="_MriT8RUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MriT8BUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MriT8hUTEemIe6OhVnSywA" name="jButton2ActionPerformed" visibility="private" method="_MriT9BUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MriT8xUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_Mr7VgBUTEemIe6OhVnSywA" name="step1_3" visibility="public">
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mr78kRUTEemIe6OhVnSywA" name="close" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_Mr78khUTEemIe6OhVnSywA" name="defaultValue">
                    <language>JAVA</language>
                    <body>true</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mr8joBUTEemIe6OhVnSywA" name="imp" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mr8joRUTEemIe6OhVnSywA" name="ia" visibility="private" type="_MhQ9oRUTEemIe6OhVnSywA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mr8johUTEemIe6OhVnSywA" name="auto" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_Mr8joxUTEemIe6OhVnSywA" name="defaultValue">
                    <language>JAVA</language>
                    <body>true</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MsDRUhUTEemIe6OhVnSywA" name="jButton1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MsD4YBUTEemIe6OhVnSywA" name="jButton2" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MsD4YRUTEemIe6OhVnSywA" name="jLabel1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MsD4YhUTEemIe6OhVnSywA" name="jLabel2" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MsEfcBUTEemIe6OhVnSywA" name="jLabel3" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MsEfcRUTEemIe6OhVnSywA" name="jLabel4" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MsEfchUTEemIe6OhVnSywA" name="jLabel5" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MsFGgBUTEemIe6OhVnSywA" name="jLabel6" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MsFGgRUTEemIe6OhVnSywA" name="jLabel7" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MsFGghUTEemIe6OhVnSywA" name="jLabel8" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MsFGgxUTEemIe6OhVnSywA" name="jPanel1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MsFtkBUTEemIe6OhVnSywA" name="jPanel2" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MsFtkRUTEemIe6OhVnSywA" name="jPanel3" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MsFtkhUTEemIe6OhVnSywA" name="jPanel4" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MsGUoBUTEemIe6OhVnSywA" name="jPanel5" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MsGUoRUTEemIe6OhVnSywA" name="jScrollPane1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MsGUohUTEemIe6OhVnSywA" name="jTextArea1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MsGUoxUTEemIe6OhVnSywA" name="jbBack" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MsG7sBUTEemIe6OhVnSywA" name="jbInvert" visibility="private" isUnique="false"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mr-Y0RUTEemIe6OhVnSywA" name="step1_3" specification="_Mr9KsBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    super();&#xD;
    initComponents();&#xD;
    this.imp = imp;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MsAOAhUTEemIe6OhVnSywA" name="step1_3" specification="_Mr-Y0hUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    super();&#xD;
    initComponents();&#xD;
    this.imp = imp;&#xD;
    this.ia = aThis;&#xD;
    Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();&#xD;
    double width = screenSize.getWidth();&#xD;
    setVisible(true);&#xD;
    setLocation((int) width - 515, 0);&#xD;
    imp.getWindow().setAlwaysOnTop(true);&#xD;
    setAlwaysOnTop(true);&#xD;
    toFront();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MsA1EBUTEemIe6OhVnSywA" name="initComponents" specification="_MsAOAxUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    jPanel4 = new javax.swing.JPanel();&#xD;
    jButton2 = new javax.swing.JButton();&#xD;
    jbBack = new javax.swing.JButton();&#xD;
    jPanel5 = new javax.swing.JPanel();&#xD;
    jLabel1 = new javax.swing.JLabel();&#xD;
    jLabel2 = new javax.swing.JLabel();&#xD;
    jLabel3 = new javax.swing.JLabel();&#xD;
    jLabel4 = new javax.swing.JLabel();&#xD;
    jLabel5 = new javax.swing.JLabel();&#xD;
    jLabel6 = new javax.swing.JLabel();&#xD;
    jLabel7 = new javax.swing.JLabel();&#xD;
    jLabel8 = new javax.swing.JLabel();&#xD;
    jPanel1 = new javax.swing.JPanel();&#xD;
    jPanel2 = new javax.swing.JPanel();&#xD;
    jScrollPane1 = new javax.swing.JScrollPane();&#xD;
    jTextArea1 = new javax.swing.JTextArea();&#xD;
    jPanel3 = new javax.swing.JPanel();&#xD;
    jbInvert = new javax.swing.JButton();&#xD;
    jButton1 = new javax.swing.JButton();&#xD;
    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);&#xD;
    setTitle(&quot;Image analysis&quot;);&#xD;
    setResizable(false);&#xD;
    addWindowListener(new java.awt.event.WindowAdapter() {&#xD;
&#xD;
        public void windowClosed(java.awt.event.WindowEvent evt) {&#xD;
            formWindowClosed(evt);&#xD;
        }&#xD;
    });&#xD;
    jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());&#xD;
    jButton2.setText(&quot;Next>&quot;);&#xD;
    jButton2.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton2ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jbBack.setText(&quot;&lt;Back&quot;);&#xD;
    jbBack.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbBackActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);&#xD;
    jPanel4.setLayout(jPanel4Layout);&#xD;
    jPanel4Layout.setHorizontalGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addComponent(jbBack).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButton2)));&#xD;
    jPanel4Layout.setVerticalGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jButton2).addComponent(jbBack))));&#xD;
    jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Steps&quot;)));&#xD;
    jPanel5.setForeground(new java.awt.Color(0, 17, 255));&#xD;
    jLabel1.setText(&quot;Step 1. Image preprocessing&quot;);&#xD;
    jLabel2.setText(&quot;1.1. Crop&quot;);&#xD;
    jLabel3.setText(&quot;1.2. Invert&quot;);&#xD;
    jLabel4.setForeground(new java.awt.Color(0, 15, 255));&#xD;
    jLabel4.setText(&quot;1.3. Adjust contrast&quot;);&#xD;
    jLabel5.setText(&quot;1.4. Other operations&quot;);&#xD;
    jLabel6.setText(&quot;Step 2. Lane detection&quot;);&#xD;
    jLabel7.setText(&quot;Step 3. Normalisation&quot;);&#xD;
    jLabel8.setText(&quot;Step 4. Band detection&quot;);&#xD;
    javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);&#xD;
    jPanel5.setLayout(jPanel5Layout);&#xD;
    jPanel5Layout.setHorizontalGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel5Layout.createSequentialGroup().addContainerGap().addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel1).addGroup(jPanel5Layout.createSequentialGroup().addGap(12, 12, 12).addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel3).addComponent(jLabel2).addComponent(jLabel4).addComponent(jLabel5))).addComponent(jLabel6).addComponent(jLabel7).addComponent(jLabel8)).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jPanel5Layout.setVerticalGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel5Layout.createSequentialGroup().addContainerGap().addComponent(jLabel1).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel2).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel3).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel4).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel5).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel6).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel7).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel8).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Help&quot;));&#xD;
    jTextArea1.setEditable(false);&#xD;
    jTextArea1.setColumns(20);&#xD;
    jTextArea1.setRows(5);&#xD;
    jTextArea1.setText(&quot;In this step, you can automatically \nadjust the brightness and contrast\nof the image -- just press the \nabove button. You will be able to\nadjust manually the brightness and\ncontrast of the image in the next\nstep.&quot;);&#xD;
    jScrollPane1.setViewportView(jTextArea1);&#xD;
    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);&#xD;
    jPanel2.setLayout(jPanel2Layout);&#xD;
    jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING));&#xD;
    jPanel2Layout.setVerticalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE));&#xD;
    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);&#xD;
    jPanel1.setLayout(jPanel1Layout);&#xD;
    jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));&#xD;
    jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup().addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)));&#xD;
    jPanel3.setBorder(null);&#xD;
    jbInvert.setText(&quot;Auto Adjust Brightness/Contrast&quot;);&#xD;
    jbInvert.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbInvertActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jButton1.setText(&quot;Manually Adjust Brightness/Contrast&quot;);&#xD;
    jButton1.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton1ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);&#xD;
    jPanel3.setLayout(jPanel3Layout);&#xD;
    jPanel3Layout.setHorizontalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jbInvert, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));&#xD;
    jPanel3Layout.setVerticalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel3Layout.createSequentialGroup().addContainerGap().addComponent(jButton1).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jbInvert).addContainerGap(222, Short.MAX_VALUE)));&#xD;
    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());&#xD;
    getContentPane().setLayout(layout);&#xD;
    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(layout.createSequentialGroup().addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))));&#xD;
    layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(layout.createSequentialGroup().addContainerGap().addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)));&#xD;
    pack();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MsBcIRUTEemIe6OhVnSywA" name="jbInvertActionPerformed" specification="_MsA1ERUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jbInvertActionPerformed&#xD;
    if (auto) {&#xD;
        IJ.run(imp, &quot;Enhance Contrast&quot;, &quot;saturated=0.35&quot;);&#xD;
        auto = false;&#xD;
        jbInvert.setText(&quot;Reset Brightness/Contrast&quot;);&#xD;
    } else {&#xD;
        IJ.run(imp, &quot;Undo&quot;, &quot;&quot;);&#xD;
        auto = true;&#xD;
        jbInvert.setText(&quot;Auto Adjust Brightness/Contrast&quot;);&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MsCDMRUTEemIe6OhVnSywA" name="formWindowClosed" specification="_MsBcIhUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_formWindowClosed&#xD;
    try {&#xD;
        if (close) {&#xD;
            ia.saveUnfinishedExperiment(this, 2);&#xD;
            close = false;&#xD;
        } else {&#xD;
        }&#xD;
    } catch (IOException ex) {&#xD;
        Logger.getLogger(step1_3.class.getName()).log(Level.SEVERE, null, ex);&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MsCDNBUTEemIe6OhVnSywA" name="jbBackActionPerformed" specification="_MsCDMhUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jbBackActionPerformed&#xD;
    close = false;&#xD;
    this.dispose();&#xD;
    step1_2 s = new step1_2(imp, ia);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MsCqQhUTEemIe6OhVnSywA" name="jButton2ActionPerformed" specification="_MsCqQBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton2ActionPerformed&#xD;
    close = false;&#xD;
    this.dispose();&#xD;
    Step1_4 s = new Step1_4(imp, ia);&#xD;
    System.out.println();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MsDRURUTEemIe6OhVnSywA" name="jButton1ActionPerformed" specification="_MsCqQxUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton1ActionPerformed&#xD;
    this.setAlwaysOnTop(false);&#xD;
    imp.getWindow().setAlwaysOnTop(false);&#xD;
    IJ.run(&quot;Brightness/Contrast...&quot;, &quot;&quot;);&#xD;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Mr9KsBUTEemIe6OhVnSywA" name="step1_3" visibility="public" method="_Mr-Y0RUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mr-Y0BUTEemIe6OhVnSywA" name="imp"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Mr-Y0hUTEemIe6OhVnSywA" name="step1_3" visibility="public" method="_MsAOAhUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MsAOABUTEemIe6OhVnSywA" name="imp"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MsAOARUTEemIe6OhVnSywA" name="aThis" type="_MhQ9oRUTEemIe6OhVnSywA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MsAOAxUTEemIe6OhVnSywA" name="initComponents" visibility="private" method="_MsA1EBUTEemIe6OhVnSywA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MsA1ERUTEemIe6OhVnSywA" name="jbInvertActionPerformed" visibility="private" method="_MsBcIRUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MsBcIBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MsBcIhUTEemIe6OhVnSywA" name="formWindowClosed" visibility="private" method="_MsCDMRUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MsCDMBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MsCDMhUTEemIe6OhVnSywA" name="jbBackActionPerformed" visibility="private" method="_MsCDNBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MsCDMxUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MsCqQBUTEemIe6OhVnSywA" name="jButton2ActionPerformed" visibility="private" method="_MsCqQhUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MsCqQRUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MsCqQxUTEemIe6OhVnSywA" name="jButton1ActionPerformed" visibility="private" method="_MsDRURUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MsDRUBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_MsiZgBUTEemIe6OhVnSywA" name="Step3_2" visibility="public">
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MsjAkBUTEemIe6OhVnSywA" name="close" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MsjAkRUTEemIe6OhVnSywA" name="defaultValue">
                    <language>JAVA</language>
                    <body>true</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MsjAkhUTEemIe6OhVnSywA" name="imp" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MsjAkxUTEemIe6OhVnSywA" name="ia" visibility="private" type="_MhQ9oRUTEemIe6OhVnSywA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MsjnoBUTEemIe6OhVnSywA" name="bm" visibility="private" type="_MEgJIBUTEemIe6OhVnSywA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MsjnoRUTEemIe6OhVnSywA" name="darkbg" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MsumwRUTEemIe6OhVnSywA" name="buttonGroup1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MsumwhUTEemIe6OhVnSywA" name="jButton1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MsvN0BUTEemIe6OhVnSywA" name="jButton2" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MsvN0RUTEemIe6OhVnSywA" name="jButton3" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MsvN0hUTEemIe6OhVnSywA" name="jButton4" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MsvN0xUTEemIe6OhVnSywA" name="jButton5" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Msv04BUTEemIe6OhVnSywA" name="jButton6" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Msv04RUTEemIe6OhVnSywA" name="jButton7" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Msv04hUTEemIe6OhVnSywA" name="jButton8" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mswb8BUTEemIe6OhVnSywA" name="jButton9" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mswb8RUTEemIe6OhVnSywA" name="jCheckBox1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mswb8hUTEemIe6OhVnSywA" name="jLabel1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mswb8xUTEemIe6OhVnSywA" name="jLabel2" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MsxDABUTEemIe6OhVnSywA" name="jLabel3" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MsxDARUTEemIe6OhVnSywA" name="jLabel4" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MsxDAhUTEemIe6OhVnSywA" name="jLabel6" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MsxDAxUTEemIe6OhVnSywA" name="jLabel7" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MsxqEBUTEemIe6OhVnSywA" name="jLabel8" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MsxqERUTEemIe6OhVnSywA" name="jPanel1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MsxqEhUTEemIe6OhVnSywA" name="jPanel2" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MsxqExUTEemIe6OhVnSywA" name="jPanel3" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MsyRIBUTEemIe6OhVnSywA" name="jPanel4" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MsyRIRUTEemIe6OhVnSywA" name="jPanel5" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MsyRIhUTEemIe6OhVnSywA" name="jPanel6" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Msy4MBUTEemIe6OhVnSywA" name="jPanel7" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Msy4MRUTEemIe6OhVnSywA" name="jScrollPane1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Msy4MhUTEemIe6OhVnSywA" name="jTextArea1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MszfQBUTEemIe6OhVnSywA" name="jToolBar1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MszfQRUTEemIe6OhVnSywA" name="jbBack" visibility="private" isUnique="false"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mslc0BUTEemIe6OhVnSywA" name="Step3_2" specification="_MsjnohUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    super();&#xD;
    initComponents();&#xD;
    this.imp = imp;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Msn5EBUTEemIe6OhVnSywA" name="Step3_2" specification="_Mslc0RUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    super();&#xD;
    initComponents();&#xD;
    this.imp = imp;&#xD;
    this.ia = aThis;&#xD;
    this.darkbg = darkbg;&#xD;
    if (bm == null) {&#xD;
        this.bm = new BandManager(ia.m);&#xD;
        this.bm.setbgcheckboxstate(darkbg);&#xD;
        //        bm.auto_detect();&#xD;
        this.bm.setVisible(false);&#xD;
    } else {&#xD;
        this.bm = bm;&#xD;
    }&#xD;
    IJ.setTool(&quot;point&quot;);&#xD;
    this.bm.updateShowAll();&#xD;
    Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();&#xD;
    double width = screenSize.getWidth();&#xD;
    setVisible(true);&#xD;
    setLocation((int) width - 515, 0);&#xD;
    imp.getWindow().setAlwaysOnTop(true);&#xD;
    setAlwaysOnTop(true);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Msn5ExUTEemIe6OhVnSywA" name="getBm" specification="_Msn5ERUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    return bm;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MsogIBUTEemIe6OhVnSywA" name="initComponents" specification="_Msn5FBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    buttonGroup1 = new javax.swing.ButtonGroup();&#xD;
    jPanel4 = new javax.swing.JPanel();&#xD;
    jButton2 = new javax.swing.JButton();&#xD;
    jbBack = new javax.swing.JButton();&#xD;
    jPanel5 = new javax.swing.JPanel();&#xD;
    jLabel1 = new javax.swing.JLabel();&#xD;
    jLabel6 = new javax.swing.JLabel();&#xD;
    jLabel7 = new javax.swing.JLabel();&#xD;
    jLabel8 = new javax.swing.JLabel();&#xD;
    jLabel2 = new javax.swing.JLabel();&#xD;
    jLabel3 = new javax.swing.JLabel();&#xD;
    jLabel4 = new javax.swing.JLabel();&#xD;
    jPanel1 = new javax.swing.JPanel();&#xD;
    jPanel2 = new javax.swing.JPanel();&#xD;
    jScrollPane1 = new javax.swing.JScrollPane();&#xD;
    jTextArea1 = new javax.swing.JTextArea();&#xD;
    jPanel3 = new javax.swing.JPanel();&#xD;
    jPanel7 = new javax.swing.JPanel();&#xD;
    jToolBar1 = new javax.swing.JToolBar();&#xD;
    jButton4 = new javax.swing.JButton();&#xD;
    jButton5 = new javax.swing.JButton();&#xD;
    jButton7 = new javax.swing.JButton();&#xD;
    jButton6 = new javax.swing.JButton();&#xD;
    jPanel6 = new javax.swing.JPanel();&#xD;
    jButton1 = new javax.swing.JButton();&#xD;
    jButton3 = new javax.swing.JButton();&#xD;
    jButton8 = new javax.swing.JButton();&#xD;
    jButton9 = new javax.swing.JButton();&#xD;
    jCheckBox1 = new javax.swing.JCheckBox();&#xD;
    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);&#xD;
    setTitle(&quot;Image analysis&quot;);&#xD;
    setResizable(false);&#xD;
    addWindowListener(new java.awt.event.WindowAdapter() {&#xD;
&#xD;
        public void windowClosed(java.awt.event.WindowEvent evt) {&#xD;
            formWindowClosed(evt);&#xD;
        }&#xD;
    });&#xD;
    jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());&#xD;
    jButton2.setText(&quot;Next>&quot;);&#xD;
    jButton2.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton2ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jbBack.setText(&quot;&lt;Back&quot;);&#xD;
    jbBack.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbBackActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);&#xD;
    jPanel4.setLayout(jPanel4Layout);&#xD;
    jPanel4Layout.setHorizontalGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addComponent(jbBack).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButton2)));&#xD;
    jPanel4Layout.setVerticalGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jButton2).addComponent(jbBack))));&#xD;
    jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Steps&quot;)));&#xD;
    jPanel5.setForeground(new java.awt.Color(0, 17, 255));&#xD;
    jLabel1.setText(&quot;Step 1. Image preprocessing&quot;);&#xD;
    jLabel6.setText(&quot;Step 2. Lane detection&quot;);&#xD;
    jLabel7.setText(&quot;Step 3. Normalisation&quot;);&#xD;
    jLabel8.setText(&quot;Step 4. Band detection&quot;);&#xD;
    jLabel2.setText(&quot;3.1. Markers threshold&quot;);&#xD;
    jLabel3.setForeground(new java.awt.Color(0, 15, 255));&#xD;
    jLabel3.setText(&quot;3.2. Markers picking&quot;);&#xD;
    jLabel4.setText(&quot;3.3. Migration model&quot;);&#xD;
    javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);&#xD;
    jPanel5.setLayout(jPanel5Layout);&#xD;
    jPanel5Layout.setHorizontalGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel5Layout.createSequentialGroup().addContainerGap().addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel1).addComponent(jLabel6).addComponent(jLabel7).addComponent(jLabel8).addGroup(jPanel5Layout.createSequentialGroup().addGap(12, 12, 12).addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel3).addComponent(jLabel2).addComponent(jLabel4)))).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jPanel5Layout.setVerticalGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel5Layout.createSequentialGroup().addContainerGap().addComponent(jLabel1).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel6).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel7).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel2).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel3).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel4).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel8).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Help&quot;));&#xD;
    jTextArea1.setEditable(false);&#xD;
    jTextArea1.setColumns(20);&#xD;
    jTextArea1.setRows(5);&#xD;
    jTextArea1.setText(&quot;In this step, you can manually\npick the bands of the markers. \nShortcuts are indicated between\nbrackets. \nBefore continuing, all the markers\nmust have the same number of \nbands.&quot;);&#xD;
    jScrollPane1.setViewportView(jTextArea1);&#xD;
    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);&#xD;
    jPanel2.setLayout(jPanel2Layout);&#xD;
    jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE));&#xD;
    jPanel2Layout.setVerticalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE));&#xD;
    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);&#xD;
    jPanel1.setLayout(jPanel1Layout);&#xD;
    jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));&#xD;
    jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup().addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)));&#xD;
    javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);&#xD;
    jPanel3.setLayout(jPanel3Layout);&#xD;
    jPanel3Layout.setHorizontalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 0, Short.MAX_VALUE));&#xD;
    jPanel3Layout.setVerticalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 353, Short.MAX_VALUE));&#xD;
    jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Image tools&quot;));&#xD;
    jToolBar1.setRollover(true);&#xD;
    // NOI18N&#xD;
    jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/GelJImages/point.png&quot;)));&#xD;
    jButton4.setToolTipText(&quot;Point tool (use it to select bands)&quot;);&#xD;
    jButton4.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton4ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar1.add(jButton4);&#xD;
    // NOI18N&#xD;
    jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/images/zoom_in.png&quot;)));&#xD;
    jButton5.setToolTipText(&quot;Zoom In&quot;);&#xD;
    jButton5.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton5ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar1.add(jButton5);&#xD;
    // NOI18N&#xD;
    jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/images/zoom_out.png&quot;)));&#xD;
    jButton7.setToolTipText(&quot;Zoom out&quot;);&#xD;
    jButton7.setFocusable(false);&#xD;
    jButton7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);&#xD;
    jButton7.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);&#xD;
    jButton7.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton7ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar1.add(jButton7);&#xD;
    // NOI18N&#xD;
    jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/images/hand.png&quot;)));&#xD;
    jButton6.setToolTipText(&quot;Hand tool&quot;);&#xD;
    jButton6.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton6ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar1.add(jButton6);&#xD;
    javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);&#xD;
    jPanel7.setLayout(jPanel7Layout);&#xD;
    jPanel7Layout.setHorizontalGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));&#xD;
    jPanel7Layout.setVerticalGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel7Layout.createSequentialGroup().addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Band tools&quot;));&#xD;
    jButton1.setText(&quot;Add band [a]&quot;);&#xD;
    jButton1.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton1ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jButton3.setText(&quot;Delete band [del]&quot;);&#xD;
    jButton3.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton3ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jButton8.setText(&quot;Undo [Ctrl + z]&quot;);&#xD;
    jButton8.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton8ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jButton9.setText(&quot;Redo [r]&quot;);&#xD;
    jButton9.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton9ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);&#xD;
    jPanel6.setLayout(jPanel6Layout);&#xD;
    jPanel6Layout.setHorizontalGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(jPanel6Layout.createSequentialGroup().addComponent(jButton8).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButton9, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)));&#xD;
    jPanel6Layout.setVerticalGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel6Layout.createSequentialGroup().addComponent(jButton1).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButton3).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jButton8).addComponent(jButton9)).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jCheckBox1.setText(&quot;Show histogram&quot;);&#xD;
    jCheckBox1.addChangeListener(new javax.swing.event.ChangeListener() {&#xD;
&#xD;
        public void stateChanged(javax.swing.event.ChangeEvent evt) {&#xD;
            jCheckBox1StateChanged(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());&#xD;
    getContentPane().setLayout(layout);&#xD;
    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(layout.createSequentialGroup().addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false).addComponent(jCheckBox1).addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))));&#xD;
    layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addGroup(layout.createSequentialGroup().addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jCheckBox1))).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)));&#xD;
    pack();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MspHMhUTEemIe6OhVnSywA" name="formWindowClosed" specification="_MspHMBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_formWindowClosed&#xD;
    try {&#xD;
        if (close) {&#xD;
            bm.close();&#xD;
            ia.saveUnfinishedExperiment(this, 6);&#xD;
            close = false;&#xD;
        } else {&#xD;
        }&#xD;
    } catch (IOException ex) {&#xD;
        Logger.getLogger(Step3_2.class.getName()).log(Level.SEVERE, null, ex);&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MspuQhUTEemIe6OhVnSywA" name="jbBackActionPerformed" specification="_MspuQBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jbBackActionPerformed&#xD;
    close = false;&#xD;
    int option = JOptionPane.showConfirmDialog(this, &quot;If you go back, the current band selection\n will be lost, do you want to go back?&quot;, &quot;Alert&quot;, JOptionPane.YES_NO_OPTION);&#xD;
    if (option == JOptionPane.YES_OPTION) {&#xD;
        imp.deleteRoi();&#xD;
        bm.dispose();&#xD;
        ImageWindow iw = imp.getWindow();&#xD;
        LaneManagerCanvas cc = new LaneManagerCanvas(imp);&#xD;
        ImageWindow iw2 = new ImageWindow(imp, cc);&#xD;
        iw.hide();&#xD;
        LaneManager lm = new LaneManager(ia.m);&#xD;
        step2_3 s = new step2_3(imp, ia, darkbg, lm);&#xD;
        lm.delete_without_asking(false);&#xD;
        Roi[] lanes = ia.m.getLanes();&#xD;
        if (lanes != null) {&#xD;
            for (Roi lane : lanes) {&#xD;
                lm.addRoi(lane);&#xD;
            }&#xD;
            if (getstandardlanes(ia.m.finallanes) != null) {&#xD;
                lm.fix_standards(roisfromlanes(getstandardlanes(ia.m.finallanes)));&#xD;
            }&#xD;
        }&#xD;
        lm.setLanesinfo(ia.m.getLanesinfo());&#xD;
        this.dispose();&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MsqVURUTEemIe6OhVnSywA" name="jButton2ActionPerformed" specification="_MspuQxUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton2ActionPerformed&#xD;
    close = false;&#xD;
    Lane[] stdlanes = getstandardlanes(ia.m.finallanes);&#xD;
    bm.close();&#xD;
    int[] indexesstd = numberofbandslanes(stdlanes);&#xD;
    if (!allequal(indexesstd)) {&#xD;
        String msg = &quot;The number of bands in the reference lanes is different,\n&quot; + &quot;all the reference lanes must have the same number of bands. \n&quot;;&#xD;
        for (int i = 0; i &lt; stdlanes.length; i++) {&#xD;
            msg = msg + stdlanes[i].getName() + &quot; contains &quot; + stdlanes[i].getPositionbands().length + &quot;.\n&quot;;&#xD;
        }&#xD;
        JOptionPane.showMessageDialog(this, msg, &quot;Incorrect number of bands&quot;, JOptionPane.INFORMATION_MESSAGE);&#xD;
        this.dispose();&#xD;
        imp.deleteRoi();&#xD;
        Step3_2 s = new Step3_2(imp, ia, darkbg, null);&#xD;
        BandManager bm1 = s.getBm();&#xD;
        bm.delete_without_asking(false);&#xD;
        if (ia.m.finallanes != null) {&#xD;
            for (int i = 0; i &lt; ia.m.finallanes.length; i++) {&#xD;
                int[] positionbands = ia.m.finallanes[i].getPositionbands();&#xD;
                if (positionbands != null) {&#xD;
                    for (int b : positionbands) {&#xD;
                        Roi r0 = ia.m.finallanes[i].getRoi();&#xD;
                        int r0x = r0.getBounds().x;&#xD;
                        int r0y = r0.getBounds().y;&#xD;
                        int w = r0.getBounds().width;&#xD;
                        Rectangle r = new Rectangle(r0x, r0y + b - 1, w, 2);&#xD;
                        Roi r1 = rectangleintersectionroi(r0, r);&#xD;
                        if (ia.m.finallanes[i].isIsstandard()) {&#xD;
                            if (ia.m.getColour() == Color.RED) {&#xD;
                                r1.setFillColor(Color.BLUE);&#xD;
                            } else {&#xD;
                                r1.setFillColor(Color.RED);&#xD;
                            }&#xD;
                        } else {&#xD;
                            r1.setFillColor(ia.m.getColour());&#xD;
                        }&#xD;
                        //                            r1.setFillColor(ia.m.getColour());&#xD;
                        bm1.add(imp, r1, 0, i);&#xD;
                        bm1.showAll(0);&#xD;
                    }&#xD;
                }&#xD;
            }&#xD;
        }&#xD;
        return;&#xD;
    }&#xD;
    IJ.run(imp, &quot;Scale to Fit&quot;, &quot;&quot;);&#xD;
    Step3_3 s = new Step3_3(imp, ia, darkbg);&#xD;
    this.dispose();&#xD;
    System.out.println();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Msq8YBUTEemIe6OhVnSywA" name="jButton1ActionPerformed" specification="_MsqVUhUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton1ActionPerformed&#xD;
    this.setAlwaysOnTop(false);&#xD;
    imp.getWindow().setAlwaysOnTop(false);&#xD;
    bm.add_band(true);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Msq8YxUTEemIe6OhVnSywA" name="jButton3ActionPerformed" specification="_Msq8YRUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton3ActionPerformed&#xD;
    this.setAlwaysOnTop(false);&#xD;
    imp.getWindow().setAlwaysOnTop(false);&#xD;
    bm.delete(false);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MsrjcRUTEemIe6OhVnSywA" name="jButton4ActionPerformed" specification="_Msq8ZBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton4ActionPerformed&#xD;
    IJ.setTool(&quot;point&quot;);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MsrjdBUTEemIe6OhVnSywA" name="jButton5ActionPerformed" specification="_MsrjchUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton5ActionPerformed&#xD;
    IJ.run(&quot;In [+]&quot;, &quot;&quot;);&#xD;
    IJ.setTool(&quot;point&quot;);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MssKghUTEemIe6OhVnSywA" name="jButton6ActionPerformed" specification="_MssKgBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton6ActionPerformed&#xD;
    IJ.setTool(&quot;hand&quot;);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MssxkhUTEemIe6OhVnSywA" name="jButton8ActionPerformed" specification="_MssxkBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton8ActionPerformed&#xD;
    this.setAlwaysOnTop(false);&#xD;
    imp.getWindow().setAlwaysOnTop(false);&#xD;
    bm.undo();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MstYoRUTEemIe6OhVnSywA" name="jButton9ActionPerformed" specification="_MssxkxUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton9ActionPerformed&#xD;
    this.setAlwaysOnTop(false);&#xD;
    imp.getWindow().setAlwaysOnTop(false);&#xD;
    bm.redo();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mst_sRUTEemIe6OhVnSywA" name="jCheckBox1StateChanged" specification="_MstYohUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jCheckBox1StateChanged&#xD;
    this.setAlwaysOnTop(false);&#xD;
    imp.getWindow().setAlwaysOnTop(false);&#xD;
    bm.activatehistogramdisplay(jCheckBox1.isSelected());&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MsumwBUTEemIe6OhVnSywA" name="jButton7ActionPerformed" specification="_Mst_shUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton7ActionPerformed&#xD;
    IJ.run(&quot;Out [-]&quot;, &quot;&quot;);&#xD;
    IJ.setTool(&quot;point&quot;);&#xD;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MsjnohUTEemIe6OhVnSywA" name="Step3_2" visibility="public" method="_Mslc0BUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Msk1wRUTEemIe6OhVnSywA" name="imp"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Mslc0RUTEemIe6OhVnSywA" name="Step3_2" visibility="public" method="_Msn5EBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MsnSABUTEemIe6OhVnSywA" name="imp"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MsnSARUTEemIe6OhVnSywA" name="aThis" type="_MhQ9oRUTEemIe6OhVnSywA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MsnSAhUTEemIe6OhVnSywA" name="darkbg">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MsnSAxUTEemIe6OhVnSywA" name="bm" type="_MEgJIBUTEemIe6OhVnSywA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Msn5ERUTEemIe6OhVnSywA" name="getBm" visibility="public" method="_Msn5ExUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Msn5EhUTEemIe6OhVnSywA" type="_MEgJIBUTEemIe6OhVnSywA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Msn5FBUTEemIe6OhVnSywA" name="initComponents" visibility="private" method="_MsogIBUTEemIe6OhVnSywA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MspHMBUTEemIe6OhVnSywA" name="formWindowClosed" visibility="private" method="_MspHMhUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MspHMRUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MspuQBUTEemIe6OhVnSywA" name="jbBackActionPerformed" visibility="private" method="_MspuQhUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MspuQRUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MspuQxUTEemIe6OhVnSywA" name="jButton2ActionPerformed" visibility="private" method="_MsqVURUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MsqVUBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MsqVUhUTEemIe6OhVnSywA" name="jButton1ActionPerformed" visibility="private" method="_Msq8YBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MsqVUxUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Msq8YRUTEemIe6OhVnSywA" name="jButton3ActionPerformed" visibility="private" method="_Msq8YxUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Msq8YhUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Msq8ZBUTEemIe6OhVnSywA" name="jButton4ActionPerformed" visibility="private" method="_MsrjcRUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MsrjcBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MsrjchUTEemIe6OhVnSywA" name="jButton5ActionPerformed" visibility="private" method="_MsrjdBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MsrjcxUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MssKgBUTEemIe6OhVnSywA" name="jButton6ActionPerformed" visibility="private" method="_MssKghUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MssKgRUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MssxkBUTEemIe6OhVnSywA" name="jButton8ActionPerformed" visibility="private" method="_MssxkhUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MssxkRUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MssxkxUTEemIe6OhVnSywA" name="jButton9ActionPerformed" visibility="private" method="_MstYoRUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MstYoBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MstYohUTEemIe6OhVnSywA" name="jCheckBox1StateChanged" visibility="private" method="_Mst_sRUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mst_sBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Mst_shUTEemIe6OhVnSywA" name="jButton7ActionPerformed" visibility="private" method="_MsumwBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mst_sxUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_Ms8pMBUTEemIe6OhVnSywA" name="Step3_1" visibility="public">
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Ms9QQBUTEemIe6OhVnSywA" name="close" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_Ms9QQRUTEemIe6OhVnSywA" name="defaultValue">
                    <language>JAVA</language>
                    <body>true</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Ms9QQhUTEemIe6OhVnSywA" name="imp" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Ms9QQxUTEemIe6OhVnSywA" name="ia" visibility="private" type="_MhQ9oRUTEemIe6OhVnSywA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Ms93UBUTEemIe6OhVnSywA" name="bm" visibility="private" type="_MEgJIBUTEemIe6OhVnSywA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Ms93URUTEemIe6OhVnSywA" name="darkbg" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Ms93UhUTEemIe6OhVnSywA" name="tolerance" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Ms93UxUTEemIe6OhVnSywA" name="c" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MtYHAhUTEemIe6OhVnSywA" name="buttonGroup1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MtYHAxUTEemIe6OhVnSywA" name="jButton2" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MtYuEBUTEemIe6OhVnSywA" name="jLabel1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MtZVIBUTEemIe6OhVnSywA" name="jLabel10" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MtZVIRUTEemIe6OhVnSywA" name="jLabel11" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MtZ8MBUTEemIe6OhVnSywA" name="jLabel12" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MtZ8MRUTEemIe6OhVnSywA" name="jLabel13" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MtZ8MhUTEemIe6OhVnSywA" name="jLabel14" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MtZ8MxUTEemIe6OhVnSywA" name="jLabel15" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MtajQBUTEemIe6OhVnSywA" name="jLabel16" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MtajQRUTEemIe6OhVnSywA" name="jLabel17" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MtajQhUTEemIe6OhVnSywA" name="jLabel2" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MtbKUBUTEemIe6OhVnSywA" name="jLabel3" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MtbKURUTEemIe6OhVnSywA" name="jLabel4" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MtbKUhUTEemIe6OhVnSywA" name="jLabel5" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MtbxYBUTEemIe6OhVnSywA" name="jLabel6" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MtbxYRUTEemIe6OhVnSywA" name="jLabel7" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MtcYcBUTEemIe6OhVnSywA" name="jLabel8" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MtcYcRUTEemIe6OhVnSywA" name="jLabel9" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mtc_gBUTEemIe6OhVnSywA" name="jPanel1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mtc_gRUTEemIe6OhVnSywA" name="jPanel2" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MtdmkBUTEemIe6OhVnSywA" name="jPanel4" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MtdmkRUTEemIe6OhVnSywA" name="jPanel5" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MteNoBUTEemIe6OhVnSywA" name="jPanel6" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MteNoRUTEemIe6OhVnSywA" name="jScrollPane1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MteNohUTEemIe6OhVnSywA" name="jScrollPane2" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mte0sBUTEemIe6OhVnSywA" name="jSlider1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mte0sRUTEemIe6OhVnSywA" name="jSlider10" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MtfbwBUTEemIe6OhVnSywA" name="jSlider2" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MtfbwRUTEemIe6OhVnSywA" name="jSlider3" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MtfbwhUTEemIe6OhVnSywA" name="jSlider4" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MtgC0BUTEemIe6OhVnSywA" name="jSlider5" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mtgp4BUTEemIe6OhVnSywA" name="jSlider6" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mtgp4RUTEemIe6OhVnSywA" name="jSlider7" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mtgp4hUTEemIe6OhVnSywA" name="jSlider8" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MthQ8BUTEemIe6OhVnSywA" name="jSlider9" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MthQ8RUTEemIe6OhVnSywA" name="jTextArea1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MthQ8hUTEemIe6OhVnSywA" name="jbBack" visibility="private" isUnique="false"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MtATkRUTEemIe6OhVnSywA" name="Step3_1" specification="_Ms-eYBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    super();&#xD;
    initComponents();&#xD;
    this.imp = imp;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MtDW4hUTEemIe6OhVnSywA" name="Step3_1" specification="_MtA6oBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    super();&#xD;
    initComponents();&#xD;
    this.imp = imp;&#xD;
    this.ia = aThis;&#xD;
    this.darkbg = darkbg;&#xD;
    bm = new BandManager(ia.m);&#xD;
    bm.setbgcheckboxstate(darkbg);&#xD;
    bm.setVisible(false);&#xD;
    this.c = Color.BLUE;&#xD;
    this.tolerance = 100;&#xD;
    IJ.setTool(&quot;point&quot;);&#xD;
    bm.updateShowAll();&#xD;
    Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();&#xD;
    double width = screenSize.getWidth();&#xD;
    setVisible(true);&#xD;
    setLocation((int) width - 515, 0);&#xD;
    imp.getWindow().setAlwaysOnTop(true);&#xD;
    setAlwaysOnTop(true);&#xD;
    toFront();&#xD;
    JSlider[] sliders = { jSlider1, jSlider2, jSlider3, jSlider4, jSlider5, jSlider6, jSlider7, jSlider8, jSlider9, jSlider10 };&#xD;
    JLabel[] labels = { jLabel5, jLabel9, jLabel10, jLabel11, jLabel12, jLabel13, jLabel14, jLabel15, jLabel16, jLabel17 };&#xD;
    int[] indexes = indexesstandardlanes(ia.m.finallanes);&#xD;
    initiatenecessaryscrollbars(sliders, labels, indexes.length, tolerance);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MtFMEhUTEemIe6OhVnSywA" name="initiatenecessaryscrollbars" specification="_MtD98BUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    for (int i = 0; i &lt; n; i++) {&#xD;
        scrollbars[i].setValue(tolerance);&#xD;
    }&#xD;
    for (int i = n; i &lt; scrollbars.length; i++) {&#xD;
        scrollbars[i].setVisible(false);&#xD;
        labels[i].setVisible(false);&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MtGaNBUTEemIe6OhVnSywA" name="gettolerances" specification="_MtFzIBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    int[] res = new int[n];&#xD;
    for (int i = 0; i &lt; n; i++) {&#xD;
        res[i] = scrollbars[i].getValue();&#xD;
    }&#xD;
    return res;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MtHBQRUTEemIe6OhVnSywA" name="localselectbands" specification="_MtHBQBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    JSlider[] sliders = { jSlider1, jSlider2, jSlider3, jSlider4, jSlider5, jSlider6, jSlider7, jSlider8, jSlider9, jSlider10 };&#xD;
    int[] indexes = indexesstandardlanes(ia.m.finallanes);&#xD;
    int[] tolerances = gettolerances(sliders, indexes.length);&#xD;
    Prefs.verticalProfile = true;&#xD;
    bm.delete_without_asking(true);&#xD;
    bm.restart_bands();&#xD;
    ImageProcessor ip = imp.getProcessor();&#xD;
    for (int i = 0; i &lt; indexes.length; i++) {&#xD;
        Roi r0 = ia.m.finallanes[indexes[i]].getRoi();&#xD;
        int x0 = r0.getBounds().x + r0.getBounds().width / 2;&#xD;
        int y0 = r0.getBounds().y;&#xD;
        int x1 = r0.getBounds().x + r0.getBounds().width / 2;&#xD;
        int y1 = r0.getBounds().y + r0.getBounds().height;&#xD;
        Line l0 = new Line(x0, y0, x1, y1);&#xD;
        l0.setWidth(15);&#xD;
        imp.setRoi(l0);&#xD;
        // Finding the peaks of the profile&#xD;
        if ((!darkbg &amp;&amp; !imp.isInvertedLut()) || imp.isInvertedLut()) {&#xD;
            ip.invert();&#xD;
        }&#xD;
        //ProfilePlot pp = new ProfilePlot(imp);&#xD;
        double[] profile = ia.m.finallanes[indexes[i]].getProfile();&#xD;
        if ((!darkbg &amp;&amp; !imp.isInvertedLut()) || imp.isInvertedLut()) {&#xD;
            ip.invert();&#xD;
        }&#xD;
        l0.setWidth(1);&#xD;
        int[] maxima = MaximumFinder.findMaxima(profile, 2, true);&#xD;
        int[] htt = higherthantolerance(maxima, profile, tolerances[i]);&#xD;
        Arrays.sort(htt);&#xD;
        // Showing the lines&#xD;
        int r0x = r0.getBounds().x;&#xD;
        int r0y = r0.getBounds().y;&#xD;
        int w = r0.getBounds().width;&#xD;
        int[] positionsy = new int[htt.length];&#xD;
        for (int k = 0; k &lt; htt.length; k++) {&#xD;
            positionsy[k] = r0y + htt[k];&#xD;
        }&#xD;
        for (int j = 0; j &lt; htt.length; j++) {&#xD;
            /*Line line = new Line(r0x, r0y + htt[j], r0x + w, r0y + htt[j]);
                 Line lineintersection = lineintersectionroi(r0,line);*/&#xD;
            Rectangle r = new Rectangle(r0x, r0y + htt[j], w, 2);&#xD;
            Roi r1 = rectangleintersectionroi(r0, r);&#xD;
            if (ia.m.finallanes[indexes[i]].isIsstandard()) {&#xD;
                if (c == Color.RED) {&#xD;
                    r1.setFillColor(Color.BLUE);&#xD;
                } else {&#xD;
                    r1.setFillColor(Color.RED);&#xD;
                }&#xD;
            } else {&#xD;
                r1.setFillColor(c);&#xD;
            }&#xD;
            bm.add(imp, r1, j, indexes[i]);&#xD;
        //bm.add(imp, line, j);&#xD;
        }&#xD;
    }&#xD;
    //m.finallanes[i].setProfile(profile);&#xD;
    //m.finallanes[i].setPositionbands(positionsy);&#xD;
    bm.showAll(0);&#xD;
//m.finallanes = finallanes;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MtIPYRUTEemIe6OhVnSywA" name="lineintersectionroi" specification="_MtHoUBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    Line line;&#xD;
    int[] xpointsl = l.getPoints().xpoints;&#xD;
    int[] ypointsl = l.getPoints().ypoints;&#xD;
    int len = xpointsl.length;&#xD;
    Boolean inside = false;&#xD;
    int x0 = xpointsl[0];&#xD;
    int y0 = ypointsl[0];&#xD;
    int x1 = xpointsl[len - 1];&#xD;
    int y1 = ypointsl[len - 1];&#xD;
    for (int i = 1; i &lt; len; i++) {&#xD;
        if (!inside) {&#xD;
            if (r.contains(xpointsl[i], ypointsl[i])) {&#xD;
                x0 = xpointsl[i];&#xD;
                y0 = ypointsl[i];&#xD;
                inside = true;&#xD;
            }&#xD;
        } else {&#xD;
            if (!r.contains(xpointsl[i], ypointsl[i])) {&#xD;
                x1 = xpointsl[i];&#xD;
                y1 = ypointsl[i];&#xD;
                line = new Line(x0, y0, x1, y1);&#xD;
                return line;&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    line = new Line(x0, y0, x1, y1);&#xD;
    return line;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MtJdhBUTEemIe6OhVnSywA" name="higherthantolerance" specification="_MtIPYhUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    ArrayList&lt;Integer> res = new ArrayList&lt;Integer>();&#xD;
    for (int i = 0; i &lt; v.length; i++) {&#xD;
        if (p[v[i]] > tolerance) {&#xD;
            res.add(v[i]);&#xD;
        }&#xD;
    }&#xD;
    int[] ret = new int[res.size()];&#xD;
    for (int i = 0; i &lt; ret.length; i++) {&#xD;
        ret[i] = res.get(i);&#xD;
    }&#xD;
    return ret;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MtKroxUTEemIe6OhVnSywA" name="movingaveragefilter" specification="_MtKEkBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    int lv = v.length;&#xD;
    double[] res = new double[lv];&#xD;
    // starting point &#xD;
    int sp;&#xD;
    // end point &#xD;
    int ep;&#xD;
    for (int i = 0; i &lt; lv; i++) {&#xD;
        sp = i - (avgpoints - 1) / 2;&#xD;
        if (sp &lt; 0) {&#xD;
            sp = 0;&#xD;
        }&#xD;
        ep = i + (avgpoints - 1) / 2;&#xD;
        if (ep >= lv) {&#xD;
            ep = lv - 1;&#xD;
        }&#xD;
        double partial_sum = 0;&#xD;
        for (int j = sp; j &lt;= ep; j++) {&#xD;
            partial_sum = partial_sum + v[j];&#xD;
        }&#xD;
        res[i] = partial_sum / (ep - sp + 1);&#xD;
    }&#xD;
    return res;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MtMg0RUTEemIe6OhVnSywA" name="higherthanvalue" specification="_MtLSsBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    if (from_end) {&#xD;
        int pos = 0;&#xD;
        for (int i = 0; i &lt; v.length; i++) {&#xD;
            if (value &lt; v[i]) {&#xD;
                return i;&#xD;
            }&#xD;
        }&#xD;
        return pos;&#xD;
    } else {&#xD;
        int pos = v.length - 1;&#xD;
        for (int i = v.length - 1; i >= 0; i--) {&#xD;
            if (value &lt; v[i]) {&#xD;
                return i;&#xD;
            }&#xD;
        }&#xD;
        return pos;&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MtNH4RUTEemIe6OhVnSywA" name="removeOverlay" specification="_MtMg0hUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    if (imp != null &amp;&amp; imp.getCanvas() != null) {&#xD;
        setOverlay(imp, null);&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MtNu8hUTEemIe6OhVnSywA" name="setOverlay" specification="_MtNH4hUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    if (imp == null) {&#xD;
        return;&#xD;
    }&#xD;
    ImageCanvas ic = imp.getCanvas();&#xD;
    if (ic == null) {&#xD;
        imp.setOverlay(overlay);&#xD;
        return;&#xD;
    }&#xD;
    ic.setShowAllList(overlay);&#xD;
    imp.draw();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MtOWAhUTEemIe6OhVnSywA" name="getBm" specification="_MtOWABUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    return bm;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MtPkIBUTEemIe6OhVnSywA" name="initComponents" specification="_MtOWAxUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    buttonGroup1 = new javax.swing.ButtonGroup();&#xD;
    jPanel4 = new javax.swing.JPanel();&#xD;
    jButton2 = new javax.swing.JButton();&#xD;
    jbBack = new javax.swing.JButton();&#xD;
    jPanel5 = new javax.swing.JPanel();&#xD;
    jLabel1 = new javax.swing.JLabel();&#xD;
    jLabel6 = new javax.swing.JLabel();&#xD;
    jLabel7 = new javax.swing.JLabel();&#xD;
    jLabel8 = new javax.swing.JLabel();&#xD;
    jLabel2 = new javax.swing.JLabel();&#xD;
    jLabel3 = new javax.swing.JLabel();&#xD;
    jLabel4 = new javax.swing.JLabel();&#xD;
    jPanel1 = new javax.swing.JPanel();&#xD;
    jPanel2 = new javax.swing.JPanel();&#xD;
    jScrollPane1 = new javax.swing.JScrollPane();&#xD;
    jTextArea1 = new javax.swing.JTextArea();&#xD;
    jScrollPane2 = new javax.swing.JScrollPane();&#xD;
    jPanel6 = new javax.swing.JPanel();&#xD;
    jLabel5 = new javax.swing.JLabel();&#xD;
    jSlider1 = new javax.swing.JSlider();&#xD;
    jLabel9 = new javax.swing.JLabel();&#xD;
    jSlider2 = new javax.swing.JSlider();&#xD;
    jLabel10 = new javax.swing.JLabel();&#xD;
    jLabel11 = new javax.swing.JLabel();&#xD;
    jLabel12 = new javax.swing.JLabel();&#xD;
    jLabel13 = new javax.swing.JLabel();&#xD;
    jLabel14 = new javax.swing.JLabel();&#xD;
    jLabel15 = new javax.swing.JLabel();&#xD;
    jLabel16 = new javax.swing.JLabel();&#xD;
    jLabel17 = new javax.swing.JLabel();&#xD;
    jSlider3 = new javax.swing.JSlider();&#xD;
    jSlider4 = new javax.swing.JSlider();&#xD;
    jSlider5 = new javax.swing.JSlider();&#xD;
    jSlider6 = new javax.swing.JSlider();&#xD;
    jSlider7 = new javax.swing.JSlider();&#xD;
    jSlider8 = new javax.swing.JSlider();&#xD;
    jSlider9 = new javax.swing.JSlider();&#xD;
    jSlider10 = new javax.swing.JSlider();&#xD;
    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);&#xD;
    setTitle(&quot;Image analysis&quot;);&#xD;
    setResizable(false);&#xD;
    addWindowListener(new java.awt.event.WindowAdapter() {&#xD;
&#xD;
        public void windowClosed(java.awt.event.WindowEvent evt) {&#xD;
            formWindowClosed(evt);&#xD;
        }&#xD;
    });&#xD;
    jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());&#xD;
    jButton2.setText(&quot;Next>&quot;);&#xD;
    jButton2.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton2ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jbBack.setText(&quot;&lt;Back&quot;);&#xD;
    jbBack.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbBackActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);&#xD;
    jPanel4.setLayout(jPanel4Layout);&#xD;
    jPanel4Layout.setHorizontalGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addComponent(jbBack).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButton2)));&#xD;
    jPanel4Layout.setVerticalGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jButton2).addComponent(jbBack))));&#xD;
    jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Steps&quot;)));&#xD;
    jPanel5.setForeground(new java.awt.Color(0, 17, 255));&#xD;
    jLabel1.setText(&quot;Step 1. Image preprocessing&quot;);&#xD;
    jLabel6.setText(&quot;Step 2. Lane detection&quot;);&#xD;
    jLabel7.setText(&quot;Step 3. Normalisation&quot;);&#xD;
    jLabel8.setText(&quot;Step 4. Band detection&quot;);&#xD;
    jLabel2.setForeground(new java.awt.Color(0, 15, 255));&#xD;
    jLabel2.setText(&quot;3.1. Markers threshold&quot;);&#xD;
    jLabel3.setText(&quot;3.2. Markers picking&quot;);&#xD;
    jLabel4.setText(&quot;3.3. Migration model&quot;);&#xD;
    javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);&#xD;
    jPanel5.setLayout(jPanel5Layout);&#xD;
    jPanel5Layout.setHorizontalGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel5Layout.createSequentialGroup().addContainerGap().addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel1).addComponent(jLabel6).addComponent(jLabel7).addComponent(jLabel8).addGroup(jPanel5Layout.createSequentialGroup().addGap(12, 12, 12).addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel3).addComponent(jLabel2).addComponent(jLabel4)))).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jPanel5Layout.setVerticalGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel5Layout.createSequentialGroup().addContainerGap().addComponent(jLabel1).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel6).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel7).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel2).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel3).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel4).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel8).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Help&quot;));&#xD;
    jTextArea1.setEditable(false);&#xD;
    jTextArea1.setColumns(20);&#xD;
    jTextArea1.setRows(5);&#xD;
    jTextArea1.setText(&quot;In this step, you can automatically\ndetect the bands of each marker\n(reference lane). You can fix a\ndifferent threshold for each \nmarker of the image.\n&quot;);&#xD;
    jScrollPane1.setViewportView(jTextArea1);&#xD;
    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);&#xD;
    jPanel2.setLayout(jPanel2Layout);&#xD;
    jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING));&#xD;
    jPanel2Layout.setVerticalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE));&#xD;
    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);&#xD;
    jPanel1.setLayout(jPanel1Layout);&#xD;
    jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));&#xD;
    jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup().addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)));&#xD;
    jLabel5.setText(&quot;Marker 1:&quot;);&#xD;
    jSlider1.setMaximum(255);&#xD;
    jSlider1.addChangeListener(new javax.swing.event.ChangeListener() {&#xD;
&#xD;
        public void stateChanged(javax.swing.event.ChangeEvent evt) {&#xD;
            jSlider1StateChanged(evt);&#xD;
        }&#xD;
    });&#xD;
    jLabel9.setText(&quot;Marker 2:&quot;);&#xD;
    jSlider2.setMaximum(255);&#xD;
    jSlider2.addChangeListener(new javax.swing.event.ChangeListener() {&#xD;
&#xD;
        public void stateChanged(javax.swing.event.ChangeEvent evt) {&#xD;
            jSlider2StateChanged(evt);&#xD;
        }&#xD;
    });&#xD;
    jLabel10.setText(&quot;Marker 3:&quot;);&#xD;
    jLabel11.setText(&quot;Marker 4:&quot;);&#xD;
    jLabel12.setText(&quot;Marker 5:&quot;);&#xD;
    jLabel13.setText(&quot;Marker 6:&quot;);&#xD;
    jLabel14.setText(&quot;Marker 7:&quot;);&#xD;
    jLabel15.setText(&quot;Marker 8:&quot;);&#xD;
    jLabel16.setText(&quot;Marker 9:&quot;);&#xD;
    jLabel17.setText(&quot;Marker 10:&quot;);&#xD;
    jSlider3.setMaximum(255);&#xD;
    jSlider3.addChangeListener(new javax.swing.event.ChangeListener() {&#xD;
&#xD;
        public void stateChanged(javax.swing.event.ChangeEvent evt) {&#xD;
            jSlider3StateChanged(evt);&#xD;
        }&#xD;
    });&#xD;
    jSlider4.setMaximum(255);&#xD;
    jSlider4.addChangeListener(new javax.swing.event.ChangeListener() {&#xD;
&#xD;
        public void stateChanged(javax.swing.event.ChangeEvent evt) {&#xD;
            jSlider4StateChanged(evt);&#xD;
        }&#xD;
    });&#xD;
    jSlider5.setMaximum(255);&#xD;
    jSlider5.addChangeListener(new javax.swing.event.ChangeListener() {&#xD;
&#xD;
        public void stateChanged(javax.swing.event.ChangeEvent evt) {&#xD;
            jSlider5StateChanged(evt);&#xD;
        }&#xD;
    });&#xD;
    jSlider6.setMaximum(255);&#xD;
    jSlider6.addChangeListener(new javax.swing.event.ChangeListener() {&#xD;
&#xD;
        public void stateChanged(javax.swing.event.ChangeEvent evt) {&#xD;
            jSlider6StateChanged(evt);&#xD;
        }&#xD;
    });&#xD;
    jSlider7.setMaximum(255);&#xD;
    jSlider7.addChangeListener(new javax.swing.event.ChangeListener() {&#xD;
&#xD;
        public void stateChanged(javax.swing.event.ChangeEvent evt) {&#xD;
            jSlider7StateChanged(evt);&#xD;
        }&#xD;
    });&#xD;
    jSlider8.setMaximum(255);&#xD;
    jSlider8.addChangeListener(new javax.swing.event.ChangeListener() {&#xD;
&#xD;
        public void stateChanged(javax.swing.event.ChangeEvent evt) {&#xD;
            jSlider8StateChanged(evt);&#xD;
        }&#xD;
    });&#xD;
    jSlider9.setMaximum(255);&#xD;
    jSlider9.addChangeListener(new javax.swing.event.ChangeListener() {&#xD;
&#xD;
        public void stateChanged(javax.swing.event.ChangeEvent evt) {&#xD;
            jSlider9StateChanged(evt);&#xD;
        }&#xD;
    });&#xD;
    jSlider10.setMaximum(255);&#xD;
    jSlider10.addChangeListener(new javax.swing.event.ChangeListener() {&#xD;
&#xD;
        public void stateChanged(javax.swing.event.ChangeEvent evt) {&#xD;
            jSlider10StateChanged(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);&#xD;
    jPanel6.setLayout(jPanel6Layout);&#xD;
    jPanel6Layout.setHorizontalGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel6Layout.createSequentialGroup().addContainerGap().addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup().addComponent(jLabel9).addContainerGap(187, Short.MAX_VALUE)).addGroup(jPanel6Layout.createSequentialGroup().addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false).addGroup(jPanel6Layout.createSequentialGroup().addComponent(jLabel15).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jSlider8, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(jPanel6Layout.createSequentialGroup().addComponent(jLabel14).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jSlider7, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup().addComponent(jLabel17).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jSlider10, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup().addComponent(jLabel16).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jSlider9, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(jPanel6Layout.createSequentialGroup().addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel5).addComponent(jLabel10).addComponent(jLabel11).addComponent(jLabel12).addComponent(jLabel13)).addGap(33, 33, 33).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false).addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jSlider2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)).addComponent(jSlider3, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jSlider4, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jSlider5, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jSlider6, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)))).addGap(0, 0, Short.MAX_VALUE)))));&#xD;
    jPanel6Layout.setVerticalGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel6Layout.createSequentialGroup().addContainerGap().addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel5).addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel9).addComponent(jSlider2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel10).addComponent(jSlider3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel11).addComponent(jSlider4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel12).addComponent(jSlider5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel13).addComponent(jSlider6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel14).addComponent(jSlider7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel15).addComponent(jSlider8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel16).addComponent(jSlider9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel17).addComponent(jSlider10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addContainerGap(1152, Short.MAX_VALUE)));&#xD;
    jScrollPane2.setViewportView(jPanel6);&#xD;
    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());&#xD;
    getContentPane().setLayout(layout);&#xD;
    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(layout.createSequentialGroup().addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jScrollPane2))));&#xD;
    layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(layout.createSequentialGroup().addContainerGap().addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)));&#xD;
    pack();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MtQLMRUTEemIe6OhVnSywA" name="formWindowClosed" specification="_MtPkIRUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_formWindowClosed&#xD;
    try {&#xD;
        if (close) {&#xD;
            ia.saveUnfinishedExperiment(this, 6);&#xD;
            close = false;&#xD;
        } else {&#xD;
        }&#xD;
    } catch (IOException ex) {&#xD;
        Logger.getLogger(Step3_1.class.getName()).log(Level.SEVERE, null, ex);&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MtQyQhUTEemIe6OhVnSywA" name="jbBackActionPerformed" specification="_MtQyQBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jbBackActionPerformed&#xD;
    close = false;&#xD;
    int option = JOptionPane.showConfirmDialog(this, &quot;If you go back, the current band selection\n will be lost, do you want to go back?&quot;, &quot;Alert&quot;, JOptionPane.YES_NO_OPTION);&#xD;
    if (option == JOptionPane.YES_OPTION) {&#xD;
        imp.deleteRoi();&#xD;
        bm.dispose();&#xD;
        ImageWindow iw = imp.getWindow();&#xD;
        LaneManagerCanvas cc = new LaneManagerCanvas(imp);&#xD;
        ImageWindow iw2 = new ImageWindow(imp, cc);&#xD;
        iw.hide();&#xD;
        LaneManager lm = new LaneManager(ia.m);&#xD;
        step2_3 s = new step2_3(imp, ia, darkbg, lm);&#xD;
        lm.delete_without_asking(false);&#xD;
        Roi[] lanes = ia.m.getLanes();&#xD;
        if (lanes != null) {&#xD;
            for (Roi lane : lanes) {&#xD;
                lm.addRoi(lane);&#xD;
            }&#xD;
            if (getstandardlanes(ia.m.finallanes) != null) {&#xD;
                lm.fix_standards(roisfromlanes(getstandardlanes(ia.m.finallanes)));&#xD;
            }&#xD;
        }&#xD;
        lm.setLanesinfo(ia.m.getLanesinfo());&#xD;
        this.dispose();&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MtSAYBUTEemIe6OhVnSywA" name="jButton2ActionPerformed" specification="_MtRZUBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton2ActionPerformed&#xD;
    close = false;&#xD;
    Step3_2 s = new Step3_2(imp, ia, darkbg, bm);&#xD;
    this.dispose();&#xD;
    System.out.println();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MtSncRUTEemIe6OhVnSywA" name="jSlider2StateChanged" specification="_MtSAYRUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jSlider2StateChanged&#xD;
    localselectbands();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MtTOgRUTEemIe6OhVnSywA" name="jSlider1StateChanged" specification="_MtSnchUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jSlider1StateChanged&#xD;
    localselectbands();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MtT1kRUTEemIe6OhVnSywA" name="jSlider3StateChanged" specification="_MtTOghUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jSlider3StateChanged&#xD;
    localselectbands();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MtUcoRUTEemIe6OhVnSywA" name="jSlider4StateChanged" specification="_MtT1khUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jSlider4StateChanged&#xD;
    localselectbands();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MtVDsRUTEemIe6OhVnSywA" name="jSlider5StateChanged" specification="_MtUcohUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jSlider5StateChanged&#xD;
    localselectbands();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MtVqwRUTEemIe6OhVnSywA" name="jSlider6StateChanged" specification="_MtVDshUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jSlider6StateChanged&#xD;
    localselectbands();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MtWR0hUTEemIe6OhVnSywA" name="jSlider7StateChanged" specification="_MtWR0BUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jSlider7StateChanged&#xD;
    localselectbands();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MtW44hUTEemIe6OhVnSywA" name="jSlider8StateChanged" specification="_MtW44BUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jSlider8StateChanged&#xD;
    localselectbands();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MtXf8hUTEemIe6OhVnSywA" name="jSlider9StateChanged" specification="_MtXf8BUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jSlider9StateChanged&#xD;
    localselectbands();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MtYHARUTEemIe6OhVnSywA" name="jSlider10StateChanged" specification="_MtXf8xUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jSlider10StateChanged&#xD;
    localselectbands();&#xD;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Ms-eYBUTEemIe6OhVnSywA" name="Step3_1" visibility="public" method="_MtATkRUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MtATkBUTEemIe6OhVnSywA" name="imp"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MtA6oBUTEemIe6OhVnSywA" name="Step3_1" visibility="public" method="_MtDW4hUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MtCv0RUTEemIe6OhVnSywA" name="imp"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MtDW4BUTEemIe6OhVnSywA" name="aThis" type="_MhQ9oRUTEemIe6OhVnSywA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MtDW4RUTEemIe6OhVnSywA" name="darkbg">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MtD98BUTEemIe6OhVnSywA" name="initiatenecessaryscrollbars" visibility="private" method="_MtFMEhUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MtD98RUTEemIe6OhVnSywA" name="scrollbars">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MtD98hUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MtElABUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MtElARUTEemIe6OhVnSywA" name="labels">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MtElAhUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MtElAxUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MtFMEBUTEemIe6OhVnSywA" name="n">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MtFMERUTEemIe6OhVnSywA" name="tolerance">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MtFzIBUTEemIe6OhVnSywA" name="gettolerances" visibility="private" method="_MtGaNBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MtFzIRUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MtFzIhUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MtFzIxUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MtGaMBUTEemIe6OhVnSywA" name="scrollbars">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MtGaMRUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MtGaMhUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MtGaMxUTEemIe6OhVnSywA" name="n">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MtHBQBUTEemIe6OhVnSywA" name="localselectbands" visibility="private" method="_MtHBQRUTEemIe6OhVnSywA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MtHoUBUTEemIe6OhVnSywA" name="lineintersectionroi" visibility="private" method="_MtIPYRUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MtHoURUTEemIe6OhVnSywA" direction="return"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MtHoUhUTEemIe6OhVnSywA" name="r"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MtIPYBUTEemIe6OhVnSywA" name="l"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MtIPYhUTEemIe6OhVnSywA" name="higherthantolerance" visibility="private" method="_MtJdhBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MtIPYxUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MtI2cBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MtI2cRUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MtI2chUTEemIe6OhVnSywA" name="v">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MtI2cxUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MtI2dBUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MtJdgBUTEemIe6OhVnSywA" name="p">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MtJdgRUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MtJdghUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MtJdgxUTEemIe6OhVnSywA" name="tolerance">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MtKEkBUTEemIe6OhVnSywA" name="movingaveragefilter" visibility="private" method="_MtKroxUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MtKEkRUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MtKEkhUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MtKEkxUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MtKElBUTEemIe6OhVnSywA" name="v">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MtKroBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MtKroRUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MtKrohUTEemIe6OhVnSywA" name="avgpoints">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MtLSsBUTEemIe6OhVnSywA" name="higherthanvalue" visibility="private" method="_MtMg0RUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MtLSsRUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MtLSshUTEemIe6OhVnSywA" name="v">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MtL5wBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MtL5wRUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MtL5whUTEemIe6OhVnSywA" name="value">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MtMg0BUTEemIe6OhVnSywA" name="from_end">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MtMg0hUTEemIe6OhVnSywA" name="removeOverlay" visibility="private" method="_MtNH4RUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MtNH4BUTEemIe6OhVnSywA" name="imp"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MtNH4hUTEemIe6OhVnSywA" name="setOverlay" visibility="private" method="_MtNu8hUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MtNu8BUTEemIe6OhVnSywA" name="imp"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MtNu8RUTEemIe6OhVnSywA" name="overlay"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MtOWABUTEemIe6OhVnSywA" name="getBm" visibility="public" method="_MtOWAhUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MtOWARUTEemIe6OhVnSywA" type="_MEgJIBUTEemIe6OhVnSywA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MtOWAxUTEemIe6OhVnSywA" name="initComponents" visibility="private" method="_MtPkIBUTEemIe6OhVnSywA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MtPkIRUTEemIe6OhVnSywA" name="formWindowClosed" visibility="private" method="_MtQLMRUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MtQLMBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MtQyQBUTEemIe6OhVnSywA" name="jbBackActionPerformed" visibility="private" method="_MtQyQhUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MtQyQRUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MtRZUBUTEemIe6OhVnSywA" name="jButton2ActionPerformed" visibility="private" method="_MtSAYBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MtRZURUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MtSAYRUTEemIe6OhVnSywA" name="jSlider2StateChanged" visibility="private" method="_MtSncRUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MtSncBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MtSnchUTEemIe6OhVnSywA" name="jSlider1StateChanged" visibility="private" method="_MtTOgRUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MtTOgBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MtTOghUTEemIe6OhVnSywA" name="jSlider3StateChanged" visibility="private" method="_MtT1kRUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MtT1kBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MtT1khUTEemIe6OhVnSywA" name="jSlider4StateChanged" visibility="private" method="_MtUcoRUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MtUcoBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MtUcohUTEemIe6OhVnSywA" name="jSlider5StateChanged" visibility="private" method="_MtVDsRUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MtVDsBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MtVDshUTEemIe6OhVnSywA" name="jSlider6StateChanged" visibility="private" method="_MtVqwRUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MtVqwBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MtWR0BUTEemIe6OhVnSywA" name="jSlider7StateChanged" visibility="private" method="_MtWR0hUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MtWR0RUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MtW44BUTEemIe6OhVnSywA" name="jSlider8StateChanged" visibility="private" method="_MtW44hUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MtW44RUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MtXf8BUTEemIe6OhVnSywA" name="jSlider9StateChanged" visibility="private" method="_MtXf8hUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MtXf8RUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MtXf8xUTEemIe6OhVnSywA" name="jSlider10StateChanged" visibility="private" method="_MtYHARUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MtYHABUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_MtmJcBUTEemIe6OhVnSywA" name="Step1_4" visibility="public">
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MtmwgRUTEemIe6OhVnSywA" name="close" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MtmwghUTEemIe6OhVnSywA" name="defaultValue">
                    <language>JAVA</language>
                    <body>true</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MtnXkBUTEemIe6OhVnSywA" name="imp" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MtnXkRUTEemIe6OhVnSywA" name="ia" visibility="private" type="_MhQ9oRUTEemIe6OhVnSywA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MuLYQBUTEemIe6OhVnSywA" name="jButton1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MuNNcBUTEemIe6OhVnSywA" name="jButton2" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MuObkBUTEemIe6OhVnSywA" name="jButton3" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MuPCoBUTEemIe6OhVnSywA" name="jButton4" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MuPpsBUTEemIe6OhVnSywA" name="jButton5" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MuPpsRUTEemIe6OhVnSywA" name="jButton7" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MuQQwBUTEemIe6OhVnSywA" name="jButton8" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MuQQwRUTEemIe6OhVnSywA" name="jButton9" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MuQ30BUTEemIe6OhVnSywA" name="jLabel1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MuQ30RUTEemIe6OhVnSywA" name="jLabel2" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MuQ30hUTEemIe6OhVnSywA" name="jLabel3" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MuRe4BUTEemIe6OhVnSywA" name="jLabel4" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MuRe4RUTEemIe6OhVnSywA" name="jLabel5" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MuRe4hUTEemIe6OhVnSywA" name="jLabel6" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MuSF8BUTEemIe6OhVnSywA" name="jLabel7" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MuSF8RUTEemIe6OhVnSywA" name="jLabel8" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MuSF8hUTEemIe6OhVnSywA" name="jPanel1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MuStABUTEemIe6OhVnSywA" name="jPanel2" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MuStARUTEemIe6OhVnSywA" name="jPanel3" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MuTUEBUTEemIe6OhVnSywA" name="jPanel4" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MuUiMBUTEemIe6OhVnSywA" name="jPanel5" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MuVJQBUTEemIe6OhVnSywA" name="jScrollPane1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MuW-cBUTEemIe6OhVnSywA" name="jTextArea1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MuYMkBUTEemIe6OhVnSywA" name="jbBack" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MuZasBUTEemIe6OhVnSywA" name="jbInvert" visibility="private" isUnique="false"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MtpMwhUTEemIe6OhVnSywA" name="Step1_4" specification="_MtnXkhUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    super();&#xD;
    initComponents();&#xD;
    this.imp = imp;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MtrpAhUTEemIe6OhVnSywA" name="Step1_4" specification="_Mtpz0BUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    super();&#xD;
    initComponents();&#xD;
    this.imp = imp;&#xD;
    this.ia = aThis;&#xD;
    Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();&#xD;
    double width = screenSize.getWidth();&#xD;
    setVisible(true);&#xD;
    setLocation((int) width - 515, 0);&#xD;
    imp.getWindow().setAlwaysOnTop(true);&#xD;
    setAlwaysOnTop(true);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MtsQEBUTEemIe6OhVnSywA" name="initComponents" specification="_MtrpAxUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    jPanel4 = new javax.swing.JPanel();&#xD;
    jButton2 = new javax.swing.JButton();&#xD;
    jbBack = new javax.swing.JButton();&#xD;
    jPanel5 = new javax.swing.JPanel();&#xD;
    jLabel1 = new javax.swing.JLabel();&#xD;
    jLabel2 = new javax.swing.JLabel();&#xD;
    jLabel3 = new javax.swing.JLabel();&#xD;
    jLabel4 = new javax.swing.JLabel();&#xD;
    jLabel5 = new javax.swing.JLabel();&#xD;
    jLabel6 = new javax.swing.JLabel();&#xD;
    jLabel7 = new javax.swing.JLabel();&#xD;
    jLabel8 = new javax.swing.JLabel();&#xD;
    jPanel1 = new javax.swing.JPanel();&#xD;
    jPanel2 = new javax.swing.JPanel();&#xD;
    jScrollPane1 = new javax.swing.JScrollPane();&#xD;
    jTextArea1 = new javax.swing.JTextArea();&#xD;
    jPanel3 = new javax.swing.JPanel();&#xD;
    jbInvert = new javax.swing.JButton();&#xD;
    jButton1 = new javax.swing.JButton();&#xD;
    jButton3 = new javax.swing.JButton();&#xD;
    jButton4 = new javax.swing.JButton();&#xD;
    jButton5 = new javax.swing.JButton();&#xD;
    jButton7 = new javax.swing.JButton();&#xD;
    jButton8 = new javax.swing.JButton();&#xD;
    jButton9 = new javax.swing.JButton();&#xD;
    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);&#xD;
    setTitle(&quot;Image analysis&quot;);&#xD;
    setResizable(false);&#xD;
    addWindowListener(new java.awt.event.WindowAdapter() {&#xD;
&#xD;
        public void windowClosed(java.awt.event.WindowEvent evt) {&#xD;
            formWindowClosed(evt);&#xD;
        }&#xD;
    });&#xD;
    jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());&#xD;
    jButton2.setText(&quot;Next>&quot;);&#xD;
    jButton2.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton2ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jbBack.setText(&quot;&lt;Back&quot;);&#xD;
    jbBack.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbBackActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);&#xD;
    jPanel4.setLayout(jPanel4Layout);&#xD;
    jPanel4Layout.setHorizontalGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addComponent(jbBack).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButton2)));&#xD;
    jPanel4Layout.setVerticalGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jButton2).addComponent(jbBack))));&#xD;
    jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Steps&quot;)));&#xD;
    jPanel5.setForeground(new java.awt.Color(0, 17, 255));&#xD;
    jLabel1.setText(&quot;Step 1. Image preprocessing&quot;);&#xD;
    jLabel2.setText(&quot;1.1. Crop&quot;);&#xD;
    jLabel3.setText(&quot;1.2. Invert&quot;);&#xD;
    jLabel4.setText(&quot;1.3. Adjust contrast&quot;);&#xD;
    jLabel5.setForeground(new java.awt.Color(0, 15, 255));&#xD;
    jLabel5.setText(&quot;1.4. Other operations&quot;);&#xD;
    jLabel6.setText(&quot;Step 2. Lane detection&quot;);&#xD;
    jLabel7.setText(&quot;Step 3. Normalisation&quot;);&#xD;
    jLabel8.setText(&quot;Step 4. Band detection&quot;);&#xD;
    javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);&#xD;
    jPanel5.setLayout(jPanel5Layout);&#xD;
    jPanel5Layout.setHorizontalGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel5Layout.createSequentialGroup().addContainerGap().addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel1).addGroup(jPanel5Layout.createSequentialGroup().addGap(12, 12, 12).addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel3).addComponent(jLabel2).addComponent(jLabel4).addComponent(jLabel5))).addComponent(jLabel6).addComponent(jLabel7).addComponent(jLabel8)).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jPanel5Layout.setVerticalGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel5Layout.createSequentialGroup().addContainerGap().addComponent(jLabel1).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel2).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel3).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel4).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel5).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel6).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel7).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel8).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Help&quot;));&#xD;
    jTextArea1.setEditable(false);&#xD;
    jTextArea1.setColumns(20);&#xD;
    jTextArea1.setRows(5);&#xD;
    jTextArea1.setText(&quot;In this step, you can edit the\nimage using the above buttons.&quot;);&#xD;
    jScrollPane1.setViewportView(jTextArea1);&#xD;
    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);&#xD;
    jPanel2.setLayout(jPanel2Layout);&#xD;
    jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING));&#xD;
    jPanel2Layout.setVerticalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE));&#xD;
    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);&#xD;
    jPanel1.setLayout(jPanel1Layout);&#xD;
    jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));&#xD;
    jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup().addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)));&#xD;
    jPanel3.setBorder(null);&#xD;
    jbInvert.setText(&quot;Flip horizontally&quot;);&#xD;
    jbInvert.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbInvertActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jButton1.setText(&quot;Flip vertically&quot;);&#xD;
    jButton1.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton1ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jButton3.setText(&quot;Rotate 90Âº left&quot;);&#xD;
    jButton3.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton3ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jButton4.setText(&quot;Rotate 90Âº right&quot;);&#xD;
    jButton4.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton4ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jButton5.setText(&quot;Rotate&quot;);&#xD;
    jButton5.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton5ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jButton7.setText(&quot;Gamma correction&quot;);&#xD;
    jButton7.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton7ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jButton8.setText(&quot;Background removal&quot;);&#xD;
    jButton8.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton8ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jButton9.setText(&quot;Filtering&quot;);&#xD;
    jButton9.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton9ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);&#xD;
    jPanel3.setLayout(jPanel3Layout);&#xD;
    jPanel3Layout.setHorizontalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jbInvert, javax.swing.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE).addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jButton9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));&#xD;
    jPanel3Layout.setVerticalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel3Layout.createSequentialGroup().addComponent(jbInvert).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButton1).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButton3).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButton4).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButton5).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButton7).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButton8).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jButton9).addContainerGap()));&#xD;
    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());&#xD;
    getContentPane().setLayout(layout);&#xD;
    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(layout.createSequentialGroup().addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))));&#xD;
    layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(layout.createSequentialGroup().addContainerGap().addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)));&#xD;
    pack();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mtv6cBUTEemIe6OhVnSywA" name="jbInvertActionPerformed" specification="_MtuFQBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jbInvertActionPerformed&#xD;
    IJ.run(imp, &quot;Flip Horizontally&quot;, &quot;&quot;);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MtyWsRUTEemIe6OhVnSywA" name="formWindowClosed" specification="_MtxIkBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_formWindowClosed&#xD;
    try {&#xD;
        if (close) {&#xD;
            ia.saveUnfinishedExperiment(this, 3);&#xD;
            close = false;&#xD;
        } else {&#xD;
        }&#xD;
    } catch (IOException ex) {&#xD;
        Logger.getLogger(Step1_4.class.getName()).log(Level.SEVERE, null, ex);&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mt0y8BUTEemIe6OhVnSywA" name="jbBackActionPerformed" specification="_Mty9wBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jbBackActionPerformed&#xD;
    close = false;&#xD;
    this.dispose();&#xD;
    step1_3 s = new step1_3(imp, ia);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mt32QBUTEemIe6OhVnSywA" name="jButton2ActionPerformed" specification="_Mt2BEBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton2ActionPerformed&#xD;
    close = false;&#xD;
    this.dispose();&#xD;
    step2_1 s = new step2_1(imp, ia);&#xD;
    System.out.println();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mt65kBUTEemIe6OhVnSywA" name="jButton1ActionPerformed" specification="_Mt5EYBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton1ActionPerformed&#xD;
    IJ.run(imp, &quot;Flip Vertically&quot;, &quot;&quot;);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mt8uwBUTEemIe6OhVnSywA" name="jButton3ActionPerformed" specification="_Mt7goBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton3ActionPerformed&#xD;
    IJ.run(imp, &quot;Rotate 90 Degrees Left&quot;, &quot;&quot;);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mt_yEBUTEemIe6OhVnSywA" name="jButton4ActionPerformed" specification="_Mt984BUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton4ActionPerformed&#xD;
    IJ.run(imp, &quot;Rotate 90 Degrees Right&quot;, &quot;&quot;);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MuC1YBUTEemIe6OhVnSywA" name="jButton5ActionPerformed" specification="_MuBAMBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton5ActionPerformed&#xD;
    IJ.run(imp, &quot;Rotate... &quot;, &quot;&quot;);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MuF4sBUTEemIe6OhVnSywA" name="jButton7ActionPerformed" specification="_MuEqkBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton7ActionPerformed&#xD;
    this.setAlwaysOnTop(false);&#xD;
    imp.getWindow().setAlwaysOnTop(false);&#xD;
    IJ.run(&quot;Gamma...&quot;, &quot;&quot;);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MuHG0BUTEemIe6OhVnSywA" name="jButton8ActionPerformed" specification="_MuF4sRUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton8ActionPerformed&#xD;
    IJ.run(&quot;Subtract Background...&quot;, &quot;&quot;);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MuKxMBUTEemIe6OhVnSywA" name="jButton9ActionPerformed" specification="_MuI8ABUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton9ActionPerformed&#xD;
    this.setAlwaysOnTop(false);&#xD;
    imp.getWindow().setAlwaysOnTop(false);&#xD;
    Filters f = new Filters();&#xD;
    PlugInFilterRunner pfr = new PlugInFilterRunner(f, &quot;Filters&quot;, &quot;&quot;);&#xD;
//        Bilateral_Filter_Instant bfi = new Bilateral_Filter_Instant();&#xD;
//        bfi.run(&quot;&quot;);&#xD;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MtnXkhUTEemIe6OhVnSywA" name="Step1_4" visibility="public" method="_MtpMwhUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MtpMwBUTEemIe6OhVnSywA" name="modal">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MtpMwRUTEemIe6OhVnSywA" name="imp"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Mtpz0BUTEemIe6OhVnSywA" name="Step1_4" visibility="public" method="_MtrpAhUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MtrpABUTEemIe6OhVnSywA" name="imp"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MtrpARUTEemIe6OhVnSywA" name="aThis" type="_MhQ9oRUTEemIe6OhVnSywA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MtrpAxUTEemIe6OhVnSywA" name="initComponents" visibility="private" method="_MtsQEBUTEemIe6OhVnSywA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MtuFQBUTEemIe6OhVnSywA" name="jbInvertActionPerformed" visibility="private" method="_Mtv6cBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MtvTYBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MtxIkBUTEemIe6OhVnSywA" name="formWindowClosed" visibility="private" method="_MtyWsRUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MtyWsBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Mty9wBUTEemIe6OhVnSywA" name="jbBackActionPerformed" visibility="private" method="_Mt0y8BUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mt0L4BUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Mt2BEBUTEemIe6OhVnSywA" name="jButton2ActionPerformed" visibility="private" method="_Mt32QBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mt3PMBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Mt5EYBUTEemIe6OhVnSywA" name="jButton1ActionPerformed" visibility="private" method="_Mt65kBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mt6SgBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Mt7goBUTEemIe6OhVnSywA" name="jButton3ActionPerformed" visibility="private" method="_Mt8uwBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mt8HsBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Mt984BUTEemIe6OhVnSywA" name="jButton4ActionPerformed" visibility="private" method="_Mt_yEBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mt_LABUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MuBAMBUTEemIe6OhVnSywA" name="jButton5ActionPerformed" visibility="private" method="_MuC1YBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MuCOUBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MuEqkBUTEemIe6OhVnSywA" name="jButton7ActionPerformed" visibility="private" method="_MuF4sBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MuFRoBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MuF4sRUTEemIe6OhVnSywA" name="jButton8ActionPerformed" visibility="private" method="_MuHG0BUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MuGfwBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MuI8ABUTEemIe6OhVnSywA" name="jButton9ActionPerformed" visibility="private" method="_MuKxMBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MuKKIBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_MugIYBUTEemIe6OhVnSywA" name="Step4_3" visibility="public">
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Muh9kBUTEemIe6OhVnSywA" name="close" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MujLsBUTEemIe6OhVnSywA" name="defaultValue">
                    <language>JAVA</language>
                    <body>true</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MujywBUTEemIe6OhVnSywA" name="imp" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MulA4BUTEemIe6OhVnSywA" name="ia" visibility="private" type="_MhQ9oRUTEemIe6OhVnSywA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MumPABUTEemIe6OhVnSywA" name="bm" visibility="private" type="_MEgJIBUTEemIe6OhVnSywA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MundIBUTEemIe6OhVnSywA" name="darkbg" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MvJBkBUTEemIe6OhVnSywA" name="buttonGroup1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MvKPsBUTEemIe6OhVnSywA" name="jButton1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MvMr8BUTEemIe6OhVnSywA" name="jButton2" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MvN6EBUTEemIe6OhVnSywA" name="jButton3" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MvPvQBUTEemIe6OhVnSywA" name="jButton4" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MvQWUBUTEemIe6OhVnSywA" name="jButton5" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MvQWURUTEemIe6OhVnSywA" name="jButton6" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MvQ9YBUTEemIe6OhVnSywA" name="jButton7" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MvQ9YRUTEemIe6OhVnSywA" name="jButton8" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MvQ9YhUTEemIe6OhVnSywA" name="jButton9" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MvRkcBUTEemIe6OhVnSywA" name="jCheckBox1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MvRkcRUTEemIe6OhVnSywA" name="jComboBox1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MvRkchUTEemIe6OhVnSywA" name="jLabel1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MvSLgBUTEemIe6OhVnSywA" name="jLabel2" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MvSLgRUTEemIe6OhVnSywA" name="jLabel3" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MvSLghUTEemIe6OhVnSywA" name="jLabel4" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MvSLgxUTEemIe6OhVnSywA" name="jLabel5" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MvSykBUTEemIe6OhVnSywA" name="jLabel6" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MvSykRUTEemIe6OhVnSywA" name="jLabel7" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MvUAsBUTEemIe6OhVnSywA" name="jLabel8" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MvUnwBUTEemIe6OhVnSywA" name="jPanel1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MvV14BUTEemIe6OhVnSywA" name="jPanel2" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MvXEABUTEemIe6OhVnSywA" name="jPanel3" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MvYSIBUTEemIe6OhVnSywA" name="jPanel4" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MvY5MBUTEemIe6OhVnSywA" name="jPanel5" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MvaHUBUTEemIe6OhVnSywA" name="jPanel6" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MvbVcBUTEemIe6OhVnSywA" name="jPanel7" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MvdKoBUTEemIe6OhVnSywA" name="jScrollPane1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MvdxsBUTEemIe6OhVnSywA" name="jTextArea1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MveYwBUTEemIe6OhVnSywA" name="jToolBar1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mvfm4BUTEemIe6OhVnSywA" name="jbBack" visibility="private" isUnique="false"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mup5YRUTEemIe6OhVnSywA" name="Step4_3" specification="_MuoEMBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    super();&#xD;
    initComponents();&#xD;
    this.imp = imp;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MutjwBUTEemIe6OhVnSywA" name="Step4_3" specification="_Mup5YhUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    super();&#xD;
    initComponents();&#xD;
    this.imp = imp;&#xD;
    this.ia = aThis;&#xD;
    this.darkbg = darkbg;&#xD;
    if (bm == null) {&#xD;
        this.bm = new BandManager(ia.m);&#xD;
        this.bm.setbgcheckboxstate(darkbg);&#xD;
        //        bm.auto_detect();&#xD;
        this.bm.setVisible(false);&#xD;
    } else {&#xD;
        this.bm = bm;&#xD;
    }&#xD;
    IJ.setTool(&quot;point&quot;);&#xD;
    this.bm.updateShowAll();&#xD;
    Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();&#xD;
    double width = screenSize.getWidth();&#xD;
    setVisible(true);&#xD;
    setLocation((int) width - 515, 0);&#xD;
    imp.getWindow().setAlwaysOnTop(true);&#xD;
    setAlwaysOnTop(true);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MuwAABUTEemIe6OhVnSywA" name="getBm" specification="_Muux4BUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    return bm;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MuycQBUTEemIe6OhVnSywA" name="initComponents" specification="_MuxOIBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    buttonGroup1 = new javax.swing.ButtonGroup();&#xD;
    jPanel4 = new javax.swing.JPanel();&#xD;
    jButton2 = new javax.swing.JButton();&#xD;
    jbBack = new javax.swing.JButton();&#xD;
    jPanel5 = new javax.swing.JPanel();&#xD;
    jLabel1 = new javax.swing.JLabel();&#xD;
    jLabel6 = new javax.swing.JLabel();&#xD;
    jLabel8 = new javax.swing.JLabel();&#xD;
    jLabel7 = new javax.swing.JLabel();&#xD;
    jLabel2 = new javax.swing.JLabel();&#xD;
    jLabel3 = new javax.swing.JLabel();&#xD;
    jLabel4 = new javax.swing.JLabel();&#xD;
    jPanel1 = new javax.swing.JPanel();&#xD;
    jPanel2 = new javax.swing.JPanel();&#xD;
    jScrollPane1 = new javax.swing.JScrollPane();&#xD;
    jTextArea1 = new javax.swing.JTextArea();&#xD;
    jPanel3 = new javax.swing.JPanel();&#xD;
    jPanel7 = new javax.swing.JPanel();&#xD;
    jToolBar1 = new javax.swing.JToolBar();&#xD;
    jButton4 = new javax.swing.JButton();&#xD;
    jButton5 = new javax.swing.JButton();&#xD;
    jButton7 = new javax.swing.JButton();&#xD;
    jButton6 = new javax.swing.JButton();&#xD;
    jPanel6 = new javax.swing.JPanel();&#xD;
    jButton1 = new javax.swing.JButton();&#xD;
    jButton3 = new javax.swing.JButton();&#xD;
    jButton8 = new javax.swing.JButton();&#xD;
    jButton9 = new javax.swing.JButton();&#xD;
    jLabel5 = new javax.swing.JLabel();&#xD;
    jComboBox1 = new javax.swing.JComboBox();&#xD;
    jCheckBox1 = new javax.swing.JCheckBox();&#xD;
    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);&#xD;
    setTitle(&quot;Image analysis&quot;);&#xD;
    setResizable(false);&#xD;
    addWindowListener(new java.awt.event.WindowAdapter() {&#xD;
&#xD;
        public void windowClosed(java.awt.event.WindowEvent evt) {&#xD;
            formWindowClosed(evt);&#xD;
        }&#xD;
    });&#xD;
    jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());&#xD;
    jButton2.setText(&quot;Finish&quot;);&#xD;
    jButton2.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton2ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jbBack.setText(&quot;Cancel&quot;);&#xD;
    jbBack.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbBackActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);&#xD;
    jPanel4.setLayout(jPanel4Layout);&#xD;
    jPanel4Layout.setHorizontalGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addComponent(jbBack).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButton2)));&#xD;
    jPanel4Layout.setVerticalGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jButton2).addComponent(jbBack))));&#xD;
    jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Steps&quot;)));&#xD;
    jPanel5.setForeground(new java.awt.Color(0, 17, 255));&#xD;
    jLabel1.setText(&quot;Step 1. Image preprocessing&quot;);&#xD;
    jLabel6.setText(&quot;Step 2. Lane detection&quot;);&#xD;
    jLabel8.setText(&quot;Step 3. Normalisation&quot;);&#xD;
    jLabel7.setText(&quot;Step 4. Band detection&quot;);&#xD;
    jLabel2.setText(&quot;4.1. Global threshold&quot;);&#xD;
    jLabel3.setText(&quot;4.2. Lane threshold&quot;);&#xD;
    jLabel4.setForeground(new java.awt.Color(0, 15, 255));&#xD;
    jLabel4.setText(&quot;4.3. Band picking&quot;);&#xD;
    javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);&#xD;
    jPanel5.setLayout(jPanel5Layout);&#xD;
    jPanel5Layout.setHorizontalGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel5Layout.createSequentialGroup().addContainerGap().addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel1).addComponent(jLabel6).addComponent(jLabel7).addComponent(jLabel8).addGroup(jPanel5Layout.createSequentialGroup().addGap(12, 12, 12).addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel3).addComponent(jLabel2).addComponent(jLabel4)))).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jPanel5Layout.setVerticalGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel5Layout.createSequentialGroup().addContainerGap().addComponent(jLabel1).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel6).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel8).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel7).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel2).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel3).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel4).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Help&quot;));&#xD;
    jTextArea1.setEditable(false);&#xD;
    jTextArea1.setColumns(20);&#xD;
    jTextArea1.setRows(5);&#xD;
    jTextArea1.setText(&quot;In this step, you can manually\npick the bands of the non-marker\nlanes of the image. \nShortcuts are indicated between\nbrackets. &quot;);&#xD;
    jScrollPane1.setViewportView(jTextArea1);&#xD;
    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);&#xD;
    jPanel2.setLayout(jPanel2Layout);&#xD;
    jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE));&#xD;
    jPanel2Layout.setVerticalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE));&#xD;
    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);&#xD;
    jPanel1.setLayout(jPanel1Layout);&#xD;
    jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));&#xD;
    jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup().addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)));&#xD;
    javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);&#xD;
    jPanel3.setLayout(jPanel3Layout);&#xD;
    jPanel3Layout.setHorizontalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 0, Short.MAX_VALUE));&#xD;
    jPanel3Layout.setVerticalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 353, Short.MAX_VALUE));&#xD;
    jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Image tools&quot;));&#xD;
    jToolBar1.setRollover(true);&#xD;
    // NOI18N&#xD;
    jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/GelJImages/point.png&quot;)));&#xD;
    jButton4.setToolTipText(&quot;Point tool (use it to select bands)&quot;);&#xD;
    jButton4.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton4ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar1.add(jButton4);&#xD;
    // NOI18N&#xD;
    jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/images/zoom_in.png&quot;)));&#xD;
    jButton5.setToolTipText(&quot;Zoom In&quot;);&#xD;
    jButton5.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton5ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar1.add(jButton5);&#xD;
    // NOI18N&#xD;
    jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/images/zoom_out.png&quot;)));&#xD;
    jButton7.setToolTipText(&quot;Zoom out&quot;);&#xD;
    jButton7.setFocusable(false);&#xD;
    jButton7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);&#xD;
    jButton7.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);&#xD;
    jButton7.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton7ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar1.add(jButton7);&#xD;
    // NOI18N&#xD;
    jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/images/hand.png&quot;)));&#xD;
    jButton6.setToolTipText(&quot;Hand tool&quot;);&#xD;
    jButton6.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton6ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar1.add(jButton6);&#xD;
    javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);&#xD;
    jPanel7.setLayout(jPanel7Layout);&#xD;
    jPanel7Layout.setHorizontalGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));&#xD;
    jPanel7Layout.setVerticalGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel7Layout.createSequentialGroup().addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Band tools&quot;));&#xD;
    jButton1.setText(&quot;Add band [a]&quot;);&#xD;
    jButton1.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton1ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jButton3.setText(&quot;Delete band [del]&quot;);&#xD;
    jButton3.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton3ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jButton8.setText(&quot;Undo [Ctrl + z]&quot;);&#xD;
    jButton8.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton8ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jButton9.setText(&quot;Redo [r]&quot;);&#xD;
    jButton9.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton9ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jLabel5.setText(&quot;Colour:&quot;);&#xD;
    jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { &quot;blue&quot;, &quot;red&quot;, &quot;green&quot;, &quot;magenta&quot;, &quot;cyan&quot;, &quot;yellow&quot;, &quot;orange&quot; }));&#xD;
    jComboBox1.addItemListener(new java.awt.event.ItemListener() {&#xD;
&#xD;
        public void itemStateChanged(java.awt.event.ItemEvent evt) {&#xD;
            jComboBox1ItemStateChanged(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);&#xD;
    jPanel6.setLayout(jPanel6Layout);&#xD;
    jPanel6Layout.setHorizontalGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(jPanel6Layout.createSequentialGroup().addComponent(jButton8).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButton9, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)).addGroup(jPanel6Layout.createSequentialGroup().addComponent(jLabel5).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jPanel6Layout.setVerticalGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel6Layout.createSequentialGroup().addComponent(jButton1).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButton3).addGap(8, 8, 8).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel5)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jButton8).addComponent(jButton9)).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jCheckBox1.setText(&quot;Show histogram&quot;);&#xD;
    jCheckBox1.addChangeListener(new javax.swing.event.ChangeListener() {&#xD;
&#xD;
        public void stateChanged(javax.swing.event.ChangeEvent evt) {&#xD;
            jCheckBox1StateChanged(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());&#xD;
    getContentPane().setLayout(layout);&#xD;
    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(layout.createSequentialGroup().addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false).addComponent(jCheckBox1).addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))));&#xD;
    layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addGroup(layout.createSequentialGroup().addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jCheckBox1))).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)));&#xD;
    pack();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mu2GoBUTEemIe6OhVnSywA" name="formWindowClosed" specification="_Mu0RcBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_formWindowClosed&#xD;
    try {&#xD;
        if (close) {&#xD;
            bm.close();&#xD;
            ia.saveUnfinishedExperiment(this, 8);&#xD;
            close = false;&#xD;
        } else {&#xD;
        }&#xD;
    } catch (IOException ex) {&#xD;
        Logger.getLogger(Step4_3.class.getName()).log(Level.SEVERE, null, ex);&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mu4i4BUTEemIe6OhVnSywA" name="jbBackActionPerformed" specification="_Mu2tsBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jbBackActionPerformed&#xD;
    close = true;&#xD;
    this.dispose();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mu7mMBUTEemIe6OhVnSywA" name="jButton2ActionPerformed" specification="_Mu5xABUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton2ActionPerformed&#xD;
    close = false;&#xD;
    Lane[] stdlanes = getstandardlanes(ia.m.finallanes);&#xD;
    bm.close();&#xD;
    this.dispose();&#xD;
    try {&#xD;
        ia.computemws();&#xD;
        System.out.println();&#xD;
    } catch (UnsupportedEncodingException ex) {&#xD;
        Logger.getLogger(Step4_3.class.getName()).log(Level.SEVERE, null, ex);&#xD;
    } catch (IOException ex) {&#xD;
        Logger.getLogger(Step4_3.class.getName()).log(Level.SEVERE, null, ex);&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mu8NQhUTEemIe6OhVnSywA" name="jButton1ActionPerformed" specification="_Mu8NQBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton1ActionPerformed&#xD;
    this.setAlwaysOnTop(false);&#xD;
    imp.getWindow().setAlwaysOnTop(false);&#xD;
    bm.add_band();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mu80UhUTEemIe6OhVnSywA" name="jButton3ActionPerformed" specification="_Mu80UBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton3ActionPerformed&#xD;
    this.setAlwaysOnTop(false);&#xD;
    imp.getWindow().setAlwaysOnTop(false);&#xD;
    bm.delete(false);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mu9bYhUTEemIe6OhVnSywA" name="jButton4ActionPerformed" specification="_Mu9bYBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton4ActionPerformed&#xD;
    IJ.setTool(&quot;point&quot;);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mu-CcRUTEemIe6OhVnSywA" name="jButton5ActionPerformed" specification="_Mu9bYxUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton5ActionPerformed&#xD;
    IJ.run(&quot;In [+]&quot;, &quot;&quot;);&#xD;
    IJ.setTool(&quot;point&quot;);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mu-pgBUTEemIe6OhVnSywA" name="jButton6ActionPerformed" specification="_Mu-CchUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton6ActionPerformed&#xD;
    IJ.setTool(&quot;hand&quot;);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mu-pgxUTEemIe6OhVnSywA" name="jButton8ActionPerformed" specification="_Mu-pgRUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton8ActionPerformed&#xD;
    this.setAlwaysOnTop(false);&#xD;
    imp.getWindow().setAlwaysOnTop(false);&#xD;
    bm.undo();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MvBFwBUTEemIe6OhVnSywA" name="jButton9ActionPerformed" specification="_MvAesBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton9ActionPerformed&#xD;
    this.setAlwaysOnTop(false);&#xD;
    imp.getWindow().setAlwaysOnTop(false);&#xD;
    bm.redo();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MvEJEBUTEemIe6OhVnSywA" name="jCheckBox1StateChanged" specification="_MvC68BUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jCheckBox1StateChanged&#xD;
    this.setAlwaysOnTop(false);&#xD;
    imp.getWindow().setAlwaysOnTop(false);&#xD;
    bm.activatehistogramdisplay(jCheckBox1.isSelected());&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MvGlUBUTEemIe6OhVnSywA" name="jComboBox1ItemStateChanged" specification="_MvFXMBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jComboBox1ItemStateChanged&#xD;
    int colour = jComboBox1.getSelectedIndex();&#xD;
    Color c;&#xD;
    switch(colour) {&#xD;
        case BLUE:&#xD;
            c = Color.BLUE;&#xD;
            break;&#xD;
        case RED:&#xD;
            c = Color.RED;&#xD;
            break;&#xD;
        case GREEN:&#xD;
            c = Color.GREEN;&#xD;
            break;&#xD;
        case MAGENTA:&#xD;
            c = Color.MAGENTA;&#xD;
            break;&#xD;
        case CYAN:&#xD;
            c = Color.CYAN;&#xD;
            break;&#xD;
        case YELLOW:&#xD;
            c = Color.YELLOW;&#xD;
            break;&#xD;
        case ORANGE:&#xD;
            c = Color.ORANGE;&#xD;
            break;&#xD;
        default:&#xD;
            c = Color.BLUE;&#xD;
            break;&#xD;
    }&#xD;
    bm.change_colour(c);&#xD;
    bm.showAll(0);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MvIagRUTEemIe6OhVnSywA" name="jButton7ActionPerformed" specification="_MvHzcBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton7ActionPerformed&#xD;
    IJ.run(&quot;Out [-]&quot;, &quot;&quot;);&#xD;
    IJ.setTool(&quot;point&quot;);&#xD;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MuoEMBUTEemIe6OhVnSywA" name="Step4_3" visibility="public" method="_Mup5YRUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mup5YBUTEemIe6OhVnSywA" name="imp"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Mup5YhUTEemIe6OhVnSywA" name="Step4_3" visibility="public" method="_MutjwBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MurukBUTEemIe6OhVnSywA" name="imp"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MusVoBUTEemIe6OhVnSywA" name="aThis" type="_MhQ9oRUTEemIe6OhVnSywA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MusVoRUTEemIe6OhVnSywA" name="darkbg">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mus8sBUTEemIe6OhVnSywA" name="bm" type="_MEgJIBUTEemIe6OhVnSywA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Muux4BUTEemIe6OhVnSywA" name="getBm" visibility="public" method="_MuwAABUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MuvY8BUTEemIe6OhVnSywA" type="_MEgJIBUTEemIe6OhVnSywA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MuxOIBUTEemIe6OhVnSywA" name="initComponents" visibility="private" method="_MuycQBUTEemIe6OhVnSywA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Mu0RcBUTEemIe6OhVnSywA" name="formWindowClosed" visibility="private" method="_Mu2GoBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mu1fkBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Mu2tsBUTEemIe6OhVnSywA" name="jbBackActionPerformed" visibility="private" method="_Mu4i4BUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mu370BUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Mu5xABUTEemIe6OhVnSywA" name="jButton2ActionPerformed" visibility="private" method="_Mu7mMBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mu6_IBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Mu8NQBUTEemIe6OhVnSywA" name="jButton1ActionPerformed" visibility="private" method="_Mu8NQhUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mu8NQRUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Mu80UBUTEemIe6OhVnSywA" name="jButton3ActionPerformed" visibility="private" method="_Mu80UhUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mu80URUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Mu9bYBUTEemIe6OhVnSywA" name="jButton4ActionPerformed" visibility="private" method="_Mu9bYhUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mu9bYRUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Mu9bYxUTEemIe6OhVnSywA" name="jButton5ActionPerformed" visibility="private" method="_Mu-CcRUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mu-CcBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Mu-CchUTEemIe6OhVnSywA" name="jButton6ActionPerformed" visibility="private" method="_Mu-pgBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mu-CcxUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Mu-pgRUTEemIe6OhVnSywA" name="jButton8ActionPerformed" visibility="private" method="_Mu-pgxUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mu-pghUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MvAesBUTEemIe6OhVnSywA" name="jButton9ActionPerformed" visibility="private" method="_MvBFwBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MvAesRUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MvC68BUTEemIe6OhVnSywA" name="jCheckBox1StateChanged" visibility="private" method="_MvEJEBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MvDiABUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MvFXMBUTEemIe6OhVnSywA" name="jComboBox1ItemStateChanged" visibility="private" method="_MvGlUBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MvF-QBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MvHzcBUTEemIe6OhVnSywA" name="jButton7ActionPerformed" visibility="private" method="_MvIagRUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MvIagBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
              </packagedElement>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_MvhcEBUTEemIe6OhVnSywA" name="gui">
              <packagedElement xmi:type="uml:Class" xmi:id="_Mvj4UBUTEemIe6OhVnSywA" name="BandManagerMarkerCanvas" visibility="public">
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mvp-8BUTEemIe6OhVnSywA" name="BandManagerMarkerCanvas" specification="_MvnisRUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    super(imp);&#xD;
    super.removeKeyListener(ij);&#xD;
    super.addKeyListener(this);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MvsbMBUTEemIe6OhVnSywA" name="mousePressed" specification="_MvrNEBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    super.mousePressed(e);&#xD;
    BandManager bm = BandManager.getInstance();&#xD;
    if (bm == null) {&#xD;
        return;&#xD;
    }&#xD;
    bm.delete_temp_band();&#xD;
    int x = (int) imp.getRoi().getFloatPolygon().xpoints[0];&#xD;
    int y = (int) imp.getRoi().getFloatPolygon().ypoints[0];&#xD;
    if (bm.ishistogramcheckboxselected()) {&#xD;
        bm.showprofile(x, y, true);&#xD;
    }&#xD;
    int index = bm.getRoiIndexPos(x, y);&#xD;
    imp.getWindow().toFront();&#xD;
    //int index = bm.getRoiIndexPos(offScreenX(e.getX()), offScreenX(e.getY()));&#xD;
    if (index &lt; 0) {&#xD;
        return;&#xD;
    }&#xD;
    bm.select(imp, index);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MvtCQBUTEemIe6OhVnSywA" name="keyTyped" specification="_MvsbMRUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mvu3cRUTEemIe6OhVnSywA" name="keyPressed" specification="_MvuQYBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    int key = e.getKeyCode();&#xD;
    BandManager bm = BandManager.getInstance();&#xD;
    if (bm == null) {&#xD;
        return;&#xD;
    }&#xD;
    switch(key) {&#xD;
        case KeyEvent.VK_A:&#xD;
            bm.add_band(true);&#xD;
            break;&#xD;
        case KeyEvent.VK_DELETE:&#xD;
            bm.delete(false);&#xD;
            break;&#xD;
        case KeyEvent.VK_P:&#xD;
            IJ.setTool(&quot;point&quot;);&#xD;
            break;&#xD;
        case KeyEvent.VK_Z:&#xD;
            if (e.isControlDown() &amp;&amp; !e.isShiftDown()) {&#xD;
                bm.undo();&#xD;
            } else if (e.isControlDown() &amp;&amp; e.isShiftDown()) {&#xD;
                bm.redo();&#xD;
            } else {&#xD;
                IJ.setTool(&quot;zoom&quot;);&#xD;
            }&#xD;
            break;&#xD;
        case KeyEvent.VK_H:&#xD;
            IJ.setTool(&quot;hand&quot;);&#xD;
            break;&#xD;
        case KeyEvent.VK_U:&#xD;
            bm.undo();&#xD;
            break;&#xD;
        case KeyEvent.VK_R:&#xD;
            bm.redo();&#xD;
            break;&#xD;
        case KeyEvent.VK_C:&#xD;
            bm.pick_colour();&#xD;
            break;&#xD;
        default:&#xD;
            break;&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MvvegRUTEemIe6OhVnSywA" name="keyReleased" specification="_Mvu3chUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MvnisRUTEemIe6OhVnSywA" name="BandManagerMarkerCanvas" visibility="public" method="_Mvp-8BUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MvpX4BUTEemIe6OhVnSywA" name="imp"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MvrNEBUTEemIe6OhVnSywA" name="mousePressed" visibility="public" method="_MvsbMBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mvr0IBUTEemIe6OhVnSywA" name="e"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MvsbMRUTEemIe6OhVnSywA" name="keyTyped" visibility="public" method="_MvtCQBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MvsbMhUTEemIe6OhVnSywA" name="e"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MvuQYBUTEemIe6OhVnSywA" name="keyPressed" visibility="public" method="_Mvu3cRUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mvu3cBUTEemIe6OhVnSywA" name="e"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Mvu3chUTEemIe6OhVnSywA" name="keyReleased" visibility="public" method="_MvvegRUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MvvegBUTEemIe6OhVnSywA" name="e"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_MvwsoBUTEemIe6OhVnSywA" name="BandManagerCanvas" visibility="public">
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mvyh0RUTEemIe6OhVnSywA" name="BandManagerCanvas" specification="_MvxTshUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    super(imp);&#xD;
    super.removeKeyListener(ij);&#xD;
    super.addKeyListener(this);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mvyh1BUTEemIe6OhVnSywA" name="mousePressed" specification="_Mvyh0hUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    super.mousePressed(e);&#xD;
    BandManager bm = BandManager.getInstance();&#xD;
    if (bm == null) {&#xD;
        return;&#xD;
    }&#xD;
    bm.delete_temp_band();&#xD;
    int x = (int) imp.getRoi().getFloatPolygon().xpoints[0];&#xD;
    int y = (int) imp.getRoi().getFloatPolygon().ypoints[0];&#xD;
    if (bm.ishistogramcheckboxselected()) {&#xD;
        bm.showprofile(x, y);&#xD;
    }&#xD;
    int index = bm.getRoiIndexPos(x, y);&#xD;
    imp.getWindow().toFront();&#xD;
    //int index = bm.getRoiIndexPos(offScreenX(e.getX()), offScreenX(e.getY()));&#xD;
    if (index &lt; 0) {&#xD;
        return;&#xD;
    }&#xD;
    bm.select(imp, index);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MvzI4RUTEemIe6OhVnSywA" name="keyTyped" specification="_Mvyh1RUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MvzI5BUTEemIe6OhVnSywA" name="keyPressed" specification="_MvzI4hUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    int key = e.getKeyCode();&#xD;
    BandManager bm = BandManager.getInstance();&#xD;
    if (bm == null) {&#xD;
        return;&#xD;
    }&#xD;
    switch(key) {&#xD;
        case KeyEvent.VK_A:&#xD;
            bm.add_band();&#xD;
            break;&#xD;
        case KeyEvent.VK_DELETE:&#xD;
            bm.delete(false);&#xD;
            break;&#xD;
        case KeyEvent.VK_P:&#xD;
            IJ.setTool(&quot;point&quot;);&#xD;
            break;&#xD;
        case KeyEvent.VK_Z:&#xD;
            if (e.isControlDown() &amp;&amp; !e.isShiftDown()) {&#xD;
                bm.undo();&#xD;
            } else if (e.isControlDown() &amp;&amp; e.isShiftDown()) {&#xD;
                bm.redo();&#xD;
            } else {&#xD;
                IJ.setTool(&quot;zoom&quot;);&#xD;
            }&#xD;
            break;&#xD;
        case KeyEvent.VK_H:&#xD;
            IJ.setTool(&quot;hand&quot;);&#xD;
            break;&#xD;
        case KeyEvent.VK_U:&#xD;
            bm.undo();&#xD;
            break;&#xD;
        case KeyEvent.VK_R:&#xD;
            bm.redo();&#xD;
            break;&#xD;
        case KeyEvent.VK_C:&#xD;
            bm.pick_colour();&#xD;
            break;&#xD;
        default:&#xD;
            break;&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mvzv8RUTEemIe6OhVnSywA" name="keyReleased" specification="_MvzI5RUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MvxTshUTEemIe6OhVnSywA" name="BandManagerCanvas" visibility="public" method="_Mvyh0RUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mvyh0BUTEemIe6OhVnSywA" name="imp"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Mvyh0hUTEemIe6OhVnSywA" name="mousePressed" visibility="public" method="_Mvyh1BUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mvyh0xUTEemIe6OhVnSywA" name="e"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Mvyh1RUTEemIe6OhVnSywA" name="keyTyped" visibility="public" method="_MvzI4RUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MvzI4BUTEemIe6OhVnSywA" name="e"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MvzI4hUTEemIe6OhVnSywA" name="keyPressed" visibility="public" method="_MvzI5BUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MvzI4xUTEemIe6OhVnSywA" name="e"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MvzI5RUTEemIe6OhVnSywA" name="keyReleased" visibility="public" method="_Mvzv8RUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mvzv8BUTEemIe6OhVnSywA" name="e"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_Mv0-EBUTEemIe6OhVnSywA" name="HistogramCanvas" visibility="public">
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mv2zQBUTEemIe6OhVnSywA" name="bm" visibility="private" type="_MEgJIBUTEemIe6OhVnSywA" isUnique="false"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mv7EsBUTEemIe6OhVnSywA" name="HistogramCanvas" specification="_Mv4BYBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    super(imp);&#xD;
    this.bm = bm;&#xD;
    super.removeKeyListener(ij);&#xD;
    super.addKeyListener(this);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mv7rwBUTEemIe6OhVnSywA" name="mousePressed" specification="_Mv7EsRUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    super.mousePressed(e);&#xD;
    bm.setVisible(false);&#xD;
    bm.delete_temp_band();&#xD;
    int y = (int) imp.getRoi().getFloatPolygon().ypoints[0];&#xD;
    bm.add_temp_band(y);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mv7rwxUTEemIe6OhVnSywA" name="keyTyped" specification="_Mv7rwRUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mv8S0hUTEemIe6OhVnSywA" name="keyPressed" specification="_Mv8S0BUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    int key = e.getKeyCode();&#xD;
    BandManager bm = BandManager.getInstance();&#xD;
    if (bm == null) {&#xD;
        return;&#xD;
    }&#xD;
    switch(key) {&#xD;
        case KeyEvent.VK_A:&#xD;
            bm.add_band();&#xD;
            break;&#xD;
        default:&#xD;
            break;&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mv8S1RUTEemIe6OhVnSywA" name="keyReleased" specification="_Mv8S0xUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Mv4BYBUTEemIe6OhVnSywA" name="HistogramCanvas" visibility="public" method="_Mv7EsBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mv52kBUTEemIe6OhVnSywA" name="imp"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mv6doBUTEemIe6OhVnSywA" name="bm" type="_MEgJIBUTEemIe6OhVnSywA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Mv7EsRUTEemIe6OhVnSywA" name="mousePressed" visibility="public" method="_Mv7rwBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mv7EshUTEemIe6OhVnSywA" name="e"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Mv7rwRUTEemIe6OhVnSywA" name="keyTyped" visibility="public" method="_Mv7rwxUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mv7rwhUTEemIe6OhVnSywA" name="e"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Mv8S0BUTEemIe6OhVnSywA" name="keyPressed" visibility="public" method="_Mv8S0hUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mv8S0RUTEemIe6OhVnSywA" name="e"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Mv8S0xUTEemIe6OhVnSywA" name="keyReleased" visibility="public" method="_Mv8S1RUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mv8S1BUTEemIe6OhVnSywA" name="e"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_Mv-IABUTEemIe6OhVnSywA" name="LaneManagerCanvas" visibility="public">
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MwCZcBUTEemIe6OhVnSywA" name="LaneManagerCanvas" specification="_Mv_9MBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    super(imp);&#xD;
    super.removeKeyListener(ij);&#xD;
    super.addKeyListener(this);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MwDnkBUTEemIe6OhVnSywA" name="mousePressed" specification="_MwCZcRUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    super.mousePressed(e);&#xD;
    LaneManager lm = LaneManager.getInstance();&#xD;
    if (lm == null) {&#xD;
        return;&#xD;
    }&#xD;
    int index = lm.getRoiIndexPos(offScreenX(e.getX()), offScreenX(e.getY()));&#xD;
    if (index &lt; 0) {&#xD;
        return;&#xD;
    }&#xD;
    lm.select(imp, index);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MwGD0BUTEemIe6OhVnSywA" name="keyTyped" specification="_MwE1sBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MwIgEBUTEemIe6OhVnSywA" name="keyPressed" specification="_MwGq4BUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    int key = e.getKeyCode();&#xD;
    LaneManager lm = LaneManager.getInstance();&#xD;
    if (lm == null) {&#xD;
        return;&#xD;
    }&#xD;
    if (!e.isControlDown()) {&#xD;
        switch(key) {&#xD;
            case KeyEvent.VK_A:&#xD;
                lm.addRoi(false);&#xD;
                break;&#xD;
            case KeyEvent.VK_DELETE:&#xD;
                lm.delete(false);&#xD;
                break;&#xD;
            case KeyEvent.VK_F:&#xD;
                lm.fix_standard();&#xD;
                break;&#xD;
            default:&#xD;
                break;&#xD;
        }&#xD;
    } else {&#xD;
        switch(key) {&#xD;
            case KeyEvent.VK_Z:&#xD;
                IJ.run(imp, &quot;Undo&quot;, &quot;&quot;);&#xD;
                break;&#xD;
        }&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MwJuMRUTEemIe6OhVnSywA" name="keyReleased" specification="_MwJHIBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Mv_9MBUTEemIe6OhVnSywA" name="LaneManagerCanvas" visibility="public" method="_MwCZcBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MwByYBUTEemIe6OhVnSywA" name="imp"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MwCZcRUTEemIe6OhVnSywA" name="mousePressed" visibility="public" method="_MwDnkBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MwDAgBUTEemIe6OhVnSywA" name="e"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MwE1sBUTEemIe6OhVnSywA" name="keyTyped" visibility="public" method="_MwGD0BUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MwFcwBUTEemIe6OhVnSywA" name="e"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MwGq4BUTEemIe6OhVnSywA" name="keyPressed" visibility="public" method="_MwIgEBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MwH5ABUTEemIe6OhVnSywA" name="e"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MwJHIBUTEemIe6OhVnSywA" name="keyReleased" visibility="public" method="_MwJuMRUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MwJuMBUTEemIe6OhVnSywA" name="e"/>
                </ownedOperation>
              </packagedElement>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_MwKVQBUTEemIe6OhVnSywA" name="LaneCompare">
              <packagedElement xmi:type="uml:Class" xmi:id="_MwLjYBUTEemIe6OhVnSywA" name="EuclideanDistance" visibility="public">
                <generalization xmi:type="uml:Generalization" xmi:id="_MwMKcBUTEemIe6OhVnSywA" general="_MwLjYRUTEemIe6OhVnSywA"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MwPNwBUTEemIe6OhVnSywA" name="Compare2Lanes" specification="_MwMxgBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    double[] x = l1.getProfile();&#xD;
    double[] y = l2.getProfile();&#xD;
    double[] x_minus_y = differencearrays(x, y);&#xD;
    double sum_x_minus_y_x_minus_y = sumArraysquare(x_minus_y);&#xD;
    return (1 - sqrt(sum_x_minus_y_x_minus_y));&#xD;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MwMxgBUTEemIe6OhVnSywA" name="Compare2Lanes" visibility="public" method="_MwPNwBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MwNYkBUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MwN_oBUTEemIe6OhVnSywA" name="l1" type="_MGiwgRUTEemIe6OhVnSywA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MwOmsBUTEemIe6OhVnSywA" name="l2" type="_MGiwgRUTEemIe6OhVnSywA"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_MwLjYRUTEemIe6OhVnSywA" name="LaneComparison" visibility="public" isAbstract="true">
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MwV7cBUTEemIe6OhVnSywA" name="CompareLanes" specification="_MwTfMBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    double[][] res = new double[l.length][l.length];&#xD;
    for (int i = 0; i &lt; l.length; i++) {&#xD;
        for (int j = 0; j &lt; l.length; j++) {&#xD;
            if (i == j) {&#xD;
                res[i][j] = Compare2Lanes(l[i], l[j]);&#xD;
            } else if (j &lt; i) {&#xD;
                res[i][j] = res[j][i];&#xD;
            } else {&#xD;
                res[i][j] = Compare2Lanes(l[i], l[j]);&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    return res;&#xD;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MwRqABUTEemIe6OhVnSywA" name="Compare2Lanes" visibility="public" isAbstract="true">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MwSREBUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MwSRERUTEemIe6OhVnSywA" name="l1" type="_MGiwgRUTEemIe6OhVnSywA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MwS4IBUTEemIe6OhVnSywA" name="l2" type="_MGiwgRUTEemIe6OhVnSywA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MwTfMBUTEemIe6OhVnSywA" name="CompareLanes" visibility="public" method="_MwV7cBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MwTfMRUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MwTfMhUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MwTfMxUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MwUGQBUTEemIe6OhVnSywA" name="l" type="_MGiwgRUTEemIe6OhVnSywA">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MwUtUBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MwVUYBUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_MwYXsBUTEemIe6OhVnSywA" name="CosineCorrelation" visibility="public">
                <generalization xmi:type="uml:Generalization" xmi:id="_MwY-wBUTEemIe6OhVnSywA" general="_MwLjYRUTEemIe6OhVnSywA"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MwbbABUTEemIe6OhVnSywA" name="Compare2Lanes" specification="_MwZl0BUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    double[] x = l1.getProfile();&#xD;
    double[] y = l2.getProfile();&#xD;
    double[] productxy = productarrays(x, y);&#xD;
    double sumproductxy = sumArray(productxy);&#xD;
    double sumx = sumArray(x);&#xD;
    double sumxx = sumArraysquare(x);&#xD;
    double sumxsumx = sumx * sumx;&#xD;
    double sqrt_sumxx = sqrt(sumxx);&#xD;
    double sumy = sumArray(y);&#xD;
    double sumyy = sumArraysquare(y);&#xD;
    double sumysumy = sumy * sumy;&#xD;
    double sqrt_sumyy = sqrt(sumyy);&#xD;
    double cor = sumproductxy / (sqrt_sumxx * sqrt_sumyy);&#xD;
    if (cor &lt; 0) {&#xD;
        return 1;&#xD;
    } else {&#xD;
        // 1 minus cor to obtain the distance from the correlation.&#xD;
        return 1 - cor;&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MwZl0BUTEemIe6OhVnSywA" name="Compare2Lanes" visibility="public" method="_MwbbABUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MwZl0RUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MwaM4BUTEemIe6OhVnSywA" name="l1" type="_MGiwgRUTEemIe6OhVnSywA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mwaz8BUTEemIe6OhVnSywA" name="l2" type="_MGiwgRUTEemIe6OhVnSywA"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_MwdQMBUTEemIe6OhVnSywA" name="Dice" visibility="public">
                <generalization xmi:type="uml:Generalization" xmi:id="_Mwd3QBUTEemIe6OhVnSywA" general="_MwLjYRUTEemIe6OhVnSywA"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MweeUBUTEemIe6OhVnSywA" name="tolerance" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mwg6kBUTEemIe6OhVnSywA" name="Dice" specification="_MwfFYBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    this.tolerance = tolerance;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MwivwBUTEemIe6OhVnSywA" name="setTolerance" specification="_MwiIsBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    this.tolerance = tolerance;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mwkk8BUTEemIe6OhVnSywA" name="Compare2Lanes" specification="_MwivwRUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    double cor;&#xD;
    double[] stdl1 = l1.getStdpositionbands();&#xD;
    double[] stdl2 = l2.getStdpositionbands();&#xD;
    int b1 = stdl1.length;&#xD;
    int b2 = stdl2.length;&#xD;
    int b1b2 = commonbands(stdl1, stdl2, tolerance);&#xD;
    // cor is a value between 0 and 1 that indicates the correlation &#xD;
    // (a value close to 1 means that the 2 lanes are similar, and a &#xD;
    // value close to 0 means that the 2 lanes are different).&#xD;
    // Clustering algorithms works with distance between points&#xD;
    // instead of similarity; therefore, we need to perform the operation&#xD;
    // 1 minus cor to obtain the distance from the correlation.        &#xD;
    cor = ((double) 2 * b1b2) / (b1 + b2);&#xD;
    return 1 - cor;&#xD;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MwfFYBUTEemIe6OhVnSywA" name="Dice" visibility="public" method="_Mwg6kBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MwgTgBUTEemIe6OhVnSywA" name="tolerance">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MwiIsBUTEemIe6OhVnSywA" name="setTolerance" visibility="public" method="_MwivwBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MwiIsRUTEemIe6OhVnSywA" name="tolerance">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MwivwRUTEemIe6OhVnSywA" name="Compare2Lanes" visibility="public" method="_Mwkk8BUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MwivwhUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MwjW0BUTEemIe6OhVnSywA" name="l1" type="_MGiwgRUTEemIe6OhVnSywA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mwj94BUTEemIe6OhVnSywA" name="l2" type="_MGiwgRUTEemIe6OhVnSywA"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_MwmaIBUTEemIe6OhVnSywA" name="ManhattanDistance" visibility="public">
                <generalization xmi:type="uml:Generalization" xmi:id="_MwnBMBUTEemIe6OhVnSywA" general="_MwLjYRUTEemIe6OhVnSywA"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MwpdcBUTEemIe6OhVnSywA" name="Compare2Lanes" specification="_MwnoQBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    double[] x = l1.getProfile();&#xD;
    double[] y = l2.getProfile();&#xD;
    double[] x_minus_y = differencearrays(x, y);&#xD;
    double sum_abs_x_minus_y = sumArrayabs(x_minus_y);&#xD;
    return 1 - sum_abs_x_minus_y;&#xD;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MwnoQBUTEemIe6OhVnSywA" name="Compare2Lanes" visibility="public" method="_MwpdcBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MwnoQRUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MwoPUBUTEemIe6OhVnSywA" name="l1" type="_MGiwgRUTEemIe6OhVnSywA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mwo2YBUTEemIe6OhVnSywA" name="l2" type="_MGiwgRUTEemIe6OhVnSywA"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_Mwr5sBUTEemIe6OhVnSywA" name="OchiaiArrays" visibility="public">
                <generalization xmi:type="uml:Generalization" xmi:id="_MwsgwRUTEemIe6OhVnSywA" general="_MwsgwBUTEemIe6OhVnSywA"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MwtH0BUTEemIe6OhVnSywA" name="tolerance" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MwuV8BUTEemIe6OhVnSywA" name="commonbands" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_Mwu9ABUTEemIe6OhVnSywA" name="defaultValue">
                    <language>JAVA</language>
                    <body>0</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MwvkEBUTEemIe6OhVnSywA" name="totalbands" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MwwLIBUTEemIe6OhVnSywA" name="defaultValue">
                    <language>JAVA</language>
                    <body>0</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MwwyMBUTEemIe6OhVnSywA" name="tb1" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MwxZQBUTEemIe6OhVnSywA" name="defaultValue">
                    <language>JAVA</language>
                    <body>0</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MwxZQRUTEemIe6OhVnSywA" name="tb2" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MwxZQhUTEemIe6OhVnSywA" name="defaultValue">
                    <language>JAVA</language>
                    <body>0</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MwxZQxUTEemIe6OhVnSywA" name="tb1b2" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MwxZRBUTEemIe6OhVnSywA" name="defaultValue">
                    <language>JAVA</language>
                    <body>0</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mwz1gBUTEemIe6OhVnSywA" name="OchiaiArrays" specification="_MwxZRRUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    this.tolerance = tolerance;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mw1qsBUTEemIe6OhVnSywA" name="setTolerance" specification="_Mw0ckBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    this.tolerance = tolerance;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mw240BUTEemIe6OhVnSywA" name="Compare2Lanes" specification="_Mw1qsRUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    tb1 = 0;&#xD;
    tb2 = 0;&#xD;
    tb1b2 = 0;&#xD;
    for (int i = 0; i &lt; l1.size(); i++) {&#xD;
        Compare2Lanes(l1.get(i), l2.get(i));&#xD;
    }&#xD;
    double cor = tb1b2 / sqrt(tb1 * tb2);&#xD;
    return 1 - cor;&#xD;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MwxZRRUTEemIe6OhVnSywA" name="OchiaiArrays" visibility="public" method="_Mwz1gBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MwzOcBUTEemIe6OhVnSywA" name="tolerance">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Mw0ckBUTEemIe6OhVnSywA" name="setTolerance" visibility="public" method="_Mw1qsBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mw1DoBUTEemIe6OhVnSywA" name="tolerance">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Mw1qsRUTEemIe6OhVnSywA" name="Compare2Lanes" visibility="public" method="_Mw240BUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mw2RwBUTEemIe6OhVnSywA" name="l1" type="_MGiwgRUTEemIe6OhVnSywA">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Mw4uABUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Mw5VEBUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mw2RwRUTEemIe6OhVnSywA" name="l2" type="_MGiwgRUTEemIe6OhVnSywA">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Mw5VERUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Mw58IBUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mw4G8BUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_MwsgwBUTEemIe6OhVnSywA" name="LaneComparisonArrays" visibility="public" isAbstract="true">
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MzlcsBUTEemIe6OhVnSywA" name="CompareLanes" specification="_MziZYBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    double[][] res = new double[l.size()][l.size()];&#xD;
    for (int i = 0; i &lt; l.size(); i++) {&#xD;
        for (int j = 0; j &lt; l.size(); j++) {&#xD;
            if (i == j) {&#xD;
                res[i][j] = Compare2Lanes(l.get(i), l.get(j));&#xD;
            } else if (j &lt; i) {&#xD;
                res[i][j] = res[j][i];&#xD;
            } else {&#xD;
                res[i][j] = Compare2Lanes(l.get(i), l.get(j));&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    return res;&#xD;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MzevABUTEemIe6OhVnSywA" name="Compare2Lanes" visibility="public" isAbstract="true">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MzfWEBUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mzf9IBUTEemIe6OhVnSywA" name="l1" type="_MGiwgRUTEemIe6OhVnSywA">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Mzf9IRUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MzgkMBUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MzgkMRUTEemIe6OhVnSywA" name="l2" type="_MGiwgRUTEemIe6OhVnSywA">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MzhLQBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MzhyUBUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MziZYBUTEemIe6OhVnSywA" name="CompareLanes" visibility="public" method="_MzlcsBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MziZYRUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MzjAcBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MzjngBUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MzkOkBUTEemIe6OhVnSywA" name="l">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Mzk1oBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Mzk1oRUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_Mw7xUBUTEemIe6OhVnSywA" name="JaccardArrays" visibility="public">
                <generalization xmi:type="uml:Generalization" xmi:id="_Mw8YYBUTEemIe6OhVnSywA" general="_MwsgwBUTEemIe6OhVnSywA"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mw8_cBUTEemIe6OhVnSywA" name="tolerance" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mw9mgBUTEemIe6OhVnSywA" name="commonbands" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_Mw-0oBUTEemIe6OhVnSywA" name="defaultValue">
                    <language>JAVA</language>
                    <body>0</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mw_bsBUTEemIe6OhVnSywA" name="totalbands" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MxACwBUTEemIe6OhVnSywA" name="defaultValue">
                    <language>JAVA</language>
                    <body>0</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxDGEBUTEemIe6OhVnSywA" name="JaccardArrays" specification="_MxAp0BUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    this.tolerance = tolerance;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxE7QBUTEemIe6OhVnSywA" name="setTolerance" specification="_MxDtIBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    this.tolerance = tolerance;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxGwcBUTEemIe6OhVnSywA" name="Compare2Lanes" specification="_MxE7QRUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    commonbands = 0;&#xD;
    totalbands = 0;&#xD;
    for (int i = 0; i &lt; l1.size(); i++) {&#xD;
        Compare2Lanes(l1.get(i), l2.get(i));&#xD;
    }&#xD;
    double cor = commonbands / totalbands;&#xD;
    return 1 - cor;&#xD;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MxAp0BUTEemIe6OhVnSywA" name="JaccardArrays" visibility="public" method="_MxDGEBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MxCfABUTEemIe6OhVnSywA" name="tolerance">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MxDtIBUTEemIe6OhVnSywA" name="setTolerance" visibility="public" method="_MxE7QBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MxEUMBUTEemIe6OhVnSywA" name="tolerance">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MxE7QRUTEemIe6OhVnSywA" name="Compare2Lanes" visibility="public" method="_MxGwcBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MxFiUBUTEemIe6OhVnSywA" name="l1" type="_MGiwgRUTEemIe6OhVnSywA">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MxIloBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MxJMsBUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MxGJYBUTEemIe6OhVnSywA" name="l2" type="_MGiwgRUTEemIe6OhVnSywA">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MxJMsRUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MxJzwBUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MxH-kBUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_MxLo8BUTEemIe6OhVnSywA" name="Jaccard" visibility="public">
                <generalization xmi:type="uml:Generalization" xmi:id="_MxLo8RUTEemIe6OhVnSywA" general="_MwLjYRUTEemIe6OhVnSywA"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MxMQABUTEemIe6OhVnSywA" name="tolerance" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxPTUBUTEemIe6OhVnSywA" name="Jaccard" specification="_MxNeIBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    this.tolerance = tolerance;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxRIgBUTEemIe6OhVnSywA" name="setTolerance" specification="_MxQhcBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    this.tolerance = tolerance;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxUL0BUTEemIe6OhVnSywA" name="Compare2Lanes" specification="_MxSWoBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    double cor;&#xD;
    double[] stdl1 = l1.getStdpositionbands();&#xD;
    double[] stdl2 = l2.getStdpositionbands();&#xD;
    int b1 = stdl1.length;&#xD;
    int b2 = stdl2.length;&#xD;
    int b1b2 = commonbands(stdl1, stdl2, tolerance);&#xD;
    // cor is a value between 0 and 1 that indicates the correlation &#xD;
    // (a value close to 1 means that the 2 lanes are similar, and a &#xD;
    // value close to 0 means that the 2 lanes are different).&#xD;
    // Clustering algorithms works with distance between points&#xD;
    // instead of similarity; therefore, we need to perform the operation&#xD;
    // 1 minus cor to obtain the distance from the correlation.&#xD;
    cor = ((double) b1b2) / (b1 + b2 - b1b2);&#xD;
    return 1 - cor;&#xD;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MxNeIBUTEemIe6OhVnSywA" name="Jaccard" visibility="public" method="_MxPTUBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MxOsQBUTEemIe6OhVnSywA" name="tolerance">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MxQhcBUTEemIe6OhVnSywA" name="setTolerance" visibility="public" method="_MxRIgBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MxQhcRUTEemIe6OhVnSywA" name="tolerance">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MxSWoBUTEemIe6OhVnSywA" name="Compare2Lanes" visibility="public" method="_MxUL0BUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MxSWoRUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MxS9sBUTEemIe6OhVnSywA" name="l1" type="_MGiwgRUTEemIe6OhVnSywA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MxTkwBUTEemIe6OhVnSywA" name="l2" type="_MGiwgRUTEemIe6OhVnSywA"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_MxWoEBUTEemIe6OhVnSywA" name="Utils" visibility="public" isLeaf="true">
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxX2MxUTEemIe6OhVnSywA" name="commonbands" specification="_MxXPIBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    int commonbands = 0;&#xD;
    double[] lane1 = l1;&#xD;
    double[] lane2 = l2;&#xD;
    PairBoolInt pbi;&#xD;
    for (int i = 0; i &lt; lane1.length; i++) {&#xD;
        pbi = belongswithtolerance(lane1[i], lane2, tolerance);&#xD;
        if (pbi.getBoolPairBoolInt()) {&#xD;
            commonbands++;&#xD;
            lane2 = ArrayUtils.remove(lane2, pbi.getIntPairBoolInt());&#xD;
        }&#xD;
    }&#xD;
    return commonbands;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxcHoBUTEemIe6OhVnSywA" name="belongswithtolerance" specification="_MxYdQBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    PairBoolInt p;&#xD;
    for (int i = 0; i &lt; l.length; i++) {&#xD;
        if (pos - tolerance &lt;= l[i] &amp;&amp; l[i] &lt;= pos + tolerance) {&#xD;
            p = new PairBoolInt(true, i);&#xD;
            return p;&#xD;
        }&#xD;
    }&#xD;
    p = new PairBoolInt(false, 0);&#xD;
    return p;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxfyABUTEemIe6OhVnSywA" name="sumArray" specification="_MxcusBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    double res = 0;&#xD;
    for (int i = 0; i &lt; a.length; i++) {&#xD;
        res = res + a[i];&#xD;
    }&#xD;
    return res;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxhAIxUTEemIe6OhVnSywA" name="sumArraysquare" specification="_MxgZEBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    double res = 0;&#xD;
    for (int i = 0; i &lt; a.length; i++) {&#xD;
        res = res + (a[i] * a[i]);&#xD;
    }&#xD;
    return res;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxhnMRUTEemIe6OhVnSywA" name="sumArrayabs" specification="_MxhAJBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    double res = 0;&#xD;
    for (int i = 0; i &lt; a.length; i++) {&#xD;
        res = res + (abs(a[i]));&#xD;
    }&#xD;
    return res;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxiOQxUTEemIe6OhVnSywA" name="productarrays" specification="_MxhnMhUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    int maxlength;&#xD;
    if (a1.length &lt; a2.length) {&#xD;
        maxlength = a2.length;&#xD;
    } else {&#xD;
        maxlength = a1.length;&#xD;
    }&#xD;
    double[] res = new double[maxlength];&#xD;
    if (a1.length &lt; a2.length) {&#xD;
        for (int i = 0; i &lt; a1.length; i++) {&#xD;
            res[i] = a1[i] * a2[i];&#xD;
        }&#xD;
        System.arraycopy(a2, a1.length, res, a1.length, a2.length - a1.length);&#xD;
    } else {&#xD;
        for (int i = 0; i &lt; a2.length; i++) {&#xD;
            res[i] = a1[i] * a2[i];&#xD;
        }&#xD;
        System.arraycopy(a1, a2.length, res, a2.length, a1.length - a2.length);&#xD;
    /* The above line is equivalent to 
            for(int i=a2.length;i&lt;a1.length; i++){
               res[i]=a1[i];
            }*/&#xD;
    }&#xD;
    return res;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mxi1UhUTEemIe6OhVnSywA" name="differencearrays" specification="_MxiORBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    int maxlength;&#xD;
    if (a1.length &lt; a2.length) {&#xD;
        maxlength = a2.length;&#xD;
    } else {&#xD;
        maxlength = a1.length;&#xD;
    }&#xD;
    double[] res = new double[maxlength];&#xD;
    if (a1.length &lt; a2.length) {&#xD;
        for (int i = 0; i &lt; a1.length; i++) {&#xD;
            res[i] = a1[i] - a2[i];&#xD;
        }&#xD;
        System.arraycopy(a2, a1.length, res, a1.length, a2.length - a1.length);&#xD;
    } else {&#xD;
        for (int i = 0; i &lt; a2.length; i++) {&#xD;
            res[i] = a1[i] - a2[i];&#xD;
        }&#xD;
        System.arraycopy(a1, a2.length, res, a2.length, a1.length - a2.length);&#xD;
    /* The above line is equivalent to 
            for(int i=a2.length;i&lt;a1.length; i++){
               res[i]=a1[i];
            }*/&#xD;
    }&#xD;
    return res;&#xD;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MxXPIBUTEemIe6OhVnSywA" name="commonbands" visibility="public" isStatic="true" method="_MxX2MxUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MxXPIRUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MxXPIhUTEemIe6OhVnSywA" name="l1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MxXPIxUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MxX2MBUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MxX2MRUTEemIe6OhVnSywA" name="l2">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MxX2MhUTEemIe6OhVnSywA" name="tolerance">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MxYdQBUTEemIe6OhVnSywA" name="belongswithtolerance" visibility="public" isStatic="true" method="_MxcHoBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MxZrYRUTEemIe6OhVnSywA" type="_MxZrYBUTEemIe6OhVnSywA" direction="return"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MxaScBUTEemIe6OhVnSywA" name="pos">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mxa5gBUTEemIe6OhVnSywA" name="l">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MxbgkBUTEemIe6OhVnSywA" name="tolerance">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MxcusBUTEemIe6OhVnSywA" name="sumArray" visibility="public" isStatic="true" method="_MxfyABUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MxdVwBUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mxej4BUTEemIe6OhVnSywA" name="a">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MxfK8BUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MxfK8RUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MxgZEBUTEemIe6OhVnSywA" name="sumArraysquare" visibility="public" isStatic="true" method="_MxhAIxUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MxgZERUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MxhAIBUTEemIe6OhVnSywA" name="a">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MxhAIRUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MxhAIhUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MxhAJBUTEemIe6OhVnSywA" name="sumArrayabs" visibility="public" isStatic="true" method="_MxhnMRUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MxhAJRUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MxhAJhUTEemIe6OhVnSywA" name="a">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MxhAJxUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MxhnMBUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MxhnMhUTEemIe6OhVnSywA" name="productarrays" visibility="public" isStatic="true" method="_MxiOQxUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MxhnMxUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MxhnNBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MxhnNRUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MxhnNhUTEemIe6OhVnSywA" name="a1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MxhnNxUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MxhnOBUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MxiOQBUTEemIe6OhVnSywA" name="a2">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MxiOQRUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MxiOQhUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MxiORBUTEemIe6OhVnSywA" name="differencearrays" visibility="public" isStatic="true" method="_Mxi1UhUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MxiORRUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MxiORhUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MxiORxUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MxiOSBUTEemIe6OhVnSywA" name="a1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MxiOSRUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MxiOShUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MxiOSxUTEemIe6OhVnSywA" name="a2">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Mxi1UBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Mxi1URUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_MxZrYBUTEemIe6OhVnSywA" name="PairBoolInt" visibility="public">
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mxxe0BUTEemIe6OhVnSywA" name="b" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mxys8BUTEemIe6OhVnSywA" name="i" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mx4MgBUTEemIe6OhVnSywA" name="PairBoolInt" specification="_Mx0iIBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    this.b = b;&#xD;
    this.i = i;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mx6owBUTEemIe6OhVnSywA" name="getBoolPairBoolInt" specification="_Mx5aoBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    return this.b;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mx8d8BUTEemIe6OhVnSywA" name="getIntPairBoolInt" specification="_Mx7P0BUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    return this.i;&#xD;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Mx0iIBUTEemIe6OhVnSywA" name="PairBoolInt" visibility="private" method="_Mx4MgBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mx2XUBUTEemIe6OhVnSywA" name="b">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mx3lcBUTEemIe6OhVnSywA" name="i">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Mx5aoBUTEemIe6OhVnSywA" name="getBoolPairBoolInt" visibility="public" method="_Mx6owBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mx6BsBUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Mx7P0BUTEemIe6OhVnSywA" name="getIntPairBoolInt" visibility="public" method="_Mx8d8BUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mx724BUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_MxkDcBUTEemIe6OhVnSywA" name="EuclideanDistanceArrays" visibility="public">
                <generalization xmi:type="uml:Generalization" xmi:id="_MxkDcRUTEemIe6OhVnSywA" general="_MwsgwBUTEemIe6OhVnSywA"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxkqiBUTEemIe6OhVnSywA" name="Compare2Lanes" specification="_MxkqgBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    double[] x = null;&#xD;
    double[] y = null;&#xD;
    for (int i = 0; i &lt; l1.size(); i++) {&#xD;
        x = ArrayUtils.addAll(x, l1.get(i).getProfile());&#xD;
        y = ArrayUtils.addAll(y, l2.get(i).getProfile());&#xD;
    }&#xD;
    double[] x_minus_y = differencearrays(x, y);&#xD;
    double sum_x_minus_y_x_minus_y = sumArraysquare(x_minus_y);&#xD;
    return (1 - sqrt(sum_x_minus_y_x_minus_y));&#xD;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MxkqgBUTEemIe6OhVnSywA" name="Compare2Lanes" visibility="public" method="_MxkqiBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MxkqgRUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MxkqghUTEemIe6OhVnSywA" name="l1" type="_MGiwgRUTEemIe6OhVnSywA">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MxkqgxUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MxkqhBUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MxkqhRUTEemIe6OhVnSywA" name="l2" type="_MGiwgRUTEemIe6OhVnSywA">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MxkqhhUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MxkqhxUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_MxnGwBUTEemIe6OhVnSywA" name="PearsonCorrelationArrays" visibility="public">
                <generalization xmi:type="uml:Generalization" xmi:id="_Mxnt0BUTEemIe6OhVnSywA" general="_MwsgwBUTEemIe6OhVnSywA"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxubgBUTEemIe6OhVnSywA" name="Compare2Lanes" specification="_Mxo78BUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    double[] x = null;&#xD;
    double[] y = null;&#xD;
    for (int i = 0; i &lt; l1.size(); i++) {&#xD;
        x = ArrayUtils.addAll(x, l1.get(i).getProfile());&#xD;
        y = ArrayUtils.addAll(y, l2.get(i).getProfile());&#xD;
    }&#xD;
    double[] productxy = productarrays(x, y);&#xD;
    double sumproductxy = sumArray(productxy);&#xD;
    double sumx = sumArray(x);&#xD;
    double sumxx = sumArraysquare(x);&#xD;
    double sumxsumx = sumx * sumx;&#xD;
    double sumxsumx_div_n = sumxsumx / x.length;&#xD;
    double sqrt_sumxx_minus_sumxsumx_div_n = sqrt(sumxx - sumxsumx_div_n);&#xD;
    double sumy = sumArray(y);&#xD;
    double sumyy = sumArraysquare(y);&#xD;
    double sumysumy = sumy * sumy;&#xD;
    double sumysumy_div_n = sumysumy / y.length;&#xD;
    double sqrt_sumyy_minus_sumysumy_div_n = sqrt(sumyy - sumysumy_div_n);&#xD;
    double sumxsumy = sumx * sumy;&#xD;
    int n = max(x.length, y.length);&#xD;
    double sumxsumy_div_n = sumxsumy / n;&#xD;
    double cor = (sumproductxy - sumxsumy_div_n) / (sqrt_sumxx_minus_sumxsumx_div_n * sqrt_sumyy_minus_sumysumy_div_n);&#xD;
    if (cor > 1) {&#xD;
        return 1;&#xD;
    }&#xD;
    if (cor &lt; 0) {&#xD;
        return 1;&#xD;
    } else {&#xD;
        return 1 - cor;&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Mxo78BUTEemIe6OhVnSywA" name="Compare2Lanes" visibility="public" method="_MxubgBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MxpjABUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MxqxIBUTEemIe6OhVnSywA" name="l1" type="_MGiwgRUTEemIe6OhVnSywA">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MxrYMBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Mxr_QBUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MxsmUBUTEemIe6OhVnSywA" name="l2" type="_MGiwgRUTEemIe6OhVnSywA">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MxtNYBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Mxt0cBUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_Mx-6MBUTEemIe6OhVnSywA" name="ManhattanDistanceArrays" visibility="public">
                <generalization xmi:type="uml:Generalization" xmi:id="_Mx_hQBUTEemIe6OhVnSywA" general="_MwsgwBUTEemIe6OhVnSywA"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MyDLoRUTEemIe6OhVnSywA" name="Compare2Lanes" specification="_MyAIUBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    double[] x = null;&#xD;
    double[] y = null;&#xD;
    for (int i = 0; i &lt; l1.size(); i++) {&#xD;
        x = ArrayUtils.addAll(x, l1.get(i).getProfile());&#xD;
        y = ArrayUtils.addAll(y, l2.get(i).getProfile());&#xD;
    }&#xD;
    double[] x_minus_y = differencearrays(x, y);&#xD;
    double sum_abs_x_minus_y = sumArrayabs(x_minus_y);&#xD;
    return 1 - sum_abs_x_minus_y;&#xD;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MyAIUBUTEemIe6OhVnSywA" name="Compare2Lanes" visibility="public" method="_MyDLoRUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MyAIURUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MyAvYBUTEemIe6OhVnSywA" name="l1" type="_MGiwgRUTEemIe6OhVnSywA">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MyBWcBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MyB9gBUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MyB9gRUTEemIe6OhVnSywA" name="l2" type="_MGiwgRUTEemIe6OhVnSywA">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MyCkkBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MyDLoBUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_MyFn4BUTEemIe6OhVnSywA" name="Jeffrey" visibility="public">
                <generalization xmi:type="uml:Generalization" xmi:id="_MyFn4RUTEemIe6OhVnSywA" general="_MwLjYRUTEemIe6OhVnSywA"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MyGO8BUTEemIe6OhVnSywA" name="tolerance" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MyJSQBUTEemIe6OhVnSywA" name="Jeffrey" specification="_MyG2ABUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    this.tolerance = tolerance;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MyLHcBUTEemIe6OhVnSywA" name="setTolerance" specification="_MyJ5UBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    this.tolerance = tolerance;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MyOKwBUTEemIe6OhVnSywA" name="Compare2Lanes" specification="_MyLugBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    double cor;&#xD;
    double[] stdl1 = l1.getStdpositionbands();&#xD;
    double[] stdl2 = l2.getStdpositionbands();&#xD;
    int b1 = stdl1.length;&#xD;
    int b2 = stdl2.length;&#xD;
    int b1b2 = commonbands(stdl1, stdl2, tolerance);&#xD;
    // cor is a value between 0 and 1 that indicates the correlation &#xD;
    // (a value close to 1 means that the 2 lanes are similar, and a &#xD;
    // value close to 0 means that the 2 lanes are different).&#xD;
    // Clustering algorithms works with distance between points&#xD;
    // instead of similarity; therefore, we need to perform the operation&#xD;
    // 1 minus cor to obtain the distance from the correlation.&#xD;
    cor = ((double) b1b2 / b1 + (double) b1b2 / b2) / 2;&#xD;
    return 1 - cor;&#xD;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MyG2ABUTEemIe6OhVnSywA" name="Jeffrey" visibility="public" method="_MyJSQBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MyIrMBUTEemIe6OhVnSywA" name="tolerance">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MyJ5UBUTEemIe6OhVnSywA" name="setTolerance" visibility="public" method="_MyLHcBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MyKgYBUTEemIe6OhVnSywA" name="tolerance">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MyLugBUTEemIe6OhVnSywA" name="Compare2Lanes" visibility="public" method="_MyOKwBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MyMVkBUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MyM8oBUTEemIe6OhVnSywA" name="l1" type="_MGiwgRUTEemIe6OhVnSywA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MyNjsBUTEemIe6OhVnSywA" name="l2" type="_MGiwgRUTEemIe6OhVnSywA"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_MyQnABUTEemIe6OhVnSywA" name="BandDifferenceArrays" visibility="public">
                <generalization xmi:type="uml:Generalization" xmi:id="_MyROEBUTEemIe6OhVnSywA" general="_MwsgwBUTEemIe6OhVnSywA"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MyR1IBUTEemIe6OhVnSywA" name="tolerance" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MyTDQBUTEemIe6OhVnSywA" name="commonbands" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MyTqUBUTEemIe6OhVnSywA" name="defaultValue">
                    <language>JAVA</language>
                    <body>0</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MyURYBUTEemIe6OhVnSywA" name="totalbands" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MyVfgBUTEemIe6OhVnSywA" name="defaultValue">
                    <language>JAVA</language>
                    <body>0</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MyX7wBUTEemIe6OhVnSywA" name="BandDifferenceArrays" specification="_MyWGkBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    this.tolerance = tolerance;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MyZw8BUTEemIe6OhVnSywA" name="setTolerance" specification="_MyYi0BUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    this.tolerance = tolerance;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MycNMBUTEemIe6OhVnSywA" name="Compare2Lanes" specification="_Mya_EBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    double cor;&#xD;
    commonbands = 0;&#xD;
    totalbands = 0;&#xD;
    for (int i = 0; i &lt; l1.size(); i++) {&#xD;
        Compare2Lanes(l1.get(i), l2.get(i));&#xD;
    }&#xD;
    cor = 1 - (commonbands / totalbands);&#xD;
    return 1 - cor;&#xD;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MyWGkBUTEemIe6OhVnSywA" name="BandDifferenceArrays" visibility="public" method="_MyX7wBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MyXUsBUTEemIe6OhVnSywA" name="tolerance">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MyYi0BUTEemIe6OhVnSywA" name="setTolerance" visibility="public" method="_MyZw8BUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MyZJ4BUTEemIe6OhVnSywA" name="tolerance">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Mya_EBUTEemIe6OhVnSywA" name="Compare2Lanes" visibility="public" method="_MycNMBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MybmIBUTEemIe6OhVnSywA" name="l1" type="_MGiwgRUTEemIe6OhVnSywA">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MyeCYBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MyepcBUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MybmIRUTEemIe6OhVnSywA" name="l2" type="_MGiwgRUTEemIe6OhVnSywA">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MyfQgBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MyfQgRUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MydbUBUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_MyhFsBUTEemIe6OhVnSywA" name="JeffreyArrays" visibility="public">
                <generalization xmi:type="uml:Generalization" xmi:id="_MyhswBUTEemIe6OhVnSywA" general="_MwsgwBUTEemIe6OhVnSywA"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MyiT0BUTEemIe6OhVnSywA" name="tolerance" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Myi64BUTEemIe6OhVnSywA" name="commonbands" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MykJABUTEemIe6OhVnSywA" name="defaultValue">
                    <language>JAVA</language>
                    <body>0</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MykwEBUTEemIe6OhVnSywA" name="totalbands" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MylXIBUTEemIe6OhVnSywA" name="defaultValue">
                    <language>JAVA</language>
                    <body>0</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Myl-MBUTEemIe6OhVnSywA" name="tb1" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MynMUBUTEemIe6OhVnSywA" name="defaultValue">
                    <language>JAVA</language>
                    <body>0</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MynzYBUTEemIe6OhVnSywA" name="tb2" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MypBgBUTEemIe6OhVnSywA" name="defaultValue">
                    <language>JAVA</language>
                    <body>0</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MypokBUTEemIe6OhVnSywA" name="tb1b2" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_MyqPoBUTEemIe6OhVnSywA" name="defaultValue">
                    <language>JAVA</language>
                    <body>0</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mysr4RUTEemIe6OhVnSywA" name="JeffreyArrays" specification="_Myq2sBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    this.tolerance = tolerance;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Myt6AhUTEemIe6OhVnSywA" name="setTolerance" specification="_Myt6ABUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    this.tolerance = tolerance;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MyvIIBUTEemIe6OhVnSywA" name="Compare2Lanes" specification="_Myt6AxUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    tb1 = 0;&#xD;
    tb2 = 0;&#xD;
    tb1b2 = 0;&#xD;
    for (int i = 0; i &lt; l1.size(); i++) {&#xD;
        Compare2Lanes(l1.get(i), l2.get(i));&#xD;
    }&#xD;
    double cor = ((double) tb2 * tb1b2 + tb1 * tb1b2) / (2 * tb1 * tb2);&#xD;
    return 1 - cor;&#xD;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Myq2sBUTEemIe6OhVnSywA" name="JeffreyArrays" visibility="public" method="_Mysr4RUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mysr4BUTEemIe6OhVnSywA" name="tolerance">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Myt6ABUTEemIe6OhVnSywA" name="setTolerance" visibility="public" method="_Myt6AhUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Myt6ARUTEemIe6OhVnSywA" name="tolerance">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Myt6AxUTEemIe6OhVnSywA" name="Compare2Lanes" visibility="public" method="_MyvIIBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Myt6BBUTEemIe6OhVnSywA" name="l1" type="_MGiwgRUTEemIe6OhVnSywA">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Myw9UBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MyxkYBUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MyuhEBUTEemIe6OhVnSywA" name="l2" type="_MGiwgRUTEemIe6OhVnSywA">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MyyLcBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MyyLcRUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MywWQBUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_My0AoBUTEemIe6OhVnSywA" name="DiceArrays" visibility="public">
                <generalization xmi:type="uml:Generalization" xmi:id="_My0nsBUTEemIe6OhVnSywA" general="_MwsgwBUTEemIe6OhVnSywA"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_My1OwBUTEemIe6OhVnSywA" name="tolerance" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_My110BUTEemIe6OhVnSywA" name="commonbands" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_My3D8BUTEemIe6OhVnSywA" name="defaultValue">
                    <language>JAVA</language>
                    <body>0</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_My3D8RUTEemIe6OhVnSywA" name="totalbands" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_My3D8hUTEemIe6OhVnSywA" name="defaultValue">
                    <language>JAVA</language>
                    <body>0</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_My5gMBUTEemIe6OhVnSywA" name="DiceArrays" specification="_My3D8xUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    this.tolerance = tolerance;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_My7VYRUTEemIe6OhVnSywA" name="setTolerance" specification="_My6uUBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    this.tolerance = tolerance;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_My9xoBUTEemIe6OhVnSywA" name="Compare2Lanes" specification="_My8jgBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    commonbands = 0;&#xD;
    totalbands = 0;&#xD;
    for (int i = 0; i &lt; l1.size(); i++) {&#xD;
        Compare2Lanes(l1.get(i), l2.get(i));&#xD;
    }&#xD;
    double cor = 2 * commonbands / totalbands;&#xD;
    return 1 - cor;&#xD;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_My3D8xUTEemIe6OhVnSywA" name="DiceArrays" visibility="public" method="_My5gMBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_My45IBUTEemIe6OhVnSywA" name="tolerance">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_My6uUBUTEemIe6OhVnSywA" name="setTolerance" visibility="public" method="_My7VYRUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_My7VYBUTEemIe6OhVnSywA" name="tolerance">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_My8jgBUTEemIe6OhVnSywA" name="Compare2Lanes" visibility="public" method="_My9xoBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_My8jgRUTEemIe6OhVnSywA" name="l1" type="_MGiwgRUTEemIe6OhVnSywA">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_My_m0BUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MzAN4BUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_My9KkBUTEemIe6OhVnSywA" name="l2" type="_MGiwgRUTEemIe6OhVnSywA">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MzAN4RUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MzA08BUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_My-_wBUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_MzCqIBUTEemIe6OhVnSywA" name="Ochiai" visibility="public">
                <generalization xmi:type="uml:Generalization" xmi:id="_MzCqIRUTEemIe6OhVnSywA" general="_MwLjYRUTEemIe6OhVnSywA"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MzDRMBUTEemIe6OhVnSywA" name="tolerance" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MzGUgBUTEemIe6OhVnSywA" name="Ochiai" specification="_MzEfUBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    this.tolerance = tolerance;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MzIJsBUTEemIe6OhVnSywA" name="setTolerance" specification="_MzHioBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    this.tolerance = tolerance;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MzJ-4xUTEemIe6OhVnSywA" name="Compare2Lanes" specification="_MzJX0BUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    double cor;&#xD;
    double[] stdl1 = l1.getStdpositionbands();&#xD;
    double[] stdl2 = l2.getStdpositionbands();&#xD;
    int b1 = stdl1.length;&#xD;
    int b2 = stdl2.length;&#xD;
    int b1b2 = commonbands(stdl1, stdl2, tolerance);&#xD;
    // cor is a value between 0 and 1 that indicates the correlation &#xD;
    // (a value close to 1 means that the 2 lanes are similar, and a &#xD;
    // value close to 0 means that the 2 lanes are different).&#xD;
    // Clustering algorithms works with distance between points&#xD;
    // instead of similarity; therefore, we need to perform the operation&#xD;
    // 1 minus cor to obtain the distance from the correlation.&#xD;
    cor = ((double) b1b2 / (sqrt(b1 * b2)));&#xD;
    return 1 - cor;&#xD;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MzEfUBUTEemIe6OhVnSywA" name="Ochiai" visibility="public" method="_MzGUgBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MzFtcBUTEemIe6OhVnSywA" name="tolerance">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MzHioBUTEemIe6OhVnSywA" name="setTolerance" visibility="public" method="_MzIJsBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MzHioRUTEemIe6OhVnSywA" name="tolerance">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MzJX0BUTEemIe6OhVnSywA" name="Compare2Lanes" visibility="public" method="_MzJ-4xUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MzJ-4BUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MzJ-4RUTEemIe6OhVnSywA" name="l1" type="_MGiwgRUTEemIe6OhVnSywA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MzJ-4hUTEemIe6OhVnSywA" name="l2" type="_MGiwgRUTEemIe6OhVnSywA"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_MzL0EBUTEemIe6OhVnSywA" name="PearsonCorrelation" visibility="public">
                <generalization xmi:type="uml:Generalization" xmi:id="_MzL0ERUTEemIe6OhVnSywA" general="_MwLjYRUTEemIe6OhVnSywA"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MzO3YBUTEemIe6OhVnSywA" name="Compare2Lanes" specification="_MzMbIBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    double[] x = l1.getProfile();&#xD;
    double[] y = l2.getProfile();&#xD;
    double[] productxy = productarrays(x, y);&#xD;
    double sumproductxy = sumArray(productxy);&#xD;
    double sumx = sumArray(x);&#xD;
    double sumxx = sumArraysquare(x);&#xD;
    double sumxsumx = sumx * sumx;&#xD;
    double sumxsumx_div_n = sumxsumx / x.length;&#xD;
    double sqrt_sumxx_minus_sumxsumx_div_n = sqrt(sumxx - sumxsumx_div_n);&#xD;
    double sumy = sumArray(y);&#xD;
    double sumyy = sumArraysquare(y);&#xD;
    double sumysumy = sumy * sumy;&#xD;
    double sumysumy_div_n = sumysumy / y.length;&#xD;
    double sqrt_sumyy_minus_sumysumy_div_n = sqrt(sumyy - sumysumy_div_n);&#xD;
    double sumxsumy = sumx * sumy;&#xD;
    int n = max(x.length, y.length);&#xD;
    double sumxsumy_div_n = sumxsumy / n;&#xD;
    double cor = (sumproductxy - sumxsumy_div_n) / (sqrt_sumxx_minus_sumxsumx_div_n * sqrt_sumyy_minus_sumysumy_div_n);&#xD;
    if (cor > 1) {&#xD;
        return 1;&#xD;
    }&#xD;
    if (cor &lt; 0) {&#xD;
        return 1;&#xD;
    } else {&#xD;
        return 1 - cor;&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MzMbIBUTEemIe6OhVnSywA" name="Compare2Lanes" visibility="public" method="_MzO3YBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MzNCMBUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MzNpQBUTEemIe6OhVnSywA" name="l1" type="_MGiwgRUTEemIe6OhVnSywA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MzOQUBUTEemIe6OhVnSywA" name="l2" type="_MGiwgRUTEemIe6OhVnSywA"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_MzRToBUTEemIe6OhVnSywA" name="BandDifference" visibility="public">
                <generalization xmi:type="uml:Generalization" xmi:id="_MzR6sBUTEemIe6OhVnSywA" general="_MwLjYRUTEemIe6OhVnSywA"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_MzShwBUTEemIe6OhVnSywA" name="tolerance" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MzWMIBUTEemIe6OhVnSywA" name="BandDifference" specification="_MzTI0BUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    this.tolerance = tolerance;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MzYoYBUTEemIe6OhVnSywA" name="setTolerance" specification="_MzXaQBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    this.tolerance = tolerance;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MzbrsBUTEemIe6OhVnSywA" name="Compare2Lanes" specification="_MzZ2gBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    double cor;&#xD;
    double[] stdl1 = l1.getStdpositionbands();&#xD;
    double[] stdl2 = l2.getStdpositionbands();&#xD;
    double b1 = stdl1.length;&#xD;
    double b2 = stdl2.length;&#xD;
    double b1b2 = commonbands(stdl1, stdl2, tolerance);&#xD;
    // cor is a value between 0 and 1 that indicates the correlation &#xD;
    // (a value close to 1 means that the 2 lanes are similar, and a &#xD;
    // value close to 0 means that the 2 lanes are different).&#xD;
    // Clustering algorithms works with distance between points&#xD;
    // instead of similarity; therefore, we need to perform the operation&#xD;
    // 1 minus cor to obtain the distance from the correlation.&#xD;
    cor = 1 - ((b1 + b2 - 2 * b1b2) / (b1 + b2 - b1b2));&#xD;
    return 1 - cor;&#xD;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MzTI0BUTEemIe6OhVnSywA" name="BandDifference" visibility="public" method="_MzWMIBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MzU-ABUTEemIe6OhVnSywA" name="tolerance">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MzXaQBUTEemIe6OhVnSywA" name="setTolerance" visibility="public" method="_MzYoYBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MzYBUBUTEemIe6OhVnSywA" name="tolerance">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_MzZ2gBUTEemIe6OhVnSywA" name="Compare2Lanes" visibility="public" method="_MzbrsBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MzadkBUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MzbEoBUTEemIe6OhVnSywA" name="l1" type="_MGiwgRUTEemIe6OhVnSywA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MzbEoRUTEemIe6OhVnSywA" name="l2" type="_MGiwgRUTEemIe6OhVnSywA"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_MznR4BUTEemIe6OhVnSywA" name="CosineCorrelationArrays" visibility="public">
                <generalization xmi:type="uml:Generalization" xmi:id="_Mzn48BUTEemIe6OhVnSywA" general="_MwsgwBUTEemIe6OhVnSywA"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MzogBhUTEemIe6OhVnSywA" name="Compare2Lanes" specification="_Mzn48RUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    double[] x = null;&#xD;
    double[] y = null;&#xD;
    for (int i = 0; i &lt; l1.size(); i++) {&#xD;
        x = ArrayUtils.addAll(x, l1.get(i).getProfile());&#xD;
        y = ArrayUtils.addAll(y, l2.get(i).getProfile());&#xD;
    }&#xD;
    double[] productxy = productarrays(x, y);&#xD;
    double sumproductxy = sumArray(productxy);&#xD;
    double sumx = sumArray(x);&#xD;
    double sumxx = sumArraysquare(x);&#xD;
    double sumxsumx = sumx * sumx;&#xD;
    double sqrt_sumxx = sqrt(sumxx);&#xD;
    double sumy = sumArray(y);&#xD;
    double sumyy = sumArraysquare(y);&#xD;
    double sumysumy = sumy * sumy;&#xD;
    double sqrt_sumyy = sqrt(sumyy);&#xD;
    double cor = sumproductxy / (sqrt_sumxx * sqrt_sumyy);&#xD;
    if (cor &lt; 0) {&#xD;
        return 1;&#xD;
    } else {&#xD;
        // 1 minus cor to obtain the distance from the correlation.&#xD;
        return 1 - cor;&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Mzn48RUTEemIe6OhVnSywA" name="Compare2Lanes" visibility="public" method="_MzogBhUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mzn48hUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MzogABUTEemIe6OhVnSywA" name="l1" type="_MGiwgRUTEemIe6OhVnSywA">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MzogARUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MzogAhUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_MzogAxUTEemIe6OhVnSywA" name="l2" type="_MGiwgRUTEemIe6OhVnSywA">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MzogBBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MzogBRUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                </ownedOperation>
              </packagedElement>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_MzxC4BUTEemIe6OhVnSywA" name="MarkerSelection">
              <packagedElement xmi:type="uml:Class" xmi:id="_MzzfIBUTEemIe6OhVnSywA" name="MarkerSelection_4" visibility="public">
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mz1UUBUTEemIe6OhVnSywA" name="close" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_Mz2icBUTEemIe6OhVnSywA" name="defaultValue">
                    <language>JAVA</language>
                    <body>true</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mz3wkBUTEemIe6OhVnSywA" name="imp" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mz5lwBUTEemIe6OhVnSywA" name="darkbg" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mz6z4BUTEemIe6OhVnSywA" name="availablestd" visibility="private" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Mz8CABUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Mz8pEBUTEemIe6OhVnSywA" value="*"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mz8pERUTEemIe6OhVnSywA" name="rm" visibility="private" type="_L_mbABUTEemIe6OhVnSywA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mz93MBUTEemIe6OhVnSywA" name="m" visibility="private" type="_MEzrIBUTEemIe6OhVnSywA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Mz_sYBUTEemIe6OhVnSywA" name="main" visibility="private" type="_Gul0YBUTEemIe6OhVnSywA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M0uFIBUTEemIe6OhVnSywA" name="buttonGroup1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M0usMBUTEemIe6OhVnSywA" name="jButton2" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M0v6UBUTEemIe6OhVnSywA" name="jLabel10" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M0xIcBUTEemIe6OhVnSywA" name="jLabel11" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M0yWkBUTEemIe6OhVnSywA" name="jLabel12" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M0y9oBUTEemIe6OhVnSywA" name="jLabel13" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M0zksBUTEemIe6OhVnSywA" name="jLabel14" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M0zksRUTEemIe6OhVnSywA" name="jLabel15" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M00LwBUTEemIe6OhVnSywA" name="jLabel16" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M00LwRUTEemIe6OhVnSywA" name="jLabel17" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M00LwhUTEemIe6OhVnSywA" name="jLabel18" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M00y0BUTEemIe6OhVnSywA" name="jLabel19" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M00y0RUTEemIe6OhVnSywA" name="jLabel2" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M00y0hUTEemIe6OhVnSywA" name="jLabel20" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M01Z4BUTEemIe6OhVnSywA" name="jLabel21" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M01Z4RUTEemIe6OhVnSywA" name="jLabel22" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M01Z4hUTEemIe6OhVnSywA" name="jLabel23" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M01Z4xUTEemIe6OhVnSywA" name="jLabel24" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M02A8BUTEemIe6OhVnSywA" name="jLabel25" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M02A8RUTEemIe6OhVnSywA" name="jLabel26" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M02A8hUTEemIe6OhVnSywA" name="jLabel27" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M02oABUTEemIe6OhVnSywA" name="jLabel28" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M02oARUTEemIe6OhVnSywA" name="jLabel29" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M02oAhUTEemIe6OhVnSywA" name="jLabel30" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M03PEBUTEemIe6OhVnSywA" name="jLabel31" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M03PERUTEemIe6OhVnSywA" name="jLabel32" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M03PEhUTEemIe6OhVnSywA" name="jLabel33" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M03PExUTEemIe6OhVnSywA" name="jLabel34" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M032IBUTEemIe6OhVnSywA" name="jLabel35" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M032IRUTEemIe6OhVnSywA" name="jLabel36" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M04dMBUTEemIe6OhVnSywA" name="jLabel37" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M05rUBUTEemIe6OhVnSywA" name="jLabel38" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M07ggBUTEemIe6OhVnSywA" name="jLabel39" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M08uoBUTEemIe6OhVnSywA" name="jLabel40" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M08uoRUTEemIe6OhVnSywA" name="jLabel41" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M08uohUTEemIe6OhVnSywA" name="jLabel42" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M09VsBUTEemIe6OhVnSywA" name="jLabel43" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M0_K4BUTEemIe6OhVnSywA" name="jLabel44" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M1AZABUTEemIe6OhVnSywA" name="jLabel45" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M1BnIBUTEemIe6OhVnSywA" name="jLabel46" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M1C1QBUTEemIe6OhVnSywA" name="jLabel47" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M1EDYBUTEemIe6OhVnSywA" name="jLabel5" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M1FRgBUTEemIe6OhVnSywA" name="jLabel6" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M1F4kBUTEemIe6OhVnSywA" name="jLabel7" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M1F4kRUTEemIe6OhVnSywA" name="jLabel8" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M1F4khUTEemIe6OhVnSywA" name="jLabel9" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M1HGsBUTEemIe6OhVnSywA" name="jPanel1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M1IU0BUTEemIe6OhVnSywA" name="jPanel2" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M1Ji8BUTEemIe6OhVnSywA" name="jPanel3" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M1KxEBUTEemIe6OhVnSywA" name="jPanel4" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M1L_MBUTEemIe6OhVnSywA" name="jPanel5" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M1MmQBUTEemIe6OhVnSywA" name="jPanel6" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M1N0YBUTEemIe6OhVnSywA" name="jScrollPane1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M1PCgBUTEemIe6OhVnSywA" name="jScrollPane2" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M1PpkBUTEemIe6OhVnSywA" name="jTextArea1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M1Q3sBUTEemIe6OhVnSywA" name="jTextField1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M1SF0BUTEemIe6OhVnSywA" name="jTextField10" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M1TT8BUTEemIe6OhVnSywA" name="jTextField11" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M1UiEBUTEemIe6OhVnSywA" name="jTextField12" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M1VwMBUTEemIe6OhVnSywA" name="jTextField13" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M1W-UBUTEemIe6OhVnSywA" name="jTextField14" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M1XlYBUTEemIe6OhVnSywA" name="jTextField15" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M1YzgBUTEemIe6OhVnSywA" name="jTextField16" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M1YzgRUTEemIe6OhVnSywA" name="jTextField17" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M1YzghUTEemIe6OhVnSywA" name="jTextField18" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M1aBoBUTEemIe6OhVnSywA" name="jTextField19" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M1bPwBUTEemIe6OhVnSywA" name="jTextField2" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M1cd4BUTEemIe6OhVnSywA" name="jTextField20" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M1dsABUTEemIe6OhVnSywA" name="jTextField21" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M1eTEBUTEemIe6OhVnSywA" name="jTextField22" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M1fhMBUTEemIe6OhVnSywA" name="jTextField23" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M1gvUBUTEemIe6OhVnSywA" name="jTextField24" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M1h9cBUTEemIe6OhVnSywA" name="jTextField25" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M1jLkBUTEemIe6OhVnSywA" name="jTextField26" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M1jyoBUTEemIe6OhVnSywA" name="jTextField27" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M1lAwBUTEemIe6OhVnSywA" name="jTextField28" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M1mO4BUTEemIe6OhVnSywA" name="jTextField29" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M1m18BUTEemIe6OhVnSywA" name="jTextField3" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M1oEEBUTEemIe6OhVnSywA" name="jTextField30" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M1pSMBUTEemIe6OhVnSywA" name="jTextField31" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M1qgUBUTEemIe6OhVnSywA" name="jTextField32" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M1rucBUTEemIe6OhVnSywA" name="jTextField33" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M1s8kBUTEemIe6OhVnSywA" name="jTextField34" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M1tjoBUTEemIe6OhVnSywA" name="jTextField35" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M1uxwBUTEemIe6OhVnSywA" name="jTextField36" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M1v_4BUTEemIe6OhVnSywA" name="jTextField37" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M1xOABUTEemIe6OhVnSywA" name="jTextField38" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M1ycIBUTEemIe6OhVnSywA" name="jTextField39" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M1zqQBUTEemIe6OhVnSywA" name="jTextField4" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M104YBUTEemIe6OhVnSywA" name="jTextField40" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M104YRUTEemIe6OhVnSywA" name="jTextField41" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M11fcBUTEemIe6OhVnSywA" name="jTextField5" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M11fcRUTEemIe6OhVnSywA" name="jTextField6" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M12tkBUTEemIe6OhVnSywA" name="jTextField7" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M13UoBUTEemIe6OhVnSywA" name="jTextField8" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M14iwBUTEemIe6OhVnSywA" name="jTextField9" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M15w4BUTEemIe6OhVnSywA" name="jbBack" visibility="private" isUnique="false"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_M0DWwRUTEemIe6OhVnSywA" name="MarkerSelection_4" specification="_M0ATcBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    super();&#xD;
    initComponents();&#xD;
    this.imp = imp;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_M0KEcBUTEemIe6OhVnSywA" name="MarkerSelection_4" specification="_M0DWwhUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    super();&#xD;
    initComponents();&#xD;
    this.imp = imp;&#xD;
    this.m = m;&#xD;
    this.darkbg = darkbg;&#xD;
    this.main = main;&#xD;
    Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();&#xD;
    double width = screenSize.getWidth();&#xD;
    setVisible(true);&#xD;
    setLocation((int) width - 535, 0);&#xD;
    imp.getWindow().setAlwaysOnTop(true);&#xD;
    setAlwaysOnTop(true);&#xD;
    jTextField1.setText(m.getWindowname());&#xD;
    JTextField[] textfields = { jTextField2, jTextField3, jTextField4, jTextField5, jTextField6, jTextField7, jTextField8, jTextField9, jTextField10, jTextField11, jTextField12, jTextField13, jTextField14, jTextField15, jTextField16, jTextField17, jTextField18, jTextField19, jTextField20, jTextField21, jTextField22, jTextField23, jTextField24, jTextField25, jTextField26, jTextField27, jTextField28, jTextField29, jTextField30, jTextField31, jTextField32, jTextField33, jTextField34, jTextField35, jTextField36, jTextField37, jTextField38, jTextField39, jTextField40, jTextField41 };&#xD;
    JLabel[] labels = { jLabel5, jLabel9, jLabel10, jLabel11, jLabel12, jLabel13, jLabel14, jLabel15, jLabel16, jLabel17, jLabel18, jLabel19, jLabel20, jLabel21, jLabel22, jLabel23, jLabel24, jLabel25, jLabel26, jLabel27, jLabel28, jLabel29, jLabel30, jLabel31, jLabel32, jLabel33, jLabel34, jLabel35, jLabel36, jLabel37, jLabel38, jLabel39, jLabel40, jLabel41, jLabel42, jLabel43, jLabel44, jLabel45, jLabel46, jLabel47 };&#xD;
    initiatenecessarytextFields(textfields, labels, m.finallanes[0].getPositionbands().length);&#xD;
    jTextField1.setEnabled(true);&#xD;
    disable_enable_textFields(textfields, true);&#xD;
    rm = new NormaliseManager();&#xD;
    int[] positionbands = m.finallanes[0].getPositionbands();&#xD;
    if (positionbands != null) {&#xD;
        for (int b : positionbands) {&#xD;
            Roi r0 = m.finallanes[0].getRoi();&#xD;
            int r0x = r0.getBounds().x;&#xD;
            int r0y = r0.getBounds().y;&#xD;
            int w = r0.getBounds().width;&#xD;
            Rectangle r = new Rectangle(r0x, b - 1, w, 2);&#xD;
            Roi r1 = rectangleintersectionroi(r0, r);&#xD;
            rm.add(imp, r1, 0);&#xD;
            rm.showAll(0);&#xD;
        }&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_M0OV4BUTEemIe6OhVnSywA" name="initComponents" specification="_M0L5oBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    buttonGroup1 = new javax.swing.ButtonGroup();&#xD;
    jPanel4 = new javax.swing.JPanel();&#xD;
    jButton2 = new javax.swing.JButton();&#xD;
    jbBack = new javax.swing.JButton();&#xD;
    jPanel5 = new javax.swing.JPanel();&#xD;
    jLabel6 = new javax.swing.JLabel();&#xD;
    jLabel7 = new javax.swing.JLabel();&#xD;
    jLabel8 = new javax.swing.JLabel();&#xD;
    jPanel1 = new javax.swing.JPanel();&#xD;
    jPanel2 = new javax.swing.JPanel();&#xD;
    jScrollPane1 = new javax.swing.JScrollPane();&#xD;
    jTextArea1 = new javax.swing.JTextArea();&#xD;
    jPanel3 = new javax.swing.JPanel();&#xD;
    jScrollPane2 = new javax.swing.JScrollPane();&#xD;
    jPanel6 = new javax.swing.JPanel();&#xD;
    jLabel5 = new javax.swing.JLabel();&#xD;
    jLabel9 = new javax.swing.JLabel();&#xD;
    jLabel10 = new javax.swing.JLabel();&#xD;
    jLabel11 = new javax.swing.JLabel();&#xD;
    jLabel12 = new javax.swing.JLabel();&#xD;
    jLabel13 = new javax.swing.JLabel();&#xD;
    jLabel14 = new javax.swing.JLabel();&#xD;
    jLabel15 = new javax.swing.JLabel();&#xD;
    jLabel16 = new javax.swing.JLabel();&#xD;
    jLabel17 = new javax.swing.JLabel();&#xD;
    jLabel18 = new javax.swing.JLabel();&#xD;
    jLabel19 = new javax.swing.JLabel();&#xD;
    jLabel20 = new javax.swing.JLabel();&#xD;
    jLabel21 = new javax.swing.JLabel();&#xD;
    jLabel22 = new javax.swing.JLabel();&#xD;
    jLabel23 = new javax.swing.JLabel();&#xD;
    jLabel24 = new javax.swing.JLabel();&#xD;
    jLabel25 = new javax.swing.JLabel();&#xD;
    jLabel26 = new javax.swing.JLabel();&#xD;
    jLabel27 = new javax.swing.JLabel();&#xD;
    jLabel28 = new javax.swing.JLabel();&#xD;
    jLabel29 = new javax.swing.JLabel();&#xD;
    jLabel30 = new javax.swing.JLabel();&#xD;
    jLabel31 = new javax.swing.JLabel();&#xD;
    jLabel32 = new javax.swing.JLabel();&#xD;
    jLabel33 = new javax.swing.JLabel();&#xD;
    jLabel34 = new javax.swing.JLabel();&#xD;
    jLabel35 = new javax.swing.JLabel();&#xD;
    jLabel36 = new javax.swing.JLabel();&#xD;
    jLabel2 = new javax.swing.JLabel();&#xD;
    jTextField1 = new javax.swing.JTextField();&#xD;
    jTextField2 = new javax.swing.JTextField();&#xD;
    jTextField3 = new javax.swing.JTextField();&#xD;
    jTextField4 = new javax.swing.JTextField();&#xD;
    jTextField5 = new javax.swing.JTextField();&#xD;
    jTextField6 = new javax.swing.JTextField();&#xD;
    jTextField7 = new javax.swing.JTextField();&#xD;
    jTextField8 = new javax.swing.JTextField();&#xD;
    jTextField9 = new javax.swing.JTextField();&#xD;
    jTextField10 = new javax.swing.JTextField();&#xD;
    jTextField11 = new javax.swing.JTextField();&#xD;
    jTextField12 = new javax.swing.JTextField();&#xD;
    jTextField13 = new javax.swing.JTextField();&#xD;
    jTextField14 = new javax.swing.JTextField();&#xD;
    jTextField15 = new javax.swing.JTextField();&#xD;
    jTextField16 = new javax.swing.JTextField();&#xD;
    jTextField17 = new javax.swing.JTextField();&#xD;
    jTextField18 = new javax.swing.JTextField();&#xD;
    jTextField19 = new javax.swing.JTextField();&#xD;
    jTextField20 = new javax.swing.JTextField();&#xD;
    jTextField21 = new javax.swing.JTextField();&#xD;
    jTextField22 = new javax.swing.JTextField();&#xD;
    jTextField23 = new javax.swing.JTextField();&#xD;
    jTextField24 = new javax.swing.JTextField();&#xD;
    jTextField25 = new javax.swing.JTextField();&#xD;
    jTextField26 = new javax.swing.JTextField();&#xD;
    jTextField27 = new javax.swing.JTextField();&#xD;
    jTextField28 = new javax.swing.JTextField();&#xD;
    jTextField29 = new javax.swing.JTextField();&#xD;
    jTextField30 = new javax.swing.JTextField();&#xD;
    jLabel37 = new javax.swing.JLabel();&#xD;
    jTextField31 = new javax.swing.JTextField();&#xD;
    jLabel38 = new javax.swing.JLabel();&#xD;
    jTextField32 = new javax.swing.JTextField();&#xD;
    jLabel39 = new javax.swing.JLabel();&#xD;
    jTextField33 = new javax.swing.JTextField();&#xD;
    jLabel40 = new javax.swing.JLabel();&#xD;
    jTextField34 = new javax.swing.JTextField();&#xD;
    jLabel41 = new javax.swing.JLabel();&#xD;
    jTextField35 = new javax.swing.JTextField();&#xD;
    jLabel42 = new javax.swing.JLabel();&#xD;
    jTextField36 = new javax.swing.JTextField();&#xD;
    jTextField37 = new javax.swing.JTextField();&#xD;
    jLabel43 = new javax.swing.JLabel();&#xD;
    jTextField38 = new javax.swing.JTextField();&#xD;
    jLabel44 = new javax.swing.JLabel();&#xD;
    jTextField39 = new javax.swing.JTextField();&#xD;
    jLabel45 = new javax.swing.JLabel();&#xD;
    jTextField40 = new javax.swing.JTextField();&#xD;
    jLabel46 = new javax.swing.JLabel();&#xD;
    jTextField41 = new javax.swing.JTextField();&#xD;
    jLabel47 = new javax.swing.JLabel();&#xD;
    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);&#xD;
    setTitle(&quot;Image analysis&quot;);&#xD;
    setResizable(false);&#xD;
    addWindowListener(new java.awt.event.WindowAdapter() {&#xD;
&#xD;
        public void windowClosed(java.awt.event.WindowEvent evt) {&#xD;
            formWindowClosed(evt);&#xD;
        }&#xD;
    });&#xD;
    jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());&#xD;
    jButton2.setText(&quot;Finish&quot;);&#xD;
    jButton2.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton2ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jbBack.setText(&quot;&lt;Back&quot;);&#xD;
    jbBack.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbBackActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);&#xD;
    jPanel4.setLayout(jPanel4Layout);&#xD;
    jPanel4Layout.setHorizontalGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addComponent(jbBack).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButton2)));&#xD;
    jPanel4Layout.setVerticalGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jButton2).addComponent(jbBack))));&#xD;
    jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Steps&quot;)));&#xD;
    jPanel5.setForeground(new java.awt.Color(0, 17, 255));&#xD;
    jLabel6.setText(&quot;Step 1. Lane selection&quot;);&#xD;
    jLabel7.setText(&quot;Step 2. Band detection&quot;);&#xD;
    jLabel8.setForeground(new java.awt.Color(0, 15, 255));&#xD;
    jLabel8.setText(&quot;Step 3. Normalisation&quot;);&#xD;
    javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);&#xD;
    jPanel5.setLayout(jPanel5Layout);&#xD;
    jPanel5Layout.setHorizontalGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel5Layout.createSequentialGroup().addContainerGap().addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel6).addComponent(jLabel7).addComponent(jLabel8)).addContainerGap(48, Short.MAX_VALUE)));&#xD;
    jPanel5Layout.setVerticalGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel5Layout.createSequentialGroup().addContainerGap().addComponent(jLabel6).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel7).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel8).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Help&quot;));&#xD;
    jTextArea1.setEditable(false);&#xD;
    jTextArea1.setColumns(20);&#xD;
    jTextArea1.setRows(5);&#xD;
    jTextArea1.setText(&quot;In this step, you must provide the\nmolecular weights of the bands. \nOnce that you press the Finish \nbutton, a new window will appear to\ncompute the migration model.&quot;);&#xD;
    jScrollPane1.setViewportView(jTextArea1);&#xD;
    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);&#xD;
    jPanel2.setLayout(jPanel2Layout);&#xD;
    jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE));&#xD;
    jPanel2Layout.setVerticalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE));&#xD;
    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);&#xD;
    jPanel1.setLayout(jPanel1Layout);&#xD;
    jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));&#xD;
    jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup().addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)));&#xD;
    jPanel3.setBorder(null);&#xD;
    jScrollPane2.setAutoscrolls(true);&#xD;
    jLabel5.setText(&quot;Band 1:&quot;);&#xD;
    jLabel9.setText(&quot;Band 2:&quot;);&#xD;
    jLabel10.setText(&quot;Band 3:&quot;);&#xD;
    jLabel11.setText(&quot;Band 4:&quot;);&#xD;
    jLabel12.setText(&quot;Band 5:&quot;);&#xD;
    jLabel13.setText(&quot;Band 6:&quot;);&#xD;
    jLabel14.setText(&quot;Band 7:&quot;);&#xD;
    jLabel15.setText(&quot;Band 8:&quot;);&#xD;
    jLabel16.setText(&quot;Band 9:&quot;);&#xD;
    jLabel17.setText(&quot;Band 10:&quot;);&#xD;
    jLabel18.setText(&quot;Band 11:&quot;);&#xD;
    jLabel19.setText(&quot;Band 12:&quot;);&#xD;
    jLabel20.setText(&quot;Band 13:&quot;);&#xD;
    jLabel21.setText(&quot;Band 14:&quot;);&#xD;
    jLabel22.setText(&quot;Band 15:&quot;);&#xD;
    jLabel23.setText(&quot;Band 16:&quot;);&#xD;
    jLabel24.setText(&quot;Band 17:&quot;);&#xD;
    jLabel25.setText(&quot;Band 18:&quot;);&#xD;
    jLabel26.setText(&quot;Band 19:&quot;);&#xD;
    jLabel27.setText(&quot;Band 20:&quot;);&#xD;
    jLabel28.setText(&quot;Band 21:&quot;);&#xD;
    jLabel29.setText(&quot;Band 22:&quot;);&#xD;
    jLabel30.setText(&quot;Band 23:&quot;);&#xD;
    jLabel31.setText(&quot;Band 24:&quot;);&#xD;
    jLabel32.setText(&quot;Band 25:&quot;);&#xD;
    jLabel33.setText(&quot;Band 26:&quot;);&#xD;
    jLabel34.setText(&quot;Band 27:&quot;);&#xD;
    jLabel35.setText(&quot;Band 28:&quot;);&#xD;
    jLabel36.setText(&quot;Band 29:&quot;);&#xD;
    jLabel2.setText(&quot;Name:&quot;);&#xD;
    jLabel37.setText(&quot;Band 30:&quot;);&#xD;
    jLabel38.setText(&quot;Band 31:&quot;);&#xD;
    jLabel39.setText(&quot;Band 32:&quot;);&#xD;
    jLabel40.setText(&quot;Band 33:&quot;);&#xD;
    jLabel41.setText(&quot;Band 34:&quot;);&#xD;
    jLabel42.setText(&quot;Band 35:&quot;);&#xD;
    jLabel43.setText(&quot;Band 36:&quot;);&#xD;
    jLabel44.setText(&quot;Band 37:&quot;);&#xD;
    jLabel45.setText(&quot;Band 38:&quot;);&#xD;
    jLabel46.setText(&quot;Band 39:&quot;);&#xD;
    jLabel47.setText(&quot;Band 40:&quot;);&#xD;
    javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);&#xD;
    jPanel6.setLayout(jPanel6Layout);&#xD;
    jPanel6Layout.setHorizontalGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel6Layout.createSequentialGroup().addContainerGap().addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false).addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup().addComponent(jLabel35).addGap(18, 18, 18).addComponent(jTextField29, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup().addComponent(jLabel34).addGap(18, 18, 18).addComponent(jTextField28, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup().addComponent(jLabel32).addGap(18, 18, 18).addComponent(jTextField26, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup().addComponent(jLabel25).addGap(18, 18, 18).addComponent(jTextField19, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup().addComponent(jLabel24).addGap(18, 18, 18).addComponent(jTextField18, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup().addComponent(jLabel19).addGap(18, 18, 18).addComponent(jTextField13, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup().addComponent(jLabel18).addGap(18, 18, 18).addComponent(jTextField12, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup().addComponent(jLabel36).addGap(18, 18, 18).addComponent(jTextField30, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup().addComponent(jLabel33).addGap(18, 18, 18).addComponent(jTextField27, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup().addComponent(jLabel31).addGap(18, 18, 18).addComponent(jTextField25, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup().addComponent(jLabel30).addGap(18, 18, 18).addComponent(jTextField24, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup().addComponent(jLabel29).addGap(18, 18, 18).addComponent(jTextField23, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup().addComponent(jLabel28).addGap(18, 18, 18).addComponent(jTextField22, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup().addComponent(jLabel27).addGap(18, 18, 18).addComponent(jTextField21, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup().addComponent(jLabel26).addGap(18, 18, 18).addComponent(jTextField20, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup().addComponent(jLabel23).addGap(18, 18, 18).addComponent(jTextField17, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup().addComponent(jLabel22).addGap(18, 18, 18).addComponent(jTextField16, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup().addComponent(jLabel17).addGap(18, 18, 18).addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup().addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel10).addComponent(jLabel5).addComponent(jLabel9).addComponent(jLabel2).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel11).addComponent(jLabel12).addComponent(jLabel13))).addComponent(jLabel14).addComponent(jLabel15).addComponent(jLabel16)).addGap(28, 28, 28).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))).addGroup(jPanel6Layout.createSequentialGroup().addComponent(jLabel21).addGap(18, 18, 18).addComponent(jTextField15, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE).addGap(1, 1, 1)).addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup().addComponent(jLabel20).addGap(18, 18, 18).addComponent(jTextField14, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))).addGroup(jPanel6Layout.createSequentialGroup().addComponent(jLabel37).addGap(18, 18, 18).addComponent(jTextField31, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(jPanel6Layout.createSequentialGroup().addComponent(jLabel38).addGap(18, 18, 18).addComponent(jTextField32, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(jPanel6Layout.createSequentialGroup().addComponent(jLabel39).addGap(18, 18, 18).addComponent(jTextField33, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(jPanel6Layout.createSequentialGroup().addComponent(jLabel40).addGap(18, 18, 18).addComponent(jTextField34, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(jPanel6Layout.createSequentialGroup().addComponent(jLabel41).addGap(18, 18, 18).addComponent(jTextField35, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(jPanel6Layout.createSequentialGroup().addComponent(jLabel42).addGap(18, 18, 18).addComponent(jTextField36, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(jPanel6Layout.createSequentialGroup().addComponent(jLabel43).addGap(18, 18, 18).addComponent(jTextField37, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(jPanel6Layout.createSequentialGroup().addComponent(jLabel44).addGap(18, 18, 18).addComponent(jTextField38, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(jPanel6Layout.createSequentialGroup().addComponent(jLabel45).addGap(18, 18, 18).addComponent(jTextField39, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(jPanel6Layout.createSequentialGroup().addComponent(jLabel46).addGap(18, 18, 18).addComponent(jTextField40, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(jPanel6Layout.createSequentialGroup().addComponent(jLabel47).addGap(18, 18, 18).addComponent(jTextField41, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))).addGap(0, 39, Short.MAX_VALUE)));&#xD;
    jPanel6Layout.setVerticalGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel6Layout.createSequentialGroup().addContainerGap().addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel2).addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel5).addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel9).addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel10).addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel11).addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel12).addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel13).addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel14).addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel15).addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel16).addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel17).addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel18).addComponent(jTextField12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel19).addComponent(jTextField13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel20).addComponent(jTextField14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel21).addComponent(jTextField15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel22).addComponent(jTextField16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel23).addComponent(jTextField17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel24).addComponent(jTextField18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel25).addComponent(jTextField19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel26).addComponent(jTextField20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel27).addComponent(jTextField21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel28).addComponent(jTextField22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel29).addComponent(jTextField23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel30).addComponent(jTextField24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel31).addComponent(jTextField25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel32).addComponent(jTextField26, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel33).addComponent(jTextField27, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel34).addComponent(jTextField28, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel35).addComponent(jTextField29, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel36).addComponent(jTextField30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel37).addComponent(jTextField31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel38).addComponent(jTextField32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel39).addComponent(jTextField33, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel40).addComponent(jTextField34, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel41).addComponent(jTextField35, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel42).addComponent(jTextField36, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel43).addComponent(jTextField37, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel44).addComponent(jTextField38, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel45).addComponent(jTextField39, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel46).addComponent(jTextField40, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel47).addComponent(jTextField41, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jScrollPane2.setViewportView(jPanel6);&#xD;
    javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);&#xD;
    jPanel3.setLayout(jPanel3Layout);&#xD;
    jPanel3Layout.setHorizontalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel3Layout.createSequentialGroup().addGap(24, 24, 24).addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 254, Short.MAX_VALUE).addContainerGap()));&#xD;
    jPanel3Layout.setVerticalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel3Layout.createSequentialGroup().addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE).addContainerGap()));&#xD;
    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());&#xD;
    getContentPane().setLayout(layout);&#xD;
    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(layout.createSequentialGroup().addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))));&#xD;
    layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(layout.createSequentialGroup().addContainerGap().addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)));&#xD;
    pack();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_M0SAQBUTEemIe6OhVnSywA" name="jbBackActionPerformed" specification="_M0QLEBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jbBackActionPerformed&#xD;
    close = false;&#xD;
    imp.deleteRoi();&#xD;
    MarkerSelection_3 s1i = new MarkerSelection_3(imp, m, darkbg, null, main);&#xD;
    BandManager bm = s1i.getBm();&#xD;
    bm.delete_without_asking(false);&#xD;
    if (m.finallanes != null) {&#xD;
        for (int i = 0; i &lt; m.finallanes.length; i++) {&#xD;
            int[] positionbands = m.finallanes[i].getPositionbands();&#xD;
            if (positionbands != null) {&#xD;
                for (int b : positionbands) {&#xD;
                    Roi r0 = m.finallanes[i].getRoi();&#xD;
                    int r0x = r0.getBounds().x;&#xD;
                    int r0y = r0.getBounds().y;&#xD;
                    int w = r0.getBounds().width;&#xD;
                    Rectangle r = new Rectangle(r0x, b - 1, w, 2);&#xD;
                    Roi r1 = rectangleintersectionroi(r0, r);&#xD;
                    r1.setFillColor(m.getColour());&#xD;
                    bm.add(imp, r1, 0, i);&#xD;
                    bm.showAll(0);&#xD;
                }&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    bm.requestFocus();&#xD;
    this.dispose();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_M0WRsBUTEemIe6OhVnSywA" name="jButton2ActionPerformed" specification="_M0T1cBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton2ActionPerformed&#xD;
    this.setAlwaysOnTop(false);&#xD;
    imp.getWindow().setAlwaysOnTop(false);&#xD;
    // If she chooses to create a new standard, she has to introduce a name,&#xD;
    // and the molecular wheights for the bands of the standard.&#xD;
    ArrayList&lt;String> names = readstandardsavailable();&#xD;
    double temp;&#xD;
    int fail = -1;&#xD;
    String newname = jTextField1.getText();&#xD;
    JTextField[] textFields = { jTextField2, jTextField3, jTextField4, jTextField5, jTextField6, jTextField7, jTextField8, jTextField9, jTextField10, jTextField11, jTextField12, jTextField13, jTextField14, jTextField15, jTextField16, jTextField17, jTextField18, jTextField19, jTextField20, jTextField21, jTextField22, jTextField23, jTextField24, jTextField25, jTextField26, jTextField27, jTextField28, jTextField29, jTextField30, jTextField31, jTextField32, jTextField33, jTextField34, jTextField35, jTextField36, jTextField37, jTextField38, jTextField39, jTextField40, jTextField41 };&#xD;
    if (names.contains(newname)) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;There is already a standard called &quot; + newname + &quot;.&quot;, &quot;Error&quot;, JOptionPane.ERROR_MESSAGE);&#xD;
        return;&#xD;
    }&#xD;
    if (newname.equals(&quot;&quot;)) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;The name of the standard should not be empty.&quot;, &quot;Error&quot;, JOptionPane.ERROR_MESSAGE);&#xD;
        return;&#xD;
    }&#xD;
    //            int[] indexes = indexesstandardlanes(m.finallanes);&#xD;
    double[] res = getvalues(textFields, m.finallanes[0].getPositionbands().length);&#xD;
    if (res == null) {&#xD;
        return;&#xD;
    }&#xD;
    if (!(sorted(res))) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;The values of the bands are not sorted.&quot;, &quot;Error&quot;, JOptionPane.ERROR_MESSAGE);&#xD;
        return;&#xD;
    }&#xD;
    try {&#xD;
        rm.close();&#xD;
        m.setMarker(newname);&#xD;
        save_standard(newname, res);&#xD;
    } catch (FileNotFoundException ex) {&#xD;
        Logger.getLogger(MarkerSelection_4.class.getName()).log(Level.SEVERE, null, ex);&#xD;
    } catch (UnsupportedEncodingException ex) {&#xD;
        Logger.getLogger(MarkerSelection_4.class.getName()).log(Level.SEVERE, null, ex);&#xD;
    }&#xD;
    m.finallanes[0].setStdpositionbands(res);&#xD;
    PleaseWait pw = new PleaseWait(this, false);&#xD;
    pw.setVisible(true);&#xD;
    pw.toFront();&#xD;
    this.dispose();&#xD;
    CurveCalibration cc = new CurveCalibration(intarraytodoublearray(m.finallanes[0].getPositionbands()), m.finallanes[0].getStdpositionbands(), m);&#xD;
    pw.dispose();&#xD;
    m.normalisation = true;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_M0ZVABUTEemIe6OhVnSywA" name="formWindowClosed" specification="_M0Xf0BUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_formWindowClosed&#xD;
    imp.changes = false;&#xD;
    imp.getWindow().setLocked(false);&#xD;
    imp.close();&#xD;
    main.enableall();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_M0dmcBUTEemIe6OhVnSywA" name="sorted" specification="_M0ajIBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    for (int i = 0; i &lt; res.length - 1; i++) {&#xD;
        if (res[i] &lt; res[i + 1]) {&#xD;
            return false;&#xD;
        }&#xD;
    }&#xD;
    return true;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_M0jGABUTEemIe6OhVnSywA" name="initiatenecessarytextFields" specification="_M0e0kBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    for (int i = n; i &lt; textFields.length; i++) {&#xD;
        textFields[i].setVisible(false);&#xD;
        labels[i].setVisible(false);&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_M0nXcBUTEemIe6OhVnSywA" name="disable_enable_textFields" specification="_M0kUIBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    for (int i = 0; i &lt; textFields.length; i++) {&#xD;
        textFields[i].setEnabled(enable);&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_M0s3ABUTEemIe6OhVnSywA" name="getvalues" specification="_M0n-gBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    double[] res = new double[n];&#xD;
    double temp;&#xD;
    for (int i = 0; i &lt; n; i++) {&#xD;
        try {&#xD;
            temp = Double.parseDouble(textFields[i].getText());&#xD;
        } catch (NumberFormatException e) {&#xD;
            JOptionPane.showMessageDialog(this, &quot;You must introduce numerical values.&quot;, &quot;Error&quot;, JOptionPane.ERROR_MESSAGE);&#xD;
            return null;&#xD;
        }&#xD;
        if (temp &lt; 0) {&#xD;
            JOptionPane.showMessageDialog(this, &quot;You must introduce positive values.&quot;, &quot;Error&quot;, JOptionPane.ERROR_MESSAGE);&#xD;
            return null;&#xD;
        }&#xD;
        res[i] = temp;&#xD;
    }&#xD;
    return res;&#xD;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_M0ATcBUTEemIe6OhVnSywA" name="MarkerSelection_4" visibility="public" method="_M0DWwRUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_M0DWwBUTEemIe6OhVnSywA" name="imp"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_M0DWwhUTEemIe6OhVnSywA" name="MarkerSelection_4" visibility="public" method="_M0KEcBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_M0FzABUTEemIe6OhVnSywA" name="imp"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_M0HBIBUTEemIe6OhVnSywA" name="m" type="_MEzrIBUTEemIe6OhVnSywA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_M0HoMBUTEemIe6OhVnSywA" name="darkbg">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_M0JdYBUTEemIe6OhVnSywA" name="main" type="_Gul0YBUTEemIe6OhVnSywA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_M0L5oBUTEemIe6OhVnSywA" name="initComponents" visibility="private" method="_M0OV4BUTEemIe6OhVnSywA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_M0QLEBUTEemIe6OhVnSywA" name="jbBackActionPerformed" visibility="private" method="_M0SAQBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_M0RZMBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_M0T1cBUTEemIe6OhVnSywA" name="jButton2ActionPerformed" visibility="private" method="_M0WRsBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_M0VDkBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_M0Xf0BUTEemIe6OhVnSywA" name="formWindowClosed" visibility="private" method="_M0ZVABUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_M0Yt8BUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_M0ajIBUTEemIe6OhVnSywA" name="sorted" visibility="private" isStatic="true" method="_M0dmcBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_M0bKMBUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_M0bxQBUTEemIe6OhVnSywA" name="res">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_M0cYUBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_M0c_YBUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_M0e0kBUTEemIe6OhVnSywA" name="initiatenecessarytextFields" visibility="private" method="_M0jGABUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_M0fboBUTEemIe6OhVnSywA" name="textFields">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_M0gCsBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_M0gCsRUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_M0gpwBUTEemIe6OhVnSywA" name="labels">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_M0hQ0BUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_M0h34BUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_M0ie8BUTEemIe6OhVnSywA" name="n">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_M0kUIBUTEemIe6OhVnSywA" name="disable_enable_textFields" visibility="private" method="_M0nXcBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_M0liQBUTEemIe6OhVnSywA" name="textFields">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_M0mJUBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_M0mJURUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_M0mwYBUTEemIe6OhVnSywA" name="enable">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_M0n-gBUTEemIe6OhVnSywA" name="getvalues" visibility="private" method="_M0s3ABUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_M0olkBUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_M0pMoBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_M0pzsBUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_M0qawBUTEemIe6OhVnSywA" name="textFields">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_M0rB0BUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_M0ro4BUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_M0sP8BUTEemIe6OhVnSywA" name="n">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_M1-pYBUTEemIe6OhVnSywA" name="MarkerSelection_3" visibility="public">
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M1_QcRUTEemIe6OhVnSywA" name="close" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_M2AekBUTEemIe6OhVnSywA" name="defaultValue">
                    <language>JAVA</language>
                    <body>true</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M2BFoBUTEemIe6OhVnSywA" name="imp" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M2CTwBUTEemIe6OhVnSywA" name="m" visibility="private" type="_MEzrIBUTEemIe6OhVnSywA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M2C60BUTEemIe6OhVnSywA" name="bm" visibility="private" type="_MEgJIBUTEemIe6OhVnSywA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M2EwABUTEemIe6OhVnSywA" name="darkbg" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M2F-IBUTEemIe6OhVnSywA" name="main" visibility="private" type="_Gul0YBUTEemIe6OhVnSywA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M2uQQRUTEemIe6OhVnSywA" name="buttonGroup1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M2uQQhUTEemIe6OhVnSywA" name="jButton1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M2u3UBUTEemIe6OhVnSywA" name="jButton2" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M2veYBUTEemIe6OhVnSywA" name="jButton3" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M2wFcBUTEemIe6OhVnSywA" name="jButton4" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M2xTkBUTEemIe6OhVnSywA" name="jButton5" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M2yhsBUTEemIe6OhVnSywA" name="jButton6" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M2zIwBUTEemIe6OhVnSywA" name="jButton8" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M20W4BUTEemIe6OhVnSywA" name="jButton9" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M21lABUTEemIe6OhVnSywA" name="jCheckBox1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M22zIBUTEemIe6OhVnSywA" name="jComboBox1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M24BQBUTEemIe6OhVnSywA" name="jLabel2" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M24oUBUTEemIe6OhVnSywA" name="jLabel4" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M25PYBUTEemIe6OhVnSywA" name="jLabel5" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M26dgBUTEemIe6OhVnSywA" name="jLabel6" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M27roBUTEemIe6OhVnSywA" name="jLabel7" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M285wBUTEemIe6OhVnSywA" name="jLabel8" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M29g0BUTEemIe6OhVnSywA" name="jPanel1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M2-u8BUTEemIe6OhVnSywA" name="jPanel2" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M2_9EBUTEemIe6OhVnSywA" name="jPanel3" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M3BLMBUTEemIe6OhVnSywA" name="jPanel4" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M3BLMRUTEemIe6OhVnSywA" name="jPanel5" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M3ByQBUTEemIe6OhVnSywA" name="jPanel6" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M3ByQRUTEemIe6OhVnSywA" name="jPanel7" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M3CZUBUTEemIe6OhVnSywA" name="jScrollPane1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M3CZURUTEemIe6OhVnSywA" name="jTextArea1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M3CZUhUTEemIe6OhVnSywA" name="jbBack" visibility="private" isUnique="false"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_M2JBcRUTEemIe6OhVnSywA" name="MarkerSelection_3" specification="_M2HMQBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    super();&#xD;
    initComponents();&#xD;
    this.imp = imp;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_M2PIEBUTEemIe6OhVnSywA" name="MarkerSelection_3" specification="_M2K2oBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    super();&#xD;
    initComponents();&#xD;
    this.imp = imp;&#xD;
    this.m = m;&#xD;
    this.darkbg = darkbg;&#xD;
    this.main = main;&#xD;
    if (bm == null) {&#xD;
        this.bm = new BandManager(m);&#xD;
        this.bm.setbgcheckboxstate(darkbg);&#xD;
        //        bm.auto_detect();&#xD;
        this.bm.setVisible(false);&#xD;
    } else {&#xD;
        this.bm = bm;&#xD;
    }&#xD;
    IJ.setTool(&quot;point&quot;);&#xD;
    this.bm.updateShowAll();&#xD;
    Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();&#xD;
    double width = screenSize.getWidth();&#xD;
    setVisible(true);&#xD;
    setLocation((int) width - 515, 0);&#xD;
    imp.getWindow().setAlwaysOnTop(true);&#xD;
    setAlwaysOnTop(true);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_M2Q9QRUTEemIe6OhVnSywA" name="getBm" specification="_M2QWMBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    return bm;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_M2SycBUTEemIe6OhVnSywA" name="initComponents" specification="_M2SLYBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    buttonGroup1 = new javax.swing.ButtonGroup();&#xD;
    jPanel4 = new javax.swing.JPanel();&#xD;
    jButton2 = new javax.swing.JButton();&#xD;
    jbBack = new javax.swing.JButton();&#xD;
    jPanel5 = new javax.swing.JPanel();&#xD;
    jLabel6 = new javax.swing.JLabel();&#xD;
    jLabel7 = new javax.swing.JLabel();&#xD;
    jLabel8 = new javax.swing.JLabel();&#xD;
    jLabel2 = new javax.swing.JLabel();&#xD;
    jLabel4 = new javax.swing.JLabel();&#xD;
    jPanel1 = new javax.swing.JPanel();&#xD;
    jPanel2 = new javax.swing.JPanel();&#xD;
    jScrollPane1 = new javax.swing.JScrollPane();&#xD;
    jTextArea1 = new javax.swing.JTextArea();&#xD;
    jPanel3 = new javax.swing.JPanel();&#xD;
    jCheckBox1 = new javax.swing.JCheckBox();&#xD;
    jPanel6 = new javax.swing.JPanel();&#xD;
    jButton1 = new javax.swing.JButton();&#xD;
    jButton3 = new javax.swing.JButton();&#xD;
    jButton8 = new javax.swing.JButton();&#xD;
    jButton9 = new javax.swing.JButton();&#xD;
    jLabel5 = new javax.swing.JLabel();&#xD;
    jComboBox1 = new javax.swing.JComboBox();&#xD;
    jPanel7 = new javax.swing.JPanel();&#xD;
    jButton5 = new javax.swing.JButton();&#xD;
    jButton6 = new javax.swing.JButton();&#xD;
    jButton4 = new javax.swing.JButton();&#xD;
    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);&#xD;
    setTitle(&quot;Image analysis&quot;);&#xD;
    setResizable(false);&#xD;
    addWindowListener(new java.awt.event.WindowAdapter() {&#xD;
&#xD;
        public void windowClosed(java.awt.event.WindowEvent evt) {&#xD;
            formWindowClosed(evt);&#xD;
        }&#xD;
    });&#xD;
    jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());&#xD;
    jButton2.setText(&quot;Next>&quot;);&#xD;
    jButton2.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton2ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jbBack.setText(&quot;&lt;Back&quot;);&#xD;
    jbBack.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbBackActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);&#xD;
    jPanel4.setLayout(jPanel4Layout);&#xD;
    jPanel4Layout.setHorizontalGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addComponent(jbBack).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButton2)));&#xD;
    jPanel4Layout.setVerticalGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jButton2).addComponent(jbBack))));&#xD;
    jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Steps&quot;)));&#xD;
    jPanel5.setForeground(new java.awt.Color(0, 17, 255));&#xD;
    jLabel6.setText(&quot;Step 1. Lane selection&quot;);&#xD;
    jLabel7.setText(&quot;Step 2. Band detection&quot;);&#xD;
    jLabel8.setText(&quot;Step 3. Normalisation&quot;);&#xD;
    jLabel2.setText(&quot;2.1. Global threshold&quot;);&#xD;
    jLabel4.setForeground(new java.awt.Color(0, 15, 255));&#xD;
    jLabel4.setText(&quot;2.2. Band picking&quot;);&#xD;
    javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);&#xD;
    jPanel5.setLayout(jPanel5Layout);&#xD;
    jPanel5Layout.setHorizontalGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel5Layout.createSequentialGroup().addContainerGap().addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel6).addComponent(jLabel7).addComponent(jLabel8).addGroup(jPanel5Layout.createSequentialGroup().addGap(12, 12, 12).addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel2).addComponent(jLabel4)))).addContainerGap(48, Short.MAX_VALUE)));&#xD;
    jPanel5Layout.setVerticalGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel5Layout.createSequentialGroup().addContainerGap().addComponent(jLabel6).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel7).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel2).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel4).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel8).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Help&quot;));&#xD;
    jTextArea1.setEditable(false);&#xD;
    jTextArea1.setColumns(20);&#xD;
    jTextArea1.setRows(5);&#xD;
    jTextArea1.setText(&quot;In this step, you can manually\npick the bands of the image. \nShortcuts are indicated between\nbrackets. To zoom in, press z and\nthen, left click on the image. \nTo zoom out, press z, and then \nright click on the image.&quot;);&#xD;
    jScrollPane1.setViewportView(jTextArea1);&#xD;
    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);&#xD;
    jPanel2.setLayout(jPanel2Layout);&#xD;
    jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 285, Short.MAX_VALUE));&#xD;
    jPanel2Layout.setVerticalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE));&#xD;
    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);&#xD;
    jPanel1.setLayout(jPanel1Layout);&#xD;
    jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));&#xD;
    jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup().addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)));&#xD;
    jCheckBox1.setText(&quot;Show histogram&quot;);&#xD;
    jCheckBox1.addChangeListener(new javax.swing.event.ChangeListener() {&#xD;
&#xD;
        public void stateChanged(javax.swing.event.ChangeEvent evt) {&#xD;
            jCheckBox1StateChanged(evt);&#xD;
        }&#xD;
    });&#xD;
    jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Edition tools&quot;));&#xD;
    jButton1.setText(&quot;Add band [a]&quot;);&#xD;
    jButton1.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton1ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jButton3.setText(&quot;Delete band [del]&quot;);&#xD;
    jButton3.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton3ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jButton8.setText(&quot;Undo [Ctrl + z]&quot;);&#xD;
    jButton8.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton8ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jButton9.setText(&quot;Redo [r]&quot;);&#xD;
    jButton9.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton9ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jLabel5.setText(&quot;Colour:&quot;);&#xD;
    jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { &quot;blue&quot;, &quot;red&quot;, &quot;green&quot;, &quot;magenta&quot;, &quot;cyan&quot;, &quot;yellow&quot;, &quot;orange&quot; }));&#xD;
    jComboBox1.addItemListener(new java.awt.event.ItemListener() {&#xD;
&#xD;
        public void itemStateChanged(java.awt.event.ItemEvent evt) {&#xD;
            jComboBox1ItemStateChanged(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);&#xD;
    jPanel6.setLayout(jPanel6Layout);&#xD;
    jPanel6Layout.setHorizontalGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(jPanel6Layout.createSequentialGroup().addComponent(jButton8).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButton9, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)).addGroup(jPanel6Layout.createSequentialGroup().addComponent(jLabel5).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jPanel6Layout.setVerticalGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel6Layout.createSequentialGroup().addComponent(jButton1).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButton3).addGap(8, 8, 8).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel5)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jButton8).addComponent(jButton9)).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Selection tools&quot;));&#xD;
    jButton5.setText(&quot;Zoom [z]&quot;);&#xD;
    jButton5.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton5ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jButton6.setText(&quot;Hand [h]&quot;);&#xD;
    jButton6.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton6ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jButton4.setText(&quot;Point tool [p]&quot;);&#xD;
    jButton4.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton4ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);&#xD;
    jPanel7.setLayout(jPanel7Layout);&#xD;
    jPanel7Layout.setHorizontalGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));&#xD;
    jPanel7Layout.setVerticalGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel7Layout.createSequentialGroup().addComponent(jButton5).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jButton6).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButton4).addContainerGap()));&#xD;
    javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);&#xD;
    jPanel3.setLayout(jPanel3Layout);&#xD;
    jPanel3Layout.setHorizontalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(jPanel3Layout.createSequentialGroup().addComponent(jCheckBox1).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jPanel3Layout.setVerticalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel3Layout.createSequentialGroup().addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jCheckBox1).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());&#xD;
    getContentPane().setLayout(layout);&#xD;
    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(layout.createSequentialGroup().addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))));&#xD;
    layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(layout.createSequentialGroup().addContainerGap().addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)));&#xD;
    pack();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_M2UnoRUTEemIe6OhVnSywA" name="jbBackActionPerformed" specification="_M2UAkBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jbBackActionPerformed&#xD;
    close = false;&#xD;
    int option = JOptionPane.showConfirmDialog(this, &quot;If you go back, the current band selection\n will be lost, do you want to go back?&quot;, &quot;Alert&quot;, JOptionPane.YES_NO_OPTION);&#xD;
    if (option == JOptionPane.YES_OPTION) {&#xD;
        imp.deleteRoi();&#xD;
        bm.dispose();&#xD;
        ImageWindow iw = imp.getWindow();&#xD;
        LaneManagerCanvas cc = new LaneManagerCanvas(imp);&#xD;
        ImageWindow iw2 = new ImageWindow(imp, cc);&#xD;
        iw.hide();&#xD;
        LaneManager lm = new LaneManager(m);&#xD;
        MarkerSelection_1 s = new MarkerSelection_1(imp, lm, m, main);&#xD;
        lm.delete_without_asking(false);&#xD;
        Roi[] lanes = m.getLanes();&#xD;
        if (lanes != null) {&#xD;
            for (Roi lane : lanes) {&#xD;
                lm.addRoi(lane);&#xD;
            }&#xD;
            if (getstandardlanes(m.finallanes) != null) {&#xD;
                lm.fix_standards(roisfromlanes(getstandardlanes(m.finallanes)));&#xD;
            }&#xD;
        }&#xD;
        lm.setLanesinfo(m.getLanesinfo());&#xD;
        this.dispose();&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_M2XD4BUTEemIe6OhVnSywA" name="jButton2ActionPerformed" specification="_M2V1wBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton2ActionPerformed&#xD;
    close = false;&#xD;
    bm.close();&#xD;
    MarkerSelection_4 s = new MarkerSelection_4(imp, m, darkbg, main);&#xD;
    this.dispose();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_M2ZgIBUTEemIe6OhVnSywA" name="jButton1ActionPerformed" specification="_M2YSABUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton1ActionPerformed&#xD;
    this.setAlwaysOnTop(false);&#xD;
    imp.getWindow().setAlwaysOnTop(false);&#xD;
    bm.add_band();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_M2b8YRUTEemIe6OhVnSywA" name="jButton3ActionPerformed" specification="_M2auQBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton3ActionPerformed&#xD;
    this.setAlwaysOnTop(false);&#xD;
    imp.getWindow().setAlwaysOnTop(false);&#xD;
    bm.delete(false);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_M2eYoBUTEemIe6OhVnSywA" name="jButton4ActionPerformed" specification="_M2dKgBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton4ActionPerformed&#xD;
    IJ.setTool(&quot;point&quot;);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_M2gN0RUTEemIe6OhVnSywA" name="jButton5ActionPerformed" specification="_M2fmwBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton5ActionPerformed&#xD;
    IJ.setTool(&quot;zoom&quot;);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_M2iqEBUTEemIe6OhVnSywA" name="jButton6ActionPerformed" specification="_M2hb8BUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton6ActionPerformed&#xD;
    IJ.setTool(&quot;hand&quot;);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_M2lGUBUTEemIe6OhVnSywA" name="jButton8ActionPerformed" specification="_M2j4MBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton8ActionPerformed&#xD;
    this.setAlwaysOnTop(false);&#xD;
    imp.getWindow().setAlwaysOnTop(false);&#xD;
    bm.undo();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_M2nikBUTEemIe6OhVnSywA" name="jButton9ActionPerformed" specification="_M2mUcBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton9ActionPerformed&#xD;
    this.setAlwaysOnTop(false);&#xD;
    imp.getWindow().setAlwaysOnTop(false);&#xD;
    bm.redo();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_M2pXwRUTEemIe6OhVnSywA" name="jCheckBox1StateChanged" specification="_M2oJoBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jCheckBox1StateChanged&#xD;
    this.setAlwaysOnTop(false);&#xD;
    imp.getWindow().setAlwaysOnTop(false);&#xD;
    bm.activatehistogramdisplay(jCheckBox1.isSelected());&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_M2r0ABUTEemIe6OhVnSywA" name="jComboBox1ItemStateChanged" specification="_M2ql4BUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jComboBox1ItemStateChanged&#xD;
    int colour = jComboBox1.getSelectedIndex();&#xD;
    Color c;&#xD;
    switch(colour) {&#xD;
        case BLUE:&#xD;
            c = Color.BLUE;&#xD;
            break;&#xD;
        case RED:&#xD;
            c = Color.RED;&#xD;
            break;&#xD;
        case GREEN:&#xD;
            c = Color.GREEN;&#xD;
            break;&#xD;
        case MAGENTA:&#xD;
            c = Color.MAGENTA;&#xD;
            break;&#xD;
        case CYAN:&#xD;
            c = Color.CYAN;&#xD;
            break;&#xD;
        case YELLOW:&#xD;
            c = Color.YELLOW;&#xD;
            break;&#xD;
        case ORANGE:&#xD;
            c = Color.ORANGE;&#xD;
            break;&#xD;
        default:&#xD;
            c = Color.BLUE;&#xD;
            break;&#xD;
    }&#xD;
    bm.change_colour(c);&#xD;
    bm.showAll(0);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_M2uQQBUTEemIe6OhVnSywA" name="formWindowClosed" specification="_M2tCIBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_formWindowClosed&#xD;
    if (close) {&#xD;
        imp.changes = false;&#xD;
        imp.getWindow().setLocked(false);&#xD;
        imp.close();&#xD;
        main.enableall();&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_M2HMQBUTEemIe6OhVnSywA" name="MarkerSelection_3" visibility="public" method="_M2JBcRUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_M2JBcBUTEemIe6OhVnSywA" name="imp"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_M2K2oBUTEemIe6OhVnSywA" name="MarkerSelection_3" visibility="public" method="_M2PIEBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_M2MEwBUTEemIe6OhVnSywA" name="imp"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_M2Mr0BUTEemIe6OhVnSywA" name="m" type="_MEzrIBUTEemIe6OhVnSywA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_M2NS4BUTEemIe6OhVnSywA" name="darkbg">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_M2N58BUTEemIe6OhVnSywA" name="bm" type="_MEgJIBUTEemIe6OhVnSywA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_M2OhABUTEemIe6OhVnSywA" name="main" type="_Gul0YBUTEemIe6OhVnSywA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_M2QWMBUTEemIe6OhVnSywA" name="getBm" visibility="public" method="_M2Q9QRUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_M2Q9QBUTEemIe6OhVnSywA" type="_MEgJIBUTEemIe6OhVnSywA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_M2SLYBUTEemIe6OhVnSywA" name="initComponents" visibility="private" method="_M2SycBUTEemIe6OhVnSywA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_M2UAkBUTEemIe6OhVnSywA" name="jbBackActionPerformed" visibility="private" method="_M2UnoRUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_M2UnoBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_M2V1wBUTEemIe6OhVnSywA" name="jButton2ActionPerformed" visibility="private" method="_M2XD4BUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_M2Wc0BUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_M2YSABUTEemIe6OhVnSywA" name="jButton1ActionPerformed" visibility="private" method="_M2ZgIBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_M2Y5EBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_M2auQBUTEemIe6OhVnSywA" name="jButton3ActionPerformed" visibility="private" method="_M2b8YRUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_M2b8YBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_M2dKgBUTEemIe6OhVnSywA" name="jButton4ActionPerformed" visibility="private" method="_M2eYoBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_M2dxkBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_M2fmwBUTEemIe6OhVnSywA" name="jButton5ActionPerformed" visibility="private" method="_M2gN0RUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_M2gN0BUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_M2hb8BUTEemIe6OhVnSywA" name="jButton6ActionPerformed" visibility="private" method="_M2iqEBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_M2iDABUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_M2j4MBUTEemIe6OhVnSywA" name="jButton8ActionPerformed" visibility="private" method="_M2lGUBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_M2kfQBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_M2mUcBUTEemIe6OhVnSywA" name="jButton9ActionPerformed" visibility="private" method="_M2nikBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_M2m7gBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_M2oJoBUTEemIe6OhVnSywA" name="jCheckBox1StateChanged" visibility="private" method="_M2pXwRUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_M2pXwBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_M2ql4BUTEemIe6OhVnSywA" name="jComboBox1ItemStateChanged" visibility="private" method="_M2r0ABUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_M2rM8BUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_M2tCIBUTEemIe6OhVnSywA" name="formWindowClosed" visibility="private" method="_M2uQQBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_M2tpMBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_M3H44BUTEemIe6OhVnSywA" name="MarkerSelection_1" visibility="public">
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M3If8RUTEemIe6OhVnSywA" name="close" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_M3If8hUTEemIe6OhVnSywA" name="defaultValue">
                    <language>JAVA</language>
                    <body>true</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M3JHABUTEemIe6OhVnSywA" name="imp" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M3JHARUTEemIe6OhVnSywA" name="lm" visibility="private" type="_MHgZ0BUTEemIe6OhVnSywA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M3JHAhUTEemIe6OhVnSywA" name="darkbg" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M3JHAxUTEemIe6OhVnSywA" name="m" visibility="private" type="_MEzrIBUTEemIe6OhVnSywA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M3JuEBUTEemIe6OhVnSywA" name="main" visibility="private" type="_Gul0YBUTEemIe6OhVnSywA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M3Rp5RUTEemIe6OhVnSywA" name="buttonGroup1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M3SQ8BUTEemIe6OhVnSywA" name="jButton1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M3SQ8RUTEemIe6OhVnSywA" name="jButton2" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M3SQ8hUTEemIe6OhVnSywA" name="jButton3" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M3S4ABUTEemIe6OhVnSywA" name="jButton7" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M3S4ARUTEemIe6OhVnSywA" name="jButton8" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M3S4AhUTEemIe6OhVnSywA" name="jComboBox1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M3S4AxUTEemIe6OhVnSywA" name="jLabel5" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M3S4BBUTEemIe6OhVnSywA" name="jLabel6" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M3TfEBUTEemIe6OhVnSywA" name="jLabel7" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M3TfERUTEemIe6OhVnSywA" name="jLabel8" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M3TfEhUTEemIe6OhVnSywA" name="jPanel1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M3TfExUTEemIe6OhVnSywA" name="jPanel2" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M3TfFBUTEemIe6OhVnSywA" name="jPanel3" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M3TfFRUTEemIe6OhVnSywA" name="jPanel4" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M3UGIBUTEemIe6OhVnSywA" name="jPanel5" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M3UGIRUTEemIe6OhVnSywA" name="jPanel6" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M3UGIhUTEemIe6OhVnSywA" name="jPanel7" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M3UGIxUTEemIe6OhVnSywA" name="jScrollPane1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M3UGJBUTEemIe6OhVnSywA" name="jTextArea1" visibility="private" isUnique="false"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_M3K8MhUTEemIe6OhVnSywA" name="MarkerSelection_1" specification="_M3JuERUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    super();&#xD;
    initComponents();&#xD;
    this.imp = imp;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_M3OmkBUTEemIe6OhVnSywA" name="MarkerSelection_1" specification="_M3LjQBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    super();&#xD;
    IJ.setTool(&quot;rectangle&quot;);&#xD;
    initComponents();&#xD;
    this.imp = imp;&#xD;
    this.m = m;&#xD;
    this.main = main;&#xD;
    this.darkbg = true;&#xD;
    if (lm == null) {&#xD;
        this.lm = new LaneManager(m);&#xD;
        this.lm.delete_without_asking(true);&#xD;
    } else {&#xD;
        this.lm = lm;&#xD;
    }&#xD;
    this.lm.setbgcheckboxstate(darkbg);&#xD;
    this.lm.updateShowAll();&#xD;
    Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();&#xD;
    double width = screenSize.getWidth();&#xD;
    setVisible(true);&#xD;
    setLocation((int) width - 515, 0);&#xD;
    imp.getWindow().setAlwaysOnTop(true);&#xD;
    setAlwaysOnTop(true);&#xD;
    toFront();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_M3OmkxUTEemIe6OhVnSywA" name="getLm" specification="_M3OmkRUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    return lm;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_M3PNoBUTEemIe6OhVnSywA" name="initComponents" specification="_M3OmlBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    buttonGroup1 = new javax.swing.ButtonGroup();&#xD;
    jPanel4 = new javax.swing.JPanel();&#xD;
    jButton2 = new javax.swing.JButton();&#xD;
    jPanel5 = new javax.swing.JPanel();&#xD;
    jLabel6 = new javax.swing.JLabel();&#xD;
    jLabel7 = new javax.swing.JLabel();&#xD;
    jLabel8 = new javax.swing.JLabel();&#xD;
    jPanel1 = new javax.swing.JPanel();&#xD;
    jPanel2 = new javax.swing.JPanel();&#xD;
    jScrollPane1 = new javax.swing.JScrollPane();&#xD;
    jTextArea1 = new javax.swing.JTextArea();&#xD;
    jPanel3 = new javax.swing.JPanel();&#xD;
    jPanel6 = new javax.swing.JPanel();&#xD;
    jButton1 = new javax.swing.JButton();&#xD;
    jButton3 = new javax.swing.JButton();&#xD;
    jLabel5 = new javax.swing.JLabel();&#xD;
    jComboBox1 = new javax.swing.JComboBox();&#xD;
    jPanel7 = new javax.swing.JPanel();&#xD;
    jButton7 = new javax.swing.JButton();&#xD;
    jButton8 = new javax.swing.JButton();&#xD;
    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);&#xD;
    setTitle(&quot;Image analysis&quot;);&#xD;
    setResizable(false);&#xD;
    addWindowListener(new java.awt.event.WindowAdapter() {&#xD;
&#xD;
        public void windowClosed(java.awt.event.WindowEvent evt) {&#xD;
            formWindowClosed(evt);&#xD;
        }&#xD;
    });&#xD;
    jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());&#xD;
    jButton2.setText(&quot;Next>&quot;);&#xD;
    jButton2.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton2ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);&#xD;
    jPanel4.setLayout(jPanel4Layout);&#xD;
    jPanel4Layout.setHorizontalGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addComponent(jButton2)));&#xD;
    jPanel4Layout.setVerticalGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addComponent(jButton2)));&#xD;
    jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Steps&quot;)));&#xD;
    jPanel5.setForeground(new java.awt.Color(0, 17, 255));&#xD;
    jLabel6.setForeground(new java.awt.Color(0, 15, 255));&#xD;
    jLabel6.setText(&quot;Step 1. Lane selection&quot;);&#xD;
    jLabel7.setText(&quot;Step 2. Band detection&quot;);&#xD;
    jLabel8.setText(&quot;Step 3. Normalisation&quot;);&#xD;
    javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);&#xD;
    jPanel5.setLayout(jPanel5Layout);&#xD;
    jPanel5Layout.setHorizontalGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel5Layout.createSequentialGroup().addContainerGap().addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel6).addComponent(jLabel7).addComponent(jLabel8)).addContainerGap(48, Short.MAX_VALUE)));&#xD;
    jPanel5Layout.setVerticalGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel5Layout.createSequentialGroup().addContainerGap().addComponent(jLabel6).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel7).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel8).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Help&quot;));&#xD;
    jTextArea1.setEditable(false);&#xD;
    jTextArea1.setColumns(20);&#xD;
    jTextArea1.setRows(5);&#xD;
    jTextArea1.setText(&quot;In this step, the lanes of the image\nhave been detected. You can edit\nthem using the above buttons. \n\nThe available shortcuts are \nindicated between brackets.&quot;);&#xD;
    jScrollPane1.setViewportView(jTextArea1);&#xD;
    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);&#xD;
    jPanel2.setLayout(jPanel2Layout);&#xD;
    jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 258, Short.MAX_VALUE));&#xD;
    jPanel2Layout.setVerticalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE));&#xD;
    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);&#xD;
    jPanel1.setLayout(jPanel1Layout);&#xD;
    jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));&#xD;
    jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup().addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)));&#xD;
    jPanel3.setBorder(null);&#xD;
    jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Edition tools&quot;));&#xD;
    jButton1.setText(&quot;Add lane [a]&quot;);&#xD;
    jButton1.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton1ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jButton3.setText(&quot;Delete lane&quot;);&#xD;
    jButton3.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton3ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jLabel5.setText(&quot;Colour:&quot;);&#xD;
    jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { &quot;blue&quot;, &quot;red&quot;, &quot;green&quot;, &quot;magenta&quot;, &quot;cyan&quot;, &quot;yellow&quot;, &quot;orange&quot; }));&#xD;
    jComboBox1.addItemListener(new java.awt.event.ItemListener() {&#xD;
&#xD;
        public void itemStateChanged(java.awt.event.ItemEvent evt) {&#xD;
            jComboBox1ItemStateChanged(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);&#xD;
    jPanel6.setLayout(jPanel6Layout);&#xD;
    jPanel6Layout.setHorizontalGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(jPanel6Layout.createSequentialGroup().addComponent(jLabel5).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jComboBox1, 0, 194, Short.MAX_VALUE)));&#xD;
    jPanel6Layout.setVerticalGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel6Layout.createSequentialGroup().addComponent(jButton1).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButton3).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel5).addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Selection tools&quot;));&#xD;
    jButton7.setText(&quot;Rectangle tool&quot;);&#xD;
    jButton7.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton7ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jButton8.setText(&quot;Polygon tool&quot;);&#xD;
    jButton8.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton8ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);&#xD;
    jPanel7.setLayout(jPanel7Layout);&#xD;
    jPanel7Layout.setHorizontalGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));&#xD;
    jPanel7Layout.setVerticalGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel7Layout.createSequentialGroup().addContainerGap().addComponent(jButton7).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButton8).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);&#xD;
    jPanel3.setLayout(jPanel3Layout);&#xD;
    jPanel3Layout.setHorizontalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));&#xD;
    jPanel3Layout.setVerticalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel3Layout.createSequentialGroup().addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());&#xD;
    getContentPane().setLayout(layout);&#xD;
    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(layout.createSequentialGroup().addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))));&#xD;
    layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(layout.createSequentialGroup().addContainerGap().addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)));&#xD;
    pack();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_M3P0sRUTEemIe6OhVnSywA" name="jButton2ActionPerformed" specification="_M3PNoRUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton2ActionPerformed&#xD;
    close = false;&#xD;
    if (lm.getCount() == 1) {&#xD;
        lm.close();&#xD;
        ImageWindow iw = imp.getWindow();&#xD;
        iw.setLocked(false);&#xD;
        BandManagerCanvas cc = new BandManagerCanvas(imp);&#xD;
        ImageWindow iw2 = new ImageWindow(imp, cc);&#xD;
        iw2.setLocked(true);&#xD;
        iw.dispose();&#xD;
        MarkerSelection_2 s = new MarkerSelection_2(imp, m, true, main);&#xD;
        this.dispose();&#xD;
    } else {&#xD;
        JOptionPane.showMessageDialog(this, &quot;You must select a reference lane.&quot;);&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_M3QbwBUTEemIe6OhVnSywA" name="jButton8ActionPerformed" specification="_M3P0shUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton8ActionPerformed&#xD;
    IJ.setTool(&quot;polygon&quot;);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_M3QbwxUTEemIe6OhVnSywA" name="jButton7ActionPerformed" specification="_M3QbwRUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton7ActionPerformed&#xD;
    IJ.setTool(&quot;rectangle&quot;);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_M3RC0RUTEemIe6OhVnSywA" name="jButton3ActionPerformed" specification="_M3QbxBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton3ActionPerformed&#xD;
    IJ.run(imp, &quot;8-bit&quot;, &quot;&quot;);&#xD;
    this.setAlwaysOnTop(false);&#xD;
    imp.getWindow().setAlwaysOnTop(false);&#xD;
    lm.delete_standard();&#xD;
    lm.delete(false);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_M3RC1BUTEemIe6OhVnSywA" name="jButton1ActionPerformed" specification="_M3RC0hUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton1ActionPerformed&#xD;
    IJ.run(imp, &quot;8-bit&quot;, &quot;&quot;);&#xD;
    this.setAlwaysOnTop(false);&#xD;
    imp.getWindow().setAlwaysOnTop(false);&#xD;
    if (lm.getCount() == 1) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;You have already added one marker lane.\n&quot; + &quot;Remove it, if you want to add a different one&quot;);&#xD;
    } else {&#xD;
        lm.runCommand(&quot;add&quot;);&#xD;
        lm.fix_standard();&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_M3Rp4RUTEemIe6OhVnSywA" name="jComboBox1ItemStateChanged" specification="_M3RC1RUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jComboBox1ItemStateChanged&#xD;
    this.setAlwaysOnTop(false);&#xD;
    imp.getWindow().setAlwaysOnTop(false);&#xD;
    int colour = jComboBox1.getSelectedIndex();&#xD;
    Color c;&#xD;
    switch(colour) {&#xD;
        case BLUE:&#xD;
            c = Color.BLUE;&#xD;
            break;&#xD;
        case RED:&#xD;
            c = Color.RED;&#xD;
            break;&#xD;
        case GREEN:&#xD;
            c = Color.GREEN;&#xD;
            break;&#xD;
        case MAGENTA:&#xD;
            c = Color.MAGENTA;&#xD;
            break;&#xD;
        case CYAN:&#xD;
            c = Color.CYAN;&#xD;
            break;&#xD;
        case YELLOW:&#xD;
            c = Color.YELLOW;&#xD;
            break;&#xD;
        case ORANGE:&#xD;
            c = Color.ORANGE;&#xD;
            break;&#xD;
        default:&#xD;
            c = Color.BLUE;&#xD;
            break;&#xD;
    }&#xD;
    lm.change_colour(c);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_M3Rp5BUTEemIe6OhVnSywA" name="formWindowClosed" specification="_M3Rp4hUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_formWindowClosed&#xD;
    if (close) {&#xD;
        imp.changes = false;&#xD;
        imp.getWindow().setLocked(false);&#xD;
        imp.close();&#xD;
        main.enableall();&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_M3JuERUTEemIe6OhVnSywA" name="MarkerSelection_1" visibility="public" method="_M3K8MhUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_M3K8MRUTEemIe6OhVnSywA" name="imp"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_M3LjQBUTEemIe6OhVnSywA" name="MarkerSelection_1" visibility="public" method="_M3OmkBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_M3N_gBUTEemIe6OhVnSywA" name="imp"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_M3N_gRUTEemIe6OhVnSywA" name="lm" type="_MHgZ0BUTEemIe6OhVnSywA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_M3N_ghUTEemIe6OhVnSywA" name="m" type="_MEzrIBUTEemIe6OhVnSywA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_M3N_gxUTEemIe6OhVnSywA" name="main" type="_Gul0YBUTEemIe6OhVnSywA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_M3OmkRUTEemIe6OhVnSywA" name="getLm" visibility="public" method="_M3OmkxUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_M3OmkhUTEemIe6OhVnSywA" type="_MHgZ0BUTEemIe6OhVnSywA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_M3OmlBUTEemIe6OhVnSywA" name="initComponents" visibility="private" method="_M3PNoBUTEemIe6OhVnSywA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_M3PNoRUTEemIe6OhVnSywA" name="jButton2ActionPerformed" visibility="private" method="_M3P0sRUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_M3P0sBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_M3P0shUTEemIe6OhVnSywA" name="jButton8ActionPerformed" visibility="private" method="_M3QbwBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_M3P0sxUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_M3QbwRUTEemIe6OhVnSywA" name="jButton7ActionPerformed" visibility="private" method="_M3QbwxUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_M3QbwhUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_M3QbxBUTEemIe6OhVnSywA" name="jButton3ActionPerformed" visibility="private" method="_M3RC0RUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_M3RC0BUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_M3RC0hUTEemIe6OhVnSywA" name="jButton1ActionPerformed" visibility="private" method="_M3RC1BUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_M3RC0xUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_M3RC1RUTEemIe6OhVnSywA" name="jComboBox1ItemStateChanged" visibility="private" method="_M3Rp4RUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_M3Rp4BUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_M3Rp4hUTEemIe6OhVnSywA" name="formWindowClosed" visibility="private" method="_M3Rp5BUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_M3Rp4xUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_M3WiYBUTEemIe6OhVnSywA" name="ViewMarkers" visibility="public">
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M3XJcRUTEemIe6OhVnSywA" name="firsttime" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_M3XJchUTEemIe6OhVnSywA" name="defaultValue">
                    <language>JAVA</language>
                    <body>true</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M3ZlsRUTEemIe6OhVnSywA" name="jLabel1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M3ZlshUTEemIe6OhVnSywA" name="jLabel2" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M3ZlsxUTEemIe6OhVnSywA" name="jLabel3" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M3ZltBUTEemIe6OhVnSywA" name="jScrollPane1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M3aMwBUTEemIe6OhVnSywA" name="jXImageView1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M3aMwRUTEemIe6OhVnSywA" name="jcbMarkers" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M3aMwhUTEemIe6OhVnSywA" name="jlmws" visibility="private" isUnique="false"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_M3YXkxUTEemIe6OhVnSywA" name="ViewMarkers" specification="_M3XJcxUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    super(parent, modal);&#xD;
    initComponents();&#xD;
    ArrayList&lt;String> stds = readstandardsavailable();&#xD;
    jcbMarkers.addItem(&quot;&quot;);&#xD;
    for (String s : stds) {&#xD;
        jcbMarkers.addItem(s);&#xD;
    }&#xD;
    firsttime = false;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_M3Y-oBUTEemIe6OhVnSywA" name="initComponents" specification="_M3YXlBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    jLabel1 = new javax.swing.JLabel();&#xD;
    jcbMarkers = new javax.swing.JComboBox();&#xD;
    jLabel2 = new javax.swing.JLabel();&#xD;
    jScrollPane1 = new javax.swing.JScrollPane();&#xD;
    jlmws = new javax.swing.JList();&#xD;
    jLabel3 = new javax.swing.JLabel();&#xD;
    jXImageView1 = new org.jdesktop.swingx.JXImageView();&#xD;
    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);&#xD;
    setModal(true);&#xD;
    setResizable(false);&#xD;
    jLabel1.setText(&quot;Marker:&quot;);&#xD;
    jcbMarkers.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jcbMarkersActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jLabel2.setText(&quot;Mws:&quot;);&#xD;
    jScrollPane1.setViewportView(jlmws);&#xD;
    jLabel3.setText(&quot;Migration Model:&quot;);&#xD;
    javax.swing.GroupLayout jXImageView1Layout = new javax.swing.GroupLayout(jXImageView1);&#xD;
    jXImageView1.setLayout(jXImageView1Layout);&#xD;
    jXImageView1Layout.setHorizontalGroup(jXImageView1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 0, Short.MAX_VALUE));&#xD;
    jXImageView1Layout.setVerticalGroup(jXImageView1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 0, Short.MAX_VALUE));&#xD;
    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());&#xD;
    getContentPane().setLayout(layout);&#xD;
    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addComponent(jLabel1).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jcbMarkers, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)).addGroup(layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel2).addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)).addGap(25, 25, 25).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addComponent(jLabel3).addGap(0, 396, Short.MAX_VALUE)).addComponent(jXImageView1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))).addContainerGap()));&#xD;
    layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel1).addComponent(jcbMarkers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel2).addComponent(jLabel3)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 315, Short.MAX_VALUE).addComponent(jXImageView1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)).addContainerGap()));&#xD;
    pack();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_M3Y-oxUTEemIe6OhVnSywA" name="jcbMarkersActionPerformed" specification="_M3Y-oRUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    if (!firsttime) {&#xD;
        String marker = (String) jcbMarkers.getSelectedItem();&#xD;
        try {&#xD;
            double[] mws = readstandardfromfile(marker);&#xD;
            DefaultListModel model = new DefaultListModel();&#xD;
            jlmws.setModel(model);&#xD;
            for (double d : mws) {&#xD;
                model.addElement(d);&#xD;
            }&#xD;
            double[] pos = readstandardposfromfile(marker);&#xD;
            double method = readstandardinfofromfile(marker)[2];&#xD;
            CurveFitter cf = new CurveFitter(pos, mws);&#xD;
            cf.doFit((int) method);&#xD;
            plot(cf);&#xD;
            ImagePlus imp = WindowManager.getCurrentImage();&#xD;
            jXImageView1.setImage(imp.getImage());&#xD;
            imp.close();&#xD;
        } catch (IOException ex) {&#xD;
            Logger.getLogger(ViewMarkers.class.getName()).log(Level.SEVERE, null, ex);&#xD;
        }&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_M3ZlsBUTEemIe6OhVnSywA" name="main" specification="_M3Y-pBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */&#xD;
    try {&#xD;
        for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {&#xD;
            if (&quot;Nimbus&quot;.equals(info.getName())) {&#xD;
                javax.swing.UIManager.setLookAndFeel(info.getClassName());&#xD;
                break;&#xD;
            }&#xD;
        }&#xD;
    } catch (ClassNotFoundException ex) {&#xD;
        java.util.logging.Logger.getLogger(ViewMarkers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);&#xD;
    } catch (InstantiationException ex) {&#xD;
        java.util.logging.Logger.getLogger(ViewMarkers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);&#xD;
    } catch (IllegalAccessException ex) {&#xD;
        java.util.logging.Logger.getLogger(ViewMarkers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);&#xD;
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {&#xD;
        java.util.logging.Logger.getLogger(ViewMarkers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);&#xD;
    }&#xD;
    //&lt;/editor-fold>&#xD;
    /* Create and display the dialog */&#xD;
    java.awt.EventQueue.invokeLater(new Runnable() {&#xD;
&#xD;
        public void run() {&#xD;
            ViewMarkers dialog = new ViewMarkers(new javax.swing.JFrame(), true);&#xD;
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {&#xD;
&#xD;
                @Override&#xD;
                public void windowClosing(java.awt.event.WindowEvent e) {&#xD;
                    System.exit(0);&#xD;
                }&#xD;
            });&#xD;
            dialog.setVisible(true);&#xD;
        }&#xD;
    });&#xD;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_M3XJcxUTEemIe6OhVnSywA" name="ViewMarkers" visibility="public" method="_M3YXkxUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_M3YXkRUTEemIe6OhVnSywA" name="parent"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_M3YXkhUTEemIe6OhVnSywA" name="modal">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_M3YXlBUTEemIe6OhVnSywA" name="initComponents" visibility="private" method="_M3Y-oBUTEemIe6OhVnSywA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_M3Y-oRUTEemIe6OhVnSywA" name="jcbMarkersActionPerformed" visibility="private" method="_M3Y-oxUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_M3Y-ohUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_M3Y-pBUTEemIe6OhVnSywA" name="main" visibility="public" isStatic="true" method="_M3ZlsBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_M3Y-pRUTEemIe6OhVnSywA" name="args"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_M3eeMBUTEemIe6OhVnSywA" name="MarkerSelection_2" visibility="public">
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M3eeMhUTEemIe6OhVnSywA" name="close" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_M3eeMxUTEemIe6OhVnSywA" name="defaultValue">
                    <language>JAVA</language>
                    <body>true</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M3fFQBUTEemIe6OhVnSywA" name="imp" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M3fFQRUTEemIe6OhVnSywA" name="bm" visibility="private" type="_MEgJIBUTEemIe6OhVnSywA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M3fFQhUTEemIe6OhVnSywA" name="darkbg" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M3fFQxUTEemIe6OhVnSywA" name="m" visibility="private" type="_MEzrIBUTEemIe6OhVnSywA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M3fFRBUTEemIe6OhVnSywA" name="main" visibility="private" type="_Gul0YBUTEemIe6OhVnSywA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M3pdUxUTEemIe6OhVnSywA" name="buttonGroup1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M3qEYBUTEemIe6OhVnSywA" name="jButton2" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M3qEYRUTEemIe6OhVnSywA" name="jComboBox1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M3qEYhUTEemIe6OhVnSywA" name="jLabel2" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M3qEYxUTEemIe6OhVnSywA" name="jLabel4" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M3qrcBUTEemIe6OhVnSywA" name="jLabel5" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M3qrcRUTEemIe6OhVnSywA" name="jLabel6" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M3rSgBUTEemIe6OhVnSywA" name="jLabel7" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M3rSgRUTEemIe6OhVnSywA" name="jLabel8" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M3rSghUTEemIe6OhVnSywA" name="jLabel9" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M3rSgxUTEemIe6OhVnSywA" name="jPanel1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M3r5kBUTEemIe6OhVnSywA" name="jPanel2" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M3r5kRUTEemIe6OhVnSywA" name="jPanel3" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M3r5khUTEemIe6OhVnSywA" name="jPanel4" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M3r5kxUTEemIe6OhVnSywA" name="jPanel5" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M3sgoBUTEemIe6OhVnSywA" name="jScrollPane1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M3sgoRUTEemIe6OhVnSywA" name="jSlider1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M3sgohUTEemIe6OhVnSywA" name="jTextArea1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_M3sgoxUTEemIe6OhVnSywA" name="jbBack" visibility="private" isUnique="false"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_M3gTYRUTEemIe6OhVnSywA" name="MarkerSelection_2" specification="_M3fFRRUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    super();&#xD;
    initComponents();&#xD;
    this.imp = imp;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_M3ivoBUTEemIe6OhVnSywA" name="MarkerSelection_2" specification="_M3gTYhUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    super();&#xD;
    initComponents();&#xD;
    this.imp = imp;&#xD;
    this.m = m;&#xD;
    this.main = main;&#xD;
    this.darkbg = darkbg;&#xD;
    IJ.setTool(&quot;point&quot;);&#xD;
    bm = new BandManager(m);&#xD;
    bm.setbgcheckboxstate(darkbg);&#xD;
    bm.setVisible(false);&#xD;
    Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();&#xD;
    double width = screenSize.getWidth();&#xD;
    setVisible(true);&#xD;
    setLocation((int) width - 515, 0);&#xD;
    imp.getWindow().setAlwaysOnTop(true);&#xD;
    setAlwaysOnTop(true);&#xD;
    toFront();&#xD;
    globalselectbands();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_M3ivoxUTEemIe6OhVnSywA" name="getBm" specification="_M3ivoRUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    return bm;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_M3ivpRUTEemIe6OhVnSywA" name="globalselectbands" specification="_M3ivpBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    double tolerance = jSlider1.getValue();&#xD;
    int colour = jComboBox1.getSelectedIndex();&#xD;
    Color c;&#xD;
    switch(colour) {&#xD;
        case BLUE:&#xD;
            c = Color.BLUE;&#xD;
            break;&#xD;
        case RED:&#xD;
            c = Color.RED;&#xD;
            break;&#xD;
        case GREEN:&#xD;
            c = Color.GREEN;&#xD;
            break;&#xD;
        case MAGENTA:&#xD;
            c = Color.MAGENTA;&#xD;
            break;&#xD;
        case CYAN:&#xD;
            c = Color.CYAN;&#xD;
            break;&#xD;
        case YELLOW:&#xD;
            c = Color.YELLOW;&#xD;
            break;&#xD;
        case ORANGE:&#xD;
            c = Color.ORANGE;&#xD;
            break;&#xD;
        default:&#xD;
            c = Color.BLUE;&#xD;
            break;&#xD;
    }&#xD;
    Prefs.verticalProfile = true;&#xD;
    bm.delete_without_asking(true);&#xD;
    bm.restart_bands();&#xD;
    ImageProcessor ip = imp.getProcessor();&#xD;
    for (int i = 0; i &lt; m.finallanes.length; i++) {&#xD;
        Roi r0 = m.finallanes[i].getRoi();&#xD;
        int x0 = r0.getBounds().x + r0.getBounds().width / 2;&#xD;
        int y0 = r0.getBounds().y;&#xD;
        int x1 = r0.getBounds().x + r0.getBounds().width / 2;&#xD;
        int y1 = r0.getBounds().y + r0.getBounds().height;&#xD;
        Line l0 = new Line(x0, y0, x1, y1);&#xD;
        l0.setWidth(15);&#xD;
        imp.setRoi(l0);&#xD;
        // Finding the peaks of the profile&#xD;
        if ((!darkbg &amp;&amp; !imp.isInvertedLut()) || imp.isInvertedLut()) {&#xD;
            ip.invert();&#xD;
        }&#xD;
        //ProfilePlot pp = new ProfilePlot(imp);&#xD;
        double[] profile = m.finallanes[i].getProfile();&#xD;
        if ((!darkbg &amp;&amp; !imp.isInvertedLut()) || imp.isInvertedLut()) {&#xD;
            ip.invert();&#xD;
        }&#xD;
        l0.setWidth(1);&#xD;
        int[] maxima = MaximumFinder.findMaxima(profile, 2, true);&#xD;
        int[] htt = higherthantolerance(maxima, profile, tolerance);&#xD;
        Arrays.sort(htt);&#xD;
        // Showing the lines&#xD;
        int r0x = r0.getBounds().x;&#xD;
        int r0y = r0.getBounds().y;&#xD;
        int w = r0.getBounds().width;&#xD;
        int[] positionsy = new int[htt.length];&#xD;
        for (int k = 0; k &lt; htt.length; k++) {&#xD;
            positionsy[k] = r0y + htt[k];&#xD;
        }&#xD;
        for (int j = 0; j &lt; htt.length; j++) {&#xD;
            /*Line line = new Line(r0x, r0y + htt[j], r0x + w, r0y + htt[j]);
                Line lineintersection = lineintersectionroi(r0,line);*/&#xD;
            Rectangle r = new Rectangle(r0x, r0y + htt[j], w, 2);&#xD;
            Roi r1 = rectangleintersectionroi(r0, r);&#xD;
            if (m.finallanes[i].isIsstandard()) {&#xD;
                if (colour == RED) {&#xD;
                    r1.setFillColor(Color.BLUE);&#xD;
                } else {&#xD;
                    r1.setFillColor(Color.RED);&#xD;
                }&#xD;
            } else {&#xD;
                r1.setFillColor(c);&#xD;
            }&#xD;
            bm.add(imp, r1, j, i);&#xD;
        //bm.add(imp, line, j);&#xD;
        }&#xD;
    //m.finallanes[i].setProfile(profile);&#xD;
    //m.finallanes[i].setPositionbands(positionsy);&#xD;
    }&#xD;
    bm.showAll(0);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_M3jWsxUTEemIe6OhVnSywA" name="lineintersectionroi" specification="_M3ivphUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    Line line;&#xD;
    int[] xpointsl = l.getPoints().xpoints;&#xD;
    int[] ypointsl = l.getPoints().ypoints;&#xD;
    int len = xpointsl.length;&#xD;
    Boolean inside = false;&#xD;
    int x0 = xpointsl[0];&#xD;
    int y0 = ypointsl[0];&#xD;
    int x1 = xpointsl[len - 1];&#xD;
    int y1 = ypointsl[len - 1];&#xD;
    for (int i = 1; i &lt; len; i++) {&#xD;
        if (!inside) {&#xD;
            if (r.contains(xpointsl[i], ypointsl[i])) {&#xD;
                x0 = xpointsl[i];&#xD;
                y0 = ypointsl[i];&#xD;
                inside = true;&#xD;
            }&#xD;
        } else {&#xD;
            if (!r.contains(xpointsl[i], ypointsl[i])) {&#xD;
                x1 = xpointsl[i];&#xD;
                y1 = ypointsl[i];&#xD;
                line = new Line(x0, y0, x1, y1);&#xD;
                return line;&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    line = new Line(x0, y0, x1, y1);&#xD;
    return line;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_M3kk0BUTEemIe6OhVnSywA" name="higherthantolerance" specification="_M3jWtBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    ArrayList&lt;Integer> res = new ArrayList&lt;Integer>();&#xD;
    for (int i = 0; i &lt; v.length; i++) {&#xD;
        if (p[v[i]] > tolerance) {&#xD;
            res.add(v[i]);&#xD;
        }&#xD;
    }&#xD;
    int[] ret = new int[res.size()];&#xD;
    for (int i = 0; i &lt; ret.length; i++) {&#xD;
        ret[i] = res.get(i);&#xD;
    }&#xD;
    return ret;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_M3lL5BUTEemIe6OhVnSywA" name="movingaveragefilter" specification="_M3kk0RUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    int lv = v.length;&#xD;
    double[] res = new double[lv];&#xD;
    // starting point &#xD;
    int sp;&#xD;
    // end point &#xD;
    int ep;&#xD;
    for (int i = 0; i &lt; lv; i++) {&#xD;
        sp = i - (avgpoints - 1) / 2;&#xD;
        if (sp &lt; 0) {&#xD;
            sp = 0;&#xD;
        }&#xD;
        ep = i + (avgpoints - 1) / 2;&#xD;
        if (ep >= lv) {&#xD;
            ep = lv - 1;&#xD;
        }&#xD;
        double partial_sum = 0;&#xD;
        for (int j = sp; j &lt;= ep; j++) {&#xD;
            partial_sum = partial_sum + v[j];&#xD;
        }&#xD;
        res[i] = partial_sum / (ep - sp + 1);&#xD;
    }&#xD;
    return res;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_M3maARUTEemIe6OhVnSywA" name="higherthanvalue" specification="_M3ly8BUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    if (from_end) {&#xD;
        int pos = 0;&#xD;
        for (int i = 0; i &lt; v.length; i++) {&#xD;
            if (value &lt; v[i]) {&#xD;
                return i;&#xD;
            }&#xD;
        }&#xD;
        return pos;&#xD;
    } else {&#xD;
        int pos = v.length - 1;&#xD;
        for (int i = v.length - 1; i >= 0; i--) {&#xD;
            if (value &lt; v[i]) {&#xD;
                return i;&#xD;
            }&#xD;
        }&#xD;
        return pos;&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_M3maBBUTEemIe6OhVnSywA" name="removeOverlay" specification="_M3maAhUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    if (imp != null &amp;&amp; imp.getCanvas() != null) {&#xD;
        setOverlay(imp, null);&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_M3nBExUTEemIe6OhVnSywA" name="setOverlay" specification="_M3nBEBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    if (imp == null) {&#xD;
        return;&#xD;
    }&#xD;
    ImageCanvas ic = imp.getCanvas();&#xD;
    if (ic == null) {&#xD;
        imp.setOverlay(overlay);&#xD;
        return;&#xD;
    }&#xD;
    ic.setShowAllList(overlay);&#xD;
    imp.draw();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_M3noIBUTEemIe6OhVnSywA" name="initComponents" specification="_M3nBFBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    buttonGroup1 = new javax.swing.ButtonGroup();&#xD;
    jPanel4 = new javax.swing.JPanel();&#xD;
    jButton2 = new javax.swing.JButton();&#xD;
    jbBack = new javax.swing.JButton();&#xD;
    jPanel5 = new javax.swing.JPanel();&#xD;
    jLabel6 = new javax.swing.JLabel();&#xD;
    jLabel7 = new javax.swing.JLabel();&#xD;
    jLabel8 = new javax.swing.JLabel();&#xD;
    jLabel2 = new javax.swing.JLabel();&#xD;
    jLabel4 = new javax.swing.JLabel();&#xD;
    jPanel1 = new javax.swing.JPanel();&#xD;
    jPanel2 = new javax.swing.JPanel();&#xD;
    jScrollPane1 = new javax.swing.JScrollPane();&#xD;
    jTextArea1 = new javax.swing.JTextArea();&#xD;
    jPanel3 = new javax.swing.JPanel();&#xD;
    jSlider1 = new javax.swing.JSlider();&#xD;
    jLabel5 = new javax.swing.JLabel();&#xD;
    jLabel9 = new javax.swing.JLabel();&#xD;
    jComboBox1 = new javax.swing.JComboBox();&#xD;
    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);&#xD;
    setTitle(&quot;Image analysis&quot;);&#xD;
    setResizable(false);&#xD;
    addWindowListener(new java.awt.event.WindowAdapter() {&#xD;
&#xD;
        public void windowClosed(java.awt.event.WindowEvent evt) {&#xD;
            formWindowClosed(evt);&#xD;
        }&#xD;
    });&#xD;
    jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());&#xD;
    jButton2.setText(&quot;Next>&quot;);&#xD;
    jButton2.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton2ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jbBack.setText(&quot;&lt;Back&quot;);&#xD;
    jbBack.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbBackActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);&#xD;
    jPanel4.setLayout(jPanel4Layout);&#xD;
    jPanel4Layout.setHorizontalGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addComponent(jbBack).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButton2)));&#xD;
    jPanel4Layout.setVerticalGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jButton2).addComponent(jbBack))));&#xD;
    jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Steps&quot;)));&#xD;
    jPanel5.setForeground(new java.awt.Color(0, 17, 255));&#xD;
    jLabel6.setText(&quot;Step 1. Lane selection&quot;);&#xD;
    jLabel7.setText(&quot;Step 2. Band detection&quot;);&#xD;
    jLabel8.setText(&quot;Step 3. Normalisation&quot;);&#xD;
    jLabel2.setForeground(new java.awt.Color(0, 15, 255));&#xD;
    jLabel2.setText(&quot;2.1. Global threshold&quot;);&#xD;
    jLabel4.setText(&quot;2.2. Band picking&quot;);&#xD;
    javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);&#xD;
    jPanel5.setLayout(jPanel5Layout);&#xD;
    jPanel5Layout.setHorizontalGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel5Layout.createSequentialGroup().addContainerGap().addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel6).addComponent(jLabel7).addComponent(jLabel8).addGroup(jPanel5Layout.createSequentialGroup().addGap(12, 12, 12).addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel2).addComponent(jLabel4)))).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jPanel5Layout.setVerticalGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel5Layout.createSequentialGroup().addContainerGap().addComponent(jLabel6).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel7).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel2).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel4).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel8).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Help&quot;));&#xD;
    jTextArea1.setEditable(false);&#xD;
    jTextArea1.setColumns(20);&#xD;
    jTextArea1.setRows(5);&#xD;
    jTextArea1.setText(&quot;In this step, you can fix a global \nthreshold to automatically locate\nthe bands of the marker. Just move\nthe above scrollbar.\n\nYou can also select the colour of\nthe bands.&quot;);&#xD;
    jScrollPane1.setViewportView(jTextArea1);&#xD;
    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);&#xD;
    jPanel2.setLayout(jPanel2Layout);&#xD;
    jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 294, Short.MAX_VALUE));&#xD;
    jPanel2Layout.setVerticalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE));&#xD;
    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);&#xD;
    jPanel1.setLayout(jPanel1Layout);&#xD;
    jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));&#xD;
    jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup().addContainerGap(120, Short.MAX_VALUE).addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)));&#xD;
    jSlider1.setMaximum(255);&#xD;
    jSlider1.setValue(150);&#xD;
    jSlider1.addChangeListener(new javax.swing.event.ChangeListener() {&#xD;
&#xD;
        public void stateChanged(javax.swing.event.ChangeEvent evt) {&#xD;
            jSlider1StateChanged(evt);&#xD;
        }&#xD;
    });&#xD;
    jLabel5.setText(&quot;Threshold:&quot;);&#xD;
    jLabel9.setText(&quot;Colour:&quot;);&#xD;
    jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { &quot;blue&quot;, &quot;red&quot;, &quot;green&quot;, &quot;magenta&quot;, &quot;cyan&quot;, &quot;yellow&quot;, &quot;orange&quot; }));&#xD;
    jComboBox1.addItemListener(new java.awt.event.ItemListener() {&#xD;
&#xD;
        public void itemStateChanged(java.awt.event.ItemEvent evt) {&#xD;
            jComboBox1ItemStateChanged(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);&#xD;
    jPanel3.setLayout(jPanel3Layout);&#xD;
    jPanel3Layout.setHorizontalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jSlider1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(jPanel3Layout.createSequentialGroup().addContainerGap().addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel3Layout.createSequentialGroup().addComponent(jLabel5).addGap(0, 0, Short.MAX_VALUE)).addGroup(jPanel3Layout.createSequentialGroup().addComponent(jLabel9).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))).addContainerGap()));&#xD;
    jPanel3Layout.setVerticalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel3Layout.createSequentialGroup().addGap(21, 21, 21).addComponent(jLabel5).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addGap(18, 18, 18).addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel9).addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());&#xD;
    getContentPane().setLayout(layout);&#xD;
    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(layout.createSequentialGroup().addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))));&#xD;
    layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(layout.createSequentialGroup().addContainerGap().addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)));&#xD;
    pack();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_M3oPMBUTEemIe6OhVnSywA" name="jbBackActionPerformed" specification="_M3noIRUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jbBackActionPerformed&#xD;
    close = false;&#xD;
    int option = JOptionPane.showConfirmDialog(this, &quot;If you go back, the current band selection\n will be lost, do you want to go back?&quot;, &quot;Alert&quot;, JOptionPane.YES_NO_OPTION);&#xD;
    if (option == JOptionPane.YES_OPTION) {&#xD;
        imp.deleteRoi();&#xD;
        bm.dispose();&#xD;
        ImageWindow iw = imp.getWindow();&#xD;
        iw.setLocked(false);&#xD;
        LaneManagerCanvas cc = new LaneManagerCanvas(imp);&#xD;
        ImageWindow iw2 = new ImageWindow(imp, cc);&#xD;
        iw2.setLocked(true);&#xD;
        iw.dispose();&#xD;
        LaneManager lm = new LaneManager(m);&#xD;
        MarkerSelection_1 s = new MarkerSelection_1(imp, null, m, main);&#xD;
        lm.delete_without_asking(false);&#xD;
        Roi[] lanes = m.getLanes();&#xD;
        if (lanes != null) {&#xD;
            for (Roi lane : lanes) {&#xD;
                lm.addRoi(lane);&#xD;
            }&#xD;
            if (getstandardlanes(m.finallanes) != null) {&#xD;
                lm.fix_standards(roisfromlanes(getstandardlanes(m.finallanes)));&#xD;
            }&#xD;
        }&#xD;
        this.dispose();&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_M3oPMxUTEemIe6OhVnSywA" name="jButton2ActionPerformed" specification="_M3oPMRUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton2ActionPerformed&#xD;
    close = false;&#xD;
    Color c = Color.BLUE;&#xD;
    switch(jComboBox1.getSelectedIndex()) {&#xD;
        case BLUE:&#xD;
            c = Color.BLUE;&#xD;
            break;&#xD;
        case RED:&#xD;
            c = Color.RED;&#xD;
            break;&#xD;
        case GREEN:&#xD;
            c = Color.GREEN;&#xD;
            break;&#xD;
        case MAGENTA:&#xD;
            c = Color.MAGENTA;&#xD;
            break;&#xD;
        case CYAN:&#xD;
            c = Color.CYAN;&#xD;
            break;&#xD;
        case YELLOW:&#xD;
            c = Color.YELLOW;&#xD;
            break;&#xD;
        case ORANGE:&#xD;
            c = Color.ORANGE;&#xD;
            break;&#xD;
        default:&#xD;
            c = Color.BLUE;&#xD;
            break;&#xD;
    }&#xD;
    MarkerSelection_3 s = new MarkerSelection_3(imp, m, darkbg, bm, main);&#xD;
    this.dispose();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_M3o2QRUTEemIe6OhVnSywA" name="jSlider1StateChanged" specification="_M3oPNBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jSlider1StateChanged&#xD;
    globalselectbands();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_M3o2RBUTEemIe6OhVnSywA" name="jComboBox1ItemStateChanged" specification="_M3o2QhUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jComboBox1ItemStateChanged&#xD;
    globalselectbands();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_M3pdUhUTEemIe6OhVnSywA" name="formWindowClosed" specification="_M3pdUBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_formWindowClosed&#xD;
    if (close) {&#xD;
        imp.changes = false;&#xD;
        imp.getWindow().setLocked(false);&#xD;
        imp.close();&#xD;
        main.enableall();&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_M3fFRRUTEemIe6OhVnSywA" name="MarkerSelection_2" visibility="public" method="_M3gTYRUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_M3gTYBUTEemIe6OhVnSywA" name="imp"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_M3gTYhUTEemIe6OhVnSywA" name="MarkerSelection_2" visibility="public" method="_M3ivoBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_M3iIkBUTEemIe6OhVnSywA" name="imp"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_M3iIkRUTEemIe6OhVnSywA" name="m" type="_MEzrIBUTEemIe6OhVnSywA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_M3iIkhUTEemIe6OhVnSywA" name="darkbg">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_M3iIkxUTEemIe6OhVnSywA" name="main" type="_Gul0YBUTEemIe6OhVnSywA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_M3ivoRUTEemIe6OhVnSywA" name="getBm" visibility="public" method="_M3ivoxUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_M3ivohUTEemIe6OhVnSywA" type="_MEgJIBUTEemIe6OhVnSywA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_M3ivpBUTEemIe6OhVnSywA" name="globalselectbands" visibility="private" method="_M3ivpRUTEemIe6OhVnSywA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_M3ivphUTEemIe6OhVnSywA" name="lineintersectionroi" visibility="private" method="_M3jWsxUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_M3jWsBUTEemIe6OhVnSywA" direction="return"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_M3jWsRUTEemIe6OhVnSywA" name="r"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_M3jWshUTEemIe6OhVnSywA" name="l"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_M3jWtBUTEemIe6OhVnSywA" name="higherthantolerance" visibility="private" method="_M3kk0BUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_M3jWtRUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_M3jWthUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_M3jWtxUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_M3j9wBUTEemIe6OhVnSywA" name="v">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_M3j9wRUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_M3j9whUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_M3j9wxUTEemIe6OhVnSywA" name="p">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_M3j9xBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_M3j9xRUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_M3j9xhUTEemIe6OhVnSywA" name="tolerance">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_M3kk0RUTEemIe6OhVnSywA" name="movingaveragefilter" visibility="private" method="_M3lL5BUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_M3kk0hUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_M3kk0xUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_M3kk1BUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_M3lL4BUTEemIe6OhVnSywA" name="v">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_M3lL4RUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_M3lL4hUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_M3lL4xUTEemIe6OhVnSywA" name="avgpoints">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_M3ly8BUTEemIe6OhVnSywA" name="higherthanvalue" visibility="private" method="_M3maARUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_M3ly8RUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_M3ly8hUTEemIe6OhVnSywA" name="v">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_M3ly8xUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_M3ly9BUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_M3ly9RUTEemIe6OhVnSywA" name="value">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_M3maABUTEemIe6OhVnSywA" name="from_end">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_M3maAhUTEemIe6OhVnSywA" name="removeOverlay" visibility="private" method="_M3maBBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_M3maAxUTEemIe6OhVnSywA" name="imp"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_M3nBEBUTEemIe6OhVnSywA" name="setOverlay" visibility="private" method="_M3nBExUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_M3nBERUTEemIe6OhVnSywA" name="imp"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_M3nBEhUTEemIe6OhVnSywA" name="overlay"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_M3nBFBUTEemIe6OhVnSywA" name="initComponents" visibility="private" method="_M3noIBUTEemIe6OhVnSywA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_M3noIRUTEemIe6OhVnSywA" name="jbBackActionPerformed" visibility="private" method="_M3oPMBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_M3noIhUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_M3oPMRUTEemIe6OhVnSywA" name="jButton2ActionPerformed" visibility="private" method="_M3oPMxUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_M3oPMhUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_M3oPNBUTEemIe6OhVnSywA" name="jSlider1StateChanged" visibility="private" method="_M3o2QRUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_M3o2QBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_M3o2QhUTEemIe6OhVnSywA" name="jComboBox1ItemStateChanged" visibility="private" method="_M3o2RBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_M3o2QxUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_M3pdUBUTEemIe6OhVnSywA" name="formWindowClosed" visibility="private" method="_M3pdUhUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_M3pdURUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
              </packagedElement>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_OxDO8BUTEemIe6OhVnSywA" name="OptionsMenu">
              <packagedElement xmi:type="uml:Class" xmi:id="_OxEdEBUTEemIe6OhVnSywA" name="Viewer3D" visibility="public">
                <ownedAttribute xmi:type="uml:Property" xmi:id="_OxR4cBUTEemIe6OhVnSywA" name="buttonGroup1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_OxTGkBUTEemIe6OhVnSywA" name="jComboLanes" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_OxUUsBUTEemIe6OhVnSywA" name="jRadio3dlane" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_OxU7wBUTEemIe6OhVnSywA" name="jRadio3dwhole" visibility="private" isUnique="false"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OxG5UBUTEemIe6OhVnSywA" name="Viewer3D" specification="_OxFEIBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    initComponents();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OxHgYBUTEemIe6OhVnSywA" name="initComponents" specification="_OxG5URUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    buttonGroup1 = new javax.swing.ButtonGroup();&#xD;
    jRadio3dwhole = new javax.swing.JRadioButton();&#xD;
    jRadio3dlane = new javax.swing.JRadioButton();&#xD;
    jComboLanes = new javax.swing.JComboBox();&#xD;
    buttonGroup1.add(jRadio3dwhole);&#xD;
    jRadio3dwhole.setSelected(true);&#xD;
    jRadio3dwhole.setText(&quot;3D View of the whole image&quot;);&#xD;
    jRadio3dwhole.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jRadio3dwholeActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    buttonGroup1.add(jRadio3dlane);&#xD;
    jRadio3dlane.setText(&quot;3D View of the lane:&quot;);&#xD;
    jRadio3dlane.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jRadio3dlaneActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jComboLanes.setEnabled(false);&#xD;
    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);&#xD;
    this.setLayout(layout);&#xD;
    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jRadio3dwhole).addGroup(layout.createSequentialGroup().addComponent(jRadio3dlane).addGap(29, 29, 29).addComponent(jComboLanes, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addComponent(jRadio3dwhole).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jRadio3dlane).addComponent(jComboLanes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OxHgYxUTEemIe6OhVnSywA" name="jRadio3dwholeActionPerformed" specification="_OxHgYRUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jRadio3dwholeActionPerformed&#xD;
    if (jRadio3dwhole.isSelected()) {&#xD;
        jComboLanes.setEnabled(false);&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OxIHchUTEemIe6OhVnSywA" name="jRadio3dlaneActionPerformed" specification="_OxIHcBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jRadio3dlaneActionPerformed&#xD;
    if (jRadio3dlane.isSelected()) {&#xD;
        jComboLanes.setEnabled(true);&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OxIHdBUTEemIe6OhVnSywA" name="disablelaneoption" specification="_OxIHcxUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    jRadio3dlane.setEnabled(false);&#xD;
    jComboLanes.setEnabled(false);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OxLx0BUTEemIe6OhVnSywA" name="setlistoflanes" specification="_OxJVkBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    for (String l : lanes) {&#xD;
        jComboLanes.addItem(l);&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OxNnARUTEemIe6OhVnSywA" name="iswhole3dselected" specification="_OxM_8BUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    return jRadio3dwhole.isSelected();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OxQDQBUTEemIe6OhVnSywA" name="getselection" specification="_OxO1IBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    return jComboLanes.getSelectedIndex();&#xD;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_OxFEIBUTEemIe6OhVnSywA" name="Viewer3D" visibility="public" method="_OxG5UBUTEemIe6OhVnSywA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_OxG5URUTEemIe6OhVnSywA" name="initComponents" visibility="private" method="_OxHgYBUTEemIe6OhVnSywA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_OxHgYRUTEemIe6OhVnSywA" name="jRadio3dwholeActionPerformed" visibility="private" method="_OxHgYxUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_OxHgYhUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_OxIHcBUTEemIe6OhVnSywA" name="jRadio3dlaneActionPerformed" visibility="private" method="_OxIHchUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_OxIHcRUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_OxIHcxUTEemIe6OhVnSywA" name="disablelaneoption" visibility="public" method="_OxIHdBUTEemIe6OhVnSywA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_OxJVkBUTEemIe6OhVnSywA" name="setlistoflanes" visibility="public" method="_OxLx0BUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_OxKjsBUTEemIe6OhVnSywA" name="lanes">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OxLKwBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OxLKwRUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_OxM_8BUTEemIe6OhVnSywA" name="iswhole3dselected" visibility="public" method="_OxNnARUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_OxNnABUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_OxO1IBUTEemIe6OhVnSywA" name="getselection" visibility="public" method="_OxQDQBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_OxPcMBUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_OxWw8BUTEemIe6OhVnSywA" name="SimilarityTable" visibility="public">
                <ownedAttribute xmi:type="uml:Property" xmi:id="_OxXYABUTEemIe6OhVnSywA" name="data" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OxYmIBUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OxZNMBUTEemIe6OhVnSywA" value="*"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_OxZNMRUTEemIe6OhVnSywA" name="method" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_OxabUBUTEemIe6OhVnSywA" name="labels" visibility="private" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OxbpcBUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OxcQgBUTEemIe6OhVnSywA" value="*"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OxhJABUTEemIe6OhVnSywA" name="SimilarityTable" specification="_Oxc3kBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    this.data = data;&#xD;
    this.method = method;&#xD;
    this.labels = labels;&#xD;
    showTable();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Oxi-MBUTEemIe6OhVnSywA" name="showTable" specification="_OxiXIBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    if (data == null || data.length == 0) {&#xD;
        IJ.error(&quot;This option is only available if you have previously &quot; + &quot;constructed a dendrogram.&quot;);&#xD;
    } else {&#xD;
        ResultsTable rt = new ResultsTable();&#xD;
        for (int i = 0; i &lt; labels.length; i++) {&#xD;
            rt.setHeading(i, labels[i]);&#xD;
        }&#xD;
        for (int i = 0; i &lt; data.length; i++) {&#xD;
            rt.incrementCounter();&#xD;
            rt.addLabel(labels[i]);&#xD;
        }&#xD;
        for (int i = 0; i &lt; data.length; i++) {&#xD;
            for (int j = 0; j &lt; data[i].length; j++) {&#xD;
                rt.setValue(i, j, data[i][j]);&#xD;
            }&#xD;
        }&#xD;
        String show = &quot;Similarity Table. Method: &quot;;&#xD;
        switch(method) {&#xD;
            case 0:&#xD;
                show = show + &quot;DICE&quot;;&#xD;
                break;&#xD;
            case 1:&#xD;
                show = show + &quot;Jaccard&quot;;&#xD;
                break;&#xD;
            case 2:&#xD;
                show = show + &quot;Jeffrey&quot;;&#xD;
                break;&#xD;
            case 3:&#xD;
                show = show + &quot;Ochiai&quot;;&#xD;
                break;&#xD;
            case 4:&#xD;
                show = show + &quot;Band Difference&quot;;&#xD;
                break;&#xD;
            case 5:&#xD;
                show = show + &quot;Pearson Correlation&quot;;&#xD;
                break;&#xD;
            case 6:&#xD;
                show = show + &quot;Cosine Correlation&quot;;&#xD;
                break;&#xD;
            case 7:&#xD;
                show = show + &quot;Euclidean Distance&quot;;&#xD;
                break;&#xD;
            case 8:&#xD;
                show = show + &quot;Manhattan Distance&quot;;&#xD;
                break;&#xD;
            default:&#xD;
                show = show + &quot;Pearson Correlation&quot;;&#xD;
                break;&#xD;
        }&#xD;
        rt.show(show);&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Oxc3kBUTEemIe6OhVnSywA" name="SimilarityTable" visibility="public" method="_OxhJABUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_OxeFsBUTEemIe6OhVnSywA" name="data">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OxeswBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OxeswRUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_OxfT0BUTEemIe6OhVnSywA" name="method">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Oxf64BUTEemIe6OhVnSywA" name="labels">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Oxgh8BUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Oxgh8RUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_OxiXIBUTEemIe6OhVnSywA" name="showTable" visibility="private" method="_Oxi-MBUTEemIe6OhVnSywA"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_OxnPoBUTEemIe6OhVnSywA" name="ModifyStandards" visibility="public">
                <ownedAttribute xmi:type="uml:Property" xmi:id="_OyMecBUTEemIe6OhVnSywA" name="jButtonAdd" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_OyNskBUTEemIe6OhVnSywA" name="jButtonDelete" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_OyPhwBUTEemIe6OhVnSywA" name="jButtonDeletevalue" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_OyQI0BUTEemIe6OhVnSywA" name="jButtonNew" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_OyR-ABUTEemIe6OhVnSywA" name="jButtonRecover" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_OyTMIBUTEemIe6OhVnSywA" name="jButtonSave" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_OyUaQBUTEemIe6OhVnSywA" name="jLabel1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_OyVoYBUTEemIe6OhVnSywA" name="jLabel2" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_OyW2gBUTEemIe6OhVnSywA" name="jList1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_OyYEoBUTEemIe6OhVnSywA" name="jListStds" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_OyZ50BUTEemIe6OhVnSywA" name="jScrollPane1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_OybH8BUTEemIe6OhVnSywA" name="jScrollPane2" visibility="private" isUnique="false"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OxrhEBUTEemIe6OhVnSywA" name="ModifyStandards" specification="_OxpE0BUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    initComponents();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Oxt9UBUTEemIe6OhVnSywA" name="initComponents" specification="_OxsvMBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    jScrollPane1 = new javax.swing.JScrollPane();&#xD;
    jListStds = new javax.swing.JList();&#xD;
    jLabel1 = new javax.swing.JLabel();&#xD;
    jLabel2 = new javax.swing.JLabel();&#xD;
    jScrollPane2 = new javax.swing.JScrollPane();&#xD;
    jList1 = new javax.swing.JList();&#xD;
    jButtonDelete = new javax.swing.JButton();&#xD;
    jButtonAdd = new javax.swing.JButton();&#xD;
    jButtonSave = new javax.swing.JButton();&#xD;
    jButtonDeletevalue = new javax.swing.JButton();&#xD;
    jButtonNew = new javax.swing.JButton();&#xD;
    jButtonRecover = new javax.swing.JButton();&#xD;
    jListStds.addMouseListener(new java.awt.event.MouseAdapter() {&#xD;
&#xD;
        public void mouseClicked(java.awt.event.MouseEvent evt) {&#xD;
            jListStdsMouseClicked(evt);&#xD;
        }&#xD;
    });&#xD;
    jScrollPane1.setViewportView(jListStds);&#xD;
    jLabel1.setText(&quot;Standard name:&quot;);&#xD;
    jLabel2.setText(&quot;Values:&quot;);&#xD;
    jScrollPane2.setViewportView(jList1);&#xD;
    jButtonDelete.setText(&quot;Delete Standard&quot;);&#xD;
    jButtonDelete.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButtonDeleteActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jButtonAdd.setText(&quot;Add Value&quot;);&#xD;
    jButtonAdd.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButtonAddActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jButtonSave.setText(&quot;Save Standard&quot;);&#xD;
    jButtonSave.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButtonSaveActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jButtonDeletevalue.setText(&quot;Delete Value&quot;);&#xD;
    jButtonDeletevalue.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButtonDeletevalueActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jButtonNew.setText(&quot;New Standard&quot;);&#xD;
    jButtonNew.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButtonNewActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jButtonRecover.setText(&quot;Recover Standard&quot;);&#xD;
    jButtonRecover.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButtonRecoverActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);&#xD;
    this.setLayout(layout);&#xD;
    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel1).addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)).addGap(30, 30, 30).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel2).addGroup(layout.createSequentialGroup().addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jButtonDeletevalue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jButtonNew, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false).addComponent(jButtonAdd, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jButtonSave, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jButtonDelete, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)).addComponent(jButtonRecover, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)))).addContainerGap()));&#xD;
    layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel1).addComponent(jLabel2)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false).addComponent(jScrollPane1).addGroup(layout.createSequentialGroup().addComponent(jButtonNew).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButtonDelete).addGap(4, 4, 4).addComponent(jButtonRecover).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButtonSave).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButtonAdd).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButtonDeletevalue)).addComponent(jScrollPane2)).addContainerGap()));&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OxyOwBUTEemIe6OhVnSywA" name="jButtonDeleteActionPerformed" specification="_OxvygBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButtonDeleteActionPerformed&#xD;
    try {&#xD;
        int pos = jListStds.getSelectedIndex();&#xD;
        DefaultListModel listmodelstd = (DefaultListModel) jListStds.getModel();&#xD;
        String name = (String) listmodelstd.getElementAt(pos);&#xD;
        deletestandard(name);&#xD;
        addstandards();&#xD;
    } catch (IOException ex) {&#xD;
        Logger.getLogger(ModifyStandards.class.getName()).log(Level.SEVERE, null, ex);&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ox1SEBUTEemIe6OhVnSywA" name="jButtonAddActionPerformed" specification="_Oxzc4BUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButtonAddActionPerformed&#xD;
    int pos = jListStds.getSelectedIndex();&#xD;
    if (pos != -1) {&#xD;
        double value = IJ.getNumber(&quot;Introduce a value:&quot;, 0);&#xD;
        DefaultListModel listmodel = (DefaultListModel) jList1.getModel();&#xD;
        if (value > 0) {&#xD;
            insertsort(listmodel, value);&#xD;
        } else {&#xD;
            IJ.error(&quot;The value must be higher than 0.&quot;);&#xD;
        }&#xD;
    } else {&#xD;
        IJ.error(&quot;First, select a standard.&quot;);&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ox3uUBUTEemIe6OhVnSywA" name="jButtonDeletevalueActionPerformed" specification="_Ox2gMBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButtonDeletevalueActionPerformed&#xD;
    int pos = jList1.getSelectedIndex();&#xD;
    DefaultListModel listmodel = (DefaultListModel) jList1.getModel();&#xD;
    if (pos == -1) {&#xD;
        IJ.error(&quot;You have not selected any element.&quot;);&#xD;
    } else {&#xD;
        listmodel.removeElementAt(pos);&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ox6xoBUTEemIe6OhVnSywA" name="jButtonNewActionPerformed" specification="_Ox48cBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButtonNewActionPerformed&#xD;
    int n = (int) IJ.getNumber(&quot;Introduce the number of lanes of the standard:&quot;, 5);&#xD;
    try {&#xD;
        createStandard(n);&#xD;
        addstandards();&#xD;
    } catch (FileNotFoundException ex) {&#xD;
        Logger.getLogger(ModifyStandards.class.getName()).log(Level.SEVERE, null, ex);&#xD;
    } catch (UnsupportedEncodingException ex) {&#xD;
        Logger.getLogger(ModifyStandards.class.getName()).log(Level.SEVERE, null, ex);&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ox9N4BUTEemIe6OhVnSywA" name="jListStdsMouseClicked" specification="_Ox7_wBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jListStdsMouseClicked&#xD;
    try {&#xD;
        int pos = jListStds.getSelectedIndex();&#xD;
        DefaultListModel listmodelstd = (DefaultListModel) jListStds.getModel();&#xD;
        String name = (String) listmodelstd.getElementAt(pos);&#xD;
        double[] values = readstandardfromfile(name);&#xD;
        initjlist1();&#xD;
        DefaultListModel listmodel = (DefaultListModel) jList1.getModel();&#xD;
        listmodel.removeAllElements();&#xD;
        for (double v : values) {&#xD;
            listmodel.addElement(v);&#xD;
        }&#xD;
    } catch (IOException ex) {&#xD;
        Logger.getLogger(ModifyStandards.class.getName()).log(Level.SEVERE, null, ex);&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ox_qIBUTEemIe6OhVnSywA" name="jButtonSaveActionPerformed" specification="_Ox-cABUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButtonSaveActionPerformed&#xD;
    try {&#xD;
        int pos = jListStds.getSelectedIndex();&#xD;
        if (pos != -1) {&#xD;
            DefaultListModel listmodelstd = (DefaultListModel) jListStds.getModel();&#xD;
            String name = (String) listmodelstd.getElementAt(pos);&#xD;
            DefaultListModel listmodel = (DefaultListModel) jList1.getModel();&#xD;
            double[] values = new double[listmodel.getSize()];&#xD;
            for (int i = 0; i &lt; listmodel.getSize(); i++) {&#xD;
                values[i] = (Double) listmodel.get(i);&#xD;
            }&#xD;
            save_standard(name, values);&#xD;
        } else {&#xD;
            IJ.error(&quot;Select a standard first.&quot;);&#xD;
        }&#xD;
    } catch (FileNotFoundException ex) {&#xD;
        Logger.getLogger(ModifyStandards.class.getName()).log(Level.SEVERE, null, ex);&#xD;
    } catch (UnsupportedEncodingException ex) {&#xD;
        Logger.getLogger(ModifyStandards.class.getName()).log(Level.SEVERE, null, ex);&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OyCtcBUTEemIe6OhVnSywA" name="jButtonRecoverActionPerformed" specification="_OyA4QBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButtonRecoverActionPerformed&#xD;
    ArrayList&lt;String> availablestd = readstandardsremoved();&#xD;
    if (availablestd.size() != 0) {&#xD;
        boolean[] res = recoverstandards(availablestd);&#xD;
        if (res == null || res.length == 0) {&#xD;
        } else {&#xD;
            for (int i = 0; i &lt; res.length; i++) {&#xD;
                if (res[i]) {&#xD;
                    try {&#xD;
                        recoverstandard(availablestd.get(i));&#xD;
                    } catch (IOException ex) {&#xD;
                        Logger.getLogger(ModifyStandards.class.getName()).log(Level.SEVERE, null, ex);&#xD;
                    }&#xD;
                }&#xD;
            }&#xD;
            addstandards();&#xD;
        }&#xD;
    } else {&#xD;
        IJ.error(&quot;You have not removed any standard previously.&quot;);&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OyEioBUTEemIe6OhVnSywA" name="initboth" specification="_OyD7kBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    jList1.setModel(new DefaultListModel());&#xD;
    jListStds.setModel(new DefaultListModel());&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OyFwwBUTEemIe6OhVnSywA" name="initjlist1" specification="_OyFJsBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    jList1.setModel(new DefaultListModel());&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OyHl8BUTEemIe6OhVnSywA" name="addstandards" specification="_OyG-4BUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    initboth();&#xD;
    ArrayList&lt;String> availablestd = readstandardsavailable();&#xD;
    DefaultListModel listmodel = (DefaultListModel) jListStds.getModel();&#xD;
    listmodel.removeAllElements();&#xD;
    for (String std : availablestd) {&#xD;
        listmodel.addElement(std);&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OyLQUBUTEemIe6OhVnSywA" name="insertsort" specification="_OyI0EBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    boolean last = true;&#xD;
    int i = 0;&#xD;
    while (i &lt; listmodel.getSize() &amp; last) {&#xD;
        if ((Double) listmodel.elementAt(i) &lt; value) {&#xD;
            last = false;&#xD;
        } else {&#xD;
            i++;&#xD;
        }&#xD;
    }&#xD;
    if (last) {&#xD;
        listmodel.addElement(value);&#xD;
    } else {&#xD;
        listmodel.add(i, value);&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_OxpE0BUTEemIe6OhVnSywA" name="ModifyStandards" visibility="public" method="_OxrhEBUTEemIe6OhVnSywA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_OxsvMBUTEemIe6OhVnSywA" name="initComponents" visibility="private" method="_Oxt9UBUTEemIe6OhVnSywA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_OxvygBUTEemIe6OhVnSywA" name="jButtonDeleteActionPerformed" visibility="private" method="_OxyOwBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_OxxnsBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Oxzc4BUTEemIe6OhVnSywA" name="jButtonAddActionPerformed" visibility="private" method="_Ox1SEBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Ox0D8BUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Ox2gMBUTEemIe6OhVnSywA" name="jButtonDeletevalueActionPerformed" visibility="private" method="_Ox3uUBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Ox3HQBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Ox48cBUTEemIe6OhVnSywA" name="jButtonNewActionPerformed" visibility="private" method="_Ox6xoBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Ox6KkBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Ox7_wBUTEemIe6OhVnSywA" name="jListStdsMouseClicked" visibility="private" method="_Ox9N4BUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Ox8m0BUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Ox-cABUTEemIe6OhVnSywA" name="jButtonSaveActionPerformed" visibility="private" method="_Ox_qIBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Ox_DEBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_OyA4QBUTEemIe6OhVnSywA" name="jButtonRecoverActionPerformed" visibility="private" method="_OyCtcBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_OyBfUBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_OyD7kBUTEemIe6OhVnSywA" name="initboth" visibility="private" method="_OyEioBUTEemIe6OhVnSywA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_OyFJsBUTEemIe6OhVnSywA" name="initjlist1" visibility="private" method="_OyFwwBUTEemIe6OhVnSywA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_OyG-4BUTEemIe6OhVnSywA" name="addstandards" visibility="public" method="_OyHl8BUTEemIe6OhVnSywA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_OyI0EBUTEemIe6OhVnSywA" name="insertsort" visibility="private" method="_OyLQUBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_OyJbIBUTEemIe6OhVnSywA" name="listmodel"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_OyKpQBUTEemIe6OhVnSywA" name="value">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
              </packagedElement>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_Oyc9IBUTEemIe6OhVnSywA" name="Protocols">
              <packagedElement xmi:type="uml:Class" xmi:id="_OyeLQBUTEemIe6OhVnSywA" name="Protocols" visibility="public">
                <ownedAttribute xmi:type="uml:Property" xmi:id="_OykR4BUTEemIe6OhVnSywA" name="jButtonDefault" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_OykR4RUTEemIe6OhVnSywA" name="jButtonDefaultProtocol" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Oyk48BUTEemIe6OhVnSywA" name="jButtonDeleteProtocol" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Oyk48RUTEemIe6OhVnSywA" name="jButtonEditProtocol" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_OylgABUTEemIe6OhVnSywA" name="jButtonNewProtocol" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_OylgARUTEemIe6OhVnSywA" name="jButtonNoProtocol" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_OylgAhUTEemIe6OhVnSywA" name="jLabel1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_OymHEBUTEemIe6OhVnSywA" name="jList1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_OymHERUTEemIe6OhVnSywA" name="jScrollPane1" visibility="private" isUnique="false"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OygngBUTEemIe6OhVnSywA" name="Protocols" specification="_OyfZYBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    initComponents();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OyicsBUTEemIe6OhVnSywA" name="initComponents" specification="_Oyh1oBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    jLabel1 = new javax.swing.JLabel();&#xD;
    jScrollPane1 = new javax.swing.JScrollPane();&#xD;
    jList1 = new javax.swing.JList();&#xD;
    jButtonNewProtocol = new javax.swing.JButton();&#xD;
    jButtonEditProtocol = new javax.swing.JButton();&#xD;
    jButtonDeleteProtocol = new javax.swing.JButton();&#xD;
    jButtonDefault = new javax.swing.JButton();&#xD;
    jButtonNoProtocol = new javax.swing.JButton();&#xD;
    jButtonDefaultProtocol = new javax.swing.JButton();&#xD;
    jLabel1.setText(&quot;Protocols:&quot;);&#xD;
    jScrollPane1.setViewportView(jList1);&#xD;
    jButtonNewProtocol.setText(&quot;New Protocol&quot;);&#xD;
    jButtonEditProtocol.setText(&quot;Edit Protocol&quot;);&#xD;
    jButtonDeleteProtocol.setText(&quot;Delete Protocol&quot;);&#xD;
    jButtonDefault.setText(&quot;Use Protocol by default&quot;);&#xD;
    jButtonNoProtocol.setText(&quot;No Protocol by default&quot;);&#xD;
    jButtonDefaultProtocol.setText(&quot;Default Protocol&quot;);&#xD;
    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);&#xD;
    this.setLayout(layout);&#xD;
    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel1).addGroup(layout.createSequentialGroup().addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false).addComponent(jButtonEditProtocol, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jButtonDeleteProtocol, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jButtonDefaultProtocol, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jButtonNoProtocol, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jButtonDefault, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jButtonNewProtocol, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addComponent(jLabel1).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false).addGroup(layout.createSequentialGroup().addComponent(jButtonNewProtocol).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButtonEditProtocol).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButtonDeleteProtocol).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButtonDefaultProtocol).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButtonDefault).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButtonNoProtocol)).addComponent(jScrollPane1)).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Oyjq0RUTEemIe6OhVnSywA" name="addprotocols" specification="_Oyjq0BUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_OyfZYBUTEemIe6OhVnSywA" name="Protocols" visibility="public" method="_OygngBUTEemIe6OhVnSywA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Oyh1oBUTEemIe6OhVnSywA" name="initComponents" visibility="private" method="_OyicsBUTEemIe6OhVnSywA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Oyjq0BUTEemIe6OhVnSywA" name="addprotocols" visibility="public" method="_Oyjq0RUTEemIe6OhVnSywA"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_OyojUBUTEemIe6OhVnSywA" name="ProtocolPanel" visibility="public">
                <ownedAttribute xmi:type="uml:Property" xmi:id="_OyuC4xUTEemIe6OhVnSywA" name="jButtonAdd" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Oyup8BUTEemIe6OhVnSywA" name="jButtonDelete" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Oyup8RUTEemIe6OhVnSywA" name="jCheckBoxAutoAdjust" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Oyup8hUTEemIe6OhVnSywA" name="jCheckBoxBackground" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Oyup8xUTEemIe6OhVnSywA" name="jCheckBoxFilter" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_OyvRABUTEemIe6OhVnSywA" name="jCheckBoxFingerprint" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_OyvRARUTEemIe6OhVnSywA" name="jCheckBoxInvert" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_OyvRAhUTEemIe6OhVnSywA" name="jCheckBoxLightBg" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Oyv4EBUTEemIe6OhVnSywA" name="jCheckBoxNormalise" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Oyv4ERUTEemIe6OhVnSywA" name="jComboBoxCurve" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Oyv4EhUTEemIe6OhVnSywA" name="jComboBoxDendrogram" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Oyv4ExUTEemIe6OhVnSywA" name="jComboBoxFilter" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_OywfIBUTEemIe6OhVnSywA" name="jComboBoxOutput" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_OywfIRUTEemIe6OhVnSywA" name="jComboBoxSimilarity" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_OywfIhUTEemIe6OhVnSywA" name="jComboBoxStandard" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_OyxGMBUTEemIe6OhVnSywA" name="jLabel1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_OyxGMRUTEemIe6OhVnSywA" name="jLabel10" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_OyxGMhUTEemIe6OhVnSywA" name="jLabel3" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_OyxGMxUTEemIe6OhVnSywA" name="jLabel4" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_OyxtQBUTEemIe6OhVnSywA" name="jLabel5" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_OyyUUBUTEemIe6OhVnSywA" name="jLabel6" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_OyyUURUTEemIe6OhVnSywA" name="jLabel7" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_OyyUUhUTEemIe6OhVnSywA" name="jLabel8" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Oyy7YBUTEemIe6OhVnSywA" name="jLabel9" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Oyy7YRUTEemIe6OhVnSywA" name="jList1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Oyy7YhUTEemIe6OhVnSywA" name="jPanel1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_OyzicBUTEemIe6OhVnSywA" name="jPanel3" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_OyzicRUTEemIe6OhVnSywA" name="jPanel4" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_OyzichUTEemIe6OhVnSywA" name="jScrollPane1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Oy0JgBUTEemIe6OhVnSywA" name="jTextFieldBackground" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Oy0JgRUTEemIe6OhVnSywA" name="jTextFieldName" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Oy0JghUTEemIe6OhVnSywA" name="jTextFieldTolerance" visibility="private" isUnique="false"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Oyq_kBUTEemIe6OhVnSywA" name="ProtocolPanel" specification="_OypKYRUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    initComponents();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OyrmoBUTEemIe6OhVnSywA" name="initComponents" specification="_Oyq_kRUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    jLabel1 = new javax.swing.JLabel();&#xD;
    jTextFieldName = new javax.swing.JTextField();&#xD;
    jPanel1 = new javax.swing.JPanel();&#xD;
    jCheckBoxInvert = new javax.swing.JCheckBox();&#xD;
    jCheckBoxBackground = new javax.swing.JCheckBox();&#xD;
    jTextFieldBackground = new javax.swing.JTextField();&#xD;
    jCheckBoxAutoAdjust = new javax.swing.JCheckBox();&#xD;
    jCheckBoxFilter = new javax.swing.JCheckBox();&#xD;
    jComboBoxFilter = new javax.swing.JComboBox();&#xD;
    jCheckBoxLightBg = new javax.swing.JCheckBox();&#xD;
    jPanel3 = new javax.swing.JPanel();&#xD;
    jLabel3 = new javax.swing.JLabel();&#xD;
    jComboBoxStandard = new javax.swing.JComboBox();&#xD;
    jLabel4 = new javax.swing.JLabel();&#xD;
    jScrollPane1 = new javax.swing.JScrollPane();&#xD;
    jList1 = new javax.swing.JList();&#xD;
    jButtonAdd = new javax.swing.JButton();&#xD;
    jButtonDelete = new javax.swing.JButton();&#xD;
    jLabel5 = new javax.swing.JLabel();&#xD;
    jComboBoxCurve = new javax.swing.JComboBox();&#xD;
    jCheckBoxNormalise = new javax.swing.JCheckBox();&#xD;
    jPanel4 = new javax.swing.JPanel();&#xD;
    jCheckBoxFingerprint = new javax.swing.JCheckBox();&#xD;
    jLabel6 = new javax.swing.JLabel();&#xD;
    jComboBoxSimilarity = new javax.swing.JComboBox();&#xD;
    jLabel7 = new javax.swing.JLabel();&#xD;
    jTextFieldTolerance = new javax.swing.JTextField();&#xD;
    jLabel8 = new javax.swing.JLabel();&#xD;
    jLabel9 = new javax.swing.JLabel();&#xD;
    jComboBoxDendrogram = new javax.swing.JComboBox();&#xD;
    jLabel10 = new javax.swing.JLabel();&#xD;
    jComboBoxOutput = new javax.swing.JComboBox();&#xD;
    jLabel1.setText(&quot;Name:&quot;);&#xD;
    jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Preprocessing&quot;));&#xD;
    jCheckBoxInvert.setText(&quot;Invert colours&quot;);&#xD;
    jCheckBoxBackground.setText(&quot;Background subtraction&quot;);&#xD;
    jCheckBoxBackground.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jCheckBoxBackgroundActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jTextFieldBackground.setText(&quot;50&quot;);&#xD;
    jTextFieldBackground.setEnabled(false);&#xD;
    jCheckBoxAutoAdjust.setText(&quot;Auto-Adjust Brightness/Contrast&quot;);&#xD;
    jCheckBoxFilter.setText(&quot;Apply Filter&quot;);&#xD;
    jCheckBoxFilter.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jCheckBoxFilterActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jComboBoxFilter.setModel(new javax.swing.DefaultComboBoxModel(new String[] { &quot;Mean&quot;, &quot;Minimum&quot;, &quot;Maximum&quot;, &quot;Variance&quot;, &quot;Median&quot;, &quot;Gaussian&quot; }));&#xD;
    jComboBoxFilter.setEnabled(false);&#xD;
    jCheckBoxLightBg.setText(&quot;Image with light background&quot;);&#xD;
    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);&#xD;
    jPanel1.setLayout(jPanel1Layout);&#xD;
    jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel1Layout.createSequentialGroup().addContainerGap().addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel1Layout.createSequentialGroup().addComponent(jCheckBoxFilter).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jComboBoxFilter, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)).addGroup(jPanel1Layout.createSequentialGroup().addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel1Layout.createSequentialGroup().addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false).addComponent(jCheckBoxInvert, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jCheckBoxBackground, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jTextFieldBackground, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)).addComponent(jCheckBoxAutoAdjust).addComponent(jCheckBoxLightBg)).addGap(0, 0, Short.MAX_VALUE))).addContainerGap()));&#xD;
    jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel1Layout.createSequentialGroup().addContainerGap().addComponent(jCheckBoxInvert).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jCheckBoxBackground).addComponent(jTextFieldBackground, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jCheckBoxAutoAdjust).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jCheckBoxFilter).addComponent(jComboBoxFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jCheckBoxLightBg).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Normalisation&quot;));&#xD;
    jLabel3.setText(&quot;Select Standard:&quot;);&#xD;
    jComboBoxStandard.setEnabled(false);&#xD;
    jLabel4.setText(&quot;Reference lanes:&quot;);&#xD;
    jList1.setEnabled(false);&#xD;
    jScrollPane1.setViewportView(jList1);&#xD;
    jButtonAdd.setText(&quot;Add&quot;);&#xD;
    jButtonAdd.setEnabled(false);&#xD;
    jButtonDelete.setText(&quot;Delete&quot;);&#xD;
    jButtonDelete.setEnabled(false);&#xD;
    jLabel5.setText(&quot;Curve type:&quot;);&#xD;
    jComboBoxCurve.setModel(new javax.swing.DefaultComboBoxModel(new String[] { &quot;Log&quot;, &quot;y = a+b*ln(x-c)&quot;, &quot;Rodbard&quot;, &quot;Gaussian&quot;, &quot;Straight Line&quot;, &quot;2nd Degree Polynomial&quot;, &quot;3rd Degree Polynomial&quot;, &quot;4th Degree Polynomial&quot;, &quot;Exponential&quot;, &quot;Power&quot;, &quot;Gamma Variate&quot;, &quot;Rodbard (NIH Image)&quot;, &quot;Exponential with Offset&quot;, &quot;Exponential Recovery&quot;, &quot;Inverse Rodbard&quot;, &quot;Exponential (linear regression)&quot;, &quot;Power (linear regression)&quot;, &quot;5th Degree Polynomial&quot;, &quot;6th Degree Polynomial&quot;, &quot;7th Degree Polynomial&quot;, &quot;8th Degree Polynomial&quot;, &quot;Gaussian (no offset)&quot;, &quot;Exponential Recovery (no offset)&quot;, &quot;Chapman-Richards&quot; }));&#xD;
    jComboBoxCurve.setEnabled(false);&#xD;
    jCheckBoxNormalise.setText(&quot;Normalise the Gel&quot;);&#xD;
    jCheckBoxNormalise.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jCheckBoxNormaliseActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);&#xD;
    jPanel3.setLayout(jPanel3Layout);&#xD;
    jPanel3Layout.setHorizontalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel3Layout.createSequentialGroup().addContainerGap().addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jCheckBoxNormalise, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(jPanel3Layout.createSequentialGroup().addComponent(jLabel3).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jComboBoxStandard, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)).addGroup(jPanel3Layout.createSequentialGroup().addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addComponent(jLabel4).addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false).addComponent(jButtonAdd, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jButtonDelete, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)).addComponent(jLabel5)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE).addComponent(jComboBoxCurve, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))).addContainerGap()));&#xD;
    jPanel3Layout.setVerticalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel3Layout.createSequentialGroup().addContainerGap().addComponent(jCheckBoxNormalise).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel3).addComponent(jComboBoxStandard, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false).addGroup(jPanel3Layout.createSequentialGroup().addComponent(jLabel4).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButtonAdd).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButtonDelete)).addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jComboBoxCurve, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel5)).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Fingerprint Comparison&quot;));&#xD;
    jCheckBoxFingerprint.setText(&quot;Compare the lanes of the gel&quot;);&#xD;
    jCheckBoxFingerprint.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jCheckBoxFingerprintActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jLabel6.setText(&quot;Similarity Matrix:&quot;);&#xD;
    jComboBoxSimilarity.setModel(new javax.swing.DefaultComboBoxModel(new String[] { &quot;Dice&quot;, &quot;Jaccard&quot;, &quot;Band Difference&quot;, &quot;Jeffrey's X&quot;, &quot;Ochiai&quot;, &quot;Pearson correlation&quot;, &quot;Cosine coefficient&quot;, &quot;Euclidean distance&quot;, &quot;Manhattan distance&quot; }));&#xD;
    jComboBoxSimilarity.setEnabled(false);&#xD;
    jLabel7.setText(&quot;Tolerance:&quot;);&#xD;
    jTextFieldTolerance.setText(&quot;3&quot;);&#xD;
    jTextFieldTolerance.setEnabled(false);&#xD;
    jLabel8.setText(&quot;%&quot;);&#xD;
    jLabel9.setText(&quot;Dendrogram method:&quot;);&#xD;
    jComboBoxDendrogram.setModel(new javax.swing.DefaultComboBoxModel(new String[] { &quot;UPGMA&quot;, &quot;UPGMC&quot;, &quot;Ward&quot;, &quot;Single linkage&quot;, &quot;Complete linkage&quot;, &quot;Mean linkage&quot; }));&#xD;
    jComboBoxDendrogram.setEnabled(false);&#xD;
    jLabel10.setText(&quot;Output:&quot;);&#xD;
    jComboBoxOutput.setModel(new javax.swing.DefaultComboBoxModel(new String[] { &quot;Dendrogram + Images + Bands&quot;, &quot;Dendrogram + Images&quot;, &quot;Dendrogram + Bands&quot;, &quot;Dendrogram&quot; }));&#xD;
    jComboBoxOutput.setEnabled(false);&#xD;
    javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);&#xD;
    jPanel4.setLayout(jPanel4Layout);&#xD;
    jPanel4Layout.setHorizontalGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel4Layout.createSequentialGroup().addContainerGap().addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel4Layout.createSequentialGroup().addComponent(jCheckBoxFingerprint).addGap(0, 0, Short.MAX_VALUE)).addGroup(jPanel4Layout.createSequentialGroup().addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addComponent(jLabel10).addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel4Layout.createSequentialGroup().addGap(32, 32, 32).addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addComponent(jLabel6).addComponent(jLabel7))).addComponent(jLabel9))).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jComboBoxSimilarity, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jComboBoxDendrogram, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(jPanel4Layout.createSequentialGroup().addComponent(jTextFieldTolerance, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel8).addGap(0, 0, Short.MAX_VALUE)).addComponent(jComboBoxOutput, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))).addContainerGap()));&#xD;
    jPanel4Layout.setVerticalGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel4Layout.createSequentialGroup().addContainerGap().addComponent(jCheckBoxFingerprint).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel6).addComponent(jComboBoxSimilarity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel7).addComponent(jTextFieldTolerance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel8)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jComboBoxDendrogram, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel9)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jComboBoxOutput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel10)).addGap(0, 0, Short.MAX_VALUE)));&#xD;
    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);&#xD;
    this.setLayout(layout);&#xD;
    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false).addGroup(layout.createSequentialGroup().addComponent(jLabel1).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jTextFieldName)).addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel1).addComponent(jTextFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OysNshUTEemIe6OhVnSywA" name="jCheckBoxBackgroundActionPerformed" specification="_OysNsBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jCheckBoxBackgroundActionPerformed&#xD;
    if (jCheckBoxBackground.isSelected()) {&#xD;
        jTextFieldBackground.setEnabled(true);&#xD;
    } else {&#xD;
        jTextFieldBackground.setEnabled(false);&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Oys0whUTEemIe6OhVnSywA" name="jCheckBoxFilterActionPerformed" specification="_Oys0wBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jCheckBoxFilterActionPerformed&#xD;
    if (jCheckBoxFilter.isSelected()) {&#xD;
        jComboBoxFilter.setEnabled(true);&#xD;
    } else {&#xD;
        jComboBoxFilter.setEnabled(false);&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Oytb0hUTEemIe6OhVnSywA" name="jCheckBoxNormaliseActionPerformed" specification="_Oytb0BUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jCheckBoxNormaliseActionPerformed&#xD;
    if (jCheckBoxNormalise.isSelected()) {&#xD;
        jButtonAdd.setEnabled(true);&#xD;
        jButtonDelete.setEnabled(true);&#xD;
        jComboBoxStandard.setEnabled(true);&#xD;
        jComboBoxCurve.setEnabled(true);&#xD;
    } else {&#xD;
        jButtonAdd.setEnabled(false);&#xD;
        jButtonDelete.setEnabled(false);&#xD;
        jComboBoxStandard.setEnabled(false);&#xD;
        jComboBoxCurve.setEnabled(false);&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OyuC4hUTEemIe6OhVnSywA" name="jCheckBoxFingerprintActionPerformed" specification="_OyuC4BUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jCheckBoxFingerprintActionPerformed&#xD;
    if (jCheckBoxFingerprint.isSelected()) {&#xD;
        jComboBoxDendrogram.setEnabled(true);&#xD;
        jComboBoxSimilarity.setEnabled(true);&#xD;
        jTextFieldTolerance.setEnabled(true);&#xD;
        jComboBoxOutput.setEnabled(true);&#xD;
    } else {&#xD;
        jComboBoxDendrogram.setEnabled(false);&#xD;
        jComboBoxSimilarity.setEnabled(false);&#xD;
        jTextFieldTolerance.setEnabled(false);&#xD;
        jComboBoxOutput.setEnabled(false);&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_OypKYRUTEemIe6OhVnSywA" name="ProtocolPanel" visibility="public" method="_Oyq_kBUTEemIe6OhVnSywA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Oyq_kRUTEemIe6OhVnSywA" name="initComponents" visibility="private" method="_OyrmoBUTEemIe6OhVnSywA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_OysNsBUTEemIe6OhVnSywA" name="jCheckBoxBackgroundActionPerformed" visibility="private" method="_OysNshUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_OysNsRUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Oys0wBUTEemIe6OhVnSywA" name="jCheckBoxFilterActionPerformed" visibility="private" method="_Oys0whUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Oys0wRUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Oytb0BUTEemIe6OhVnSywA" name="jCheckBoxNormaliseActionPerformed" visibility="private" method="_Oytb0hUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Oytb0RUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_OyuC4BUTEemIe6OhVnSywA" name="jCheckBoxFingerprintActionPerformed" visibility="private" method="_OyuC4hUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_OyuC4RUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
              </packagedElement>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_Oy0wkBUTEemIe6OhVnSywA" name="rfcalibration">
              <packagedElement xmi:type="uml:Class" xmi:id="_Oy1-sBUTEemIe6OhVnSywA" name="rftable" visibility="public">
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Oy1-sRUTEemIe6OhVnSywA" name="data" visibility="private" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Oy2lwBUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Oy2lwRUTEemIe6OhVnSywA" value="*"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Oy2lwhUTEemIe6OhVnSywA" name="rows" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Oy2lwxUTEemIe6OhVnSywA" name="columns" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Oy3z4BUTEemIe6OhVnSywA" name="rfpanel" visibility="private" type="_Oy3M0BUTEemIe6OhVnSywA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Oy5CABUTEemIe6OhVnSywA" name="datawithrflines" visibility="private" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Oy6QIBUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Oy6QIRUTEemIe6OhVnSywA" value="*"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Oy63MBUTEemIe6OhVnSywA" name="lanes" visibility="private" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Oy8FUBUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Oy8sYBUTEemIe6OhVnSywA" value="*"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Oy9TcBUTEemIe6OhVnSywA" name="finalassignment" visibility="private" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Oy96gBUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Oy-hkBUTEemIe6OhVnSywA" value="*"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_OzAWwBUTEemIe6OhVnSywA" name="menu" visibility="private" type="_MEzrIBUTEemIe6OhVnSywA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_OzAWwRUTEemIe6OhVnSywA" name="imp" visibility="private" isUnique="false"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OzCzAhUTEemIe6OhVnSywA" name="rftable" specification="_OzA90BUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    this.data = data;&#xD;
    rows = this.data.length;&#xD;
    columns = this.data[0].length;&#xD;
    this.menu = menu;&#xD;
    this.imp = imp;&#xD;
    showDialog();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OzCzBBUTEemIe6OhVnSywA" name="showDialog" specification="_OzCzAxUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    datawithrflines = new String[rows][columns + 1];&#xD;
    lanes = new String[columns + 1];&#xD;
    for (int i = 0; i &lt; rows; i++) {&#xD;
        for (int j = 0; j &lt;= columns; j++) {&#xD;
            if (j == 0) {&#xD;
                datawithrflines[i][j] = &quot;rf-line &quot; + (i + 1);&#xD;
            } else {&#xD;
                datawithrflines[i][j] = data[i][j - 1];&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    for (int j = 0; j &lt;= columns; j++) {&#xD;
        if (j == 0) {&#xD;
            lanes[j] = &quot;&quot;;&#xD;
        } else {&#xD;
            lanes[j] = &quot;Lane&quot; + j;&#xD;
        }&#xD;
    }&#xD;
    //rfpanel.changemodel(data, lanes);&#xD;
    rfpanel = new rftableframe();&#xD;
    ArrayList&lt;String[]> bands = new ArrayList&lt;String[]>();&#xD;
    for (int i = 0; i &lt; data[0].length; i++) {&#xD;
        bands.add(getcolumn(data, i));&#xD;
    }&#xD;
    rfpanel.setrftable(this, bands);&#xD;
    rfpanel.changemodel(datawithrflines, lanes);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OzI5oBUTEemIe6OhVnSywA" name="getcolumn" specification="_OzEoMBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    ArrayList&lt;String> res = new ArrayList&lt;String>();&#xD;
    for (int i = 0; i &lt; data.length; i++) {&#xD;
        if (data[i][c] != &quot;&quot;) {&#xD;
            res.add(data[i][c]);&#xD;
        }&#xD;
    }&#xD;
    res.add(&quot;&quot;);&#xD;
    String[] res1 = new String[res.size()];&#xD;
    for (int i = 0; i &lt; res1.length; i++) {&#xD;
        res1[i] = res.get(i);&#xD;
    }&#xD;
    return res1;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OzMkABUTEemIe6OhVnSywA" name="setFinalassignment" specification="_OzKHwBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    this.finalassignment = finalassignment;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OzPAQRUTEemIe6OhVnSywA" name="getFinalassignment" specification="_OzNLEBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    return finalassignment;&#xD;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_OzA90BUTEemIe6OhVnSywA" name="rftable" visibility="public" method="_OzCzAhUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_OzCL8RUTEemIe6OhVnSywA" name="data">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OzCL8hUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OzCL8xUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_OzCzABUTEemIe6OhVnSywA" name="menu" type="_MEzrIBUTEemIe6OhVnSywA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_OzCzARUTEemIe6OhVnSywA" name="imp"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_OzCzAxUTEemIe6OhVnSywA" name="showDialog" visibility="public" method="_OzCzBBUTEemIe6OhVnSywA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_OzEoMBUTEemIe6OhVnSywA" name="getcolumn" visibility="private" method="_OzI5oBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_OzFPQBUTEemIe6OhVnSywA" direction="return">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OzF2UBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OzGdYBUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_OzHEcBUTEemIe6OhVnSywA" name="data">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OzHrgBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OzHrgRUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_OzISkBUTEemIe6OhVnSywA" name="c">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_OzKHwBUTEemIe6OhVnSywA" name="setFinalassignment" visibility="public" method="_OzMkABUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_OzKu0BUTEemIe6OhVnSywA" name="finalassignment">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OzLV4BUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OzL88BUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_OzNLEBUTEemIe6OhVnSywA" name="getFinalassignment" visibility="public" method="_OzPAQRUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_OzNyIBUTEemIe6OhVnSywA" direction="return">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OzOZMBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OzPAQBUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_Oy3M0BUTEemIe6OhVnSywA" name="rftableframe" visibility="public">
                <ownedAttribute xmi:type="uml:Property" xmi:id="_OzWVABUTEemIe6OhVnSywA" name="jScrollPane1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_OzYKMBUTEemIe6OhVnSywA" name="jTable" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_OzZ_YBUTEemIe6OhVnSywA" name="jButtonAddrow" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_OzcboBUTEemIe6OhVnSywA" name="jButtonCancel" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_OzdpwBUTEemIe6OhVnSywA" name="jButtonDone" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Ozfe8BUTEemIe6OhVnSywA" name="jButtonRefreshImage" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_OzhUIBUTEemIe6OhVnSywA" name="jButtonDeleteRow" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_OziiQBUTEemIe6OhVnSywA" name="rft" visibility="private" type="_Oy1-sBUTEemIe6OhVnSywA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_OzkXcBUTEemIe6OhVnSywA" name="headers" visibility="private" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OzllkBUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OzmMoBUTEemIe6OhVnSywA" value="*"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_OznawBUTEemIe6OhVnSywA" name="bands" visibility="private" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Ozoo4BUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OzpP8BUTEemIe6OhVnSywA" value="*"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OzsTQBUTEemIe6OhVnSywA" name="rftableframe" specification="_Ozp3ABUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    super(&quot;rf Calibration&quot;);&#xD;
    showWindow();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OzuvgBUTEemIe6OhVnSywA" name="showWindow" specification="_OzuIcBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    jScrollPane1 = new javax.swing.JScrollPane();&#xD;
    jTable = new javax.swing.JTable() {&#xD;
&#xD;
        public boolean isCellEditable(int row, int column) {&#xD;
            //the 4th column is not editable  &#xD;
            if (column == 0)&#xD;
                return false;&#xD;
            return true;&#xD;
        }&#xD;
    };&#xD;
    jButtonAddrow = new javax.swing.JButton();&#xD;
    jButtonRefreshImage = new javax.swing.JButton();&#xD;
    jButtonDone = new javax.swing.JButton();&#xD;
    jButtonCancel = new javax.swing.JButton();&#xD;
    jButtonDeleteRow = new javax.swing.JButton();&#xD;
    jTable.setModel(new javax.swing.table.DefaultTableModel(new Object[][] { { null, null, null, null }, { null, null, null, null }, { null, null, null, null }, { null, null, null, null } }, new String[] { &quot;Title 1&quot;, &quot;Title 2&quot;, &quot;Title 3&quot;, &quot;Title 4&quot; }));&#xD;
    jScrollPane1.setViewportView(jTable);&#xD;
    jButtonAddrow.setText(&quot;Add Row&quot;);&#xD;
    jButtonAddrow.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButtonAddrowActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jButtonRefreshImage.setText(&quot;Refresh Image&quot;);&#xD;
    jButtonRefreshImage.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButtonRefreshImageActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jButtonDone.setText(&quot;Ok&quot;);&#xD;
    jButtonDone.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButtonDoneActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jButtonCancel.setText(&quot;Cancel&quot;);&#xD;
    jButtonCancel.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButtonCancelActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jButtonDeleteRow.setText(&quot;Delete Row&quot;);&#xD;
    jButtonDeleteRow.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButtonDeleteRowActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);&#xD;
    this.setLayout(layout);&#xD;
    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane1).addGroup(layout.createSequentialGroup().addGap(0, 165, Short.MAX_VALUE).addComponent(jButtonAddrow, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButtonDeleteRow, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButtonRefreshImage, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButtonDone, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButtonCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)));&#xD;
    layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jButtonCancel).addComponent(jButtonDone).addComponent(jButtonRefreshImage).addComponent(jButtonDeleteRow).addComponent(jButtonAddrow))));&#xD;
    setSize(700, 500);&#xD;
    setResizable(true);&#xD;
    show();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OzyZ4BUTEemIe6OhVnSywA" name="jButtonAddrowActionPerformed" specification="_Ozv9oBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    int selectedRow = jTable.getSelectedRow();&#xD;
    DefaultTableModel tm = (DefaultTableModel) jTable.getModel();&#xD;
    if (selectedRow != -1) {&#xD;
        String[][] data = getTableData();&#xD;
        String[][] newdata = addrflines(addrowatpositioni(data, selectedRow));&#xD;
        changemodel(newdata, headers);&#xD;
    } else {&#xD;
        IJ.error(&quot;Select a row first&quot;);&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Oz2EQBUTEemIe6OhVnSywA" name="jButtonRefreshImageActionPerformed" specification="_Oz0PEBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
// TODO add your handling code here:&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Oz5HkBUTEemIe6OhVnSywA" name="jButtonDoneActionPerformed" specification="_Oz3SYBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    DefaultTableModel dtm = (DefaultTableModel) jTable.getModel();&#xD;
    int nRow = dtm.getRowCount(), nCol = dtm.getColumnCount();&#xD;
    for (int c = 1; c &lt; nCol; c++) {&#xD;
        String[] col = getcolumndata(c);&#xD;
        // Check for duplicates&#xD;
        String duplicate = containsdupplicates(col);&#xD;
        if (duplicate != &quot;&quot;) {&#xD;
            IJ.error(&quot;The element &quot; + duplicate + &quot; appears several times in Lane &quot; + c);&#xD;
            return;&#xD;
        }&#xD;
        // Check if elements are sorted&#xD;
        String notsorted = notsorted(col);&#xD;
        if (notsorted != &quot;&quot;) {&#xD;
            IJ.error(&quot;The elements in Lane &quot; + c + &quot; are not sorted (&quot; + notsorted + &quot; is not in the correct position)&quot;);&#xD;
            return;&#xD;
        }&#xD;
        // Check if all the bands have been selected&#xD;
        String allselected = allselected(col, bands.get(c - 1));&#xD;
        if (allselected != &quot;&quot;) {&#xD;
            IJ.error(allselected + &quot; has not been included in Lane &quot; + c + &quot;(every band of a lane must appear in an rf-line)&quot;);&#xD;
            return;&#xD;
        }&#xD;
    }&#xD;
    rft.setFinalassignment(getTableDatawithoutfirstcolumn());&#xD;
    close();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Oz6VsRUTEemIe6OhVnSywA" name="jButtonCancelActionPerformed" specification="_Oz5uoBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    close();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Oz68wRUTEemIe6OhVnSywA" name="jButtonDeleteRowActionPerformed" specification="_Oz6VshUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    int selectedRow = jTable.getSelectedRow();&#xD;
    DefaultTableModel tm = (DefaultTableModel) jTable.getModel();&#xD;
    if (selectedRow != -1) {&#xD;
        String[] row = getrowdata(selectedRow);&#xD;
        if (isemptyrow(row)) {&#xD;
            String[][] data = getTableData();&#xD;
            String[][] newdata = removeElement(data, selectedRow);&#xD;
            newdata = addrflines(newdata);&#xD;
            changemodel(newdata, headers);&#xD;
        } else {&#xD;
            IJ.error(&quot;The selected row is not empty&quot;);&#xD;
        }&#xD;
    } else {&#xD;
        IJ.error(&quot;Select a non-empty row&quot;);&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Oz8K4xUTEemIe6OhVnSywA" name="setrftable" specification="_Oz7j0BUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    this.rft = rft;&#xD;
    this.bands = bands;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Oz-AEhUTEemIe6OhVnSywA" name="changemodel" specification="_Oz8x8BUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    headers = names;&#xD;
    jTable.setModel(new javax.swing.table.DefaultTableModel(data, names));&#xD;
    TableColumn column0 = jTable.getColumnModel().getColumn(0);&#xD;
    for (int c = 0; c &lt; bands.size(); c++) {&#xD;
        TableColumn column = jTable.getColumnModel().getColumn(c + 1);&#xD;
        JComboBox comboBox = new JComboBox();&#xD;
        String[] col = new String[0];&#xD;
        for (int r = 0; r &lt; bands.get(c).length; r++) {&#xD;
            if (!ArrayUtils.contains(col, bands.get(c)[r])) {&#xD;
                comboBox.addItem(bands.get(c)[r]);&#xD;
                col = ArrayUtils.add(col, bands.get(c)[r]);&#xD;
            }&#xD;
        }&#xD;
        column.setCellEditor(new DefaultCellEditor(comboBox));&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O0BDYBUTEemIe6OhVnSywA" name="getTableData" specification="_Oz-AExUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    DefaultTableModel dtm = (DefaultTableModel) jTable.getModel();&#xD;
    int nRow = dtm.getRowCount(), nCol = dtm.getColumnCount();&#xD;
    String[][] tableData = new String[nRow][nCol];&#xD;
    for (int i = 0; i &lt; nRow; i++) for (int j = 0; j &lt; nCol; j++) tableData[i][j] = (String) dtm.getValueAt(i, j);&#xD;
    return tableData;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O0EGsBUTEemIe6OhVnSywA" name="getTableDatawithoutfirstcolumn" specification="_O0BqcBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    DefaultTableModel dtm = (DefaultTableModel) jTable.getModel();&#xD;
    int nRow = dtm.getRowCount(), nCol = dtm.getColumnCount();&#xD;
    String[][] tableData = new String[nRow][nCol - 1];&#xD;
    for (int i = 0; i &lt; nRow; i++) for (int j = 1; j &lt; nCol; j++) tableData[i][j - 1] = (String) dtm.getValueAt(i, j);&#xD;
    return tableData;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O0I_MBUTEemIe6OhVnSywA" name="getrowdata" specification="_O0FU0BUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    DefaultTableModel dtm = (DefaultTableModel) jTable.getModel();&#xD;
    int nRow = pos, nCol = dtm.getColumnCount();&#xD;
    String[] rowData = new String[nCol - 1];&#xD;
    for (int j = 1; j &lt; nCol; j++) rowData[j - 1] = (String) dtm.getValueAt(nRow, j);&#xD;
    return rowData;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O0N3sBUTEemIe6OhVnSywA" name="getcolumndata" specification="_O0KNUBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    DefaultTableModel dtm = (DefaultTableModel) jTable.getModel();&#xD;
    int nRow = dtm.getRowCount(), nCol = pos;&#xD;
    String[] colData = new String[nRow];&#xD;
    for (int j = 0; j &lt; nRow; j++) colData[j] = (String) dtm.getValueAt(j, nCol);&#xD;
    return colData;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O0WakBUTEemIe6OhVnSywA" name="addrowatpositioni" specification="_O0Ps4BUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    String[][] res;&#xD;
    String[] emptyrow = emptyStringArray(data[0].length);&#xD;
    res = ArrayUtils.add(data, pos, emptyrow);&#xD;
    return res;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O0aE8BUTEemIe6OhVnSywA" name="emptyStringArray" specification="_O0WakRUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    String[] res = new String[size];&#xD;
    for (int i = 0; i &lt; size; i++) {&#xD;
        res[i] = &quot;&quot;;&#xD;
    }&#xD;
    return res;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O0eWYBUTEemIe6OhVnSywA" name="addrflines" specification="_O0b6IBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    String[][] res = data;&#xD;
    for (int i = 0; i &lt; data.length; i++) {&#xD;
        res[i][0] = &quot;rf-line &quot; + (i + 1);&#xD;
    }&#xD;
    return res;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O0iAwBUTEemIe6OhVnSywA" name="isemptyrow" specification="_O0fkgBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    for (int i = 0; i &lt; row.length; i++) {&#xD;
        if (row[i] != &quot;&quot;) {&#xD;
            return false;&#xD;
        }&#xD;
    }&#xD;
    return true;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O0ngUBUTEemIe6OhVnSywA" name="removeElement" specification="_O0jO4BUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    String[][] res = new String[data.length - 1][data[0].length];&#xD;
    for (int i = 0; i &lt; selectedRow; i++) {&#xD;
        res[i] = data[i];&#xD;
    }&#xD;
    for (int i = selectedRow + 1; i &lt; data.length; i++) {&#xD;
        res[i - 1] = data[i];&#xD;
    }&#xD;
    return res;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O0rKsBUTEemIe6OhVnSywA" name="containsdupplicates" specification="_O0oucBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    for (int i = 0; i &lt; col.length; i++) {&#xD;
        if (col[i] != &quot;&quot;) {&#xD;
            for (int j = i + 1; j &lt; col.length; j++) {&#xD;
                if (col[i] == col[j]) {&#xD;
                    return col[i];&#xD;
                }&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    return &quot;&quot;;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O0uOABUTEemIe6OhVnSywA" name="notsorted" specification="_O0rKsRUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    for (int i = 0; i &lt; col.length; i++) {&#xD;
        if (col[i] != &quot;&quot;) {&#xD;
            for (int j = i + 1; j &lt; col.length; j++) {&#xD;
                if (col[j] != &quot;&quot;) {&#xD;
                    if (smallerBand(col[j], col[i])) {&#xD;
                        return col[i];&#xD;
                    }&#xD;
                }&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    return &quot;&quot;;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O0xRUBUTEemIe6OhVnSywA" name="smallerBand" specification="_O0vcIBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    String b1 = band1.substring(5);&#xD;
    String b2 = band2.substring(5);&#xD;
    return (Integer.parseInt(b1) &lt; Integer.parseInt(b2));&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O007shUTEemIe6OhVnSywA" name="allselected" specification="_O0yfcBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    for (int i = 0; i &lt; bands.length; i++) {&#xD;
        if (bands[i] != &quot;&quot;) {&#xD;
            if (!contains(col, bands[i])) {&#xD;
                return bands[i];&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    return &quot;&quot;;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O05NIBUTEemIe6OhVnSywA" name="contains" specification="_O02J0BUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    boolean res = false;&#xD;
    for (int i = 0; i &lt; array.length; i++) {&#xD;
        if (array[i] == elem) {&#xD;
            return true;&#xD;
        }&#xD;
    }&#xD;
    return res;&#xD;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Ozp3ABUTEemIe6OhVnSywA" name="rftableframe" visibility="public" method="_OzsTQBUTEemIe6OhVnSywA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_OzuIcBUTEemIe6OhVnSywA" name="showWindow" visibility="public" method="_OzuvgBUTEemIe6OhVnSywA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Ozv9oBUTEemIe6OhVnSywA" name="jButtonAddrowActionPerformed" visibility="private" method="_OzyZ4BUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_OzxLwBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Oz0PEBUTEemIe6OhVnSywA" name="jButtonRefreshImageActionPerformed" visibility="private" method="_Oz2EQBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Oz1dMBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Oz3SYBUTEemIe6OhVnSywA" name="jButtonDoneActionPerformed" visibility="private" method="_Oz5HkBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Oz4ggBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Oz5uoBUTEemIe6OhVnSywA" name="jButtonCancelActionPerformed" visibility="private" method="_Oz6VsRUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Oz6VsBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Oz6VshUTEemIe6OhVnSywA" name="jButtonDeleteRowActionPerformed" visibility="private" method="_Oz68wRUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Oz68wBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Oz7j0BUTEemIe6OhVnSywA" name="setrftable" visibility="public" method="_Oz8K4xUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Oz7j0RUTEemIe6OhVnSywA" name="rft" type="_Oy1-sBUTEemIe6OhVnSywA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Oz8K4BUTEemIe6OhVnSywA" name="bands">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Oz8K4RUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Oz8K4hUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Oz8x8BUTEemIe6OhVnSywA" name="changemodel" visibility="public" method="_Oz-AEhUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Oz8x8RUTEemIe6OhVnSywA" name="data">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Oz9ZABUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Oz9ZARUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Oz9ZAhUTEemIe6OhVnSywA" name="names">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Oz-AEBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Oz-AERUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Oz-AExUTEemIe6OhVnSywA" name="getTableData" visibility="private" method="_O0BDYBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Oz_OMBUTEemIe6OhVnSywA" direction="return">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Oz_1QBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O0AcUBUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O0BqcBUTEemIe6OhVnSywA" name="getTableDatawithoutfirstcolumn" visibility="private" method="_O0EGsBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O0C4kBUTEemIe6OhVnSywA" direction="return">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_O0C4kRUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O0DfoBUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O0FU0BUTEemIe6OhVnSywA" name="getrowdata" visibility="private" method="_O0I_MBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O0F74BUTEemIe6OhVnSywA" direction="return">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_O0Gi8BUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O0HKABUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O0IYIBUTEemIe6OhVnSywA" name="pos">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O0KNUBUTEemIe6OhVnSywA" name="getcolumndata" visibility="private" method="_O0N3sBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O0LbcBUTEemIe6OhVnSywA" direction="return">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_O0MCgBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O0MpkBUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O0NQoBUTEemIe6OhVnSywA" name="pos">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O0Ps4BUTEemIe6OhVnSywA" name="addrowatpositioni" visibility="private" method="_O0WakBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O0Q7ABUTEemIe6OhVnSywA" direction="return">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_O0RiEBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O0SJIBUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O0TXQBUTEemIe6OhVnSywA" name="data">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_O0UlYBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O0VMcBUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O0VzgBUTEemIe6OhVnSywA" name="pos">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O0WakRUTEemIe6OhVnSywA" name="emptyStringArray" visibility="private" method="_O0aE8BUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O0XosBUTEemIe6OhVnSywA" direction="return">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_O0YPwBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O0Y20BUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O0Zd4BUTEemIe6OhVnSywA" name="size">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O0b6IBUTEemIe6OhVnSywA" name="addrflines" visibility="private" method="_O0eWYBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O0chMBUTEemIe6OhVnSywA" direction="return">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_O0chMRUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O0dIQBUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O0dIQRUTEemIe6OhVnSywA" name="data">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_O0dvUBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O0dvURUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O0fkgBUTEemIe6OhVnSywA" name="isemptyrow" visibility="private" method="_O0iAwBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O0gLkBUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O0gyoBUTEemIe6OhVnSywA" name="row">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_O0hZsBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O0hZsRUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O0jO4BUTEemIe6OhVnSywA" name="removeElement" visibility="private" method="_O0ngUBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O0j18BUTEemIe6OhVnSywA" direction="return">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_O0kdABUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O0lEEBUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O0lrIBUTEemIe6OhVnSywA" name="data">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_O0mSMBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O0mSMRUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O0m5QBUTEemIe6OhVnSywA" name="selectedRow">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O0oucBUTEemIe6OhVnSywA" name="containsdupplicates" visibility="private" method="_O0rKsBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O0pVgBUTEemIe6OhVnSywA" direction="return"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O0p8kBUTEemIe6OhVnSywA" name="col">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_O0qjoBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O0qjoRUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O0rKsRUTEemIe6OhVnSywA" name="notsorted" visibility="private" method="_O0uOABUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O0sY0BUTEemIe6OhVnSywA" direction="return"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O0s_4BUTEemIe6OhVnSywA" name="col">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_O0tm8BUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O0tm8RUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O0vcIBUTEemIe6OhVnSywA" name="smallerBand" visibility="private" method="_O0xRUBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O0wDMBUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O0wqQBUTEemIe6OhVnSywA" name="band1"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O0wqQRUTEemIe6OhVnSywA" name="band2"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O0yfcBUTEemIe6OhVnSywA" name="allselected" visibility="private" method="_O007shUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O0zGgBUTEemIe6OhVnSywA" direction="return"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O0zGgRUTEemIe6OhVnSywA" name="col">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_O0ztkBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O0ztkRUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O00UoBUTEemIe6OhVnSywA" name="bands">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_O007sBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O007sRUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O02J0BUTEemIe6OhVnSywA" name="contains" visibility="private" method="_O05NIBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O02w4BUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O03X8BUTEemIe6OhVnSywA" name="array">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_O03_ABUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O04mEBUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O04mERUTEemIe6OhVnSywA" name="elem"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_O07CUBUTEemIe6OhVnSywA" name="rftablepanel" visibility="public">
                <ownedAttribute xmi:type="uml:Property" xmi:id="_O1N9QBUTEemIe6OhVnSywA" name="jButtonAddrow" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_O1PLYBUTEemIe6OhVnSywA" name="jButtonCancel" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_O1QZgBUTEemIe6OhVnSywA" name="jButtonDeleteRow" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_O1RAkBUTEemIe6OhVnSywA" name="jButtonDone" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_O1SOsBUTEemIe6OhVnSywA" name="jButtonRefreshImage" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_O1S1wBUTEemIe6OhVnSywA" name="jScrollPane1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_O1UD4BUTEemIe6OhVnSywA" name="jTable" visibility="private" isUnique="false"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O0-FoBUTEemIe6OhVnSywA" name="rftablepanel" specification="_O08QcRUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    initComponents();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O0-ssRUTEemIe6OhVnSywA" name="initComponents" specification="_O0-ssBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    jScrollPane1 = new javax.swing.JScrollPane();&#xD;
    jTable = new javax.swing.JTable();&#xD;
    jButtonAddrow = new javax.swing.JButton();&#xD;
    jButtonRefreshImage = new javax.swing.JButton();&#xD;
    jButtonDone = new javax.swing.JButton();&#xD;
    jButtonCancel = new javax.swing.JButton();&#xD;
    jButtonDeleteRow = new javax.swing.JButton();&#xD;
    jTable.setModel(new javax.swing.table.DefaultTableModel(new Object[][] { { null, null, null, null }, { null, null, null, null }, { null, null, null, null }, { null, null, null, null } }, new String[] { &quot;Title 1&quot;, &quot;Title 2&quot;, &quot;Title 3&quot;, &quot;Title 4&quot; }));&#xD;
    jScrollPane1.setViewportView(jTable);&#xD;
    jButtonAddrow.setText(&quot;Add Row&quot;);&#xD;
    jButtonAddrow.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButtonAddrowActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jButtonRefreshImage.setText(&quot;Refresh Image&quot;);&#xD;
    jButtonRefreshImage.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButtonRefreshImageActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jButtonDone.setText(&quot;Ok&quot;);&#xD;
    jButtonDone.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButtonDoneActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jButtonCancel.setText(&quot;Cancel&quot;);&#xD;
    jButtonCancel.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButtonCancelActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jButtonDeleteRow.setText(&quot;Delete Row&quot;);&#xD;
    jButtonDeleteRow.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButtonDeleteRowActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);&#xD;
    this.setLayout(layout);&#xD;
    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane1).addGroup(layout.createSequentialGroup().addGap(0, 165, Short.MAX_VALUE).addComponent(jButtonAddrow, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButtonDeleteRow, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButtonRefreshImage, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButtonDone, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButtonCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)));&#xD;
    layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jButtonCancel).addComponent(jButtonDone).addComponent(jButtonRefreshImage).addComponent(jButtonDeleteRow).addComponent(jButtonAddrow))));&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O1BwABUTEemIe6OhVnSywA" name="jButtonAddrowActionPerformed" specification="_O0_60BUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
//GEN-FIRST:event_jButtonAddrowActionPerformed&#xD;
// TODO add your handling code here:&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O1DlMRUTEemIe6OhVnSywA" name="jButtonRefreshImageActionPerformed" specification="_O1CXEBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
//GEN-FIRST:event_jButtonRefreshImageActionPerformed&#xD;
// TODO add your handling code here:&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O1GBcBUTEemIe6OhVnSywA" name="jButtonDoneActionPerformed" specification="_O1EMQBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
//GEN-FIRST:event_jButtonDoneActionPerformed&#xD;
// TODO add your handling code here:&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O1IdsBUTEemIe6OhVnSywA" name="jButtonCancelActionPerformed" specification="_O1HPkBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
//GEN-FIRST:event_jButtonCancelActionPerformed&#xD;
// TODO add your handling code here:&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O1Jr0BUTEemIe6OhVnSywA" name="jButtonDeleteRowActionPerformed" specification="_O1JEwBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
//GEN-FIRST:event_jButtonDeleteRowActionPerformed&#xD;
// TODO add your handling code here:&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O1NWMhUTEemIe6OhVnSywA" name="changemodel" specification="_O1K58BUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    jTable.setModel(new javax.swing.table.DefaultTableModel(data, names));&#xD;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O08QcRUTEemIe6OhVnSywA" name="rftablepanel" visibility="public" method="_O0-FoBUTEemIe6OhVnSywA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O0-ssBUTEemIe6OhVnSywA" name="initComponents" visibility="private" method="_O0-ssRUTEemIe6OhVnSywA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O0_60BUTEemIe6OhVnSywA" name="jButtonAddrowActionPerformed" visibility="private" method="_O1BwABUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O1BI8BUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O1CXEBUTEemIe6OhVnSywA" name="jButtonRefreshImageActionPerformed" visibility="private" method="_O1DlMRUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O1DlMBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O1EMQBUTEemIe6OhVnSywA" name="jButtonDoneActionPerformed" visibility="private" method="_O1GBcBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O1EzUBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O1HPkBUTEemIe6OhVnSywA" name="jButtonCancelActionPerformed" visibility="private" method="_O1IdsBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O1H2oBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O1JEwBUTEemIe6OhVnSywA" name="jButtonDeleteRowActionPerformed" visibility="private" method="_O1Jr0BUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O1JEwRUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O1K58BUTEemIe6OhVnSywA" name="changemodel" visibility="public" method="_O1NWMhUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O1LhABUTEemIe6OhVnSywA" name="data">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_O1MIEBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O1MIERUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O1MvIBUTEemIe6OhVnSywA" name="names">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_O1NWMBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O1NWMRUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                </ownedOperation>
              </packagedElement>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_O1V5EBUTEemIe6OhVnSywA" name="SaveLoad">
              <packagedElement xmi:type="uml:Class" xmi:id="_O1XHMBUTEemIe6OhVnSywA" name="Lanewithoutimage" visibility="public">
                <ownedAttribute xmi:type="uml:Property" xmi:id="_O1Y8YBUTEemIe6OhVnSywA" name="name" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_O1aKgBUTEemIe6OhVnSywA" name="profile" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_O1axkBUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O1axkRUTEemIe6OhVnSywA" value="*"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_O1bYoBUTEemIe6OhVnSywA" name="positionbands" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_O1b_sBUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O1b_sRUTEemIe6OhVnSywA" value="*"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_O1b_shUTEemIe6OhVnSywA" name="stdpositionbands" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_O1dN0BUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O1d04BUTEemIe6OhVnSywA" value="*"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_O1d04RUTEemIe6OhVnSywA" name="isstandard" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_O1fDABUTEemIe6OhVnSywA" name="offset" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_O1gRIBUTEemIe6OhVnSywA" name="defaultValue">
                    <language>JAVA</language>
                    <body>0</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O1pbEBUTEemIe6OhVnSywA" name="Lanewithoutimage" specification="_O1g4MBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    this.name = name;&#xD;
    //this.roi = roi;&#xD;
    this.profile = profile;&#xD;
    this.positionbands = positionbands;&#xD;
    this.stdpositionbands = stdpositionbands;&#xD;
    this.isstandard = isstandard;&#xD;
    this.offset = offset;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O1qpMhUTEemIe6OhVnSywA" name="getName" specification="_O1qpMBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    return name;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O1r3UxUTEemIe6OhVnSywA" name="getProfile" specification="_O1rQQBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    return profile;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O1u6oBUTEemIe6OhVnSywA" name="getPositionbands" specification="_O1tFcBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    return positionbands;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O1vhtBUTEemIe6OhVnSywA" name="getStdpositionbands" specification="_O1vhsBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    return stdpositionbands;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O1xW4RUTEemIe6OhVnSywA" name="getisIsstandard" specification="_O1wv0BUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    return isstandard;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O1zzIBUTEemIe6OhVnSywA" name="getOffset" specification="_O1ylABUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    return offset;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O11BQBUTEemIe6OhVnSywA" name="setIsstandard" specification="_O10aMBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    this.isstandard = isstandard;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O15SsBUTEemIe6OhVnSywA" name="LanetoLanewithoutimage" specification="_O13dgBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    return new Lanewithoutimage(l.getName(), l.getRoi(), l.getProfile(), l.getPositionbands(), l.getStdpositionbands(), l.isIsstandard(), l.getOffset());&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O18WARUTEemIe6OhVnSywA" name="LanestoLaneswithoutimage" specification="_O15SsRUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    Lanewithoutimage[] res = new Lanewithoutimage[lanes.length];&#xD;
    for (int i = 0; i &lt; lanes.length; i++) {&#xD;
        res[i] = LanetoLanewithoutimage(lanes[i]);&#xD;
    }&#xD;
    return res;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O2AAYBUTEemIe6OhVnSywA" name="LanewitoutimagetoLane" specification="_O19kIBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    Lane res = new Lane(null, l.name, r, l.isstandard);&#xD;
    res.setPositionbands(l.positionbands);&#xD;
    res.setStdpositionbands(l.stdpositionbands);&#xD;
    res.setProfile(l.profile);&#xD;
    res.setOffset(l.offset);&#xD;
    imp.setRoi(r);&#xD;
    ImagePlus dup = imp.duplicate();&#xD;
    res.setImp(dup);&#xD;
    return res;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O2GHARUTEemIe6OhVnSywA" name="LaneswitoutimagetoLanes" specification="_O2BOgBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    Lane[] res = new Lane[lanes.length];&#xD;
    for (int i = 0; i &lt; lanes.length; i++) {&#xD;
        res[i] = LanewitoutimagetoLane(lanes[i], imp, rois[i]);&#xD;
    }&#xD;
    return res;&#xD;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O1g4MBUTEemIe6OhVnSywA" name="Lanewithoutimage" visibility="public" method="_O1pbEBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O1itYBUTEemIe6OhVnSywA" name="name"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O1j7gBUTEemIe6OhVnSywA" name="roi"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O1kikBUTEemIe6OhVnSywA" name="profile">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_O1lJoBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O1lwsBUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O1lwsRUTEemIe6OhVnSywA" name="positionbands">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_O1mXwBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O1m-0BUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O1m-0RUTEemIe6OhVnSywA" name="stdpositionbands">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_O1nl4BUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O1oM8BUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O1o0ABUTEemIe6OhVnSywA" name="isstandard">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O1o0ARUTEemIe6OhVnSywA" name="offset">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O1qpMBUTEemIe6OhVnSywA" name="getName" visibility="public" method="_O1qpMhUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O1qpMRUTEemIe6OhVnSywA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O1rQQBUTEemIe6OhVnSywA" name="getProfile" visibility="public" method="_O1r3UxUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O1r3UBUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_O1r3URUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O1r3UhUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O1tFcBUTEemIe6OhVnSywA" name="getPositionbands" visibility="public" method="_O1u6oBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O1tFcRUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_O1tsgBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O1uTkBUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O1vhsBUTEemIe6OhVnSywA" name="getStdpositionbands" visibility="public" method="_O1vhtBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O1vhsRUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_O1vhshUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O1vhsxUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O1wv0BUTEemIe6OhVnSywA" name="getisIsstandard" visibility="public" method="_O1xW4RUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O1xW4BUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O1ylABUTEemIe6OhVnSywA" name="getOffset" visibility="public" method="_O1zzIBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O1zMEBUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O10aMBUTEemIe6OhVnSywA" name="setIsstandard" visibility="public" method="_O11BQBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O10aMRUTEemIe6OhVnSywA" name="isstandard">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O13dgBUTEemIe6OhVnSywA" name="LanetoLanewithoutimage" visibility="private" isStatic="true" method="_O15SsBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O14EkBUTEemIe6OhVnSywA" type="_O1XHMBUTEemIe6OhVnSywA" direction="return"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O14roBUTEemIe6OhVnSywA" name="l" type="_MGiwgRUTEemIe6OhVnSywA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O15SsRUTEemIe6OhVnSywA" name="LanestoLaneswithoutimage" visibility="public" isStatic="true" method="_O18WARUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O155wBUTEemIe6OhVnSywA" type="_O1XHMBUTEemIe6OhVnSywA" direction="return">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_O16g0BUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O17H4BUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O17u8BUTEemIe6OhVnSywA" name="lanes" type="_MGiwgRUTEemIe6OhVnSywA">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_O17u8RUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O18WABUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O19kIBUTEemIe6OhVnSywA" name="LanewitoutimagetoLane" visibility="public" isStatic="true" method="_O2AAYBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O1-LMBUTEemIe6OhVnSywA" type="_MGiwgRUTEemIe6OhVnSywA" direction="return"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O1-LMRUTEemIe6OhVnSywA" name="l" type="_O1XHMBUTEemIe6OhVnSywA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O1-yQBUTEemIe6OhVnSywA" name="imp"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O1_ZUBUTEemIe6OhVnSywA" name="r"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O2BOgBUTEemIe6OhVnSywA" name="LaneswitoutimagetoLanes" visibility="public" isStatic="true" method="_O2GHARUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O2CcoBUTEemIe6OhVnSywA" type="_MGiwgRUTEemIe6OhVnSywA" direction="return">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_O2DDsBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O2DDsRUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O2DDshUTEemIe6OhVnSywA" name="lanes" type="_O1XHMBUTEemIe6OhVnSywA">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_O2DqwBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O2DqwRUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O2ER0BUTEemIe6OhVnSywA" name="imp"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O2E44BUTEemIe6OhVnSywA" name="rois">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_O2Ff8BUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O2GHABUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_O2IjQBUTEemIe6OhVnSywA" name="ImageorStudy" visibility="public">
                <ownedAttribute xmi:type="uml:Property" xmi:id="_O2NbwBUTEemIe6OhVnSywA" name="buttonGroup1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_O2Op4BUTEemIe6OhVnSywA" name="jRLoadimage" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_O2P4ABUTEemIe6OhVnSywA" name="jRLoadstudy" visibility="private" isUnique="false"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O2KYcBUTEemIe6OhVnSywA" name="ImageorStudy" specification="_O2IjQhUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    initComponents();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O2LmkBUTEemIe6OhVnSywA" name="initComponents" specification="_O2K_gBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    buttonGroup1 = new javax.swing.ButtonGroup();&#xD;
    jRLoadimage = new javax.swing.JRadioButton();&#xD;
    jRLoadstudy = new javax.swing.JRadioButton();&#xD;
    buttonGroup1.add(jRLoadimage);&#xD;
    jRLoadimage.setSelected(true);&#xD;
    jRLoadimage.setText(&quot;Load an image&quot;);&#xD;
    buttonGroup1.add(jRLoadstudy);&#xD;
    jRLoadstudy.setText(&quot;Load a previous study&quot;);&#xD;
    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);&#xD;
    this.setLayout(layout);&#xD;
    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jRLoadimage).addComponent(jRLoadstudy)).addContainerGap(80, Short.MAX_VALUE)));&#xD;
    layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addComponent(jRLoadimage).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jRLoadstudy).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O2M0shUTEemIe6OhVnSywA" name="isnewimageselected" specification="_O2M0sBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    return jRLoadimage.isSelected();&#xD;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O2IjQhUTEemIe6OhVnSywA" name="ImageorStudy" visibility="public" method="_O2KYcBUTEemIe6OhVnSywA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O2K_gBUTEemIe6OhVnSywA" name="initComponents" visibility="private" method="_O2LmkBUTEemIe6OhVnSywA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O2M0sBUTEemIe6OhVnSywA" name="isnewimageselected" visibility="public" method="_O2M0shUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O2M0sRUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_O2SUQBUTEemIe6OhVnSywA" name="Load" visibility="public">
                <ownedAttribute xmi:type="uml:Property" xmi:id="_O2S7UBUTEemIe6OhVnSywA" name="m" visibility="private" type="_MEzrIBUTEemIe6OhVnSywA" isUnique="false"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O2WlsBUTEemIe6OhVnSywA" name="Load" specification="_O2UJcBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    this.m = m;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O2ZB8BUTEemIe6OhVnSywA" name="loadimageorstudy" specification="_O2WlsRUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    GenericDialog gd = new GenericDialog(&quot;Load image or study...&quot;);&#xD;
    ImageorStudy ios = new ImageorStudy();&#xD;
    gd.add(ios);&#xD;
    gd.addMessage(&quot;&quot;);&#xD;
    gd.showDialog();&#xD;
    if (gd.wasCanceled()) {&#xD;
        return;&#xD;
    }&#xD;
    if (ios.isnewimageselected()) {&#xD;
        OpenDialog od = new OpenDialog(&quot;Load an image...&quot;);&#xD;
        Opener o = new Opener();&#xD;
        //IJ.error(od.getPath());&#xD;
        ImagePlus imp1 = o.openImage(od.getPath());&#xD;
        imp1.show();&#xD;
    //IJ.error(&quot;1&quot;);&#xD;
    } else {&#xD;
        OpenDialog od = new OpenDialog(&quot;Load a study...&quot;);&#xD;
        String path = od.getPath();&#xD;
        loadzipfile(path);&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O2beMBUTEemIe6OhVnSywA" name="loadzipfile" specification="_O2ZpABUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    ImagePlus imp = null;&#xD;
    if (!path.endsWith(&quot;.zip&quot;)) {&#xD;
        IJ.error(&quot;You must select a zip file.&quot;);&#xD;
    } else {&#xD;
        ZipFile zipfile = new ZipFile(path);&#xD;
        ZipInputStream zis = new ZipInputStream(new FileInputStream(path));&#xD;
        ZipEntry entry_gel = zis.getNextEntry();&#xD;
        ZipEntry entry_rois = zis.getNextEntry();&#xD;
        ZipEntry entry_image = zis.getNextEntry();&#xD;
        if (entry_gel == null) {&#xD;
            zis.close();&#xD;
            IJ.error(&quot;Empty file&quot;);&#xD;
            return;&#xD;
        }&#xD;
        String name_gel = entry_gel.getName();&#xD;
        if (!name_gel.endsWith(&quot;.gel&quot;)) {&#xD;
            zis.close();&#xD;
            IJ.error(&quot;This zip file was not created with GelJ.&quot;);&#xD;
            return;&#xD;
        }&#xD;
        String name_image = entry_image.getName();&#xD;
        if (name_image.endsWith(&quot;.tif&quot;)) {&#xD;
            Opener o = new Opener();&#xD;
            imp = o.openTiff(zis, name_image);&#xD;
            InputStream fs = zipfile.getInputStream(entry_gel);&#xD;
            m.setWindowname(imp.getTitle());&#xD;
            opengel(imp, fs, entry_rois, zipfile);&#xD;
            imp.show();&#xD;
            imp.setRoi(new Rectangle(0, 0, 0, 0));&#xD;
        } else {&#xD;
            zis.close();&#xD;
            IJ.error(&quot;This zip file was not created with GelJ.&quot;);&#xD;
            return;&#xD;
        }&#xD;
        zis.close();&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O2kBEBUTEemIe6OhVnSywA" name="opengel" specification="_O2gWsBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    Lanewithoutimage[] finallanes = null;&#xD;
    Band[] bands = null;&#xD;
    boolean normalisation = false;&#xD;
    double initialoffset = 0;&#xD;
    boolean invert = false;&#xD;
    InputStream saveFile = is;&#xD;
    ObjectInputStream save = new ObjectInputStream(saveFile);&#xD;
    finallanes = (Lanewithoutimage[]) save.readObject();&#xD;
    if (finallanes != null) {&#xD;
        Roi[] rois = new Roi[finallanes.length];&#xD;
        int i = 0;&#xD;
        ByteArrayOutputStream out;&#xD;
        ZipInputStream in = new ZipInputStream(zipfile.getInputStream(roizip));&#xD;
        ZipEntry entry = in.getNextEntry();&#xD;
        int len;&#xD;
        byte[] buf = new byte[1024];&#xD;
        while (entry != null) {&#xD;
            String name = entry.getName();&#xD;
            if (name.endsWith(&quot;.roi&quot;)) {&#xD;
                out = new ByteArrayOutputStream();&#xD;
                while ((len = in.read(buf)) > 0) {&#xD;
                    out.write(buf, 0, len);&#xD;
                }&#xD;
                out.close();&#xD;
                byte[] bytes = out.toByteArray();&#xD;
                RoiDecoder rd = new RoiDecoder(bytes, name);&#xD;
                rois[i] = rd.getRoi();&#xD;
                i++;&#xD;
                entry = in.getNextEntry();&#xD;
            }&#xD;
        }&#xD;
        bands = (Band[]) save.readObject();&#xD;
        normalisation = (Boolean) save.readObject();&#xD;
        initialoffset = (Double) save.readObject();&#xD;
        invert = (Boolean) save.readObject();&#xD;
        String marker = (String) save.readObject();&#xD;
        m.setBands(bands);&#xD;
        m.setNormalisation(normalisation);&#xD;
        m.setInitialoffset(initialoffset);&#xD;
        ///&#xD;
        m.finallanes = LaneswitoutimagetoLanes(finallanes, imp, rois);&#xD;
        m.setLanes(roisfromlanes(m.finallanes));&#xD;
        m.setInvertcolour(invert);&#xD;
        m.setMarker(marker);&#xD;
        if (finallanes != null &amp;&amp; finallanes.length != 0) {&#xD;
            m.makebuttonsavailable();&#xD;
        }&#xD;
        if (bands != null &amp;&amp; bands.length != 0) {&#xD;
            m.makebuttonstdavailable();&#xD;
        }&#xD;
        save.close();&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O2UJcBUTEemIe6OhVnSywA" name="Load" visibility="public" method="_O2WlsBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O2V-oBUTEemIe6OhVnSywA" name="m" type="_MEzrIBUTEemIe6OhVnSywA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O2WlsRUTEemIe6OhVnSywA" name="loadimageorstudy" visibility="public" method="_O2ZB8BUTEemIe6OhVnSywA" raisedException="_O2XMwBUTEemIe6OhVnSywA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O2ZpABUTEemIe6OhVnSywA" name="loadzipfile" visibility="public" method="_O2beMBUTEemIe6OhVnSywA" raisedException="_O2XMwBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O2a3IBUTEemIe6OhVnSywA" name="path"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O2gWsBUTEemIe6OhVnSywA" name="opengel" visibility="private" method="_O2kBEBUTEemIe6OhVnSywA" raisedException="_O2XMwBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O2g9wBUTEemIe6OhVnSywA" name="imp"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O2hk0BUTEemIe6OhVnSywA" name="is"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O2iL4BUTEemIe6OhVnSywA" name="roizip"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O2iy8BUTEemIe6OhVnSywA" name="zipfile"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_O2XMwBUTEemIe6OhVnSywA" name="ClassNotFoundException"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_O2nrcBUTEemIe6OhVnSywA" name="Save" visibility="public">
                <ownedAttribute xmi:type="uml:Property" xmi:id="_O2oSgBUTEemIe6OhVnSywA" name="imp" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_O2qHsBUTEemIe6OhVnSywA" name="finallanes" visibility="private" type="_MGiwgRUTEemIe6OhVnSywA" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_O2quwBUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O2quwRUTEemIe6OhVnSywA" value="*"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_O2r84BUTEemIe6OhVnSywA" name="bands" visibility="private" type="_MJxqsxUTEemIe6OhVnSywA" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_O2sj8BUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O2tLABUTEemIe6OhVnSywA" value="*"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_O2tyEBUTEemIe6OhVnSywA" name="normalisation" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_O2uZIBUTEemIe6OhVnSywA" name="initialoffset" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_O2vAMBUTEemIe6OhVnSywA" name="invert" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_O2vnQBUTEemIe6OhVnSywA" name="marker" visibility="private" isUnique="false">
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_O2wOUBUTEemIe6OhVnSywA" name="defaultValue">
                    <language>JAVA</language>
                    <body>&quot;&quot;</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O24xMBUTEemIe6OhVnSywA" name="Save" specification="_O2xccBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    this.imp = imp;&#xD;
    this.finallanes = finallanes;&#xD;
    this.bands = bands;&#xD;
    this.normalisation = normalisation;&#xD;
    this.initialoffset = initialoffset;&#xD;
    this.invert = invert;&#xD;
    this.marker = marker;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O270gBUTEemIe6OhVnSywA" name="Save" specification="_O24xMRUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    this.imp = imp;&#xD;
    this.finallanes = finallanes;&#xD;
    this.bands = bands;&#xD;
    this.normalisation = normalisation;&#xD;
    this.initialoffset = initialoffset;&#xD;
    this.invert = invert;&#xD;
    this.marker = marker;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O270ghUTEemIe6OhVnSywA" name="saveinfile" specification="_O270gRUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    SaveDialog sd = new SaveDialog(&quot;Save study...&quot;, imp.getTitle(), &quot;.zip&quot;);&#xD;
    String dir = sd.getDirectory();&#xD;
    String name = sd.getFileName();&#xD;
    if (dir == null || name == null)&#xD;
        return;&#xD;
    FileSaver fs = new FileSaver(imp);&#xD;
    fs.saveAsZip(dir + name);&#xD;
    FileOutputStream saveFile = new FileOutputStream(dir + name.substring(0, name.length() - 4) + &quot;.gel&quot;);&#xD;
    ObjectOutputStream save = new ObjectOutputStream(saveFile);&#xD;
    //save.writeObject(imp);&#xD;
    Lanewithoutimage[] ltlw = LanestoLaneswithoutimage(finallanes);&#xD;
    save.writeObject(ltlw);&#xD;
    // &#xD;
    save.writeObject(bands);&#xD;
    save.writeObject(normalisation);&#xD;
    save.writeObject(initialoffset);&#xD;
    save.writeObject(invert);&#xD;
    save.close();&#xD;
    ZipOutputStream zos = new ZipOutputStream(new FileOutputStream(dir + name.substring(0, name.length() - 4) + &quot;_rois.zip&quot;));&#xD;
    DataOutputStream out = new DataOutputStream(new BufferedOutputStream(zos));&#xD;
    RoiEncoder re = new RoiEncoder(out);&#xD;
    Roi[] rois = Lane.roisfromlanes(finallanes);&#xD;
    for (Roi roi : rois) {&#xD;
        zos.putNextEntry(new ZipEntry(roi.getName() + &quot;.roi&quot;));&#xD;
        re.write(roi);&#xD;
        out.flush();&#xD;
    }&#xD;
    out.close();&#xD;
    File zipfile = new File(dir + name);&#xD;
    File[] files = { new File(dir + name.substring(0, name.length() - 4) + &quot;.gel&quot;), new File(dir + name.substring(0, name.length() - 4) + &quot;_rois.zip&quot;) };&#xD;
    addFilesToZip(zipfile, files);&#xD;
    files[0].delete();&#xD;
    files[1].delete();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O28bkhUTEemIe6OhVnSywA" name="saveunfinishedexperiment" specification="_O270gxUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    String dir = System.getProperty(&quot;user.dir&quot;) + &quot;/GelJDBImages/&quot; + s.getId() + &quot;/&quot; + s.getUser().getUsername() + &quot;/unfinished/&quot;;&#xD;
    String name = id + &quot;.zip&quot;;&#xD;
    FileSaver fs = new FileSaver(imp);&#xD;
    fs.saveAsZip(dir + name);&#xD;
    FileOutputStream saveFile = new FileOutputStream(dir + name.substring(0, name.length() - 4) + &quot;.gel&quot;);&#xD;
    ObjectOutputStream save = new ObjectOutputStream(saveFile);&#xD;
    //save.writeObject(imp);&#xD;
    Lanewithoutimage[] ltlw = null;&#xD;
    if (finallanes != null) {&#xD;
        ltlw = LanestoLaneswithoutimage(finallanes);&#xD;
    }&#xD;
    save.writeObject(ltlw);&#xD;
    // &#xD;
    save.writeObject(bands);&#xD;
    save.writeObject(normalisation);&#xD;
    save.writeObject(initialoffset);&#xD;
    save.writeObject(invert);&#xD;
    save.writeObject(marker);&#xD;
    save.close();&#xD;
    ZipOutputStream zos = new ZipOutputStream(new FileOutputStream(dir + name.substring(0, name.length() - 4) + &quot;_rois.zip&quot;));&#xD;
    DataOutputStream out = new DataOutputStream(new BufferedOutputStream(zos));&#xD;
    RoiEncoder re = new RoiEncoder(out);&#xD;
    if (finallanes != null) {&#xD;
        Roi[] rois = rois = Lane.roisfromlanes(finallanes);&#xD;
        for (Roi roi : rois) {&#xD;
            zos.putNextEntry(new ZipEntry(roi.getName() + &quot;.roi&quot;));&#xD;
            re.write(roi);&#xD;
            out.flush();&#xD;
        }&#xD;
        out.close();&#xD;
    }&#xD;
    File zipfile = new File(dir + name);&#xD;
    File[] files = { new File(dir + name.substring(0, name.length() - 4) + &quot;.gel&quot;), new File(dir + name.substring(0, name.length() - 4) + &quot;_rois.zip&quot;) };&#xD;
    addFilesToZip(zipfile, files);&#xD;
    files[0].delete();&#xD;
    files[1].delete();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O3AtABUTEemIe6OhVnSywA" name="addFilesToZip" specification="_O29psBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    try {&#xD;
        File tmpZip = File.createTempFile(source.getName(), null);&#xD;
        tmpZip.delete();&#xD;
        if (!source.renameTo(tmpZip)) {&#xD;
            throw new Exception(&quot;Could not make temp file (&quot; + source.getName() + &quot;)&quot;);&#xD;
        }&#xD;
        byte[] buffer = new byte[1024];&#xD;
        ZipInputStream zin = new ZipInputStream(new FileInputStream(tmpZip));&#xD;
        ZipOutputStream out = new ZipOutputStream(new FileOutputStream(source));&#xD;
        for (int i = 0; i &lt; files.length; i++) {&#xD;
            InputStream in = new FileInputStream(files[i]);&#xD;
            out.putNextEntry(new ZipEntry(files[i].getName()));&#xD;
            for (int read = in.read(buffer); read > -1; read = in.read(buffer)) {&#xD;
                out.write(buffer, 0, read);&#xD;
            }&#xD;
            out.closeEntry();&#xD;
            in.close();&#xD;
        }&#xD;
        for (ZipEntry ze = zin.getNextEntry(); ze != null; ze = zin.getNextEntry()) {&#xD;
            out.putNextEntry(ze);&#xD;
            for (int read = zin.read(buffer); read > -1; read = zin.read(buffer)) {&#xD;
                out.write(buffer, 0, read);&#xD;
            }&#xD;
            out.closeEntry();&#xD;
        }&#xD;
        out.close();&#xD;
        tmpZip.delete();&#xD;
    } catch (Exception e) {&#xD;
        e.printStackTrace();&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O2xccBUTEemIe6OhVnSywA" name="Save" visibility="public" method="_O24xMBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O2zRoBUTEemIe6OhVnSywA" name="imp"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O2z4sBUTEemIe6OhVnSywA" name="finallanes" type="_MGiwgRUTEemIe6OhVnSywA">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_O20fwBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O21G0BUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O21t4BUTEemIe6OhVnSywA" name="bands" type="_MJxqsxUTEemIe6OhVnSywA">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_O22U8BUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O22U8RUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O228ABUTEemIe6OhVnSywA" name="normalisation">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O23jEBUTEemIe6OhVnSywA" name="initialoffset">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O24KIBUTEemIe6OhVnSywA" name="invert">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O24xMRUTEemIe6OhVnSywA" name="Save" visibility="public" method="_O270gBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O26mYBUTEemIe6OhVnSywA" name="imp"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O26mYRUTEemIe6OhVnSywA" name="finallanes" type="_MGiwgRUTEemIe6OhVnSywA">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_O26mYhUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O26mYxUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O27NcBUTEemIe6OhVnSywA" name="bands" type="_MJxqsxUTEemIe6OhVnSywA">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_O27NcRUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O27NchUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O27NcxUTEemIe6OhVnSywA" name="normalisation">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O27NdBUTEemIe6OhVnSywA" name="initialoffset">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O27NdRUTEemIe6OhVnSywA" name="invert">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O27NdhUTEemIe6OhVnSywA" name="marker"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O270gRUTEemIe6OhVnSywA" name="saveinfile" visibility="public" method="_O270ghUTEemIe6OhVnSywA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O270gxUTEemIe6OhVnSywA" name="saveunfinishedexperiment" visibility="public" method="_O28bkhUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O28bkBUTEemIe6OhVnSywA" name="s" type="_EFkjsBUTEemIe6OhVnSywA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O28bkRUTEemIe6OhVnSywA" name="id">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O29psBUTEemIe6OhVnSywA" name="addFilesToZip" visibility="public" isStatic="true" method="_O3AtABUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O29psRUTEemIe6OhVnSywA" name="source"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O2_e4BUTEemIe6OhVnSywA" name="files">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_O3AF8BUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O3AF8RUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                </ownedOperation>
              </packagedElement>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_O3E-cBUTEemIe6OhVnSywA" name="Standards">
              <packagedElement xmi:type="uml:Class" xmi:id="_O3HasBUTEemIe6OhVnSywA" name="ComputeStandards" visibility="public">
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O3MTMRUTEemIe6OhVnSywA" name="computerflines" specification="_O3IBwBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    int[] indexes = indexesstandardlanes(lanes);&#xD;
    int numberofstdlanes = indexes.length;&#xD;
    CurveFitter[] curves = new CurveFitter[lanes[indexes[0]].getStdpositionbands().length];&#xD;
    // For each standard position, we compute the rf-line &#xD;
    for (int i = 0; i &lt; lanes[indexes[0]].getStdpositionbands().length; i++) {&#xD;
        double[] x = new double[indexes.length];&#xD;
        double[] y = new double[indexes.length];&#xD;
        for (int j = 0; j &lt; indexes.length; j++) {&#xD;
            x[j] = lanes[indexes[j]].getRoi().getBounds().x + (lanes[indexes[j]].getRoi().getBounds().width / 2);&#xD;
            y[j] = lanes[indexes[j]].getPositionbands()[i];&#xD;
        }&#xD;
        curves[i] = new CurveFitter(x, y);&#xD;
        curves[i].doFit(numberofstdlanes - 2);&#xD;
    }&#xD;
    return curves;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O3UPABUTEemIe6OhVnSywA" name="computestandardpositionsLane" specification="_O3M6QBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    double[] y = new double[curves.length];&#xD;
    double x = l.getRoi().getBounds().x + (l.getRoi().getBounds().width / 2);&#xD;
    double[] xs = new double[curves.length];&#xD;
    // lane with the curves.&#xD;
    for (int i = 0; i &lt; curves.length; i++) {&#xD;
        y[i] = curves[i].f(curves[i].getParams(), x);&#xD;
    }&#xD;
    // From the obtained values, we compute the curve that fits those values &#xD;
    // with the standard positions.&#xD;
    CurveFitter curve = new CurveFitter(y, standard);&#xD;
    curve.doFit(method);&#xD;
    l.setCurve(curve);&#xD;
    l.setCurvemethod(method);&#xD;
    double[] params = curve.getParams();&#xD;
    double[] stdspositions = new double[l.getPositionbands().length];&#xD;
    for (int j = 0; j &lt; stdspositions.length; j++) {&#xD;
        stdspositions[j] = curve.f(params, l.getPositionbands()[j]);&#xD;
    }&#xD;
    l.setOffset(offset - y[0]);&#xD;
    l.setStdpositionbands(stdspositions);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O3XSUBUTEemIe6OhVnSywA" name="computestandardpositionsLane" specification="_O3VdIBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    CurveFitter curve = l.getCurve();&#xD;
    double[] params = curve.getParams();&#xD;
    double[] stdspositions = new double[l.getPositionbands().length];&#xD;
    for (int j = 0; j &lt; stdspositions.length; j++) {&#xD;
        stdspositions[j] = curve.f(params, l.getPositionbands()[j]);&#xD;
    }&#xD;
    l.setStdpositionbands(stdspositions);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O3cK0BUTEemIe6OhVnSywA" name="computestdlanes" specification="_O3YgcBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    CurveFitter[] curves = computerflines(lanes);&#xD;
    int[] indexes = indexesstandardlanes(lanes);&#xD;
    for (Lane l : lanes) {&#xD;
        if (!l.isIsstandard()) {&#xD;
            if (l.getCurve() == null) {&#xD;
                computestandardpositionsLane(l, lanes[indexes[0]].getStdpositionbands(), curves, method, offset);&#xD;
            } else {&#xD;
                computestandardpositionsLane(l);&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O3fOIBUTEemIe6OhVnSywA" name="computestdlanes" specification="_O3dY8BUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    Lane[] lanes = m.finallanes;&#xD;
    int[] indexes = indexesstandardlanes(lanes);&#xD;
    // We distinguish whether there are one or more than one markers&#xD;
    if (indexes.length > 1) {&#xD;
        /// Compute the rflines&#xD;
        CurveFitter[] curves = computerflines(lanes);&#xD;
        /// in the rest of the lanes.&#xD;
        for (Lane l : lanes) {&#xD;
            if (l.isIsstandard()) {&#xD;
                l.setMarkerpositionbands(l.getPositionbands());&#xD;
            } else {&#xD;
                int[] y = new int[curves.length];&#xD;
                double x = l.getRoi().getBounds().x + (l.getRoi().getBounds().width / 2);&#xD;
                for (int i = 0; i &lt; curves.length; i++) {&#xD;
                    y[i] = (int) curves[i].f(curves[i].getParams(), x);&#xD;
                }&#xD;
                l.setMarkerpositionbands(y);&#xD;
            }&#xD;
        }&#xD;
    } else {&#xD;
        int[] bandspos = lanes[indexes[0]].getPositionbands();&#xD;
        for (Lane l : lanes) {&#xD;
            l.setMarkerpositionbands(bandspos);&#xD;
        }&#xD;
    }&#xD;
    /// We generate the migration model given from the perfect standard&#xD;
    double[] infomarker = readstandardinfofromfile(m.getMarkername());&#xD;
    double[] posmarker = readstandardposfromfile(m.getMarkername());&#xD;
    double[] mwmarker = readstandardfromfile(m.getMarkername());&#xD;
    CurveFitter model = new CurveFitter(posmarker, mwmarker);&#xD;
    model.doFit((int) infomarker[2]);&#xD;
    /// We find the molecular weights positions that have been used in the gel&#xD;
    double[] mws = lanes[indexes[0]].getStdpositionbands();&#xD;
    boolean[] inmarker = new boolean[posmarker.length];&#xD;
    for (int i = 0; i &lt; inmarker.length; i++) {&#xD;
        inmarker[i] = member(mwmarker[i], mws);&#xD;
    }&#xD;
    double[] markerpos = new double[mws.length];&#xD;
    int i = 0;&#xD;
    for (int j = 0; j &lt; inmarker.length; j++) {&#xD;
        if (inmarker[j]) {&#xD;
            markerpos[i] = posmarker[j];&#xD;
            i++;&#xD;
        }&#xD;
    }&#xD;
    // Now, we can normalise the lanes&#xD;
    for (int j = 0; j &lt; lanes.length; j++) {&#xD;
        normaliselane(lanes[j], j, (int) infomarker[0], (int) infomarker[1], markerpos, model, m.getinvertcolour());&#xD;
        m.setLane(lanes[j].getRoi(), j);&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O3gcQBUTEemIe6OhVnSywA" name="computemwlanes" specification="_O3fOIRUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    Lane[] lanes = m.finallanes;&#xD;
    int[] indexes = indexesstandardlanes(lanes);&#xD;
    /// We generate the migration model given from the perfect standard&#xD;
    double[] infomarker = readstandardinfofromfile(m.getMarkername());&#xD;
    double[] posmarker = readstandardposfromfile(m.getMarkername());&#xD;
    double[] mwmarker = readstandardfromfile(m.getMarkername());&#xD;
    CurveFitter model = new CurveFitter(posmarker, mwmarker);&#xD;
    model.doFit((int) infomarker[2]);&#xD;
    /// We find the molecular weights positions that have been used in the gel&#xD;
    double[] mws = lanes[indexes[0]].getStdpositionbands();&#xD;
    boolean[] inmarker = new boolean[posmarker.length];&#xD;
    for (int i = 0; i &lt; inmarker.length; i++) {&#xD;
        inmarker[i] = member(mwmarker[i], mws);&#xD;
    }&#xD;
    double[] markerpos = new double[mws.length];&#xD;
    int i = 0;&#xD;
    for (int j = 0; j &lt; inmarker.length; j++) {&#xD;
        if (inmarker[j]) {&#xD;
            markerpos[i] = posmarker[j];&#xD;
            i++;&#xD;
        }&#xD;
    }&#xD;
    // Now, we can normalise the lanes&#xD;
    for (Lane l : lanes) {&#xD;
        computemwlane(l, (int) infomarker[0], (int) infomarker[1], markerpos, model, m.getinvertcolour());&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O3ktsBUTEemIe6OhVnSywA" name="computestdlane" specification="_O3hqYBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    /// We generate the migration model given from the perfect standard&#xD;
    double[] infomarker = readstandardinfofromfile(marker);&#xD;
    double[] posmarker = readstandardposfromfile(marker);&#xD;
    double[] mwmarker = readstandardfromfile(marker);&#xD;
    CurveFitter model = new CurveFitter(posmarker, mwmarker);&#xD;
    model.doFit((int) infomarker[2]);&#xD;
    double[] mws = new double[lane.getPositionbands().length];&#xD;
    double[] params = model.getParams();&#xD;
    int[] bands2 = new int[lane.getPositionbands().length];&#xD;
    for (int i = 0; i &lt; mws.length; i++) {&#xD;
        bands2[i] = (int) (lane.getPositionbands()[i]);&#xD;
        mws[i] = model.f(params, lane.getPositionbands()[i]);&#xD;
    }&#xD;
    lane.setStdpositionbands(mws);&#xD;
    lane.setPositionbands2(bands2);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O3pmMBUTEemIe6OhVnSywA" name="computestdlanes" specification="_O3lUwBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    int[] indexes = indexesstandardlanes(lanes);&#xD;
    /// Compute the rflines&#xD;
    CurveFitter[] curves = computerflines(lanes);&#xD;
    /// in the rest of the lanes.&#xD;
    for (Lane l : lanes) {&#xD;
        if (l.isIsstandard()) {&#xD;
            l.setMarkerpositionbands(l.getPositionbands());&#xD;
        } else {&#xD;
            int[] y = new int[curves.length];&#xD;
            double x = l.getRoi().getBounds().x + (l.getRoi().getBounds().width / 2);&#xD;
            for (int i = 0; i &lt; curves.length; i++) {&#xD;
                y[i] = (int) curves[i].f(curves[i].getParams(), x);&#xD;
            }&#xD;
            l.setMarkerpositionbands(y);&#xD;
        }&#xD;
    }&#xD;
    /// We generate the migration model given from the perfect standard&#xD;
    double[] infomarker = readstandardinfofromfile(marker);&#xD;
    double[] posmarker = readstandardposfromfile(marker);&#xD;
    double[] mwmarker = readstandardfromfile(marker);&#xD;
    CurveFitter model = new CurveFitter(posmarker, mwmarker);&#xD;
    model.doFit((int) infomarker[2]);&#xD;
    /// We find the molecular weights positions that have been used in the gel&#xD;
    double[] mws = lanes[indexes[0]].getStdpositionbands();&#xD;
    boolean[] inmarker = new boolean[posmarker.length];&#xD;
    for (int i = 0; i &lt; inmarker.length; i++) {&#xD;
        inmarker[i] = member(mwmarker[i], mws);&#xD;
    }&#xD;
    double[] markerpos = new double[mws.length];&#xD;
    int i = 0;&#xD;
    for (int j = 0; j &lt; inmarker.length; j++) {&#xD;
        if (inmarker[j]) {&#xD;
            markerpos[i] = posmarker[j];&#xD;
            i++;&#xD;
        }&#xD;
    }&#xD;
    // Now, we can normalise the lanes&#xD;
    for (int j = 0; j &lt; lanes.length; j++) {&#xD;
        normaliselane(lanes[j], j, (int) infomarker[0], (int) infomarker[1], markerpos, model, invert);&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O3spgBUTEemIe6OhVnSywA" name="member" specification="_O3pmMRUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    for (double d1 : ds) {&#xD;
        if (d1 == d) {&#xD;
            return true;&#xD;
        }&#xD;
    }&#xD;
    return false;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O30lUBUTEemIe6OhVnSywA" name="computemwlane" specification="_O3t3oBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    /// we compute where the marker positions are found&#xD;
    double[] heights = new double[l.getMarkerpositionbands().length];&#xD;
    for (int i = 0; i &lt; heights.length; i++) {&#xD;
        heights[i] = l.getMarkerpositionbands()[i];&#xD;
    }&#xD;
    //// Now, we compute the molecular weights of the bands of the lane&#xD;
    if (!l.isIsstandard()) {&#xD;
        double[] mws = new double[l.getPositionbands().length];&#xD;
        double[] params = model.getParams();&#xD;
        int[] bands2 = new int[l.getPositionbands().length];&#xD;
        for (int i = 0; i &lt; mws.length; i++) {&#xD;
            bands2[i] = (int) (l.getPositionbands()[i]);&#xD;
            mws[i] = model.f(params, l.getPositionbands()[i]);&#xD;
        }&#xD;
        l.setStdpositionbands(mws);&#xD;
        l.setPositionbands2(bands2);&#xD;
    } else {&#xD;
        int[] bands2 = new int[l.getPositionbands().length];&#xD;
        for (int i = 0; i &lt; bands2.length; i++) {&#xD;
            bands2[i] = (int) (l.getPositionbands()[i]);&#xD;
        }&#xD;
        l.setPositionbands2(bands2);&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O37TARUTEemIe6OhVnSywA" name="normaliselane" specification="_O31zcBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    /// First, we scale the image&#xD;
    ImagePlus imp = l.getImp();&#xD;
    ImageProcessor ip0 = imp.getProcessor();&#xD;
    double scalefactor = (double) h / (double) ip0.getHeight();&#xD;
    ip0.setInterpolationMethod(BICUBIC);&#xD;
    ImageProcessor ip = ip0.resize(w, h, true);&#xD;
    imp.setProcessor(ip);&#xD;
    //??&#xD;
    imp.updateAndDraw();&#xD;
    //to remove&#xD;
    Roi r = new Roi(pos * w, 0, w, h);&#xD;
    r.setName(l.getRoi().getName());&#xD;
    l.setRoi(r);&#xD;
    /// we compute where the marker positions are found&#xD;
    double[] heights = new double[l.getMarkerpositionbands().length];&#xD;
    for (int i = 0; i &lt; heights.length; i++) {&#xD;
        heights[i] = l.getMarkerpositionbands()[i] * scalefactor;&#xD;
    }&#xD;
    // We compute the shifts of each position&#xD;
    double[] shifts = new double[heights.length];&#xD;
    for (int i = 0; i &lt; heights.length; i++) {&#xD;
        shifts[i] = markerpos[i] - heights[i];&#xD;
    }&#xD;
    /// Image normalisation&#xD;
    SmoothingCubicSpline fit = new SmoothingCubicSpline(heights, shifts, 1);&#xD;
    ImagePlus imp2;&#xD;
    if (invert) {&#xD;
        imp2 = IJ.createImage(imp.getTitle(), &quot;&quot; + imp.getType() + &quot;-white&quot;, imp.getWidth(), imp.getHeight(), 1);&#xD;
    } else {&#xD;
        imp2 = IJ.createImage(imp.getTitle(), &quot;&quot; + imp.getType() + &quot;-black&quot;, imp.getWidth(), imp.getHeight(), 1);&#xD;
    }&#xD;
    ImageProcessor ip2 = imp2.getProcessor();&#xD;
    for (int i = 0; i &lt; imp.getHeight(); i++) {&#xD;
        for (int j = 0; j &lt; imp.getWidth(); j++) {&#xD;
            if (i > 0) {&#xD;
                int jump = (int) (i + fit.evaluate(i)) - (int) (i - 1 + fit.evaluate(i - 1));&#xD;
                if (jump > 1) {&#xD;
                    for (int k = 1; k &lt; jump; k++) {&#xD;
                        ip2.putPixelValue(j, (int) (i - 1 + fit.evaluate(i - 1)) + k, ip.getPixelValue(j, i - 1));&#xD;
                    }&#xD;
                }&#xD;
            }&#xD;
            ip2.putPixelValue(j, (int) (i + fit.evaluate(i)), ip.getPixelValue(j, i));&#xD;
        }&#xD;
    }&#xD;
    imp2.updateAndDraw();&#xD;
    l.setImp(imp2);&#xD;
    //// Now, we compute the molecular weights of the bands of the lane&#xD;
    if (!l.isIsstandard()) {&#xD;
        double[] mws = new double[l.getPositionbands().length];&#xD;
        double[] params = model.getParams();&#xD;
        int[] bands2 = new int[l.getPositionbands().length];&#xD;
        for (int i = 0; i &lt; mws.length; i++) {&#xD;
            bands2[i] = (int) (l.getPositionbands()[i] * scalefactor + fit.evaluate(l.getPositionbands()[i] * scalefactor));&#xD;
            mws[i] = model.f(params, l.getPositionbands()[i] * scalefactor + fit.evaluate(l.getPositionbands()[i] * scalefactor));&#xD;
        }&#xD;
        l.setStdpositionbands(mws);&#xD;
        l.setPositionbands2(bands2);&#xD;
    } else {&#xD;
        int[] bands2 = new int[l.getPositionbands().length];&#xD;
        for (int i = 0; i &lt; bands2.length; i++) {&#xD;
            bands2[i] = (int) (l.getPositionbands()[i] * scalefactor + fit.evaluate(l.getPositionbands()[i] * scalefactor));&#xD;
        }&#xD;
        l.setPositionbands2(bands2);&#xD;
    }&#xD;
    IJ.run(imp2, &quot;Rotate 90 Degrees Left&quot;, &quot;&quot;);&#xD;
    IJ.run(imp2, &quot;Select All&quot;, &quot;&quot;);&#xD;
    ProfilePlot pp = new ProfilePlot(imp2);&#xD;
    double[] profile = pp.getProfile();&#xD;
    l.setProfile(profile);&#xD;
    IJ.run(imp2, &quot;Rotate 90 Degrees Right&quot;, &quot;&quot;);&#xD;
    l.setScalefactor(scalefactor);&#xD;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O3IBwBUTEemIe6OhVnSywA" name="computerflines" visibility="public" isStatic="true" method="_O3MTMRUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O3Io0BUTEemIe6OhVnSywA" direction="return">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_O3J28BUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O3KeABUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O3LFEBUTEemIe6OhVnSywA" name="lanes" type="_MGiwgRUTEemIe6OhVnSywA">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_O3LsIBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O3MTMBUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O3M6QBUTEemIe6OhVnSywA" name="computestandardpositionsLane" visibility="public" isStatic="true" method="_O3UPABUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O3OIYBUTEemIe6OhVnSywA" name="l" type="_MGiwgRUTEemIe6OhVnSywA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O3PWgBUTEemIe6OhVnSywA" name="standard">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_O3P9kBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O3P9kRUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O3RLsBUTEemIe6OhVnSywA" name="curves">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_O3RLsRUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O3RywBUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O3SZ0BUTEemIe6OhVnSywA" name="method">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O3Tn8BUTEemIe6OhVnSywA" name="offset">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O3VdIBUTEemIe6OhVnSywA" name="computestandardpositionsLane" visibility="private" isStatic="true" method="_O3XSUBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O3WEMBUTEemIe6OhVnSywA" name="l" type="_MGiwgRUTEemIe6OhVnSywA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O3YgcBUTEemIe6OhVnSywA" name="computestdlanes" visibility="public" isStatic="true" method="_O3cK0BUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O3ZukBUTEemIe6OhVnSywA" name="lanes" type="_MGiwgRUTEemIe6OhVnSywA">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_O3aVoBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O3a8sBUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O3a8sRUTEemIe6OhVnSywA" name="method">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O3bjwBUTEemIe6OhVnSywA" name="offset">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O3dY8BUTEemIe6OhVnSywA" name="computestdlanes" visibility="public" isStatic="true" method="_O3fOIBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O3enEBUTEemIe6OhVnSywA" name="m" type="_MEzrIBUTEemIe6OhVnSywA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O3fOIRUTEemIe6OhVnSywA" name="computemwlanes" visibility="public" isStatic="true" method="_O3gcQBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O3f1MBUTEemIe6OhVnSywA" name="m" type="_MEzrIBUTEemIe6OhVnSywA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O3hqYBUTEemIe6OhVnSywA" name="computestdlane" visibility="public" isStatic="true" method="_O3ktsBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O3i4gBUTEemIe6OhVnSywA" name="lane" type="_MGiwgRUTEemIe6OhVnSywA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O3jfkBUTEemIe6OhVnSywA" name="marker"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O3kGoBUTEemIe6OhVnSywA" name="invert">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O3lUwBUTEemIe6OhVnSywA" name="computestdlanes" visibility="public" isStatic="true" method="_O3pmMBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O3l70BUTEemIe6OhVnSywA" name="lanes" type="_MGiwgRUTEemIe6OhVnSywA">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_O3mi4BUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O3nJ8BUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O3nxABUTEemIe6OhVnSywA" name="marker"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O3oYEBUTEemIe6OhVnSywA" name="invert">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O3pmMRUTEemIe6OhVnSywA" name="member" visibility="private" isStatic="true" method="_O3spgBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O3qNQBUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O3q0UBUTEemIe6OhVnSywA" name="d">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O3rbYBUTEemIe6OhVnSywA" name="ds">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_O3sCcBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O3sCcRUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O3t3oBUTEemIe6OhVnSywA" name="computemwlane" visibility="private" isStatic="true" method="_O30lUBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O3vFwBUTEemIe6OhVnSywA" name="l" type="_MGiwgRUTEemIe6OhVnSywA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O3vs0BUTEemIe6OhVnSywA" name="w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O3wT4BUTEemIe6OhVnSywA" name="h">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O3w68BUTEemIe6OhVnSywA" name="markerpos">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_O3xiABUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O3yJEBUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O3ywIBUTEemIe6OhVnSywA" name="model"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O3z-QBUTEemIe6OhVnSywA" name="invert">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O31zcBUTEemIe6OhVnSywA" name="normaliselane" visibility="private" isStatic="true" method="_O37TARUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O32agBUTEemIe6OhVnSywA" name="l" type="_MGiwgRUTEemIe6OhVnSywA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O33BkBUTEemIe6OhVnSywA" name="pos">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O34PsBUTEemIe6OhVnSywA" name="w">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O34PsRUTEemIe6OhVnSywA" name="h">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O342wBUTEemIe6OhVnSywA" name="markerpos">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_O35d0BUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O36E4BUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O36r8BUTEemIe6OhVnSywA" name="model"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O37TABUTEemIe6OhVnSywA" name="invert">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_O3-9YBUTEemIe6OhVnSywA" name="CurveCalibration" visibility="public">
                <ownedAttribute xmi:type="uml:Property" xmi:id="_O4ALgBUTEemIe6OhVnSywA" name="x" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_O4BZoBUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O4BZoRUTEemIe6OhVnSywA" value="*"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_O4CAsBUTEemIe6OhVnSywA" name="y" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_O4CnwBUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O4DO0BUTEemIe6OhVnSywA" value="*"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_O4D14BUTEemIe6OhVnSywA" name="cf" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_O4FEABUTEemIe6OhVnSywA" name="method" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_O4FrEBUTEemIe6OhVnSywA" name="m" visibility="private" type="_MEzrIBUTEemIe6OhVnSywA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_O4FrERUTEemIe6OhVnSywA" name="a" visibility="private" isUnique="false">
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_O4FrEhUTEemIe6OhVnSywA" name="defaultValue">
                    <language>JAVA</language>
                    <body>null</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_O4HgQRUTEemIe6OhVnSywA" name="ia" visibility="private" isUnique="false">
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_O4HgQhUTEemIe6OhVnSywA" name="defaultValue">
                    <language>JAVA</language>
                    <body>null</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_O4J8gRUTEemIe6OhVnSywA" name="s4" visibility="private" isUnique="false">
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_O4J8ghUTEemIe6OhVnSywA" name="defaultValue">
                    <language>JAVA</language>
                    <body>null</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_O4LxsBUTEemIe6OhVnSywA" name="s4n" visibility="private" isUnique="false">
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_O4M_0BUTEemIe6OhVnSywA" name="defaultValue">
                    <language>JAVA</language>
                    <body>null</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_O4O1ABUTEemIe6OhVnSywA" name="s41" visibility="private" type="_Mhu3sBUTEemIe6OhVnSywA" isUnique="false">
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_O4PcEBUTEemIe6OhVnSywA" name="defaultValue">
                    <language>JAVA</language>
                    <body>null</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_O4SfYBUTEemIe6OhVnSywA" name="s42" visibility="private" isUnique="false">
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_O4TGcBUTEemIe6OhVnSywA" name="defaultValue">
                    <language>JAVA</language>
                    <body>null</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_O4U7oBUTEemIe6OhVnSywA" name="ia1" visibility="private" type="_MhQ9oRUTEemIe6OhVnSywA" isUnique="false">
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_O4WJwBUTEemIe6OhVnSywA" name="defaultValue">
                    <language>JAVA</language>
                    <body>null</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O4abMBUTEemIe6OhVnSywA" name="CurveCalibration" specification="_O4Ww0BUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    this.x = x;&#xD;
    this.y = y;&#xD;
    this.m = m;&#xD;
    cf = new CurveFitter(x, y);&#xD;
    this.cf.doFit(12);&#xD;
    plot(this.cf);&#xD;
    ImagePlus imp = WindowManager.getCurrentImage();&#xD;
    ImageCanvas cc = new ImageCanvas(imp);&#xD;
    CurveCalibrationWindow cc1 = new CurveCalibrationWindow(imp, cc, x, y, cf, 0, m);&#xD;
    cc1.requestFocus();&#xD;
    cc1.setAlwaysOnTop(true);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O4hv8BUTEemIe6OhVnSywA" name="CurveCalibration" specification="_O4bpUBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    this.x = x;&#xD;
    this.y = y;&#xD;
    this.m = m;&#xD;
    this.a = a;&#xD;
    cf = new CurveFitter(x, y);&#xD;
    this.cf.doFit(12);&#xD;
    plot(this.cf);&#xD;
    ImagePlus imp = WindowManager.getCurrentImage();&#xD;
    ImageCanvas cc = new ImageCanvas(imp);&#xD;
    CurveCalibrationWindow cc1 = new CurveCalibrationWindow(imp, cc, x, y, cf, 0, m);&#xD;
    cc1.requestFocus();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O4prwBUTEemIe6OhVnSywA" name="CurveCalibration" specification="_O4i-EBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    this.x = x;&#xD;
    this.y = y;&#xD;
    this.m = m;&#xD;
    this.ia = a;&#xD;
    this.s4 = s4;&#xD;
    cf = new CurveFitter(x, y);&#xD;
    this.cf.doFit(12);&#xD;
    plot(this.cf);&#xD;
    ImagePlus imp = WindowManager.getCurrentImage();&#xD;
    ImageCanvas cc = new ImageCanvas(imp);&#xD;
    CurveCalibrationWindow cc1 = new CurveCalibrationWindow(imp, cc, x, y, cf, 0, m);&#xD;
    cc1.requestFocus();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O4xAgBUTEemIe6OhVnSywA" name="CurveCalibration" specification="_O4q54BUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    this.x = x;&#xD;
    this.y = y;&#xD;
    this.m = m;&#xD;
    this.ia = a;&#xD;
    this.s4n = s4new;&#xD;
    cf = new CurveFitter(x, y);&#xD;
    this.cf.doFit(12);&#xD;
    plot(this.cf);&#xD;
    ImagePlus imp = WindowManager.getCurrentImage();&#xD;
    ImageCanvas cc = new ImageCanvas(imp);&#xD;
    CurveCalibrationWindow cc1 = new CurveCalibrationWindow(imp, cc, x, y, cf, 0, m);&#xD;
    cc1.requestFocus();&#xD;
    cc1.setAlwaysOnTop(true);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O43HIRUTEemIe6OhVnSywA" name="CurveCalibration" specification="_O4y1sBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    this.x = x;&#xD;
    this.y = y;&#xD;
    this.m = m;&#xD;
    this.ia1 = a;&#xD;
    this.s41 = s41;&#xD;
    cf = new CurveFitter(x, y);&#xD;
    this.cf.doFit(12);&#xD;
    plot(this.cf);&#xD;
    ImagePlus imp = WindowManager.getCurrentImage();&#xD;
    ImageCanvas cc = new ImageCanvas(imp);&#xD;
    CurveCalibrationWindow cc1 = new CurveCalibrationWindow(imp, cc, x, y, cf, 0, m);&#xD;
    cc1.requestFocus();&#xD;
    cc1.setAlwaysOnTop(true);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O5AREBUTEemIe6OhVnSywA" name="CurveCalibration" specification="_O45jYBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    this.x = x;&#xD;
    this.y = y;&#xD;
    this.m = m;&#xD;
    this.ia1 = a;&#xD;
    this.s42 = s4new;&#xD;
    cf = new CurveFitter(x, y);&#xD;
    this.cf.doFit(12);&#xD;
    plot(this.cf);&#xD;
    ImagePlus imp = WindowManager.getCurrentImage();&#xD;
    ImageCanvas cc = new ImageCanvas(imp);&#xD;
    CurveCalibrationWindow cc1 = new CurveCalibrationWindow(imp, cc, x, y, cf, 0, m);&#xD;
    cc1.requestFocus();&#xD;
    cc1.setAlwaysOnTop(true);&#xD;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O4Ww0BUTEemIe6OhVnSywA" name="CurveCalibration" visibility="public" method="_O4abMBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O4X-8RUTEemIe6OhVnSywA" name="x">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_O4X-8hUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O4YmABUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O4YmARUTEemIe6OhVnSywA" name="y">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_O4ZNEBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O4ZNERUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O4Z0IBUTEemIe6OhVnSywA" name="m" type="_MEzrIBUTEemIe6OhVnSywA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O4bpUBUTEemIe6OhVnSywA" name="CurveCalibration" visibility="public" method="_O4hv8BUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O4degBUTEemIe6OhVnSywA" name="x">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_O4degRUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O4eFkBUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O4esoBUTEemIe6OhVnSywA" name="y">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_O4esoRUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O4fTsBUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O4f6wBUTEemIe6OhVnSywA" name="m" type="_MEzrIBUTEemIe6OhVnSywA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O4hI4BUTEemIe6OhVnSywA" name="a"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O4i-EBUTEemIe6OhVnSywA" name="CurveCalibration" visibility="public" method="_O4prwBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O4kzQBUTEemIe6OhVnSywA" name="x">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_O4laUBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O4mBYBUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O4mBYRUTEemIe6OhVnSywA" name="y">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_O4mocBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O4nPgBUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O4n2kBUTEemIe6OhVnSywA" name="m" type="_MEzrIBUTEemIe6OhVnSywA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O4odoBUTEemIe6OhVnSywA" name="a"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O4pEsBUTEemIe6OhVnSywA" name="s4"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O4q54BUTEemIe6OhVnSywA" name="CurveCalibration" visibility="public" method="_O4xAgBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O4svEBUTEemIe6OhVnSywA" name="x">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_O4tWIBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O4tWIRUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O4t9MBUTEemIe6OhVnSywA" name="y">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_O4ukQBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O4ukQRUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O4vLUBUTEemIe6OhVnSywA" name="m" type="_MEzrIBUTEemIe6OhVnSywA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O4vyYBUTEemIe6OhVnSywA" name="a"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O4wZcBUTEemIe6OhVnSywA" name="s4new"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O4y1sBUTEemIe6OhVnSywA" name="CurveCalibration" visibility="public" method="_O43HIRUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O40D0BUTEemIe6OhVnSywA" name="x">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_O40D0RUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O40D0hUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O40D0xUTEemIe6OhVnSywA" name="y">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_O40q4BUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O41R8BUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O41R8RUTEemIe6OhVnSywA" name="m" type="_MEzrIBUTEemIe6OhVnSywA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O42gEBUTEemIe6OhVnSywA" name="a" type="_MhQ9oRUTEemIe6OhVnSywA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O43HIBUTEemIe6OhVnSywA" name="s41" type="_Mhu3sBUTEemIe6OhVnSywA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O45jYBUTEemIe6OhVnSywA" name="CurveCalibration" visibility="public" method="_O5AREBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O47YkBUTEemIe6OhVnSywA" name="x">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_O47_oBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O47_oRUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O48msBUTEemIe6OhVnSywA" name="y">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_O49NwBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O49NwRUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O4900BUTEemIe6OhVnSywA" name="m" type="_MEzrIBUTEemIe6OhVnSywA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O4-b4BUTEemIe6OhVnSywA" name="a" type="_MhQ9oRUTEemIe6OhVnSywA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O4_qABUTEemIe6OhVnSywA" name="s4new"/>
                </ownedOperation>
                <nestedClassifier xmi:type="uml:Class" xmi:id="_O5A4IBUTEemIe6OhVnSywA" name="CurveCalibrationWindow">
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_O5EigBUTEemIe6OhVnSywA" name="button1" visibility="private" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_O5FwoBUTEemIe6OhVnSywA" name="button2" visibility="private" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_O5GXsBUTEemIe6OhVnSywA" name="button3" visibility="private" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_O5Iz8BUTEemIe6OhVnSywA" name="choice" visibility="private" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_O5KCEBUTEemIe6OhVnSywA" name="x" visibility="private" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_O5KpIBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O5LQMBUTEemIe6OhVnSywA" value="*"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_O5LQMRUTEemIe6OhVnSywA" name="y" visibility="private" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_O5L3QBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O5MeUBUTEemIe6OhVnSywA" value="*"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_O5NFYBUTEemIe6OhVnSywA" name="cf" visibility="private" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_O5OTgBUTEemIe6OhVnSywA" name="method" visibility="private" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_O5O6kBUTEemIe6OhVnSywA" name="m" visibility="private" type="_MEzrIBUTEemIe6OhVnSywA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_O5QIsBUTEemIe6OhVnSywA" name="fitList" visibility="private" isLeaf="true" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_O5QIsRUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O5QIshUTEemIe6OhVnSywA" value="*"/>
                    <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_O5QIsxUTEemIe6OhVnSywA" name="defaultValue">
                      <language>JAVA</language>
                      <body>{ &quot;Gaussian&quot;, &quot;y = a+b*ln(x-c)&quot;, &quot;Rodbard&quot;, &quot;Log&quot;, &quot;Straight Line&quot;, &quot;2nd Degree Polynomial&quot;, &quot;3rd Degree Polynomial&quot;, &quot;4th Degree Polynomial&quot;, &quot;Exponential&quot;, &quot;Power&quot;, &quot;Gamma Variate&quot;, &quot;Rodbard (NIH Image)&quot;, &quot;Exponential with Offset&quot;, &quot;Exponential Recovery&quot;, &quot;Inverse Rodbard&quot;, &quot;Exponential (linear regression)&quot;, &quot;Power (linear regression)&quot;, &quot;5th Degree Polynomial&quot;, &quot;6th Degree Polynomial&quot;, &quot;7th Degree Polynomial&quot;, &quot;8th Degree Polynomial&quot;, &quot;Gaussian (no offset)&quot;, &quot;Exponential Recovery (no offset)&quot;, &quot;Chapman-Richards&quot; }</body>
                    </defaultValue>
                  </ownedAttribute>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O5YEgBUTEemIe6OhVnSywA" name="CurveCalibrationWindow" specification="_O5QvwBUTEemIe6OhVnSywA">
                    <language>JAVA</language>
                    <body>&#xD;
    super(imp, ic);&#xD;
    setTitle(&quot;Curve calibration&quot;);&#xD;
    setLayout(new FlowLayout());&#xD;
    setResizable(true);&#xD;
    this.x = x;&#xD;
    this.y = y;&#xD;
    this.cf = cf;&#xD;
    this.method = method;&#xD;
    this.m = m;&#xD;
    addPanel();&#xD;
    this.toFront();&#xD;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O5ZSoBUTEemIe6OhVnSywA" name="addPanel" specification="_O5YrkBUTEemIe6OhVnSywA">
                    <language>JAVA</language>
                    <body>&#xD;
    Panel panel = new Panel();&#xD;
    panel.setLayout(new GridLayout(5, 1));&#xD;
    choice = new Choice();&#xD;
    for (int i = 0; i &lt; fitList.length; i++) {&#xD;
        choice.add(fitList[i]);&#xD;
    }&#xD;
    choice.select(method);&#xD;
    Label l = new Label(&quot;Select regression method:&quot;);&#xD;
    panel.add(l);&#xD;
    panel.add(choice);&#xD;
    button1 = new Button(&quot;Recompute&quot;);&#xD;
    button1.addActionListener(this);&#xD;
    panel.add(button1);&#xD;
    Panel panel2 = new Panel();&#xD;
    panel2.setLayout(new GridLayout(1, 2));&#xD;
    button2 = new Button(&quot;Done&quot;);&#xD;
    button2.addActionListener(this);&#xD;
    panel2.add(button2);&#xD;
    button3 = new Button(&quot;Cancel&quot;);&#xD;
    button3.addActionListener(this);&#xD;
    panel2.add(button3);&#xD;
    panel.add(panel2);&#xD;
    add(panel);&#xD;
    pack();&#xD;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O5bu4BUTEemIe6OhVnSywA" name="actionPerformed" specification="_O5agwBUTEemIe6OhVnSywA">
                    <language>JAVA</language>
                    <body>&#xD;
    Object b = e.getSource();&#xD;
    if (b == button1) {&#xD;
        int i = choice.getSelectedIndex();&#xD;
        this.close();&#xD;
        cf = new CurveFitter(x, y);&#xD;
        switch(i) {&#xD;
            case 0:&#xD;
                cf.doFit(12);&#xD;
                break;&#xD;
            case 1:&#xD;
                cf.doFit(9);&#xD;
                break;&#xD;
            case 2:&#xD;
                cf.doFit(7);&#xD;
                break;&#xD;
            case 3:&#xD;
                cf.doFit(6);&#xD;
                break;&#xD;
            case 4:&#xD;
                cf.doFit(0);&#xD;
                break;&#xD;
            case 5:&#xD;
                cf.doFit(1);&#xD;
                break;&#xD;
            case 6:&#xD;
                cf.doFit(2);&#xD;
                break;&#xD;
            case 7:&#xD;
                cf.doFit(3);&#xD;
                break;&#xD;
            case 8:&#xD;
                cf.doFit(4);&#xD;
                break;&#xD;
            case 9:&#xD;
                cf.doFit(5);&#xD;
                break;&#xD;
            case 10:&#xD;
                cf.doFit(8);&#xD;
                break;&#xD;
            case 11:&#xD;
                cf.doFit(10);&#xD;
                break;&#xD;
            case 12:&#xD;
                cf.doFit(11);&#xD;
                break;&#xD;
            default:&#xD;
                cf.doFit(i);&#xD;
                break;&#xD;
        }&#xD;
        plot(cf);&#xD;
        ImagePlus imp = WindowManager.getCurrentImage();&#xD;
        ImageCanvas cc = new ImageCanvas(imp);&#xD;
        CurveCalibrationWindow ccw = new CurveCalibrationWindow(imp, cc, x, y, cf, i, m);&#xD;
        ccw.setAlwaysOnTop(true);&#xD;
        ccw.toFront();&#xD;
    } else if (b == button2) {&#xD;
        switch(method) {&#xD;
            case 0:&#xD;
                m.setCalibrationmethod(12);&#xD;
                break;&#xD;
            case 1:&#xD;
                m.setCalibrationmethod(9);&#xD;
                break;&#xD;
            case 2:&#xD;
                m.setCalibrationmethod(7);&#xD;
                break;&#xD;
            case 3:&#xD;
                m.setCalibrationmethod(6);&#xD;
                break;&#xD;
            case 4:&#xD;
                m.setCalibrationmethod(0);&#xD;
                break;&#xD;
            case 5:&#xD;
                m.setCalibrationmethod(1);&#xD;
                break;&#xD;
            case 6:&#xD;
                m.setCalibrationmethod(2);&#xD;
                break;&#xD;
            case 7:&#xD;
                m.setCalibrationmethod(3);&#xD;
                break;&#xD;
            case 8:&#xD;
                m.setCalibrationmethod(4);&#xD;
                break;&#xD;
            case 9:&#xD;
                m.setCalibrationmethod(5);&#xD;
                break;&#xD;
            case 10:&#xD;
                m.setCalibrationmethod(8);&#xD;
                break;&#xD;
            case 11:&#xD;
                m.setCalibrationmethod(10);&#xD;
                break;&#xD;
            case 12:&#xD;
                m.setCalibrationmethod(11);&#xD;
                break;&#xD;
            default:&#xD;
                m.setCalibrationmethod(method);&#xD;
                break;&#xD;
        }&#xD;
        try {&#xD;
            m.savestandardadditionalinfo();&#xD;
        //ia1.finishnormalisation();&#xD;
        } catch (FileNotFoundException ex) {&#xD;
            Logger.getLogger(CurveCalibration.class.getName()).log(Level.SEVERE, null, ex);&#xD;
        } catch (UnsupportedEncodingException ex) {&#xD;
            Logger.getLogger(CurveCalibration.class.getName()).log(Level.SEVERE, null, ex);&#xD;
        } catch (IOException ex) {&#xD;
            Logger.getLogger(CurveCalibration.class.getName()).log(Level.SEVERE, null, ex);&#xD;
        }&#xD;
        this.close();&#xD;
        //                 &#xD;
        if (a != null) {&#xD;
            try {&#xD;
                // Old version&#xD;
                //                         a.dendrogramgeneration();&#xD;
                a.finishnormalisation();&#xD;
            } catch (Exception ex) {&#xD;
                Logger.getLogger(CurveCalibration.class.getName()).log(Level.SEVERE, null, ex);&#xD;
            }&#xD;
        }&#xD;
        if (ia != null || ia1 != null) {&#xD;
            try {&#xD;
                //                         a.dendrogramgeneration();&#xD;
                if (s4 != null) {&#xD;
                    s4.dispose();&#xD;
                } else if (s4n != null) {&#xD;
                    s4n.dispose();&#xD;
                } else if (s41 != null) {&#xD;
                    s41.dispose();&#xD;
                } else if (s42 != null) {&#xD;
                    s42.dispose();&#xD;
                }&#xD;
                //                         ia.finishnormalisation();&#xD;
                ia1.finishnormalisation();&#xD;
            } catch (Exception ex) {&#xD;
                Logger.getLogger(CurveCalibration.class.getName()).log(Level.SEVERE, null, ex);&#xD;
            }&#xD;
        }&#xD;
    } else if (b == button3) {&#xD;
        try {&#xD;
            if (a != null) {&#xD;
                a.saveUnfinishedExperiment(this, 8);&#xD;
            }&#xD;
            if (ia != null) {&#xD;
                ia.saveUnfinishedExperiment(this, 8);&#xD;
            }&#xD;
        } catch (IOException ex) {&#xD;
            Logger.getLogger(CurveCalibration.class.getName()).log(Level.SEVERE, null, ex);&#xD;
        }&#xD;
    }&#xD;
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_O5QvwBUTEemIe6OhVnSywA" name="CurveCalibrationWindow" visibility="private" method="_O5YEgBUTEemIe6OhVnSywA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_O5Sk8BUTEemIe6OhVnSywA" name="imp"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_O5TMABUTEemIe6OhVnSywA" name="ic"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_O5TzEBUTEemIe6OhVnSywA" name="x">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_O5TzERUTEemIe6OhVnSywA"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O5UaIBUTEemIe6OhVnSywA" value="*"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_O5VBMBUTEemIe6OhVnSywA" name="y">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_O5VBMRUTEemIe6OhVnSywA"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O5VoQBUTEemIe6OhVnSywA" value="*"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_O5WPUBUTEemIe6OhVnSywA" name="cf"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_O5W2YBUTEemIe6OhVnSywA" name="method">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_O5XdcBUTEemIe6OhVnSywA" name="m" type="_MEzrIBUTEemIe6OhVnSywA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_O5YrkBUTEemIe6OhVnSywA" name="addPanel" visibility="private" method="_O5ZSoBUTEemIe6OhVnSywA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_O5agwBUTEemIe6OhVnSywA" name="actionPerformed" visibility="public" method="_O5bu4BUTEemIe6OhVnSywA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_O5bH0BUTEemIe6OhVnSywA" name="e"/>
                  </ownedOperation>
                </nestedClassifier>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_O5dkEBUTEemIe6OhVnSywA" name="ListofValues" visibility="public">
                <ownedAttribute xmi:type="uml:Property" xmi:id="_O5v38BUTEemIe6OhVnSywA" name="jBAdd" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_O5xGEBUTEemIe6OhVnSywA" name="jBDelete" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_O5yUMBUTEemIe6OhVnSywA" name="jList1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_O5ziUBUTEemIe6OhVnSywA" name="jScrollPane1" visibility="private" isUnique="false"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O5gnYBUTEemIe6OhVnSywA" name="ListofValues" specification="_O5eyMBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    initComponents();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O5h1gBUTEemIe6OhVnSywA" name="initComponents" specification="_O5hOcBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    jScrollPane1 = new javax.swing.JScrollPane();&#xD;
    jList1 = new javax.swing.JList();&#xD;
    jBAdd = new javax.swing.JButton();&#xD;
    jBDelete = new javax.swing.JButton();&#xD;
    jScrollPane1.setViewportView(jList1);&#xD;
    jBAdd.setText(&quot;Add&quot;);&#xD;
    jBAdd.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jBAddActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jBDelete.setText(&quot;Delete&quot;);&#xD;
    jBDelete.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jBDeleteActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);&#xD;
    this.setLayout(layout);&#xD;
    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jBAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jBDelete, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE))));&#xD;
    layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addComponent(jBAdd).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jBDelete).addGap(0, 0, Short.MAX_VALUE)).addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 267, Short.MAX_VALUE)).addContainerGap()));&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O5kRwRUTEemIe6OhVnSywA" name="jBAddActionPerformed" specification="_O5jDoBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jBAddActionPerformed&#xD;
    double value = IJ.getNumber(&quot;Introduce a value:&quot;, 0);&#xD;
    DefaultListModel listmodel = (DefaultListModel) jList1.getModel();&#xD;
    if (value > 0) {&#xD;
        insertsort(listmodel, value);&#xD;
    } else {&#xD;
        IJ.error(&quot;The value must be higher than 0.&quot;);&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O5muABUTEemIe6OhVnSywA" name="jBDeleteActionPerformed" specification="_O5lf4BUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jBDeleteActionPerformed&#xD;
    int pos = jList1.getSelectedIndex();&#xD;
    DefaultListModel listmodel = (DefaultListModel) jList1.getModel();&#xD;
    if (pos == -1) {&#xD;
        IJ.error(&quot;You have not selected any element.&quot;);&#xD;
    } else {&#xD;
        listmodel.removeElementAt(pos);&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O5n8IBUTEemIe6OhVnSywA" name="init" specification="_O5nVEBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    jList1.setModel(new DefaultListModel());&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O5q_cBUTEemIe6OhVnSywA" name="addelements" specification="_O5pKQBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    DefaultListModel listmodel = (DefaultListModel) jList1.getModel();&#xD;
    for (double value : values) {&#xD;
        insertsort(listmodel, value);&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O5tbsBUTEemIe6OhVnSywA" name="getelements" specification="_O5sNkBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    DefaultListModel listmodel = (DefaultListModel) jList1.getModel();&#xD;
    double[] res = new double[listmodel.getSize()];&#xD;
    for (int i = 0; i &lt; listmodel.getSize(); i++) {&#xD;
        res[i] = (Double) listmodel.get(i);&#xD;
    }&#xD;
    return res;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O5vQ4BUTEemIe6OhVnSywA" name="insertsort" specification="_O5tbsRUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    boolean last = true;&#xD;
    int i = 0;&#xD;
    while (i &lt; listmodel.getSize() &amp; last) {&#xD;
        if ((Double) listmodel.elementAt(i) &lt; value) {&#xD;
            last = false;&#xD;
        } else {&#xD;
            i++;&#xD;
        }&#xD;
    }&#xD;
    if (last) {&#xD;
        listmodel.addElement(value);&#xD;
    } else {&#xD;
        listmodel.add(i, value);&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O5eyMBUTEemIe6OhVnSywA" name="ListofValues" visibility="public" method="_O5gnYBUTEemIe6OhVnSywA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O5hOcBUTEemIe6OhVnSywA" name="initComponents" visibility="private" method="_O5h1gBUTEemIe6OhVnSywA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O5jDoBUTEemIe6OhVnSywA" name="jBAddActionPerformed" visibility="private" method="_O5kRwRUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O5kRwBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O5lf4BUTEemIe6OhVnSywA" name="jBDeleteActionPerformed" visibility="private" method="_O5muABUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O5mG8BUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O5nVEBUTEemIe6OhVnSywA" name="init" visibility="public" method="_O5n8IBUTEemIe6OhVnSywA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O5pKQBUTEemIe6OhVnSywA" name="addelements" visibility="public" method="_O5q_cBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O5pxUBUTEemIe6OhVnSywA" name="values">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_O5qYYBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O5qYYRUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O5sNkBUTEemIe6OhVnSywA" name="getelements" visibility="public" method="_O5tbsBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O5s0oBUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_O5s0oRUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O5s0ohUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O5tbsRUTEemIe6OhVnSywA" name="insertsort" visibility="private" method="_O5vQ4BUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O5tbshUTEemIe6OhVnSywA" name="listmodel"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O5up0BUTEemIe6OhVnSywA" name="value">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_O52loBUTEemIe6OhVnSywA" name="StandardUtils" visibility="public">
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O56QABUTEemIe6OhVnSywA" name="readstandardfromfile" specification="_O53MsBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    String workingdir = System.getProperty(&quot;user.dir&quot;) + &quot;/standardfiles/&quot;;&#xD;
    String workingfile = workingdir + filename + &quot;.marker&quot;;&#xD;
    Path p = Paths.get(workingfile);&#xD;
    Charset c = Charset.defaultCharset();&#xD;
    List&lt;String> lines = Files.readAllLines(p, c);&#xD;
    double[] res = new double[lines.size()];&#xD;
    for (int i = 0; i &lt; lines.size(); i++) {&#xD;
        res[i] = Double.parseDouble(lines.get(i));&#xD;
    }&#xD;
    return res;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O58FMRUTEemIe6OhVnSywA" name="readexperimentconfig" specification="_O57eIBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    String workingfile = System.getProperty(&quot;user.dir&quot;) + &quot;/experiment.config&quot;;&#xD;
    Path p = Paths.get(workingfile);&#xD;
    File f = p.toFile();&#xD;
    if (f.exists()) {&#xD;
        Charset c = Charset.defaultCharset();&#xD;
        List&lt;String> lines = Files.readAllLines(p, c);&#xD;
        int res = Integer.parseInt(lines.get(0));&#xD;
        return res;&#xD;
    }&#xD;
    return -1;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O5-hcBUTEemIe6OhVnSywA" name="readcomparisonconfig" specification="_O58FMhUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    String workingfile = System.getProperty(&quot;user.dir&quot;) + &quot;/comparison.config&quot;;&#xD;
    Path p = Paths.get(workingfile);&#xD;
    if (p.toFile().exists()) {&#xD;
        Charset c = Charset.defaultCharset();&#xD;
        List&lt;String> lines = Files.readAllLines(p, c);&#xD;
        String[] res = new String[lines.size()];&#xD;
        for (int i = 0; i &lt; lines.size(); i++) {&#xD;
            res[i] = lines.get(i);&#xD;
        }&#xD;
        return res;&#xD;
    }&#xD;
    return null;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O6BkwBUTEemIe6OhVnSywA" name="readstandardinfofromfile" specification="_O5_vkBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    String workingdir = System.getProperty(&quot;user.dir&quot;) + &quot;/standardfiles/info/&quot;;&#xD;
    String workingfile = workingdir + filename + &quot;.info&quot;;&#xD;
    Path p = Paths.get(workingfile);&#xD;
    Charset c = Charset.defaultCharset();&#xD;
    List&lt;String> lines = Files.readAllLines(p, c);&#xD;
    double[] res = new double[lines.size()];&#xD;
    for (int i = 0; i &lt; lines.size(); i++) {&#xD;
        res[i] = Double.parseDouble(lines.get(i));&#xD;
    }&#xD;
    return res;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O6Cy4RUTEemIe6OhVnSywA" name="readstandardposfromfile" specification="_O6CL0BUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    String workingdir = System.getProperty(&quot;user.dir&quot;) + &quot;/standardfiles/info/&quot;;&#xD;
    String workingfile = workingdir + filename + &quot;.pos&quot;;&#xD;
    Path p = Paths.get(workingfile);&#xD;
    Charset c = Charset.defaultCharset();&#xD;
    List&lt;String> lines = Files.readAllLines(p, c);&#xD;
    double[] res = new double[lines.size()];&#xD;
    for (int i = 0; i &lt; lines.size(); i++) {&#xD;
        res[i] = Double.parseDouble(lines.get(i));&#xD;
    }&#xD;
    return res;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O6DZ8RUTEemIe6OhVnSywA" name="deletestandard" specification="_O6Cy4hUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    String workingdir = System.getProperty(&quot;user.dir&quot;) + &quot;/standardfiles/&quot;;&#xD;
    String sourcefile = workingdir + filename + &quot;.marker&quot;;&#xD;
    SimpleDateFormat sdf = new SimpleDateFormat(&quot;dd-M-yyyy-hh:mm:ss&quot;);&#xD;
    String date = sdf.format(new Date());&#xD;
    String targetfile = workingdir + &quot;/deletedstandards/&quot; + filename + &quot;-&quot; + date + &quot;.marker&quot;;&#xD;
    Files.copy(Paths.get(sourcefile), Paths.get(targetfile), REPLACE_EXISTING);&#xD;
    Files.delete(Paths.get(sourcefile));&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O6EBABUTEemIe6OhVnSywA" name="recoverstandard" specification="_O6DZ8hUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    String workingdir = System.getProperty(&quot;user.dir&quot;) + &quot;/standardfiles/&quot;;&#xD;
    String targetfile = workingdir + filename + &quot;.marker&quot;;&#xD;
    String sourcefile = workingdir + &quot;/deletedstandards/&quot; + filename + &quot;.marker&quot;;&#xD;
    Files.copy(Paths.get(sourcefile), Paths.get(targetfile), REPLACE_EXISTING);&#xD;
    Files.delete(Paths.get(sourcefile));&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O6EBBRUTEemIe6OhVnSywA" name="readstandardsavailable" specification="_O6EBARUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //        String workingdir = System.getProperty(&quot;user.dir&quot;) + &quot;/standardfiles/&quot;;&#xD;
    //    &#xD;
    //        File f2 = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/standardfiles&quot;);&#xD;
    //        File f3 = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/standardfiles/deletedstandards&quot;);&#xD;
    //        &#xD;
    //        if (! f2.exists()){&#xD;
    //            f2.mkdirs();&#xD;
    //            f3.mkdir();&#xD;
    //            return null;&#xD;
    //        }&#xD;
    //        &#xD;
    //        &#xD;
    //        &#xD;
    //        ArrayList&lt;String> res = new ArrayList&lt;String>();&#xD;
    //        File directory = new File(workingdir);&#xD;
    //        String[] files = directory.list();&#xD;
    //        int nFiles = files.length;&#xD;
    //        if (nFiles != 0) {&#xD;
    //            for (int i = 0; i &lt; nFiles; i++) {&#xD;
    //                if (files[i].contains(&quot;.marker&quot;)) //encuentra los archivos .tif y almacena su ruta de acceso&#xD;
    //                {&#xD;
    //                    String name = files[i].substring(0, files[i].indexOf('.'));&#xD;
    //                    res.add(name);&#xD;
    //                }&#xD;
    //            }&#xD;
    //        }&#xD;
    //    &#xD;
    //        return res;&#xD;
    ArrayList&lt;Marker> markers = getMarkers();&#xD;
    ArrayList&lt;String> res = new ArrayList&lt;>();&#xD;
    for (Marker m : markers) {&#xD;
        res.add(m.getName());&#xD;
    }&#xD;
    return res;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O6EoExUTEemIe6OhVnSywA" name="readstandardsremoved" specification="_O6EBBhUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    String workingdir = System.getProperty(&quot;user.dir&quot;) + &quot;/standardfiles/deletedstandards/&quot;;&#xD;
    ArrayList&lt;String> res = new ArrayList&lt;String>();&#xD;
    File directory = new File(workingdir);&#xD;
    String[] files = directory.list();&#xD;
    int nFiles = files.length;&#xD;
    if (nFiles != 0) {&#xD;
        for (int i = 0; i &lt; nFiles; i++) {&#xD;
            if (//encuentra los archivos .tif y almacena su ruta de acceso&#xD;
            files[i].contains(&quot;.marker&quot;)) {&#xD;
                String name = files[i].substring(0, files[i].indexOf('.'));&#xD;
                res.add(name);&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    return res;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O6F2MBUTEemIe6OhVnSywA" name="createStandard" specification="_O6EoFBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    double[] temp = new double[n];&#xD;
    return createStandard(temp, &quot;&quot;);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O6KusBUTEemIe6OhVnSywA" name="createStandard" specification="_O6GdQBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    int n = array.length;&#xD;
    double[] res = new double[n];&#xD;
    String newname = name;&#xD;
    GenericDialog gdG = new GenericDialog(&quot;New standard&quot;);&#xD;
    gdG.addStringField(&quot;Name of the standard&quot;, name);&#xD;
    for (int i = 0; i &lt; n; i++) {&#xD;
        gdG.addNumericField(&quot;Value of band &quot; + (i + 1) + &quot;:&quot;, array[i], 2);&#xD;
    }&#xD;
    gdG.addMessage(&quot;&quot;);&#xD;
    gdG.showDialog();&#xD;
    if (gdG.wasCanceled()) {&#xD;
        gdG.dispose();&#xD;
        return null;&#xD;
    }&#xD;
    if (gdG.wasOKed()) {&#xD;
        newname = gdG.getNextString();&#xD;
        ArrayList&lt;String> names = readstandardsavailable();&#xD;
        double temp;&#xD;
        int fail = -1;&#xD;
        for (int i = 0; i &lt; n; i++) {&#xD;
            temp = gdG.getNextNumber();&#xD;
            if ((temp == Double.NaN) || (temp &lt; 0)) {&#xD;
                fail = i;&#xD;
                res[i] = 0;&#xD;
            }&#xD;
            res[i] = (int) temp;&#xD;
        }&#xD;
        if (names.contains(newname)) {&#xD;
            IJ.error(&quot;There is already a standard called &quot; + newname + &quot;.&quot;);&#xD;
            gdG.dispose();&#xD;
            return createStandard(res, newname);&#xD;
        }&#xD;
        if (newname.equals(&quot;&quot;)) {&#xD;
            IJ.error(&quot;The name of the standard should not be empty.&quot;);&#xD;
            gdG.dispose();&#xD;
            return createStandard(res, newname);&#xD;
        }&#xD;
        if (fail != -1) {&#xD;
            IJ.error(&quot;Band &quot; + fail + &quot; should be a positive number.&quot;);&#xD;
            gdG.dispose();&#xD;
            return createStandard(res, newname);&#xD;
        }&#xD;
        if (!(sorted(res))) {&#xD;
            IJ.error(&quot;The values of the bands are not sorted.&quot;);&#xD;
            gdG.dispose();&#xD;
            return createStandard(res, newname);&#xD;
        }&#xD;
    }&#xD;
    save_standard(newname, res);&#xD;
    return res;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O6Mj4BUTEemIe6OhVnSywA" name="save_experimentconfig" specification="_O6KusRUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    String workingfile = System.getProperty(&quot;user.dir&quot;) + &quot;/experiment.config&quot;;&#xD;
    PrintWriter writer = new PrintWriter(workingfile, &quot;UTF-8&quot;);&#xD;
    writer.println(threshold);&#xD;
    writer.close();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O6SqgBUTEemIe6OhVnSywA" name="save_comparisonconfig" specification="_O6OZEBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    String workingfile = System.getProperty(&quot;user.dir&quot;) + &quot;/comparison.config&quot;;&#xD;
    PrintWriter writer = new PrintWriter(workingfile, &quot;UTF-8&quot;);&#xD;
    writer.println(similaritymethod);&#xD;
    writer.println(linkage);&#xD;
    writer.println(tolerance);&#xD;
    for (Object o : selectedfields) {&#xD;
        writer.println((String) o);&#xD;
    }&#xD;
    writer.close();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O6XjABUTEemIe6OhVnSywA" name="save_standard" specification="_O6T4oBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    String workingdir = System.getProperty(&quot;user.dir&quot;) + &quot;/standardfiles/&quot;;&#xD;
    String workingfile = workingdir + name + &quot;.marker&quot;;&#xD;
    PrintWriter writer = new PrintWriter(workingfile, &quot;UTF-8&quot;);&#xD;
    for (int i = 0; i &lt; std.length; i++) {&#xD;
        writer.println(std[i]);&#xD;
    }&#xD;
    writer.close();&#xD;
    Marker m = new Marker(lastMarkerid(), name, workingfile);&#xD;
    insertMarker(m);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O6bNYBUTEemIe6OhVnSywA" name="sorted" specification="_O6YxIBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    for (int i = 0; i &lt; res.length - 1; i++) {&#xD;
        if (res[i] &lt; res[i + 1]) {&#xD;
            return false;&#xD;
        }&#xD;
    }&#xD;
    return true;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O6h7EBUTEemIe6OhVnSywA" name="rectangleintersectionroi" specification="_O6eQsBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    Rectangle rect;&#xD;
    Boolean inside = false;&#xD;
    double x0 = r.getX();&#xD;
    double y0 = r.getY();&#xD;
    double x1, y1;&#xD;
    double x = r.getX();&#xD;
    double y = r.getY();&#xD;
    for (int i = 1; i &lt; r.width; i++) {&#xD;
        if (!inside) {&#xD;
            if (roi.getPolygon().contains(x + i, y)) {&#xD;
                x0 = x + i;&#xD;
                y0 = y;&#xD;
                inside = true;&#xD;
            }&#xD;
        } else {&#xD;
            if (!roi.getPolygon().contains(x + i, y)) {&#xD;
                x1 = x + i;&#xD;
                y1 = y;&#xD;
                rect = new Rectangle((int) x0, (int) y0, (int) (x1 - x0), 2);&#xD;
                Roi r1 = new Roi(rect);&#xD;
                r1.setFillColor(Color.blue);&#xD;
                return r1;&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    rect = new Rectangle((int) x0, (int) y0, r.width, 2);&#xD;
    Roi r1 = new Roi(rect);&#xD;
    r1.setFillColor(Color.blue);&#xD;
    return r1;&#xD;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O53MsBUTEemIe6OhVnSywA" name="readstandardfromfile" visibility="public" isStatic="true" method="_O56QABUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O53zwBUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_O54a0BUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O55B4BUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O55o8BUTEemIe6OhVnSywA" name="filename"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O57eIBUTEemIe6OhVnSywA" name="readexperimentconfig" visibility="public" isStatic="true" method="_O58FMRUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O58FMBUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O58FMhUTEemIe6OhVnSywA" name="readcomparisonconfig" visibility="public" isStatic="true" method="_O5-hcBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O58sQBUTEemIe6OhVnSywA" direction="return">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_O59TUBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O596YBUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O5_vkBUTEemIe6OhVnSywA" name="readstandardinfofromfile" visibility="public" isStatic="true" method="_O6BkwBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O6AWoBUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_O6A9sBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O6A9sRUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O6A9shUTEemIe6OhVnSywA" name="filename"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O6CL0BUTEemIe6OhVnSywA" name="readstandardposfromfile" visibility="public" isStatic="true" method="_O6Cy4RUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O6CL0RUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_O6CL0hUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O6CL0xUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O6Cy4BUTEemIe6OhVnSywA" name="filename"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O6Cy4hUTEemIe6OhVnSywA" name="deletestandard" visibility="public" isStatic="true" method="_O6DZ8RUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O6DZ8BUTEemIe6OhVnSywA" name="filename"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O6DZ8hUTEemIe6OhVnSywA" name="recoverstandard" visibility="public" isStatic="true" method="_O6EBABUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O6DZ8xUTEemIe6OhVnSywA" name="filename"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O6EBARUTEemIe6OhVnSywA" name="readstandardsavailable" visibility="public" isStatic="true" method="_O6EBBRUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O6EBAhUTEemIe6OhVnSywA" direction="return">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_O6EBAxUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O6EBBBUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O6EBBhUTEemIe6OhVnSywA" name="readstandardsremoved" visibility="public" isStatic="true" method="_O6EoExUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O6EoEBUTEemIe6OhVnSywA" direction="return">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_O6EoERUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O6EoEhUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O6EoFBUTEemIe6OhVnSywA" name="createStandard" visibility="public" isStatic="true" method="_O6F2MBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O6EoFRUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_O6EoFhUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O6EoFxUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O6FPIBUTEemIe6OhVnSywA" name="n">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O6GdQBUTEemIe6OhVnSywA" name="createStandard" visibility="public" isStatic="true" method="_O6KusBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O6HEUBUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_O6HrYBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O6HrYRUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O6IScBUTEemIe6OhVnSywA" name="array">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_O6I5gBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O6I5gRUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O6JgkBUTEemIe6OhVnSywA" name="name"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O6KusRUTEemIe6OhVnSywA" name="save_experimentconfig" visibility="public" isStatic="true" method="_O6Mj4BUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O6LVwBUTEemIe6OhVnSywA" name="threshold">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O6OZEBUTEemIe6OhVnSywA" name="save_comparisonconfig" visibility="public" isStatic="true" method="_O6SqgBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O6PAIBUTEemIe6OhVnSywA" name="similaritymethod"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O6PnMBUTEemIe6OhVnSywA" name="linkage"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O6QOQBUTEemIe6OhVnSywA" name="tolerance">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O6Q1UBUTEemIe6OhVnSywA" name="selectedfields">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_O6RcYBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O6SDcBUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O6T4oBUTEemIe6OhVnSywA" name="save_standard" visibility="public" isStatic="true" method="_O6XjABUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O6UfsBUTEemIe6OhVnSywA" name="name"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O6VGwBUTEemIe6OhVnSywA" name="std">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_O6Vt0BUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O6WU4BUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O6YxIBUTEemIe6OhVnSywA" name="sorted" visibility="private" isStatic="true" method="_O6bNYBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O6ZYMBUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O6Z_QBUTEemIe6OhVnSywA" name="res">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_O6amUBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O6amURUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O6eQsBUTEemIe6OhVnSywA" name="rectangleintersectionroi" visibility="public" isStatic="true" method="_O6h7EBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O6fe0BUTEemIe6OhVnSywA" direction="return"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O6gF4BUTEemIe6OhVnSywA" name="roi"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O6hUABUTEemIe6OhVnSywA" name="r"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_O6jwQBUTEemIe6OhVnSywA" name="StandardsPanel" visibility="public">
                <ownedAttribute xmi:type="uml:Property" xmi:id="_O62EIBUTEemIe6OhVnSywA" name="buttonGroup1" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_O63SQBUTEemIe6OhVnSywA" name="jComboStandards" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_O64gYBUTEemIe6OhVnSywA" name="jRadioAvailable" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_O65HcBUTEemIe6OhVnSywA" name="jRadioDefine" visibility="private" isUnique="false"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O6mzkBUTEemIe6OhVnSywA" name="StandardsPanel" specification="_O6k-YBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    initComponents();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O6mzkhUTEemIe6OhVnSywA" name="initComponents" specification="_O6mzkRUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    buttonGroup1 = new javax.swing.ButtonGroup();&#xD;
    jRadioAvailable = new javax.swing.JRadioButton();&#xD;
    jComboStandards = new javax.swing.JComboBox();&#xD;
    jRadioDefine = new javax.swing.JRadioButton();&#xD;
    buttonGroup1.add(jRadioAvailable);&#xD;
    jRadioAvailable.setSelected(true);&#xD;
    jRadioAvailable.setText(&quot;Use Available Standard&quot;);&#xD;
    jRadioAvailable.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jRadioAvailableActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    buttonGroup1.add(jRadioDefine);&#xD;
    jRadioDefine.setText(&quot;Define New Standard&quot;);&#xD;
    jRadioDefine.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jRadioDefineActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);&#xD;
    this.setLayout(layout);&#xD;
    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jRadioAvailable).addComponent(jRadioDefine)).addGap(18, 18, 18).addComponent(jComboStandards, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGap(19, 19, 19).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jRadioAvailable).addComponent(jComboStandards, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jRadioDefine).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O6oowBUTEemIe6OhVnSywA" name="jRadioDefineActionPerformed" specification="_O6naoBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jRadioDefineActionPerformed&#xD;
    if (jRadioDefine.isSelected()) {&#xD;
        jComboStandards.setEnabled(false);&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O6qd8RUTEemIe6OhVnSywA" name="jRadioAvailableActionPerformed" specification="_O6p24BUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jRadioAvailableActionPerformed&#xD;
    if (jRadioAvailable.isSelected()) {&#xD;
        jComboStandards.setEnabled(true);&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O6thQRUTEemIe6OhVnSywA" name="setlistofstandards" specification="_O6rsEBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    for (String std1 : std) {&#xD;
        jComboStandards.addItem(std1);&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O6uvYRUTEemIe6OhVnSywA" name="disableavailablestd" specification="_O6uvYBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    jComboStandards.setEnabled(false);&#xD;
    jRadioAvailable.setEnabled(false);&#xD;
    jRadioDefine.setSelected(true);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O6wkkBUTEemIe6OhVnSywA" name="valueoptionmenu" specification="_O6v9gBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    return jComboStandards.getSelectedIndex();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O6zn4BUTEemIe6OhVnSywA" name="nameoptionmenu" specification="_O6xysBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    return (String) jComboStandards.getSelectedItem();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_O602ARUTEemIe6OhVnSywA" name="isnewstandardselected" specification="_O60O8BUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    return jRadioDefine.isSelected();&#xD;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O6k-YBUTEemIe6OhVnSywA" name="StandardsPanel" visibility="public" method="_O6mzkBUTEemIe6OhVnSywA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O6mzkRUTEemIe6OhVnSywA" name="initComponents" visibility="private" method="_O6mzkhUTEemIe6OhVnSywA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O6naoBUTEemIe6OhVnSywA" name="jRadioDefineActionPerformed" visibility="private" method="_O6oowBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O6oBsBUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O6p24BUTEemIe6OhVnSywA" name="jRadioAvailableActionPerformed" visibility="private" method="_O6qd8RUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O6qd8BUTEemIe6OhVnSywA" name="evt"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O6rsEBUTEemIe6OhVnSywA" name="setlistofstandards" visibility="public" method="_O6thQRUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O6sTIBUTEemIe6OhVnSywA" name="std">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_O6s6MBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O6thQBUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O6uvYBUTEemIe6OhVnSywA" name="disableavailablestd" visibility="public" method="_O6uvYRUTEemIe6OhVnSywA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O6v9gBUTEemIe6OhVnSywA" name="valueoptionmenu" visibility="public" method="_O6wkkBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O6v9gRUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O6xysBUTEemIe6OhVnSywA" name="nameoptionmenu" visibility="public" method="_O6zn4BUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O6yZwBUTEemIe6OhVnSywA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O60O8BUTEemIe6OhVnSywA" name="isnewstandardselected" visibility="public" method="_O602ARUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_O602ABUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                </ownedOperation>
              </packagedElement>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_Q9TEEBUTEemIe6OhVnSywA" name="Utils">
              <packagedElement xmi:type="uml:Class" xmi:id="_Q9USMBUTEemIe6OhVnSywA" name="Montage" visibility="public">
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Q9USMRUTEemIe6OhVnSywA" name="images" visibility="private" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Q9USMhUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Q9U5QBUTEemIe6OhVnSywA" value="*"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Q9U5QRUTEemIe6OhVnSywA" name="imp" visibility="private" isUnique="false"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Q9WHZRUTEemIe6OhVnSywA" name="Montage" specification="_Q9U5QhUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    this.imp = imp;&#xD;
    this.images = images;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Q9WuchUTEemIe6OhVnSywA" name="createMontage" specification="_Q9WucBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    int w = sumwidth(images) + (5 * images.length);&#xD;
    int h = imp.getHeight();&#xD;
    int x;&#xD;
    Rectangle r;&#xD;
    Roi roi;&#xD;
    ImageProcessor ip = imp.getProcessor().convertToRGB();&#xD;
    ImageProcessor montage = ip.createProcessor(w, h);&#xD;
    ImagePlus imp2 = new ImagePlus(title, montage);&#xD;
    imp2.setCalibration(imp.getCalibration());&#xD;
    montage = imp2.getProcessor();&#xD;
    montage.setColor(Color.black);&#xD;
    montage.fill();&#xD;
    int pos = 0;&#xD;
    for (int i = 0; i &lt; images.length; i++) {&#xD;
        ImageProcessor ip1 = images[i].getProcessor();&#xD;
        montage.insert(ip1, pos, 0);&#xD;
        pos = images[i].getWidth() + 5 + pos;&#xD;
    }&#xD;
    imp2.updateAndDraw();&#xD;
    imp2.show();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Q9XVhRUTEemIe6OhVnSywA" name="getMaximumWidth" specification="_Q9XVgBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    int max = rects[0].getWidth();&#xD;
    for (int i = 1; i &lt; rects.length; i++) {&#xD;
        if (max &lt; rects[i].getWidth()) {&#xD;
            max = rects[i].getWidth();&#xD;
        }&#xD;
    }&#xD;
    return max;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Q9aY0BUTEemIe6OhVnSywA" name="sumwidth" specification="_Q9X8kBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    int sum = 0;&#xD;
    for (int i = 0; i &lt; rects.length; i++) {&#xD;
        sum = sum + rects[i].getWidth();&#xD;
    }&#xD;
    return sum;&#xD;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Q9U5QhUTEemIe6OhVnSywA" name="Montage" visibility="public" method="_Q9WHZRUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q9WHYRUTEemIe6OhVnSywA" name="imp"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q9WHYhUTEemIe6OhVnSywA" name="images">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Q9WHYxUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Q9WHZBUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Q9WucBUTEemIe6OhVnSywA" name="createMontage" visibility="public" method="_Q9WuchUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q9WucRUTEemIe6OhVnSywA" name="title"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Q9XVgBUTEemIe6OhVnSywA" name="getMaximumWidth" visibility="private" method="_Q9XVhRUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q9XVgRUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q9XVghUTEemIe6OhVnSywA" name="rects">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Q9XVgxUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Q9XVhBUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Q9X8kBUTEemIe6OhVnSywA" name="sumwidth" visibility="private" method="_Q9aY0BUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q9YjoBUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q9ZKsBUTEemIe6OhVnSywA" name="rects">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Q9ZxwBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Q9ZxwRUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_Q9cOABUTEemIe6OhVnSywA" name="Pair" visibility="public">
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Q9eqQBUTEemIe6OhVnSywA" name="key" visibility="private" type="_Q9c1EBUTEemIe6OhVnSywA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Q9i7sBUTEemIe6OhVnSywA" name="value" visibility="private" type="_Q9htkBUTEemIe6OhVnSywA" isUnique="false"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Q9hGgBUTEemIe6OhVnSywA" name="getKey" specification="_Q9f4YBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    return key;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Q9kw4RUTEemIe6OhVnSywA" name="getValue" specification="_Q9kJ0BUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    return value;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Q9qQcBUTEemIe6OhVnSywA" name="Pair" specification="_Q9l_ABUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    this.key = key;&#xD;
    this.value = value;&#xD;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Q9f4YBUTEemIe6OhVnSywA" name="getKey" visibility="public" method="_Q9hGgBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q9gfcBUTEemIe6OhVnSywA" type="_Q9c1EBUTEemIe6OhVnSywA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Q9kJ0BUTEemIe6OhVnSywA" name="getValue" visibility="public" method="_Q9kw4RUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q9kw4BUTEemIe6OhVnSywA" type="_Q9htkBUTEemIe6OhVnSywA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Q9l_ABUTEemIe6OhVnSywA" name="Pair" visibility="public" method="_Q9qQcBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q9obQBUTEemIe6OhVnSywA" name="key" type="_Q9c1EBUTEemIe6OhVnSywA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q9ppYBUTEemIe6OhVnSywA" name="value" type="_Q9htkBUTEemIe6OhVnSywA"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_Q9c1EBUTEemIe6OhVnSywA" name="K"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_Q9htkBUTEemIe6OhVnSywA" name="V"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_Q9sssBUTEemIe6OhVnSywA" name="Utilities" visibility="public">
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Q9w-IBUTEemIe6OhVnSywA" name="isintersectionempty" specification="_Q9uh4BUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    ShapeRoi sroi1 = new ShapeRoi(roi1);&#xD;
    ShapeRoi sroi2 = new ShapeRoi(roi2);&#xD;
    ShapeRoi and = sroi1.and(sroi2);&#xD;
    double l = and.getLength();&#xD;
    return (l == 0);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Q912oBUTEemIe6OhVnSywA" name="intersectwithany" specification="_Q9yMQBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    for (int i = 0; i &lt; r.length; i++) {&#xD;
        if (!isintersectionempty(roi1, r[i])) {&#xD;
            return true;&#xD;
        }&#xD;
    }&#xD;
    return false;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Q96vIBUTEemIe6OhVnSywA" name="belongstoany" specification="_Q93EwBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    for (int i = 0; i &lt; r.length; i++) {&#xD;
        if (r[i].contains(x, y)) {&#xD;
            return r[i];&#xD;
        }&#xD;
    }&#xD;
    return null;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Q9_noBUTEemIe6OhVnSywA" name="roibelonging" specification="_Q979QBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    for (int i = 0; i &lt; r.length; i++) {&#xD;
        if (r[i].contains(x, y)) {&#xD;
            return i;&#xD;
        }&#xD;
    }&#xD;
    return -1;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Q-Cq8RUTEemIe6OhVnSywA" name="allequal" specification="_Q-AOsBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    for (int i = 0; i &lt; a.length - 1; i++) {&#xD;
        if (a[i] != a[i + 1]) {&#xD;
            return false;&#xD;
        }&#xD;
    }&#xD;
    return true;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Q-GVURUTEemIe6OhVnSywA" name="intarraytodoublearray" specification="_Q-D5EBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    double[] res = new double[a.length];&#xD;
    for (int i = 0; i &lt; a.length; i++) {&#xD;
        res[i] = a[i];&#xD;
    }&#xD;
    return res;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Q-L04BUTEemIe6OhVnSywA" name="selectstandards" specification="_Q-HjcBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    GenericDialog gdG = new GenericDialog(&quot;Select the reference lanes:&quot;);&#xD;
    boolean[] res = new boolean[checked.length];&#xD;
    List&lt;JCheckBox> checkBoxes = new ArrayList&lt;JCheckBox>();&#xD;
    gdG.hideCancelButton();&#xD;
    Panel panel = new Panel();&#xD;
    panel.setLayout(new GridLayout(labels.length, 1, 6, 0));&#xD;
    for (int i = 0; i &lt; labels.length; i++) {&#xD;
        JCheckBox check = new JCheckBox(labels[i]);&#xD;
        check.setSelected(checked[i]);&#xD;
        panel.add(check);&#xD;
        checkBoxes.add(check);&#xD;
    }&#xD;
    gdG.add(panel);&#xD;
    gdG.addMessage(&quot;&quot;);&#xD;
    gdG.showDialog();&#xD;
    if (gdG.wasOKed()) {&#xD;
        for (int j = 0; j &lt; checkBoxes.size(); j++) {&#xD;
            res[j] = checkBoxes.get(j).isSelected();&#xD;
        }&#xD;
        if (res.length &lt; 2) {&#xD;
            gdG.dispose();&#xD;
            IJ.error(&quot;You have to select (at least) two lanes as standards&quot;);&#xD;
            return selectstandards(labels, res);&#xD;
        } else {&#xD;
            return res;&#xD;
        }&#xD;
    }&#xD;
    if (gdG.wasCanceled()) {&#xD;
        return null;&#xD;
    }&#xD;
    return res;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Q-QGUBUTEemIe6OhVnSywA" name="recoverstandards" specification="_Q-NDABUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    GenericDialog gdG = new GenericDialog(&quot;Select the standards to recover:&quot;);&#xD;
    List&lt;JCheckBox> checkBoxes = new ArrayList&lt;JCheckBox>();&#xD;
    boolean[] res = new boolean[labels.size()];&#xD;
    Panel panel = new Panel();&#xD;
    panel.setLayout(new GridLayout(labels.size(), 1, 6, 0));&#xD;
    for (int i = 0; i &lt; labels.size(); i++) {&#xD;
        JCheckBox check = new JCheckBox(labels.get(i));&#xD;
        panel.add(check);&#xD;
        checkBoxes.add(check);&#xD;
    }&#xD;
    gdG.add(panel);&#xD;
    gdG.addMessage(&quot;&quot;);&#xD;
    gdG.showDialog();&#xD;
    if (gdG.wasOKed()) {&#xD;
        for (int j = 0; j &lt; checkBoxes.size(); j++) {&#xD;
            res[j] = checkBoxes.get(j).isSelected();&#xD;
        }&#xD;
        return res;&#xD;
    }&#xD;
    if (gdG.wasCanceled()) {&#xD;
        return null;&#xD;
    }&#xD;
    return res;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Q-UXwBUTEemIe6OhVnSywA" name="selectlanes" specification="_Q-RUcBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    GenericDialog gdG = new GenericDialog(&quot;Lanes to cluster:&quot;);&#xD;
    List&lt;JCheckBox> checkBoxes = new ArrayList&lt;JCheckBox>();&#xD;
    boolean[] res = new boolean[labels.length];&#xD;
    Panel panel = new Panel();&#xD;
    panel.setLayout(new GridLayout(labels.length, 1, 6, 0));&#xD;
    for (int i = 0; i &lt; labels.length; i++) {&#xD;
        JCheckBox check = new JCheckBox(labels[i]);&#xD;
        check.setSelected(true);&#xD;
        panel.add(check);&#xD;
        checkBoxes.add(check);&#xD;
    }&#xD;
    gdG.add(panel);&#xD;
    gdG.addMessage(&quot;&quot;);&#xD;
    gdG.showDialog();&#xD;
    if (gdG.wasOKed()) {&#xD;
        for (int j = 0; j &lt; checkBoxes.size(); j++) {&#xD;
            res[j] = checkBoxes.get(j).isSelected();&#xD;
        }&#xD;
        return res;&#xD;
    }&#xD;
    if (gdG.wasCanceled()) {&#xD;
        return null;&#xD;
    }&#xD;
    return res;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Q-XbEBUTEemIe6OhVnSywA" name="trueinbooleanarray" specification="_Q-U-0BUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    int n = 0;&#xD;
    for (boolean b : a) {&#xD;
        if (b) {&#xD;
            n++;&#xD;
        }&#xD;
    }&#xD;
    return n;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Q-bFcBUTEemIe6OhVnSywA" name="deleteDir" specification="_Q-YpMBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    if (dir.isDirectory()) {&#xD;
        String[] children = dir.list();&#xD;
        for (int i = 0; i &lt; children.length; i++) {&#xD;
            boolean success = deleteDir(new File(dir, children[i]));&#xD;
            if (!success) {&#xD;
                return false;&#xD;
            }&#xD;
        }&#xD;
        // The directory is now empty so delete it &#xD;
        return dir.delete();&#xD;
    }&#xD;
    return dir.delete();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Q-dhsBUTEemIe6OhVnSywA" name="restartApplication" specification="_Q-cTkBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    StringBuilder cmd = new StringBuilder();&#xD;
    cmd.append(System.getProperty(&quot;java.home&quot;) + File.separator + &quot;bin&quot; + File.separator + &quot;java &quot;);&#xD;
    for (String jvmArg : ManagementFactory.getRuntimeMXBean().getInputArguments()) {&#xD;
        cmd.append(jvmArg + &quot; &quot;);&#xD;
    }&#xD;
    cmd.append(&quot;-cp &quot;).append(ManagementFactory.getRuntimeMXBean().getClassPath()).append(&quot; &quot;);&#xD;
    cmd.append(SelectUser.class.getName()).append(&quot; &quot;);&#xD;
    Runtime.getRuntime().exec(cmd.toString());&#xD;
    System.exit(0);&#xD;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Q9uh4BUTEemIe6OhVnSywA" name="isintersectionempty" visibility="public" isStatic="true" method="_Q9w-IBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q9vI8BUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q9vwABUTEemIe6OhVnSywA" name="roi1"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q9wXEBUTEemIe6OhVnSywA" name="roi2"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Q9yMQBUTEemIe6OhVnSywA" name="intersectwithany" visibility="public" isStatic="true" method="_Q912oBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q9yzUBUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q90BcBUTEemIe6OhVnSywA" name="roi1"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q90ogBUTEemIe6OhVnSywA" name="r">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Q91PkBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Q91PkRUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Q93EwBUTEemIe6OhVnSywA" name="belongstoany" visibility="public" isStatic="true" method="_Q96vIBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q93r0BUTEemIe6OhVnSywA" direction="return"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q94S4BUTEemIe6OhVnSywA" name="x">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q9458BUTEemIe6OhVnSywA" name="y">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q95hABUTEemIe6OhVnSywA" name="r">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Q96IEBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Q96IERUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Q979QBUTEemIe6OhVnSywA" name="roibelonging" visibility="public" isStatic="true" method="_Q9_noBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q98kUBUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q98kURUTEemIe6OhVnSywA" name="x">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q99LYBUTEemIe6OhVnSywA" name="y">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q9-ZgBUTEemIe6OhVnSywA" name="r">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Q9_AkBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Q9_AkRUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Q-AOsBUTEemIe6OhVnSywA" name="allequal" visibility="public" isStatic="true" method="_Q-Cq8RUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q-A1wBUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q-Bc0BUTEemIe6OhVnSywA" name="a">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Q-CD4BUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Q-Cq8BUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Q-D5EBUTEemIe6OhVnSywA" name="intarraytodoublearray" visibility="public" isStatic="true" method="_Q-GVURUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q-EgIBUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Q-EgIRUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Q-FHMBUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q-FuQBUTEemIe6OhVnSywA" name="a">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Q-FuQRUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Q-GVUBUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Q-HjcBUTEemIe6OhVnSywA" name="selectstandards" visibility="public" isStatic="true" method="_Q-L04BUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q-IKgBUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Q-IxkBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Q-IxkRUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q-JYoBUTEemIe6OhVnSywA" name="labels">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Q-J_sBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Q-KmwBUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q-KmwRUTEemIe6OhVnSywA" name="checked">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Q-LN0BUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Q-LN0RUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Q-NDABUTEemIe6OhVnSywA" name="recoverstandards" visibility="public" isStatic="true" method="_Q-QGUBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q-NqEBUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Q-ORIBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Q-ORIRUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q-O4MBUTEemIe6OhVnSywA" name="labels">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Q-PfQBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Q-PfQRUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Q-RUcBUTEemIe6OhVnSywA" name="selectlanes" visibility="public" isStatic="true" method="_Q-UXwBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q-R7gBUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Q-SikBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Q-SikRUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q-TJoBUTEemIe6OhVnSywA" name="labels">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Q-TwsBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Q-TwsRUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Q-U-0BUTEemIe6OhVnSywA" name="trueinbooleanarray" visibility="public" isStatic="true" method="_Q-XbEBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q-Vl4BUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q-WM8BUTEemIe6OhVnSywA" name="a">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Q-W0ABUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Q-W0ARUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Q-YpMBUTEemIe6OhVnSywA" name="deleteDir" visibility="public" isStatic="true" method="_Q-bFcBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q-ZQQBUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q-aeYBUTEemIe6OhVnSywA" name="dir"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Q-cTkBUTEemIe6OhVnSywA" name="restartApplication" visibility="public" isStatic="true" method="_Q-dhsBUTEemIe6OhVnSywA"/>
              </packagedElement>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_Q-fW4BUTEemIe6OhVnSywA" name="Weka">
              <packagedElement xmi:type="uml:Class" xmi:id="_Q-glABUTEemIe6OhVnSywA" name="ClusterDraw" visibility="public">
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Q-hMEBUTEemIe6OhVnSywA" name="graph" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Q-iaMBUTEemIe6OhVnSywA" name="lanes" visibility="private" type="_MGiwgRUTEemIe6OhVnSywA" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Q-jBQBUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Q-joUBUTEemIe6OhVnSywA" value="*"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Q-kPYBUTEemIe6OhVnSywA" name="method" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Q-k2cBUTEemIe6OhVnSywA" name="scaleX" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_Q-ldgBUTEemIe6OhVnSywA" name="defaultValue">
                    <language>JAVA</language>
                    <body>100</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Q-mroBUTEemIe6OhVnSywA" name="scaleY" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_Q-nSsBUTEemIe6OhVnSywA" name="defaultValue">
                    <language>JAVA</language>
                    <body>100</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Q-n5wBUTEemIe6OhVnSywA" name="invert" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Q-pH4BUTEemIe6OhVnSywA" name="output" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Q-pu8BUTEemIe6OhVnSywA" name="c" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Q-q9EBUTEemIe6OhVnSywA" name="fields" visibility="private" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Q-rkIBUTEemIe6OhVnSywA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Q-sLMBUTEemIe6OhVnSywA" value="*"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Q-0uEBUTEemIe6OhVnSywA" name="ClusterDraw" specification="_Q-syQBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    this.graph = graph;&#xD;
    this.lanes = lanes;&#xD;
    this.method = method;&#xD;
    this.invert = invert;&#xD;
    this.output = output;&#xD;
    this.c = c;&#xD;
    this.fields = fields;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Q-3KUBUTEemIe6OhVnSywA" name="showDiagram" specification="_Q-18MBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    if (IJ.getInstance() == null) {&#xD;
        new ImageJ(NO_SHOW);&#xD;
    }&#xD;
    HierarchyVisualizer a = new HierarchyVisualizer(graph);&#xD;
    Node tree = a.m_tree;&#xD;
    ImagePlus[] images;&#xD;
    switch(output) {&#xD;
        case 0:&#xD;
            images = getImagesfromfinallanes(lanes, method, c, invert);&#xD;
            break;&#xD;
        case 1:&#xD;
            images = getonlyImagesfromfinallanes(lanes);&#xD;
            break;&#xD;
        case 2:&#xD;
            images = getonlybandsfromfinallanes(lanes, invert);&#xD;
            break;&#xD;
        case 3:&#xD;
            images = getemptyimages(lanes);&#xD;
            break;&#xD;
        default:&#xD;
            images = getImagesfromfinallanes(lanes, method, c, invert);&#xD;
            break;&#xD;
    }&#xD;
    double md = maxDepth(tree);&#xD;
    int maxheight = images[0].getHeight();&#xD;
    //        for (ImagePlus i : images) {&#xD;
    //            if (maxheight &lt; i.getHeight()) {&#xD;
    //                maxheight = i.getHeight();&#xD;
    //            }&#xD;
    //        }&#xD;
    double scalefactor = 1;&#xD;
    if (images[0].getHeight() &lt; 600 &amp;&amp; output != 3) {&#xD;
        scalefactor = 600 / (double) images[0].getHeight();&#xD;
    }&#xD;
    int height = (int) (maxDepth(tree) * (int) scaleX * 10 + (maxheight * scalefactor) + (fields.size() * 200) + 100);&#xD;
    int width = (int) (images[0].getWidth() * scalefactor * lanes.length + 75);&#xD;
    ImagePlus impl = NewImage.createImage(&quot;Dendrogram&quot;, width, height, 0, 24, 0);&#xD;
    ImageProcessor ip1 = impl.getProcessor();&#xD;
    ip1.setColor(Color.white);&#xD;
    ip1.fill();&#xD;
    ip1.setColor(Color.black);&#xD;
    ip1.setLineWidth(3);&#xD;
    ip1.drawLine(width - 60, 0, width - 60, (int) (md * scaleX * 10));&#xD;
    for (int i = 1; i &lt; 11; i++) {&#xD;
        ip1.setColor(new Color(240, 240, 240));&#xD;
        ip1.drawLine(width - 30, i * ((int) (maxDepth(tree) * scaleX * 10)) / 10, 0, i * ((int) (maxDepth(tree) * scaleX * 10)) / 10);&#xD;
        ip1.setColor(Color.black);&#xD;
        ip1.setFont(new Font(&quot;SansSerif&quot;, Font.PLAIN, 15));&#xD;
        ip1.drawString(&quot;&quot; + i * 10, width - 58, i * ((int) (maxDepth(tree) * scaleX * 10)) / 10);&#xD;
        ip1.drawLine(width - 59, i * ((int) (maxDepth(tree) * scaleX * 10)) / 10, width - 65, i * ((int) (maxDepth(tree) * scaleX * 10)) / 10);&#xD;
        int pos1 = (i - 1) * ((int) (maxDepth(tree) * scaleX * 10)) / 10;&#xD;
        int pos2 = i * ((int) (maxDepth(tree) * scaleX * 10)) / 10;&#xD;
    }&#xD;
    for (int j = 0; j &lt; 100; j++) {&#xD;
        ip1.drawLine(width - 59, j * ((int) (maxDepth(tree) * scaleX * 10)) / 100, width - 61, j * ((int) (maxDepth(tree) * scaleX * 10)) / 100);&#xD;
    }&#xD;
    scaleX = images[0].getWidth() * scalefactor;&#xD;
    ip1.setColor(Color.black);&#xD;
    drawdendrogram(ip1, tree);&#xD;
    for (int i = 0; i &lt; lanes.length; i++) {&#xD;
        ImagePlus imp2 = images[i].duplicate();&#xD;
        ImageProcessor ip = imp2.getProcessor();&#xD;
        ip.setInterpolationMethod(BICUBIC);&#xD;
        ip = ip.resize((int) (ip.getWidth() * scalefactor), (int) (ip.getHeight() * scalefactor), true);&#xD;
        imp2.setProcessor(ip);&#xD;
        imp2.updateAndDraw();&#xD;
        ip = imp2.getProcessor();&#xD;
        ip1.insert(ip, (int) (i * scaleX), (int) (maxDepth(tree) * 100 * 10 + 10));&#xD;
    //            ip1.setFont(new Font(&quot;SansSerif&quot;, Font.PLAIN, 100));&#xD;
    //            String name = lanes[i].getName();&#xD;
    //            int w = (int) ((i + 0.5) * scaleX - (images[i].getWidth() / 2));&#xD;
    //            int h = height - 175;&#xD;
    //            &#xD;
    //            TextRoi tr = new TextRoi(name.substring(0, name.lastIndexOf(&quot;\n&quot;)), w, h, new Font(&quot;SansSerif&quot;, Font.PLAIN, 100));&#xD;
    ////            tr.setAngle(-90);&#xD;
    //            impl.setRoi(tr);&#xD;
    //            IJ.run(impl, &quot;Add Selection...&quot;, &quot;&quot;);&#xD;
    //            ip1.drawString(name.substring(0, name.lastIndexOf(&quot;\n&quot;)), (int) ((i + 0.5) * scaleX - (images[i].getWidth() / 2)), height - 175);&#xD;
    }&#xD;
    ip1.setLineWidth(1);&#xD;
    IJ.run(impl, &quot;Rotate 90 Degrees Left&quot;, &quot;&quot;);&#xD;
    ip1 = impl.getProcessor();&#xD;
    for (int i = 0; i &lt; fields.size(); i++) {&#xD;
        TextRoi tr = new TextRoi(fields.get(i), height - 75 - (fields.size() - i) * 200, 30, new Font(&quot;SansSerif&quot;, Font.BOLD, 20));&#xD;
        ip1.draw(tr);&#xD;
    }&#xD;
    for (int i = 0; i &lt; lanes.length; i++) {&#xD;
        String name = lanes[i].getName();&#xD;
        String[] parts = name.substring(0, name.lastIndexOf(&quot;\t\t&quot;)).split(&quot;\t\t&quot;);&#xD;
        for (int j = 0; j &lt; parts.length; j++) {&#xD;
            TextRoi tr;&#xD;
            if (j == 0) {&#xD;
                tr = new TextRoi(parts[j].substring(4), height - 75 - (fields.size() - j) * 200, width - ((i + 1) * scaleX) + (images[i].getWidth() / 2), new Font(&quot;SansSerif&quot;, Font.PLAIN, 20));&#xD;
            } else {&#xD;
                tr = new TextRoi(parts[j], height - 75 - (fields.size() - j) * 200, width - ((i + 1) * scaleX) + (images[i].getWidth() / 2), new Font(&quot;SansSerif&quot;, Font.PLAIN, 20));&#xD;
            }&#xD;
            ip1.draw(tr);&#xD;
        }&#xD;
    }&#xD;
    impl.updateAndDraw();&#xD;
    impl.show();&#xD;
    impl.getWindow().toFront();&#xD;
    impl.changes = true;&#xD;
    pw.dispose();&#xD;
//        int n = JOptionPane.showConfirmDialog(null, &quot;Do you want to save the dendrogram?&quot;, &quot;Save&quot;, JOptionPane.YES_NO_OPTION);&#xD;
//&#xD;
//        if (n == JOptionPane.YES_OPTION) {&#xD;
//            IJ.saveAsTiff(impl, null);&#xD;
//        }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Q-8p4BUTEemIe6OhVnSywA" name="drawdendrogram" specification="_Q-6NoBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    if (tree.isLeaf()) {&#xD;
        ip.drawLine((int) (tree.m_fPosX * scaleX), (int) (tree.m_fPosY * scaleY * 10), (int) (tree.m_fPosX * scaleX), (int) ((tree.m_fPosY - tree.m_fLength) * scaleY * 10));&#xD;
    } else {&#xD;
        for (int i = 0; i &lt; tree.m_children.length; i++) {&#xD;
            drawdendrogram(ip, tree.m_children[i]);&#xD;
            ip.drawLine((int) (tree.m_fPosX * scaleX), (int) (tree.m_fPosY * scaleY * 10), (int) (tree.m_fPosX * scaleX), (int) ((tree.m_fPosY - tree.m_fLength) * scaleY * 10));&#xD;
            double fPosX1 = tree.m_children[0].m_fPosX;&#xD;
            double fPosX2 = tree.m_children[tree.m_children.length - 1].m_fPosX;&#xD;
            ip.drawLine((int) (fPosX1 * scaleX), (int) (tree.m_fPosY * scaleY * 10), (int) (fPosX2 * scaleX), (int) (tree.m_fPosY * scaleY * 10));&#xD;
        }&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Q-_GIBUTEemIe6OhVnSywA" name="maxDepth" specification="_Q-9Q8BUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    double res = 0;&#xD;
    if (node.isLeaf()) {&#xD;
        res = node.m_fPosY;&#xD;
    } else {&#xD;
        res = maxDepthNodes(node.m_children);&#xD;
    }&#xD;
    return res;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Q_CJcRUTEemIe6OhVnSywA" name="maxDepthNodes" specification="_Q_AUQBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    double res = 0;&#xD;
    for (Node n : nodes) {&#xD;
        if (n.isLeaf()) {&#xD;
            res = max(res, n.m_fPosY);&#xD;
        } else {&#xD;
            res = max(res, maxDepth(n));&#xD;
        }&#xD;
    }&#xD;
    return res;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Q_ElsRUTEemIe6OhVnSywA" name="maxWidth" specification="_Q_DXkBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    double res = 0;&#xD;
    if (node.isLeaf()) {&#xD;
        res = node.m_fPosX;&#xD;
    } else {&#xD;
        res = maxWidthNodes(node.m_children);&#xD;
    }&#xD;
    return res;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Q_FMxRUTEemIe6OhVnSywA" name="maxWidthNodes" specification="_Q_FMwBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    double res = 0;&#xD;
    for (Node n : nodes) {&#xD;
        if (n.isLeaf()) {&#xD;
            res = max(res, n.m_fPosX);&#xD;
        } else {&#xD;
            res = max(res, maxWidth(n));&#xD;
        }&#xD;
    }&#xD;
    return res;&#xD;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Q-syQBUTEemIe6OhVnSywA" name="ClusterDraw" visibility="public" method="_Q-0uEBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q-uncBUTEemIe6OhVnSywA" name="graph"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q-vOgBUTEemIe6OhVnSywA" name="lanes" type="_MGiwgRUTEemIe6OhVnSywA">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Q-v1kBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Q-v1kRUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q-wcoBUTEemIe6OhVnSywA" name="method">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q-xDsBUTEemIe6OhVnSywA" name="invert">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q-xqwBUTEemIe6OhVnSywA" name="output">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q-yR0BUTEemIe6OhVnSywA" name="c"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q-zf8BUTEemIe6OhVnSywA" name="fields">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Q-0HABUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Q-0HARUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Q-18MBUTEemIe6OhVnSywA" name="showDiagram" visibility="public" method="_Q-3KUBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q-2jQBUTEemIe6OhVnSywA" name="pw"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Q-6NoBUTEemIe6OhVnSywA" name="drawdendrogram" visibility="private" method="_Q-8p4BUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q-60sBUTEemIe6OhVnSywA" name="ip"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q-8C0BUTEemIe6OhVnSywA" name="tree"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Q-9Q8BUTEemIe6OhVnSywA" name="maxDepth" visibility="private" method="_Q-_GIBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q-94ABUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q--fEBUTEemIe6OhVnSywA" name="node"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Q_AUQBUTEemIe6OhVnSywA" name="maxDepthNodes" visibility="private" method="_Q_CJcRUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q_AUQRUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q_A7UBUTEemIe6OhVnSywA" name="nodes">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Q_BiYBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Q_CJcBUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Q_DXkBUTEemIe6OhVnSywA" name="maxWidth" visibility="private" method="_Q_ElsRUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q_D-oBUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q_ElsBUTEemIe6OhVnSywA" name="node"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Q_FMwBUTEemIe6OhVnSywA" name="maxWidthNodes" visibility="private" method="_Q_FMxRUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q_FMwRUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q_FMwhUTEemIe6OhVnSywA" name="nodes">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Q_FMwxUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Q_FMxBUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_Q_LTYBUTEemIe6OhVnSywA" name="HierarchyVisualizer" visibility="public">
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Q_Pk0RUTEemIe6OhVnSywA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_8heigBydEduyofBvg4RL2w"/>
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_Q_Pk0hUTEemIe6OhVnSywA" name="defaultValue">
                    <language>JAVA</language>
                    <body>1L</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Q_QL4BUTEemIe6OhVnSywA" name="m_sNewick" visibility="private" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Q_SBERUTEemIe6OhVnSywA" name="m_tree" visibility="public" type="_Q_Qy8BUTEemIe6OhVnSywA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Q_SBEhUTEemIe6OhVnSywA" name="m_nLeafs" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Q_SoIBUTEemIe6OhVnSywA" name="m_fHeight" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Q_SoIRUTEemIe6OhVnSywA" name="m_fScaleX" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_Q_SoIhUTEemIe6OhVnSywA" name="defaultValue">
                    <language>JAVA</language>
                    <body>1</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Q_SoIxUTEemIe6OhVnSywA" name="m_fScaleY" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_Q_SoJBUTEemIe6OhVnSywA" name="defaultValue">
                    <language>JAVA</language>
                    <body>1</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Q_ifwRUTEemIe6OhVnSywA" name="m_fTmpLength" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Q_VEYBUTEemIe6OhVnSywA" name="HierarchyVisualizer" specification="_Q_TPMBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    try {&#xD;
        parseNewick(sNewick);&#xD;
    } catch (Exception e) {&#xD;
        e.printStackTrace();&#xD;
        System.exit(0);&#xD;
    }&#xD;
    addComponentListener(this);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Q_VEZRUTEemIe6OhVnSywA" name="positionLeafs" specification="_Q_VEYRUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    if (node.isLeaf()) {&#xD;
        node.m_fPosX = nPosX + 0.5;&#xD;
        nPosX++;&#xD;
        return nPosX;&#xD;
    } else {&#xD;
        for (int i = 0; i &lt; node.m_children.length; i++) {&#xD;
            nPosX = positionLeafs(node.m_children[i], nPosX);&#xD;
        }&#xD;
    }&#xD;
    return nPosX;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Q_VrcxUTEemIe6OhVnSywA" name="positionRest" specification="_Q_VrcBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    if (node.isLeaf()) {&#xD;
        return node.m_fPosX;&#xD;
    } else {&#xD;
        double fPosX = 0;&#xD;
        for (int i = 0; i &lt; node.m_children.length; i++) {&#xD;
            fPosX += positionRest(node.m_children[i]);&#xD;
        }&#xD;
        fPosX /= node.m_children.length;&#xD;
        node.m_fPosX = fPosX;&#xD;
        return fPosX;&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Q_WSgRUTEemIe6OhVnSywA" name="positionHeight" specification="_Q_VrdBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    if (node.isLeaf()) {&#xD;
        node.m_fPosY = fOffSet + node.m_fLength;&#xD;
        return node.m_fPosY;&#xD;
    } else {&#xD;
        double fPosY = fOffSet + node.m_fLength;&#xD;
        double fYMax = 0;&#xD;
        for (int i = 0; i &lt; node.m_children.length; i++) {&#xD;
            fYMax = Math.max(fYMax, positionHeight(node.m_children[i], fPosY));&#xD;
        }&#xD;
        node.m_fPosY = fPosY;&#xD;
        return fYMax;&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Q_gDghUTEemIe6OhVnSywA" name="nextNode" specification="_Q_fcchUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    int nBraces = 0;&#xD;
    char c = sStr.charAt(i);&#xD;
    do {&#xD;
        i++;&#xD;
        if (i &lt; sStr.length()) {&#xD;
            c = sStr.charAt(i);&#xD;
            // skip meta data block&#xD;
            if (c == '[') {&#xD;
                while (i &lt; sStr.length() &amp;&amp; sStr.charAt(i) != ']') {&#xD;
                    i++;&#xD;
                }&#xD;
                i++;&#xD;
                if (i &lt; sStr.length()) {&#xD;
                    c = sStr.charAt(i);&#xD;
                }&#xD;
            }&#xD;
            switch(c) {&#xD;
                case '(':&#xD;
                    nBraces++;&#xD;
                    break;&#xD;
                case ')':&#xD;
                    nBraces--;&#xD;
                    break;&#xD;
                default:&#xD;
                    break;&#xD;
            }&#xD;
        }&#xD;
    } while (i &lt; sStr.length() &amp;&amp; (nBraces > 0 || (c != ',' &amp;&amp; c != ')' &amp;&amp; c != '(')));&#xD;
    if (i >= sStr.length() || nBraces &lt; 0) {&#xD;
        return -1;&#xD;
    } else if (sStr.charAt(i) == ')') {&#xD;
        i++;&#xD;
        if (sStr.charAt(i) == '[') {&#xD;
            while (i &lt; sStr.length() &amp;&amp; sStr.charAt(i) != ']') {&#xD;
                i++;&#xD;
            }&#xD;
            i++;&#xD;
            if (i >= sStr.length()) {&#xD;
                return -1;&#xD;
            }&#xD;
        }&#xD;
        if (sStr.charAt(i) == ':') {&#xD;
            i++;&#xD;
            c = sStr.charAt(i);&#xD;
            while (i &lt; sStr.length() &amp;&amp; (c == '.' || Character.isDigit(c))) {&#xD;
                i++;&#xD;
                if (i &lt; sStr.length()) {&#xD;
                    c = sStr.charAt(i);&#xD;
                }&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    return i;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Q_gqkRUTEemIe6OhVnSywA" name="parseNewick" specification="_Q_gDgxUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    m_sNewick = sNewick;&#xD;
    int i = m_sNewick.indexOf('(');&#xD;
    if (i > 0) {&#xD;
        m_sNewick = m_sNewick.substring(i);&#xD;
    }&#xD;
    System.err.println(m_sNewick);&#xD;
    m_tree = parseNewick2(m_sNewick);&#xD;
    System.err.println(m_tree.toString());&#xD;
    m_nLeafs = positionLeafs(m_tree, 0);&#xD;
    positionRest(m_tree);&#xD;
    m_fHeight = positionHeight(m_tree, 0);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Q_ifwBUTEemIe6OhVnSywA" name="parseNewick2" specification="_Q_gqkhUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    // System.out.println(sStr);&#xD;
    if (sStr == null || sStr.length() == 0) {&#xD;
        return null;&#xD;
    }&#xD;
    Node node = new Node();&#xD;
    if (sStr.startsWith(&quot;(&quot;)) {&#xD;
        int i1 = nextNode(sStr, 0);&#xD;
        int i2 = nextNode(sStr, i1);&#xD;
        node.m_children = new Node[2];&#xD;
        node.m_children[0] = parseNewick2(sStr.substring(1, i1));&#xD;
        node.m_children[0].m_Parent = node;&#xD;
        String sStr2 = sStr.substring(i1 + 1, (i2 > 0 ? i2 : sStr.length()));&#xD;
        node.m_children[1] = parseNewick2(sStr2);&#xD;
        node.m_children[1].m_Parent = node;&#xD;
        if (sStr.lastIndexOf('[') > sStr.lastIndexOf(')')) {&#xD;
            sStr = sStr.substring(sStr.lastIndexOf('['));&#xD;
            i2 = sStr.indexOf(']');&#xD;
            if (i2 &lt; 0) {&#xD;
                throw new Exception(&quot;unbalanced square bracket found:&quot; + sStr);&#xD;
            }&#xD;
            sStr2 = sStr.substring(1, i2);&#xD;
            node.m_sMetaData = sStr2;&#xD;
        }&#xD;
        if (sStr.lastIndexOf(':') > sStr.lastIndexOf(')')) {&#xD;
            sStr = sStr.substring(sStr.lastIndexOf(':'));&#xD;
            sStr = sStr.replaceAll(&quot;[,\\):]&quot;, &quot;&quot;);&#xD;
            if (!sStr.equals(&quot;&quot;)) {&#xD;
                node.m_fLength = new Double(sStr);&#xD;
            } else {&#xD;
                node.m_fLength = 0;&#xD;
            }&#xD;
        } else {&#xD;
            node.m_fLength = 1;&#xD;
        }&#xD;
    } else {&#xD;
        // it is a leaf&#xD;
        if (sStr.contains(&quot;[&quot;)) {&#xD;
            // grab metadata&#xD;
            int i1 = sStr.indexOf('[');&#xD;
            int i2 = sStr.indexOf(']');&#xD;
            if (i2 &lt; 0) {&#xD;
                throw new Exception(&quot;unbalanced square bracket found:&quot; + sStr);&#xD;
            }&#xD;
            String sStr2 = sStr.substring(i1 + 1, i2);&#xD;
            sStr = sStr.substring(0, i1) + sStr.substring(i2 + 1);&#xD;
            node.m_sMetaData = sStr2;&#xD;
        }&#xD;
        if (sStr.indexOf(')') >= 0) {&#xD;
            sStr = sStr.substring(0, sStr.indexOf(')'));&#xD;
        }&#xD;
        sStr = sStr.replaceFirst(&quot;[,\\)]&quot;, &quot;&quot;);&#xD;
        // System.out.println(&quot;parsing &lt;&lt;&quot;+sStr+&quot;>>&quot;);&#xD;
        if (sStr.length() > 0) {&#xD;
            if (sStr.indexOf(':') >= 0) {&#xD;
                int iColon = sStr.indexOf(':');&#xD;
                node.m_sLabel = sStr.substring(0, iColon);&#xD;
                if (sStr.indexOf(':', iColon + 1) >= 0) {&#xD;
                    int iColon2 = sStr.indexOf(':', iColon + 1);&#xD;
                    node.m_fLength = new Double(sStr.substring(iColon + 1, iColon2));&#xD;
                    m_fTmpLength = new Double(sStr.substring(iColon2 + 1));&#xD;
                } else {&#xD;
                    node.m_fLength = new Double(sStr.substring(iColon + 1));&#xD;
                }&#xD;
            } else {&#xD;
                node.m_sLabel = sStr;&#xD;
                node.m_fLength = 1;&#xD;
            }&#xD;
        } else {&#xD;
            return null;&#xD;
        }&#xD;
    }&#xD;
    return node;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Q_k8ABUTEemIe6OhVnSywA" name="fitToScreen" specification="_Q_kU8BUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    m_fScaleX = 1;&#xD;
    int nW = getWidth();&#xD;
    if (m_nLeafs > 0) {&#xD;
        m_fScaleX = nW / m_nLeafs;&#xD;
    }&#xD;
    m_fScaleY = 1;&#xD;
    int nH = getHeight();&#xD;
    if (m_fHeight > 0) {&#xD;
        m_fScaleY = (nH - 10) / m_fHeight;&#xD;
    }&#xD;
    repaint();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Q_nYQBUTEemIe6OhVnSywA" name="paintComponent" specification="_Q_mKIBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    Color oldBackground = ((Graphics2D) g).getBackground();&#xD;
    // if (m_BackgroundColor != null)&#xD;
    ((Graphics2D) g).setBackground(Color.WHITE);&#xD;
    g.clearRect(0, 0, getSize().width, getSize().height);&#xD;
    ((Graphics2D) g).setBackground(oldBackground);&#xD;
    g.setClip(3, 7, getWidth() - 6, getHeight() - 10);&#xD;
    m_tree.draw(g);&#xD;
    g.drawLine(0, 10, getWidth() - 20, 10);&#xD;
    // Drawing x-axis&#xD;
    int BORDER_GAP = 10;&#xD;
    int Y_HATCH_CNT = 10;&#xD;
    int GRAPH_POINT_WIDTH = 12;&#xD;
    int value = 90;&#xD;
    for (int i = 0; i &lt; Y_HATCH_CNT; i++) {&#xD;
        int x0 = BORDER_GAP;&#xD;
        int x1 = GRAPH_POINT_WIDTH + BORDER_GAP;&#xD;
        int y0 = getHeight() - (((i + 1) * (getHeight() - BORDER_GAP * 2)) / Y_HATCH_CNT + BORDER_GAP);&#xD;
        int y1 = y0;&#xD;
        g.drawLine(x0, y0, x1, y1);&#xD;
        g.drawString(&quot;&quot; + value, x0, y0);&#xD;
        value = value - 10;&#xD;
    }&#xD;
    g.setClip(0, 0, getWidth(), getHeight());&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Q_rCoBUTEemIe6OhVnSywA" name="componentHidden" specification="_Q_p0gBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Q_s30BUTEemIe6OhVnSywA" name="componentMoved" specification="_Q_rpsBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Q_vUEBUTEemIe6OhVnSywA" name="componentResized" specification="_Q_uF8BUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    fitToScreen();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Q_xJQBUTEemIe6OhVnSywA" name="componentShown" specification="_Q_v7IBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Q_0zoBUTEemIe6OhVnSywA" name="main" specification="_Q_yXYBUTEemIe6OhVnSywA">
                  <language>JAVA</language>
                  <body>&#xD;
    //HierarchyVisualizer a = new HierarchyVisualizer(&quot;((((human:2.0,(chimp:1.0,bonobo:1.0):1.0):1.0,gorilla:3.0):1.0,siamang:4.0):1.0,orangutan:5.0)&quot;);&#xD;
    //HierarchyVisualizer a = new HierarchyVisualizer(&quot;(((human:2.0,(chimp:1.0,bonobo:1.0):1.0):1.0,gorilla:3.0):1.0,siamang:4.0)&quot;);&#xD;
    HierarchyVisualizer a = new HierarchyVisualizer(&quot; (((5[theta=0.121335,lxg=0.122437]:0.00742795,3[theta=0.0972485,lxg=0.152762]:0.00742795)[theta=0.490359,lxg=0.0746703]:0.0183076,((2[theta=0.0866056,lxg=0.2295]:0.00993801,4[theta=0.135512,lxg=0.146674]:0.00993801)[theta=0.897783,lxg=0.0200762]:0.00901206,1[theta=0.200265,lxg=0.18925]:0.0189501)[theta=0.0946195,lxg=0.143427]:0.00678551)[theta=0.185562,lxg=0.139681]:0.0129598,(7[theta=0.176022,lxg=0.364039]:0.0320395,((0[theta=0.224286,lxg=0.156485]:0.0175487,8[theta=0.223313,lxg=0.157166]:0.0175487)[theta=0.631287,lxg=0.024042]:0.00758871,6[theta=0.337871,lxg=0.148799]:0.0251374)[theta=0.33847,lxg=0.040784]:0.00690208)[theta=0.209238,lxg=0.0636202]:0.00665587)[theta=0.560453,lxg=-0.138086]:0.01&quot;);&#xD;
    //HierarchyVisualizer a = new HierarchyVisualizer(&quot; ((5[theta=0.121335,lxg=0.122437]:0.00742795,3[theta=0.0972485,lxg=0.152762]:0.00742795)[theta=0.490359,lxg=0.0746703]:0.0183076,2[theta=0.0866056,lxg=0.2295]:0.00993801)[theta=0.897783,lxg=0.0200762]:0.00901206&quot;);&#xD;
    a.setSize(800, 600);&#xD;
    JFrame f;&#xD;
    f = new JFrame();&#xD;
    Container contentPane = f.getContentPane();&#xD;
    contentPane.add(a);&#xD;
    f.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);&#xD;
    f.setSize(800, 600);&#xD;
    f.setVisible(true);&#xD;
    a.fitToScreen();&#xD;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Q_TPMBUTEemIe6OhVnSywA" name="HierarchyVisualizer" visibility="public" method="_Q_VEYBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q_UdURUTEemIe6OhVnSywA" name="sNewick"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Q_VEYRUTEemIe6OhVnSywA" name="positionLeafs" visibility="private" method="_Q_VEZRUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q_VEYhUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q_VEYxUTEemIe6OhVnSywA" name="node" type="_Q_Qy8BUTEemIe6OhVnSywA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q_VEZBUTEemIe6OhVnSywA" name="nPosX">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Q_VrcBUTEemIe6OhVnSywA" name="positionRest" visibility="private" method="_Q_VrcxUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q_VrcRUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q_VrchUTEemIe6OhVnSywA" name="node" type="_Q_Qy8BUTEemIe6OhVnSywA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Q_VrdBUTEemIe6OhVnSywA" name="positionHeight" visibility="private" method="_Q_WSgRUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q_VrdRUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q_VrdhUTEemIe6OhVnSywA" name="node" type="_Q_Qy8BUTEemIe6OhVnSywA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q_WSgBUTEemIe6OhVnSywA" name="fOffSet">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Q_fcchUTEemIe6OhVnSywA" name="nextNode" visibility="private" method="_Q_gDghUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q_fccxUTEemIe6OhVnSywA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q_gDgBUTEemIe6OhVnSywA" name="sStr"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q_gDgRUTEemIe6OhVnSywA" name="i">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Q_gDgxUTEemIe6OhVnSywA" name="parseNewick" visibility="private" method="_Q_gqkRUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q_gqkBUTEemIe6OhVnSywA" name="sNewick"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Q_gqkhUTEemIe6OhVnSywA" name="parseNewick2" visibility="private" method="_Q_ifwBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q_h4sRUTEemIe6OhVnSywA" type="_Q_gqkxUTEemIe6OhVnSywA" direction="return"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q_h4shUTEemIe6OhVnSywA" name="sStr"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Q_kU8BUTEemIe6OhVnSywA" name="fitToScreen" visibility="public" method="_Q_k8ABUTEemIe6OhVnSywA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Q_mKIBUTEemIe6OhVnSywA" name="paintComponent" visibility="public" method="_Q_nYQBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q_mxMBUTEemIe6OhVnSywA" name="g"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Q_p0gBUTEemIe6OhVnSywA" name="componentHidden" visibility="public" method="_Q_rCoBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q_qbkBUTEemIe6OhVnSywA" name="e"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Q_rpsBUTEemIe6OhVnSywA" name="componentMoved" visibility="public" method="_Q_s30BUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q_sQwBUTEemIe6OhVnSywA" name="e"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Q_uF8BUTEemIe6OhVnSywA" name="componentResized" visibility="public" method="_Q_vUEBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q_utABUTEemIe6OhVnSywA" name="e"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Q_v7IBUTEemIe6OhVnSywA" name="componentShown" visibility="public" method="_Q_xJQBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q_wiMBUTEemIe6OhVnSywA" name="e"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Q_yXYBUTEemIe6OhVnSywA" name="main" visibility="public" isStatic="true" method="_Q_0zoBUTEemIe6OhVnSywA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q_y-cBUTEemIe6OhVnSywA" name="args">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Q_zlgBUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Q_0MkBUTEemIe6OhVnSywA" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <nestedClassifier xmi:type="uml:Class" xmi:id="_Q_Qy8BUTEemIe6OhVnSywA" name="Node" visibility="public">
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_Q_W5kBUTEemIe6OhVnSywA" name="m_fLength" visibility="private" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                    <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_Q_W5kRUTEemIe6OhVnSywA" name="defaultValue">
                      <language>JAVA</language>
                      <body>-1</body>
                    </defaultValue>
                  </ownedAttribute>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_Q_W5khUTEemIe6OhVnSywA" name="m_fPosX" visibility="private" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                    <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_Q_XgoBUTEemIe6OhVnSywA" name="defaultValue">
                      <language>JAVA</language>
                      <body>0</body>
                    </defaultValue>
                  </ownedAttribute>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_Q_XgoRUTEemIe6OhVnSywA" name="m_fPosY" visibility="private" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                    <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_Q_XgohUTEemIe6OhVnSywA" name="defaultValue">
                      <language>JAVA</language>
                      <body>0</body>
                    </defaultValue>
                  </ownedAttribute>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_Q_YHsBUTEemIe6OhVnSywA" name="m_sLabel" visibility="private" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_Q_YHsRUTEemIe6OhVnSywA" name="m_sMetaData" visibility="private" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_Q_YuwBUTEemIe6OhVnSywA" name="m_children" visibility="private" type="_Q_Qy8BUTEemIe6OhVnSywA" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Q_YuwRUTEemIe6OhVnSywA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Q_YuwhUTEemIe6OhVnSywA" value="*"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_Q_YuwxUTEemIe6OhVnSywA" name="m_Parent" visibility="private" type="_Q_Qy8BUTEemIe6OhVnSywA" isUnique="false">
                    <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_Q_YuxBUTEemIe6OhVnSywA" name="defaultValue">
                      <language>JAVA</language>
                      <body>null</body>
                    </defaultValue>
                  </ownedAttribute>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Q_ZV0RUTEemIe6OhVnSywA" name="getParent" specification="_Q_YuxRUTEemIe6OhVnSywA">
                    <language>JAVA</language>
                    <body>&#xD;
    return m_Parent;&#xD;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Q_Z84RUTEemIe6OhVnSywA" name="setParent" specification="_Q_ZV0hUTEemIe6OhVnSywA">
                    <language>JAVA</language>
                    <body>&#xD;
    m_Parent = parent;&#xD;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Q_aj8RUTEemIe6OhVnSywA" name="isRoot" specification="_Q_Z84hUTEemIe6OhVnSywA">
                    <language>JAVA</language>
                    <body>&#xD;
    return m_Parent == null;&#xD;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Q_aj9BUTEemIe6OhVnSywA" name="isLeaf" specification="_Q_aj8hUTEemIe6OhVnSywA">
                    <language>JAVA</language>
                    <body>&#xD;
    return m_children == null;&#xD;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Q_bLARUTEemIe6OhVnSywA" name="getChildCount" specification="_Q_aj9RUTEemIe6OhVnSywA">
                    <language>JAVA</language>
                    <body>&#xD;
    //			}&#xD;
    if (m_children == null) {&#xD;
        return 0;&#xD;
    }&#xD;
    return m_children.length;&#xD;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Q_byERUTEemIe6OhVnSywA" name="getChild" specification="_Q_bLAhUTEemIe6OhVnSywA">
                    <language>JAVA</language>
                    <body>&#xD;
    return m_children[iChild];&#xD;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Q_byFBUTEemIe6OhVnSywA" name="getNodeCount" specification="_Q_byEhUTEemIe6OhVnSywA">
                    <language>JAVA</language>
                    <body>&#xD;
    if (m_children == null) {&#xD;
        return 1;&#xD;
    }&#xD;
    int n = 1;&#xD;
    for (int i = 0; i &lt; m_children.length; i++) {&#xD;
        n += m_children[i].getNodeCount();&#xD;
    }&#xD;
    return n;&#xD;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Q_cZIhUTEemIe6OhVnSywA" name="toString" specification="_Q_cZIBUTEemIe6OhVnSywA">
                    <language>JAVA</language>
                    <body>&#xD;
    StringBuffer buf = new StringBuffer();&#xD;
    if (m_children != null) {&#xD;
        buf.append(&quot;(&quot;);&#xD;
        for (int i = 0; i &lt; m_children.length - 1; i++) {&#xD;
            buf.append(m_children[i].toString());&#xD;
            buf.append(',');&#xD;
        }&#xD;
        buf.append(m_children[m_children.length - 1].toString());&#xD;
        buf.append(&quot;)&quot;);&#xD;
    } else {&#xD;
        buf.append(m_sLabel);&#xD;
    }&#xD;
    if (m_sMetaData != null) {&#xD;
        buf.append('[');&#xD;
        buf.append(m_sMetaData);&#xD;
        buf.append(']');&#xD;
    }&#xD;
    buf.append(&quot;:&quot; + m_fLength);&#xD;
    return buf.toString();&#xD;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Q_fccRUTEemIe6OhVnSywA" name="draw" specification="_Q_e1YRUTEemIe6OhVnSywA">
                    <language>JAVA</language>
                    <body>&#xD;
    if (isLeaf()) {&#xD;
        int y = (int) (m_fPosX * m_fScaleX);&#xD;
        int x = (int) (m_fPosY * m_fScaleY);&#xD;
        g.drawString(m_sLabel, x + 2, y);&#xD;
        g.drawLine((int) (m_fPosY * m_fScaleY), (int) (m_fPosX * m_fScaleX), (int) ((m_fPosY - m_fLength) * m_fScaleY), (int) (m_fPosX * m_fScaleX));&#xD;
    } else {&#xD;
        double fPosX1 = Double.MAX_VALUE;&#xD;
        double fPosX2 = -Double.MAX_VALUE;&#xD;
        for (int i = 0; i &lt; m_children.length; i++) {&#xD;
            double f = m_children[i].draw(g);&#xD;
            if (f &lt; fPosX1) {&#xD;
                fPosX1 = f;&#xD;
            }&#xD;
            if (f > fPosX2) {&#xD;
                fPosX2 = f;&#xD;
            }&#xD;
        }&#xD;
        g.drawLine((int) (m_fPosY * m_fScaleY), (int) (m_fPosX * m_fScaleX), (int) ((m_fPosY - m_fLength) * m_fScaleY), (int) (m_fPosX * m_fScaleX));&#xD;
        g.drawLine((int) (m_fPosY * m_fScaleY), (int) (fPosX1 * m_fScaleX), (int) (m_fPosY * m_fScaleY), (int) (fPosX2 * m_fScaleX));&#xD;
    }&#xD;
    return m_fPosX;&#xD;
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Q_YuxRUTEemIe6OhVnSywA" name="getParent" visibility="private" method="_Q_ZV0RUTEemIe6OhVnSywA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q_ZV0BUTEemIe6OhVnSywA" type="_Q_Qy8BUTEemIe6OhVnSywA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Q_ZV0hUTEemIe6OhVnSywA" name="setParent" visibility="private" method="_Q_Z84RUTEemIe6OhVnSywA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q_Z84BUTEemIe6OhVnSywA" name="parent" type="_Q_Qy8BUTEemIe6OhVnSywA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Q_Z84hUTEemIe6OhVnSywA" name="isRoot" visibility="private" method="_Q_aj8RUTEemIe6OhVnSywA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q_aj8BUTEemIe6OhVnSywA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Q_aj8hUTEemIe6OhVnSywA" name="isLeaf" visibility="private" method="_Q_aj9BUTEemIe6OhVnSywA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q_aj8xUTEemIe6OhVnSywA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Q_aj9RUTEemIe6OhVnSywA" name="getChildCount" visibility="private" method="_Q_bLARUTEemIe6OhVnSywA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q_bLABUTEemIe6OhVnSywA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Q_bLAhUTEemIe6OhVnSywA" name="getChild" visibility="private" method="_Q_byERUTEemIe6OhVnSywA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q_bLAxUTEemIe6OhVnSywA" type="_Q_Qy8BUTEemIe6OhVnSywA" direction="return"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q_byEBUTEemIe6OhVnSywA" name="iChild">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Q_byEhUTEemIe6OhVnSywA" name="getNodeCount" visibility="private" method="_Q_byFBUTEemIe6OhVnSywA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q_byExUTEemIe6OhVnSywA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Q_cZIBUTEemIe6OhVnSywA" name="toString" visibility="public" method="_Q_cZIhUTEemIe6OhVnSywA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q_cZIRUTEemIe6OhVnSywA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Q_e1YRUTEemIe6OhVnSywA" name="draw" visibility="private" method="_Q_fccRUTEemIe6OhVnSywA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q_e1YhUTEemIe6OhVnSywA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q_fccBUTEemIe6OhVnSywA" name="g"/>
                  </ownedOperation>
                </nestedClassifier>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_Q_gqkxUTEemIe6OhVnSywA" name="Node"/>
            </packagedElement>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <profileApplication xmi:type="uml:ProfileApplication" xmi:id="_ndFkIAOqEembC_jgwtKO0Q">
      <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_ndJOgAOqEembC_jgwtKO0Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.eclipse.org/papyrus/PapyrusJava/1#/"/>
      </eAnnotations>
      <appliedProfile xmi:type="uml:Profile" href="pathmap://PapyrusJava_PROFILES/PapyrusJava.profile.uml#_j9REUByGEduN1bTiWJ0lyw"/>
    </profileApplication>
    <profileApplication xmi:type="uml:ProfileApplication" xmi:id="_neD0gAOqEembC_jgwtKO0Q">
      <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_neFpsAOqEembC_jgwtKO0Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.eclipse.org/papyrus/Codegen/1#/"/>
      </eAnnotations>
      <appliedProfile xmi:type="uml:Profile" href="pathmap://Codegen_PROFILES/Codegen.profile.uml#_fPDsIBa-EearhdjjJ6cVzQ"/>
    </profileApplication>
    <profileApplication xmi:type="uml:ProfileApplication" xmi:id="_nekx4AOqEembC_jgwtKO0Q">
      <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_nenOIAOqEembC_jgwtKO0Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.eclipse.org/uml2/5.0.0/UML/Profile/Standard#/"/>
      </eAnnotations>
      <appliedProfile xmi:type="uml:Profile" href="pathmap://UML_PROFILES/Standard.profile.uml#_0"/>
    </profileApplication>
  </uml:Model>
  <standard:Create xmi:id="_EFu7wBUTEemIe6OhVnSywA" base_BehavioralFeature="_EFqDQBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_EH7UIBUTEemIe6OhVnSywA" base_BehavioralFeature="_EH3CsBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_EMUE4BUTEemIe6OhVnSywA" base_BehavioralFeature="_EMRooBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_ENlQMBUTEemIe6OhVnSywA" base_BehavioralFeature="_ENiz8hUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_EPc4cBUTEemIe6OhVnSywA" base_BehavioralFeature="_EPbDQBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_EQOUgBUTEemIe6OhVnSywA" base_BehavioralFeature="_EQNGYBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_EQqZYBUTEemIe6OhVnSywA" base_BehavioralFeature="_EQn9IBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_ERA-sBUTEemIe6OhVnSywA" base_BehavioralFeature="_EQ_wkBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_ERqe8BUTEemIe6OhVnSywA" base_BehavioralFeature="_ERoCsBUTEemIe6OhVnSywA"/>
  <PapyrusJava:External xmi:id="_GugU0BUTEemIe6OhVnSywA" name="db.Classes.LaneDB" base_Classifier="_EHtRsBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_GurT8BUTEemIe6OhVnSywA" base_BehavioralFeature="_Guo3sBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_Gvkr0BUTEemIe6OhVnSywA" base_BehavioralFeature="_GviPkBUTEemIe6OhVnSywA"/>
  <PapyrusJava:External xmi:id="_GxxrQBUTEemIe6OhVnSywA" name="db.Classes.Experiment" base_Classifier="_EJs1wBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_Gx5AABUTEemIe6OhVnSywA" base_BehavioralFeature="_Gx3K0BUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_Gy00IBUTEemIe6OhVnSywA" base_BehavioralFeature="_GyyX4BUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_Gzb4IBUTEemIe6OhVnSywA" base_BehavioralFeature="_GzaC8BUTEemIe6OhVnSywA"/>
  <PapyrusJava:External xmi:id="_Gz3V8BUTEemIe6OhVnSywA" name="db.Classes.LaneDBwithsimilarity" base_Classifier="_EO-XUBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_G0C8IBUTEemIe6OhVnSywA" base_BehavioralFeature="_G0Af4BUTEemIe6OhVnSywA"/>
  <PapyrusJava:External xmi:id="_G05QsBUTEemIe6OhVnSywA" name="db.Classes.User" base_Classifier="_EMN-QBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_G0_XUBUTEemIe6OhVnSywA" base_BehavioralFeature="_G087EBUTEemIe6OhVnSywA"/>
  <PapyrusJava:External xmi:id="_G1YY4BUTEemIe6OhVnSywA" name="db.Classes.Study" base_Classifier="_EFkjsBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_G1a1IBUTEemIe6OhVnSywA" base_BehavioralFeature="_G1ZnABUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_G13hEBUTEemIe6OhVnSywA" base_BehavioralFeature="_G11E0BUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_G2d-ABUTEemIe6OhVnSywA" base_BehavioralFeature="_G2bhwBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_G2kEoBUTEemIe6OhVnSywA" base_BehavioralFeature="_G2hoYBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_G3KhkBUTEemIe6OhVnSywA" base_BehavioralFeature="_G3IFUBUTEemIe6OhVnSywA"/>
  <PapyrusJava:External xmi:id="_G3tUIBUTEemIe6OhVnSywA" name="db.Classes.Comparison" base_Classifier="_EHPXoBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_G3yMoBUTEemIe6OhVnSywA" base_BehavioralFeature="_G3wXcBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_G5AUoBUTEemIe6OhVnSywA" base_BehavioralFeature="_G494YBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_G5YIEBUTEemIe6OhVnSywA" base_BehavioralFeature="_G5WS4BUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_G7EKIBUTEemIe6OhVnSywA" base_BehavioralFeature="_G7CU8BUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_G7KQwBUTEemIe6OhVnSywA" base_BehavioralFeature="_G7IbkBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_G753oBUTEemIe6OhVnSywA" base_BehavioralFeature="_G74CcBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_G8sh0BUTEemIe6OhVnSywA" base_BehavioralFeature="_G8qFkBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_G-w-YBUTEemIe6OhVnSywA" base_BehavioralFeature="_G-vJMhUTEemIe6OhVnSywA"/>
  <PapyrusJava:External xmi:id="_HCeZsBUTEemIe6OhVnSywA" name="ClassNotFoundException" base_Classifier="_HCckgRUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_HHRaIBUTEemIe6OhVnSywA" base_BehavioralFeature="_HHO94BUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_HHmxUBUTEemIe6OhVnSywA" base_BehavioralFeature="_HHk8IBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_HIUjABUTEemIe6OhVnSywA" base_BehavioralFeature="_HISt1BUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_HKK9IBUTEemIe6OhVnSywA" base_BehavioralFeature="_HKJH8hUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_HKOngBUTEemIe6OhVnSywA" base_BehavioralFeature="_HKMyUBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_HKcp8BUTEemIe6OhVnSywA" base_BehavioralFeature="_HKa0wBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_HKiJgBUTEemIe6OhVnSywA" base_BehavioralFeature="_HKgUUBUTEemIe6OhVnSywA"/>
  <PapyrusJava:External xmi:id="_HLqK4BUTEemIe6OhVnSywA" name="db.Classes.Lab" base_Classifier="_EPTugBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_HLxfoBUTEemIe6OhVnSywA" base_BehavioralFeature="_HLvqcBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_HMX8kBUTEemIe6OhVnSywA" base_BehavioralFeature="_HMWHYBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_HM-ZgBUTEemIe6OhVnSywA" base_BehavioralFeature="_HM9LYBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_HNEgIBUTEemIe6OhVnSywA" base_BehavioralFeature="_HNBc0RUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_HOJeMBUTEemIe6OhVnSywA" base_BehavioralFeature="_HOIQEhUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_HQF-8BUTEemIe6OhVnSywA" base_BehavioralFeature="_HQEJwBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_HRr6YBUTEemIe6OhVnSywA" base_BehavioralFeature="_HRqsQhUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_HSlSQBUTEemIe6OhVnSywA" base_BehavioralFeature="_HSi2ABUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_HTt6sBUTEemIe6OhVnSywA" base_BehavioralFeature="_HTsskBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_HUYpEBUTEemIe6OhVnSywA" base_BehavioralFeature="_HUXa8BUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_HVQy0BUTEemIe6OhVnSywA" base_BehavioralFeature="_HVO9oBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_HWuLYBUTEemIe6OhVnSywA" base_BehavioralFeature="_HWsWMBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_HX-voBUTEemIe6OhVnSywA" base_BehavioralFeature="_HX9hgBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_HYUG0BUTEemIe6OhVnSywA" base_BehavioralFeature="_HYS4sRUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_HYoP4BUTEemIe6OhVnSywA" base_BehavioralFeature="_HYmasRUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_HY4HgBUTEemIe6OhVnSywA" base_BehavioralFeature="_HY25YxUTEemIe6OhVnSywA"/>
  <PapyrusJava:External xmi:id="_HZRwIBUTEemIe6OhVnSywA" name="db.Classes.UnfinishedExperiment" base_Classifier="_EBAMwBUTEemIe6OhVnSywA"/>
  <PapyrusJava:External xmi:id="_HeN6gBUTEemIe6OhVnSywA" name="db.Classes.Marker" base_Classifier="_EQG_wBUTEemIe6OhVnSywA"/>
  <PapyrusJava:External xmi:id="_L_oQMBUTEemIe6OhVnSywA" name="PlugInFrame" base_Classifier="_L_nCEBUTEemIe6OhVnSywA"/>
  <PapyrusJava:External xmi:id="_L_qscBUTEemIe6OhVnSywA" name="ActionListener" base_Classifier="_L_peUBUTEemIe6OhVnSywA"/>
  <PapyrusJava:External xmi:id="_L_tvwBUTEemIe6OhVnSywA" name="ItemListener" base_Classifier="_L_r6kBUTEemIe6OhVnSywA"/>
  <PapyrusJava:External xmi:id="_L_wzEBUTEemIe6OhVnSywA" name="MouseListener" base_Classifier="_L_vk8BUTEemIe6OhVnSywA"/>
  <PapyrusJava:External xmi:id="_L_zPUBUTEemIe6OhVnSywA" name="MouseWheelListener" base_Classifier="_L_yBMBUTEemIe6OhVnSywA"/>
  <PapyrusJava:External xmi:id="_MAX3EBUTEemIe6OhVnSywA" name="Panel" base_Classifier="_MAWB4BUTEemIe6OhVnSywA"/>
  <PapyrusJava:External xmi:id="_MAa6YBUTEemIe6OhVnSywA" name="Frame" base_Classifier="_MAZFMBUTEemIe6OhVnSywA"/>
  <PapyrusJava:External xmi:id="_MAgZ8BUTEemIe6OhVnSywA" name="Hashtable" base_Classifier="_MAekwBUTEemIe6OhVnSywA"/>
  <PapyrusJava:External xmi:id="_MAjdQBUTEemIe6OhVnSywA" name="PopupMenu" base_Classifier="_MAhoERUTEemIe6OhVnSywA"/>
  <PapyrusJava:External xmi:id="_MAlScBUTEemIe6OhVnSywA" name="Button" base_Classifier="_MAjdQhUTEemIe6OhVnSywA"/>
  <PapyrusJava:External xmi:id="_MAnusBUTEemIe6OhVnSywA" name="Checkbox" base_Classifier="_MAmgkBUTEemIe6OhVnSywA"/>
  <PapyrusJava:External xmi:id="_MAsnMBUTEemIe6OhVnSywA" name="Color" base_Classifier="_MAqyABUTEemIe6OhVnSywA"/>
  <PapyrusJava:External xmi:id="_MAucYBUTEemIe6OhVnSywA" name="ResultsTable" base_Classifier="_MAtORBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_MAw4oBUTEemIe6OhVnSywA" base_BehavioralFeature="_MAvDcRUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_MAyt0BUTEemIe6OhVnSywA" base_BehavioralFeature="_MAxfsBUTEemIe6OhVnSywA"/>
  <PapyrusJava:External xmi:id="_MA4NYBUTEemIe6OhVnSywA" name="ActionEvent" base_Classifier="_MA1xIhUTEemIe6OhVnSywA"/>
  <PapyrusJava:External xmi:id="_MA6poBUTEemIe6OhVnSywA" name="ItemEvent" base_Classifier="_MA5bgBUTEemIe6OhVnSywA"/>
  <PapyrusJava:External xmi:id="_MA9s8BUTEemIe6OhVnSywA" name="Roi" base_Classifier="_MA8e0BUTEemIe6OhVnSywA"/>
  <PapyrusJava:External xmi:id="_MBEaoBUTEemIe6OhVnSywA" name="ImagePlus" base_Classifier="_MBDzkBUTEemIe6OhVnSywA"/>
  <PapyrusJava:External xmi:id="_MCq9IBUTEemIe6OhVnSywA" name="ImageProcessor" base_Classifier="_MCpH8BUTEemIe6OhVnSywA"/>
  <PapyrusJava:External xmi:id="_MDSBIBUTEemIe6OhVnSywA" name="GenericDialog" base_Classifier="_MDQL8BUTEemIe6OhVnSywA"/>
  <PapyrusJava:External xmi:id="_MDdAQBUTEemIe6OhVnSywA" name="WindowEvent" base_Classifier="_MDbLEhUTEemIe6OhVnSywA"/>
  <PapyrusJava:External xmi:id="_MD8vgBUTEemIe6OhVnSywA" name="MouseEvent" base_Classifier="_MD66URUTEemIe6OhVnSywA"/>
  <PapyrusJava:External xmi:id="_MEAZ4BUTEemIe6OhVnSywA" name="MouseWheelEvent" base_Classifier="_MD-ksBUTEemIe6OhVnSywA"/>
  <PapyrusJava:External xmi:id="_MEFSYBUTEemIe6OhVnSywA" name="Overlay" base_Classifier="_MEEEQRUTEemIe6OhVnSywA"/>
  <PapyrusJava:External xmi:id="_MEb3sBUTEemIe6OhVnSywA" name="DialogListener" base_Classifier="_MEaCgBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_ME4joBUTEemIe6OhVnSywA" base_BehavioralFeature="_ME3VgRUTEemIe6OhVnSywA"/>
  <PapyrusJava:External xmi:id="_MFaIEBUTEemIe6OhVnSywA" name="Line" base_Classifier="_MFY58BUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_MGnpABUTEemIe6OhVnSywA" base_BehavioralFeature="_MGma4BUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_MGrTYBUTEemIe6OhVnSywA" base_BehavioralFeature="_MGqFQRUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_MG584BUTEemIe6OhVnSywA" base_BehavioralFeature="_MG4uwRUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_MHkrQBUTEemIe6OhVnSywA" base_BehavioralFeature="_MHjdIBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_MIIE4BUTEemIe6OhVnSywA" base_BehavioralFeature="_MIHd0BUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_MI0BYBUTEemIe6OhVnSywA" base_BehavioralFeature="_MIyzQBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_MJNqABUTEemIe6OhVnSywA" base_BehavioralFeature="_MJMb4RUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_MJ_GEBUTEemIe6OhVnSywA" base_BehavioralFeature="_MJ-fABUTEemIe6OhVnSywA"/>
  <PapyrusJava:External xmi:id="_MKNIgBUTEemIe6OhVnSywA" name="ClassNotFoundException" base_Classifier="_MKLTUBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_MMVPcBUTEemIe6OhVnSywA" base_BehavioralFeature="_MMUBUBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_MMlHEBUTEemIe6OhVnSywA" base_BehavioralFeature="_MMjR4BUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_MMoxcBUTEemIe6OhVnSywA" base_BehavioralFeature="_MMm8QRUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_MMr0wBUTEemIe6OhVnSywA" base_BehavioralFeature="_MMqmoxUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_MQgk0BUTEemIe6OhVnSywA" base_BehavioralFeature="_MQfWsBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_MQmEYBUTEemIe6OhVnSywA" base_BehavioralFeature="_MQk2QBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_MQrj8BUTEemIe6OhVnSywA" base_BehavioralFeature="_MQpuwBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_MWAI0BUTEemIe6OhVnSywA" base_BehavioralFeature="_MV-6sBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_MWVgABUTEemIe6OhVnSywA" base_BehavioralFeature="_MWU48BUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_MWZKYBUTEemIe6OhVnSywA" base_BehavioralFeature="_MWX8QhUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_MWnM0BUTEemIe6OhVnSywA" base_BehavioralFeature="_MWmlwBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_MXD4wBUTEemIe6OhVnSywA" base_BehavioralFeature="_MXCqoBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_MYHosBUTEemIe6OhVnSywA" base_BehavioralFeature="_MYGakBUTEemIe6OhVnSywA"/>
  <PapyrusJava:External xmi:id="_MaxUEBUTEemIe6OhVnSywA" name="BandOperation" base_Classifier="_MawF8RUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_Ma0-cBUTEemIe6OhVnSywA" base_BehavioralFeature="_MazwVBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_Ma2zoBUTEemIe6OhVnSywA" base_BehavioralFeature="_Ma1lgRUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_Ma5P4BUTEemIe6OhVnSywA" base_BehavioralFeature="_Ma4BwBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_MfRZkBUTEemIe6OhVnSywA" base_BehavioralFeature="_MfQygBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_MfuFgBUTEemIe6OhVnSywA" base_BehavioralFeature="_Mfs3YBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_MgYM0BUTEemIe6OhVnSywA" base_BehavioralFeature="_MgW-sBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_MhSLwBUTEemIe6OhVnSywA" base_BehavioralFeature="_MhRksRUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_MhV2IBUTEemIe6OhVnSywA" base_BehavioralFeature="_MhVPEBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_Mh86IBUTEemIe6OhVnSywA" base_BehavioralFeature="_Mh7E8BUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_MiCZsBUTEemIe6OhVnSywA" base_BehavioralFeature="_MiAkgBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_Mkt6QBUTEemIe6OhVnSywA" base_BehavioralFeature="_MktTMBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_MkxkoBUTEemIe6OhVnSywA" base_BehavioralFeature="_Mkw9kBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_MmD-EBUTEemIe6OhVnSywA" base_BehavioralFeature="_MmCI4BUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_MmI2kBUTEemIe6OhVnSywA" base_BehavioralFeature="_MmHocBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_MnQ38BUTEemIe6OhVnSywA" base_BehavioralFeature="_MnPp0BUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_MnW-kBUTEemIe6OhVnSywA" base_BehavioralFeature="_MnVwcBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_MoF-YBUTEemIe6OhVnSywA" base_BehavioralFeature="_MoEwQBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_MoK24BUTEemIe6OhVnSywA" base_BehavioralFeature="_MoJowBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_MpEOwBUTEemIe6OhVnSywA" base_BehavioralFeature="_MpDAoRUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_MpGD8BUTEemIe6OhVnSywA" base_BehavioralFeature="_MpE10hUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_MrepkBUTEemIe6OhVnSywA" base_BehavioralFeature="_MreCgRUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_MrgewBUTEemIe6OhVnSywA" base_BehavioralFeature="_MrfQohUTEemIe6OhVnSywA"/>
  <PapyrusJava:External xmi:id="_MrsE8BUTEemIe6OhVnSywA" name="db.Interface.Main" base_Classifier="_Gul0YBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_Mrt6IBUTEemIe6OhVnSywA" base_BehavioralFeature="_MrssAxUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_Mr9xwBUTEemIe6OhVnSywA" base_BehavioralFeature="_Mr9KsBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_Mr_m8BUTEemIe6OhVnSywA" base_BehavioralFeature="_Mr-Y0hUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_Msk1wBUTEemIe6OhVnSywA" base_BehavioralFeature="_MsjnohUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_Msmq8BUTEemIe6OhVnSywA" base_BehavioralFeature="_Mslc0RUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_Ms_sgBUTEemIe6OhVnSywA" base_BehavioralFeature="_Ms-eYBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_MtCv0BUTEemIe6OhVnSywA" base_BehavioralFeature="_MtA6oBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_MtolsBUTEemIe6OhVnSywA" base_BehavioralFeature="_MtnXkhUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_Mtqa4BUTEemIe6OhVnSywA" base_BehavioralFeature="_Mtpz0BUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_MupSUBUTEemIe6OhVnSywA" base_BehavioralFeature="_MuoEMBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_MurHgBUTEemIe6OhVnSywA" base_BehavioralFeature="_Mup5YhUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_Mvow0BUTEemIe6OhVnSywA" base_BehavioralFeature="_MvnisRUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_Mvx6wBUTEemIe6OhVnSywA" base_BehavioralFeature="_MvxTshUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_Mv4ocBUTEemIe6OhVnSywA" base_BehavioralFeature="_Mv4BYBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_MwAkQBUTEemIe6OhVnSywA" base_BehavioralFeature="_Mv_9MBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_MwfscBUTEemIe6OhVnSywA" base_BehavioralFeature="_MwfFYBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_MwynYBUTEemIe6OhVnSywA" base_BehavioralFeature="_MwxZRRUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_MxB38BUTEemIe6OhVnSywA" base_BehavioralFeature="_MxAp0BUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_MxOFMBUTEemIe6OhVnSywA" base_BehavioralFeature="_MxNeIBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_Mx1wQBUTEemIe6OhVnSywA" base_BehavioralFeature="_Mx0iIBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_MyIEIBUTEemIe6OhVnSywA" base_BehavioralFeature="_MyG2ABUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_MyWtoBUTEemIe6OhVnSywA" base_BehavioralFeature="_MyWGkBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_MysE0BUTEemIe6OhVnSywA" base_BehavioralFeature="_Myq2sBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_My4SEBUTEemIe6OhVnSywA" base_BehavioralFeature="_My3D8xUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_MzFGYBUTEemIe6OhVnSywA" base_BehavioralFeature="_MzEfUBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_MzUW8BUTEemIe6OhVnSywA" base_BehavioralFeature="_MzTI0BUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_M0CIoBUTEemIe6OhVnSywA" base_BehavioralFeature="_M0ATcBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_M0Ek4BUTEemIe6OhVnSywA" base_BehavioralFeature="_M0DWwhUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_M2HzUBUTEemIe6OhVnSywA" base_BehavioralFeature="_M2HMQBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_M2LdsBUTEemIe6OhVnSywA" base_BehavioralFeature="_M2K2oBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_M3K8MBUTEemIe6OhVnSywA" base_BehavioralFeature="_M3JuERUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_M3NYcBUTEemIe6OhVnSywA" base_BehavioralFeature="_M3LjQBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_M3YXkBUTEemIe6OhVnSywA" base_BehavioralFeature="_M3XJcxUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_M3fsUBUTEemIe6OhVnSywA" base_BehavioralFeature="_M3fFRRUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_M3hhgBUTEemIe6OhVnSywA" base_BehavioralFeature="_M3gTYhUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_OxGSQBUTEemIe6OhVnSywA" base_BehavioralFeature="_OxFEIBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_OxdeoBUTEemIe6OhVnSywA" base_BehavioralFeature="_Oxc3kBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_Oxq6ABUTEemIe6OhVnSywA" base_BehavioralFeature="_OxpE0BUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_OygAcBUTEemIe6OhVnSywA" base_BehavioralFeature="_OyfZYBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_OyqYgBUTEemIe6OhVnSywA" base_BehavioralFeature="_OypKYRUTEemIe6OhVnSywA"/>
  <PapyrusJava:External xmi:id="_Oy_vsBUTEemIe6OhVnSywA" name="ij.workspace.GelJ.Menu" base_Classifier="_MEzrIBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_OzCL8BUTEemIe6OhVnSywA" base_BehavioralFeature="_OzA90BUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_OzrsMBUTEemIe6OhVnSywA" base_BehavioralFeature="_Ozp3ABUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_O09ekBUTEemIe6OhVnSywA" base_BehavioralFeature="_O08QcRUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_O1hfQBUTEemIe6OhVnSywA" base_BehavioralFeature="_O1g4MBUTEemIe6OhVnSywA"/>
  <PapyrusJava:External xmi:id="_O122cBUTEemIe6OhVnSywA" name="ij.workspace.GelJ.Lane" base_Classifier="_MGiwgRUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_O2JxYBUTEemIe6OhVnSywA" base_BehavioralFeature="_O2IjQhUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_O2UwgBUTEemIe6OhVnSywA" base_BehavioralFeature="_O2UJcBUTEemIe6OhVnSywA"/>
  <PapyrusJava:External xmi:id="_O2Xz0BUTEemIe6OhVnSywA" name="ClassNotFoundException" base_Classifier="_O2XMwBUTEemIe6OhVnSywA"/>
  <PapyrusJava:External xmi:id="_O2rV0BUTEemIe6OhVnSywA" name="ij.workspace.GelJ.Band" base_Classifier="_MJxqsxUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_O2yDgBUTEemIe6OhVnSywA" base_BehavioralFeature="_O2xccBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_O25_UBUTEemIe6OhVnSywA" base_BehavioralFeature="_O24xMRUTEemIe6OhVnSywA"/>
  <PapyrusJava:External xmi:id="_O4ON8BUTEemIe6OhVnSywA" name="ij.workspace.GelJ.Assistant4.Step3_3" base_Classifier="_Mhu3sBUTEemIe6OhVnSywA"/>
  <PapyrusJava:External xmi:id="_O4UUkBUTEemIe6OhVnSywA" name="ij.workspace.GelJ.Assistant4.Image_Assistant" base_Classifier="_MhQ9oRUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_O4X-8BUTEemIe6OhVnSywA" base_BehavioralFeature="_O4Ww0BUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_O4cQYBUTEemIe6OhVnSywA" base_BehavioralFeature="_O4bpUBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_O4kMMBUTEemIe6OhVnSywA" base_BehavioralFeature="_O4i-EBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_O4sIABUTEemIe6OhVnSywA" base_BehavioralFeature="_O4q54BUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_O4zcwBUTEemIe6OhVnSywA" base_BehavioralFeature="_O4y1sBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_O46KcBUTEemIe6OhVnSywA" base_BehavioralFeature="_O45jYBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_O5RW0BUTEemIe6OhVnSywA" base_BehavioralFeature="_O5QvwBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_O5gAUBUTEemIe6OhVnSywA" base_BehavioralFeature="_O5eyMBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_O6mMgBUTEemIe6OhVnSywA" base_BehavioralFeature="_O6k-YBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_Q9WHYBUTEemIe6OhVnSywA" base_BehavioralFeature="_Q9U5QhUTEemIe6OhVnSywA"/>
  <PapyrusJava:External xmi:id="_Q9eDMBUTEemIe6OhVnSywA" name="K" base_Classifier="_Q9c1EBUTEemIe6OhVnSywA"/>
  <PapyrusJava:External xmi:id="_Q9iUoBUTEemIe6OhVnSywA" name="V" base_Classifier="_Q9htkBUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_Q9nNIBUTEemIe6OhVnSywA" base_BehavioralFeature="_Q9l_ABUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_Q-uAYBUTEemIe6OhVnSywA" base_BehavioralFeature="_Q-syQBUTEemIe6OhVnSywA"/>
  <PapyrusJava:External xmi:id="_Q_SBEBUTEemIe6OhVnSywA" name="Node" base_Classifier="_Q_Qy8BUTEemIe6OhVnSywA"/>
  <standard:Create xmi:id="_Q_UdUBUTEemIe6OhVnSywA" base_BehavioralFeature="_Q_TPMBUTEemIe6OhVnSywA"/>
  <PapyrusJava:External xmi:id="_Q_h4sBUTEemIe6OhVnSywA" name="Node" base_Classifier="_Q_gqkxUTEemIe6OhVnSywA"/>
</xmi:XMI>
