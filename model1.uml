<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:PapyrusJava="http://www.eclipse.org/papyrus/PapyrusJava/1" xmlns:UML2PROV_profiles="http:///schemas/UML2PROV_profiles/_GC8RcGiPEeiklvJUJNd-Aw/24" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:standard="http://www.eclipse.org/uml2/5.0.0/UML/Profile/Standard" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UML2PROV_profiles/_GC8RcGiPEeiklvJUJNd-Aw/24 uml2prov.profile.uml#_GDAi4GiPEeiklvJUJNd-Aw">
  <uml:Model xmi:id="_UWgVkGWNEei0cbjpkrd07g" name="RootElement">
    <packagedElement xmi:type="uml:Package" xmi:id="_axgqIGWNEei0cbjpkrd07g" name="GelJ_TSE">
      <packagedElement xmi:type="uml:Package" xmi:id="_a0aNIGWNEei0cbjpkrd07g" name="ij">
        <packagedElement xmi:type="uml:Package" xmi:id="_a0bbQGWNEei0cbjpkrd07g" name="workspace">
          <packagedElement xmi:type="uml:Package" xmi:id="_a0bbQWWNEei0cbjpkrd07g" name="GelJ">
            <packagedElement xmi:type="uml:Package" xmi:id="_a0cCUGWNEei0cbjpkrd07g" name="Assistant4">
              <packagedElement xmi:type="uml:Class" xmi:id="_a0fssGWNEei0cbjpkrd07g" name="Step4_3" visibility="public" classifierBehavior="_WHVfcI5dEeie3Y8fpsu39w">
                <generalization xmi:type="uml:Generalization" xmi:id="_JKAWiG4VEei47fqiwvb5mw" general="_a0hh4GWNEei0cbjpkrd07g"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_a5gIgGWNEei0cbjpkrd07g" name="imp" visibility="private" type="_a5Za0GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_a5jy4GWNEei0cbjpkrd07g" name="ia" visibility="private" type="_a5ikwGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_a5uK8GWNEei0cbjpkrd07g" name="bm" visibility="private" type="_a5orYGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_a5wnMGWNEei0cbjpkrd07g" name="darkbg" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_a6EJMGWNEei0cbjpkrd07g" name="Step4_3" specification="_a504oGWNEei0cbjpkrd07g">
                  <language>JAVA</language>
                  <body>&#xD;
    super();&#xD;
    initComponents();&#xD;
    this.imp = imp;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_a6XrMGWNEei0cbjpkrd07g" name="Step4_3" specification="_a6JBsGWNEei0cbjpkrd07g">
                  <language>JAVA</language>
                  <body>&#xD;
    super();&#xD;
    initComponents();&#xD;
    this.imp = imp;&#xD;
    this.ia = aThis;&#xD;
    this.darkbg = darkbg;&#xD;
    if (bm == null) {&#xD;
        this.bm = new BandManager(ia.m);&#xD;
        this.bm.setbgcheckboxstate(darkbg);&#xD;
        //        bm.auto_detect();&#xD;
        this.bm.setVisible(false);&#xD;
    } else {&#xD;
        this.bm = bm;&#xD;
    }&#xD;
    IJ.setTool(&quot;point&quot;);&#xD;
    this.bm.updateShowAll();&#xD;
    Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();&#xD;
    double width = screenSize.getWidth();&#xD;
    setVisible(true);&#xD;
    setLocation((int) width - 515, 0);&#xD;
    imp.getWindow().setAlwaysOnTop(true);&#xD;
    setAlwaysOnTop(true);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_a6cjsGWNEei0cbjpkrd07g" name="getBm">
                  <language>JAVA</language>
                  <body>&#xD;
    return bm;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_a6g1IGWNEei0cbjpkrd07g" name="initComponents">
                  <language>JAVA</language>
                  <body>&#xD;
    buttonGroup1 = new javax.swing.ButtonGroup();&#xD;
    jPanel4 = new javax.swing.JPanel();&#xD;
    jButton2 = new javax.swing.JButton();&#xD;
    jbBack = new javax.swing.JButton();&#xD;
    jPanel5 = new javax.swing.JPanel();&#xD;
    jLabel1 = new javax.swing.JLabel();&#xD;
    jLabel6 = new javax.swing.JLabel();&#xD;
    jLabel8 = new javax.swing.JLabel();&#xD;
    jLabel7 = new javax.swing.JLabel();&#xD;
    jLabel2 = new javax.swing.JLabel();&#xD;
    jLabel3 = new javax.swing.JLabel();&#xD;
    jLabel4 = new javax.swing.JLabel();&#xD;
    jPanel1 = new javax.swing.JPanel();&#xD;
    jPanel2 = new javax.swing.JPanel();&#xD;
    jScrollPane1 = new javax.swing.JScrollPane();&#xD;
    jTextArea1 = new javax.swing.JTextArea();&#xD;
    jPanel3 = new javax.swing.JPanel();&#xD;
    jPanel7 = new javax.swing.JPanel();&#xD;
    jToolBar1 = new javax.swing.JToolBar();&#xD;
    jButton4 = new javax.swing.JButton();&#xD;
    jButton5 = new javax.swing.JButton();&#xD;
    jButton7 = new javax.swing.JButton();&#xD;
    jButton6 = new javax.swing.JButton();&#xD;
    jPanel6 = new javax.swing.JPanel();&#xD;
    jButton1 = new javax.swing.JButton();&#xD;
    jButton3 = new javax.swing.JButton();&#xD;
    jButton8 = new javax.swing.JButton();&#xD;
    jButton9 = new javax.swing.JButton();&#xD;
    jLabel5 = new javax.swing.JLabel();&#xD;
    jComboBox1 = new javax.swing.JComboBox();&#xD;
    jCheckBox1 = new javax.swing.JCheckBox();&#xD;
    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);&#xD;
    setTitle(&quot;Image analysis&quot;);&#xD;
    setResizable(false);&#xD;
    addWindowListener(new java.awt.event.WindowAdapter() {&#xD;
&#xD;
        public void windowClosed(java.awt.event.WindowEvent evt) {&#xD;
            formWindowClosed(evt);&#xD;
        }&#xD;
    });&#xD;
    jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());&#xD;
    jButton2.setText(&quot;Finish&quot;);&#xD;
    jButton2.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton2ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jbBack.setText(&quot;Cancel&quot;);&#xD;
    jbBack.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbBackActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);&#xD;
    jPanel4.setLayout(jPanel4Layout);&#xD;
    jPanel4Layout.setHorizontalGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addComponent(jbBack).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButton2)));&#xD;
    jPanel4Layout.setVerticalGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jButton2).addComponent(jbBack))));&#xD;
    jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Steps&quot;)));&#xD;
    jPanel5.setForeground(new java.awt.Color(0, 17, 255));&#xD;
    jLabel1.setText(&quot;Step 1. Image preprocessing&quot;);&#xD;
    jLabel6.setText(&quot;Step 2. Lane detection&quot;);&#xD;
    jLabel8.setText(&quot;Step 3. Normalisation&quot;);&#xD;
    jLabel7.setText(&quot;Step 4. Band detection&quot;);&#xD;
    jLabel2.setText(&quot;4.1. Global threshold&quot;);&#xD;
    jLabel3.setText(&quot;4.2. Lane threshold&quot;);&#xD;
    jLabel4.setForeground(new java.awt.Color(0, 15, 255));&#xD;
    jLabel4.setText(&quot;4.3. Band picking&quot;);&#xD;
    javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);&#xD;
    jPanel5.setLayout(jPanel5Layout);&#xD;
    jPanel5Layout.setHorizontalGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel5Layout.createSequentialGroup().addContainerGap().addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel1).addComponent(jLabel6).addComponent(jLabel7).addComponent(jLabel8).addGroup(jPanel5Layout.createSequentialGroup().addGap(12, 12, 12).addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel3).addComponent(jLabel2).addComponent(jLabel4)))).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jPanel5Layout.setVerticalGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel5Layout.createSequentialGroup().addContainerGap().addComponent(jLabel1).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel6).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel8).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel7).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel2).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel3).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel4).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Help&quot;));&#xD;
    jTextArea1.setEditable(false);&#xD;
    jTextArea1.setColumns(20);&#xD;
    jTextArea1.setRows(5);&#xD;
    jTextArea1.setText(&quot;In this step, you can manually\npick the bands of the non-marker\nlanes of the image. \nShortcuts are indicated between\nbrackets. &quot;);&#xD;
    jScrollPane1.setViewportView(jTextArea1);&#xD;
    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);&#xD;
    jPanel2.setLayout(jPanel2Layout);&#xD;
    jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE));&#xD;
    jPanel2Layout.setVerticalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE));&#xD;
    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);&#xD;
    jPanel1.setLayout(jPanel1Layout);&#xD;
    jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));&#xD;
    jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup().addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)));&#xD;
    javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);&#xD;
    jPanel3.setLayout(jPanel3Layout);&#xD;
    jPanel3Layout.setHorizontalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 0, Short.MAX_VALUE));&#xD;
    jPanel3Layout.setVerticalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 353, Short.MAX_VALUE));&#xD;
    jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Image tools&quot;));&#xD;
    jToolBar1.setRollover(true);&#xD;
    // NOI18N&#xD;
    jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/GelJImages/point.png&quot;)));&#xD;
    jButton4.setToolTipText(&quot;Point tool (use it to select bands)&quot;);&#xD;
    jButton4.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton4ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar1.add(jButton4);&#xD;
    // NOI18N&#xD;
    jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/images/zoom_in.png&quot;)));&#xD;
    jButton5.setToolTipText(&quot;Zoom In&quot;);&#xD;
    jButton5.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton5ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar1.add(jButton5);&#xD;
    // NOI18N&#xD;
    jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/images/zoom_out.png&quot;)));&#xD;
    jButton7.setToolTipText(&quot;Zoom out&quot;);&#xD;
    jButton7.setFocusable(false);&#xD;
    jButton7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);&#xD;
    jButton7.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);&#xD;
    jButton7.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton7ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar1.add(jButton7);&#xD;
    // NOI18N&#xD;
    jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/images/hand.png&quot;)));&#xD;
    jButton6.setToolTipText(&quot;Hand tool&quot;);&#xD;
    jButton6.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton6ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar1.add(jButton6);&#xD;
    javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);&#xD;
    jPanel7.setLayout(jPanel7Layout);&#xD;
    jPanel7Layout.setHorizontalGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));&#xD;
    jPanel7Layout.setVerticalGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel7Layout.createSequentialGroup().addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Band tools&quot;));&#xD;
    jButton1.setText(&quot;Add band [a]&quot;);&#xD;
    jButton1.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton1ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jButton3.setText(&quot;Delete band [del]&quot;);&#xD;
    jButton3.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton3ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jButton8.setText(&quot;Undo [Ctrl + z]&quot;);&#xD;
    jButton8.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton8ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jButton9.setText(&quot;Redo [r]&quot;);&#xD;
    jButton9.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton9ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jLabel5.setText(&quot;Colour:&quot;);&#xD;
    jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { &quot;blue&quot;, &quot;red&quot;, &quot;green&quot;, &quot;magenta&quot;, &quot;cyan&quot;, &quot;yellow&quot;, &quot;orange&quot; }));&#xD;
    jComboBox1.addItemListener(new java.awt.event.ItemListener() {&#xD;
&#xD;
        public void itemStateChanged(java.awt.event.ItemEvent evt) {&#xD;
            jComboBox1ItemStateChanged(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);&#xD;
    jPanel6.setLayout(jPanel6Layout);&#xD;
    jPanel6Layout.setHorizontalGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(jPanel6Layout.createSequentialGroup().addComponent(jButton8).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButton9, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)).addGroup(jPanel6Layout.createSequentialGroup().addComponent(jLabel5).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jPanel6Layout.setVerticalGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel6Layout.createSequentialGroup().addComponent(jButton1).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButton3).addGap(8, 8, 8).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel5)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jButton8).addComponent(jButton9)).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jCheckBox1.setText(&quot;Show histogram&quot;);&#xD;
    jCheckBox1.addChangeListener(new javax.swing.event.ChangeListener() {&#xD;
&#xD;
        public void stateChanged(javax.swing.event.ChangeEvent evt) {&#xD;
            jCheckBox1StateChanged(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());&#xD;
    getContentPane().setLayout(layout);&#xD;
    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(layout.createSequentialGroup().addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false).addComponent(jCheckBox1).addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))));&#xD;
    layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addGroup(layout.createSequentialGroup().addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jCheckBox1))).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)));&#xD;
    pack();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_a6r0QGWNEei0cbjpkrd07g" name="formWindowClosed">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_formWindowClosed&#xD;
    try {&#xD;
        if (close) {&#xD;
            bm.close();&#xD;
            ia.saveUnfinishedExperiment(this, 8);&#xD;
            close = false;&#xD;
        } else {&#xD;
        }&#xD;
    } catch (IOException ex) {&#xD;
        Logger.getLogger(Step4_3.class.getName()).log(Level.SEVERE, null, ex);&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_a60-MGWNEei0cbjpkrd07g" name="jbBackActionPerformed" specification="_a6x64GWNEei0cbjpkrd07g">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jbBackActionPerformed&#xD;
    close = true;&#xD;
    this.dispose();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_a67E0GWNEei0cbjpkrd07g" name="jButton2ActionPerformed" specification="_a64BgGWNEei0cbjpkrd07g">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton2ActionPerformed&#xD;
    close = false;&#xD;
    Lane[] stdlanes = getstandardlanes(ia.m.finallanes);&#xD;
    bm.close();&#xD;
    this.dispose();&#xD;
    try {&#xD;
        ia.computemws();&#xD;
    } catch (UnsupportedEncodingException ex) {&#xD;
        Logger.getLogger(Step4_3.class.getName()).log(Level.SEVERE, null, ex);&#xD;
    } catch (IOException ex) {&#xD;
        Logger.getLogger(Step4_3.class.getName()).log(Level.SEVERE, null, ex);&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_a7BygGWNEei0cbjpkrd07g" name="jButton1ActionPerformed" specification="_a6-vMGWNEei0cbjpkrd07g">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton1ActionPerformed&#xD;
    this.setAlwaysOnTop(false);&#xD;
    imp.getWindow().setAlwaysOnTop(false);&#xD;
    bm.add_band();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_a7GrAGWNEei0cbjpkrd07g" name="jButton3ActionPerformed" specification="_a7EOwGWNEei0cbjpkrd07g">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton3ActionPerformed&#xD;
    this.setAlwaysOnTop(false);&#xD;
    imp.getWindow().setAlwaysOnTop(false);&#xD;
    bm.delete(false);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_a7K8cGWNEei0cbjpkrd07g" name="jButton4ActionPerformed">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton4ActionPerformed&#xD;
    IJ.setTool(&quot;point&quot;);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_a7P08GWNEei0cbjpkrd07g" name="jButton5ActionPerformed">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton5ActionPerformed&#xD;
    IJ.run(&quot;In [+]&quot;, &quot;&quot;);&#xD;
    IJ.setTool(&quot;point&quot;);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_a7VUgGWNEei0cbjpkrd07g" name="jButton6ActionPerformed">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton6ActionPerformed&#xD;
    IJ.setTool(&quot;hand&quot;);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_a7a0EGWNEei0cbjpkrd07g" name="jButton8ActionPerformed">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton8ActionPerformed&#xD;
    this.setAlwaysOnTop(false);&#xD;
    imp.getWindow().setAlwaysOnTop(false);&#xD;
    bm.undo();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_a7fFgGWNEei0cbjpkrd07g" name="jButton9ActionPerformed">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton9ActionPerformed&#xD;
    this.setAlwaysOnTop(false);&#xD;
    imp.getWindow().setAlwaysOnTop(false);&#xD;
    bm.redo();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_a7nBUGWNEei0cbjpkrd07g" name="jCheckBox1StateChanged">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jCheckBox1StateChanged&#xD;
    this.setAlwaysOnTop(false);&#xD;
    imp.getWindow().setAlwaysOnTop(false);&#xD;
    bm.activatehistogramdisplay(jCheckBox1.isSelected());&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_a7uWEGWNEei0cbjpkrd07g" name="jComboBox1ItemStateChanged">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jComboBox1ItemStateChanged&#xD;
    int colour = jComboBox1.getSelectedIndex();&#xD;
    Color c;&#xD;
    switch(colour) {&#xD;
        case BLUE:&#xD;
            c = Color.BLUE;&#xD;
            break;&#xD;
        case RED:&#xD;
            c = Color.RED;&#xD;
            break;&#xD;
        case GREEN:&#xD;
            c = Color.GREEN;&#xD;
            break;&#xD;
        case MAGENTA:&#xD;
            c = Color.MAGENTA;&#xD;
            break;&#xD;
        case CYAN:&#xD;
            c = Color.CYAN;&#xD;
            break;&#xD;
        case YELLOW:&#xD;
            c = Color.YELLOW;&#xD;
            break;&#xD;
        case ORANGE:&#xD;
            c = Color.ORANGE;&#xD;
            break;&#xD;
        default:&#xD;
            c = Color.BLUE;&#xD;
            break;&#xD;
    }&#xD;
    bm.change_colour(c);&#xD;
    bm.showAll(0);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_a7zOkGWNEei0cbjpkrd07g" name="jButton7ActionPerformed">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton7ActionPerformed&#xD;
    IJ.run(&quot;Out [-]&quot;, &quot;&quot;);&#xD;
    IJ.setTool(&quot;point&quot;);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_WHVfcI5dEeie3Y8fpsu39w" name="StateMachine1">
                  <region xmi:type="uml:Region" xmi:id="_W4vHMI5dEeie3Y8fpsu39w" name="Region1">
                    <transition xmi:type="uml:Transition" xmi:id="_dmIzUI5dEeie3Y8fpsu39w" source="_aQDBQI5dEeie3Y8fpsu39w" target="_aAydQI5dEeie3Y8fpsu39w">
                      <trigger xmi:type="uml:Trigger" xmi:id="_osVEoI5dEeie3Y8fpsu39w" event="_olZ9QI5dEeie3Y8fpsu39w"/>
                    </transition>
                    <transition xmi:type="uml:Transition" xmi:id="_eHoW0I5dEeie3Y8fpsu39w" source="_aAydQI5dEeie3Y8fpsu39w" target="_af5bII5dEeie3Y8fpsu39w">
                      <trigger xmi:type="uml:Trigger" xmi:id="_6_PbUI5dEeie3Y8fpsu39w" event="_62GGYI5dEeie3Y8fpsu39w"/>
                    </transition>
                    <transition xmi:type="uml:Transition" xmi:id="_glh8oI5dEeie3Y8fpsu39w" source="_aAydQI5dEeie3Y8fpsu39w" target="_af5bII5dEeie3Y8fpsu39w">
                      <trigger xmi:type="uml:Trigger" xmi:id="_-6YbMI5dEeie3Y8fpsu39w" event="_-zlPoI5dEeie3Y8fpsu39w"/>
                    </transition>
                    <transition xmi:type="uml:Transition" xmi:id="_hBoCwI5dEeie3Y8fpsu39w" source="_af5bII5dEeie3Y8fpsu39w" target="_av2isI5dEeie3Y8fpsu39w">
                      <trigger xmi:type="uml:Trigger" xmi:id="_2PrU4I5dEeie3Y8fpsu39w" event="_2Fh6YI5dEeie3Y8fpsu39w"/>
                    </transition>
                    <transition xmi:type="uml:Transition" xmi:id="_ih8mAI5dEeie3Y8fpsu39w" source="_aAydQI5dEeie3Y8fpsu39w" target="_av2isI5dEeie3Y8fpsu39w">
                      <trigger xmi:type="uml:Trigger" xmi:id="_vRmvgI5dEeie3Y8fpsu39w" event="_vJ5lAI5dEeie3Y8fpsu39w"/>
                    </transition>
                    <transition xmi:type="uml:Transition" xmi:id="_i5XngI5dEeie3Y8fpsu39w" source="_aAydQI5dEeie3Y8fpsu39w" target="_av2isI5dEeie3Y8fpsu39w">
                      <trigger xmi:type="uml:Trigger" xmi:id="_sXz34I5dEeie3Y8fpsu39w" event="_sQrVII5dEeie3Y8fpsu39w"/>
                    </transition>
                    <transition xmi:type="uml:Transition" xmi:id="_j5lHUI5dEeie3Y8fpsu39w" source="_af5bII5dEeie3Y8fpsu39w" target="_av2isI5dEeie3Y8fpsu39w">
                      <trigger xmi:type="uml:Trigger" xmi:id="_y9Qh4I5dEeie3Y8fpsu39w" event="_yy5sAI5dEeie3Y8fpsu39w"/>
                    </transition>
                    <subvertex xmi:type="uml:State" xmi:id="_aAydQI5dEeie3Y8fpsu39w" name="Activated"/>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_aQDBQI5dEeie3Y8fpsu39w" name="Initial1"/>
                    <subvertex xmi:type="uml:State" xmi:id="_af5bII5dEeie3Y8fpsu39w" name="BandsModified"/>
                    <subvertex xmi:type="uml:State" xmi:id="_av2isI5dEeie3Y8fpsu39w" name="Finished"/>
                  </region>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_a504oGWNEei0cbjpkrd07g" name="Step4_3" visibility="public" method="_a6EJMGWNEei0cbjpkrd07g">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_a58NYGWNEei0cbjpkrd07g" name="imp" type="_a5Za0GWNEei0cbjpkrd07g"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_a6JBsGWNEei0cbjpkrd07g" name="Step4_3" visibility="public" method="_a6XrMGWNEei0cbjpkrd07g">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_a6Q9gGWNEei0cbjpkrd07g" name="imp" type="_a5Za0GWNEei0cbjpkrd07g"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_a6SysGWNEei0cbjpkrd07g" name="aThis" type="_a5ikwGWNEei0cbjpkrd07g"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_a6TZwGWNEei0cbjpkrd07g" name="darkbg">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_a6WdEGWNEei0cbjpkrd07g" name="bm" type="_a5orYGWNEei0cbjpkrd07g"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_a6x64GWNEei0cbjpkrd07g" name="jbBackActionPerformed" visibility="private" method="_a60-MGWNEei0cbjpkrd07g">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_a6zwEGWNEei0cbjpkrd07g" name="evt" type="_a6tpcGWNEei0cbjpkrd07g"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_a64BgGWNEei0cbjpkrd07g" name="jButton2ActionPerformed" visibility="private" method="_a67E0GWNEei0cbjpkrd07g">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_a652sGWNEei0cbjpkrd07g" name="evt" type="_a6tpcGWNEei0cbjpkrd07g"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_a6-vMGWNEei0cbjpkrd07g" name="jButton1ActionPerformed" visibility="private" method="_a7BygGWNEei0cbjpkrd07g">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_a7AkYGWNEei0cbjpkrd07g" name="evt" type="_a6tpcGWNEei0cbjpkrd07g"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_a7EOwGWNEei0cbjpkrd07g" name="jButton3ActionPerformed" visibility="private" method="_a7GrAGWNEei0cbjpkrd07g">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_a7Fc4GWNEei0cbjpkrd07g" name="evt" type="_a6tpcGWNEei0cbjpkrd07g"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_a5ikwGWNEei0cbjpkrd07g" name="Image_Assistant" visibility="public">
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bT5lgGWNEei0cbjpkrd07g" name="m" visibility="public" type="_bT17IGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bT_FEGWNEei0cbjpkrd07g" name="geljdb" visibility="public" type="_bT8BwGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bUATMGWNEei0cbjpkrd07g" name="darkbg" visibility="public" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_bUBhUGWNEei0cbjpkrd07g" name="defaultValue">
                    <language>JAVA</language>
                    <body>true</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bUJdIGWNEei0cbjpkrd07g" name="Image_Assistant" specification="_bUCvcGWNEei0cbjpkrd07g">
                  <language>JAVA</language>
                  <body>&#xD;
    this.m = m;&#xD;
    this.geljdb = geljdb;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bUL5YGWNEei0cbjpkrd07g" name="runAssistant" specification="_bUKrQGWNEei0cbjpkrd07g">
                  <language>JAVA</language>
                  <body>&#xD;
    OpenDialog od = new OpenDialog(&quot;Load an image...&quot;);&#xD;
    Opener o = new Opener();&#xD;
    if (od.getPath() != null) {&#xD;
        ImagePlus imp1 = o.openImage(od.getPath());&#xD;
        if (imp1 == null) {&#xD;
            JOptionPane.showMessageDialog(m, &quot;Select a valid image file&quot;, &quot;Error&quot;, JOptionPane.ERROR_MESSAGE);&#xD;
            geljdb.enableall();&#xD;
            return;&#xD;
        }&#xD;
        imp1.show();&#xD;
        IJ.run(imp1, &quot;Scale to Fit&quot;, &quot;&quot;);&#xD;
        imp1.getWindow().setLocked(true);&#xD;
        m.setWindowname(imp1.getTitle());&#xD;
        step1_1 s = new step1_1(imp1, this);&#xD;
        imp1.getWindow().toFront();&#xD;
    } else {&#xD;
        geljdb.enableall();&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bUUcQGWNEei0cbjpkrd07g" name="saveUnfinishedExperiment">
                  <language>JAVA</language>
                  <body>&#xD;
    if (IJ.getImage() != null) {&#xD;
        //            if (step == 8) {&#xD;
        //                IJ.getImage().changes = false;&#xD;
        //                IJ.getImage().close();&#xD;
        //            }&#xD;
        ImagePlus imp1 = IJ.getImage();&#xD;
        int id = lastUnfinishedExperimentid();&#xD;
        Save s = new Save(imp1, m.finallanes, m.getBands(), m.normalisation, m.getInitialoffset(), darkbg, m.getMarkername());&#xD;
        Study study = getStudy(geljdb.studyid);&#xD;
        s.saveunfinishedexperiment(study, id);&#xD;
        int option = JOptionPane.showConfirmDialog(d, &quot;The current analysis is unfinished, &quot; + &quot;do you want to save it for further use?&quot;, &quot;Save&quot;, JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null);&#xD;
        if (option == JOptionPane.YES_OPTION) {&#xD;
            String name = JOptionPane.showInputDialog(&quot;Introduce a name&quot;);&#xD;
            UnfinishedExperiment ue = new UnfinishedExperiment(id, name, step, study);&#xD;
            insertUnfinishedExperiment(ue);&#xD;
        }&#xD;
        //            if (step == 8) {&#xD;
        //                IJ.getImage().changes = false;&#xD;
        //                IJ.getImage().close();&#xD;
        //            }&#xD;
        d.dispose();&#xD;
        imp1.getWindow().close();&#xD;
        geljdb.enableall();&#xD;
        geljdb.toFront();&#xD;
    } else {&#xD;
        d.dispose();&#xD;
        geljdb.enableall();&#xD;
        geljdb.toFront();&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bUYtsGWNEei0cbjpkrd07g" name="saveUnfinishedExperiment">
                  <language>JAVA</language>
                  <body>&#xD;
    if (WindowManager.getCurrentImage() != null) {&#xD;
        //            if (step == 8) {&#xD;
        //                IJ.getImage().changes = false;&#xD;
        //                IJ.getImage().close();&#xD;
        //            }&#xD;
        ImagePlus imp1 = IJ.getImage();&#xD;
        imp1.getWindow().setLocked(false);&#xD;
        imp1.getWindow().toBack();&#xD;
        int id = lastUnfinishedExperimentid();&#xD;
        Save s = new Save(imp1, m.finallanes, m.getBands(), m.normalisation, m.getInitialoffset(), !darkbg, m.getMarkername());&#xD;
        Study study = getStudy(geljdb.studyid);&#xD;
        s.saveunfinishedexperiment(study, id);&#xD;
        int option = JOptionPane.showConfirmDialog(d, &quot;The current analysis is unfinished, &quot; + &quot;do you want to save it for further use?\n &quot; + &quot;(Unfinished experiments can be opened from the menu Tools > Experiments > Unfinished Experiments)&quot;, &quot;Save&quot;, JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null);&#xD;
        if (option == JOptionPane.YES_OPTION) {&#xD;
            String name = JOptionPane.showInputDialog(&quot;Introduce a name&quot;);&#xD;
            UnfinishedExperiment ue = new UnfinishedExperiment(id, name, step, study);&#xD;
            insertUnfinishedExperiment(ue);&#xD;
        }&#xD;
        //            if (step == 8) {&#xD;
        //                IJ.getImage().changes = false;&#xD;
        //                IJ.getImage().close();&#xD;
        //            }&#xD;
        d.dispose();&#xD;
        imp1.getWindow().close();&#xD;
        geljdb.activateemptytoolbar();&#xD;
        geljdb.enableall();&#xD;
        geljdb.toFront();&#xD;
    } else {&#xD;
        d.dispose();&#xD;
        geljdb.activateemptytoolbar();&#xD;
        geljdb.enableall();&#xD;
        geljdb.toFront();&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bUiesGWNEei0cbjpkrd07g" name="finishnormalisation">
                  <language>JAVA</language>
                  <body>&#xD;
    //        computestdlanes(m.finallanes, m.getCalibrationmethod(), m.getInitialoffset());&#xD;
    computestdlanes(m);&#xD;
    ImagePlus imp = IJ.getImage();&#xD;
    String name = imp.getTitle();&#xD;
    imp.getWindow().setLocked(false);&#xD;
    imp.changes = false;&#xD;
    imp.close();&#xD;
    createnewimage();&#xD;
    imp = IJ.getImage();&#xD;
    imp.setTitle(name);&#xD;
    imp.getWindow().setLocked(true);&#xD;
    Step4_1 s41 = new Step4_1(imp, this, darkbg);&#xD;
//        m.setStudyid(geljdb.studyid);&#xD;
//        m.setUser(geljdb.userid);&#xD;
//&#xD;
//        NormaliseManager nm = new NormaliseManager(true);&#xD;
//        nm.delete_without_asking(true);&#xD;
//        nm.dispose();&#xD;
//&#xD;
//        Experiment e = m.storeexperiment();&#xD;
//        ImagePlus imp = IJ.getImage();&#xD;
//        imp.getWindow().setLocked(false);&#xD;
//        imp.changes = false;&#xD;
//        imp.close();&#xD;
//&#xD;
//        NewExperiment ne = new NewExperiment(geljdb, true, e);&#xD;
//        ne.setVisible(true);&#xD;
//&#xD;
//        geljdb.updateexperiments(true, true);&#xD;
//        geljdb.enableall();&#xD;
//&#xD;
//        geljdb.toFront();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bUmwIGWNEei0cbjpkrd07g" name="computemws">
                  <language>JAVA</language>
                  <body>&#xD;
    computemwlanes(m);&#xD;
    m.setStudyid(geljdb.studyid);&#xD;
    m.setUser(geljdb.userid);&#xD;
    //        NormaliseManager nm = new NormaliseManager(true);&#xD;
    //        nm.delete_without_asking(true);&#xD;
    //        nm.dispose();&#xD;
    Experiment e = m.storeexperiment();&#xD;
    ImagePlus imp = IJ.getImage();&#xD;
    imp.getWindow().setLocked(false);&#xD;
    imp.changes = false;&#xD;
    imp.close();&#xD;
    NewExperiment ne = new NewExperiment(geljdb, true, e);&#xD;
    ne.setVisible(true);&#xD;
    geljdb.updateexperiments(true, true);&#xD;
    geljdb.enableall();&#xD;
    geljdb.toFront();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bUpMYGWNEei0cbjpkrd07g" name="createnewimage">
                  <language>JAVA</language>
                  <body>&#xD;
    int w = m.finallanes[0].getImp().getWidth();&#xD;
    int height = m.finallanes[0].getImp().getHeight();&#xD;
    int width = w * m.finallanes.length;&#xD;
    ImagePlus imp = IJ.createImage(&quot;Normalised &quot; + m.getTitle(), &quot;rgb-black&quot;, width, height, 1);&#xD;
    ImageProcessor ip = imp.getProcessor();&#xD;
    for (int i = 0; i &lt; m.finallanes.length; i++) {&#xD;
        ip.insert(m.finallanes[i].getImp().getProcessor(), i * w, 0);&#xD;
    }&#xD;
    if (!darkbg) {&#xD;
        ip.invert();&#xD;
    }&#xD;
    imp.updateAndDraw();&#xD;
    imp.show();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bUsPsGWNEei0cbjpkrd07g" name="recoverstep0">
                  <language>JAVA</language>
                  <body>&#xD;
    imp.getWindow().setLocked(true);&#xD;
    step1_1 s = new step1_1(imp, this);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bUs2wGWNEei0cbjpkrd07g" name="recoverstep1">
                  <language>JAVA</language>
                  <body>&#xD;
    imp.getWindow().setLocked(true);&#xD;
    step1_2 s = new step1_2(imp, this);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bUv6EGWNEei0cbjpkrd07g" name="recoverstep2">
                  <language>JAVA</language>
                  <body>&#xD;
    imp.getWindow().setLocked(true);&#xD;
    step1_3 s = new step1_3(imp, this);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bU0LgGWNEei0cbjpkrd07g" name="recoverstep3">
                  <language>JAVA</language>
                  <body>&#xD;
    imp.getWindow().setLocked(true);&#xD;
    Step1_4 s = new Step1_4(imp, this);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bU314GWNEei0cbjpkrd07g" name="recoverstep4">
                  <language>JAVA</language>
                  <body>&#xD;
    imp.getWindow().setLocked(true);&#xD;
    step2_1 s = new step2_1(imp, this);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bU65MGWNEei0cbjpkrd07g" name="recoverstep5">
                  <language>JAVA</language>
                  <body>&#xD;
    ImageWindow iw = imp.getWindow();&#xD;
    LaneManagerCanvas cc = new LaneManagerCanvas(imp);&#xD;
    ImageWindow iw2 = new ImageWindow(imp, cc);&#xD;
    imp.changes = false;&#xD;
    iw.dispose();&#xD;
    iw2.setLocked(true);&#xD;
    step2_2 s = new step2_2(imp, this, true, null);&#xD;
    s.getLm().auto_detect();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bU98gGWNEei0cbjpkrd07g" name="recoverstep6">
                  <language>JAVA</language>
                  <body>&#xD;
    ImageWindow iw = imp.getWindow();&#xD;
    BandManagerMarkerCanvas cc = new BandManagerMarkerCanvas(imp);&#xD;
    ImageWindow iw2 = new ImageWindow(imp, cc);&#xD;
    iw2.setLocked(true);&#xD;
    iw.dispose();&#xD;
    Step3_1 s = new Step3_1(imp, this, !m.getinvertcolour());&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bVA_0GWNEei0cbjpkrd07g" name="recoverstep6b">
                  <language>JAVA</language>
                  <body>&#xD;
    ImageWindow iw = imp.getWindow();&#xD;
    BandManagerCanvas cc = new BandManagerCanvas(imp);&#xD;
    ImageWindow iw2 = new ImageWindow(imp, cc);&#xD;
    iw.dispose();&#xD;
    iw2.setLocked(true);&#xD;
    step3_3 s = new step3_3(imp, this, !m.getinvertcolour(), null);&#xD;
    BandManager bm = s.getBm();&#xD;
    bm.delete_without_asking(false);&#xD;
    if (m.finallanes != null) {&#xD;
        for (int i = 0; i &lt; m.finallanes.length; i++) {&#xD;
            int[] positionbands = m.finallanes[i].getPositionbands();&#xD;
            if (positionbands != null) {&#xD;
                for (int b : positionbands) {&#xD;
                    Roi r0 = m.finallanes[i].getRoi();&#xD;
                    int r0x = r0.getBounds().x;&#xD;
                    int r0y = r0.getBounds().y;&#xD;
                    int w = r0.getBounds().width;&#xD;
                    Rectangle r = new Rectangle(r0x, r0y + b, w, 2);&#xD;
                    Roi r1 = rectangleintersectionroi(r0, r);&#xD;
                    if (m.finallanes[i].isIsstandard()) {&#xD;
                        if (m.getColour() == Color.RED) {&#xD;
                            r1.setFillColor(Color.BLUE);&#xD;
                        } else {&#xD;
                            r1.setFillColor(Color.RED);&#xD;
                        }&#xD;
                    } else {&#xD;
                        r1.setFillColor(m.getColour());&#xD;
                    }&#xD;
                    bm.add(imp, r1, 0, i);&#xD;
                    bm.showAll(0);&#xD;
                }&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    bm.requestFocus();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bVEqMGWNEei0cbjpkrd07g" name="recoverstep7">
                  <language>JAVA</language>
                  <body>&#xD;
    imp.getWindow().setLocked(true);&#xD;
    Step4_1 s = new Step4_1(imp, this, !m.getinvertcolour());&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bVHtgGWNEei0cbjpkrd07g" name="recoverstep8">
                  <language>JAVA</language>
                  <body>&#xD;
    ImageWindow iw = imp.getWindow();&#xD;
    BandManagerCanvas cc = new BandManagerCanvas(imp);&#xD;
    ImageWindow iw2 = new ImageWindow(imp, cc);&#xD;
    iw.dispose();&#xD;
    iw2.setLocked(true);&#xD;
    Step4_3 s = new Step4_3(imp, this, !m.getinvertcolour(), null);&#xD;
    BandManager bm = s.getBm();&#xD;
    bm.delete_without_asking(false);&#xD;
    if (m.finallanes != null) {&#xD;
        for (int i = 0; i &lt; m.finallanes.length; i++) {&#xD;
            int[] positionbands = m.finallanes[i].getPositionbands();&#xD;
            if (positionbands != null) {&#xD;
                for (int b : positionbands) {&#xD;
                    Roi r0 = m.finallanes[i].getRoi();&#xD;
                    int r0x = r0.getBounds().x;&#xD;
                    int r0y = r0.getBounds().y;&#xD;
                    int w = r0.getBounds().width;&#xD;
                    Rectangle r = new Rectangle(r0x, r0y + b, w, 2);&#xD;
                    Roi r1 = rectangleintersectionroi(r0, r);&#xD;
                    if (m.finallanes[i].isIsstandard()) {&#xD;
                        if (m.getColour() == Color.RED) {&#xD;
                            r1.setFillColor(Color.BLUE);&#xD;
                        } else {&#xD;
                            r1.setFillColor(Color.RED);&#xD;
                        }&#xD;
                    } else {&#xD;
                        r1.setFillColor(m.getColour());&#xD;
                    }&#xD;
                    bm.add(imp, r1, 0, i);&#xD;
                    bm.showAll(0);&#xD;
                }&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    bm.requestFocus();&#xD;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_bUCvcGWNEei0cbjpkrd07g" name="Image_Assistant" visibility="public" method="_bUJdIGWNEei0cbjpkrd07g">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_bUGZ0GWNEei0cbjpkrd07g" name="m" type="_bT17IGWNEei0cbjpkrd07g"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_bUIPAGWNEei0cbjpkrd07g" name="geljdb" type="_bT8BwGWNEei0cbjpkrd07g"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_bUKrQGWNEei0cbjpkrd07g" name="runAssistant" visibility="public" method="_bUL5YGWNEei0cbjpkrd07g"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_a9kJIGWNEei0cbjpkrd07g" name="step2_2" visibility="public" classifierBehavior="_m7wqcI5TEeie3Y8fpsu39w">
                <generalization xmi:type="uml:Generalization" xmi:id="_JKAWh24VEei47fqiwvb5mw" general="_a0hh4GWNEei0cbjpkrd07g"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_a9mlYGWNEei0cbjpkrd07g" name="close" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_a9oakGWNEei0cbjpkrd07g" name="defaultValue">
                    <language>JAVA</language>
                    <body>true</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_a9qPwGWNEei0cbjpkrd07g" name="imp" visibility="private" type="_a5Za0GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_a9qPwWWNEei0cbjpkrd07g" name="ia" visibility="private" type="_a5ikwGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_a9uhMGWNEei0cbjpkrd07g" name="lm" visibility="private" type="_a9q20GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_a9w9cGWNEei0cbjpkrd07g" name="darkbg" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_a-xqEWWNEei0cbjpkrd07g" name="buttonGroup1" visibility="private" type="_a70csGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_a-yRIGWNEei0cbjpkrd07g" name="jButton1" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_a-yRIWWNEei0cbjpkrd07g" name="jButton2" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_a-yRImWNEei0cbjpkrd07g" name="jButton3" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_a-y4MGWNEei0cbjpkrd07g" name="jButton5" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_a-y4MWWNEei0cbjpkrd07g" name="jButton6" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_a-y4MmWNEei0cbjpkrd07g" name="jButton7" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_a-zfQGWNEei0cbjpkrd07g" name="jButton8" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_a-zfQWWNEei0cbjpkrd07g" name="jComboBox1" visibility="private" type="_a8X2UGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_a-0GUGWNEei0cbjpkrd07g" name="jLabel1" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_a-0tYGWNEei0cbjpkrd07g" name="jLabel2" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_a-0tYWWNEei0cbjpkrd07g" name="jLabel3" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_a-1UcGWNEei0cbjpkrd07g" name="jLabel4" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_a-2ikGWNEei0cbjpkrd07g" name="jLabel5" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_a-4-0GWNEei0cbjpkrd07g" name="jLabel6" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_a-7bEGWNEei0cbjpkrd07g" name="jLabel7" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_a-9QQGWNEei0cbjpkrd07g" name="jLabel8" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_a-_sgGWNEei0cbjpkrd07g" name="jPanel1" visibility="private" type="_a8yGAGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_a_CIwGWNEei0cbjpkrd07g" name="jPanel2" visibility="private" type="_a8yGAGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_a_ElAGWNEei0cbjpkrd07g" name="jPanel3" visibility="private" type="_a8yGAGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_a_HBQGWNEei0cbjpkrd07g" name="jPanel4" visibility="private" type="_a8yGAGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_a_KEkGWNEei0cbjpkrd07g" name="jPanel5" visibility="private" type="_a8yGAGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_a_L5wGWNEei0cbjpkrd07g" name="jPanel6" visibility="private" type="_a8yGAGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_a_Nu8GWNEei0cbjpkrd07g" name="jPanel7" visibility="private" type="_a8yGAGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_a_PkIGWNEei0cbjpkrd07g" name="jScrollPane1" visibility="private" type="_a9Dy0GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_a_SAYGWNEei0cbjpkrd07g" name="jTextArea1" visibility="private" type="_a9IrUGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_a_UcoGWNEei0cbjpkrd07g" name="jbBack" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_a_Xf8GWNEei0cbjpkrd07g" name="jbaddinfo" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_a93rIGWNEei0cbjpkrd07g" name="step2_2" specification="_a9yLkGWNEei0cbjpkrd07g">
                  <language>JAVA</language>
                  <body>&#xD;
    super();&#xD;
    initComponents();&#xD;
    this.imp = imp;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_a-CqQGWNEei0cbjpkrd07g" name="step2_2" specification="_a95gUGWNEei0cbjpkrd07g">
                  <language>JAVA</language>
                  <body>&#xD;
    super();&#xD;
    IJ.setTool(&quot;rectangle&quot;);&#xD;
    initComponents();&#xD;
    this.imp = imp;&#xD;
    this.ia = aThis;&#xD;
    this.darkbg = darkbg;&#xD;
    if (lm == null) {&#xD;
        this.lm = new LaneManager(ia.m);&#xD;
        this.lm.delete_without_asking(true);&#xD;
    } else {&#xD;
        this.lm = lm;&#xD;
    }&#xD;
    this.lm.setbgcheckboxstate(darkbg);&#xD;
    this.lm.updateShowAll();&#xD;
    Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();&#xD;
    double width = screenSize.getWidth();&#xD;
    setVisible(true);&#xD;
    setLocation((int) width - 515, 0);&#xD;
    imp.getWindow().setAlwaysOnTop(true);&#xD;
    setAlwaysOnTop(true);&#xD;
    toFront();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_a-G7sGWNEei0cbjpkrd07g" name="getLm">
                  <language>JAVA</language>
                  <body>&#xD;
    return lm;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_a-KmEGWNEei0cbjpkrd07g" name="initComponents">
                  <language>JAVA</language>
                  <body>&#xD;
    buttonGroup1 = new javax.swing.ButtonGroup();&#xD;
    jPanel4 = new javax.swing.JPanel();&#xD;
    jButton2 = new javax.swing.JButton();&#xD;
    jbBack = new javax.swing.JButton();&#xD;
    jPanel5 = new javax.swing.JPanel();&#xD;
    jLabel1 = new javax.swing.JLabel();&#xD;
    jLabel6 = new javax.swing.JLabel();&#xD;
    jLabel7 = new javax.swing.JLabel();&#xD;
    jLabel8 = new javax.swing.JLabel();&#xD;
    jLabel2 = new javax.swing.JLabel();&#xD;
    jLabel3 = new javax.swing.JLabel();&#xD;
    jLabel4 = new javax.swing.JLabel();&#xD;
    jPanel1 = new javax.swing.JPanel();&#xD;
    jPanel2 = new javax.swing.JPanel();&#xD;
    jScrollPane1 = new javax.swing.JScrollPane();&#xD;
    jTextArea1 = new javax.swing.JTextArea();&#xD;
    jPanel3 = new javax.swing.JPanel();&#xD;
    jPanel6 = new javax.swing.JPanel();&#xD;
    jButton1 = new javax.swing.JButton();&#xD;
    jButton3 = new javax.swing.JButton();&#xD;
    jButton5 = new javax.swing.JButton();&#xD;
    jButton6 = new javax.swing.JButton();&#xD;
    jLabel5 = new javax.swing.JLabel();&#xD;
    jComboBox1 = new javax.swing.JComboBox();&#xD;
    jbaddinfo = new javax.swing.JButton();&#xD;
    jPanel7 = new javax.swing.JPanel();&#xD;
    jButton7 = new javax.swing.JButton();&#xD;
    jButton8 = new javax.swing.JButton();&#xD;
    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);&#xD;
    setTitle(&quot;Image analysis&quot;);&#xD;
    setResizable(false);&#xD;
    addWindowListener(new java.awt.event.WindowAdapter() {&#xD;
&#xD;
        public void windowClosed(java.awt.event.WindowEvent evt) {&#xD;
            formWindowClosed(evt);&#xD;
        }&#xD;
    });&#xD;
    jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());&#xD;
    jButton2.setText(&quot;Next>&quot;);&#xD;
    jButton2.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton2ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jbBack.setText(&quot;&lt;Back&quot;);&#xD;
    jbBack.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbBackActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);&#xD;
    jPanel4.setLayout(jPanel4Layout);&#xD;
    jPanel4Layout.setHorizontalGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addComponent(jbBack).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButton2)));&#xD;
    jPanel4Layout.setVerticalGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jButton2).addComponent(jbBack))));&#xD;
    jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Steps&quot;)));&#xD;
    jPanel5.setForeground(new java.awt.Color(0, 17, 255));&#xD;
    jLabel1.setText(&quot;Step 1. Image preprocessing&quot;);&#xD;
    jLabel6.setText(&quot;Step 2. Lane detection&quot;);&#xD;
    jLabel7.setText(&quot;Step 3. Normalisation&quot;);&#xD;
    jLabel8.setText(&quot;Step 4. Band detection&quot;);&#xD;
    jLabel2.setText(&quot;2.1. Background&quot;);&#xD;
    jLabel3.setForeground(new java.awt.Color(0, 15, 255));&#xD;
    jLabel3.setText(&quot;2.2. Lane edition&quot;);&#xD;
    jLabel4.setText(&quot;2.3. Fix reference lanes&quot;);&#xD;
    javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);&#xD;
    jPanel5.setLayout(jPanel5Layout);&#xD;
    jPanel5Layout.setHorizontalGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel5Layout.createSequentialGroup().addContainerGap().addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel1).addComponent(jLabel6).addComponent(jLabel7).addComponent(jLabel8).addGroup(jPanel5Layout.createSequentialGroup().addGap(12, 12, 12).addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel3).addComponent(jLabel2).addComponent(jLabel4)))).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jPanel5Layout.setVerticalGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel5Layout.createSequentialGroup().addContainerGap().addComponent(jLabel1).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel6).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel2).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel3).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel4).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel7).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel8).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Help&quot;));&#xD;
    jTextArea1.setEditable(false);&#xD;
    jTextArea1.setColumns(20);&#xD;
    jTextArea1.setRows(5);&#xD;
    jTextArea1.setText(&quot;In this step, the lanes of the image\nhave been detected. You can edit\nthem using the above buttons. \n\nThe available shortcuts are \nindicated between brackets.&quot;);&#xD;
    jScrollPane1.setViewportView(jTextArea1);&#xD;
    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);&#xD;
    jPanel2.setLayout(jPanel2Layout);&#xD;
    jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 258, Short.MAX_VALUE));&#xD;
    jPanel2Layout.setVerticalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE));&#xD;
    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);&#xD;
    jPanel1.setLayout(jPanel1Layout);&#xD;
    jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));&#xD;
    jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup().addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)));&#xD;
    jPanel3.setBorder(null);&#xD;
    jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Edition tools&quot;));&#xD;
    jButton1.setText(&quot;Add lane [a]&quot;);&#xD;
    jButton1.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton1ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jButton3.setText(&quot;Delete lane&quot;);&#xD;
    jButton3.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton3ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jButton5.setText(&quot;Adjust contrast of lane&quot;);&#xD;
    jButton5.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton5ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jButton6.setText(&quot;Remove background of lane&quot;);&#xD;
    jButton6.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton6ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jLabel5.setText(&quot;Colour:&quot;);&#xD;
    jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { &quot;blue&quot;, &quot;red&quot;, &quot;green&quot;, &quot;magenta&quot;, &quot;cyan&quot;, &quot;yellow&quot;, &quot;orange&quot; }));&#xD;
    jComboBox1.addItemListener(new java.awt.event.ItemListener() {&#xD;
&#xD;
        public void itemStateChanged(java.awt.event.ItemEvent evt) {&#xD;
            jComboBox1ItemStateChanged(evt);&#xD;
        }&#xD;
    });&#xD;
    jbaddinfo.setText(&quot;Add information about lane&quot;);&#xD;
    jbaddinfo.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbaddinfoActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);&#xD;
    jPanel6.setLayout(jPanel6Layout);&#xD;
    jPanel6Layout.setHorizontalGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, 258, Short.MAX_VALUE).addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, 258, Short.MAX_VALUE).addGroup(jPanel6Layout.createSequentialGroup().addComponent(jLabel5).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)).addComponent(jbaddinfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));&#xD;
    jPanel6Layout.setVerticalGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel6Layout.createSequentialGroup().addComponent(jButton1).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButton3).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jbaddinfo).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButton5).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButton6).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel5).addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Selection tools&quot;));&#xD;
    jButton7.setText(&quot;Rectangle tool&quot;);&#xD;
    jButton7.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton7ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jButton8.setText(&quot;Polygon tool&quot;);&#xD;
    jButton8.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton8ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);&#xD;
    jPanel7.setLayout(jPanel7Layout);&#xD;
    jPanel7Layout.setHorizontalGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));&#xD;
    jPanel7Layout.setVerticalGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel7Layout.createSequentialGroup().addContainerGap().addComponent(jButton7).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButton8).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);&#xD;
    jPanel3.setLayout(jPanel3Layout);&#xD;
    jPanel3Layout.setHorizontalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));&#xD;
    jPanel3Layout.setVerticalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel3Layout.createSequentialGroup().addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());&#xD;
    getContentPane().setLayout(layout);&#xD;
    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(layout.createSequentialGroup().addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))));&#xD;
    layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(layout.createSequentialGroup().addContainerGap().addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)));&#xD;
    pack();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_a-RTwGWNEei0cbjpkrd07g" name="formWindowClosed">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_formWindowClosed&#xD;
    try {&#xD;
        if (close) {&#xD;
            ia.saveUnfinishedExperiment(this, 5);&#xD;
            close = false;&#xD;
        } else {&#xD;
        }&#xD;
    } catch (IOException ex) {&#xD;
        Logger.getLogger(step2_2.class.getName()).log(Level.SEVERE, null, ex);&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_a-WMQGWNEei0cbjpkrd07g" name="jbBackActionPerformed" specification="_a-TI8GWNEei0cbjpkrd07g">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jbBackActionPerformed&#xD;
    close = false;&#xD;
    imp.deleteRoi();&#xD;
    lm.close();&#xD;
    this.dispose();&#xD;
    ImageWindow iw = imp.getWindow();&#xD;
    iw.setLocked(false);&#xD;
    ImageCanvas cc = new ImageCanvas(imp);&#xD;
    ImageWindow iw2 = new ImageWindow(imp, cc);&#xD;
    iw2.setLocked(true);&#xD;
    imp.changes = false;&#xD;
    iw.dispose();&#xD;
    cc.requestFocus();&#xD;
    step2_1 s = new step2_1(imp, ia);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_a-adsGWNEei0cbjpkrd07g" name="jButton2ActionPerformed" specification="_a-YBcGWNEei0cbjpkrd07g">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton2ActionPerformed&#xD;
    close = false;&#xD;
    step2_3 s = new step2_3(imp, ia, darkbg, lm);&#xD;
    this.dispose();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_a-f9QGWNEei0cbjpkrd07g" name="jButton8ActionPerformed">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton8ActionPerformed&#xD;
    IJ.setTool(&quot;polygon&quot;);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_a-k1wGWNEei0cbjpkrd07g" name="jButton7ActionPerformed">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton7ActionPerformed&#xD;
    IJ.setTool(&quot;rectangle&quot;);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_a-pHMGWNEei0cbjpkrd07g" name="jButton6ActionPerformed">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton6ActionPerformed&#xD;
    IJ.run(imp, &quot;8-bit&quot;, &quot;&quot;);&#xD;
    this.setAlwaysOnTop(false);&#xD;
    imp.getWindow().setAlwaysOnTop(false);&#xD;
    lm.backgroundremoval(imp);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_a-sxkGWNEei0cbjpkrd07g" name="jButton5ActionPerformed">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton5ActionPerformed&#xD;
    IJ.run(imp, &quot;RGB Color&quot;, &quot;&quot;);&#xD;
    this.setAlwaysOnTop(false);&#xD;
    imp.getWindow().setAlwaysOnTop(false);&#xD;
    lm.adjustcontrastbrightness(imp);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_a-vN0WWNEei0cbjpkrd07g" name="jButton3ActionPerformed" specification="_a-umwGWNEei0cbjpkrd07g">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton3ActionPerformed&#xD;
    IJ.run(imp, &quot;8-bit&quot;, &quot;&quot;);&#xD;
    this.setAlwaysOnTop(false);&#xD;
    imp.getWindow().setAlwaysOnTop(false);&#xD;
    lm.delete(false);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_a-v04mWNEei0cbjpkrd07g" name="jButton1ActionPerformed" specification="_a-v04GWNEei0cbjpkrd07g">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton1ActionPerformed&#xD;
    IJ.run(imp, &quot;8-bit&quot;, &quot;&quot;);&#xD;
    this.setAlwaysOnTop(false);&#xD;
    imp.getWindow().setAlwaysOnTop(false);&#xD;
    lm.runCommand(&quot;add&quot;);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_a-wb8mWNEei0cbjpkrd07g" name="jComboBox1ItemStateChanged">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jComboBox1ItemStateChanged&#xD;
    this.setAlwaysOnTop(false);&#xD;
    imp.getWindow().setAlwaysOnTop(false);&#xD;
    int colour = jComboBox1.getSelectedIndex();&#xD;
    Color c;&#xD;
    switch(colour) {&#xD;
        case BLUE:&#xD;
            c = Color.BLUE;&#xD;
            break;&#xD;
        case RED:&#xD;
            c = Color.RED;&#xD;
            break;&#xD;
        case GREEN:&#xD;
            c = Color.GREEN;&#xD;
            break;&#xD;
        case MAGENTA:&#xD;
            c = Color.MAGENTA;&#xD;
            break;&#xD;
        case CYAN:&#xD;
            c = Color.CYAN;&#xD;
            break;&#xD;
        case YELLOW:&#xD;
            c = Color.YELLOW;&#xD;
            break;&#xD;
        case ORANGE:&#xD;
            c = Color.ORANGE;&#xD;
            break;&#xD;
        default:&#xD;
            c = Color.BLUE;&#xD;
            break;&#xD;
    }&#xD;
    lm.change_colour(c);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_a-xqEGWNEei0cbjpkrd07g" name="jbaddinfoActionPerformed">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jbaddinfoActionPerformed&#xD;
    IJ.run(imp, &quot;8-bit&quot;, &quot;&quot;);&#xD;
    this.setAlwaysOnTop(false);&#xD;
    imp.getWindow().setAlwaysOnTop(false);&#xD;
    lm.add_info_about_lane();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_m7wqcI5TEeie3Y8fpsu39w" name="StateMachine1">
                  <region xmi:type="uml:Region" xmi:id="_nF6sAI5TEeie3Y8fpsu39w" name="Region1">
                    <transition xmi:type="uml:Transition" xmi:id="_yLQBsI5TEeie3Y8fpsu39w" source="_xzQYcI5TEeie3Y8fpsu39w" target="_voslYI5TEeie3Y8fpsu39w">
                      <trigger xmi:type="uml:Trigger" xmi:id="_7Et8wI5TEeie3Y8fpsu39w" event="_67Rs4I5TEeie3Y8fpsu39w"/>
                    </transition>
                    <transition xmi:type="uml:Transition" xmi:id="_ymPUkI5TEeie3Y8fpsu39w" source="_voslYI5TEeie3Y8fpsu39w" target="_wJQ70I5TEeie3Y8fpsu39w">
                      <trigger xmi:type="uml:Trigger" xmi:id="_-7OUQI5TEeie3Y8fpsu39w" event="_-0goQI5TEeie3Y8fpsu39w"/>
                    </transition>
                    <transition xmi:type="uml:Transition" xmi:id="_zQcvMI5TEeie3Y8fpsu39w" source="_voslYI5TEeie3Y8fpsu39w" target="_wJQ70I5TEeie3Y8fpsu39w">
                      <trigger xmi:type="uml:Trigger" xmi:id="_BucCwI5UEeie3Y8fpsu39w" event="_BkRaII5UEeie3Y8fpsu39w"/>
                    </transition>
                    <transition xmi:type="uml:Transition" xmi:id="_0Aj9gI5TEeie3Y8fpsu39w" source="_v3a94I5TEeie3Y8fpsu39w" target="_wJQ70I5TEeie3Y8fpsu39w">
                      <trigger xmi:type="uml:Trigger" xmi:id="_Fn61wI5UEeie3Y8fpsu39w" event="_Fe-8MI5UEeie3Y8fpsu39w"/>
                    </transition>
                    <transition xmi:type="uml:Transition" xmi:id="_0b5OoI5TEeie3Y8fpsu39w" source="_v3a94I5TEeie3Y8fpsu39w" target="_wJQ70I5TEeie3Y8fpsu39w">
                      <trigger xmi:type="uml:Trigger" xmi:id="_IHVegI5UEeie3Y8fpsu39w" event="_IAi6AI5UEeie3Y8fpsu39w"/>
                    </transition>
                    <transition xmi:type="uml:Transition" xmi:id="_1n02QI5TEeie3Y8fpsu39w" source="_voslYI5TEeie3Y8fpsu39w" target="_v3a94I5TEeie3Y8fpsu39w">
                      <trigger xmi:type="uml:Trigger" xmi:id="_Nf5eoI5UEeie3Y8fpsu39w" event="_NYRMoI5UEeie3Y8fpsu39w"/>
                    </transition>
                    <transition xmi:type="uml:Transition" xmi:id="_2OBTkI5TEeie3Y8fpsu39w" source="_voslYI5TEeie3Y8fpsu39w" target="_v3a94I5TEeie3Y8fpsu39w">
                      <trigger xmi:type="uml:Trigger" xmi:id="_Q4t0kI5UEeie3Y8fpsu39w" event="_QxQhsI5UEeie3Y8fpsu39w"/>
                    </transition>
                    <subvertex xmi:type="uml:State" xmi:id="_voslYI5TEeie3Y8fpsu39w" name="Activated"/>
                    <subvertex xmi:type="uml:State" xmi:id="_v3a94I5TEeie3Y8fpsu39w" name="LanesModified"/>
                    <subvertex xmi:type="uml:State" xmi:id="_wJQ70I5TEeie3Y8fpsu39w" name="Finished"/>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_xzQYcI5TEeie3Y8fpsu39w" name="Initial1"/>
                  </region>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_a9yLkGWNEei0cbjpkrd07g" name="step2_2" visibility="public" method="_a93rIGWNEei0cbjpkrd07g">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_a92dAGWNEei0cbjpkrd07g" name="imp" type="_a5Za0GWNEei0cbjpkrd07g"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_a95gUGWNEei0cbjpkrd07g" name="step2_2" visibility="public" method="_a-CqQGWNEei0cbjpkrd07g">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_a99xwGWNEei0cbjpkrd07g" name="imp" type="_a5Za0GWNEei0cbjpkrd07g"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_a9-_4GWNEei0cbjpkrd07g" name="aThis" type="_a5ikwGWNEei0cbjpkrd07g"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_a-AOAGWNEei0cbjpkrd07g" name="darkbg">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_a-BcIGWNEei0cbjpkrd07g" name="lm" type="_a9q20GWNEei0cbjpkrd07g"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_a-TI8GWNEei0cbjpkrd07g" name="jbBackActionPerformed" visibility="private" method="_a-WMQGWNEei0cbjpkrd07g">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_a-U-IGWNEei0cbjpkrd07g" name="evt" type="_a6tpcGWNEei0cbjpkrd07g"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_a-YBcGWNEei0cbjpkrd07g" name="jButton2ActionPerformed" visibility="private" method="_a-adsGWNEei0cbjpkrd07g">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_a-ZPkGWNEei0cbjpkrd07g" name="evt" type="_a6tpcGWNEei0cbjpkrd07g"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_a-umwGWNEei0cbjpkrd07g" name="jButton3ActionPerformed" visibility="private" method="_a-vN0WWNEei0cbjpkrd07g">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_a-vN0GWNEei0cbjpkrd07g" name="evt" type="_a6tpcGWNEei0cbjpkrd07g"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_a-v04GWNEei0cbjpkrd07g" name="jButton1ActionPerformed" visibility="private" method="_a-v04mWNEei0cbjpkrd07g">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_a-v04WWNEei0cbjpkrd07g" name="evt" type="_a6tpcGWNEei0cbjpkrd07g"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_a_5EYGWNEei0cbjpkrd07g" name="Step3_3" visibility="public" classifierBehavior="__E6J0I5VEeie3Y8fpsu39w">
                <generalization xmi:type="uml:Generalization" xmi:id="_JKAWhm4VEei47fqiwvb5mw" general="_a0hh4GWNEei0cbjpkrd07g"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_a_8HsGWNEei0cbjpkrd07g" name="close" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_a_984GWNEei0cbjpkrd07g" name="defaultValue">
                    <language>JAVA</language>
                    <body>true</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_a__yEGWNEei0cbjpkrd07g" name="imp" visibility="private" type="_a5Za0GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bABAMGWNEei0cbjpkrd07g" name="ia" visibility="private" type="_a5ikwGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bAC1YGWNEei0cbjpkrd07g" name="darkbg" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bAJjEGWNEei0cbjpkrd07g" name="availablestd" visibility="private" type="_bAF4sGWNEei0cbjpkrd07g" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_bALYQGWNEei0cbjpkrd07g"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_bAMmYGWNEei0cbjpkrd07g" value="*"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bAQ30GWNEei0cbjpkrd07g" name="rm" visibility="private" type="_bANNcGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bBqmAGWNEei0cbjpkrd07g" name="buttonGroup1" visibility="private" type="_a70csGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bBsbMGWNEei0cbjpkrd07g" name="jButton2" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bBuQYGWNEei0cbjpkrd07g" name="jComboBox1" visibility="private" type="_a8X2UGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bBwFkGWNEei0cbjpkrd07g" name="jLabel1" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bBwsoGWNEei0cbjpkrd07g" name="jLabel10" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bByh0GWNEei0cbjpkrd07g" name="jLabel11" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bB0XAGWNEei0cbjpkrd07g" name="jLabel12" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bB2zQGWNEei0cbjpkrd07g" name="jLabel13" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bB4ocGWNEei0cbjpkrd07g" name="jLabel14" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bB7rwGWNEei0cbjpkrd07g" name="jLabel15" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bB854GWNEei0cbjpkrd07g" name="jLabel16" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bB-vEGWNEei0cbjpkrd07g" name="jLabel17" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bCBLUGWNEei0cbjpkrd07g" name="jLabel18" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bCDAgGWNEei0cbjpkrd07g" name="jLabel19" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bCE1sGWNEei0cbjpkrd07g" name="jLabel2" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bCGq4GWNEei0cbjpkrd07g" name="jLabel20" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bCJuMGWNEei0cbjpkrd07g" name="jLabel21" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bCLjYGWNEei0cbjpkrd07g" name="jLabel22" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bCN_oGWNEei0cbjpkrd07g" name="jLabel23" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bCQb4GWNEei0cbjpkrd07g" name="jLabel24" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bCSREGWNEei0cbjpkrd07g" name="jLabel25" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bCUGQGWNEei0cbjpkrd07g" name="jLabel26" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bCV7cGWNEei0cbjpkrd07g" name="jLabel27" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bCXJkGWNEei0cbjpkrd07g" name="jLabel28" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bCXwoGWNEei0cbjpkrd07g" name="jLabel29" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bCaM4GWNEei0cbjpkrd07g" name="jLabel3" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bCcpIGWNEei0cbjpkrd07g" name="jLabel30" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bCeeUGWNEei0cbjpkrd07g" name="jLabel31" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bCgTgGWNEei0cbjpkrd07g" name="jLabel32" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bCiIsGWNEei0cbjpkrd07g" name="jLabel33" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bCjW0GWNEei0cbjpkrd07g" name="jLabel34" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bClMAGWNEei0cbjpkrd07g" name="jLabel35" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bCnBMGWNEei0cbjpkrd07g" name="jLabel36" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bCoPUGWNEei0cbjpkrd07g" name="jLabel37" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bCqEgGWNEei0cbjpkrd07g" name="jLabel38" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bCqrkGWNEei0cbjpkrd07g" name="jLabel39" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bCsgwGWNEei0cbjpkrd07g" name="jLabel4" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bCuV8GWNEei0cbjpkrd07g" name="jLabel40" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bCvkEGWNEei0cbjpkrd07g" name="jLabel41" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bCxZQGWNEei0cbjpkrd07g" name="jLabel42" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bCzOcGWNEei0cbjpkrd07g" name="jLabel43" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bC1DoGWNEei0cbjpkrd07g" name="jLabel44" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bC3f4GWNEei0cbjpkrd07g" name="jLabel45" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bC58IGWNEei0cbjpkrd07g" name="jLabel46" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bC8YYGWNEei0cbjpkrd07g" name="jLabel47" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bC-NkGWNEei0cbjpkrd07g" name="jLabel48" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bDAp0GWNEei0cbjpkrd07g" name="jLabel5" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bDCfAGWNEei0cbjpkrd07g" name="jLabel6" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bDEUMGWNEei0cbjpkrd07g" name="jLabel7" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bDGJYGWNEei0cbjpkrd07g" name="jLabel8" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bDH-kGWNEei0cbjpkrd07g" name="jLabel9" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bDJzwGWNEei0cbjpkrd07g" name="jPanel1" visibility="private" type="_a8yGAGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bDLo8GWNEei0cbjpkrd07g" name="jPanel2" visibility="private" type="_a8yGAGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bDM3EGWNEei0cbjpkrd07g" name="jPanel3" visibility="private" type="_a8yGAGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bDOsQGWNEei0cbjpkrd07g" name="jPanel4" visibility="private" type="_a8yGAGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bDQhcGWNEei0cbjpkrd07g" name="jPanel5" visibility="private" type="_a8yGAGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bDTkwGWNEei0cbjpkrd07g" name="jPanel6" visibility="private" type="_a8yGAGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bDWBAGWNEei0cbjpkrd07g" name="jScrollPane1" visibility="private" type="_a9Dy0GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bDYdQGWNEei0cbjpkrd07g" name="jScrollPane2" visibility="private" type="_a9Dy0GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bDaScGWNEei0cbjpkrd07g" name="jTextArea1" visibility="private" type="_a9IrUGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bDbgkGWNEei0cbjpkrd07g" name="jTextField1" visibility="private" type="_bBJooGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bDdVwGWNEei0cbjpkrd07g" name="jTextField10" visibility="private" type="_bBJooGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bDfK8GWNEei0cbjpkrd07g" name="jTextField11" visibility="private" type="_bBJooGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bDhnMGWNEei0cbjpkrd07g" name="jTextField12" visibility="private" type="_bBJooGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bDjcYGWNEei0cbjpkrd07g" name="jTextField13" visibility="private" type="_bBJooGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bDl4oGWNEei0cbjpkrd07g" name="jTextField14" visibility="private" type="_bBJooGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bDo78GWNEei0cbjpkrd07g" name="jTextField15" visibility="private" type="_bBJooGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bDrYMGWNEei0cbjpkrd07g" name="jTextField16" visibility="private" type="_bBJooGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bDubgGWNEei0cbjpkrd07g" name="jTextField17" visibility="private" type="_bBJooGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bDvpoGWNEei0cbjpkrd07g" name="jTextField18" visibility="private" type="_bBJooGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bDyF4GWNEei0cbjpkrd07g" name="jTextField19" visibility="private" type="_bBJooGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bD0iIGWNEei0cbjpkrd07g" name="jTextField2" visibility="private" type="_bBJooGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bD2XUGWNEei0cbjpkrd07g" name="jTextField20" visibility="private" type="_bBJooGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bD4MgGWNEei0cbjpkrd07g" name="jTextField21" visibility="private" type="_bBJooGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bD6BsGWNEei0cbjpkrd07g" name="jTextField22" visibility="private" type="_bBJooGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bD724GWNEei0cbjpkrd07g" name="jTextField23" visibility="private" type="_bBJooGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bD9FAGWNEei0cbjpkrd07g" name="jTextField24" visibility="private" type="_bBJooGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bD-TIGWNEei0cbjpkrd07g" name="jTextField25" visibility="private" type="_bBJooGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bD_hQGWNEei0cbjpkrd07g" name="jTextField26" visibility="private" type="_bBJooGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bEBWcGWNEei0cbjpkrd07g" name="jTextField27" visibility="private" type="_bBJooGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bECkkGWNEei0cbjpkrd07g" name="jTextField28" visibility="private" type="_bBJooGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bEEZwGWNEei0cbjpkrd07g" name="jTextField29" visibility="private" type="_bBJooGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bEFn4GWNEei0cbjpkrd07g" name="jTextField3" visibility="private" type="_bBJooGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bEG2AGWNEei0cbjpkrd07g" name="jTextField30" visibility="private" type="_bBJooGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bEIrMGWNEei0cbjpkrd07g" name="jTextField31" visibility="private" type="_bBJooGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bEJ5UGWNEei0cbjpkrd07g" name="jTextField32" visibility="private" type="_bBJooGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bELugGWNEei0cbjpkrd07g" name="jTextField33" visibility="private" type="_bBJooGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bEM8oGWNEei0cbjpkrd07g" name="jTextField34" visibility="private" type="_bBJooGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bEOKwGWNEei0cbjpkrd07g" name="jTextField35" visibility="private" type="_bBJooGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bEP_8GWNEei0cbjpkrd07g" name="jTextField36" visibility="private" type="_bBJooGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bER1IGWNEei0cbjpkrd07g" name="jTextField37" visibility="private" type="_bBJooGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bETDQGWNEei0cbjpkrd07g" name="jTextField38" visibility="private" type="_bBJooGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bEU4cGWNEei0cbjpkrd07g" name="jTextField39" visibility="private" type="_bBJooGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bEWGkGWNEei0cbjpkrd07g" name="jTextField4" visibility="private" type="_bBJooGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bEX7wGWNEei0cbjpkrd07g" name="jTextField40" visibility="private" type="_bBJooGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bEZw8GWNEei0cbjpkrd07g" name="jTextField41" visibility="private" type="_bBJooGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bEa_EGWNEei0cbjpkrd07g" name="jTextField5" visibility="private" type="_bBJooGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bEcNMGWNEei0cbjpkrd07g" name="jTextField6" visibility="private" type="_bBJooGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bEc0QGWNEei0cbjpkrd07g" name="jTextField7" visibility="private" type="_bBJooGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bEeCYGWNEei0cbjpkrd07g" name="jTextField8" visibility="private" type="_bBJooGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bEf3kGWNEei0cbjpkrd07g" name="jTextField9" visibility="private" type="_bBJooGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bEhFsGWNEei0cbjpkrd07g" name="jbBack" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bEl-MGWNEei0cbjpkrd07g" name="jrbavailable" visibility="private" type="_bEi64GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bEnMUGWNEei0cbjpkrd07g" name="jrbnew" visibility="private" type="_bEi64GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bAYzoGWNEei0cbjpkrd07g" name="Step3_3" specification="_bAStAGWNEei0cbjpkrd07g">
                  <language>JAVA</language>
                  <body>&#xD;
    super();&#xD;
    initComponents();&#xD;
    this.imp = imp;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bAkZ0GWNEei0cbjpkrd07g" name="Step3_3" specification="_bAbP4GWNEei0cbjpkrd07g">
                  <language>JAVA</language>
                  <body>&#xD;
    super();&#xD;
    initComponents();&#xD;
    this.imp = imp;&#xD;
    this.ia = aThis;&#xD;
    this.darkbg = darkbg;&#xD;
    availablestd = readstandardsavailable();&#xD;
    if (availablestd == null || 0 == availablestd.size()) {&#xD;
        jrbavailable.setEnabled(false);&#xD;
        jrbnew.setSelected(true);&#xD;
    } else {&#xD;
        for (String std1 : availablestd) {&#xD;
            jComboBox1.addItem(std1);&#xD;
        }&#xD;
    }&#xD;
    Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();&#xD;
    double width = screenSize.getWidth();&#xD;
    setVisible(true);&#xD;
    setLocation((int) width - 535, 0);&#xD;
    imp.getWindow().setAlwaysOnTop(true);&#xD;
    setAlwaysOnTop(true);&#xD;
    JTextField[] textfields = { jTextField2, jTextField3, jTextField4, jTextField5, jTextField6, jTextField7, jTextField8, jTextField9, jTextField10, jTextField11, jTextField12, jTextField13, jTextField14, jTextField15, jTextField16, jTextField17, jTextField18, jTextField19, jTextField20, jTextField21, jTextField22, jTextField23, jTextField24, jTextField25, jTextField26, jTextField27, jTextField28, jTextField29, jTextField30, jTextField31, jTextField32, jTextField33, jTextField34, jTextField35, jTextField36, jTextField37, jTextField38, jTextField39, jTextField40, jTextField41 };&#xD;
    JLabel[] labels = { jLabel5, jLabel9, jLabel10, jLabel11, jLabel12, jLabel13, jLabel14, jLabel15, jLabel16, jLabel17, jLabel18, jLabel19, jLabel20, jLabel21, jLabel22, jLabel23, jLabel24, jLabel25, jLabel26, jLabel27, jLabel28, jLabel29, jLabel30, jLabel31, jLabel32, jLabel33, jLabel34, jLabel35, jLabel36, jLabel37, jLabel38, jLabel39, jLabel40, jLabel41, jLabel42, jLabel43, jLabel44, jLabel45, jLabel46, jLabel47 };&#xD;
    int[] indexes = indexesstandardlanes(ia.m.finallanes);&#xD;
    initiatenecessarytextFields(textfields, labels, ia.m.finallanes[indexes[0]].getPositionbands().length);&#xD;
    jTextField1.setEnabled(false);&#xD;
    disable_enable_textFields(textfields, false);&#xD;
    rm = new NormaliseManager();&#xD;
    int[] positionbands = ia.m.finallanes[indexes[0]].getPositionbands();&#xD;
    if (positionbands != null) {&#xD;
        for (int b : positionbands) {&#xD;
            Roi r0 = ia.m.finallanes[indexes[0]].getRoi();&#xD;
            int r0x = r0.getBounds().x;&#xD;
            int r0y = r0.getBounds().y;&#xD;
            int w = r0.getBounds().width;&#xD;
            Rectangle r = new Rectangle(r0x, r0y + b - 1, w, 2);&#xD;
            Roi r1 = rectangleintersectionroi(r0, r);&#xD;
            rm.add(imp, r1, 0);&#xD;
            rm.showAll(0);&#xD;
        }&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bAp5YGWNEei0cbjpkrd07g" name="initComponents">
                  <language>JAVA</language>
                  <body>&#xD;
    buttonGroup1 = new javax.swing.ButtonGroup();&#xD;
    jPanel4 = new javax.swing.JPanel();&#xD;
    jButton2 = new javax.swing.JButton();&#xD;
    jbBack = new javax.swing.JButton();&#xD;
    jPanel5 = new javax.swing.JPanel();&#xD;
    jLabel1 = new javax.swing.JLabel();&#xD;
    jLabel6 = new javax.swing.JLabel();&#xD;
    jLabel7 = new javax.swing.JLabel();&#xD;
    jLabel3 = new javax.swing.JLabel();&#xD;
    jLabel4 = new javax.swing.JLabel();&#xD;
    jLabel48 = new javax.swing.JLabel();&#xD;
    jLabel8 = new javax.swing.JLabel();&#xD;
    jPanel1 = new javax.swing.JPanel();&#xD;
    jPanel2 = new javax.swing.JPanel();&#xD;
    jScrollPane1 = new javax.swing.JScrollPane();&#xD;
    jTextArea1 = new javax.swing.JTextArea();&#xD;
    jPanel3 = new javax.swing.JPanel();&#xD;
    jrbavailable = new javax.swing.JRadioButton();&#xD;
    jrbnew = new javax.swing.JRadioButton();&#xD;
    jComboBox1 = new javax.swing.JComboBox();&#xD;
    jScrollPane2 = new javax.swing.JScrollPane();&#xD;
    jPanel6 = new javax.swing.JPanel();&#xD;
    jLabel5 = new javax.swing.JLabel();&#xD;
    jLabel9 = new javax.swing.JLabel();&#xD;
    jLabel10 = new javax.swing.JLabel();&#xD;
    jLabel11 = new javax.swing.JLabel();&#xD;
    jLabel12 = new javax.swing.JLabel();&#xD;
    jLabel13 = new javax.swing.JLabel();&#xD;
    jLabel14 = new javax.swing.JLabel();&#xD;
    jLabel15 = new javax.swing.JLabel();&#xD;
    jLabel16 = new javax.swing.JLabel();&#xD;
    jLabel17 = new javax.swing.JLabel();&#xD;
    jLabel18 = new javax.swing.JLabel();&#xD;
    jLabel19 = new javax.swing.JLabel();&#xD;
    jLabel20 = new javax.swing.JLabel();&#xD;
    jLabel21 = new javax.swing.JLabel();&#xD;
    jLabel22 = new javax.swing.JLabel();&#xD;
    jLabel23 = new javax.swing.JLabel();&#xD;
    jLabel24 = new javax.swing.JLabel();&#xD;
    jLabel25 = new javax.swing.JLabel();&#xD;
    jLabel26 = new javax.swing.JLabel();&#xD;
    jLabel27 = new javax.swing.JLabel();&#xD;
    jLabel28 = new javax.swing.JLabel();&#xD;
    jLabel29 = new javax.swing.JLabel();&#xD;
    jLabel30 = new javax.swing.JLabel();&#xD;
    jLabel31 = new javax.swing.JLabel();&#xD;
    jLabel32 = new javax.swing.JLabel();&#xD;
    jLabel33 = new javax.swing.JLabel();&#xD;
    jLabel34 = new javax.swing.JLabel();&#xD;
    jLabel35 = new javax.swing.JLabel();&#xD;
    jLabel36 = new javax.swing.JLabel();&#xD;
    jLabel2 = new javax.swing.JLabel();&#xD;
    jTextField1 = new javax.swing.JTextField();&#xD;
    jTextField2 = new javax.swing.JTextField();&#xD;
    jTextField3 = new javax.swing.JTextField();&#xD;
    jTextField4 = new javax.swing.JTextField();&#xD;
    jTextField5 = new javax.swing.JTextField();&#xD;
    jTextField6 = new javax.swing.JTextField();&#xD;
    jTextField7 = new javax.swing.JTextField();&#xD;
    jTextField8 = new javax.swing.JTextField();&#xD;
    jTextField9 = new javax.swing.JTextField();&#xD;
    jTextField10 = new javax.swing.JTextField();&#xD;
    jTextField11 = new javax.swing.JTextField();&#xD;
    jTextField12 = new javax.swing.JTextField();&#xD;
    jTextField13 = new javax.swing.JTextField();&#xD;
    jTextField14 = new javax.swing.JTextField();&#xD;
    jTextField15 = new javax.swing.JTextField();&#xD;
    jTextField16 = new javax.swing.JTextField();&#xD;
    jTextField17 = new javax.swing.JTextField();&#xD;
    jTextField18 = new javax.swing.JTextField();&#xD;
    jTextField19 = new javax.swing.JTextField();&#xD;
    jTextField20 = new javax.swing.JTextField();&#xD;
    jTextField21 = new javax.swing.JTextField();&#xD;
    jTextField22 = new javax.swing.JTextField();&#xD;
    jTextField23 = new javax.swing.JTextField();&#xD;
    jTextField24 = new javax.swing.JTextField();&#xD;
    jTextField25 = new javax.swing.JTextField();&#xD;
    jTextField26 = new javax.swing.JTextField();&#xD;
    jTextField27 = new javax.swing.JTextField();&#xD;
    jTextField28 = new javax.swing.JTextField();&#xD;
    jTextField29 = new javax.swing.JTextField();&#xD;
    jTextField30 = new javax.swing.JTextField();&#xD;
    jLabel37 = new javax.swing.JLabel();&#xD;
    jTextField31 = new javax.swing.JTextField();&#xD;
    jLabel38 = new javax.swing.JLabel();&#xD;
    jTextField32 = new javax.swing.JTextField();&#xD;
    jLabel39 = new javax.swing.JLabel();&#xD;
    jTextField33 = new javax.swing.JTextField();&#xD;
    jLabel40 = new javax.swing.JLabel();&#xD;
    jTextField34 = new javax.swing.JTextField();&#xD;
    jLabel41 = new javax.swing.JLabel();&#xD;
    jTextField35 = new javax.swing.JTextField();&#xD;
    jLabel42 = new javax.swing.JLabel();&#xD;
    jTextField36 = new javax.swing.JTextField();&#xD;
    jTextField37 = new javax.swing.JTextField();&#xD;
    jLabel43 = new javax.swing.JLabel();&#xD;
    jTextField38 = new javax.swing.JTextField();&#xD;
    jLabel44 = new javax.swing.JLabel();&#xD;
    jTextField39 = new javax.swing.JTextField();&#xD;
    jLabel45 = new javax.swing.JLabel();&#xD;
    jTextField40 = new javax.swing.JTextField();&#xD;
    jLabel46 = new javax.swing.JLabel();&#xD;
    jTextField41 = new javax.swing.JTextField();&#xD;
    jLabel47 = new javax.swing.JLabel();&#xD;
    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);&#xD;
    setTitle(&quot;Image analysis&quot;);&#xD;
    setResizable(false);&#xD;
    addWindowListener(new java.awt.event.WindowAdapter() {&#xD;
&#xD;
        public void windowClosed(java.awt.event.WindowEvent evt) {&#xD;
            formWindowClosed(evt);&#xD;
        }&#xD;
    });&#xD;
    jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());&#xD;
    jButton2.setText(&quot;Next>&quot;);&#xD;
    jButton2.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton2ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jbBack.setText(&quot;&lt;Back&quot;);&#xD;
    jbBack.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbBackActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);&#xD;
    jPanel4.setLayout(jPanel4Layout);&#xD;
    jPanel4Layout.setHorizontalGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addComponent(jbBack).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButton2)));&#xD;
    jPanel4Layout.setVerticalGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jButton2).addComponent(jbBack))));&#xD;
    jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Steps&quot;)));&#xD;
    jPanel5.setForeground(new java.awt.Color(0, 17, 255));&#xD;
    jLabel1.setText(&quot;Step 1. Image preprocessing&quot;);&#xD;
    jLabel6.setText(&quot;Step 2. Lane detection&quot;);&#xD;
    jLabel7.setText(&quot;Step 3. Normalisation&quot;);&#xD;
    jLabel3.setText(&quot;3.1. Markers threshold&quot;);&#xD;
    jLabel4.setText(&quot;3.2. Markers picking&quot;);&#xD;
    jLabel48.setForeground(new java.awt.Color(0, 15, 255));&#xD;
    jLabel48.setText(&quot;3.3. Migration model&quot;);&#xD;
    jLabel8.setText(&quot;Step 4. Band detection&quot;);&#xD;
    javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);&#xD;
    jPanel5.setLayout(jPanel5Layout);&#xD;
    jPanel5Layout.setHorizontalGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel5Layout.createSequentialGroup().addContainerGap().addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel1).addComponent(jLabel6).addComponent(jLabel7).addComponent(jLabel8).addGroup(jPanel5Layout.createSequentialGroup().addGap(12, 12, 12).addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel4).addComponent(jLabel3).addComponent(jLabel48)))).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jPanel5Layout.setVerticalGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel5Layout.createSequentialGroup().addContainerGap().addComponent(jLabel1).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel6).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel7).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel3).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel4).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel48).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel8).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Help&quot;));&#xD;
    jTextArea1.setEditable(false);&#xD;
    jTextArea1.setColumns(20);&#xD;
    jTextArea1.setRows(5);&#xD;
    jTextArea1.setText(&quot;In this step, you will normalise the\nimage. If you want to use a\npreviously defined standard, \nselect it from the above list, and \npress Next. Otherwise, select the\nNew standard option and introduce\nthe molecular weights of the bands\nfrom top to bottom.&quot;);&#xD;
    jScrollPane1.setViewportView(jTextArea1);&#xD;
    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);&#xD;
    jPanel2.setLayout(jPanel2Layout);&#xD;
    jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE));&#xD;
    jPanel2Layout.setVerticalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE));&#xD;
    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);&#xD;
    jPanel1.setLayout(jPanel1Layout);&#xD;
    jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));&#xD;
    jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup().addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)));&#xD;
    jPanel3.setBorder(null);&#xD;
    buttonGroup1.add(jrbavailable);&#xD;
    jrbavailable.setSelected(true);&#xD;
    jrbavailable.setText(&quot;Use available standard&quot;);&#xD;
    jrbavailable.addItemListener(new java.awt.event.ItemListener() {&#xD;
&#xD;
        public void itemStateChanged(java.awt.event.ItemEvent evt) {&#xD;
            jrbavailableItemStateChanged(evt);&#xD;
        }&#xD;
    });&#xD;
    buttonGroup1.add(jrbnew);&#xD;
    jrbnew.setText(&quot;New standard&quot;);&#xD;
    jrbnew.addItemListener(new java.awt.event.ItemListener() {&#xD;
&#xD;
        public void itemStateChanged(java.awt.event.ItemEvent evt) {&#xD;
            jrbnewItemStateChanged(evt);&#xD;
        }&#xD;
    });&#xD;
    jScrollPane2.setAutoscrolls(true);&#xD;
    jLabel5.setText(&quot;Band 1:&quot;);&#xD;
    jLabel9.setText(&quot;Band 2:&quot;);&#xD;
    jLabel10.setText(&quot;Band 3:&quot;);&#xD;
    jLabel11.setText(&quot;Band 4:&quot;);&#xD;
    jLabel12.setText(&quot;Band 5:&quot;);&#xD;
    jLabel13.setText(&quot;Band 6:&quot;);&#xD;
    jLabel14.setText(&quot;Band 7:&quot;);&#xD;
    jLabel15.setText(&quot;Band 8:&quot;);&#xD;
    jLabel16.setText(&quot;Band 9:&quot;);&#xD;
    jLabel17.setText(&quot;Band 10:&quot;);&#xD;
    jLabel18.setText(&quot;Band 11:&quot;);&#xD;
    jLabel19.setText(&quot;Band 12:&quot;);&#xD;
    jLabel20.setText(&quot;Band 13:&quot;);&#xD;
    jLabel21.setText(&quot;Band 14:&quot;);&#xD;
    jLabel22.setText(&quot;Band 15:&quot;);&#xD;
    jLabel23.setText(&quot;Band 16:&quot;);&#xD;
    jLabel24.setText(&quot;Band 17:&quot;);&#xD;
    jLabel25.setText(&quot;Band 18:&quot;);&#xD;
    jLabel26.setText(&quot;Band 19:&quot;);&#xD;
    jLabel27.setText(&quot;Band 20:&quot;);&#xD;
    jLabel28.setText(&quot;Band 21:&quot;);&#xD;
    jLabel29.setText(&quot;Band 22:&quot;);&#xD;
    jLabel30.setText(&quot;Band 23:&quot;);&#xD;
    jLabel31.setText(&quot;Band 24:&quot;);&#xD;
    jLabel32.setText(&quot;Band 25:&quot;);&#xD;
    jLabel33.setText(&quot;Band 26:&quot;);&#xD;
    jLabel34.setText(&quot;Band 27:&quot;);&#xD;
    jLabel35.setText(&quot;Band 28:&quot;);&#xD;
    jLabel36.setText(&quot;Band 29:&quot;);&#xD;
    jLabel2.setText(&quot;Name:&quot;);&#xD;
    jLabel37.setText(&quot;Band 30:&quot;);&#xD;
    jLabel38.setText(&quot;Band 31:&quot;);&#xD;
    jLabel39.setText(&quot;Band 32:&quot;);&#xD;
    jLabel40.setText(&quot;Band 33:&quot;);&#xD;
    jLabel41.setText(&quot;Band 34:&quot;);&#xD;
    jLabel42.setText(&quot;Band 35:&quot;);&#xD;
    jLabel43.setText(&quot;Band 36:&quot;);&#xD;
    jLabel44.setText(&quot;Band 37:&quot;);&#xD;
    jLabel45.setText(&quot;Band 38:&quot;);&#xD;
    jLabel46.setText(&quot;Band 39:&quot;);&#xD;
    jLabel47.setText(&quot;Band 40:&quot;);&#xD;
    javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);&#xD;
    jPanel6.setLayout(jPanel6Layout);&#xD;
    jPanel6Layout.setHorizontalGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel6Layout.createSequentialGroup().addContainerGap().addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false).addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup().addComponent(jLabel35).addGap(18, 18, 18).addComponent(jTextField29, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup().addComponent(jLabel34).addGap(18, 18, 18).addComponent(jTextField28, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup().addComponent(jLabel32).addGap(18, 18, 18).addComponent(jTextField26, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup().addComponent(jLabel25).addGap(18, 18, 18).addComponent(jTextField19, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup().addComponent(jLabel24).addGap(18, 18, 18).addComponent(jTextField18, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup().addComponent(jLabel19).addGap(18, 18, 18).addComponent(jTextField13, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup().addComponent(jLabel18).addGap(18, 18, 18).addComponent(jTextField12, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup().addComponent(jLabel36).addGap(18, 18, 18).addComponent(jTextField30, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup().addComponent(jLabel33).addGap(18, 18, 18).addComponent(jTextField27, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup().addComponent(jLabel31).addGap(18, 18, 18).addComponent(jTextField25, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup().addComponent(jLabel30).addGap(18, 18, 18).addComponent(jTextField24, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup().addComponent(jLabel29).addGap(18, 18, 18).addComponent(jTextField23, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup().addComponent(jLabel28).addGap(18, 18, 18).addComponent(jTextField22, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup().addComponent(jLabel27).addGap(18, 18, 18).addComponent(jTextField21, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup().addComponent(jLabel26).addGap(18, 18, 18).addComponent(jTextField20, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup().addComponent(jLabel23).addGap(18, 18, 18).addComponent(jTextField17, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup().addComponent(jLabel22).addGap(18, 18, 18).addComponent(jTextField16, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup().addComponent(jLabel17).addGap(18, 18, 18).addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup().addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel10).addComponent(jLabel5).addComponent(jLabel9).addComponent(jLabel2).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel11).addComponent(jLabel12).addComponent(jLabel13))).addComponent(jLabel14).addComponent(jLabel15).addComponent(jLabel16)).addGap(28, 28, 28).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))).addGroup(jPanel6Layout.createSequentialGroup().addComponent(jLabel21).addGap(18, 18, 18).addComponent(jTextField15, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE).addGap(1, 1, 1)).addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup().addComponent(jLabel20).addGap(18, 18, 18).addComponent(jTextField14, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))).addGroup(jPanel6Layout.createSequentialGroup().addComponent(jLabel37).addGap(18, 18, 18).addComponent(jTextField31, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(jPanel6Layout.createSequentialGroup().addComponent(jLabel38).addGap(18, 18, 18).addComponent(jTextField32, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(jPanel6Layout.createSequentialGroup().addComponent(jLabel39).addGap(18, 18, 18).addComponent(jTextField33, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(jPanel6Layout.createSequentialGroup().addComponent(jLabel40).addGap(18, 18, 18).addComponent(jTextField34, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(jPanel6Layout.createSequentialGroup().addComponent(jLabel41).addGap(18, 18, 18).addComponent(jTextField35, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(jPanel6Layout.createSequentialGroup().addComponent(jLabel42).addGap(18, 18, 18).addComponent(jTextField36, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(jPanel6Layout.createSequentialGroup().addComponent(jLabel43).addGap(18, 18, 18).addComponent(jTextField37, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(jPanel6Layout.createSequentialGroup().addComponent(jLabel44).addGap(18, 18, 18).addComponent(jTextField38, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(jPanel6Layout.createSequentialGroup().addComponent(jLabel45).addGap(18, 18, 18).addComponent(jTextField39, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(jPanel6Layout.createSequentialGroup().addComponent(jLabel46).addGap(18, 18, 18).addComponent(jTextField40, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(jPanel6Layout.createSequentialGroup().addComponent(jLabel47).addGap(18, 18, 18).addComponent(jTextField41, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))).addGap(0, 39, Short.MAX_VALUE)));&#xD;
    jPanel6Layout.setVerticalGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel6Layout.createSequentialGroup().addContainerGap().addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel2).addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel5).addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel9).addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel10).addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel11).addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel12).addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel13).addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel14).addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel15).addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel16).addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel17).addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel18).addComponent(jTextField12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel19).addComponent(jTextField13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel20).addComponent(jTextField14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel21).addComponent(jTextField15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel22).addComponent(jTextField16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel23).addComponent(jTextField17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel24).addComponent(jTextField18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel25).addComponent(jTextField19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel26).addComponent(jTextField20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel27).addComponent(jTextField21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel28).addComponent(jTextField22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel29).addComponent(jTextField23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel30).addComponent(jTextField24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel31).addComponent(jTextField25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel32).addComponent(jTextField26, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel33).addComponent(jTextField27, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel34).addComponent(jTextField28, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel35).addComponent(jTextField29, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel36).addComponent(jTextField30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel37).addComponent(jTextField31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel38).addComponent(jTextField32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel39).addComponent(jTextField33, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel40).addComponent(jTextField34, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel41).addComponent(jTextField35, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel42).addComponent(jTextField36, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel43).addComponent(jTextField37, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel44).addComponent(jTextField38, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel45).addComponent(jTextField39, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel46).addComponent(jTextField40, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel47).addComponent(jTextField41, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jScrollPane2.setViewportView(jPanel6);&#xD;
    javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);&#xD;
    jPanel3.setLayout(jPanel3Layout);&#xD;
    jPanel3Layout.setHorizontalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel3Layout.createSequentialGroup().addContainerGap().addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel3Layout.createSequentialGroup().addGap(12, 12, 12).addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 254, Short.MAX_VALUE)).addGroup(jPanel3Layout.createSequentialGroup().addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel3Layout.createSequentialGroup().addGap(12, 12, 12).addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)).addComponent(jrbnew).addComponent(jrbavailable)).addGap(0, 0, Short.MAX_VALUE))).addContainerGap()));&#xD;
    jPanel3Layout.setVerticalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel3Layout.createSequentialGroup().addComponent(jrbavailable).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jrbnew).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE).addContainerGap()));&#xD;
    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());&#xD;
    getContentPane().setLayout(layout);&#xD;
    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(layout.createSequentialGroup().addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))));&#xD;
    layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(layout.createSequentialGroup().addContainerGap().addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)));&#xD;
    pack();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bAwAAGWNEei0cbjpkrd07g" name="formWindowClosed">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_formWindowClosed&#xD;
    try {&#xD;
        if (close) {&#xD;
            ia.saveUnfinishedExperiment(this, 6);&#xD;
            close = false;&#xD;
        } else {&#xD;
        }&#xD;
    } catch (IOException ex) {&#xD;
        Logger.getLogger(Step3_3.class.getName()).log(Level.SEVERE, null, ex);&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bA1fkGWNEei0cbjpkrd07g" name="jbBackActionPerformed" specification="_bAycQGWNEei0cbjpkrd07g">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jbBackActionPerformed&#xD;
    close = false;&#xD;
    imp.deleteRoi();&#xD;
    Step3_2 s1i = new Step3_2(imp, ia, darkbg, null);&#xD;
    BandManager bm = s1i.getBm();&#xD;
    bm.delete_without_asking(false);&#xD;
    if (ia.m.finallanes != null) {&#xD;
        for (int i = 0; i &lt; ia.m.finallanes.length; i++) {&#xD;
            int[] positionbands = ia.m.finallanes[i].getPositionbands();&#xD;
            if (positionbands != null) {&#xD;
                for (int b : positionbands) {&#xD;
                    Roi r0 = ia.m.finallanes[i].getRoi();&#xD;
                    int r0x = r0.getBounds().x;&#xD;
                    int r0y = r0.getBounds().y;&#xD;
                    int w = r0.getBounds().width;&#xD;
                    Rectangle r = new Rectangle(r0x, r0y + b - 1, w, 2);&#xD;
                    Roi r1 = rectangleintersectionroi(r0, r);&#xD;
                    r1.setFillColor(ia.m.getColour());&#xD;
                    bm.add(imp, r1, 0, i);&#xD;
                    bm.showAll(0);&#xD;
                }&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    bm.requestFocus();&#xD;
    this.dispose();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bA3UwGWNEei0cbjpkrd07g" name="jButton2ActionPerformed" specification="_bA1fkWWNEei0cbjpkrd07g">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton2ActionPerformed&#xD;
    close = false;&#xD;
    this.setAlwaysOnTop(false);&#xD;
    imp.getWindow().setAlwaysOnTop(false);&#xD;
    int[] indexes = indexesstandardlanes(ia.m.finallanes);&#xD;
    // and the molecular wheights for the bands of the standard.&#xD;
    if (jrbnew.isSelected()) {&#xD;
        ArrayList&lt;String> names = readstandardsavailable();&#xD;
        double temp;&#xD;
        int fail = -1;&#xD;
        String newname = jTextField1.getText();&#xD;
        JTextField[] textFields = { jTextField2, jTextField3, jTextField4, jTextField5, jTextField6, jTextField7, jTextField8, jTextField9, jTextField10, jTextField11, jTextField12, jTextField13, jTextField14, jTextField15, jTextField16, jTextField17, jTextField18, jTextField19, jTextField20, jTextField21, jTextField22, jTextField23, jTextField24, jTextField25, jTextField26, jTextField27, jTextField28, jTextField29, jTextField30, jTextField31, jTextField32, jTextField33, jTextField34, jTextField35, jTextField36, jTextField37, jTextField38, jTextField39, jTextField40, jTextField41 };&#xD;
        if (names.contains(newname)) {&#xD;
            JOptionPane.showMessageDialog(this, &quot;There is already a standard called &quot; + newname + &quot;.&quot;, &quot;Error&quot;, JOptionPane.ERROR_MESSAGE);&#xD;
            return;&#xD;
        }&#xD;
        if (newname.equals(&quot;&quot;)) {&#xD;
            JOptionPane.showMessageDialog(this, &quot;The name of the standard should not be empty.&quot;, &quot;Error&quot;, JOptionPane.ERROR_MESSAGE);&#xD;
            return;&#xD;
        }&#xD;
        //            int[] indexes = indexesstandardlanes(ia.m.finallanes);&#xD;
        double[] res = getvalues(textFields, ia.m.finallanes[indexes[0]].getPositionbands().length);&#xD;
        if (res == null) {&#xD;
            return;&#xD;
        }&#xD;
        if (!(sorted(res))) {&#xD;
            JOptionPane.showMessageDialog(this, &quot;The values of the bands are not sorted.&quot;, &quot;Error&quot;, JOptionPane.ERROR_MESSAGE);&#xD;
            return;&#xD;
        }&#xD;
        try {&#xD;
            rm.close();&#xD;
            ia.m.setMarker(newname);&#xD;
            save_standard(newname, res);&#xD;
        } catch (FileNotFoundException ex) {&#xD;
            Logger.getLogger(Step3_3.class.getName()).log(Level.SEVERE, null, ex);&#xD;
        } catch (UnsupportedEncodingException ex) {&#xD;
            Logger.getLogger(Step3_3.class.getName()).log(Level.SEVERE, null, ex);&#xD;
        }&#xD;
        for (int i = 0; i &lt; indexes.length; i++) {&#xD;
            ia.m.finallanes[indexes[i]].setStdpositionbands(res);&#xD;
        }&#xD;
        PleaseWait pw = new PleaseWait(this, false);&#xD;
        pw.setVisible(true);&#xD;
        pw.toFront();&#xD;
        CurveCalibration cc = new CurveCalibration(intarraytodoublearray(ia.m.finallanes[indexes[0]].getPositionbands()), ia.m.finallanes[indexes[0]].getStdpositionbands(), ia.m, ia, this);&#xD;
        pw.dispose();&#xD;
        ia.m.normalisation = true;&#xD;
    } else {&#xD;
        // If she chooses an available standard, we check that the standard contains&#xD;
        // as much molecular weights as bands in the image. In such a case, we assign&#xD;
        // the values; otherwise, we ask the user to remove/add the molecular weights that &#xD;
        // do not appear in the image. &#xD;
        String file = (String) jComboBox1.getSelectedItem();&#xD;
        ia.m.setMarker(file);&#xD;
        double[] stdvalues;&#xD;
        try {&#xD;
            stdvalues = readstandardfromfile(file);&#xD;
        } catch (IOException ex) {&#xD;
            Logger.getLogger(Step3_3.class.getName()).log(Level.SEVERE, null, ex);&#xD;
            return;&#xD;
        }&#xD;
        if (stdvalues.length == ia.m.finallanes[indexes[0]].getPositionbands().length) {&#xD;
            for (int i = 0; i &lt; indexes.length; i++) {&#xD;
                ia.m.finallanes[indexes[i]].setStdpositionbands(stdvalues);&#xD;
            }&#xD;
        } else {&#xD;
            JOptionPane.showMessageDialog(this, &quot;The standard contains &quot; + stdvalues.length + &quot; elements,&quot; + &quot; but the reference lane contains &quot; + ia.m.finallanes[indexes[0]].getPositionbands().length + &quot; bands. Please, add or remove the necessary values.&quot;);&#xD;
            /////////////////////////////////////////////////////////////&#xD;
            NormaliseManager rm = new NormaliseManager();&#xD;
            int[] positionbands = ia.m.finallanes[indexes[0]].getPositionbands();&#xD;
            if (positionbands != null) {&#xD;
                for (int b : positionbands) {&#xD;
                    Roi r0 = ia.m.finallanes[indexes[0]].getRoi();&#xD;
                    int r0x = r0.getBounds().x;&#xD;
                    int r0y = r0.getBounds().y;&#xD;
                    int w = r0.getBounds().width;&#xD;
                    Rectangle r = new Rectangle(r0x, r0y + b - 1, w, 2);&#xD;
                    Roi r1 = rectangleintersectionroi(r0, r);&#xD;
                    rm.add(imp, r1, 0);&#xD;
                    rm.showAll(0);&#xD;
                }&#xD;
            }&#xD;
            /////////////////////////////////////////////////////////////////// &#xD;
            GenericDialog gdG2 = new GenericDialog(&quot;List of values&quot;);&#xD;
            ListofValues lp = new ListofValues();&#xD;
            lp.init();&#xD;
            lp.addelements(stdvalues);&#xD;
            gdG2.add(lp);&#xD;
            gdG2.addMessage(&quot;&quot;);&#xD;
            gdG2.showDialog();&#xD;
            while (stdvalues.length != ia.m.finallanes[indexes[0]].getPositionbands().length) {&#xD;
                if (gdG2.wasCanceled()) {&#xD;
                    gdG2.dispose();&#xD;
                    return;&#xD;
                }&#xD;
                if (gdG2.wasOKed()) {&#xD;
                    stdvalues = lp.getelements();&#xD;
                    if (stdvalues.length != ia.m.finallanes[indexes[0]].getPositionbands().length) {&#xD;
                        JOptionPane.showMessageDialog(this, &quot;The standard contains &quot; + stdvalues.length + &quot; elements,&quot; + &quot; but the reference lane contains &quot; + ia.m.finallanes[indexes[0]].getPositionbands().length + &quot; bands.&quot;);&#xD;
                        gdG2.dispose();&#xD;
                        gdG2 = new GenericDialog(&quot;List of values&quot;);&#xD;
                        lp = new ListofValues();&#xD;
                        lp.init();&#xD;
                        lp.addelements(stdvalues);&#xD;
                        gdG2.add(lp);&#xD;
                        gdG2.addMessage(&quot;&quot;);&#xD;
                        gdG2.showDialog();&#xD;
                    }&#xD;
                }&#xD;
            }&#xD;
            rm.close();&#xD;
            ia.m.setInitialoffset(ia.m.finallanes[indexes[0]].getPositionbands()[0]);&#xD;
            double tempoffset = 0;&#xD;
            for (int i = 0; i &lt; indexes.length; i++) {&#xD;
                ia.m.finallanes[indexes[i]].setStdpositionbands(stdvalues);&#xD;
                tempoffset = ia.m.getInitialoffset() - ia.m.finallanes[indexes[i]].getPositionbands()[0];&#xD;
                ia.m.finallanes[indexes[i]].setOffset(tempoffset);&#xD;
            }&#xD;
        }&#xD;
        // Finally, we ask the user to select the calibration method. &#xD;
        PleaseWait pw = new PleaseWait(this, false);&#xD;
        pw.setVisible(true);&#xD;
        pw.toFront();&#xD;
        try {&#xD;
            //            CurveCalibration cc = new CurveCalibration(&#xD;
            //                    intarraytodoublearray(ia.m.finallanes[indexes[0]].getPositionbands()),&#xD;
            //                    ia.m.finallanes[indexes[0]].getStdpositionbands(),&#xD;
            //                    ia.m, ia, this);&#xD;
            this.dispose();&#xD;
            ia.finishnormalisation();&#xD;
        } catch (UnsupportedEncodingException ex) {&#xD;
            Logger.getLogger(Step3_3.class.getName()).log(Level.SEVERE, null, ex);&#xD;
        } catch (IOException ex) {&#xD;
            Logger.getLogger(Step3_3.class.getName()).log(Level.SEVERE, null, ex);&#xD;
        }&#xD;
        pw.dispose();&#xD;
    }&#xD;
    ia.m.normalisation = true;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bA8NQGWNEei0cbjpkrd07g" name="jrbnewItemStateChanged">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jrbnewItemStateChanged&#xD;
    JTextField[] textfields = { jTextField1, jTextField2, jTextField3, jTextField4, jTextField5, jTextField6, jTextField7, jTextField8, jTextField9, jTextField10, jTextField11, jTextField12, jTextField13, jTextField14, jTextField15, jTextField16, jTextField17, jTextField18, jTextField19, jTextField20, jTextField21, jTextField22, jTextField23, jTextField24, jTextField25, jTextField26, jTextField27, jTextField28, jTextField29, jTextField30, jTextField31, jTextField32, jTextField33, jTextField34, jTextField35, jTextField36, jTextField37, jTextField38, jTextField39, jTextField40, jTextField41 };&#xD;
    if (jrbnew.isSelected()) {&#xD;
        disable_enable_textFields(textfields, true);&#xD;
        jComboBox1.setEnabled(false);&#xD;
    } else {&#xD;
        disable_enable_textFields(textfields, false);&#xD;
        jComboBox1.setEnabled(true);&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bBBFwGWNEei0cbjpkrd07g" name="jrbavailableItemStateChanged">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jrbavailableItemStateChanged&#xD;
    JTextField[] textfields = { jTextField1, jTextField2, jTextField3, jTextField4, jTextField5, jTextField6, jTextField7, jTextField8, jTextField9, jTextField10, jTextField11, jTextField12, jTextField13, jTextField14, jTextField15, jTextField16, jTextField17, jTextField18, jTextField19, jTextField20, jTextField21, jTextField22, jTextField23, jTextField24, jTextField25, jTextField26, jTextField27, jTextField28, jTextField29, jTextField30, jTextField31, jTextField32, jTextField33, jTextField34, jTextField35, jTextField36, jTextField37, jTextField38, jTextField39, jTextField40, jTextField41 };&#xD;
    if (jrbavailable.isSelected()) {&#xD;
        disable_enable_textFields(textfields, false);&#xD;
        jComboBox1.setEnabled(true);&#xD;
    } else {&#xD;
        disable_enable_textFields(textfields, true);&#xD;
        jComboBox1.setEnabled(false);&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bBHzcGWNEei0cbjpkrd07g" name="sorted">
                  <language>JAVA</language>
                  <body>&#xD;
    for (int i = 0; i &lt; res.length - 1; i++) {&#xD;
        if (res[i] &lt; res[i + 1]) {&#xD;
            return false;&#xD;
        }&#xD;
    }&#xD;
    return true;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bBXrEGWNEei0cbjpkrd07g" name="initiatenecessarytextFields">
                  <language>JAVA</language>
                  <body>&#xD;
    for (int i = n; i &lt; textFields.length; i++) {&#xD;
        textFields[i].setVisible(false);&#xD;
        labels[i].setVisible(false);&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bBe_0GWNEei0cbjpkrd07g" name="disable_enable_textFields">
                  <language>JAVA</language>
                  <body>&#xD;
    for (int i = 0; i &lt; textFields.length; i++) {&#xD;
        textFields[i].setEnabled(enable);&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bBoJwGWNEei0cbjpkrd07g" name="getvalues">
                  <language>JAVA</language>
                  <body>&#xD;
    double[] res = new double[n];&#xD;
    double temp;&#xD;
    for (int i = 0; i &lt; n; i++) {&#xD;
        try {&#xD;
            temp = Double.parseDouble(textFields[i].getText());&#xD;
        } catch (NumberFormatException e) {&#xD;
            JOptionPane.showMessageDialog(this, &quot;You must introduce numerical values.&quot;, &quot;Error&quot;, JOptionPane.ERROR_MESSAGE);&#xD;
            return null;&#xD;
        }&#xD;
        if (temp &lt; 0) {&#xD;
            JOptionPane.showMessageDialog(this, &quot;You must introduce positive values.&quot;, &quot;Error&quot;, JOptionPane.ERROR_MESSAGE);&#xD;
            return null;&#xD;
        }&#xD;
        res[i] = temp;&#xD;
    }&#xD;
    return res;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:StateMachine" xmi:id="__E6J0I5VEeie3Y8fpsu39w" name="StateMachine1">
                  <region xmi:type="uml:Region" xmi:id="__72Y4I5VEeie3Y8fpsu39w" name="Region1">
                    <transition xmi:type="uml:Transition" xmi:id="_DPes0I5WEeie3Y8fpsu39w" source="_Ci23YI5WEeie3Y8fpsu39w" target="_CS1eYI5WEeie3Y8fpsu39w">
                      <trigger xmi:type="uml:Trigger" xmi:id="_JdB0MI5WEeie3Y8fpsu39w" event="_JTTQcI5WEeie3Y8fpsu39w"/>
                    </transition>
                    <transition xmi:type="uml:Transition" xmi:id="_DoS1cI5WEeie3Y8fpsu39w" source="_CS1eYI5WEeie3Y8fpsu39w" target="_CxrWgI5WEeie3Y8fpsu39w">
                      <trigger xmi:type="uml:Trigger" xmi:id="_NARRcI5WEeie3Y8fpsu39w" event="_M24E4I5WEeie3Y8fpsu39w"/>
                    </transition>
                    <transition xmi:type="uml:Transition" xmi:id="_D_bjEI5WEeie3Y8fpsu39w" source="_CS1eYI5WEeie3Y8fpsu39w" target="_CxrWgI5WEeie3Y8fpsu39w">
                      <trigger xmi:type="uml:Trigger" xmi:id="_RdbZQI5WEeie3Y8fpsu39w" event="_RSeGcI5WEeie3Y8fpsu39w"/>
                    </transition>
                    <subvertex xmi:type="uml:State" xmi:id="_CS1eYI5WEeie3Y8fpsu39w" name="State1"/>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_Ci23YI5WEeie3Y8fpsu39w" name="Initial1"/>
                    <subvertex xmi:type="uml:State" xmi:id="_CxrWgI5WEeie3Y8fpsu39w" name="State2"/>
                  </region>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_bAStAGWNEei0cbjpkrd07g" name="Step3_3" visibility="public" method="_bAYzoGWNEei0cbjpkrd07g">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_bAXlgGWNEei0cbjpkrd07g" name="imp" type="_a5Za0GWNEei0cbjpkrd07g"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_bAbP4GWNEei0cbjpkrd07g" name="Step3_3" visibility="public" method="_bAkZ0GWNEei0cbjpkrd07g">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_bAgvcGWNEei0cbjpkrd07g" name="imp" type="_a5Za0GWNEei0cbjpkrd07g"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_bAh9kGWNEei0cbjpkrd07g" name="aThis" type="_a5ikwGWNEei0cbjpkrd07g"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_bAjywGWNEei0cbjpkrd07g" name="darkbg">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_bAycQGWNEei0cbjpkrd07g" name="jbBackActionPerformed" visibility="private" method="_bA1fkGWNEei0cbjpkrd07g">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_bA0RcGWNEei0cbjpkrd07g" name="evt" type="_a6tpcGWNEei0cbjpkrd07g"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_bA1fkWWNEei0cbjpkrd07g" name="jButton2ActionPerformed" visibility="private" method="_bA3UwGWNEei0cbjpkrd07g">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_bA2GoGWNEei0cbjpkrd07g" name="evt" type="_a6tpcGWNEei0cbjpkrd07g"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_bE45IGWNEei0cbjpkrd07g" name="Step4_1" visibility="public" classifierBehavior="_7WMNoI5bEeie3Y8fpsu39w">
                <generalization xmi:type="uml:Generalization" xmi:id="_JKAWhW4VEei47fqiwvb5mw" general="_a0hh4GWNEei0cbjpkrd07g"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bE6HQWWNEei0cbjpkrd07g" name="close" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_bE6uUGWNEei0cbjpkrd07g" name="defaultValue">
                    <language>JAVA</language>
                    <body>true</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bE6uUWWNEei0cbjpkrd07g" name="imp" visibility="private" type="_a5Za0GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bE7VYGWNEei0cbjpkrd07g" name="ia" visibility="private" type="_a5ikwGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bE9xoGWNEei0cbjpkrd07g" name="bm" visibility="private" type="_a5orYGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bE_m0GWNEei0cbjpkrd07g" name="darkbg" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bF8CAGWNEei0cbjpkrd07g" name="buttonGroup1" visibility="private" type="_a70csGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bF8pEGWNEei0cbjpkrd07g" name="jButton2" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bF8pEWWNEei0cbjpkrd07g" name="jComboBox1" visibility="private" type="_a8X2UGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bF8pEmWNEei0cbjpkrd07g" name="jLabel1" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bF9QIGWNEei0cbjpkrd07g" name="jLabel2" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bF93MGWNEei0cbjpkrd07g" name="jLabel3" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bF-eQGWNEei0cbjpkrd07g" name="jLabel4" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bF_FUGWNEei0cbjpkrd07g" name="jLabel5" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bGBhkGWNEei0cbjpkrd07g" name="jLabel6" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bGD90GWNEei0cbjpkrd07g" name="jLabel7" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bGEk4GWNEei0cbjpkrd07g" name="jLabel8" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bGEk4WWNEei0cbjpkrd07g" name="jLabel9" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bGFL8GWNEei0cbjpkrd07g" name="jPanel1" visibility="private" type="_a8yGAGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bGFL8WWNEei0cbjpkrd07g" name="jPanel2" visibility="private" type="_a8yGAGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bGFL8mWNEei0cbjpkrd07g" name="jPanel3" visibility="private" type="_a8yGAGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bGFzAGWNEei0cbjpkrd07g" name="jPanel4" visibility="private" type="_a8yGAGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bGFzAWWNEei0cbjpkrd07g" name="jPanel5" visibility="private" type="_a8yGAGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bGFzAmWNEei0cbjpkrd07g" name="jScrollPane1" visibility="private" type="_a9Dy0GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bGI2UGWNEei0cbjpkrd07g" name="jSlider1" visibility="private" type="_bGFzA2WNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bGLSkGWNEei0cbjpkrd07g" name="jTextArea1" visibility="private" type="_a9IrUGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bGNu0GWNEei0cbjpkrd07g" name="jbBack" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_ZFDFUHRUEei3ud9vrLTCZg" name="threshold">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bFG7kGWNEei0cbjpkrd07g" name="Step4_1" specification="_bFCDEGWNEei0cbjpkrd07g">
                  <language>JAVA</language>
                  <body>&#xD;
    super();&#xD;
    initComponents();&#xD;
    this.imp = imp;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bFXaQGWNEei0cbjpkrd07g" name="Step4_1" specification="_bFJX0GWNEei0cbjpkrd07g">
                  <language>JAVA</language>
                  <body>&#xD;
    super();&#xD;
    initComponents();&#xD;
    this.imp = imp;&#xD;
    this.ia = aThis;&#xD;
    this.darkbg = darkbg;&#xD;
    IJ.setTool(&quot;point&quot;);&#xD;
    bm = new BandManager(ia.m);&#xD;
    bm.delete_without_asking(true);&#xD;
    bm.setbgcheckboxstate(darkbg);&#xD;
    bm.setVisible(false);&#xD;
    Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();&#xD;
    double width = screenSize.getWidth();&#xD;
    setVisible(true);&#xD;
    setLocation((int) width - 515, 0);&#xD;
    imp.getWindow().setAlwaysOnTop(true);&#xD;
    setAlwaysOnTop(true);&#xD;
    toFront();&#xD;
    int threshold = StandardUtils.readexperimentconfig();&#xD;
    if (threshold != -1) {&#xD;
        jSlider1.setValue(threshold);&#xD;
    }&#xD;
    globalselectbands();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bFbrsGWNEei0cbjpkrd07g" name="getBm">
                  <language>JAVA</language>
                  <body>&#xD;
    return bm;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bFevAGWNEei0cbjpkrd07g" name="globalselectbands">
                  <language>JAVA</language>
                  <body>&#xD;
    double tolerance = jSlider1.getValue();&#xD;
    int colour = jComboBox1.getSelectedIndex();&#xD;
    Color c;&#xD;
    switch(colour) {&#xD;
        case BLUE:&#xD;
            c = Color.BLUE;&#xD;
            break;&#xD;
        case RED:&#xD;
            c = Color.RED;&#xD;
            break;&#xD;
        case GREEN:&#xD;
            c = Color.GREEN;&#xD;
            break;&#xD;
        case MAGENTA:&#xD;
            c = Color.MAGENTA;&#xD;
            break;&#xD;
        case CYAN:&#xD;
            c = Color.CYAN;&#xD;
            break;&#xD;
        case YELLOW:&#xD;
            c = Color.YELLOW;&#xD;
            break;&#xD;
        case ORANGE:&#xD;
            c = Color.ORANGE;&#xD;
            break;&#xD;
        default:&#xD;
            c = Color.BLUE;&#xD;
            break;&#xD;
    }&#xD;
    Prefs.verticalProfile = true;&#xD;
    bm.delete_without_asking(true);&#xD;
    bm.restart_bands();&#xD;
    ImageProcessor ip = imp.getProcessor();&#xD;
    int w = imp.getWidth() / ia.m.finallanes.length;&#xD;
    int h = imp.getHeight();&#xD;
    for (int i = 0; i &lt; ia.m.finallanes.length; i++) {&#xD;
        //            Roi r0 = ia.m.finallanes[i].getRoi();&#xD;
        int x0 = i * w + w / 2;&#xD;
        int y0 = 0;&#xD;
        int x1 = i * w + w / 2;&#xD;
        int y1 = h;&#xD;
        Line l0 = new Line(x0, y0, x1, y1);&#xD;
        l0.setWidth(15);&#xD;
        imp.setRoi(l0);&#xD;
        // Finding the peaks of the profile&#xD;
        if ((!darkbg &amp;&amp; !imp.isInvertedLut()) || imp.isInvertedLut()) {&#xD;
            ip.invert();&#xD;
        }&#xD;
        //ProfilePlot pp = new ProfilePlot(imp);&#xD;
        double[] profile = ia.m.finallanes[i].getProfile();&#xD;
        if ((!darkbg &amp;&amp; !imp.isInvertedLut()) || imp.isInvertedLut()) {&#xD;
            ip.invert();&#xD;
        }&#xD;
        l0.setWidth(1);&#xD;
        int[] maxima = MaximumFinder.findMaxima(profile, 2, true);&#xD;
        int[] htt = higherthantolerance(maxima, profile, tolerance);&#xD;
        Arrays.sort(htt);&#xD;
        // Showing the lines&#xD;
        int r0x = i * w;&#xD;
        int r0y = 0;&#xD;
        Roi r0 = new Roi(r0x, r0y, w, h);&#xD;
        int[] positionsy = new int[htt.length];&#xD;
        for (int k = 0; k &lt; htt.length; k++) {&#xD;
            positionsy[k] = r0y + htt[k];&#xD;
        }&#xD;
        for (int j = 0; j &lt; htt.length; j++) {&#xD;
            /*Line line = new Line(r0x, r0y + htt[j], r0x + w, r0y + htt[j]);
                 Line lineintersection = lineintersectionroi(r0,line);*/&#xD;
            Rectangle r = new Rectangle(r0x, r0y + htt[j], w, 2);&#xD;
            Roi r1 = rectangleintersectionroi(r0, r);&#xD;
            if (!ia.m.finallanes[i].isIsstandard()) {&#xD;
                r1.setFillColor(c);&#xD;
                bm.add(imp, r1, j, i);&#xD;
            }&#xD;
        //bm.add(imp, line, j);&#xD;
        }&#xD;
    //m.finallanes[i].setProfile(profile);&#xD;
    //m.finallanes[i].setPositionbands(positionsy);&#xD;
    }&#xD;
    bm.showAll(0);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bFsKYGWNEei0cbjpkrd07g" name="lineintersectionroi">
                  <language>JAVA</language>
                  <body>&#xD;
    Line line;&#xD;
    int[] xpointsl = l.getPoints().xpoints;&#xD;
    int[] ypointsl = l.getPoints().ypoints;&#xD;
    int len = xpointsl.length;&#xD;
    Boolean inside = false;&#xD;
    int x0 = xpointsl[0];&#xD;
    int y0 = ypointsl[0];&#xD;
    int x1 = xpointsl[len - 1];&#xD;
    int y1 = ypointsl[len - 1];&#xD;
    for (int i = 1; i &lt; len; i++) {&#xD;
        if (!inside) {&#xD;
            if (r.contains(xpointsl[i], ypointsl[i])) {&#xD;
                x0 = xpointsl[i];&#xD;
                y0 = ypointsl[i];&#xD;
                inside = true;&#xD;
            }&#xD;
        } else {&#xD;
            if (!r.contains(xpointsl[i], ypointsl[i])) {&#xD;
                x1 = xpointsl[i];&#xD;
                y1 = ypointsl[i];&#xD;
                line = new Line(x0, y0, x1, y1);&#xD;
                return line;&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    line = new Line(x0, y0, x1, y1);&#xD;
    return line;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bFwb0GWNEei0cbjpkrd07g" name="higherthantolerance">
                  <language>JAVA</language>
                  <body>&#xD;
    ArrayList&lt;Integer> res = new ArrayList&lt;Integer>();&#xD;
    for (int i = 0; i &lt; v.length; i++) {&#xD;
        if (p[v[i]] > tolerance) {&#xD;
            res.add(v[i]);&#xD;
        }&#xD;
    }&#xD;
    int[] ret = new int[res.size()];&#xD;
    for (int i = 0; i &lt; ret.length; i++) {&#xD;
        ret[i] = res.get(i);&#xD;
    }&#xD;
    return ret;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bFxp8WWNEei0cbjpkrd07g" name="movingaveragefilter">
                  <language>JAVA</language>
                  <body>&#xD;
    int lv = v.length;&#xD;
    double[] res = new double[lv];&#xD;
    // starting point &#xD;
    int sp;&#xD;
    // end point &#xD;
    int ep;&#xD;
    for (int i = 0; i &lt; lv; i++) {&#xD;
        sp = i - (avgpoints - 1) / 2;&#xD;
        if (sp &lt; 0) {&#xD;
            sp = 0;&#xD;
        }&#xD;
        ep = i + (avgpoints - 1) / 2;&#xD;
        if (ep >= lv) {&#xD;
            ep = lv - 1;&#xD;
        }&#xD;
        double partial_sum = 0;&#xD;
        for (int j = sp; j &lt;= ep; j++) {&#xD;
            partial_sum = partial_sum + v[j];&#xD;
        }&#xD;
        res[i] = partial_sum / (ep - sp + 1);&#xD;
    }&#xD;
    return res;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bFy4EGWNEei0cbjpkrd07g" name="higherthanvalue">
                  <language>JAVA</language>
                  <body>&#xD;
    if (from_end) {&#xD;
        int pos = 0;&#xD;
        for (int i = 0; i &lt; v.length; i++) {&#xD;
            if (value &lt; v[i]) {&#xD;
                return i;&#xD;
            }&#xD;
        }&#xD;
        return pos;&#xD;
    } else {&#xD;
        int pos = v.length - 1;&#xD;
        for (int i = v.length - 1; i >= 0; i--) {&#xD;
            if (value &lt; v[i]) {&#xD;
                return i;&#xD;
            }&#xD;
        }&#xD;
        return pos;&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bFzfIWWNEei0cbjpkrd07g" name="removeOverlay">
                  <language>JAVA</language>
                  <body>&#xD;
    if (imp != null &amp;&amp; imp.getCanvas() != null) {&#xD;
        setOverlay(imp, null);&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bF2icGWNEei0cbjpkrd07g" name="setOverlay">
                  <language>JAVA</language>
                  <body>&#xD;
    if (imp == null) {&#xD;
        return;&#xD;
    }&#xD;
    ImageCanvas ic = imp.getCanvas();&#xD;
    if (ic == null) {&#xD;
        imp.setOverlay(overlay);&#xD;
        return;&#xD;
    }&#xD;
    ic.setShowAllList(overlay);&#xD;
    imp.draw();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bF3wkGWNEei0cbjpkrd07g" name="initComponents">
                  <language>JAVA</language>
                  <body>&#xD;
    buttonGroup1 = new javax.swing.ButtonGroup();&#xD;
    jPanel4 = new javax.swing.JPanel();&#xD;
    jButton2 = new javax.swing.JButton();&#xD;
    jbBack = new javax.swing.JButton();&#xD;
    jPanel5 = new javax.swing.JPanel();&#xD;
    jLabel1 = new javax.swing.JLabel();&#xD;
    jLabel6 = new javax.swing.JLabel();&#xD;
    jLabel7 = new javax.swing.JLabel();&#xD;
    jLabel8 = new javax.swing.JLabel();&#xD;
    jLabel2 = new javax.swing.JLabel();&#xD;
    jLabel3 = new javax.swing.JLabel();&#xD;
    jLabel4 = new javax.swing.JLabel();&#xD;
    jPanel1 = new javax.swing.JPanel();&#xD;
    jPanel2 = new javax.swing.JPanel();&#xD;
    jScrollPane1 = new javax.swing.JScrollPane();&#xD;
    jTextArea1 = new javax.swing.JTextArea();&#xD;
    jPanel3 = new javax.swing.JPanel();&#xD;
    jSlider1 = new javax.swing.JSlider();&#xD;
    jLabel5 = new javax.swing.JLabel();&#xD;
    jLabel9 = new javax.swing.JLabel();&#xD;
    jComboBox1 = new javax.swing.JComboBox();&#xD;
    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);&#xD;
    setTitle(&quot;Image analysis&quot;);&#xD;
    setResizable(false);&#xD;
    addWindowListener(new java.awt.event.WindowAdapter() {&#xD;
&#xD;
        public void windowClosed(java.awt.event.WindowEvent evt) {&#xD;
            formWindowClosed(evt);&#xD;
        }&#xD;
    });&#xD;
    jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());&#xD;
    jButton2.setText(&quot;Next>&quot;);&#xD;
    jButton2.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton2ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jbBack.setText(&quot;Cancel&quot;);&#xD;
    jbBack.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbBackActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);&#xD;
    jPanel4.setLayout(jPanel4Layout);&#xD;
    jPanel4Layout.setHorizontalGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addComponent(jbBack).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButton2)));&#xD;
    jPanel4Layout.setVerticalGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jButton2).addComponent(jbBack))));&#xD;
    jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Steps&quot;)));&#xD;
    jPanel5.setForeground(new java.awt.Color(0, 17, 255));&#xD;
    jLabel1.setText(&quot;Step 1. Image preprocessing&quot;);&#xD;
    jLabel6.setText(&quot;Step 2. Lane detection&quot;);&#xD;
    jLabel7.setText(&quot;Step 4. Band detection&quot;);&#xD;
    jLabel8.setText(&quot;Step 3. Normalisation&quot;);&#xD;
    jLabel2.setForeground(new java.awt.Color(0, 15, 255));&#xD;
    jLabel2.setText(&quot;4.1. Global threshold&quot;);&#xD;
    jLabel3.setText(&quot;4.2. Lane threshold&quot;);&#xD;
    jLabel4.setText(&quot;4.3. Band picking&quot;);&#xD;
    javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);&#xD;
    jPanel5.setLayout(jPanel5Layout);&#xD;
    jPanel5Layout.setHorizontalGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel5Layout.createSequentialGroup().addContainerGap().addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel1).addComponent(jLabel6).addComponent(jLabel7).addComponent(jLabel8).addGroup(jPanel5Layout.createSequentialGroup().addGap(12, 12, 12).addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel3).addComponent(jLabel2).addComponent(jLabel4)))).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jPanel5Layout.setVerticalGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel5Layout.createSequentialGroup().addContainerGap().addComponent(jLabel1).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel6).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel8).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel7).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel2).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel3).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel4).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Help&quot;));&#xD;
    jTextArea1.setEditable(false);&#xD;
    jTextArea1.setColumns(20);&#xD;
    jTextArea1.setRows(5);&#xD;
    jTextArea1.setText(&quot;In this step, you can fix a global \nthreshold to automatically locate\nthe bands of the image. Just move\nthe above scrollbar.\n\nYou can also select the colour of\nthe bands.&quot;);&#xD;
    jScrollPane1.setViewportView(jTextArea1);&#xD;
    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);&#xD;
    jPanel2.setLayout(jPanel2Layout);&#xD;
    jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 258, Short.MAX_VALUE));&#xD;
    jPanel2Layout.setVerticalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE));&#xD;
    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);&#xD;
    jPanel1.setLayout(jPanel1Layout);&#xD;
    jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));&#xD;
    jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup().addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)));&#xD;
    jSlider1.setMaximum(255);&#xD;
    jSlider1.setValue(150);&#xD;
    jSlider1.addChangeListener(new javax.swing.event.ChangeListener() {&#xD;
&#xD;
        public void stateChanged(javax.swing.event.ChangeEvent evt) {&#xD;
            jSlider1StateChanged(evt);&#xD;
        }&#xD;
    });&#xD;
    jLabel5.setText(&quot;Threshold:&quot;);&#xD;
    jLabel9.setText(&quot;Colour:&quot;);&#xD;
    jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { &quot;blue&quot;, &quot;red&quot;, &quot;green&quot;, &quot;magenta&quot;, &quot;cyan&quot;, &quot;yellow&quot;, &quot;orange&quot; }));&#xD;
    jComboBox1.addItemListener(new java.awt.event.ItemListener() {&#xD;
&#xD;
        public void itemStateChanged(java.awt.event.ItemEvent evt) {&#xD;
            jComboBox1ItemStateChanged(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);&#xD;
    jPanel3.setLayout(jPanel3Layout);&#xD;
    jPanel3Layout.setHorizontalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jSlider1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(jPanel3Layout.createSequentialGroup().addContainerGap().addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel3Layout.createSequentialGroup().addComponent(jLabel5).addGap(0, 0, Short.MAX_VALUE)).addGroup(jPanel3Layout.createSequentialGroup().addComponent(jLabel9).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))).addContainerGap()));&#xD;
    jPanel3Layout.setVerticalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel3Layout.createSequentialGroup().addGap(21, 21, 21).addComponent(jLabel5).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addGap(18, 18, 18).addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel9).addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addContainerGap(198, Short.MAX_VALUE)));&#xD;
    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());&#xD;
    getContentPane().setLayout(layout);&#xD;
    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(layout.createSequentialGroup().addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))));&#xD;
    layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(layout.createSequentialGroup().addContainerGap().addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)));&#xD;
    pack();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bF4XoWWNEei0cbjpkrd07g" name="formWindowClosed">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_formWindowClosed&#xD;
    try {&#xD;
        if (close) {&#xD;
            ia.saveUnfinishedExperiment(this, 7);&#xD;
            close = false;&#xD;
        } else {&#xD;
        }&#xD;
    } catch (IOException ex) {&#xD;
        Logger.getLogger(Step4_1.class.getName()).log(Level.SEVERE, null, ex);&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bF5lwGWNEei0cbjpkrd07g" name="jbBackActionPerformed" specification="_bF4-sGWNEei0cbjpkrd07g">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jbBackActionPerformed&#xD;
    close = true;&#xD;
    this.dispose();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bF6M0GWNEei0cbjpkrd07g" name="jButton2ActionPerformed" specification="_bF5lwWWNEei0cbjpkrd07g">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton2ActionPerformed&#xD;
    close = false;&#xD;
    Color c = Color.BLUE;&#xD;
    switch(jComboBox1.getSelectedIndex()) {&#xD;
        case BLUE:&#xD;
            c = Color.BLUE;&#xD;
            break;&#xD;
        case RED:&#xD;
            c = Color.RED;&#xD;
            break;&#xD;
        case GREEN:&#xD;
            c = Color.GREEN;&#xD;
            break;&#xD;
        case MAGENTA:&#xD;
            c = Color.MAGENTA;&#xD;
            break;&#xD;
        case CYAN:&#xD;
            c = Color.CYAN;&#xD;
            break;&#xD;
        case YELLOW:&#xD;
            c = Color.YELLOW;&#xD;
            break;&#xD;
        case ORANGE:&#xD;
            c = Color.ORANGE;&#xD;
            break;&#xD;
        default:&#xD;
            c = Color.BLUE;&#xD;
            break;&#xD;
    }&#xD;
    ImageWindow iw = imp.getWindow();&#xD;
    iw.setLocked(false);&#xD;
    BandManagerCanvas cc = new BandManagerCanvas(imp);&#xD;
    ImageWindow iw2 = new ImageWindow(imp, cc);&#xD;
    iw2.setLocked(true);&#xD;
    iw.dispose();&#xD;
    int threshold = jSlider1.getValue();&#xD;
    try {&#xD;
        StandardUtils.save_experimentconfig(threshold);&#xD;
    } catch (FileNotFoundException ex) {&#xD;
        Logger.getLogger(Step4_1.class.getName()).log(Level.SEVERE, null, ex);&#xD;
    } catch (UnsupportedEncodingException ex) {&#xD;
        Logger.getLogger(Step4_1.class.getName()).log(Level.SEVERE, null, ex);&#xD;
    }&#xD;
    Step4_2 s = new Step4_2(imp, ia, darkbg, bm, threshold, c);&#xD;
    this.dispose();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bF6z4WWNEei0cbjpkrd07g" name="jSlider1StateChanged" specification="_bF6M0WWNEei0cbjpkrd07g">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jSlider1StateChanged&#xD;
    globalselectbands();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bF7a8mWNEei0cbjpkrd07g" name="jComboBox1ItemStateChanged">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jComboBox1ItemStateChanged&#xD;
    globalselectbands();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_7WMNoI5bEeie3Y8fpsu39w" name="StateMachine1">
                  <region xmi:type="uml:Region" xmi:id="_8nSpII5bEeie3Y8fpsu39w" name="Region1">
                    <transition xmi:type="uml:Transition" xmi:id="_-YVwAI5bEeie3Y8fpsu39w" source="_9GuXII5bEeie3Y8fpsu39w" target="_9hRlII5bEeie3Y8fpsu39w">
                      <trigger xmi:type="uml:Trigger" xmi:id="_KRz4YI5cEeie3Y8fpsu39w" event="_KHgF0I5cEeie3Y8fpsu39w"/>
                    </transition>
                    <transition xmi:type="uml:Transition" xmi:id="_-0KJUI5bEeie3Y8fpsu39w" source="_9hRlII5bEeie3Y8fpsu39w" target="_94l48I5bEeie3Y8fpsu39w">
                      <trigger xmi:type="uml:Trigger" xmi:id="_RNKg8I5cEeie3Y8fpsu39w" event="_REaNkI5cEeie3Y8fpsu39w"/>
                    </transition>
                    <transition xmi:type="uml:Transition" xmi:id="_A4OS0I5cEeie3Y8fpsu39w" source="_9hRlII5bEeie3Y8fpsu39w" target="_94l48I5bEeie3Y8fpsu39w">
                      <trigger xmi:type="uml:Trigger" xmi:id="_OSNywI5cEeie3Y8fpsu39w" event="_OLL9sI5cEeie3Y8fpsu39w"/>
                    </transition>
                    <transition xmi:type="uml:Transition" xmi:id="_BnpkoI5cEeie3Y8fpsu39w" source="_9hRlII5bEeie3Y8fpsu39w" target="_AdQOEI5cEeie3Y8fpsu39w">
                      <trigger xmi:type="uml:Trigger" xmi:id="_cIKO4I5cEeie3Y8fpsu39w" event="_cAC0sI5cEeie3Y8fpsu39w"/>
                    </transition>
                    <transition xmi:type="uml:Transition" xmi:id="_CAp6gI5cEeie3Y8fpsu39w" source="_AdQOEI5cEeie3Y8fpsu39w" target="_94l48I5bEeie3Y8fpsu39w">
                      <trigger xmi:type="uml:Trigger" xmi:id="_Uh62QI5cEeie3Y8fpsu39w" event="_UY2Z0I5cEeie3Y8fpsu39w"/>
                    </transition>
                    <transition xmi:type="uml:Transition" xmi:id="_Cn_AQI5cEeie3Y8fpsu39w" source="_AdQOEI5cEeie3Y8fpsu39w" target="_94l48I5bEeie3Y8fpsu39w">
                      <trigger xmi:type="uml:Trigger" xmi:id="_X1SrgI5cEeie3Y8fpsu39w" event="_XtXekI5cEeie3Y8fpsu39w"/>
                    </transition>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_9GuXII5bEeie3Y8fpsu39w" name="Initial1"/>
                    <subvertex xmi:type="uml:State" xmi:id="_9hRlII5bEeie3Y8fpsu39w" name="Activated"/>
                    <subvertex xmi:type="uml:State" xmi:id="_94l48I5bEeie3Y8fpsu39w" name="Finished"/>
                    <subvertex xmi:type="uml:State" xmi:id="_AdQOEI5cEeie3Y8fpsu39w" name="Threshold_modified"/>
                  </region>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_bFCDEGWNEei0cbjpkrd07g" name="Step4_1" visibility="public" method="_bFG7kGWNEei0cbjpkrd07g">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_bFGUgGWNEei0cbjpkrd07g" name="imp" type="_a5Za0GWNEei0cbjpkrd07g"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_bFJX0GWNEei0cbjpkrd07g" name="Step4_1" visibility="public" method="_bFXaQGWNEei0cbjpkrd07g" raisedException="_bFTv4GWNEei0cbjpkrd07g">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_bFO3YGWNEei0cbjpkrd07g" name="imp" type="_a5Za0GWNEei0cbjpkrd07g"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_bFQFgGWNEei0cbjpkrd07g" name="aThis" type="_a5ikwGWNEei0cbjpkrd07g"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_bFR6sGWNEei0cbjpkrd07g" name="darkbg">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_bF4-sGWNEei0cbjpkrd07g" name="jbBackActionPerformed" visibility="private" method="_bF5lwGWNEei0cbjpkrd07g">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_bF4-sWWNEei0cbjpkrd07g" name="evt" type="_a6tpcGWNEei0cbjpkrd07g"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_bF5lwWWNEei0cbjpkrd07g" name="jButton2ActionPerformed" visibility="private" method="_bF6M0GWNEei0cbjpkrd07g">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_bF5lwmWNEei0cbjpkrd07g" name="evt" type="_a6tpcGWNEei0cbjpkrd07g"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_bF6M0WWNEei0cbjpkrd07g" name="jSlider1StateChanged" visibility="private" method="_bF6z4WWNEei0cbjpkrd07g">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_bF6z4GWNEei0cbjpkrd07g" name="evt" type="_a7g6sGWNEei0cbjpkrd07g"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_bGWRsGWNEei0cbjpkrd07g" name="step1_1" visibility="public" classifierBehavior="_A-O5UHkVEeiGl6CJxvVzPQ">
                <generalization xmi:type="uml:Generalization" xmi:id="_JKAWhG4VEei47fqiwvb5mw" general="_a0hh4GWNEei0cbjpkrd07g"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bGYt8GWNEei0cbjpkrd07g" name="imp" visibility="private" type="_a5Za0GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bGZ8EGWNEei0cbjpkrd07g" name="ia" visibility="private" type="_a5ikwGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bGbKMGWNEei0cbjpkrd07g" name="close" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_bGeNgGWNEei0cbjpkrd07g" name="defaultValue">
                    <language>JAVA</language>
                    <body>true</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bG65cGWNEei0cbjpkrd07g" name="jBUndo" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bG8uoGWNEei0cbjpkrd07g" name="jButton2" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bG98wGWNEei0cbjpkrd07g" name="jLabel1" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bG_x8GWNEei0cbjpkrd07g" name="jLabel2" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bHBAEGWNEei0cbjpkrd07g" name="jLabel3" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bHC1QGWNEei0cbjpkrd07g" name="jLabel4" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bHEDYGWNEei0cbjpkrd07g" name="jLabel5" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bHF4kGWNEei0cbjpkrd07g" name="jLabel6" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bHHGsGWNEei0cbjpkrd07g" name="jLabel7" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bHIU0GWNEei0cbjpkrd07g" name="jLabel8" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bHJi8GWNEei0cbjpkrd07g" name="jPanel1" visibility="private" type="_a8yGAGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bHKxEGWNEei0cbjpkrd07g" name="jPanel2" visibility="private" type="_a8yGAGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bHMmQGWNEei0cbjpkrd07g" name="jPanel3" visibility="private" type="_a8yGAGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bHObcGWNEei0cbjpkrd07g" name="jPanel4" visibility="private" type="_a8yGAGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bHPpkGWNEei0cbjpkrd07g" name="jPanel5" visibility="private" type="_a8yGAGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bHRewGWNEei0cbjpkrd07g" name="jScrollPane1" visibility="private" type="_a9Dy0GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bHSF0GWNEei0cbjpkrd07g" name="jTextArea1" visibility="private" type="_a9IrUGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bHT7AGWNEei0cbjpkrd07g" name="jbCrop" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bGjtEGWNEei0cbjpkrd07g" name="step1_1" specification="_bGfboGWNEei0cbjpkrd07g">
                  <language>JAVA</language>
                  <body>&#xD;
    super();&#xD;
    initComponents();&#xD;
    this.imp = imp;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bGqawGWNEei0cbjpkrd07g" name="step1_1" specification="_bGliQGWNEei0cbjpkrd07g">
                  <language>JAVA</language>
                  <body>&#xD;
    initComponents();&#xD;
    this.imp = imp;&#xD;
    this.ia = aThis;&#xD;
    IJ.setTool(&quot;rectangle&quot;);&#xD;
    Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();&#xD;
    double width = screenSize.getWidth();&#xD;
    setVisible(true);&#xD;
    setLocation((int) width - 515, 0);&#xD;
    imp.getWindow().setAlwaysOnTop(true);&#xD;
    setAlwaysOnTop(true);&#xD;
    toFront();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bGro4GWNEei0cbjpkrd07g" name="initComponents">
                  <language>JAVA</language>
                  <body>&#xD;
    jPanel4 = new javax.swing.JPanel();&#xD;
    jButton2 = new javax.swing.JButton();&#xD;
    jPanel5 = new javax.swing.JPanel();&#xD;
    jLabel1 = new javax.swing.JLabel();&#xD;
    jLabel2 = new javax.swing.JLabel();&#xD;
    jLabel3 = new javax.swing.JLabel();&#xD;
    jLabel4 = new javax.swing.JLabel();&#xD;
    jLabel5 = new javax.swing.JLabel();&#xD;
    jLabel6 = new javax.swing.JLabel();&#xD;
    jLabel7 = new javax.swing.JLabel();&#xD;
    jLabel8 = new javax.swing.JLabel();&#xD;
    jPanel1 = new javax.swing.JPanel();&#xD;
    jPanel2 = new javax.swing.JPanel();&#xD;
    jScrollPane1 = new javax.swing.JScrollPane();&#xD;
    jTextArea1 = new javax.swing.JTextArea();&#xD;
    jPanel3 = new javax.swing.JPanel();&#xD;
    jbCrop = new javax.swing.JButton();&#xD;
    jBUndo = new javax.swing.JButton();&#xD;
    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);&#xD;
    setTitle(&quot;Image analysis&quot;);&#xD;
    setResizable(false);&#xD;
    addWindowListener(new java.awt.event.WindowAdapter() {&#xD;
&#xD;
        public void windowClosed(java.awt.event.WindowEvent evt) {&#xD;
            formWindowClosed(evt);&#xD;
        }&#xD;
    });&#xD;
    jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());&#xD;
    jButton2.setText(&quot;Next>&quot;);&#xD;
    jButton2.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton2ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);&#xD;
    jPanel4.setLayout(jPanel4Layout);&#xD;
    jPanel4Layout.setHorizontalGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addComponent(jButton2)));&#xD;
    jPanel4Layout.setVerticalGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addComponent(jButton2)));&#xD;
    jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Steps&quot;)));&#xD;
    jPanel5.setForeground(new java.awt.Color(0, 17, 255));&#xD;
    jLabel1.setText(&quot;Step 1. Image preprocessing&quot;);&#xD;
    jLabel2.setForeground(new java.awt.Color(0, 15, 255));&#xD;
    jLabel2.setText(&quot;1.1. Crop&quot;);&#xD;
    jLabel3.setText(&quot;1.2. Invert&quot;);&#xD;
    jLabel4.setText(&quot;1.3. Adjust contrast&quot;);&#xD;
    jLabel5.setText(&quot;1.4. Other operations&quot;);&#xD;
    jLabel6.setText(&quot;Step 2. Lane detection&quot;);&#xD;
    jLabel7.setText(&quot;Step 3. Normalisation&quot;);&#xD;
    jLabel8.setText(&quot;Step 4. Band detection&quot;);&#xD;
    javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);&#xD;
    jPanel5.setLayout(jPanel5Layout);&#xD;
    jPanel5Layout.setHorizontalGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel5Layout.createSequentialGroup().addContainerGap().addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel1).addGroup(jPanel5Layout.createSequentialGroup().addGap(12, 12, 12).addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel3).addComponent(jLabel2).addComponent(jLabel4).addComponent(jLabel5))).addComponent(jLabel6).addComponent(jLabel7).addComponent(jLabel8)).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jPanel5Layout.setVerticalGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel5Layout.createSequentialGroup().addContainerGap().addComponent(jLabel1).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel2).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel3).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel4).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel5).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel6).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel7).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel8).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Help&quot;));&#xD;
    jTextArea1.setEditable(false);&#xD;
    jTextArea1.setColumns(20);&#xD;
    jTextArea1.setRows(5);&#xD;
    jTextArea1.setText(&quot;In this step, you can crop the\nimage. Just select the region to\ncrop, and then press the Crop\nbutton. You can undo the \ncropping, pressing the Undo\nbutton. Once that you have\nfinished, press the Next button.&quot;);&#xD;
    jScrollPane1.setViewportView(jTextArea1);&#xD;
    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);&#xD;
    jPanel2.setLayout(jPanel2Layout);&#xD;
    jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING));&#xD;
    jPanel2Layout.setVerticalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE));&#xD;
    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);&#xD;
    jPanel1.setLayout(jPanel1Layout);&#xD;
    jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));&#xD;
    jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup().addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)));&#xD;
    jPanel3.setBorder(null);&#xD;
    jbCrop.setText(&quot;Crop&quot;);&#xD;
    jbCrop.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbCropActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jBUndo.setText(&quot;Undo&quot;);&#xD;
    jBUndo.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jBUndoActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);&#xD;
    jPanel3.setLayout(jPanel3Layout);&#xD;
    jPanel3Layout.setHorizontalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jbCrop, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jBUndo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));&#xD;
    jPanel3Layout.setVerticalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel3Layout.createSequentialGroup().addComponent(jbCrop).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jBUndo).addContainerGap(257, Short.MAX_VALUE)));&#xD;
    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());&#xD;
    getContentPane().setLayout(layout);&#xD;
    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(layout.createSequentialGroup().addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))));&#xD;
    layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(layout.createSequentialGroup().addContainerGap().addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)));&#xD;
    pack();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bGusMGWNEei0cbjpkrd07g" name="jbCropActionPerformed" specification="_bGteEGWNEei0cbjpkrd07g">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jbCropActionPerformed&#xD;
    this.setAlwaysOnTop(false);&#xD;
    imp.getWindow().setAlwaysOnTop(false);&#xD;
    IJ.run(imp, &quot;Crop&quot;, &quot;&quot;);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bGyWkGWNEei0cbjpkrd07g" name="jBUndoActionPerformed" specification="_bGwhYGWNEei0cbjpkrd07g">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jBUndoActionPerformed&#xD;
    this.setAlwaysOnTop(false);&#xD;
    imp.getWindow().setAlwaysOnTop(false);&#xD;
    IJ.run(imp, &quot;Undo&quot;, &quot;&quot;);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bG1Z4GWNEei0cbjpkrd07g" name="formWindowClosed">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_formWindowClosed&#xD;
    try {&#xD;
        if (close) {&#xD;
            ia.saveUnfinishedExperiment(this, 0);&#xD;
            close = false;&#xD;
        }&#xD;
    } catch (IOException ex) {&#xD;
        Logger.getLogger(step1_1.class.getName()).log(Level.SEVERE, null, ex);&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bG5EQGWNEei0cbjpkrd07g" name="jButton2ActionPerformed">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton2ActionPerformed&#xD;
    close = false;&#xD;
    this.dispose();&#xD;
    while (imp.getWidth() > 1500 || imp.getHeight() > 1500) {&#xD;
        ImageProcessor ip = imp.getProcessor();&#xD;
        ImageProcessor ip1 = ip.resize((int) (imp.getWidth() * .5), (int) (imp.getHeight() * .5));&#xD;
        imp.setProcessor(ip1);&#xD;
        imp.updateAndDraw();&#xD;
    }&#xD;
    step1_2 s = new step1_2(imp, ia);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_A-O5UHkVEeiGl6CJxvVzPQ" name="Step1_1_SM">
                  <region xmi:type="uml:Region" xmi:id="_CP9m8HkVEeiGl6CJxvVzPQ" name="Region1">
                    <transition xmi:type="uml:Transition" xmi:id="_OLu1YHkVEeiGl6CJxvVzPQ" source="_M4RpcHkVEeiGl6CJxvVzPQ" target="_NbYWgHkVEeiGl6CJxvVzPQ">
                      <trigger xmi:type="uml:Trigger" xmi:id="_THkdQHkVEeiGl6CJxvVzPQ" event="_MsI80HkTEeiGl6CJxvVzPQ"/>
                    </transition>
                    <transition xmi:type="uml:Transition" xmi:id="_PKoGkHkVEeiGl6CJxvVzPQ" source="_NbYWgHkVEeiGl6CJxvVzPQ" target="_NpCYAHkVEeiGl6CJxvVzPQ">
                      <trigger xmi:type="uml:Trigger" xmi:id="_VACawHkVEeiGl6CJxvVzPQ" event="_82R3YHkSEeiGl6CJxvVzPQ"/>
                    </transition>
                    <transition xmi:type="uml:Transition" xmi:id="_HUxLUHkaEeiGl6CJxvVzPQ" source="_NbYWgHkVEeiGl6CJxvVzPQ" target="_FyNzcHkaEeiGl6CJxvVzPQ">
                      <trigger xmi:type="uml:Trigger" xmi:id="_bIOHsHkaEeiGl6CJxvVzPQ" event="_XJVQQHkaEeiGl6CJxvVzPQ"/>
                    </transition>
                    <transition xmi:type="uml:Transition" xmi:id="_PIu24HkaEeiGl6CJxvVzPQ" source="_FyNzcHkaEeiGl6CJxvVzPQ" target="_NpCYAHkVEeiGl6CJxvVzPQ">
                      <trigger xmi:type="uml:Trigger" xmi:id="_6v3D0HkaEeiGl6CJxvVzPQ" event="_6lWc8HkaEeiGl6CJxvVzPQ"/>
                    </transition>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_M4RpcHkVEeiGl6CJxvVzPQ"/>
                    <subvertex xmi:type="uml:State" xmi:id="_NbYWgHkVEeiGl6CJxvVzPQ" name="Activated"/>
                    <subvertex xmi:type="uml:State" xmi:id="_NpCYAHkVEeiGl6CJxvVzPQ" name="Finished"/>
                    <subvertex xmi:type="uml:State" xmi:id="_FyNzcHkaEeiGl6CJxvVzPQ" name="Cropped"/>
                  </region>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_bGfboGWNEei0cbjpkrd07g" name="step1_1" visibility="public" method="_bGjtEGWNEei0cbjpkrd07g">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_bGjGAGWNEei0cbjpkrd07g" name="imp" type="_a5Za0GWNEei0cbjpkrd07g"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_bGliQGWNEei0cbjpkrd07g" name="step1_1" visibility="public" method="_bGqawGWNEei0cbjpkrd07g">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_bGolkGWNEei0cbjpkrd07g" name="imp" type="_a5Za0GWNEei0cbjpkrd07g"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_bGpMoGWNEei0cbjpkrd07g" name="aThis" type="_a5ikwGWNEei0cbjpkrd07g"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_bGteEGWNEei0cbjpkrd07g" name="jbCropActionPerformed" visibility="private" method="_bGusMGWNEei0cbjpkrd07g">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_bGuFIGWNEei0cbjpkrd07g" name="evt" type="_a6tpcGWNEei0cbjpkrd07g"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_bGwhYGWNEei0cbjpkrd07g" name="jBUndoActionPerformed" visibility="private" method="_bGyWkGWNEei0cbjpkrd07g">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_bGxvgGWNEei0cbjpkrd07g" name="evt" type="_a6tpcGWNEei0cbjpkrd07g"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_O9hFsHLVEei3ud9vrLTCZg" name="jButton2ActionPerformed">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_aGlr4HLVEei3ud9vrLTCZg" name="evt" type="_a6tpcGWNEei0cbjpkrd07g"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_bHcd4GWNEei0cbjpkrd07g" name="step2_3" visibility="public" classifierBehavior="_gE-jYI5UEeie3Y8fpsu39w">
                <generalization xmi:type="uml:Generalization" xmi:id="_JKAWg24VEei47fqiwvb5mw" general="_a0hh4GWNEei0cbjpkrd07g"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bHfhMGWNEei0cbjpkrd07g" name="close" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_bHgvUGWNEei0cbjpkrd07g" name="defaultValue">
                    <language>JAVA</language>
                    <body>true</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bHikgGWNEei0cbjpkrd07g" name="imp" visibility="private" type="_a5Za0GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bHjyoGWNEei0cbjpkrd07g" name="ia" visibility="private" type="_a5ikwGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bHmO4GWNEei0cbjpkrd07g" name="lm" visibility="private" type="_a9q20GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bHndAGWNEei0cbjpkrd07g" name="darkbg" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bIAekGWNEei0cbjpkrd07g" name="buttonGroup1" visibility="private" type="_a70csGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bIBFoGWNEei0cbjpkrd07g" name="jButton1" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bIDh4GWNEei0cbjpkrd07g" name="jButton2" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bIF-IGWNEei0cbjpkrd07g" name="jButton3" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bIJBcGWNEei0cbjpkrd07g" name="jLabel1" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bIKPkGWNEei0cbjpkrd07g" name="jLabel2" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bIK2oGWNEei0cbjpkrd07g" name="jLabel3" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bILdsGWNEei0cbjpkrd07g" name="jLabel4" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bINS4GWNEei0cbjpkrd07g" name="jLabel6" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bIPIEGWNEei0cbjpkrd07g" name="jLabel7" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bIQ9QGWNEei0cbjpkrd07g" name="jLabel8" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bISycGWNEei0cbjpkrd07g" name="jPanel1" visibility="private" type="_a8yGAGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bIVOsGWNEei0cbjpkrd07g" name="jPanel2" visibility="private" type="_a8yGAGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bIXq8GWNEei0cbjpkrd07g" name="jPanel3" visibility="private" type="_a8yGAGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bIauQGWNEei0cbjpkrd07g" name="jPanel4" visibility="private" type="_a8yGAGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bIdxkGWNEei0cbjpkrd07g" name="jPanel5" visibility="private" type="_a8yGAGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bIg04GWNEei0cbjpkrd07g" name="jScrollPane1" visibility="private" type="_a9Dy0GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bIiqEGWNEei0cbjpkrd07g" name="jTextArea1" visibility="private" type="_a9IrUGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bIkfQGWNEei0cbjpkrd07g" name="jbBack" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bHsVgGWNEei0cbjpkrd07g" name="step2_3" specification="_bHpSMGWNEei0cbjpkrd07g">
                  <language>JAVA</language>
                  <body>&#xD;
    super();&#xD;
    initComponents();&#xD;
    this.imp = imp;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bHv_4GWNEei0cbjpkrd07g" name="step2_3" specification="_bHsVgWWNEei0cbjpkrd07g">
                  <language>JAVA</language>
                  <body>&#xD;
    super();&#xD;
    initComponents();&#xD;
    this.imp = imp;&#xD;
    this.ia = aThis;&#xD;
    this.darkbg = darkbg;&#xD;
    if (lm == null) {&#xD;
        this.lm = new LaneManager(ia.m);&#xD;
        this.lm.delete_without_asking(true);&#xD;
    } else {&#xD;
        this.lm = lm;&#xD;
    }&#xD;
    this.lm.setbgcheckboxstate(darkbg);&#xD;
    this.lm.updateShowAll();&#xD;
    Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();&#xD;
    double width = screenSize.getWidth();&#xD;
    setVisible(true);&#xD;
    setLocation((int) width - 515, 0);&#xD;
    imp.getWindow().setAlwaysOnTop(true);&#xD;
    setAlwaysOnTop(true);&#xD;
    toFront();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bHwm8GWNEei0cbjpkrd07g" name="getLm">
                  <language>JAVA</language>
                  <body>&#xD;
    return lm;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bHxOAGWNEei0cbjpkrd07g" name="initComponents">
                  <language>JAVA</language>
                  <body>&#xD;
    buttonGroup1 = new javax.swing.ButtonGroup();&#xD;
    jPanel4 = new javax.swing.JPanel();&#xD;
    jButton2 = new javax.swing.JButton();&#xD;
    jbBack = new javax.swing.JButton();&#xD;
    jPanel5 = new javax.swing.JPanel();&#xD;
    jLabel1 = new javax.swing.JLabel();&#xD;
    jLabel6 = new javax.swing.JLabel();&#xD;
    jLabel7 = new javax.swing.JLabel();&#xD;
    jLabel8 = new javax.swing.JLabel();&#xD;
    jLabel2 = new javax.swing.JLabel();&#xD;
    jLabel3 = new javax.swing.JLabel();&#xD;
    jLabel4 = new javax.swing.JLabel();&#xD;
    jPanel1 = new javax.swing.JPanel();&#xD;
    jPanel2 = new javax.swing.JPanel();&#xD;
    jScrollPane1 = new javax.swing.JScrollPane();&#xD;
    jTextArea1 = new javax.swing.JTextArea();&#xD;
    jPanel3 = new javax.swing.JPanel();&#xD;
    jButton1 = new javax.swing.JButton();&#xD;
    jButton3 = new javax.swing.JButton();&#xD;
    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);&#xD;
    setTitle(&quot;Image analysis&quot;);&#xD;
    setResizable(false);&#xD;
    addWindowListener(new java.awt.event.WindowAdapter() {&#xD;
&#xD;
        public void windowClosed(java.awt.event.WindowEvent evt) {&#xD;
            formWindowClosed(evt);&#xD;
        }&#xD;
    });&#xD;
    jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());&#xD;
    jButton2.setText(&quot;Next>&quot;);&#xD;
    jButton2.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton2ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jbBack.setText(&quot;&lt;Back&quot;);&#xD;
    jbBack.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbBackActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);&#xD;
    jPanel4.setLayout(jPanel4Layout);&#xD;
    jPanel4Layout.setHorizontalGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addComponent(jbBack).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButton2)));&#xD;
    jPanel4Layout.setVerticalGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jButton2).addComponent(jbBack))));&#xD;
    jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Steps&quot;)));&#xD;
    jPanel5.setForeground(new java.awt.Color(0, 17, 255));&#xD;
    jLabel1.setText(&quot;Step 1. Image preprocessing&quot;);&#xD;
    jLabel6.setText(&quot;Step 2. Lane detection&quot;);&#xD;
    jLabel7.setText(&quot;Step 3. Normalisation&quot;);&#xD;
    jLabel8.setText(&quot;Step 4. Band detection&quot;);&#xD;
    jLabel2.setText(&quot;2.1. Background&quot;);&#xD;
    jLabel3.setText(&quot;2.2. Lane edition&quot;);&#xD;
    jLabel4.setForeground(new java.awt.Color(0, 15, 255));&#xD;
    jLabel4.setText(&quot;2.3. Fix reference lanes&quot;);&#xD;
    javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);&#xD;
    jPanel5.setLayout(jPanel5Layout);&#xD;
    jPanel5Layout.setHorizontalGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel5Layout.createSequentialGroup().addContainerGap().addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel1).addComponent(jLabel6).addComponent(jLabel7).addComponent(jLabel8).addGroup(jPanel5Layout.createSequentialGroup().addGap(12, 12, 12).addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel3).addComponent(jLabel2).addComponent(jLabel4)))).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jPanel5Layout.setVerticalGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel5Layout.createSequentialGroup().addContainerGap().addComponent(jLabel1).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel6).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel2).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel3).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel4).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel7).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel8).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Help&quot;));&#xD;
    jTextArea1.setEditable(false);&#xD;
    jTextArea1.setColumns(20);&#xD;
    jTextArea1.setRows(5);&#xD;
    jTextArea1.setText(&quot;In this step, you must fix the \nreference lanes of the image. You\nmust indicate, at least, one \nreference lane. In order to do \nthat, select a lane and press the\nFix reference lane button, or \nselect a lane and press the f key.&quot;);&#xD;
    jScrollPane1.setViewportView(jTextArea1);&#xD;
    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);&#xD;
    jPanel2.setLayout(jPanel2Layout);&#xD;
    jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 258, Short.MAX_VALUE));&#xD;
    jPanel2Layout.setVerticalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE));&#xD;
    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);&#xD;
    jPanel1.setLayout(jPanel1Layout);&#xD;
    jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));&#xD;
    jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup().addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)));&#xD;
    jPanel3.setBorder(null);&#xD;
    jButton1.setText(&quot;Fix reference lane [f]&quot;);&#xD;
    jButton1.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton1ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jButton3.setText(&quot;Delete reference lane&quot;);&#xD;
    jButton3.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton3ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);&#xD;
    jPanel3.setLayout(jPanel3Layout);&#xD;
    jPanel3Layout.setHorizontalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE));&#xD;
    jPanel3Layout.setVerticalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel3Layout.createSequentialGroup().addComponent(jButton1).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButton3).addGap(0, 257, Short.MAX_VALUE)));&#xD;
    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());&#xD;
    getContentPane().setLayout(layout);&#xD;
    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(layout.createSequentialGroup().addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))));&#xD;
    layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(layout.createSequentialGroup().addContainerGap().addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)));&#xD;
    pack();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bHycIGWNEei0cbjpkrd07g" name="formWindowClosed">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_formWindowClosed&#xD;
    try {&#xD;
        if (close) {&#xD;
            ia.saveUnfinishedExperiment(this, 5);&#xD;
            close = false;&#xD;
        } else {&#xD;
        }&#xD;
    } catch (IOException ex) {&#xD;
        Logger.getLogger(step2_3.class.getName()).log(Level.SEVERE, null, ex);&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bHzDMWWNEei0cbjpkrd07g" name="jbBackActionPerformed" specification="_bHycIWWNEei0cbjpkrd07g">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jbBackActionPerformed&#xD;
    close = false;&#xD;
    step2_2 s = new step2_2(imp, ia, darkbg, lm);&#xD;
    this.dispose();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bHzqQmWNEei0cbjpkrd07g" name="jButton2ActionPerformed" specification="_bHzqQGWNEei0cbjpkrd07g">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton2ActionPerformed&#xD;
    close = false;&#xD;
    if (lm.getnumberofstds() &lt; 1) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;You must select (at least) one reference lane&quot;, &quot;Reference Lanes&quot;, JOptionPane.INFORMATION_MESSAGE);&#xD;
        return;&#xD;
    }&#xD;
    lm.close();&#xD;
    ia.m.setLm(null);&#xD;
    ImageWindow iw = imp.getWindow();&#xD;
    iw.setLocked(false);&#xD;
    BandManagerMarkerCanvas cc = new BandManagerMarkerCanvas(imp);&#xD;
    ImageWindow iw2 = new ImageWindow(imp, cc);&#xD;
    iw2.setLocked(true);&#xD;
    iw.dispose();&#xD;
    Step3_1 s = new Step3_1(imp, ia, darkbg);&#xD;
    this.dispose();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bH4iwGWNEei0cbjpkrd07g" name="jButton3ActionPerformed">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton3ActionPerformed&#xD;
    IJ.run(imp, &quot;8-bit&quot;, &quot;&quot;);&#xD;
    this.setAlwaysOnTop(false);&#xD;
    imp.getWindow().setAlwaysOnTop(false);&#xD;
    lm.delete_standard();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bH-CUGWNEei0cbjpkrd07g" name="jButton1ActionPerformed">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton1ActionPerformed&#xD;
    IJ.run(imp, &quot;8-bit&quot;, &quot;&quot;);&#xD;
    this.setAlwaysOnTop(false);&#xD;
    imp.getWindow().setAlwaysOnTop(false);&#xD;
    lm.fix_standard();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_gE-jYI5UEeie3Y8fpsu39w" name="StateMachine1">
                  <region xmi:type="uml:Region" xmi:id="_gRQr4I5UEeie3Y8fpsu39w" name="Region1">
                    <transition xmi:type="uml:Transition" xmi:id="_h5OIMI5UEeie3Y8fpsu39w" source="_hDuqoI5UEeie3Y8fpsu39w" target="_hS_OoI5UEeie3Y8fpsu39w">
                      <trigger xmi:type="uml:Trigger" xmi:id="_tqf94I5UEeie3Y8fpsu39w" event="_tj7b0I5UEeie3Y8fpsu39w"/>
                    </transition>
                    <transition xmi:type="uml:Transition" xmi:id="_iNcEsI5UEeie3Y8fpsu39w" source="_hS_OoI5UEeie3Y8fpsu39w" target="_hgMkMI5UEeie3Y8fpsu39w">
                      <trigger xmi:type="uml:Trigger" xmi:id="_3yHuII5UEeie3Y8fpsu39w" event="_3pjoAI5UEeie3Y8fpsu39w"/>
                    </transition>
                    <transition xmi:type="uml:Transition" xmi:id="_uYpdUI5UEeie3Y8fpsu39w" source="_hS_OoI5UEeie3Y8fpsu39w" target="_hgMkMI5UEeie3Y8fpsu39w">
                      <trigger xmi:type="uml:Trigger" xmi:id="_y1RZoI5UEeie3Y8fpsu39w" event="_yuBiII5UEeie3Y8fpsu39w"/>
                    </transition>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_hDuqoI5UEeie3Y8fpsu39w" name="Initial1"/>
                    <subvertex xmi:type="uml:State" xmi:id="_hS_OoI5UEeie3Y8fpsu39w" name="Activated"/>
                    <subvertex xmi:type="uml:State" xmi:id="_hgMkMI5UEeie3Y8fpsu39w" name="Finished"/>
                  </region>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_bHpSMGWNEei0cbjpkrd07g" name="step2_3" visibility="public" method="_bHsVgGWNEei0cbjpkrd07g">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_bHrucGWNEei0cbjpkrd07g" name="imp" type="_a5Za0GWNEei0cbjpkrd07g"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_bHsVgWWNEei0cbjpkrd07g" name="step2_3" visibility="public" method="_bHv_4GWNEei0cbjpkrd07g">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_bHuxwGWNEei0cbjpkrd07g" name="imp" type="_a5Za0GWNEei0cbjpkrd07g"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_bHuxwWWNEei0cbjpkrd07g" name="aThis" type="_a5ikwGWNEei0cbjpkrd07g"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_bHvY0GWNEei0cbjpkrd07g" name="darkbg">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_bHvY0WWNEei0cbjpkrd07g" name="lm" type="_a9q20GWNEei0cbjpkrd07g"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_bHycIWWNEei0cbjpkrd07g" name="jbBackActionPerformed" visibility="private" method="_bHzDMWWNEei0cbjpkrd07g">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_bHzDMGWNEei0cbjpkrd07g" name="evt" type="_a6tpcGWNEei0cbjpkrd07g"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_bHzqQGWNEei0cbjpkrd07g" name="jButton2ActionPerformed" visibility="private" method="_bHzqQmWNEei0cbjpkrd07g">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_bHzqQWWNEei0cbjpkrd07g" name="evt" type="_a6tpcGWNEei0cbjpkrd07g"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_bIrM8GWNEei0cbjpkrd07g" name="step2_1" visibility="public" classifierBehavior="_SeKk4I5TEeie3Y8fpsu39w">
                <generalization xmi:type="uml:Generalization" xmi:id="_JKAWgm4VEei47fqiwvb5mw" general="_a0hh4GWNEei0cbjpkrd07g"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bItCIGWNEei0cbjpkrd07g" name="close" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_bIveYGWNEei0cbjpkrd07g" name="defaultValue">
                    <language>JAVA</language>
                    <body>true</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bIwsgGWNEei0cbjpkrd07g" name="imp" visibility="private" type="_a5Za0GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bIx6oGWNEei0cbjpkrd07g" name="ia" visibility="private" type="_a5ikwGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bJMKUGWNEei0cbjpkrd07g" name="buttonGroup1" visibility="private" type="_a70csGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bJN_gGWNEei0cbjpkrd07g" name="jButton2" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bJP0sGWNEei0cbjpkrd07g" name="jLabel1" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bJS4AGWNEei0cbjpkrd07g" name="jLabel2" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bJUtMGWNEei0cbjpkrd07g" name="jLabel3" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bJWiYGWNEei0cbjpkrd07g" name="jLabel4" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bJY-oGWNEei0cbjpkrd07g" name="jLabel6" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bJaMwGWNEei0cbjpkrd07g" name="jLabel7" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bJcpAGWNEei0cbjpkrd07g" name="jLabel8" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bJd3IGWNEei0cbjpkrd07g" name="jPanel1" visibility="private" type="_a8yGAGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bJgTYGWNEei0cbjpkrd07g" name="jPanel2" visibility="private" type="_a8yGAGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bJg6cGWNEei0cbjpkrd07g" name="jPanel3" visibility="private" type="_a8yGAGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bJjWsGWNEei0cbjpkrd07g" name="jPanel4" visibility="private" type="_a8yGAGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bJlL4GWNEei0cbjpkrd07g" name="jPanel5" visibility="private" type="_a8yGAGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bJnBEGWNEei0cbjpkrd07g" name="jScrollPane1" visibility="private" type="_a9Dy0GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bJo2QGWNEei0cbjpkrd07g" name="jTextArea1" visibility="private" type="_a9IrUGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bJqrcGWNEei0cbjpkrd07g" name="jbBack" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bJsgoGWNEei0cbjpkrd07g" name="jrbdark" visibility="private" type="_bEi64GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bJuV0GWNEei0cbjpkrd07g" name="jrblight" visibility="private" type="_bEi64GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bI4oUGWNEei0cbjpkrd07g" name="step2_1" specification="_bI0W4GWNEei0cbjpkrd07g">
                  <language>JAVA</language>
                  <body>&#xD;
    super();&#xD;
    initComponents();&#xD;
    this.imp = imp;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bI-u8GWNEei0cbjpkrd07g" name="step2_1" specification="_bI6dgGWNEei0cbjpkrd07g">
                  <language>JAVA</language>
                  <body>&#xD;
    super();&#xD;
    initComponents();&#xD;
    this.imp = imp;&#xD;
    this.ia = aThis;&#xD;
    Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();&#xD;
    double width = screenSize.getWidth();&#xD;
    setVisible(true);&#xD;
    setLocation((int) width - 515, 0);&#xD;
    imp.getWindow().setAlwaysOnTop(true);&#xD;
    setAlwaysOnTop(true);&#xD;
    toFront();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bJByQGWNEei0cbjpkrd07g" name="initComponents">
                  <language>JAVA</language>
                  <body>&#xD;
    buttonGroup1 = new javax.swing.ButtonGroup();&#xD;
    jPanel5 = new javax.swing.JPanel();&#xD;
    jLabel1 = new javax.swing.JLabel();&#xD;
    jLabel6 = new javax.swing.JLabel();&#xD;
    jLabel7 = new javax.swing.JLabel();&#xD;
    jLabel8 = new javax.swing.JLabel();&#xD;
    jLabel2 = new javax.swing.JLabel();&#xD;
    jLabel3 = new javax.swing.JLabel();&#xD;
    jLabel4 = new javax.swing.JLabel();&#xD;
    jPanel1 = new javax.swing.JPanel();&#xD;
    jPanel2 = new javax.swing.JPanel();&#xD;
    jScrollPane1 = new javax.swing.JScrollPane();&#xD;
    jTextArea1 = new javax.swing.JTextArea();&#xD;
    jPanel3 = new javax.swing.JPanel();&#xD;
    jrbdark = new javax.swing.JRadioButton();&#xD;
    jrblight = new javax.swing.JRadioButton();&#xD;
    jPanel4 = new javax.swing.JPanel();&#xD;
    jButton2 = new javax.swing.JButton();&#xD;
    jbBack = new javax.swing.JButton();&#xD;
    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);&#xD;
    setTitle(&quot;Image analysis&quot;);&#xD;
    setResizable(false);&#xD;
    addWindowListener(new java.awt.event.WindowAdapter() {&#xD;
&#xD;
        public void windowClosed(java.awt.event.WindowEvent evt) {&#xD;
            formWindowClosed(evt);&#xD;
        }&#xD;
    });&#xD;
    jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Steps&quot;)));&#xD;
    jPanel5.setForeground(new java.awt.Color(0, 17, 255));&#xD;
    jLabel1.setText(&quot;Step 1. Image preprocessing&quot;);&#xD;
    jLabel6.setText(&quot;Step 2. Lane detection&quot;);&#xD;
    jLabel7.setText(&quot;Step 3. Normalisation&quot;);&#xD;
    jLabel8.setText(&quot;Step 4. Band detection&quot;);&#xD;
    jLabel2.setForeground(new java.awt.Color(0, 15, 255));&#xD;
    jLabel2.setText(&quot;2.1. Background&quot;);&#xD;
    jLabel3.setText(&quot;2.2. Lane edition&quot;);&#xD;
    jLabel4.setText(&quot;2.3. Fix reference lanes&quot;);&#xD;
    javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);&#xD;
    jPanel5.setLayout(jPanel5Layout);&#xD;
    jPanel5Layout.setHorizontalGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel5Layout.createSequentialGroup().addContainerGap().addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel1).addComponent(jLabel6).addComponent(jLabel7).addComponent(jLabel8).addGroup(jPanel5Layout.createSequentialGroup().addGap(12, 12, 12).addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel3).addComponent(jLabel2).addComponent(jLabel4)))).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jPanel5Layout.setVerticalGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel5Layout.createSequentialGroup().addContainerGap().addComponent(jLabel1).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel6).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel2).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel3).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel4).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel7).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel8).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Help&quot;));&#xD;
    jTextArea1.setEditable(false);&#xD;
    jTextArea1.setColumns(20);&#xD;
    jTextArea1.setRows(5);&#xD;
    jTextArea1.setText(&quot;In this step, you must indicate if\nthe background of the image is\ndark or light.&quot;);&#xD;
    jScrollPane1.setViewportView(jTextArea1);&#xD;
    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);&#xD;
    jPanel2.setLayout(jPanel2Layout);&#xD;
    jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 258, Short.MAX_VALUE));&#xD;
    jPanel2Layout.setVerticalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE));&#xD;
    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);&#xD;
    jPanel1.setLayout(jPanel1Layout);&#xD;
    jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));&#xD;
    jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup().addContainerGap(60, Short.MAX_VALUE).addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)));&#xD;
    jPanel3.setBorder(null);&#xD;
    buttonGroup1.add(jrbdark);&#xD;
    jrbdark.setSelected(true);&#xD;
    jrbdark.setText(&quot;Dark background&quot;);&#xD;
    buttonGroup1.add(jrblight);&#xD;
    jrblight.setText(&quot;Light background&quot;);&#xD;
    javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);&#xD;
    jPanel3.setLayout(jPanel3Layout);&#xD;
    jPanel3Layout.setHorizontalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel3Layout.createSequentialGroup().addContainerGap().addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jrbdark).addComponent(jrblight)).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jPanel3Layout.setVerticalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel3Layout.createSequentialGroup().addComponent(jrbdark).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jrblight).addGap(0, 267, Short.MAX_VALUE)));&#xD;
    jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());&#xD;
    jButton2.setText(&quot;Next>&quot;);&#xD;
    jButton2.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton2ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jbBack.setText(&quot;&lt;Back&quot;);&#xD;
    jbBack.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbBackActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);&#xD;
    jPanel4.setLayout(jPanel4Layout);&#xD;
    jPanel4Layout.setHorizontalGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addComponent(jbBack).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButton2)));&#xD;
    jPanel4Layout.setVerticalGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jButton2).addComponent(jbBack))));&#xD;
    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());&#xD;
    getContentPane().setLayout(layout);&#xD;
    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))).addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));&#xD;
    layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(layout.createSequentialGroup().addContainerGap().addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)));&#xD;
    pack();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bJE1kGWNEei0cbjpkrd07g" name="formWindowClosed">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_formWindowClosed&#xD;
    try {&#xD;
        if (close) {&#xD;
            ia.saveUnfinishedExperiment(this, 5);&#xD;
            close = false;&#xD;
        } else {&#xD;
        }&#xD;
    } catch (IOException ex) {&#xD;
        Logger.getLogger(step2_1.class.getName()).log(Level.SEVERE, null, ex);&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bJHR0GWNEei0cbjpkrd07g" name="jbBackActionPerformed" specification="_bJFcoGWNEei0cbjpkrd07g">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jbBackActionPerformed&#xD;
    close = false;&#xD;
    this.dispose();&#xD;
    Step1_4 s = new Step1_4(imp, ia);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bJK8MGWNEei0cbjpkrd07g" name="jButton2ActionPerformed" specification="_bJIf8GWNEei0cbjpkrd07g">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton2ActionPerformed&#xD;
    close = false;&#xD;
    ImageWindow iw = imp.getWindow();&#xD;
    iw.setLocked(false);&#xD;
    LaneManagerCanvas cc = new LaneManagerCanvas(imp);&#xD;
    ImageWindow iw2 = new ImageWindow(imp, cc);&#xD;
    iw2.setLocked(true);&#xD;
    imp.changes = false;&#xD;
    iw.dispose();&#xD;
    cc.requestFocus();&#xD;
    step2_2 s = null;&#xD;
    if (jrbdark.isSelected()) {&#xD;
        s = new step2_2(imp, ia, true, null);&#xD;
        ia.darkbg = true;&#xD;
    } else {&#xD;
        s = new step2_2(imp, ia, false, null);&#xD;
        ia.darkbg = false;&#xD;
    }&#xD;
    s.getLm().auto_detect();&#xD;
    this.dispose();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_SeKk4I5TEeie3Y8fpsu39w" name="StateMachine1">
                  <region xmi:type="uml:Region" xmi:id="_SwrRMI5TEeie3Y8fpsu39w" name="Region1">
                    <transition xmi:type="uml:Transition" xmi:id="_Uvr7kI5TEeie3Y8fpsu39w" source="_ThJr4I5TEeie3Y8fpsu39w" target="_TxZHUI5TEeie3Y8fpsu39w">
                      <trigger xmi:type="uml:Trigger" xmi:id="_aPAD8I5TEeie3Y8fpsu39w" event="_Z-zEwI5TEeie3Y8fpsu39w"/>
                    </transition>
                    <transition xmi:type="uml:Transition" xmi:id="_VJ2IAI5TEeie3Y8fpsu39w" source="_TxZHUI5TEeie3Y8fpsu39w" target="_UJca8I5TEeie3Y8fpsu39w">
                      <trigger xmi:type="uml:Trigger" xmi:id="_hQ71oI5TEeie3Y8fpsu39w" event="_hJ71wI5TEeie3Y8fpsu39w"/>
                    </transition>
                    <transition xmi:type="uml:Transition" xmi:id="_Vk5FQI5TEeie3Y8fpsu39w" source="_TxZHUI5TEeie3Y8fpsu39w" target="_UJca8I5TEeie3Y8fpsu39w">
                      <trigger xmi:type="uml:Trigger" xmi:id="_kX5mkI5TEeie3Y8fpsu39w" event="_kQk2kI5TEeie3Y8fpsu39w"/>
                    </transition>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_ThJr4I5TEeie3Y8fpsu39w" name="Initial1"/>
                    <subvertex xmi:type="uml:State" xmi:id="_TxZHUI5TEeie3Y8fpsu39w" name="Activated"/>
                    <subvertex xmi:type="uml:State" xmi:id="_UJca8I5TEeie3Y8fpsu39w" name="Finished"/>
                  </region>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_bI0W4GWNEei0cbjpkrd07g" name="step2_1" visibility="public" method="_bI4oUGWNEei0cbjpkrd07g">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_bI3aMGWNEei0cbjpkrd07g" name="imp" type="_a5Za0GWNEei0cbjpkrd07g"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_bI6dgGWNEei0cbjpkrd07g" name="step2_1" visibility="public" method="_bI-u8GWNEei0cbjpkrd07g">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_bI9g0GWNEei0cbjpkrd07g" name="imp" type="_a5Za0GWNEei0cbjpkrd07g"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_bI-H4GWNEei0cbjpkrd07g" name="aThis" type="_a5ikwGWNEei0cbjpkrd07g"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_bJFcoGWNEei0cbjpkrd07g" name="jbBackActionPerformed" visibility="private" method="_bJHR0GWNEei0cbjpkrd07g">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_bJGDsGWNEei0cbjpkrd07g" name="evt" type="_a6tpcGWNEei0cbjpkrd07g"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_bJIf8GWNEei0cbjpkrd07g" name="jButton2ActionPerformed" visibility="private" method="_bJK8MGWNEei0cbjpkrd07g">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_bJJuEGWNEei0cbjpkrd07g" name="evt" type="_a6tpcGWNEei0cbjpkrd07g"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_bJz1YGWNEei0cbjpkrd07g" name="step1_3" visibility="public" classifierBehavior="_GsqUcI5NEeie3Y8fpsu39w">
                <generalization xmi:type="uml:Generalization" xmi:id="_JKAWgW4VEei47fqiwvb5mw" general="_a0hh4GWNEei0cbjpkrd07g"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bJ2RoGWNEei0cbjpkrd07g" name="close" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_bJ4G0GWNEei0cbjpkrd07g" name="defaultValue">
                    <language>JAVA</language>
                    <body>true</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bJ5U8GWNEei0cbjpkrd07g" name="imp" visibility="private" type="_a5Za0GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bJ7KIGWNEei0cbjpkrd07g" name="ia" visibility="private" type="_a5ikwGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bJ8_UGWNEei0cbjpkrd07g" name="auto" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_bJ_bkGWNEei0cbjpkrd07g" name="defaultValue">
                    <language>JAVA</language>
                    <body>true</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bKl4gGWNEei0cbjpkrd07g" name="jButton1" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bKoUwGWNEei0cbjpkrd07g" name="jButton2" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bKrYEGWNEei0cbjpkrd07g" name="jLabel1" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bKubYGWNEei0cbjpkrd07g" name="jLabel2" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bKw3oGWNEei0cbjpkrd07g" name="jLabel3" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bKzT4GWNEei0cbjpkrd07g" name="jLabel4" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bK1JEGWNEei0cbjpkrd07g" name="jLabel5" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bK3lUGWNEei0cbjpkrd07g" name="jLabel6" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bK6ooGWNEei0cbjpkrd07g" name="jLabel7" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bK9r8GWNEei0cbjpkrd07g" name="jLabel8" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bK_hIGWNEei0cbjpkrd07g" name="jPanel1" visibility="private" type="_a8yGAGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bLAvQGWNEei0cbjpkrd07g" name="jPanel2" visibility="private" type="_a8yGAGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bLEZoGWNEei0cbjpkrd07g" name="jPanel3" visibility="private" type="_a8yGAGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bLG14GWNEei0cbjpkrd07g" name="jPanel4" visibility="private" type="_a8yGAGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bLJSIGWNEei0cbjpkrd07g" name="jPanel5" visibility="private" type="_a8yGAGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bLLuYGWNEei0cbjpkrd07g" name="jScrollPane1" visibility="private" type="_a9Dy0GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bLOKoGWNEei0cbjpkrd07g" name="jTextArea1" visibility="private" type="_a9IrUGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bLPYwGWNEei0cbjpkrd07g" name="jbBack" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bLRN8GWNEei0cbjpkrd07g" name="jbInvert" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bKDtAGWNEei0cbjpkrd07g" name="step1_3" specification="_bKBQwGWNEei0cbjpkrd07g">
                  <language>JAVA</language>
                  <body>&#xD;
    super();&#xD;
    initComponents();&#xD;
    this.imp = imp;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bKLo0GWNEei0cbjpkrd07g" name="step1_3" specification="_bKEUEGWNEei0cbjpkrd07g">
                  <language>JAVA</language>
                  <body>&#xD;
    super();&#xD;
    initComponents();&#xD;
    this.imp = imp;&#xD;
    this.ia = aThis;&#xD;
    Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();&#xD;
    double width = screenSize.getWidth();&#xD;
    setVisible(true);&#xD;
    setLocation((int) width - 515, 0);&#xD;
    imp.getWindow().setAlwaysOnTop(true);&#xD;
    setAlwaysOnTop(true);&#xD;
    toFront();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bKOsIGWNEei0cbjpkrd07g" name="initComponents">
                  <language>JAVA</language>
                  <body>&#xD;
    jPanel4 = new javax.swing.JPanel();&#xD;
    jButton2 = new javax.swing.JButton();&#xD;
    jbBack = new javax.swing.JButton();&#xD;
    jPanel5 = new javax.swing.JPanel();&#xD;
    jLabel1 = new javax.swing.JLabel();&#xD;
    jLabel2 = new javax.swing.JLabel();&#xD;
    jLabel3 = new javax.swing.JLabel();&#xD;
    jLabel4 = new javax.swing.JLabel();&#xD;
    jLabel5 = new javax.swing.JLabel();&#xD;
    jLabel6 = new javax.swing.JLabel();&#xD;
    jLabel7 = new javax.swing.JLabel();&#xD;
    jLabel8 = new javax.swing.JLabel();&#xD;
    jPanel1 = new javax.swing.JPanel();&#xD;
    jPanel2 = new javax.swing.JPanel();&#xD;
    jScrollPane1 = new javax.swing.JScrollPane();&#xD;
    jTextArea1 = new javax.swing.JTextArea();&#xD;
    jPanel3 = new javax.swing.JPanel();&#xD;
    jbInvert = new javax.swing.JButton();&#xD;
    jButton1 = new javax.swing.JButton();&#xD;
    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);&#xD;
    setTitle(&quot;Image analysis&quot;);&#xD;
    setResizable(false);&#xD;
    addWindowListener(new java.awt.event.WindowAdapter() {&#xD;
&#xD;
        public void windowClosed(java.awt.event.WindowEvent evt) {&#xD;
            formWindowClosed(evt);&#xD;
        }&#xD;
    });&#xD;
    jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());&#xD;
    jButton2.setText(&quot;Next>&quot;);&#xD;
    jButton2.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton2ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jbBack.setText(&quot;&lt;Back&quot;);&#xD;
    jbBack.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbBackActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);&#xD;
    jPanel4.setLayout(jPanel4Layout);&#xD;
    jPanel4Layout.setHorizontalGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addComponent(jbBack).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButton2)));&#xD;
    jPanel4Layout.setVerticalGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jButton2).addComponent(jbBack))));&#xD;
    jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Steps&quot;)));&#xD;
    jPanel5.setForeground(new java.awt.Color(0, 17, 255));&#xD;
    jLabel1.setText(&quot;Step 1. Image preprocessing&quot;);&#xD;
    jLabel2.setText(&quot;1.1. Crop&quot;);&#xD;
    jLabel3.setText(&quot;1.2. Invert&quot;);&#xD;
    jLabel4.setForeground(new java.awt.Color(0, 15, 255));&#xD;
    jLabel4.setText(&quot;1.3. Adjust contrast&quot;);&#xD;
    jLabel5.setText(&quot;1.4. Other operations&quot;);&#xD;
    jLabel6.setText(&quot;Step 2. Lane detection&quot;);&#xD;
    jLabel7.setText(&quot;Step 3. Normalisation&quot;);&#xD;
    jLabel8.setText(&quot;Step 4. Band detection&quot;);&#xD;
    javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);&#xD;
    jPanel5.setLayout(jPanel5Layout);&#xD;
    jPanel5Layout.setHorizontalGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel5Layout.createSequentialGroup().addContainerGap().addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel1).addGroup(jPanel5Layout.createSequentialGroup().addGap(12, 12, 12).addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel3).addComponent(jLabel2).addComponent(jLabel4).addComponent(jLabel5))).addComponent(jLabel6).addComponent(jLabel7).addComponent(jLabel8)).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jPanel5Layout.setVerticalGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel5Layout.createSequentialGroup().addContainerGap().addComponent(jLabel1).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel2).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel3).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel4).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel5).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel6).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel7).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel8).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Help&quot;));&#xD;
    jTextArea1.setEditable(false);&#xD;
    jTextArea1.setColumns(20);&#xD;
    jTextArea1.setRows(5);&#xD;
    jTextArea1.setText(&quot;In this step, you can automatically \nadjust the brightness and contrast\nof the image -- just press the \nabove button. You will be able to\nadjust manually the brightness and\ncontrast of the image in the next\nstep.&quot;);&#xD;
    jScrollPane1.setViewportView(jTextArea1);&#xD;
    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);&#xD;
    jPanel2.setLayout(jPanel2Layout);&#xD;
    jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING));&#xD;
    jPanel2Layout.setVerticalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE));&#xD;
    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);&#xD;
    jPanel1.setLayout(jPanel1Layout);&#xD;
    jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));&#xD;
    jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup().addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)));&#xD;
    jPanel3.setBorder(null);&#xD;
    jbInvert.setText(&quot;Auto Adjust Brightness/Contrast&quot;);&#xD;
    jbInvert.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbInvertActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jButton1.setText(&quot;Manually Adjust Brightness/Contrast&quot;);&#xD;
    jButton1.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton1ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);&#xD;
    jPanel3.setLayout(jPanel3Layout);&#xD;
    jPanel3Layout.setHorizontalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jbInvert, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));&#xD;
    jPanel3Layout.setVerticalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel3Layout.createSequentialGroup().addContainerGap().addComponent(jButton1).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jbInvert).addContainerGap(222, Short.MAX_VALUE)));&#xD;
    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());&#xD;
    getContentPane().setLayout(layout);&#xD;
    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(layout.createSequentialGroup().addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))));&#xD;
    layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(layout.createSequentialGroup().addContainerGap().addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)));&#xD;
    pack();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bKTkoGWNEei0cbjpkrd07g" name="jbInvertActionPerformed" specification="_bKRvcGWNEei0cbjpkrd07g">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jbInvertActionPerformed&#xD;
    if (auto) {&#xD;
        IJ.run(imp, &quot;Enhance Contrast&quot;, &quot;saturated=0.35&quot;);&#xD;
        auto = false;&#xD;
        jbInvert.setText(&quot;Reset Brightness/Contrast&quot;);&#xD;
    } else {&#xD;
        IJ.run(imp, &quot;Undo&quot;, &quot;&quot;);&#xD;
        auto = true;&#xD;
        jbInvert.setText(&quot;Auto Adjust Brightness/Contrast&quot;);&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bKXPAGWNEei0cbjpkrd07g" name="formWindowClosed">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_formWindowClosed&#xD;
    try {&#xD;
        if (close) {&#xD;
            ia.saveUnfinishedExperiment(this, 2);&#xD;
            close = false;&#xD;
        } else {&#xD;
        }&#xD;
    } catch (IOException ex) {&#xD;
        Logger.getLogger(step1_3.class.getName()).log(Level.SEVERE, null, ex);&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bKa5YGWNEei0cbjpkrd07g" name="jbBackActionPerformed" specification="_bKZrQGWNEei0cbjpkrd07g">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jbBackActionPerformed&#xD;
    close = false;&#xD;
    this.dispose();&#xD;
    step1_2 s = new step1_2(imp, ia);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bKfx4GWNEei0cbjpkrd07g" name="jButton2ActionPerformed" specification="_bKdVoGWNEei0cbjpkrd07g">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton2ActionPerformed&#xD;
    close = false;&#xD;
    this.dispose();&#xD;
    Step1_4 s = new Step1_4(imp, ia);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bKkDUGWNEei0cbjpkrd07g" name="jButton1ActionPerformed" specification="_bKhnEGWNEei0cbjpkrd07g">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton1ActionPerformed&#xD;
    this.setAlwaysOnTop(false);&#xD;
    imp.getWindow().setAlwaysOnTop(false);&#xD;
    IJ.run(&quot;Brightness/Contrast...&quot;, &quot;&quot;);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_GsqUcI5NEeie3Y8fpsu39w" name="step1_3_SM">
                  <region xmi:type="uml:Region" xmi:id="_HCuEAI5NEeie3Y8fpsu39w" name="Region1">
                    <transition xmi:type="uml:Transition" xmi:id="_MRfO8I5NEeie3Y8fpsu39w" source="_K0aM8I5NEeie3Y8fpsu39w" target="_LUUcEI5NEeie3Y8fpsu39w">
                      <trigger xmi:type="uml:Trigger" xmi:id="_x8dUkI5PEeie3Y8fpsu39w" event="_xw6L4I5PEeie3Y8fpsu39w"/>
                    </transition>
                    <transition xmi:type="uml:Transition" xmi:id="_M1FEMI5NEeie3Y8fpsu39w" source="_LUUcEI5NEeie3Y8fpsu39w" target="_L5PuEI5NEeie3Y8fpsu39w">
                      <trigger xmi:type="uml:Trigger" xmi:id="_TycXkI5QEeie3Y8fpsu39w" event="_TUiTkI5QEeie3Y8fpsu39w"/>
                    </transition>
                    <transition xmi:type="uml:Transition" xmi:id="_NfG4oI5NEeie3Y8fpsu39w" source="_LUUcEI5NEeie3Y8fpsu39w" target="_L5PuEI5NEeie3Y8fpsu39w">
                      <trigger xmi:type="uml:Trigger" xmi:id="_ZcDEYI5QEeie3Y8fpsu39w" event="_YqpcoI5QEeie3Y8fpsu39w"/>
                    </transition>
                    <transition xmi:type="uml:Transition" xmi:id="_N8xsEI5NEeie3Y8fpsu39w" source="_LUUcEI5NEeie3Y8fpsu39w" target="_LpSmgI5NEeie3Y8fpsu39w">
                      <trigger xmi:type="uml:Trigger" xmi:id="_DescQI5QEeie3Y8fpsu39w" event="_DLE8sI5QEeie3Y8fpsu39w"/>
                    </transition>
                    <transition xmi:type="uml:Transition" xmi:id="_ObXFgI5NEeie3Y8fpsu39w" source="_L5PuEI5NEeie3Y8fpsu39w" target="_LpSmgI5NEeie3Y8fpsu39w">
                      <trigger xmi:type="uml:Trigger" xmi:id="__uC1II5PEeie3Y8fpsu39w" event="__hlGcI5PEeie3Y8fpsu39w"/>
                    </transition>
                    <transition xmi:type="uml:Transition" xmi:id="_PCtZYI5NEeie3Y8fpsu39w" source="_LUUcEI5NEeie3Y8fpsu39w" target="_LpSmgI5NEeie3Y8fpsu39w">
                      <trigger xmi:type="uml:Trigger" xmi:id="_4bOu0I5PEeie3Y8fpsu39w" event="_4QwkMI5PEeie3Y8fpsu39w"/>
                    </transition>
                    <transition xmi:type="uml:Transition" xmi:id="_P5G14I5NEeie3Y8fpsu39w" source="_L5PuEI5NEeie3Y8fpsu39w" target="_LpSmgI5NEeie3Y8fpsu39w">
                      <trigger xmi:type="uml:Trigger" xmi:id="_8OxR4I5PEeie3Y8fpsu39w" event="_8BS2kI5PEeie3Y8fpsu39w"/>
                    </transition>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_K0aM8I5NEeie3Y8fpsu39w" name="Initial1"/>
                    <subvertex xmi:type="uml:State" xmi:id="_LUUcEI5NEeie3Y8fpsu39w" name="Activated"/>
                    <subvertex xmi:type="uml:State" xmi:id="_LpSmgI5NEeie3Y8fpsu39w" name="Finished"/>
                    <subvertex xmi:type="uml:State" xmi:id="_L5PuEI5NEeie3Y8fpsu39w" name="ModifiedBC"/>
                  </region>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_bKBQwGWNEei0cbjpkrd07g" name="step1_3" visibility="public" method="_bKDtAGWNEei0cbjpkrd07g">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_bKDF8GWNEei0cbjpkrd07g" name="imp" type="_a5Za0GWNEei0cbjpkrd07g"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_bKEUEGWNEei0cbjpkrd07g" name="step1_3" visibility="public" method="_bKLo0GWNEei0cbjpkrd07g">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_bKIlgGWNEei0cbjpkrd07g" name="imp" type="_a5Za0GWNEei0cbjpkrd07g"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_bKJzoGWNEei0cbjpkrd07g" name="aThis" type="_a5ikwGWNEei0cbjpkrd07g"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_bKRvcGWNEei0cbjpkrd07g" name="jbInvertActionPerformed" visibility="private" method="_bKTkoGWNEei0cbjpkrd07g">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_bKSWgGWNEei0cbjpkrd07g" name="evt" type="_a6tpcGWNEei0cbjpkrd07g"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_bKZrQGWNEei0cbjpkrd07g" name="jbBackActionPerformed" visibility="private" method="_bKa5YGWNEei0cbjpkrd07g">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_bKaSUGWNEei0cbjpkrd07g" name="evt" type="_a6tpcGWNEei0cbjpkrd07g"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_bKdVoGWNEei0cbjpkrd07g" name="jButton2ActionPerformed" visibility="private" method="_bKfx4GWNEei0cbjpkrd07g">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_bKejwGWNEei0cbjpkrd07g" name="evt" type="_a6tpcGWNEei0cbjpkrd07g"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_bKhnEGWNEei0cbjpkrd07g" name="jButton1ActionPerformed" visibility="private" concurrency="concurrent" method="_bKkDUGWNEei0cbjpkrd07g">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_bKi1MGWNEei0cbjpkrd07g" name="evt" type="_a6tpcGWNEei0cbjpkrd07g"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_bLc0IGWNEei0cbjpkrd07g" name="Step3_1" visibility="public" classifierBehavior="_AQGAAI5VEeie3Y8fpsu39w">
                <generalization xmi:type="uml:Generalization" xmi:id="_JKAWgG4VEei47fqiwvb5mw" general="_a0hh4GWNEei0cbjpkrd07g"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bLepUGWNEei0cbjpkrd07g" name="close" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_bLf3cGWNEei0cbjpkrd07g" name="defaultValue">
                    <language>JAVA</language>
                    <body>true</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bLhFkGWNEei0cbjpkrd07g" name="imp" visibility="private" type="_a5Za0GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bLhsoGWNEei0cbjpkrd07g" name="ia" visibility="private" type="_a5ikwGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bLjh0GWNEei0cbjpkrd07g" name="bm" visibility="private" type="_a5orYGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bLkv8GWNEei0cbjpkrd07g" name="darkbg" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bLl-EGWNEei0cbjpkrd07g" name="tolerance" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bLsEsGWNEei0cbjpkrd07g" name="c" visibility="private" type="_bLnzQGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bNgpoGWNEei0cbjpkrd07g" name="buttonGroup1" visibility="private" type="_a70csGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bNh3wGWNEei0cbjpkrd07g" name="jButton2" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bNh3wWWNEei0cbjpkrd07g" name="jLabel1" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bNie0GWNEei0cbjpkrd07g" name="jLabel10" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bNjs8GWNEei0cbjpkrd07g" name="jLabel11" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bNk7EGWNEei0cbjpkrd07g" name="jLabel12" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bNnXUGWNEei0cbjpkrd07g" name="jLabel13" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bNpMgGWNEei0cbjpkrd07g" name="jLabel14" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bNqaoGWNEei0cbjpkrd07g" name="jLabel15" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bNsP0GWNEei0cbjpkrd07g" name="jLabel16" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bNuFAGWNEei0cbjpkrd07g" name="jLabel17" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bNvTIGWNEei0cbjpkrd07g" name="jLabel2" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bNxIUGWNEei0cbjpkrd07g" name="jLabel3" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bNy9gGWNEei0cbjpkrd07g" name="jLabel4" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bN0ysGWNEei0cbjpkrd07g" name="jLabel5" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bN2A0GWNEei0cbjpkrd07g" name="jLabel6" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bN3O8GWNEei0cbjpkrd07g" name="jLabel7" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bN4dEGWNEei0cbjpkrd07g" name="jLabel8" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bN6SQGWNEei0cbjpkrd07g" name="jLabel9" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bN8ugGWNEei0cbjpkrd07g" name="jPanel1" visibility="private" type="_a8yGAGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bN-jsGWNEei0cbjpkrd07g" name="jPanel2" visibility="private" type="_a8yGAGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bN_KwGWNEei0cbjpkrd07g" name="jPanel4" visibility="private" type="_a8yGAGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bN_x0GWNEei0cbjpkrd07g" name="jPanel5" visibility="private" type="_a8yGAGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bOA_8GWNEei0cbjpkrd07g" name="jPanel6" visibility="private" type="_a8yGAGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bOC1IGWNEei0cbjpkrd07g" name="jScrollPane1" visibility="private" type="_a9Dy0GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bOEqUGWNEei0cbjpkrd07g" name="jScrollPane2" visibility="private" type="_a9Dy0GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bOGfgGWNEei0cbjpkrd07g" name="jSlider1" visibility="private" type="_bGFzA2WNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bOIUsGWNEei0cbjpkrd07g" name="jSlider10" visibility="private" type="_bGFzA2WNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bOKJ4GWNEei0cbjpkrd07g" name="jSlider2" visibility="private" type="_bGFzA2WNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bOL_EGWNEei0cbjpkrd07g" name="jSlider3" visibility="private" type="_bGFzA2WNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bONNMGWNEei0cbjpkrd07g" name="jSlider4" visibility="private" type="_bGFzA2WNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bOPCYGWNEei0cbjpkrd07g" name="jSlider5" visibility="private" type="_bGFzA2WNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bOgvMGWNEei0cbjpkrd07g" name="jSlider6" visibility="private" type="_bGFzA2WNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bOhWQGWNEei0cbjpkrd07g" name="jSlider7" visibility="private" type="_bGFzA2WNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bOhWQWWNEei0cbjpkrd07g" name="jSlider8" visibility="private" type="_bGFzA2WNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bOikYGWNEei0cbjpkrd07g" name="jSlider9" visibility="private" type="_bGFzA2WNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bOjygGWNEei0cbjpkrd07g" name="jTextArea1" visibility="private" type="_a9IrUGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bOlnsGWNEei0cbjpkrd07g" name="jbBack" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bLyyYGWNEei0cbjpkrd07g" name="Step3_1" specification="_bLt54GWNEei0cbjpkrd07g">
                  <language>JAVA</language>
                  <body>&#xD;
    super();&#xD;
    initComponents();&#xD;
    this.imp = imp;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bL78UGWNEei0cbjpkrd07g" name="Step3_1" specification="_bL1OoGWNEei0cbjpkrd07g">
                  <language>JAVA</language>
                  <body>&#xD;
    super();&#xD;
    initComponents();&#xD;
    this.imp = imp;&#xD;
    this.ia = aThis;&#xD;
    this.darkbg = darkbg;&#xD;
    bm = new BandManager(ia.m);&#xD;
    bm.setbgcheckboxstate(darkbg);&#xD;
    bm.setVisible(false);&#xD;
    this.c = Color.BLUE;&#xD;
    this.tolerance = 100;&#xD;
    IJ.setTool(&quot;point&quot;);&#xD;
    bm.updateShowAll();&#xD;
    Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();&#xD;
    double width = screenSize.getWidth();&#xD;
    setVisible(true);&#xD;
    setLocation((int) width - 515, 0);&#xD;
    imp.getWindow().setAlwaysOnTop(true);&#xD;
    setAlwaysOnTop(true);&#xD;
    toFront();&#xD;
    JSlider[] sliders = { jSlider1, jSlider2, jSlider3, jSlider4, jSlider5, jSlider6, jSlider7, jSlider8, jSlider9, jSlider10 };&#xD;
    JLabel[] labels = { jLabel5, jLabel9, jLabel10, jLabel11, jLabel12, jLabel13, jLabel14, jLabel15, jLabel16, jLabel17 };&#xD;
    int[] indexes = indexesstandardlanes(ia.m.finallanes);&#xD;
    initiatenecessaryscrollbars(sliders, labels, indexes.length, tolerance);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bMHigGWNEei0cbjpkrd07g" name="initiatenecessaryscrollbars">
                  <language>JAVA</language>
                  <body>&#xD;
    for (int i = 0; i &lt; n; i++) {&#xD;
        scrollbars[i].setValue(tolerance);&#xD;
    }&#xD;
    for (int i = n; i &lt; scrollbars.length; i++) {&#xD;
        scrollbars[i].setVisible(false);&#xD;
        labels[i].setVisible(false);&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bMQscGWNEei0cbjpkrd07g" name="gettolerances">
                  <language>JAVA</language>
                  <body>&#xD;
    int[] res = new int[n];&#xD;
    for (int i = 0; i &lt; n; i++) {&#xD;
        res[i] = scrollbars[i].getValue();&#xD;
    }&#xD;
    return res;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bMTIsGWNEei0cbjpkrd07g" name="localselectbands">
                  <language>JAVA</language>
                  <body>&#xD;
    JSlider[] sliders = { jSlider1, jSlider2, jSlider3, jSlider4, jSlider5, jSlider6, jSlider7, jSlider8, jSlider9, jSlider10 };&#xD;
    int[] indexes = indexesstandardlanes(ia.m.finallanes);&#xD;
    int[] tolerances = gettolerances(sliders, indexes.length);&#xD;
    Prefs.verticalProfile = true;&#xD;
    bm.delete_without_asking(true);&#xD;
    bm.restart_bands();&#xD;
    ImageProcessor ip = imp.getProcessor();&#xD;
    for (int i = 0; i &lt; indexes.length; i++) {&#xD;
        Roi r0 = ia.m.finallanes[indexes[i]].getRoi();&#xD;
        int x0 = r0.getBounds().x + r0.getBounds().width / 2;&#xD;
        int y0 = r0.getBounds().y;&#xD;
        int x1 = r0.getBounds().x + r0.getBounds().width / 2;&#xD;
        int y1 = r0.getBounds().y + r0.getBounds().height;&#xD;
        Line l0 = new Line(x0, y0, x1, y1);&#xD;
        l0.setWidth(15);&#xD;
        imp.setRoi(l0);&#xD;
        // Finding the peaks of the profile&#xD;
        if ((!darkbg &amp;&amp; !imp.isInvertedLut()) || imp.isInvertedLut()) {&#xD;
            ip.invert();&#xD;
        }&#xD;
        //ProfilePlot pp = new ProfilePlot(imp);&#xD;
        double[] profile = ia.m.finallanes[indexes[i]].getProfile();&#xD;
        if ((!darkbg &amp;&amp; !imp.isInvertedLut()) || imp.isInvertedLut()) {&#xD;
            ip.invert();&#xD;
        }&#xD;
        l0.setWidth(1);&#xD;
        int[] maxima = MaximumFinder.findMaxima(profile, 2, true);&#xD;
        int[] htt = higherthantolerance(maxima, profile, tolerances[i]);&#xD;
        Arrays.sort(htt);&#xD;
        // Showing the lines&#xD;
        int r0x = r0.getBounds().x;&#xD;
        int r0y = r0.getBounds().y;&#xD;
        int w = r0.getBounds().width;&#xD;
        int[] positionsy = new int[htt.length];&#xD;
        for (int k = 0; k &lt; htt.length; k++) {&#xD;
            positionsy[k] = r0y + htt[k];&#xD;
        }&#xD;
        for (int j = 0; j &lt; htt.length; j++) {&#xD;
            /*Line line = new Line(r0x, r0y + htt[j], r0x + w, r0y + htt[j]);
                 Line lineintersection = lineintersectionroi(r0,line);*/&#xD;
            Rectangle r = new Rectangle(r0x, r0y + htt[j], w, 2);&#xD;
            Roi r1 = rectangleintersectionroi(r0, r);&#xD;
            if (ia.m.finallanes[indexes[i]].isIsstandard()) {&#xD;
                if (c == Color.RED) {&#xD;
                    r1.setFillColor(Color.BLUE);&#xD;
                } else {&#xD;
                    r1.setFillColor(Color.RED);&#xD;
                }&#xD;
            } else {&#xD;
                r1.setFillColor(c);&#xD;
            }&#xD;
            bm.add(imp, r1, j, indexes[i]);&#xD;
        //bm.add(imp, line, j);&#xD;
        }&#xD;
    }&#xD;
    //m.finallanes[i].setProfile(profile);&#xD;
    //m.finallanes[i].setPositionbands(positionsy);&#xD;
    bm.showAll(0);&#xD;
//m.finallanes = finallanes;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bMbEgGWNEei0cbjpkrd07g" name="lineintersectionroi">
                  <language>JAVA</language>
                  <body>&#xD;
    Line line;&#xD;
    int[] xpointsl = l.getPoints().xpoints;&#xD;
    int[] ypointsl = l.getPoints().ypoints;&#xD;
    int len = xpointsl.length;&#xD;
    Boolean inside = false;&#xD;
    int x0 = xpointsl[0];&#xD;
    int y0 = ypointsl[0];&#xD;
    int x1 = xpointsl[len - 1];&#xD;
    int y1 = ypointsl[len - 1];&#xD;
    for (int i = 1; i &lt; len; i++) {&#xD;
        if (!inside) {&#xD;
            if (r.contains(xpointsl[i], ypointsl[i])) {&#xD;
                x0 = xpointsl[i];&#xD;
                y0 = ypointsl[i];&#xD;
                inside = true;&#xD;
            }&#xD;
        } else {&#xD;
            if (!r.contains(xpointsl[i], ypointsl[i])) {&#xD;
                x1 = xpointsl[i];&#xD;
                y1 = ypointsl[i];&#xD;
                line = new Line(x0, y0, x1, y1);&#xD;
                return line;&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    line = new Line(x0, y0, x1, y1);&#xD;
    return line;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bMjnYGWNEei0cbjpkrd07g" name="higherthantolerance">
                  <language>JAVA</language>
                  <body>&#xD;
    ArrayList&lt;Integer> res = new ArrayList&lt;Integer>();&#xD;
    for (int i = 0; i &lt; v.length; i++) {&#xD;
        if (p[v[i]] > tolerance) {&#xD;
            res.add(v[i]);&#xD;
        }&#xD;
    }&#xD;
    int[] ret = new int[res.size()];&#xD;
    for (int i = 0; i &lt; ret.length; i++) {&#xD;
        ret[i] = res.get(i);&#xD;
    }&#xD;
    return ret;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bMqVEGWNEei0cbjpkrd07g" name="movingaveragefilter">
                  <language>JAVA</language>
                  <body>&#xD;
    int lv = v.length;&#xD;
    double[] res = new double[lv];&#xD;
    // starting point &#xD;
    int sp;&#xD;
    // end point &#xD;
    int ep;&#xD;
    for (int i = 0; i &lt; lv; i++) {&#xD;
        sp = i - (avgpoints - 1) / 2;&#xD;
        if (sp &lt; 0) {&#xD;
            sp = 0;&#xD;
        }&#xD;
        ep = i + (avgpoints - 1) / 2;&#xD;
        if (ep >= lv) {&#xD;
            ep = lv - 1;&#xD;
        }&#xD;
        double partial_sum = 0;&#xD;
        for (int j = sp; j &lt;= ep; j++) {&#xD;
            partial_sum = partial_sum + v[j];&#xD;
        }&#xD;
        res[i] = partial_sum / (ep - sp + 1);&#xD;
    }&#xD;
    return res;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bMv0oGWNEei0cbjpkrd07g" name="higherthanvalue">
                  <language>JAVA</language>
                  <body>&#xD;
    if (from_end) {&#xD;
        int pos = 0;&#xD;
        for (int i = 0; i &lt; v.length; i++) {&#xD;
            if (value &lt; v[i]) {&#xD;
                return i;&#xD;
            }&#xD;
        }&#xD;
        return pos;&#xD;
    } else {&#xD;
        int pos = v.length - 1;&#xD;
        for (int i = v.length - 1; i >= 0; i--) {&#xD;
            if (value &lt; v[i]) {&#xD;
                return i;&#xD;
            }&#xD;
        }&#xD;
        return pos;&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bMxCwGWNEei0cbjpkrd07g" name="removeOverlay">
                  <language>JAVA</language>
                  <body>&#xD;
    if (imp != null &amp;&amp; imp.getCanvas() != null) {&#xD;
        setOverlay(imp, null);&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bMxp0mWNEei0cbjpkrd07g" name="setOverlay">
                  <language>JAVA</language>
                  <body>&#xD;
    if (imp == null) {&#xD;
        return;&#xD;
    }&#xD;
    ImageCanvas ic = imp.getCanvas();&#xD;
    if (ic == null) {&#xD;
        imp.setOverlay(overlay);&#xD;
        return;&#xD;
    }&#xD;
    ic.setShowAllList(overlay);&#xD;
    imp.draw();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bMyQ4mWNEei0cbjpkrd07g" name="getBm">
                  <language>JAVA</language>
                  <body>&#xD;
    return bm;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bM0GEGWNEei0cbjpkrd07g" name="initComponents">
                  <language>JAVA</language>
                  <body>&#xD;
    buttonGroup1 = new javax.swing.ButtonGroup();&#xD;
    jPanel4 = new javax.swing.JPanel();&#xD;
    jButton2 = new javax.swing.JButton();&#xD;
    jbBack = new javax.swing.JButton();&#xD;
    jPanel5 = new javax.swing.JPanel();&#xD;
    jLabel1 = new javax.swing.JLabel();&#xD;
    jLabel6 = new javax.swing.JLabel();&#xD;
    jLabel7 = new javax.swing.JLabel();&#xD;
    jLabel8 = new javax.swing.JLabel();&#xD;
    jLabel2 = new javax.swing.JLabel();&#xD;
    jLabel3 = new javax.swing.JLabel();&#xD;
    jLabel4 = new javax.swing.JLabel();&#xD;
    jPanel1 = new javax.swing.JPanel();&#xD;
    jPanel2 = new javax.swing.JPanel();&#xD;
    jScrollPane1 = new javax.swing.JScrollPane();&#xD;
    jTextArea1 = new javax.swing.JTextArea();&#xD;
    jScrollPane2 = new javax.swing.JScrollPane();&#xD;
    jPanel6 = new javax.swing.JPanel();&#xD;
    jLabel5 = new javax.swing.JLabel();&#xD;
    jSlider1 = new javax.swing.JSlider();&#xD;
    jLabel9 = new javax.swing.JLabel();&#xD;
    jSlider2 = new javax.swing.JSlider();&#xD;
    jLabel10 = new javax.swing.JLabel();&#xD;
    jLabel11 = new javax.swing.JLabel();&#xD;
    jLabel12 = new javax.swing.JLabel();&#xD;
    jLabel13 = new javax.swing.JLabel();&#xD;
    jLabel14 = new javax.swing.JLabel();&#xD;
    jLabel15 = new javax.swing.JLabel();&#xD;
    jLabel16 = new javax.swing.JLabel();&#xD;
    jLabel17 = new javax.swing.JLabel();&#xD;
    jSlider3 = new javax.swing.JSlider();&#xD;
    jSlider4 = new javax.swing.JSlider();&#xD;
    jSlider5 = new javax.swing.JSlider();&#xD;
    jSlider6 = new javax.swing.JSlider();&#xD;
    jSlider7 = new javax.swing.JSlider();&#xD;
    jSlider8 = new javax.swing.JSlider();&#xD;
    jSlider9 = new javax.swing.JSlider();&#xD;
    jSlider10 = new javax.swing.JSlider();&#xD;
    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);&#xD;
    setTitle(&quot;Image analysis&quot;);&#xD;
    setResizable(false);&#xD;
    addWindowListener(new java.awt.event.WindowAdapter() {&#xD;
&#xD;
        public void windowClosed(java.awt.event.WindowEvent evt) {&#xD;
            formWindowClosed(evt);&#xD;
        }&#xD;
    });&#xD;
    jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());&#xD;
    jButton2.setText(&quot;Next>&quot;);&#xD;
    jButton2.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton2ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jbBack.setText(&quot;&lt;Back&quot;);&#xD;
    jbBack.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbBackActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);&#xD;
    jPanel4.setLayout(jPanel4Layout);&#xD;
    jPanel4Layout.setHorizontalGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addComponent(jbBack).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButton2)));&#xD;
    jPanel4Layout.setVerticalGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jButton2).addComponent(jbBack))));&#xD;
    jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Steps&quot;)));&#xD;
    jPanel5.setForeground(new java.awt.Color(0, 17, 255));&#xD;
    jLabel1.setText(&quot;Step 1. Image preprocessing&quot;);&#xD;
    jLabel6.setText(&quot;Step 2. Lane detection&quot;);&#xD;
    jLabel7.setText(&quot;Step 3. Normalisation&quot;);&#xD;
    jLabel8.setText(&quot;Step 4. Band detection&quot;);&#xD;
    jLabel2.setForeground(new java.awt.Color(0, 15, 255));&#xD;
    jLabel2.setText(&quot;3.1. Markers threshold&quot;);&#xD;
    jLabel3.setText(&quot;3.2. Markers picking&quot;);&#xD;
    jLabel4.setText(&quot;3.3. Migration model&quot;);&#xD;
    javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);&#xD;
    jPanel5.setLayout(jPanel5Layout);&#xD;
    jPanel5Layout.setHorizontalGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel5Layout.createSequentialGroup().addContainerGap().addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel1).addComponent(jLabel6).addComponent(jLabel7).addComponent(jLabel8).addGroup(jPanel5Layout.createSequentialGroup().addGap(12, 12, 12).addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel3).addComponent(jLabel2).addComponent(jLabel4)))).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jPanel5Layout.setVerticalGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel5Layout.createSequentialGroup().addContainerGap().addComponent(jLabel1).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel6).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel7).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel2).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel3).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel4).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel8).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Help&quot;));&#xD;
    jTextArea1.setEditable(false);&#xD;
    jTextArea1.setColumns(20);&#xD;
    jTextArea1.setRows(5);&#xD;
    jTextArea1.setText(&quot;In this step, you can automatically\ndetect the bands of each marker\n(reference lane). You can fix a\ndifferent threshold for each \nmarker of the image.\n&quot;);&#xD;
    jScrollPane1.setViewportView(jTextArea1);&#xD;
    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);&#xD;
    jPanel2.setLayout(jPanel2Layout);&#xD;
    jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING));&#xD;
    jPanel2Layout.setVerticalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE));&#xD;
    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);&#xD;
    jPanel1.setLayout(jPanel1Layout);&#xD;
    jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));&#xD;
    jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup().addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)));&#xD;
    jLabel5.setText(&quot;Marker 1:&quot;);&#xD;
    jSlider1.setMaximum(255);&#xD;
    jSlider1.addChangeListener(new javax.swing.event.ChangeListener() {&#xD;
&#xD;
        public void stateChanged(javax.swing.event.ChangeEvent evt) {&#xD;
            jSlider1StateChanged(evt);&#xD;
        }&#xD;
    });&#xD;
    jLabel9.setText(&quot;Marker 2:&quot;);&#xD;
    jSlider2.setMaximum(255);&#xD;
    jSlider2.addChangeListener(new javax.swing.event.ChangeListener() {&#xD;
&#xD;
        public void stateChanged(javax.swing.event.ChangeEvent evt) {&#xD;
            jSlider2StateChanged(evt);&#xD;
        }&#xD;
    });&#xD;
    jLabel10.setText(&quot;Marker 3:&quot;);&#xD;
    jLabel11.setText(&quot;Marker 4:&quot;);&#xD;
    jLabel12.setText(&quot;Marker 5:&quot;);&#xD;
    jLabel13.setText(&quot;Marker 6:&quot;);&#xD;
    jLabel14.setText(&quot;Marker 7:&quot;);&#xD;
    jLabel15.setText(&quot;Marker 8:&quot;);&#xD;
    jLabel16.setText(&quot;Marker 9:&quot;);&#xD;
    jLabel17.setText(&quot;Marker 10:&quot;);&#xD;
    jSlider3.setMaximum(255);&#xD;
    jSlider3.addChangeListener(new javax.swing.event.ChangeListener() {&#xD;
&#xD;
        public void stateChanged(javax.swing.event.ChangeEvent evt) {&#xD;
            jSlider3StateChanged(evt);&#xD;
        }&#xD;
    });&#xD;
    jSlider4.setMaximum(255);&#xD;
    jSlider4.addChangeListener(new javax.swing.event.ChangeListener() {&#xD;
&#xD;
        public void stateChanged(javax.swing.event.ChangeEvent evt) {&#xD;
            jSlider4StateChanged(evt);&#xD;
        }&#xD;
    });&#xD;
    jSlider5.setMaximum(255);&#xD;
    jSlider5.addChangeListener(new javax.swing.event.ChangeListener() {&#xD;
&#xD;
        public void stateChanged(javax.swing.event.ChangeEvent evt) {&#xD;
            jSlider5StateChanged(evt);&#xD;
        }&#xD;
    });&#xD;
    jSlider6.setMaximum(255);&#xD;
    jSlider6.addChangeListener(new javax.swing.event.ChangeListener() {&#xD;
&#xD;
        public void stateChanged(javax.swing.event.ChangeEvent evt) {&#xD;
            jSlider6StateChanged(evt);&#xD;
        }&#xD;
    });&#xD;
    jSlider7.setMaximum(255);&#xD;
    jSlider7.addChangeListener(new javax.swing.event.ChangeListener() {&#xD;
&#xD;
        public void stateChanged(javax.swing.event.ChangeEvent evt) {&#xD;
            jSlider7StateChanged(evt);&#xD;
        }&#xD;
    });&#xD;
    jSlider8.setMaximum(255);&#xD;
    jSlider8.addChangeListener(new javax.swing.event.ChangeListener() {&#xD;
&#xD;
        public void stateChanged(javax.swing.event.ChangeEvent evt) {&#xD;
            jSlider8StateChanged(evt);&#xD;
        }&#xD;
    });&#xD;
    jSlider9.setMaximum(255);&#xD;
    jSlider9.addChangeListener(new javax.swing.event.ChangeListener() {&#xD;
&#xD;
        public void stateChanged(javax.swing.event.ChangeEvent evt) {&#xD;
            jSlider9StateChanged(evt);&#xD;
        }&#xD;
    });&#xD;
    jSlider10.setMaximum(255);&#xD;
    jSlider10.addChangeListener(new javax.swing.event.ChangeListener() {&#xD;
&#xD;
        public void stateChanged(javax.swing.event.ChangeEvent evt) {&#xD;
            jSlider10StateChanged(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);&#xD;
    jPanel6.setLayout(jPanel6Layout);&#xD;
    jPanel6Layout.setHorizontalGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel6Layout.createSequentialGroup().addContainerGap().addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup().addComponent(jLabel9).addContainerGap(187, Short.MAX_VALUE)).addGroup(jPanel6Layout.createSequentialGroup().addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false).addGroup(jPanel6Layout.createSequentialGroup().addComponent(jLabel15).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jSlider8, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(jPanel6Layout.createSequentialGroup().addComponent(jLabel14).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jSlider7, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup().addComponent(jLabel17).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jSlider10, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup().addComponent(jLabel16).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jSlider9, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(jPanel6Layout.createSequentialGroup().addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel5).addComponent(jLabel10).addComponent(jLabel11).addComponent(jLabel12).addComponent(jLabel13)).addGap(33, 33, 33).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false).addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jSlider2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)).addComponent(jSlider3, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jSlider4, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jSlider5, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jSlider6, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)))).addGap(0, 0, Short.MAX_VALUE)))));&#xD;
    jPanel6Layout.setVerticalGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel6Layout.createSequentialGroup().addContainerGap().addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel5).addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel9).addComponent(jSlider2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel10).addComponent(jSlider3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel11).addComponent(jSlider4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel12).addComponent(jSlider5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel13).addComponent(jSlider6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel14).addComponent(jSlider7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel15).addComponent(jSlider8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel16).addComponent(jSlider9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel17).addComponent(jSlider10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addContainerGap(1152, Short.MAX_VALUE)));&#xD;
    jScrollPane2.setViewportView(jPanel6);&#xD;
    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());&#xD;
    getContentPane().setLayout(layout);&#xD;
    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(layout.createSequentialGroup().addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jScrollPane2))));&#xD;
    layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(layout.createSequentialGroup().addContainerGap().addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)));&#xD;
    pack();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bM4XgGWNEei0cbjpkrd07g" name="formWindowClosed">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_formWindowClosed&#xD;
    try {&#xD;
        if (close) {&#xD;
            ia.saveUnfinishedExperiment(this, 6);&#xD;
            close = false;&#xD;
        } else {&#xD;
        }&#xD;
    } catch (IOException ex) {&#xD;
        Logger.getLogger(Step3_1.class.getName()).log(Level.SEVERE, null, ex);&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bM8B4GWNEei0cbjpkrd07g" name="jbBackActionPerformed" specification="_bM6MsGWNEei0cbjpkrd07g">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jbBackActionPerformed&#xD;
    close = false;&#xD;
    int option = JOptionPane.showConfirmDialog(this, &quot;If you go back, the current band selection\n will be lost, do you want to go back?&quot;, &quot;Alert&quot;, JOptionPane.YES_NO_OPTION);&#xD;
    if (option == JOptionPane.YES_OPTION) {&#xD;
        imp.deleteRoi();&#xD;
        bm.dispose();&#xD;
        ImageWindow iw = imp.getWindow();&#xD;
        LaneManagerCanvas cc = new LaneManagerCanvas(imp);&#xD;
        ImageWindow iw2 = new ImageWindow(imp, cc);&#xD;
        iw.hide();&#xD;
        LaneManager lm = new LaneManager(ia.m);&#xD;
        step2_3 s = new step2_3(imp, ia, darkbg, lm);&#xD;
        lm.delete_without_asking(false);&#xD;
        Roi[] lanes = ia.m.getLanes();&#xD;
        if (lanes != null) {&#xD;
            for (Roi lane : lanes) {&#xD;
                lm.addRoi(lane);&#xD;
            }&#xD;
            if (getstandardlanes(ia.m.finallanes) != null) {&#xD;
                lm.fix_standards(roisfromlanes(getstandardlanes(ia.m.finallanes)));&#xD;
            }&#xD;
        }&#xD;
        lm.setLanesinfo(ia.m.getLanesinfo());&#xD;
        this.dispose();&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bM_FMGWNEei0cbjpkrd07g" name="jButton2ActionPerformed" specification="_bM9QAGWNEei0cbjpkrd07g">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton2ActionPerformed&#xD;
    close = false;&#xD;
    Step3_2 s = new Step3_2(imp, ia, darkbg, bm);&#xD;
    this.dispose();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bNCIgGWNEei0cbjpkrd07g" name="jSlider2StateChanged">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jSlider2StateChanged&#xD;
    localselectbands();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bNFL0GWNEei0cbjpkrd07g" name="jSlider1StateChanged">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jSlider1StateChanged&#xD;
    localselectbands();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bNJdQGWNEei0cbjpkrd07g" name="jSlider3StateChanged">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jSlider3StateChanged&#xD;
    localselectbands();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bNNHoGWNEei0cbjpkrd07g" name="jSlider4StateChanged">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jSlider4StateChanged&#xD;
    localselectbands();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bNPj4GWNEei0cbjpkrd07g" name="jSlider5StateChanged">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jSlider5StateChanged&#xD;
    localselectbands();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bNSnMGWNEei0cbjpkrd07g" name="jSlider6StateChanged">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jSlider6StateChanged&#xD;
    localselectbands();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bNVqgGWNEei0cbjpkrd07g" name="jSlider7StateChanged">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jSlider7StateChanged&#xD;
    localselectbands();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bNYt0GWNEei0cbjpkrd07g" name="jSlider8StateChanged">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jSlider8StateChanged&#xD;
    localselectbands();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bNbxIGWNEei0cbjpkrd07g" name="jSlider9StateChanged">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jSlider9StateChanged&#xD;
    localselectbands();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bNe0cGWNEei0cbjpkrd07g" name="jSlider10StateChanged">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jSlider10StateChanged&#xD;
    localselectbands();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_AQGAAI5VEeie3Y8fpsu39w" name="StateMachine1">
                  <region xmi:type="uml:Region" xmi:id="_AabAsI5VEeie3Y8fpsu39w" name="Region1">
                    <transition xmi:type="uml:Transition" xmi:id="_DYcRAI5VEeie3Y8fpsu39w" source="_BJoQEI5VEeie3Y8fpsu39w" target="_A7r6sI5VEeie3Y8fpsu39w">
                      <trigger xmi:type="uml:Trigger" xmi:id="_KMvPUI5VEeie3Y8fpsu39w" event="_KAVyEI5VEeie3Y8fpsu39w"/>
                    </transition>
                    <transition xmi:type="uml:Transition" xmi:id="_ETC4EI5VEeie3Y8fpsu39w" source="_A7r6sI5VEeie3Y8fpsu39w" target="_BYcIII5VEeie3Y8fpsu39w">
                      <trigger xmi:type="uml:Trigger" xmi:id="_Nq4KII5VEeie3Y8fpsu39w" event="_Nh5NQI5VEeie3Y8fpsu39w"/>
                    </transition>
                    <transition xmi:type="uml:Transition" xmi:id="_E8caYI5VEeie3Y8fpsu39w" source="_A7r6sI5VEeie3Y8fpsu39w" target="_BYcIII5VEeie3Y8fpsu39w">
                      <trigger xmi:type="uml:Trigger" xmi:id="_RWTTAI5VEeie3Y8fpsu39w" event="_ROxusI5VEeie3Y8fpsu39w"/>
                    </transition>
                    <subvertex xmi:type="uml:State" xmi:id="_A7r6sI5VEeie3Y8fpsu39w" name="Activated"/>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_BJoQEI5VEeie3Y8fpsu39w" name="Initial1"/>
                    <subvertex xmi:type="uml:State" xmi:id="_BYcIII5VEeie3Y8fpsu39w" name="Finished"/>
                  </region>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_bLt54GWNEei0cbjpkrd07g" name="Step3_1" visibility="public" method="_bLyyYGWNEei0cbjpkrd07g">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_bLxkQGWNEei0cbjpkrd07g" name="imp" type="_a5Za0GWNEei0cbjpkrd07g"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_bL1OoGWNEei0cbjpkrd07g" name="Step3_1" visibility="public" method="_bL78UGWNEei0cbjpkrd07g">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_bL45AGWNEei0cbjpkrd07g" name="imp" type="_a5Za0GWNEei0cbjpkrd07g"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_bL6HIGWNEei0cbjpkrd07g" name="aThis" type="_a5ikwGWNEei0cbjpkrd07g"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_bL6uMGWNEei0cbjpkrd07g" name="darkbg">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_bM6MsGWNEei0cbjpkrd07g" name="jbBackActionPerformed" visibility="private" method="_bM8B4GWNEei0cbjpkrd07g">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_bM7a0GWNEei0cbjpkrd07g" name="evt" type="_a6tpcGWNEei0cbjpkrd07g"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_bM9QAGWNEei0cbjpkrd07g" name="jButton2ActionPerformed" visibility="private" method="_bM_FMGWNEei0cbjpkrd07g">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_bM-eIGWNEei0cbjpkrd07g" name="evt" type="_a6tpcGWNEei0cbjpkrd07g"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_bOvYsGWNEei0cbjpkrd07g" name="Step4_2" visibility="public" classifierBehavior="_rRlsII5cEeie3Y8fpsu39w">
                <generalization xmi:type="uml:Generalization" xmi:id="_JJ_vc24VEei47fqiwvb5mw" general="_a0hh4GWNEei0cbjpkrd07g"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bOx08GWNEei0cbjpkrd07g" name="close" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_bOzqIGWNEei0cbjpkrd07g" name="defaultValue">
                    <language>JAVA</language>
                    <body>true</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bO04QGWNEei0cbjpkrd07g" name="imp" visibility="private" type="_a5Za0GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bO1fUGWNEei0cbjpkrd07g" name="ia" visibility="private" type="_a5ikwGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bO3UgGWNEei0cbjpkrd07g" name="bm" visibility="private" type="_a5orYGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bO5JsGWNEei0cbjpkrd07g" name="darkbg" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bO6X0GWNEei0cbjpkrd07g" name="tolerance" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bO8NAGWNEei0cbjpkrd07g" name="c" visibility="private" type="_bLnzQGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bSGOsGWNEei0cbjpkrd07g" name="buttonGroup1" visibility="private" type="_a70csGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bSID4GWNEei0cbjpkrd07g" name="jButton2" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bSJSAGWNEei0cbjpkrd07g" name="jLabel1" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bSKgIGWNEei0cbjpkrd07g" name="jLabel10" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bSLuQGWNEei0cbjpkrd07g" name="jLabel11" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bSNjcGWNEei0cbjpkrd07g" name="jLabel12" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bSOxkGWNEei0cbjpkrd07g" name="jLabel13" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bSP_sGWNEei0cbjpkrd07g" name="jLabel14" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bSRN0GWNEei0cbjpkrd07g" name="jLabel15" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bSTDAGWNEei0cbjpkrd07g" name="jLabel16" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bSTqEGWNEei0cbjpkrd07g" name="jLabel17" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bSVfQGWNEei0cbjpkrd07g" name="jLabel18" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bSXUcGWNEei0cbjpkrd07g" name="jLabel19" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bSYikGWNEei0cbjpkrd07g" name="jLabel2" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bSZwsGWNEei0cbjpkrd07g" name="jLabel20" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bSa-0GWNEei0cbjpkrd07g" name="jLabel21" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bScM8GWNEei0cbjpkrd07g" name="jLabel22" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bScM8WWNEei0cbjpkrd07g" name="jLabel23" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bSeCIGWNEei0cbjpkrd07g" name="jLabel24" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bSf3UGWNEei0cbjpkrd07g" name="jLabel25" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bShsgGWNEei0cbjpkrd07g" name="jLabel26" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bSjhsGWNEei0cbjpkrd07g" name="jLabel27" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bSlW4GWNEei0cbjpkrd07g" name="jLabel28" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bSnMEGWNEei0cbjpkrd07g" name="jLabel29" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bSoaMGWNEei0cbjpkrd07g" name="jLabel3" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bSpoUGWNEei0cbjpkrd07g" name="jLabel30" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bSrdgGWNEei0cbjpkrd07g" name="jLabel31" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bSt5wGWNEei0cbjpkrd07g" name="jLabel32" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bSw9EGWNEei0cbjpkrd07g" name="jLabel33" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bSyyQGWNEei0cbjpkrd07g" name="jLabel34" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bS0ncGWNEei0cbjpkrd07g" name="jLabel35" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bS2coGWNEei0cbjpkrd07g" name="jLabel36" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bS3qwGWNEei0cbjpkrd07g" name="jLabel4" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bS444GWNEei0cbjpkrd07g" name="jLabel6" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bS444WWNEei0cbjpkrd07g" name="jLabel7" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bS5f8GWNEei0cbjpkrd07g" name="jLabel8" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bS6uEGWNEei0cbjpkrd07g" name="jLabel9" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bS8jQGWNEei0cbjpkrd07g" name="jPanel1" visibility="private" type="_a8yGAGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bS-YcGWNEei0cbjpkrd07g" name="jPanel2" visibility="private" type="_a8yGAGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bS_mkGWNEei0cbjpkrd07g" name="jPanel4" visibility="private" type="_a8yGAGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bTBbwGWNEei0cbjpkrd07g" name="jPanel5" visibility="private" type="_a8yGAGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bTDQ8GWNEei0cbjpkrd07g" name="jPanel6" visibility="private" type="_a8yGAGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bTEfEGWNEei0cbjpkrd07g" name="jScrollPane1" visibility="private" type="_a9Dy0GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bTFtMGWNEei0cbjpkrd07g" name="jScrollPane2" visibility="private" type="_a9Dy0GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bTHiYGWNEei0cbjpkrd07g" name="jSlider10" visibility="private" type="_bGFzA2WNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bTIwgGWNEei0cbjpkrd07g" name="jSlider11" visibility="private" type="_bGFzA2WNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bTKlsGWNEei0cbjpkrd07g" name="jSlider12" visibility="private" type="_bGFzA2WNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bTLz0GWNEei0cbjpkrd07g" name="jSlider13" visibility="private" type="_bGFzA2WNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bTMa4GWNEei0cbjpkrd07g" name="jSlider14" visibility="private" type="_bGFzA2WNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bTNpAGWNEei0cbjpkrd07g" name="jSlider15" visibility="private" type="_bGFzA2WNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bTQFQGWNEei0cbjpkrd07g" name="jSlider16" visibility="private" type="_bGFzA2WNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bTR6cGWNEei0cbjpkrd07g" name="jSlider17" visibility="private" type="_bGFzA2WNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bTTIkGWNEei0cbjpkrd07g" name="jSlider18" visibility="private" type="_bGFzA2WNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bTU9wGWNEei0cbjpkrd07g" name="jSlider19" visibility="private" type="_bGFzA2WNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bTVk0GWNEei0cbjpkrd07g" name="jSlider2" visibility="private" type="_bGFzA2WNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bTWL4GWNEei0cbjpkrd07g" name="jSlider20" visibility="private" type="_bGFzA2WNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bTWL4WWNEei0cbjpkrd07g" name="jSlider21" visibility="private" type="_bGFzA2WNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bTYBEGWNEei0cbjpkrd07g" name="jSlider22" visibility="private" type="_bGFzA2WNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bTZPMGWNEei0cbjpkrd07g" name="jSlider23" visibility="private" type="_bGFzA2WNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bTbEYGWNEei0cbjpkrd07g" name="jSlider24" visibility="private" type="_bGFzA2WNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bTcSgGWNEei0cbjpkrd07g" name="jSlider25" visibility="private" type="_bGFzA2WNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bTeHsGWNEei0cbjpkrd07g" name="jSlider26" visibility="private" type="_bGFzA2WNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bTfV0GWNEei0cbjpkrd07g" name="jSlider27" visibility="private" type="_bGFzA2WNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bThLAGWNEei0cbjpkrd07g" name="jSlider28" visibility="private" type="_bGFzA2WNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bTjAMGWNEei0cbjpkrd07g" name="jSlider29" visibility="private" type="_bGFzA2WNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bTk1YGWNEei0cbjpkrd07g" name="jSlider3" visibility="private" type="_bGFzA2WNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bTmDgGWNEei0cbjpkrd07g" name="jSlider4" visibility="private" type="_bGFzA2WNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bTn4sGWNEei0cbjpkrd07g" name="jSlider5" visibility="private" type="_bGFzA2WNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bTofwGWNEei0cbjpkrd07g" name="jSlider6" visibility="private" type="_bGFzA2WNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bTpG0GWNEei0cbjpkrd07g" name="jSlider7" visibility="private" type="_bGFzA2WNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bTqU8GWNEei0cbjpkrd07g" name="jSlider8" visibility="private" type="_bGFzA2WNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bTrjEGWNEei0cbjpkrd07g" name="jSlider9" visibility="private" type="_bGFzA2WNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bTsxMGWNEei0cbjpkrd07g" name="jTextArea1" visibility="private" type="_a9IrUGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bTt_UGWNEei0cbjpkrd07g" name="jbBack" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bPip8GWNEei0cbjpkrd07g" name="Step4_2" specification="_bO-CMGWNEei0cbjpkrd07g">
                  <language>JAVA</language>
                  <body>&#xD;
    super();&#xD;
    initComponents();&#xD;
    this.imp = imp;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bPowkWWNEei0cbjpkrd07g" name="Step4_2" specification="_bPkfIGWNEei0cbjpkrd07g">
                  <language>JAVA</language>
                  <body>&#xD;
    super();&#xD;
    initComponents();&#xD;
    this.imp = imp;&#xD;
    this.ia = aThis;&#xD;
    this.darkbg = darkbg;&#xD;
    this.bm = bm;&#xD;
    this.c = c;&#xD;
    this.tolerance = tolerance;&#xD;
    IJ.setTool(&quot;point&quot;);&#xD;
    bm.updateShowAll();&#xD;
    Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();&#xD;
    double width = screenSize.getWidth();&#xD;
    setVisible(true);&#xD;
    setLocation((int) width - 515, 0);&#xD;
    imp.getWindow().setAlwaysOnTop(true);&#xD;
    setAlwaysOnTop(true);&#xD;
    toFront();&#xD;
    JSlider[] sliders = { jSlider2, jSlider3, jSlider4, jSlider5, jSlider6, jSlider7, jSlider8, jSlider9, jSlider10, jSlider11, jSlider12, jSlider13, jSlider14, jSlider15, jSlider16, jSlider17, jSlider18, jSlider19, jSlider20, jSlider21, jSlider22, jSlider23, jSlider24, jSlider25, jSlider26, jSlider27, jSlider28, jSlider29 };&#xD;
    JLabel[] labels = { jLabel9, jLabel10, jLabel11, jLabel12, jLabel13, jLabel14, jLabel15, jLabel16, jLabel17, jLabel18, jLabel19, jLabel20, jLabel21, jLabel22, jLabel23, jLabel24, jLabel25, jLabel26, jLabel27, jLabel28, jLabel29, jLabel30, jLabel31, jLabel32, jLabel33, jLabel34, jLabel35, jLabel36 };&#xD;
    int[] indexes = indexesstandardlanes(ia.m.finallanes);&#xD;
    initiatenecessaryscrollbars(sliders, labels, ia.m.finallanes.length - indexes.length, tolerance);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bQmZ4GWNEei0cbjpkrd07g" name="jbBackActionPerformed" specification="_bQkksGWNEei0cbjpkrd07g">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jbBackActionPerformed&#xD;
    close = true;&#xD;
    this.dispose();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bQo2IGWNEei0cbjpkrd07g" name="jButton2ActionPerformed" specification="_bQnoAGWNEei0cbjpkrd07g">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton2ActionPerformed&#xD;
    close = false;&#xD;
    Step4_3 s = new Step4_3(imp, ia, darkbg, bm);&#xD;
    this.dispose();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_rRlsII5cEeie3Y8fpsu39w" name="StateMachine1">
                  <region xmi:type="uml:Region" xmi:id="_sN900I5cEeie3Y8fpsu39w" name="Region1">
                    <transition xmi:type="uml:Transition" xmi:id="_vw364I5cEeie3Y8fpsu39w" source="_uwbxkI5cEeie3Y8fpsu39w" target="_vZANcI5cEeie3Y8fpsu39w">
                      <trigger xmi:type="uml:Trigger" xmi:id="_GgRrAI5dEeie3Y8fpsu39w" event="_GVG80I5dEeie3Y8fpsu39w"/>
                    </transition>
                    <transition xmi:type="uml:Transition" xmi:id="_wKXY8I5cEeie3Y8fpsu39w" source="_vZANcI5cEeie3Y8fpsu39w" target="_u-Ek8I5cEeie3Y8fpsu39w">
                      <trigger xmi:type="uml:Trigger" xmi:id="_RdIaII5dEeie3Y8fpsu39w" event="_RVUh8I5dEeie3Y8fpsu39w"/>
                    </transition>
                    <transition xmi:type="uml:Transition" xmi:id="_wiflEI5cEeie3Y8fpsu39w" source="_vZANcI5cEeie3Y8fpsu39w" target="_u-Ek8I5cEeie3Y8fpsu39w">
                      <trigger xmi:type="uml:Trigger" xmi:id="_N_7TcI5dEeie3Y8fpsu39w" event="_N3z5QI5dEeie3Y8fpsu39w"/>
                    </transition>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_uwbxkI5cEeie3Y8fpsu39w" name="Initial1"/>
                    <subvertex xmi:type="uml:State" xmi:id="_u-Ek8I5cEeie3Y8fpsu39w" name="Finished"/>
                    <subvertex xmi:type="uml:State" xmi:id="_vZANcI5cEeie3Y8fpsu39w" name="Activated"/>
                  </region>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_bO-CMGWNEei0cbjpkrd07g" name="Step4_2" visibility="public" method="_bPip8GWNEei0cbjpkrd07g">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_bPiC4GWNEei0cbjpkrd07g" name="imp" type="_a5Za0GWNEei0cbjpkrd07g"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_bPkfIGWNEei0cbjpkrd07g" name="Step4_2" visibility="public" method="_bPowkWWNEei0cbjpkrd07g">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_bPnicGWNEei0cbjpkrd07g" name="imp" type="_a5Za0GWNEei0cbjpkrd07g"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_bPnicWWNEei0cbjpkrd07g" name="aThis" type="_a5ikwGWNEei0cbjpkrd07g"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_bPoJgGWNEei0cbjpkrd07g" name="darkbg">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_bPoJgWWNEei0cbjpkrd07g" name="bm" type="_a5orYGWNEei0cbjpkrd07g"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_bPoJgmWNEei0cbjpkrd07g" name="tolerance">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_bPowkGWNEei0cbjpkrd07g" name="c" type="_bLnzQGWNEei0cbjpkrd07g"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_bQkksGWNEei0cbjpkrd07g" name="jbBackActionPerformed" visibility="private" method="_bQmZ4GWNEei0cbjpkrd07g">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_bQly0GWNEei0cbjpkrd07g" name="evt" type="_a6tpcGWNEei0cbjpkrd07g"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_bQnoAGWNEei0cbjpkrd07g" name="jButton2ActionPerformed" visibility="private" method="_bQo2IGWNEei0cbjpkrd07g">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_bQoPEGWNEei0cbjpkrd07g" name="evt" type="_a6tpcGWNEei0cbjpkrd07g"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_bVPpUGWNEei0cbjpkrd07g" name="Step3_2" visibility="public" classifierBehavior="_WGg5sI5VEeie3Y8fpsu39w">
                <generalization xmi:type="uml:Generalization" xmi:id="_JJ_vcm4VEei47fqiwvb5mw" general="_a0hh4GWNEei0cbjpkrd07g"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bVSFkGWNEei0cbjpkrd07g" name="close" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_bVUh0GWNEei0cbjpkrd07g" name="defaultValue">
                    <language>JAVA</language>
                    <body>true</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bVWXAGWNEei0cbjpkrd07g" name="imp" visibility="private" type="_a5Za0GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bVYMMGWNEei0cbjpkrd07g" name="ia" visibility="private" type="_a5ikwGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bVaocGWNEei0cbjpkrd07g" name="bm" visibility="private" type="_a5orYGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bVb2kGWNEei0cbjpkrd07g" name="darkbg" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bWauAGWNEei0cbjpkrd07g" name="buttonGroup1" visibility="private" type="_a70csGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bWcjMGWNEei0cbjpkrd07g" name="jButton1" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bWdxUGWNEei0cbjpkrd07g" name="jButton2" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bWeYYGWNEei0cbjpkrd07g" name="jButton3" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bWeYYWWNEei0cbjpkrd07g" name="jButton4" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bWgNkGWNEei0cbjpkrd07g" name="jButton5" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bWhbsGWNEei0cbjpkrd07g" name="jButton6" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bWjQ4GWNEei0cbjpkrd07g" name="jButton7" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bWkfAGWNEei0cbjpkrd07g" name="jButton8" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bWmUMGWNEei0cbjpkrd07g" name="jButton9" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bWniUGWNEei0cbjpkrd07g" name="jCheckBox1" visibility="private" type="_a8SWwGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bWowcGWNEei0cbjpkrd07g" name="jLabel1" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bWp-kGWNEei0cbjpkrd07g" name="jLabel2" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bWrMsGWNEei0cbjpkrd07g" name="jLabel3" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bWsa0GWNEei0cbjpkrd07g" name="jLabel4" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bWto8GWNEei0cbjpkrd07g" name="jLabel6" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bWveIGWNEei0cbjpkrd07g" name="jLabel7" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bWwsQGWNEei0cbjpkrd07g" name="jLabel8" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bWxTUGWNEei0cbjpkrd07g" name="jPanel1" visibility="private" type="_a8yGAGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bWzIgGWNEei0cbjpkrd07g" name="jPanel2" visibility="private" type="_a8yGAGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bW09sGWNEei0cbjpkrd07g" name="jPanel3" visibility="private" type="_a8yGAGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bW2y4GWNEei0cbjpkrd07g" name="jPanel4" visibility="private" type="_a8yGAGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bW4BAGWNEei0cbjpkrd07g" name="jPanel5" visibility="private" type="_a8yGAGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bW52MGWNEei0cbjpkrd07g" name="jPanel6" visibility="private" type="_a8yGAGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bW6dQGWNEei0cbjpkrd07g" name="jPanel7" visibility="private" type="_a8yGAGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bW7EUGWNEei0cbjpkrd07g" name="jScrollPane1" visibility="private" type="_a9Dy0GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bW85gGWNEei0cbjpkrd07g" name="jTextArea1" visibility="private" type="_a9IrUGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bW-usGWNEei0cbjpkrd07g" name="jToolBar1" visibility="private" type="_a9M8wGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bW_80GWNEei0cbjpkrd07g" name="jbBack" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bVh9MGWNEei0cbjpkrd07g" name="Step3_2" specification="_bVcdoGWNEei0cbjpkrd07g">
                  <language>JAVA</language>
                  <body>&#xD;
    super();&#xD;
    initComponents();&#xD;
    this.imp = imp;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bVs8UGWNEei0cbjpkrd07g" name="Step3_2" specification="_bVlAgGWNEei0cbjpkrd07g">
                  <language>JAVA</language>
                  <body>&#xD;
    super();&#xD;
    initComponents();&#xD;
    this.imp = imp;&#xD;
    this.ia = aThis;&#xD;
    this.darkbg = darkbg;&#xD;
    if (bm == null) {&#xD;
        this.bm = new BandManager(ia.m);&#xD;
        this.bm.setbgcheckboxstate(darkbg);&#xD;
        //        bm.auto_detect();&#xD;
        this.bm.setVisible(false);&#xD;
    } else {&#xD;
        this.bm = bm;&#xD;
    }&#xD;
    IJ.setTool(&quot;point&quot;);&#xD;
    this.bm.updateShowAll();&#xD;
    Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();&#xD;
    double width = screenSize.getWidth();&#xD;
    setVisible(true);&#xD;
    setLocation((int) width - 515, 0);&#xD;
    imp.getWindow().setAlwaysOnTop(true);&#xD;
    setAlwaysOnTop(true);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bVvYkGWNEei0cbjpkrd07g" name="getBm">
                  <language>JAVA</language>
                  <body>&#xD;
    return bm;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bVyb4GWNEei0cbjpkrd07g" name="initComponents">
                  <language>JAVA</language>
                  <body>&#xD;
    buttonGroup1 = new javax.swing.ButtonGroup();&#xD;
    jPanel4 = new javax.swing.JPanel();&#xD;
    jButton2 = new javax.swing.JButton();&#xD;
    jbBack = new javax.swing.JButton();&#xD;
    jPanel5 = new javax.swing.JPanel();&#xD;
    jLabel1 = new javax.swing.JLabel();&#xD;
    jLabel6 = new javax.swing.JLabel();&#xD;
    jLabel7 = new javax.swing.JLabel();&#xD;
    jLabel8 = new javax.swing.JLabel();&#xD;
    jLabel2 = new javax.swing.JLabel();&#xD;
    jLabel3 = new javax.swing.JLabel();&#xD;
    jLabel4 = new javax.swing.JLabel();&#xD;
    jPanel1 = new javax.swing.JPanel();&#xD;
    jPanel2 = new javax.swing.JPanel();&#xD;
    jScrollPane1 = new javax.swing.JScrollPane();&#xD;
    jTextArea1 = new javax.swing.JTextArea();&#xD;
    jPanel3 = new javax.swing.JPanel();&#xD;
    jPanel7 = new javax.swing.JPanel();&#xD;
    jToolBar1 = new javax.swing.JToolBar();&#xD;
    jButton4 = new javax.swing.JButton();&#xD;
    jButton5 = new javax.swing.JButton();&#xD;
    jButton7 = new javax.swing.JButton();&#xD;
    jButton6 = new javax.swing.JButton();&#xD;
    jPanel6 = new javax.swing.JPanel();&#xD;
    jButton1 = new javax.swing.JButton();&#xD;
    jButton3 = new javax.swing.JButton();&#xD;
    jButton8 = new javax.swing.JButton();&#xD;
    jButton9 = new javax.swing.JButton();&#xD;
    jCheckBox1 = new javax.swing.JCheckBox();&#xD;
    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);&#xD;
    setTitle(&quot;Image analysis&quot;);&#xD;
    setResizable(false);&#xD;
    addWindowListener(new java.awt.event.WindowAdapter() {&#xD;
&#xD;
        public void windowClosed(java.awt.event.WindowEvent evt) {&#xD;
            formWindowClosed(evt);&#xD;
        }&#xD;
    });&#xD;
    jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());&#xD;
    jButton2.setText(&quot;Next>&quot;);&#xD;
    jButton2.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton2ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jbBack.setText(&quot;&lt;Back&quot;);&#xD;
    jbBack.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbBackActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);&#xD;
    jPanel4.setLayout(jPanel4Layout);&#xD;
    jPanel4Layout.setHorizontalGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addComponent(jbBack).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButton2)));&#xD;
    jPanel4Layout.setVerticalGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jButton2).addComponent(jbBack))));&#xD;
    jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Steps&quot;)));&#xD;
    jPanel5.setForeground(new java.awt.Color(0, 17, 255));&#xD;
    jLabel1.setText(&quot;Step 1. Image preprocessing&quot;);&#xD;
    jLabel6.setText(&quot;Step 2. Lane detection&quot;);&#xD;
    jLabel7.setText(&quot;Step 3. Normalisation&quot;);&#xD;
    jLabel8.setText(&quot;Step 4. Band detection&quot;);&#xD;
    jLabel2.setText(&quot;3.1. Markers threshold&quot;);&#xD;
    jLabel3.setForeground(new java.awt.Color(0, 15, 255));&#xD;
    jLabel3.setText(&quot;3.2. Markers picking&quot;);&#xD;
    jLabel4.setText(&quot;3.3. Migration model&quot;);&#xD;
    javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);&#xD;
    jPanel5.setLayout(jPanel5Layout);&#xD;
    jPanel5Layout.setHorizontalGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel5Layout.createSequentialGroup().addContainerGap().addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel1).addComponent(jLabel6).addComponent(jLabel7).addComponent(jLabel8).addGroup(jPanel5Layout.createSequentialGroup().addGap(12, 12, 12).addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel3).addComponent(jLabel2).addComponent(jLabel4)))).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jPanel5Layout.setVerticalGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel5Layout.createSequentialGroup().addContainerGap().addComponent(jLabel1).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel6).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel7).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel2).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel3).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel4).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel8).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Help&quot;));&#xD;
    jTextArea1.setEditable(false);&#xD;
    jTextArea1.setColumns(20);&#xD;
    jTextArea1.setRows(5);&#xD;
    jTextArea1.setText(&quot;In this step, you can manually\npick the bands of the markers. \nShortcuts are indicated between\nbrackets. \nBefore continuing, all the markers\nmust have the same number of \nbands.&quot;);&#xD;
    jScrollPane1.setViewportView(jTextArea1);&#xD;
    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);&#xD;
    jPanel2.setLayout(jPanel2Layout);&#xD;
    jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE));&#xD;
    jPanel2Layout.setVerticalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE));&#xD;
    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);&#xD;
    jPanel1.setLayout(jPanel1Layout);&#xD;
    jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));&#xD;
    jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup().addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)));&#xD;
    javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);&#xD;
    jPanel3.setLayout(jPanel3Layout);&#xD;
    jPanel3Layout.setHorizontalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 0, Short.MAX_VALUE));&#xD;
    jPanel3Layout.setVerticalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 353, Short.MAX_VALUE));&#xD;
    jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Image tools&quot;));&#xD;
    jToolBar1.setRollover(true);&#xD;
    // NOI18N&#xD;
    jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/GelJImages/point.png&quot;)));&#xD;
    jButton4.setToolTipText(&quot;Point tool (use it to select bands)&quot;);&#xD;
    jButton4.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton4ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar1.add(jButton4);&#xD;
    // NOI18N&#xD;
    jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/images/zoom_in.png&quot;)));&#xD;
    jButton5.setToolTipText(&quot;Zoom In&quot;);&#xD;
    jButton5.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton5ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar1.add(jButton5);&#xD;
    // NOI18N&#xD;
    jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/images/zoom_out.png&quot;)));&#xD;
    jButton7.setToolTipText(&quot;Zoom out&quot;);&#xD;
    jButton7.setFocusable(false);&#xD;
    jButton7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);&#xD;
    jButton7.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);&#xD;
    jButton7.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton7ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar1.add(jButton7);&#xD;
    // NOI18N&#xD;
    jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/images/hand.png&quot;)));&#xD;
    jButton6.setToolTipText(&quot;Hand tool&quot;);&#xD;
    jButton6.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton6ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar1.add(jButton6);&#xD;
    javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);&#xD;
    jPanel7.setLayout(jPanel7Layout);&#xD;
    jPanel7Layout.setHorizontalGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));&#xD;
    jPanel7Layout.setVerticalGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel7Layout.createSequentialGroup().addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Band tools&quot;));&#xD;
    jButton1.setText(&quot;Add band [a]&quot;);&#xD;
    jButton1.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton1ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jButton3.setText(&quot;Delete band [del]&quot;);&#xD;
    jButton3.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton3ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jButton8.setText(&quot;Undo [Ctrl + z]&quot;);&#xD;
    jButton8.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton8ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jButton9.setText(&quot;Redo [r]&quot;);&#xD;
    jButton9.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton9ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);&#xD;
    jPanel6.setLayout(jPanel6Layout);&#xD;
    jPanel6Layout.setHorizontalGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(jPanel6Layout.createSequentialGroup().addComponent(jButton8).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButton9, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)));&#xD;
    jPanel6Layout.setVerticalGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel6Layout.createSequentialGroup().addComponent(jButton1).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButton3).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jButton8).addComponent(jButton9)).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jCheckBox1.setText(&quot;Show histogram&quot;);&#xD;
    jCheckBox1.addChangeListener(new javax.swing.event.ChangeListener() {&#xD;
&#xD;
        public void stateChanged(javax.swing.event.ChangeEvent evt) {&#xD;
            jCheckBox1StateChanged(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());&#xD;
    getContentPane().setLayout(layout);&#xD;
    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(layout.createSequentialGroup().addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false).addComponent(jCheckBox1).addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))));&#xD;
    layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addGroup(layout.createSequentialGroup().addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jCheckBox1))).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)));&#xD;
    pack();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bV1fMGWNEei0cbjpkrd07g" name="formWindowClosed">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_formWindowClosed&#xD;
    try {&#xD;
        if (close) {&#xD;
            bm.close();&#xD;
            ia.saveUnfinishedExperiment(this, 6);&#xD;
            close = false;&#xD;
        } else {&#xD;
        }&#xD;
    } catch (IOException ex) {&#xD;
        Logger.getLogger(Step3_2.class.getName()).log(Level.SEVERE, null, ex);&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bV5JkGWNEei0cbjpkrd07g" name="jbBackActionPerformed" specification="_bV3UYGWNEei0cbjpkrd07g">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jbBackActionPerformed&#xD;
    close = false;&#xD;
    int option = JOptionPane.showConfirmDialog(this, &quot;If you go back, the current band selection\n will be lost, do you want to go back?&quot;, &quot;Alert&quot;, JOptionPane.YES_NO_OPTION);&#xD;
    if (option == JOptionPane.YES_OPTION) {&#xD;
        imp.deleteRoi();&#xD;
        bm.dispose();&#xD;
        ImageWindow iw = imp.getWindow();&#xD;
        LaneManagerCanvas cc = new LaneManagerCanvas(imp);&#xD;
        ImageWindow iw2 = new ImageWindow(imp, cc);&#xD;
        iw.hide();&#xD;
        LaneManager lm = new LaneManager(ia.m);&#xD;
        step2_3 s = new step2_3(imp, ia, darkbg, lm);&#xD;
        lm.delete_without_asking(false);&#xD;
        Roi[] lanes = ia.m.getLanes();&#xD;
        if (lanes != null) {&#xD;
            for (Roi lane : lanes) {&#xD;
                lm.addRoi(lane);&#xD;
            }&#xD;
            if (getstandardlanes(ia.m.finallanes) != null) {&#xD;
                lm.fix_standards(roisfromlanes(getstandardlanes(ia.m.finallanes)));&#xD;
            }&#xD;
        }&#xD;
        lm.setLanesinfo(ia.m.getLanesinfo());&#xD;
        this.dispose();&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bV8z8GWNEei0cbjpkrd07g" name="jButton2ActionPerformed" specification="_bV6XsGWNEei0cbjpkrd07g">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton2ActionPerformed&#xD;
    close = false;&#xD;
    Lane[] stdlanes = getstandardlanes(ia.m.finallanes);&#xD;
    bm.close();&#xD;
    int[] indexesstd = numberofbandslanes(stdlanes);&#xD;
    if (!allequal(indexesstd)) {&#xD;
        String msg = &quot;The number of bands in the reference lanes is different,\n&quot; + &quot;all the reference lanes must have the same number of bands. \n&quot;;&#xD;
        for (int i = 0; i &lt; stdlanes.length; i++) {&#xD;
            msg = msg + stdlanes[i].getName() + &quot; contains &quot; + stdlanes[i].getPositionbands().length + &quot;.\n&quot;;&#xD;
        }&#xD;
        JOptionPane.showMessageDialog(this, msg, &quot;Incorrect number of bands&quot;, JOptionPane.INFORMATION_MESSAGE);&#xD;
        this.dispose();&#xD;
        imp.deleteRoi();&#xD;
        Step3_2 s = new Step3_2(imp, ia, darkbg, null);&#xD;
        BandManager bm1 = s.getBm();&#xD;
        bm.delete_without_asking(false);&#xD;
        if (ia.m.finallanes != null) {&#xD;
            for (int i = 0; i &lt; ia.m.finallanes.length; i++) {&#xD;
                int[] positionbands = ia.m.finallanes[i].getPositionbands();&#xD;
                if (positionbands != null) {&#xD;
                    for (int b : positionbands) {&#xD;
                        Roi r0 = ia.m.finallanes[i].getRoi();&#xD;
                        int r0x = r0.getBounds().x;&#xD;
                        int r0y = r0.getBounds().y;&#xD;
                        int w = r0.getBounds().width;&#xD;
                        Rectangle r = new Rectangle(r0x, r0y + b - 1, w, 2);&#xD;
                        Roi r1 = rectangleintersectionroi(r0, r);&#xD;
                        if (ia.m.finallanes[i].isIsstandard()) {&#xD;
                            if (ia.m.getColour() == Color.RED) {&#xD;
                                r1.setFillColor(Color.BLUE);&#xD;
                            } else {&#xD;
                                r1.setFillColor(Color.RED);&#xD;
                            }&#xD;
                        } else {&#xD;
                            r1.setFillColor(ia.m.getColour());&#xD;
                        }&#xD;
                        //                            r1.setFillColor(ia.m.getColour());&#xD;
                        bm1.add(imp, r1, 0, i);&#xD;
                        bm1.showAll(0);&#xD;
                    }&#xD;
                }&#xD;
            }&#xD;
        }&#xD;
        return;&#xD;
    }&#xD;
    IJ.run(imp, &quot;Scale to Fit&quot;, &quot;&quot;);&#xD;
    Step3_3 s = new Step3_3(imp, ia, darkbg);&#xD;
    this.dispose();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bWAeUGWNEei0cbjpkrd07g" name="jButton1ActionPerformed">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton1ActionPerformed&#xD;
    this.setAlwaysOnTop(false);&#xD;
    imp.getWindow().setAlwaysOnTop(false);&#xD;
    bm.add_band(true);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bWC6kGWNEei0cbjpkrd07g" name="jButton3ActionPerformed">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton3ActionPerformed&#xD;
    this.setAlwaysOnTop(false);&#xD;
    imp.getWindow().setAlwaysOnTop(false);&#xD;
    bm.delete(false);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bWGk8GWNEei0cbjpkrd07g" name="jButton4ActionPerformed">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton4ActionPerformed&#xD;
    IJ.setTool(&quot;point&quot;);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bWKPUGWNEei0cbjpkrd07g" name="jButton5ActionPerformed">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton5ActionPerformed&#xD;
    IJ.run(&quot;In [+]&quot;, &quot;&quot;);&#xD;
    IJ.setTool(&quot;point&quot;);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bWN5sGWNEei0cbjpkrd07g" name="jButton6ActionPerformed">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton6ActionPerformed&#xD;
    IJ.setTool(&quot;hand&quot;);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bWRkEGWNEei0cbjpkrd07g" name="jButton8ActionPerformed">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton8ActionPerformed&#xD;
    this.setAlwaysOnTop(false);&#xD;
    imp.getWindow().setAlwaysOnTop(false);&#xD;
    bm.undo();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bWUAUGWNEei0cbjpkrd07g" name="jButton9ActionPerformed">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton9ActionPerformed&#xD;
    this.setAlwaysOnTop(false);&#xD;
    imp.getWindow().setAlwaysOnTop(false);&#xD;
    bm.redo();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bWV1gGWNEei0cbjpkrd07g" name="jCheckBox1StateChanged">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jCheckBox1StateChanged&#xD;
    this.setAlwaysOnTop(false);&#xD;
    imp.getWindow().setAlwaysOnTop(false);&#xD;
    bm.activatehistogramdisplay(jCheckBox1.isSelected());&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bWZf4GWNEei0cbjpkrd07g" name="jButton7ActionPerformed">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton7ActionPerformed&#xD;
    IJ.run(&quot;Out [-]&quot;, &quot;&quot;);&#xD;
    IJ.setTool(&quot;point&quot;);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_WGg5sI5VEeie3Y8fpsu39w" name="StateMachine1">
                  <region xmi:type="uml:Region" xmi:id="_WOSVoI5VEeie3Y8fpsu39w" name="Region1">
                    <transition xmi:type="uml:Transition" xmi:id="_XiRGAI5VEeie3Y8fpsu39w" source="_WsQrEI5VEeie3Y8fpsu39w" target="_W7ahYI5VEeie3Y8fpsu39w">
                      <trigger xmi:type="uml:Trigger" xmi:id="_fSlAoI5VEeie3Y8fpsu39w" event="_fCwb8I5VEeie3Y8fpsu39w"/>
                    </transition>
                    <transition xmi:type="uml:Transition" xmi:id="_X5tVoI5VEeie3Y8fpsu39w" source="_W7ahYI5VEeie3Y8fpsu39w" target="_XIt9kI5VEeie3Y8fpsu39w">
                      <trigger xmi:type="uml:Trigger" xmi:id="_mjaJ8I5VEeie3Y8fpsu39w" event="_mZIzoI5VEeie3Y8fpsu39w"/>
                    </transition>
                    <transition xmi:type="uml:Transition" xmi:id="_YbJOwI5VEeie3Y8fpsu39w" source="_W7ahYI5VEeie3Y8fpsu39w" target="_XIt9kI5VEeie3Y8fpsu39w">
                      <trigger xmi:type="uml:Trigger" xmi:id="_peh3QI5VEeie3Y8fpsu39w" event="_pWwbUI5VEeie3Y8fpsu39w"/>
                    </transition>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_WsQrEI5VEeie3Y8fpsu39w" name="Initial1"/>
                    <subvertex xmi:type="uml:State" xmi:id="_W7ahYI5VEeie3Y8fpsu39w" name="Activated"/>
                    <subvertex xmi:type="uml:State" xmi:id="_XIt9kI5VEeie3Y8fpsu39w" name="Finished"/>
                  </region>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_bVcdoGWNEei0cbjpkrd07g" name="Step3_2" visibility="public" method="_bVh9MGWNEei0cbjpkrd07g">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_bVgvEGWNEei0cbjpkrd07g" name="imp" type="_a5Za0GWNEei0cbjpkrd07g"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_bVlAgGWNEei0cbjpkrd07g" name="Step3_2" visibility="public" method="_bVs8UGWNEei0cbjpkrd07g">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_bVoq4GWNEei0cbjpkrd07g" name="imp" type="_a5Za0GWNEei0cbjpkrd07g"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_bVp5AGWNEei0cbjpkrd07g" name="aThis" type="_a5ikwGWNEei0cbjpkrd07g"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_bVqgEGWNEei0cbjpkrd07g" name="darkbg">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_bVruMGWNEei0cbjpkrd07g" name="bm" type="_a5orYGWNEei0cbjpkrd07g"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_bV3UYGWNEei0cbjpkrd07g" name="jbBackActionPerformed" visibility="private" method="_bV5JkGWNEei0cbjpkrd07g">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_bV37cGWNEei0cbjpkrd07g" name="evt" type="_a6tpcGWNEei0cbjpkrd07g"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_bV6XsGWNEei0cbjpkrd07g" name="jButton2ActionPerformed" visibility="private" method="_bV8z8GWNEei0cbjpkrd07g">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_bV7l0GWNEei0cbjpkrd07g" name="evt" type="_a6tpcGWNEei0cbjpkrd07g"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_bXE1UGWNEei0cbjpkrd07g" name="step1_2" visibility="public" classifierBehavior="_QcrH4I5LEeie3Y8fpsu39w">
                <generalization xmi:type="uml:Generalization" xmi:id="_JJ_vcW4VEei47fqiwvb5mw" general="_a0hh4GWNEei0cbjpkrd07g"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bXHRkGWNEei0cbjpkrd07g" name="close" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_bXIfsGWNEei0cbjpkrd07g" name="defaultValue">
                    <language>JAVA</language>
                    <body>true</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bXJt0GWNEei0cbjpkrd07g" name="imp" visibility="private" type="_a5Za0GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bXK78GWNEei0cbjpkrd07g" name="ia" visibility="private" type="_a5ikwGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bXhhQGWNEei0cbjpkrd07g" name="jButton2" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bXivYGWNEei0cbjpkrd07g" name="jLabel1" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bXj9gGWNEei0cbjpkrd07g" name="jLabel2" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bXlysGWNEei0cbjpkrd07g" name="jLabel3" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bXnn4GWNEei0cbjpkrd07g" name="jLabel4" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bXpdEGWNEei0cbjpkrd07g" name="jLabel5" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bXqEIGWNEei0cbjpkrd07g" name="jLabel6" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bXqrMGWNEei0cbjpkrd07g" name="jLabel7" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bXr5UGWNEei0cbjpkrd07g" name="jLabel8" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bXtHcGWNEei0cbjpkrd07g" name="jPanel1" visibility="private" type="_a8yGAGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bXuVkGWNEei0cbjpkrd07g" name="jPanel2" visibility="private" type="_a8yGAGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bXwKwGWNEei0cbjpkrd07g" name="jPanel3" visibility="private" type="_a8yGAGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bXx_8GWNEei0cbjpkrd07g" name="jPanel4" visibility="private" type="_a8yGAGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bXzOEGWNEei0cbjpkrd07g" name="jPanel5" visibility="private" type="_a8yGAGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bX0cMGWNEei0cbjpkrd07g" name="jScrollPane1" visibility="private" type="_a9Dy0GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bX1DQGWNEei0cbjpkrd07g" name="jTextArea1" visibility="private" type="_a9IrUGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bX3fgGWNEei0cbjpkrd07g" name="jbBack" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bX5UsGWNEei0cbjpkrd07g" name="jbInvert" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bXPNYGWNEei0cbjpkrd07g" name="step1_2" specification="_bXMKEGWNEei0cbjpkrd07g">
                  <language>JAVA</language>
                  <body>&#xD;
    super();&#xD;
    initComponents();&#xD;
    this.imp = imp;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bXUs8GWNEei0cbjpkrd07g" name="step1_2" specification="_bXQbgGWNEei0cbjpkrd07g">
                  <language>JAVA</language>
                  <body>&#xD;
    super();&#xD;
    initComponents();&#xD;
    this.imp = imp;&#xD;
    this.ia = aThis;&#xD;
    Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();&#xD;
    double width = screenSize.getWidth();&#xD;
    setVisible(true);&#xD;
    setLocation((int) width - 515, 0);&#xD;
    imp.getWindow().setAlwaysOnTop(true);&#xD;
    setAlwaysOnTop(true);&#xD;
    toFront();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bXXJMGWNEei0cbjpkrd07g" name="initComponents">
                  <language>JAVA</language>
                  <body>&#xD;
    jPanel4 = new javax.swing.JPanel();&#xD;
    jButton2 = new javax.swing.JButton();&#xD;
    jbBack = new javax.swing.JButton();&#xD;
    jPanel5 = new javax.swing.JPanel();&#xD;
    jLabel1 = new javax.swing.JLabel();&#xD;
    jLabel2 = new javax.swing.JLabel();&#xD;
    jLabel3 = new javax.swing.JLabel();&#xD;
    jLabel4 = new javax.swing.JLabel();&#xD;
    jLabel5 = new javax.swing.JLabel();&#xD;
    jLabel6 = new javax.swing.JLabel();&#xD;
    jLabel7 = new javax.swing.JLabel();&#xD;
    jLabel8 = new javax.swing.JLabel();&#xD;
    jPanel1 = new javax.swing.JPanel();&#xD;
    jPanel2 = new javax.swing.JPanel();&#xD;
    jScrollPane1 = new javax.swing.JScrollPane();&#xD;
    jTextArea1 = new javax.swing.JTextArea();&#xD;
    jPanel3 = new javax.swing.JPanel();&#xD;
    jbInvert = new javax.swing.JButton();&#xD;
    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);&#xD;
    setTitle(&quot;Image analysis&quot;);&#xD;
    setResizable(false);&#xD;
    addWindowListener(new java.awt.event.WindowAdapter() {&#xD;
&#xD;
        public void windowClosed(java.awt.event.WindowEvent evt) {&#xD;
            formWindowClosed(evt);&#xD;
        }&#xD;
    });&#xD;
    jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());&#xD;
    jButton2.setText(&quot;Next>&quot;);&#xD;
    jButton2.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton2ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jbBack.setText(&quot;&lt;Back&quot;);&#xD;
    jbBack.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbBackActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);&#xD;
    jPanel4.setLayout(jPanel4Layout);&#xD;
    jPanel4Layout.setHorizontalGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addComponent(jbBack).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButton2)));&#xD;
    jPanel4Layout.setVerticalGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jButton2).addComponent(jbBack))));&#xD;
    jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Steps&quot;)));&#xD;
    jPanel5.setForeground(new java.awt.Color(0, 17, 255));&#xD;
    jLabel1.setText(&quot;Step 1. Image preprocessing&quot;);&#xD;
    jLabel2.setText(&quot;1.1. Crop&quot;);&#xD;
    jLabel3.setForeground(new java.awt.Color(0, 15, 255));&#xD;
    jLabel3.setText(&quot;1.2. Invert&quot;);&#xD;
    jLabel4.setText(&quot;1.3. Adjust contrast&quot;);&#xD;
    jLabel5.setText(&quot;1.4. Other operations&quot;);&#xD;
    jLabel6.setText(&quot;Step 2. Lane detection&quot;);&#xD;
    jLabel7.setText(&quot;Step 3. Normalisation&quot;);&#xD;
    jLabel8.setText(&quot;Step 4. Band detection&quot;);&#xD;
    javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);&#xD;
    jPanel5.setLayout(jPanel5Layout);&#xD;
    jPanel5Layout.setHorizontalGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel5Layout.createSequentialGroup().addContainerGap().addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel1).addGroup(jPanel5Layout.createSequentialGroup().addGap(12, 12, 12).addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel3).addComponent(jLabel2).addComponent(jLabel4).addComponent(jLabel5))).addComponent(jLabel6).addComponent(jLabel7).addComponent(jLabel8)).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jPanel5Layout.setVerticalGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel5Layout.createSequentialGroup().addContainerGap().addComponent(jLabel1).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel2).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel3).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel4).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel5).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel6).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel7).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel8).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Help&quot;));&#xD;
    jTextArea1.setEditable(false);&#xD;
    jTextArea1.setColumns(20);&#xD;
    jTextArea1.setRows(5);&#xD;
    jTextArea1.setText(&quot;In this step, you can invert the\ncolour of the image. Just press\nthe Invert button.&quot;);&#xD;
    jScrollPane1.setViewportView(jTextArea1);&#xD;
    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);&#xD;
    jPanel2.setLayout(jPanel2Layout);&#xD;
    jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING));&#xD;
    jPanel2Layout.setVerticalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE));&#xD;
    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);&#xD;
    jPanel1.setLayout(jPanel1Layout);&#xD;
    jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));&#xD;
    jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup().addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)));&#xD;
    jPanel3.setBorder(null);&#xD;
    jbInvert.setText(&quot;Invert&quot;);&#xD;
    jbInvert.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbInvertActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);&#xD;
    jPanel3.setLayout(jPanel3Layout);&#xD;
    jPanel3Layout.setHorizontalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jbInvert, javax.swing.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE));&#xD;
    jPanel3Layout.setVerticalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel3Layout.createSequentialGroup().addComponent(jbInvert).addContainerGap(292, Short.MAX_VALUE)));&#xD;
    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());&#xD;
    getContentPane().setLayout(layout);&#xD;
    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(layout.createSequentialGroup().addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))));&#xD;
    layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(layout.createSequentialGroup().addContainerGap().addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)));&#xD;
    pack();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bXYXUWWNEei0cbjpkrd07g" name="jbInvertActionPerformed" specification="_bXXwQGWNEei0cbjpkrd07g">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jbInvertActionPerformed&#xD;
    IJ.run(imp, &quot;Invert&quot;, &quot;&quot;);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bXaMgGWNEei0cbjpkrd07g" name="formWindowClosed">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_formWindowClosed&#xD;
    try {&#xD;
        if (close) {&#xD;
            ia.saveUnfinishedExperiment(this, 1);&#xD;
            close = false;&#xD;
        }&#xD;
    } catch (IOException ex) {&#xD;
        Logger.getLogger(step1_2.class.getName()).log(Level.SEVERE, null, ex);&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_QcrH4I5LEeie3Y8fpsu39w" name="StateMachine1">
                  <region xmi:type="uml:Region" xmi:id="_R10FEI5LEeie3Y8fpsu39w" name="Region1">
                    <transition xmi:type="uml:Transition" xmi:id="_XoE-oI5LEeie3Y8fpsu39w" source="_UksGII5LEeie3Y8fpsu39w" target="_Tmh0wI5LEeie3Y8fpsu39w">
                      <trigger xmi:type="uml:Trigger" xmi:id="_l9xR0I5LEeie3Y8fpsu39w" name="step1_2" event="_k_5UUI5LEeie3Y8fpsu39w"/>
                    </transition>
                    <transition xmi:type="uml:Transition" xmi:id="_YIBC8I5LEeie3Y8fpsu39w" source="_Tmh0wI5LEeie3Y8fpsu39w" target="_WsQPkI5LEeie3Y8fpsu39w">
                      <trigger xmi:type="uml:Trigger" xmi:id="_B1WcsI5MEeie3Y8fpsu39w" name="next" event="__XhvYI5LEeie3Y8fpsu39w"/>
                    </transition>
                    <transition xmi:type="uml:Transition" xmi:id="_Yh3tYI5LEeie3Y8fpsu39w" source="_Tmh0wI5LEeie3Y8fpsu39w" target="_WW9VAI5LEeie3Y8fpsu39w">
                      <trigger xmi:type="uml:Trigger" xmi:id="_x-vwYI5LEeie3Y8fpsu39w" name="jbInvertActionPerformed" event="_xN47MI5LEeie3Y8fpsu39w"/>
                    </transition>
                    <transition xmi:type="uml:Transition" xmi:id="_ZdAf8I5LEeie3Y8fpsu39w" source="_WW9VAI5LEeie3Y8fpsu39w" target="_WsQPkI5LEeie3Y8fpsu39w">
                      <trigger xmi:type="uml:Trigger" xmi:id="_HXMUoI5MEeie3Y8fpsu39w" event="_HA57kI5MEeie3Y8fpsu39w"/>
                    </transition>
                    <transition xmi:type="uml:Transition" xmi:id="_JX0IkI5MEeie3Y8fpsu39w" source="_Tmh0wI5LEeie3Y8fpsu39w" target="_WsQPkI5LEeie3Y8fpsu39w">
                      <trigger xmi:type="uml:Trigger" xmi:id="_WVrGII5MEeie3Y8fpsu39w" event="_WMZOUI5MEeie3Y8fpsu39w"/>
                    </transition>
                    <transition xmi:type="uml:Transition" xmi:id="_Mj7fQI5MEeie3Y8fpsu39w" source="_WW9VAI5LEeie3Y8fpsu39w" target="_WsQPkI5LEeie3Y8fpsu39w">
                      <trigger xmi:type="uml:Trigger" xmi:id="_mgaPYI5MEeie3Y8fpsu39w" event="_mTvFUI5MEeie3Y8fpsu39w"/>
                    </transition>
                    <subvertex xmi:type="uml:State" xmi:id="_Tmh0wI5LEeie3Y8fpsu39w" name="Activated"/>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_UksGII5LEeie3Y8fpsu39w" name="Initial1"/>
                    <subvertex xmi:type="uml:State" xmi:id="_WW9VAI5LEeie3Y8fpsu39w" name="Inverted"/>
                    <subvertex xmi:type="uml:State" xmi:id="_WsQPkI5LEeie3Y8fpsu39w" name="Finished"/>
                  </region>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_bXMKEGWNEei0cbjpkrd07g" name="step1_2" visibility="public" method="_bXPNYGWNEei0cbjpkrd07g">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_bXOmUGWNEei0cbjpkrd07g" name="imp" type="_a5Za0GWNEei0cbjpkrd07g"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_bXQbgGWNEei0cbjpkrd07g" name="step1_2" visibility="public" method="_bXUs8GWNEei0cbjpkrd07g">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_bXTe0GWNEei0cbjpkrd07g" name="imp" type="_a5Za0GWNEei0cbjpkrd07g"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_bXUF4GWNEei0cbjpkrd07g" name="aThis" type="_a5ikwGWNEei0cbjpkrd07g"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_bXXwQGWNEei0cbjpkrd07g" name="jbInvertActionPerformed" visibility="private" method="_bXYXUWWNEei0cbjpkrd07g">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_bXYXUGWNEei0cbjpkrd07g" name="evt" type="_a6tpcGWNEei0cbjpkrd07g"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_bXbaoGWNEei0cbjpkrd07g" name="jbBackActionPerformed" visibility="private">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_bXcowGWNEei0cbjpkrd07g" name="evt" type="_a6tpcGWNEei0cbjpkrd07g"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_bXed8GWNEei0cbjpkrd07g" name="jButton2ActionPerformed" visibility="private">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_bXfFAGWNEei0cbjpkrd07g" name="evt" type="_a6tpcGWNEei0cbjpkrd07g"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_bYBQgGWNEei0cbjpkrd07g" name="Step1_4" visibility="public" classifierBehavior="_idBVoI5QEeie3Y8fpsu39w">
                <generalization xmi:type="uml:Generalization" xmi:id="_JJ_vcG4VEei47fqiwvb5mw" general="_a0hh4GWNEei0cbjpkrd07g"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bYDswGWNEei0cbjpkrd07g" name="close" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_bYFh8GWNEei0cbjpkrd07g" name="defaultValue">
                    <language>JAVA</language>
                    <body>true</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bYHXIGWNEei0cbjpkrd07g" name="imp" visibility="private" type="_a5Za0GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bYJMUGWNEei0cbjpkrd07g" name="ia" visibility="private" type="_a5ikwGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bYhm0WWNEei0cbjpkrd07g" name="jButton1" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bYhm0mWNEei0cbjpkrd07g" name="jButton2" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bYhm02WNEei0cbjpkrd07g" name="jButton3" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bYiN4GWNEei0cbjpkrd07g" name="jButton4" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bYiN4WWNEei0cbjpkrd07g" name="jButton5" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bYkDEGWNEei0cbjpkrd07g" name="jButton7" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bYlRMGWNEei0cbjpkrd07g" name="jButton8" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bYnGYGWNEei0cbjpkrd07g" name="jButton9" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bYo7kGWNEei0cbjpkrd07g" name="jLabel1" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bYqwwGWNEei0cbjpkrd07g" name="jLabel2" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bYsl8GWNEei0cbjpkrd07g" name="jLabel3" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bYt0EGWNEei0cbjpkrd07g" name="jLabel4" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bYt0EWWNEei0cbjpkrd07g" name="jLabel5" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bYubIGWNEei0cbjpkrd07g" name="jLabel6" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bYw3YGWNEei0cbjpkrd07g" name="jLabel7" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bYyFgGWNEei0cbjpkrd07g" name="jLabel8" visibility="private" type="_a8dV4GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bYzToGWNEei0cbjpkrd07g" name="jPanel1" visibility="private" type="_a8yGAGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bY1I0GWNEei0cbjpkrd07g" name="jPanel2" visibility="private" type="_a8yGAGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bY2W8GWNEei0cbjpkrd07g" name="jPanel3" visibility="private" type="_a8yGAGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bY3lEGWNEei0cbjpkrd07g" name="jPanel4" visibility="private" type="_a8yGAGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bY4zMGWNEei0cbjpkrd07g" name="jPanel5" visibility="private" type="_a8yGAGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bY6BUGWNEei0cbjpkrd07g" name="jScrollPane1" visibility="private" type="_a9Dy0GWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bY72gGWNEei0cbjpkrd07g" name="jTextArea1" visibility="private" type="_a9IrUGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bY8dkGWNEei0cbjpkrd07g" name="jbBack" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_bY9rsGWNEei0cbjpkrd07g" name="jbInvert" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bYQhEGWNEei0cbjpkrd07g" name="Step1_4" specification="_bYLBgGWNEei0cbjpkrd07g">
                  <language>JAVA</language>
                  <body>&#xD;
    super();&#xD;
    initComponents();&#xD;
    this.imp = imp;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bYWAoGWNEei0cbjpkrd07g" name="Step1_4" specification="_bYRIIGWNEei0cbjpkrd07g">
                  <language>JAVA</language>
                  <body>&#xD;
    super();&#xD;
    initComponents();&#xD;
    this.imp = imp;&#xD;
    this.ia = aThis;&#xD;
    Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();&#xD;
    double width = screenSize.getWidth();&#xD;
    setVisible(true);&#xD;
    setLocation((int) width - 515, 0);&#xD;
    imp.getWindow().setAlwaysOnTop(true);&#xD;
    setAlwaysOnTop(true);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bYX10GWNEei0cbjpkrd07g" name="initComponents">
                  <language>JAVA</language>
                  <body>&#xD;
    jPanel4 = new javax.swing.JPanel();&#xD;
    jButton2 = new javax.swing.JButton();&#xD;
    jbBack = new javax.swing.JButton();&#xD;
    jPanel5 = new javax.swing.JPanel();&#xD;
    jLabel1 = new javax.swing.JLabel();&#xD;
    jLabel2 = new javax.swing.JLabel();&#xD;
    jLabel3 = new javax.swing.JLabel();&#xD;
    jLabel4 = new javax.swing.JLabel();&#xD;
    jLabel5 = new javax.swing.JLabel();&#xD;
    jLabel6 = new javax.swing.JLabel();&#xD;
    jLabel7 = new javax.swing.JLabel();&#xD;
    jLabel8 = new javax.swing.JLabel();&#xD;
    jPanel1 = new javax.swing.JPanel();&#xD;
    jPanel2 = new javax.swing.JPanel();&#xD;
    jScrollPane1 = new javax.swing.JScrollPane();&#xD;
    jTextArea1 = new javax.swing.JTextArea();&#xD;
    jPanel3 = new javax.swing.JPanel();&#xD;
    jbInvert = new javax.swing.JButton();&#xD;
    jButton1 = new javax.swing.JButton();&#xD;
    jButton3 = new javax.swing.JButton();&#xD;
    jButton4 = new javax.swing.JButton();&#xD;
    jButton5 = new javax.swing.JButton();&#xD;
    jButton7 = new javax.swing.JButton();&#xD;
    jButton8 = new javax.swing.JButton();&#xD;
    jButton9 = new javax.swing.JButton();&#xD;
    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);&#xD;
    setTitle(&quot;Image analysis&quot;);&#xD;
    setResizable(false);&#xD;
    addWindowListener(new java.awt.event.WindowAdapter() {&#xD;
&#xD;
        public void windowClosed(java.awt.event.WindowEvent evt) {&#xD;
            formWindowClosed(evt);&#xD;
        }&#xD;
    });&#xD;
    jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());&#xD;
    jButton2.setText(&quot;Next>&quot;);&#xD;
    jButton2.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton2ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jbBack.setText(&quot;&lt;Back&quot;);&#xD;
    jbBack.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbBackActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);&#xD;
    jPanel4.setLayout(jPanel4Layout);&#xD;
    jPanel4Layout.setHorizontalGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addComponent(jbBack).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButton2)));&#xD;
    jPanel4Layout.setVerticalGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jButton2).addComponent(jbBack))));&#xD;
    jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Steps&quot;)));&#xD;
    jPanel5.setForeground(new java.awt.Color(0, 17, 255));&#xD;
    jLabel1.setText(&quot;Step 1. Image preprocessing&quot;);&#xD;
    jLabel2.setText(&quot;1.1. Crop&quot;);&#xD;
    jLabel3.setText(&quot;1.2. Invert&quot;);&#xD;
    jLabel4.setText(&quot;1.3. Adjust contrast&quot;);&#xD;
    jLabel5.setForeground(new java.awt.Color(0, 15, 255));&#xD;
    jLabel5.setText(&quot;1.4. Other operations&quot;);&#xD;
    jLabel6.setText(&quot;Step 2. Lane detection&quot;);&#xD;
    jLabel7.setText(&quot;Step 3. Normalisation&quot;);&#xD;
    jLabel8.setText(&quot;Step 4. Band detection&quot;);&#xD;
    javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);&#xD;
    jPanel5.setLayout(jPanel5Layout);&#xD;
    jPanel5Layout.setHorizontalGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel5Layout.createSequentialGroup().addContainerGap().addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel1).addGroup(jPanel5Layout.createSequentialGroup().addGap(12, 12, 12).addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel3).addComponent(jLabel2).addComponent(jLabel4).addComponent(jLabel5))).addComponent(jLabel6).addComponent(jLabel7).addComponent(jLabel8)).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jPanel5Layout.setVerticalGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel5Layout.createSequentialGroup().addContainerGap().addComponent(jLabel1).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel2).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel3).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel4).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel5).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel6).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel7).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel8).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Help&quot;));&#xD;
    jTextArea1.setEditable(false);&#xD;
    jTextArea1.setColumns(20);&#xD;
    jTextArea1.setRows(5);&#xD;
    jTextArea1.setText(&quot;In this step, you can edit the\nimage using the above buttons.&quot;);&#xD;
    jScrollPane1.setViewportView(jTextArea1);&#xD;
    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);&#xD;
    jPanel2.setLayout(jPanel2Layout);&#xD;
    jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING));&#xD;
    jPanel2Layout.setVerticalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE));&#xD;
    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);&#xD;
    jPanel1.setLayout(jPanel1Layout);&#xD;
    jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));&#xD;
    jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup().addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)));&#xD;
    jPanel3.setBorder(null);&#xD;
    jbInvert.setText(&quot;Flip horizontally&quot;);&#xD;
    jbInvert.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbInvertActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jButton1.setText(&quot;Flip vertically&quot;);&#xD;
    jButton1.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton1ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jButton3.setText(&quot;Rotate 90Âº left&quot;);&#xD;
    jButton3.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton3ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jButton4.setText(&quot;Rotate 90Âº right&quot;);&#xD;
    jButton4.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton4ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jButton5.setText(&quot;Rotate&quot;);&#xD;
    jButton5.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton5ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jButton7.setText(&quot;Gamma correction&quot;);&#xD;
    jButton7.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton7ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jButton8.setText(&quot;Background removal&quot;);&#xD;
    jButton8.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton8ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jButton9.setText(&quot;Filtering&quot;);&#xD;
    jButton9.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton9ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);&#xD;
    jPanel3.setLayout(jPanel3Layout);&#xD;
    jPanel3Layout.setHorizontalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jbInvert, javax.swing.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE).addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jButton9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));&#xD;
    jPanel3Layout.setVerticalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel3Layout.createSequentialGroup().addComponent(jbInvert).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButton1).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButton3).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButton4).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButton5).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButton7).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButton8).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jButton9).addContainerGap()));&#xD;
    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());&#xD;
    getContentPane().setLayout(layout);&#xD;
    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(layout.createSequentialGroup().addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))));&#xD;
    layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(layout.createSequentialGroup().addContainerGap().addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)));&#xD;
    pack();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bYbgMGWNEei0cbjpkrd07g" name="jbInvertActionPerformed" specification="_bYaSEGWNEei0cbjpkrd07g">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jbInvertActionPerformed&#xD;
    IJ.run(imp, &quot;Flip Horizontally&quot;, &quot;&quot;);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bYdVYWWNEei0cbjpkrd07g" name="formWindowClosed">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_formWindowClosed&#xD;
    try {&#xD;
        if (close) {&#xD;
            ia.saveUnfinishedExperiment(this, 3);&#xD;
            close = false;&#xD;
        } else {&#xD;
        }&#xD;
    } catch (IOException ex) {&#xD;
        Logger.getLogger(Step1_4.class.getName()).log(Level.SEVERE, null, ex);&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bYd8cWWNEei0cbjpkrd07g" name="jbBackActionPerformed" specification="_bYdVYmWNEei0cbjpkrd07g">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jbBackActionPerformed&#xD;
    close = false;&#xD;
    this.dispose();&#xD;
    step1_3 s = new step1_3(imp, ia);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bYd8dGWNEei0cbjpkrd07g" name="jButton2ActionPerformed" specification="_bYd8cmWNEei0cbjpkrd07g">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton2ActionPerformed&#xD;
    close = false;&#xD;
    this.dispose();&#xD;
    step2_1 s = new step2_1(imp, ia);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bYejgmWNEei0cbjpkrd07g" name="jButton1ActionPerformed" specification="_bYejgGWNEei0cbjpkrd07g">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton1ActionPerformed&#xD;
    IJ.run(imp, &quot;Flip Vertically&quot;, &quot;&quot;);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bYfKkWWNEei0cbjpkrd07g" name="jButton3ActionPerformed" specification="_bYejg2WNEei0cbjpkrd07g">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton3ActionPerformed&#xD;
    IJ.run(imp, &quot;Rotate 90 Degrees Left&quot;, &quot;&quot;);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bYfxoWWNEei0cbjpkrd07g" name="jButton4ActionPerformed" specification="_bYfKkmWNEei0cbjpkrd07g">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton4ActionPerformed&#xD;
    IJ.run(imp, &quot;Rotate 90 Degrees Right&quot;, &quot;&quot;);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bYfxpGWNEei0cbjpkrd07g" name="jButton5ActionPerformed" specification="_bYfxomWNEei0cbjpkrd07g">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton5ActionPerformed&#xD;
    IJ.run(imp, &quot;Rotate... &quot;, &quot;&quot;);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bYgYsmWNEei0cbjpkrd07g" name="jButton7ActionPerformed" specification="_bYgYsGWNEei0cbjpkrd07g">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton7ActionPerformed&#xD;
    this.setAlwaysOnTop(false);&#xD;
    imp.getWindow().setAlwaysOnTop(false);&#xD;
    IJ.run(&quot;Gamma...&quot;, &quot;&quot;);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bYg_wGWNEei0cbjpkrd07g" name="jButton8ActionPerformed" specification="_bYgYs2WNEei0cbjpkrd07g">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton8ActionPerformed&#xD;
    IJ.run(&quot;Subtract Background...&quot;, &quot;&quot;);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_bYhm0GWNEei0cbjpkrd07g" name="jButton9ActionPerformed" specification="_bYg_wWWNEei0cbjpkrd07g">
                  <language>JAVA</language>
                  <body>&#xD;
    //GEN-FIRST:event_jButton9ActionPerformed&#xD;
    this.setAlwaysOnTop(false);&#xD;
    imp.getWindow().setAlwaysOnTop(false);&#xD;
    Filters f = new Filters();&#xD;
    PlugInFilterRunner pfr = new PlugInFilterRunner(f, &quot;Filters&quot;, &quot;&quot;);&#xD;
//        Bilateral_Filter_Instant bfi = new Bilateral_Filter_Instant();&#xD;
//        bfi.run(&quot;&quot;);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_idBVoI5QEeie3Y8fpsu39w" name="StateMachine1">
                  <region xmi:type="uml:Region" xmi:id="_iqz6AI5QEeie3Y8fpsu39w" name="Region1">
                    <transition xmi:type="uml:Transition" xmi:id="_kWh08I5QEeie3Y8fpsu39w" source="_juin4I5QEeie3Y8fpsu39w" target="_jbNcMI5QEeie3Y8fpsu39w">
                      <trigger xmi:type="uml:Trigger" xmi:id="_oGEBwI5QEeie3Y8fpsu39w" event="_n7kpAI5QEeie3Y8fpsu39w"/>
                    </transition>
                    <transition xmi:type="uml:Transition" xmi:id="_y7LxMI5QEeie3Y8fpsu39w" source="_jbNcMI5QEeie3Y8fpsu39w" target="_w-VC8I5QEeie3Y8fpsu39w">
                      <trigger xmi:type="uml:Trigger" xmi:id="_MP9BEI5REeie3Y8fpsu39w" event="_MIyCEI5REeie3Y8fpsu39w"/>
                    </transition>
                    <transition xmi:type="uml:Transition" xmi:id="_1R3UsI5QEeie3Y8fpsu39w" source="_rExOkI5QEeie3Y8fpsu39w" target="_w-VC8I5QEeie3Y8fpsu39w">
                      <trigger xmi:type="uml:Trigger" xmi:id="_Toc4oI5REeie3Y8fpsu39w" event="_Tg_lwI5REeie3Y8fpsu39w"/>
                    </transition>
                    <transition xmi:type="uml:Transition" xmi:id="_82CQwI5QEeie3Y8fpsu39w" source="_jbNcMI5QEeie3Y8fpsu39w" target="_rExOkI5QEeie3Y8fpsu39w">
                      <trigger xmi:type="uml:Trigger" xmi:id="_eCtRAI5REeie3Y8fpsu39w" event="_d1O1sI5REeie3Y8fpsu39w"/>
                    </transition>
                    <transition xmi:type="uml:Transition" xmi:id="_9nzr8I5QEeie3Y8fpsu39w" source="_jbNcMI5QEeie3Y8fpsu39w" target="_rExOkI5QEeie3Y8fpsu39w">
                      <trigger xmi:type="uml:Trigger" xmi:id="_wPWyMI5SEeie3Y8fpsu39w" event="_wHw8cI5SEeie3Y8fpsu39w"/>
                    </transition>
                    <transition xmi:type="uml:Transition" xmi:id="_-J0M0I5QEeie3Y8fpsu39w" source="_jbNcMI5QEeie3Y8fpsu39w" target="_rExOkI5QEeie3Y8fpsu39w">
                      <trigger xmi:type="uml:Trigger" xmi:id="_0GD-AI5SEeie3Y8fpsu39w" event="_z81JgI5SEeie3Y8fpsu39w"/>
                    </transition>
                    <transition xmi:type="uml:Transition" xmi:id="_-tfhoI5QEeie3Y8fpsu39w" source="_jbNcMI5QEeie3Y8fpsu39w" target="_rExOkI5QEeie3Y8fpsu39w">
                      <trigger xmi:type="uml:Trigger" xmi:id="_3Wt2cI5SEeie3Y8fpsu39w" event="_3OKXYI5SEeie3Y8fpsu39w"/>
                    </transition>
                    <transition xmi:type="uml:Transition" xmi:id="__RzvoI5QEeie3Y8fpsu39w" source="_jbNcMI5QEeie3Y8fpsu39w" target="_rExOkI5QEeie3Y8fpsu39w">
                      <trigger xmi:type="uml:Trigger" xmi:id="_6GeBQI5SEeie3Y8fpsu39w" event="_56k6UI5SEeie3Y8fpsu39w"/>
                    </transition>
                    <transition xmi:type="uml:Transition" xmi:id="__x-dcI5QEeie3Y8fpsu39w" source="_jbNcMI5QEeie3Y8fpsu39w" target="_rExOkI5QEeie3Y8fpsu39w">
                      <trigger xmi:type="uml:Trigger" xmi:id="_C0ObkI5TEeie3Y8fpsu39w" event="_CrWMYI5TEeie3Y8fpsu39w"/>
                    </transition>
                    <transition xmi:type="uml:Transition" xmi:id="_ARo08I5REeie3Y8fpsu39w" source="_jbNcMI5QEeie3Y8fpsu39w" target="_rExOkI5QEeie3Y8fpsu39w">
                      <trigger xmi:type="uml:Trigger" xmi:id="_F6ZiUI5TEeie3Y8fpsu39w" event="_FyPr4I5TEeie3Y8fpsu39w"/>
                    </transition>
                    <transition xmi:type="uml:Transition" xmi:id="_A0S2EI5REeie3Y8fpsu39w" source="_jbNcMI5QEeie3Y8fpsu39w" target="_rExOkI5QEeie3Y8fpsu39w">
                      <trigger xmi:type="uml:Trigger" xmi:id="_Inh28I5TEeie3Y8fpsu39w" event="_Iea-QI5TEeie3Y8fpsu39w"/>
                    </transition>
                    <transition xmi:type="uml:Transition" xmi:id="_B2JUoI5REeie3Y8fpsu39w" source="_jbNcMI5QEeie3Y8fpsu39w" target="_w-VC8I5QEeie3Y8fpsu39w">
                      <trigger xmi:type="uml:Trigger" xmi:id="_IihtEI5REeie3Y8fpsu39w" event="_ITl5MI5REeie3Y8fpsu39w"/>
                    </transition>
                    <transition xmi:type="uml:Transition" xmi:id="_NSdm8I5REeie3Y8fpsu39w" source="_rExOkI5QEeie3Y8fpsu39w" target="_w-VC8I5QEeie3Y8fpsu39w">
                      <trigger xmi:type="uml:Trigger" xmi:id="_QVsHYI5REeie3Y8fpsu39w" event="_QOQpsI5REeie3Y8fpsu39w"/>
                    </transition>
                    <subvertex xmi:type="uml:State" xmi:id="_jbNcMI5QEeie3Y8fpsu39w" name="Activated"/>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_juin4I5QEeie3Y8fpsu39w" name="Initial1"/>
                    <subvertex xmi:type="uml:State" xmi:id="_rExOkI5QEeie3Y8fpsu39w" name="Modified"/>
                    <subvertex xmi:type="uml:State" xmi:id="_w-VC8I5QEeie3Y8fpsu39w" name="Finished"/>
                  </region>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_bYLBgGWNEei0cbjpkrd07g" name="Step1_4" visibility="public" method="_bYQhEGWNEei0cbjpkrd07g">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_bYOr4GWNEei0cbjpkrd07g" name="modal">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_bYP6AGWNEei0cbjpkrd07g" name="imp" type="_a5Za0GWNEei0cbjpkrd07g"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_bYRIIGWNEei0cbjpkrd07g" name="Step1_4" visibility="public" method="_bYWAoGWNEei0cbjpkrd07g">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_bYULcGWNEei0cbjpkrd07g" name="imp" type="_a5Za0GWNEei0cbjpkrd07g"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_bYVZkGWNEei0cbjpkrd07g" name="aThis" type="_a5ikwGWNEei0cbjpkrd07g"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_bYaSEGWNEei0cbjpkrd07g" name="jbInvertActionPerformed" visibility="private" method="_bYbgMGWNEei0cbjpkrd07g">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_bYa5IGWNEei0cbjpkrd07g" name="evt" type="_a6tpcGWNEei0cbjpkrd07g"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_bYdVYmWNEei0cbjpkrd07g" name="jbBackActionPerformed" visibility="private" method="_bYd8cWWNEei0cbjpkrd07g">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_bYd8cGWNEei0cbjpkrd07g" name="evt" type="_a6tpcGWNEei0cbjpkrd07g"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_bYd8cmWNEei0cbjpkrd07g" name="jButton2ActionPerformed" visibility="private" method="_bYd8dGWNEei0cbjpkrd07g">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_bYd8c2WNEei0cbjpkrd07g" name="evt" type="_a6tpcGWNEei0cbjpkrd07g"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_bYejgGWNEei0cbjpkrd07g" name="jButton1ActionPerformed" visibility="private" method="_bYejgmWNEei0cbjpkrd07g">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_bYejgWWNEei0cbjpkrd07g" name="evt" type="_a6tpcGWNEei0cbjpkrd07g"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_bYejg2WNEei0cbjpkrd07g" name="jButton3ActionPerformed" visibility="private" method="_bYfKkWWNEei0cbjpkrd07g">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_bYfKkGWNEei0cbjpkrd07g" name="evt" type="_a6tpcGWNEei0cbjpkrd07g"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_bYfKkmWNEei0cbjpkrd07g" name="jButton4ActionPerformed" visibility="private" method="_bYfxoWWNEei0cbjpkrd07g">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_bYfxoGWNEei0cbjpkrd07g" name="evt" type="_a6tpcGWNEei0cbjpkrd07g"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_bYfxomWNEei0cbjpkrd07g" name="jButton5ActionPerformed" visibility="private" method="_bYfxpGWNEei0cbjpkrd07g">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_bYfxo2WNEei0cbjpkrd07g" name="evt" type="_a6tpcGWNEei0cbjpkrd07g"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_bYgYsGWNEei0cbjpkrd07g" name="jButton7ActionPerformed" visibility="private" method="_bYgYsmWNEei0cbjpkrd07g">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_bYgYsWWNEei0cbjpkrd07g" name="evt" type="_a6tpcGWNEei0cbjpkrd07g"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_bYgYs2WNEei0cbjpkrd07g" name="jButton8ActionPerformed" visibility="private" method="_bYg_wGWNEei0cbjpkrd07g">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_bYgYtGWNEei0cbjpkrd07g" name="evt" type="_a6tpcGWNEei0cbjpkrd07g"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_bYg_wWWNEei0cbjpkrd07g" name="jButton9ActionPerformed" visibility="private" method="_bYhm0GWNEei0cbjpkrd07g">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_bYg_wmWNEei0cbjpkrd07g" name="evt" type="_a6tpcGWNEei0cbjpkrd07g"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:CallEvent" xmi:id="_82R3YHkSEeiGl6CJxvVzPQ" name="jButton2ActionPerformed" operation="_O9hFsHLVEei3ud9vrLTCZg"/>
              <packagedElement xmi:type="uml:CallEvent" xmi:id="_MsI80HkTEeiGl6CJxvVzPQ" name="step1_1" operation="_bGliQGWNEei0cbjpkrd07g"/>
              <packagedElement xmi:type="uml:CallEvent" xmi:id="_XJVQQHkaEeiGl6CJxvVzPQ" operation="_bGteEGWNEei0cbjpkrd07g"/>
              <packagedElement xmi:type="uml:CallEvent" xmi:id="_6lWc8HkaEeiGl6CJxvVzPQ" operation="_O9hFsHLVEei3ud9vrLTCZg"/>
              <packagedElement xmi:type="uml:CallEvent" xmi:id="_k_5UUI5LEeie3Y8fpsu39w" name="step1_2" operation="_bXMKEGWNEei0cbjpkrd07g"/>
              <packagedElement xmi:type="uml:CallEvent" xmi:id="_xN47MI5LEeie3Y8fpsu39w" name="jbInvertActionPerformed" operation="_bKRvcGWNEei0cbjpkrd07g"/>
              <packagedElement xmi:type="uml:CallEvent" xmi:id="__XhvYI5LEeie3Y8fpsu39w" operation="_bXed8GWNEei0cbjpkrd07g"/>
              <packagedElement xmi:type="uml:CallEvent" xmi:id="_HA57kI5MEeie3Y8fpsu39w" operation="_bXed8GWNEei0cbjpkrd07g"/>
              <packagedElement xmi:type="uml:CallEvent" xmi:id="_WMZOUI5MEeie3Y8fpsu39w" operation="_bXbaoGWNEei0cbjpkrd07g"/>
              <packagedElement xmi:type="uml:CallEvent" xmi:id="_aBOK0I5MEeie3Y8fpsu39w" name="jbBackActionPerformed" operation="_bXbaoGWNEei0cbjpkrd07g"/>
              <packagedElement xmi:type="uml:CallEvent" xmi:id="_mTvFUI5MEeie3Y8fpsu39w" operation="_bXbaoGWNEei0cbjpkrd07g"/>
              <packagedElement xmi:type="uml:CallEvent" xmi:id="_xw6L4I5PEeie3Y8fpsu39w" operation="_bKEUEGWNEei0cbjpkrd07g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Wf8SgmlXEeiklvJUJNd-Aw" name="Menu" visibility="public">
              <generalization xmi:type="uml:Generalization" xmi:id="_JKA9kG4VEei47fqiwvb5mw" general="_WfWcoGlXEeiklvJUJNd-Aw"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_W-J4gGlXEeiklvJUJNd-Aw" name="lm" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_W-LGoGlXEeiklvJUJNd-Aw" name="bm" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_W-M70GlXEeiklvJUJNd-Aw" name="lanes" visibility="private" type="_bFhyUGWNEei0cbjpkrd07g" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_W-OJ8GlXEeiklvJUJNd-Aw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_W-OJ8WlXEeiklvJUJNd-Aw" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_W-OxAGlXEeiklvJUJNd-Aw" name="bands" visibility="private" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_W-P_IGlXEeiklvJUJNd-Aw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_W-QmMGlXEeiklvJUJNd-Aw" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_W-RNQGlXEeiklvJUJNd-Aw" name="finallanes" visibility="public" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_W-SbYGlXEeiklvJUJNd-Aw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_W-TCcGlXEeiklvJUJNd-Aw" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_W-UQkGlXEeiklvJUJNd-Aw" name="f" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_W-VesGlXEeiklvJUJNd-Aw" name="o" visibility="private" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_W-aXMGlXEeiklvJUJNd-Aw" name="normalisation" visibility="public" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_W-blUGlXEeiklvJUJNd-Aw" name="defaultValue">
                  <language>JAVA</language>
                  <body>false</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_W-czcGlXEeiklvJUJNd-Aw" name="similaritytable" visibility="public" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_W-eBkGlXEeiklvJUJNd-Aw" name="similaritymethod" visibility="public" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_W-fPsGlXEeiklvJUJNd-Aw" name="selectedlanes" visibility="public" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_W-f2wGlXEeiklvJUJNd-Aw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_W-gd0GlXEeiklvJUJNd-Aw" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_W-hE4GlXEeiklvJUJNd-Aw" name="initialoffset" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_6j0jABydEduyofBvg4RL2w"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_W-iTAGlXEeiklvJUJNd-Aw" name="invertcolour" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_W-jhIGlXEeiklvJUJNd-Aw" name="defaultValue">
                  <language>JAVA</language>
                  <body>false</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_W-kIMGlXEeiklvJUJNd-Aw" name="saved" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_W-lWUGlXEeiklvJUJNd-Aw" name="defaultValue">
                  <language>JAVA</language>
                  <body>false</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_W-mkcGlXEeiklvJUJNd-Aw" name="colour" visibility="private" type="_bLnzQGWNEei0cbjpkrd07g" isUnique="false">
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_W-nykGlXEeiklvJUJNd-Aw" name="defaultValue">
                  <language>JAVA</language>
                  <body>Color.BLUE</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_W-oZoGlXEeiklvJUJNd-Aw" name="first_time" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_W-pnwGlXEeiklvJUJNd-Aw" name="defaultValue">
                  <language>JAVA</language>
                  <body>true</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_W-q14GlXEeiklvJUJNd-Aw" name="windowname" visibility="private" type="_bAF4sGWNEei0cbjpkrd07g" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_W-sEAGlXEeiklvJUJNd-Aw" name="changes" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_W-srEGlXEeiklvJUJNd-Aw" name="defaultValue">
                  <language>JAVA</language>
                  <body>false</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_W-t5MGlXEeiklvJUJNd-Aw" name="newstudy" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_W-vHUGlXEeiklvJUJNd-Aw" name="studyid" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_W-wVcGlXEeiklvJUJNd-Aw" name="experimentname" visibility="private" type="_bAF4sGWNEei0cbjpkrd07g" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_W-xjkGlXEeiklvJUJNd-Aw" name="experimentcomments" visibility="private" type="_bAF4sGWNEei0cbjpkrd07g" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_W-yxsGlXEeiklvJUJNd-Aw" name="user" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_W-z_0GlXEeiklvJUJNd-Aw" name="marker" visibility="private" type="_bAF4sGWNEei0cbjpkrd07g" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_W-1N8GlXEeiklvJUJNd-Aw" name="selectedlanesforcomparison" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_W-2cEGlXEeiklvJUJNd-Aw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_W-3DIGlXEeiklvJUJNd-Aw" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_W-3qMGlXEeiklvJUJNd-Aw" name="simmethod" visibility="private" type="_bAF4sGWNEei0cbjpkrd07g" isUnique="false">
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_W-44UGlXEeiklvJUJNd-Aw" name="defaultValue">
                  <language>JAVA</language>
                  <body>&quot;&quot;</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_W-5fYGlXEeiklvJUJNd-Aw" name="linkage" visibility="private" type="_bAF4sGWNEei0cbjpkrd07g" isUnique="false">
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_W-6tgGlXEeiklvJUJNd-Aw" name="defaultValue">
                  <language>JAVA</language>
                  <body>&quot;UPGMA&quot;</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_W-77oGlXEeiklvJUJNd-Aw" name="tol" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_W-8isGlXEeiklvJUJNd-Aw" name="firstcomparison" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_W-9w0GlXEeiklvJUJNd-Aw" name="defaultValue">
                  <language>JAVA</language>
                  <body>true</body>
                </defaultValue>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_W--X4GlXEeiklvJUJNd-Aw" name="laneid" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_W-_mAGlXEeiklvJUJNd-Aw" name="experimentid" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_W_A0IGlXEeiklvJUJNd-Aw" name="e" visibility="private" type="_h_DKQGrwEei47fqiwvb5mw" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_W_CpUGlXEeiklvJUJNd-Aw" name="username" visibility="private" type="_bAF4sGWNEei0cbjpkrd07g" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_W_D3cGlXEeiklvJUJNd-Aw" name="lanesinfo" visibility="private" type="_Wfsa4WlXEeiklvJUJNd-Aw" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_0w-IcGsBEei47fqiwvb5mw" name="jButtonCrop" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_0xDA8GsBEei47fqiwvb5mw" name="jButtonEdit" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_0xDoAGsBEei47fqiwvb5mw" name="jButtonOpen" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_0xEPEGsBEei47fqiwvb5mw" name="jButtonProcessing" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_0xE2IGsBEei47fqiwvb5mw" name="jButtonSave" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_0xFdMGsBEei47fqiwvb5mw" name="jButton1" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_0xGEQGsBEei47fqiwvb5mw" name="jToolBar1" visibility="private" type="_a9M8wGWNEei0cbjpkrd07g" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_0xGrUGsBEei47fqiwvb5mw" name="jButtonLanes" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_0xGrUWsBEei47fqiwvb5mw" name="jButtonDendogram" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_0xHSYGsBEei47fqiwvb5mw" name="jButtonHelp" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_0xH5cGsBEei47fqiwvb5mw" name="pfr" visibility="private" type="_WeXlMWlXEeiklvJUJNd-Aw" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_0xa0YGsBEei47fqiwvb5mw" name="jButtonStandards" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_0xcCgGsBEei47fqiwvb5mw" name="calibrationmethod" visibility="private" isUnique="false">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_0xcCgWsBEei47fqiwvb5mw" name="jButtonOptions" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
              <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_W91IYGlXEeiklvJUJNd-Aw" name="Menu implements ActionListener" client="_Wf8SgmlXEeiklvJUJNd-Aw" supplier="_WfaHAWlXEeiklvJUJNd-Aw" contract="_WfaHAWlXEeiklvJUJNd-Aw"/>
              <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_W92WgGlXEeiklvJUJNd-Aw" name="Menu implements ItemListener" client="_Wf8SgmlXEeiklvJUJNd-Aw" supplier="_Wfb8MGlXEeiklvJUJNd-Aw" contract="_Wfb8MGlXEeiklvJUJNd-Aw"/>
              <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_W93koGlXEeiklvJUJNd-Aw" name="Menu implements MouseListener" client="_Wf8SgmlXEeiklvJUJNd-Aw" supplier="_WfdxYGlXEeiklvJUJNd-Aw" contract="_WfdxYGlXEeiklvJUJNd-Aw"/>
              <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_W94LsGlXEeiklvJUJNd-Aw" name="Menu implements MouseWheelListener" client="_Wf8SgmlXEeiklvJUJNd-Aw" supplier="_Wfe_gmlXEeiklvJUJNd-Aw" contract="_Wfe_gmlXEeiklvJUJNd-Aw"/>
              <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_W94ywGlXEeiklvJUJNd-Aw" name="Menu implements ListSelectionListener" client="_Wf8SgmlXEeiklvJUJNd-Aw" supplier="_MCdccGlWEeiklvJUJNd-Aw" contract="_MCdccGlWEeiklvJUJNd-Aw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0xu9cGsBEei47fqiwvb5mw" name="cleanall">
                <language>JAVA</language>
                <body>&#xD;
    lm = null;&#xD;
    bm = null;&#xD;
    lanes = null;&#xD;
    bands = null;&#xD;
    finallanes = null;&#xD;
    f = null;&#xD;
    o = null;&#xD;
    calibrationmethod = 0;&#xD;
    normalisation = false;&#xD;
    similaritytable = null;&#xD;
    similaritymethod = 0;&#xD;
    selectedlanes = null;&#xD;
    initialoffset = 0;&#xD;
    invertcolour = false;&#xD;
    saved = false;&#xD;
    jButtonLanes.setEnabled(false);&#xD;
    jButtonProcessing.setEnabled(false);&#xD;
    jButtonSave.setEnabled(false);&#xD;
    jButton1.setEnabled(false);&#xD;
    jButtonStandards.setEnabled(false);&#xD;
    jButtonDendogram.setEnabled(false);&#xD;
    jButtonOptions.setEnabled(false);&#xD;
    firstcomparison = true;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0xyAwGsBEei47fqiwvb5mw" name="Menu" specification="_W_GTsGlXEeiklvJUJNd-Aw">
                <language>JAVA</language>
                <body>&#xD;
    super(&quot;GelJ&quot;);&#xD;
    showWindow();&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0x0dAGsBEei47fqiwvb5mw" name="showWindow">
                <language>JAVA</language>
                <body>&#xD;
    ImagePlus imp = WindowManager.getCurrentImage();&#xD;
    boolean initialimage;&#xD;
    if (imp != null) {&#xD;
        initialimage = true;&#xD;
    } else {&#xD;
        initialimage = false;&#xD;
    }&#xD;
    jToolBar1 = new javax.swing.JToolBar();&#xD;
    jButtonOpen = new javax.swing.JButton();&#xD;
    jButtonSave = new javax.swing.JButton();&#xD;
    jButtonProcessing = new javax.swing.JButton();&#xD;
    jButtonLanes = new javax.swing.JButton();&#xD;
    jButton1 = new javax.swing.JButton();&#xD;
    jButtonStandards = new javax.swing.JButton();&#xD;
    jButtonDendogram = new javax.swing.JButton();&#xD;
    jButtonOptions = new javax.swing.JButton();&#xD;
    jButtonHelp = new javax.swing.JButton();&#xD;
    jToolBar1.setFloatable(false);&#xD;
    jToolBar1.setRollover(true);&#xD;
    // NOI18N&#xD;
    jButtonOpen.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/GelJImages/folder_open.png&quot;)));&#xD;
    jButtonOpen.setToolTipText(&quot;Open&quot;);&#xD;
    jButtonOpen.setFocusable(false);&#xD;
    jButtonOpen.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);&#xD;
    jButtonOpen.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);&#xD;
    jButtonOpen.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            try {&#xD;
                jButtonOpenActionPerformed(evt);&#xD;
            } catch (IOException ex) {&#xD;
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);&#xD;
            } catch (ClassNotFoundException ex) {&#xD;
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);&#xD;
            }&#xD;
        }&#xD;
    });&#xD;
    jToolBar1.add(jButtonOpen);&#xD;
    // NOI18N&#xD;
    jButtonSave.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/GelJImages/save.png&quot;)));&#xD;
    jButtonSave.setToolTipText(&quot;Save&quot;);&#xD;
    jButtonSave.setFocusable(false);&#xD;
    jButtonSave.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);&#xD;
    jButtonSave.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);&#xD;
    if (!initialimage) {&#xD;
        jButtonSave.setEnabled(false);&#xD;
    }&#xD;
    jButtonSave.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            try {&#xD;
                jButtonSaveActionPerformed(evt);&#xD;
            } catch (IOException ex) {&#xD;
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);&#xD;
            }&#xD;
        }&#xD;
    });&#xD;
    jToolBar1.add(jButtonSave);&#xD;
    // NOI18N&#xD;
    jButtonProcessing.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/GelJImages/processing.png&quot;)));&#xD;
    jButtonProcessing.setToolTipText(&quot;Preprocessing&quot;);&#xD;
    jButtonProcessing.setFocusable(false);&#xD;
    jButtonProcessing.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);&#xD;
    jButtonProcessing.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);&#xD;
    if (!initialimage) {&#xD;
        jButtonProcessing.setEnabled(false);&#xD;
    }&#xD;
    jButtonProcessing.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButtonProcessingActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar1.add(jButtonProcessing);&#xD;
    // NOI18N&#xD;
    jButtonLanes.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/GelJImages/lanes.png&quot;)));&#xD;
    jButtonLanes.setToolTipText(&quot;Lane detection&quot;);&#xD;
    jButtonLanes.setFocusable(false);&#xD;
    jButtonLanes.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);&#xD;
    jButtonLanes.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);&#xD;
    if (!initialimage) {&#xD;
        jButtonLanes.setEnabled(false);&#xD;
    }&#xD;
    jButtonLanes.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButtonLanesActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar1.add(jButtonLanes);&#xD;
    // NOI18N&#xD;
    jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/GelJImages/bands.png&quot;)));&#xD;
    jButton1.setToolTipText(&quot;Band detection&quot;);&#xD;
    jButton1.setEnabled(false);&#xD;
    jButton1.setFocusable(false);&#xD;
    jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);&#xD;
    jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);&#xD;
    jButton1.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton1ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar1.add(jButton1);&#xD;
    // NOI18N&#xD;
    jButtonStandards.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/GelJImages/standards.png&quot;)));&#xD;
    jButtonStandards.setToolTipText(&quot;Normalisation&quot;);&#xD;
    jButtonStandards.setEnabled(false);&#xD;
    jButtonStandards.setFocusable(false);&#xD;
    jButtonStandards.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);&#xD;
    jButtonStandards.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);&#xD;
    jButtonStandards.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            try {&#xD;
                jButtonStandardsActionPerformed(evt);&#xD;
            } catch (UnsupportedEncodingException ex) {&#xD;
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);&#xD;
            } catch (IOException ex) {&#xD;
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);&#xD;
            }&#xD;
        }&#xD;
    });&#xD;
    jToolBar1.add(jButtonStandards);&#xD;
    // NOI18N&#xD;
    jButtonDendogram.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/GelJImages/dendogram.png&quot;)));&#xD;
    jButtonDendogram.setToolTipText(&quot;Generate Dendogram&quot;);&#xD;
    jButtonDendogram.setEnabled(false);&#xD;
    jButtonDendogram.setFocusable(false);&#xD;
    jButtonDendogram.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);&#xD;
    jButtonDendogram.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);&#xD;
    jButtonDendogram.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            try {&#xD;
                jButtonDendogramActionPerformed(evt);&#xD;
            } catch (Exception ex) {&#xD;
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);&#xD;
            }&#xD;
        }&#xD;
    });&#xD;
    jToolBar1.add(jButtonDendogram);&#xD;
    // NOI18N&#xD;
    jButtonOptions.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/GelJImages/options.png&quot;)));&#xD;
    jButtonOptions.setToolTipText(&quot;Options&quot;);&#xD;
    if (!initialimage) {&#xD;
        jButtonOptions.setEnabled(false);&#xD;
    }&#xD;
    jButtonOptions.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButtonOptionsActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar1.add(jButtonOptions);&#xD;
    // NOI18N&#xD;
    jButtonHelp.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/GelJImages/help.png&quot;)));&#xD;
    jButtonHelp.setToolTipText(&quot;Help&quot;);&#xD;
    jButtonHelp.setFocusable(false);&#xD;
    jButtonHelp.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);&#xD;
    jButtonHelp.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);&#xD;
    jButtonHelp.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButtonHelpActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar1.add(jButtonHelp);&#xD;
    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);&#xD;
    this.setLayout(layout);&#xD;
    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGap(2, 2, 2).addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE).addGap(3, 3, 3)));&#xD;
    setSize(420, 75);&#xD;
    setResizable(false);&#xD;
//        show();&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0x1rIGsBEei47fqiwvb5mw" name="setExperimentid">
                <language>JAVA</language>
                <body>&#xD;
    this.experimentid = experimentid;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0x2SMWsBEei47fqiwvb5mw" name="setUsername">
                <language>JAVA</language>
                <body>&#xD;
    this.username = username;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0x6joGsBEei47fqiwvb5mw" name="jButtonOpenActionPerformed">
                <language>JAVA</language>
                <body>&#xD;
    IJ.setTool(&quot;rectangle&quot;);&#xD;
    ImagePlus imp0 = WindowManager.getCurrentImage();&#xD;
    if (imp0 != null) {&#xD;
        GenericDialog gd = new GenericDialog(&quot;Save&quot;);&#xD;
        gd.enableYesNoCancel();&#xD;
        gd.hideCancelButton();&#xD;
        gd.addMessage(&quot;Do you want to save the current study?&quot;);&#xD;
        gd.showDialog();&#xD;
        if (gd.wasOKed()) {&#xD;
            Save s = new Save(imp0, finallanes, bands, normalisation, initialoffset, invertcolour, marker);&#xD;
            s.saveinfile();&#xD;
        }&#xD;
        imp0.changes = false;&#xD;
        imp0.close();&#xD;
        cleanall();&#xD;
    }&#xD;
    if (first_time) {&#xD;
        Load ld = new Load(this);&#xD;
        ld.loadimageorstudy();&#xD;
    } else {&#xD;
        GenericDialog gd = new GenericDialog(&quot;GelJ Assistant&quot;);&#xD;
        gd.addMessage(&quot;Do you want to use the assistant?&quot;);&#xD;
        gd.hideCancelButton();&#xD;
        gd.enableYesNoCancel();&#xD;
        gd.addMessage(&quot;&quot;);&#xD;
        // gd.addHelp(&quot;&quot;);&#xD;
        // gd.setHelpLabel(&quot;Back&quot;);&#xD;
        gd.showDialog();&#xD;
        if (gd.wasOKed()) {&#xD;
            Assistant a = new Assistant(this);&#xD;
            gd.dispose();&#xD;
            a.openimageassitant();&#xD;
        } else {&#xD;
            Load ld = new Load(this);&#xD;
            ld.loadimageorstudy();&#xD;
        }&#xD;
    }&#xD;
    ImagePlus imp = WindowManager.getCurrentImage();&#xD;
    boolean initialimage;&#xD;
    if (imp != null) {&#xD;
        initialimage = true;&#xD;
    } else {&#xD;
        initialimage = false;&#xD;
    }&#xD;
    if (initialimage) {&#xD;
        windowname = imp.getTitle();&#xD;
        jButtonLanes.setEnabled(true);&#xD;
        jButtonProcessing.setEnabled(true);&#xD;
        jButtonSave.setEnabled(true);&#xD;
        jButtonOptions.setEnabled(true);&#xD;
    }&#xD;
    first_time = false;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0x7KsGsBEei47fqiwvb5mw" name="enableall">
                <language>JAVA</language>
                <body>&#xD;
    jButtonLanes.setEnabled(true);&#xD;
    jButtonProcessing.setEnabled(true);&#xD;
    jButtonSave.setEnabled(true);&#xD;
    jButtonOptions.setEnabled(true);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0x8Y0WsBEei47fqiwvb5mw" name="jButtonSaveActionPerformed">
                <language>JAVA</language>
                <body>&#xD;
    if (changes) {&#xD;
        ImagePlus imp = IJ.getImage();&#xD;
        Save s = new Save(imp, finallanes, bands, normalisation, initialoffset, invertcolour, marker);&#xD;
        s.saveinfile();&#xD;
        saved = true;&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0x9m8WsBEei47fqiwvb5mw" name="jButtonEditActionPerformed">
                <language>JAVA</language>
                <body>&#xD;
    IJ.setTool(&quot;rectangle&quot;);&#xD;
    ImagePlus imp = IJ.getImage();&#xD;
    ImageEdit panelOptions = new ImageEdit(imp, this);&#xD;
    GenericDialog gdG = new GenericDialog(&quot;Image Editing&quot;);&#xD;
    gdG.add(panelOptions);&#xD;
    gdG.addMessage(&quot;&quot;);&#xD;
    gdG.showDialog();&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0x-1EWsBEei47fqiwvb5mw" name="jButtonSelectActionPerformed">
                <language>JAVA</language>
                <body>&#xD;
    ImagePlus imp = IJ.getImage();&#xD;
    IJ.setTool(&quot;rectangle&quot;);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0x_cIWsBEei47fqiwvb5mw" name="jButtonCropActionPerformed">
                <language>JAVA</language>
                <body>&#xD;
    ImagePlus imp = IJ.getImage();&#xD;
    Roi r = imp.getRoi();&#xD;
    IJ.run(imp, &quot;Crop&quot;, &quot;&quot;);&#xD;
    changes = true;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0yAqQGsBEei47fqiwvb5mw" name="jButtonProcessingActionPerformed">
                <language>JAVA</language>
                <body>&#xD;
    ImagePlus imp = IJ.getImage();&#xD;
    if (f == null) {&#xD;
        f = new PreProcessing(this);&#xD;
    } else {&#xD;
        f.showWindow();&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0yBRUWsBEei47fqiwvb5mw" name="jButtonLanesActionPerformed">
                <language>JAVA</language>
                <body>&#xD;
    changes = true;&#xD;
    lm = new LaneManager(this);&#xD;
    IJ.setTool(&quot;rectangle&quot;);&#xD;
    ImagePlus imp = WindowManager.getCurrentImage();&#xD;
    LaneManagerCanvas cc = new LaneManagerCanvas(imp);&#xD;
    new ImageWindow(imp, cc);&#xD;
    cc.requestFocus();&#xD;
    if (lanes != null) {&#xD;
        for (Roi lane : lanes) {&#xD;
            lm.addRoi(lane);&#xD;
        }&#xD;
        if (getstandardlanes(finallanes) != null) {&#xD;
            lm.fix_standards(roisfromlanes(getstandardlanes(finallanes)));&#xD;
        }&#xD;
    }&#xD;
    lm.requestFocus();&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0yCfcGsBEei47fqiwvb5mw" name="jButton1ActionPerformed">
                <language>JAVA</language>
                <body>&#xD;
    if (finallanes == null || finallanes.length == 0) {&#xD;
        IJ.error(&quot;As a first step, you must detect the lanes of the image&quot;);&#xD;
    } else {&#xD;
        IJ.setTool(&quot;point&quot;);&#xD;
        bm = new BandManager(this);&#xD;
        ImagePlus imp = WindowManager.getCurrentImage();&#xD;
        BandManagerCanvas cc = new BandManagerCanvas(imp);&#xD;
        ImageWindow imageWindow = new ImageWindow(imp, cc);&#xD;
        if (finallanes != null) {&#xD;
            for (int i = 0; i &lt; finallanes.length; i++) {&#xD;
                int[] positionbands = finallanes[i].getPositionbands();&#xD;
                if (positionbands != null) {&#xD;
                    for (int b : positionbands) {&#xD;
                        Roi r0 = finallanes[i].getRoi();&#xD;
                        int r0x = r0.getBounds().x;&#xD;
                        int r0y = r0.getBounds().y;&#xD;
                        int w = r0.getBounds().width;&#xD;
                        Rectangle r = new Rectangle(r0x, r0y + b, w, 2);&#xD;
                        Roi r1 = rectangleintersectionroi(r0, r);&#xD;
                        r1.setFillColor(colour);&#xD;
                        bm.add(imp, r1, 0, i);&#xD;
                        bm.showAll(0);&#xD;
                    }&#xD;
                }&#xD;
            }&#xD;
        }&#xD;
        bm.requestFocus();&#xD;
    /*if (bands!=null){
             for (Band band : bands) {
             bm.add(imp,band.getRoi(),0,band.getLane());
             bm.showAll(0);
             }   
             }*/&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0yDtkGsBEei47fqiwvb5mw" name="jButtonStandardsActionPerformed">
                <language>JAVA</language>
                <body>&#xD;
    // If no standard has been previously defined, we ask the user whether&#xD;
    // she wants to define a standard.&#xD;
    Lane[] stds = getstandardlanes(finallanes);&#xD;
    if ((stds == null) || (stds.length == 0)) {&#xD;
        GenericDialog gdG = new GenericDialog(&quot;No Standards&quot;);&#xD;
        gdG.addMessage(&quot;You have not defined any standard yet, do you want to add them now?.&quot;);&#xD;
        gdG.showDialog();&#xD;
        if (gdG.wasOKed()) {&#xD;
            boolean[] selectstandards = selectstandards(lanesnames(finallanes), whatarestandardlanes(finallanes));&#xD;
            if (selectstandards.length &lt; 2) {&#xD;
                return;&#xD;
            } else {&#xD;
                for (int i = 0; i &lt; selectstandards.length; i++) {&#xD;
                    finallanes[i].setIsstandard(selectstandards[i]);&#xD;
                }&#xD;
            }&#xD;
        } else {&#xD;
            return;&#xD;
        }&#xD;
    }&#xD;
    if (stds.length == 1) {&#xD;
        GenericDialog gdG = new GenericDialog(&quot;No Standards&quot;);&#xD;
        gdG.addMessage(&quot;You have only defined one lane as reference lane, and you&quot; + &quot; need to define at least two lanes as reference lanes. &quot; + &quot;Would you like to add them now?&quot;);&#xD;
        gdG.showDialog();&#xD;
        if (gdG.wasOKed()) {&#xD;
            boolean[] selectstandards = selectstandards(lanesnames(finallanes), whatarestandardlanes(finallanes));&#xD;
            if (selectstandards.length &lt; 2) {&#xD;
                IJ.error(&quot;Select at least two lanes as reference lanes&quot;);&#xD;
                return;&#xD;
            } else {&#xD;
                for (int i = 0; i &lt; selectstandards.length; i++) {&#xD;
                    finallanes[i].setIsstandard(selectstandards[i]);&#xD;
                }&#xD;
            }&#xD;
        }&#xD;
        if (gdG.wasCanceled()) {&#xD;
            return;&#xD;
        }&#xD;
    }&#xD;
    // If the standard lanes have different number of bands, we ask the user&#xD;
    // whether she wants to modify the number of bands in the standards.&#xD;
    Lane[] stdlanes = getstandardlanes(finallanes);&#xD;
    int[] indexesstd = numberofbandslanes(stdlanes);&#xD;
    if (!allequal(indexesstd)) {&#xD;
        GenericDialog gdG = new GenericDialog(&quot;No Standards&quot;);&#xD;
        gdG.addMessage(&quot;The number of bands in the reference lanes is different, &quot; + &quot;all the reference lanes must have the same number of bands. &quot;);&#xD;
        for (int i = 0; i &lt; stdlanes.length; i++) {&#xD;
            gdG.addMessage(stdlanes[i].getName() + &quot; contains &quot; + stdlanes[i].getPositionbands().length + &quot;.&quot;);&#xD;
        }&#xD;
        gdG.addMessage(&quot;Would you like to modify the number of bands?&quot;);&#xD;
        gdG.showDialog();&#xD;
        if (gdG.wasOKed()) {&#xD;
            bm = new BandManager(this);&#xD;
            ImagePlus imp = WindowManager.getCurrentImage();&#xD;
            BandManagerCanvas cc = new BandManagerCanvas(imp);&#xD;
            new ImageWindow(imp, cc);&#xD;
            cc.requestFocus();&#xD;
            for (Band band : bands) {&#xD;
                bm.add(imp, band.getRoi(), 0, band.getLane());&#xD;
                bm.showAll(0);&#xD;
            }&#xD;
            return;&#xD;
        }&#xD;
        if (gdG.wasCanceled()) {&#xD;
            return;&#xD;
        }&#xD;
    }&#xD;
    // We show the dialog asking the user whether she wants to use a &#xD;
    // previously defined standard or create a new one. &#xD;
    GenericDialog gdG = new GenericDialog(&quot;Standards&quot;);&#xD;
    StandardsPanel sp = new StandardsPanel();&#xD;
    ArrayList&lt;String> availablestd = readstandardsavailable();&#xD;
    if (availablestd == null || 0 == availablestd.size()) {&#xD;
        sp.disableavailablestd();&#xD;
    }&#xD;
    sp.setlistofstandards(availablestd);&#xD;
    gdG.add(sp);&#xD;
    gdG.addMessage(&quot;&quot;);&#xD;
    gdG.showDialog();&#xD;
    if (gdG.wasCanceled()) {&#xD;
        gdG.dispose();&#xD;
        return;&#xD;
    }&#xD;
    int[] indexes = indexesstandardlanes(finallanes);&#xD;
    // and the molecular wheights for the bands of the standard.&#xD;
    if (sp.isnewstandardselected()) {&#xD;
        /////////////////////////////////////////////////////////////&#xD;
        ImagePlus imp = WindowManager.getCurrentImage();&#xD;
        NormaliseManager rm = new NormaliseManager();&#xD;
        int[] positionbands = finallanes[indexes[0]].getPositionbands();&#xD;
        if (positionbands != null) {&#xD;
            for (int b : positionbands) {&#xD;
                Roi r0 = finallanes[indexes[0]].getRoi();&#xD;
                int r0x = r0.getBounds().x;&#xD;
                int r0y = r0.getBounds().y;&#xD;
                int w = r0.getBounds().width;&#xD;
                Rectangle r = new Rectangle(r0x, r0y + b, w, 2);&#xD;
                Roi r1 = rectangleintersectionroi(r0, r);&#xD;
                rm.add(imp, r1, 0);&#xD;
                rm.showAll(0);&#xD;
            }&#xD;
        }&#xD;
        /////////////////////////////////////////////////////////////////// &#xD;
        double[] res = createStandard(finallanes[indexes[0]].getPositionbands().length);&#xD;
        rm.close();&#xD;
        if (res == null) {&#xD;
            return;&#xD;
        } else {&#xD;
            for (int i = 0; i &lt; indexes.length; i++) {&#xD;
                finallanes[indexes[i]].setStdpositionbands(res);&#xD;
            }&#xD;
        }&#xD;
    } else {&#xD;
        // If she chooses an available standard, we check that the standard contains&#xD;
        // as much molecular weights as bands in the image. In such a case, we assign&#xD;
        // the values; otherwise, we ask the user to remove/add the molecular weights that &#xD;
        // do not appear in the image. &#xD;
        String file = sp.nameoptionmenu();&#xD;
        marker = file;&#xD;
        double[] stdvalues = readstandardfromfile(file);&#xD;
        if (stdvalues.length == finallanes[indexes[0]].getPositionbands().length) {&#xD;
            for (int i = 0; i &lt; indexes.length; i++) {&#xD;
                finallanes[indexes[i]].setStdpositionbands(stdvalues);&#xD;
            }&#xD;
        } else {&#xD;
            IJ.error(&quot;The standard contains &quot; + stdvalues.length + &quot; elements,&quot; + &quot; but the reference lane contains &quot; + finallanes[indexes[0]].getPositionbands().length + &quot; bands. Please, add or remove the necessary values.&quot;);&#xD;
            /////////////////////////////////////////////////////////////&#xD;
            ImagePlus imp = WindowManager.getCurrentImage();&#xD;
            NormaliseManager rm = new NormaliseManager();&#xD;
            int[] positionbands = finallanes[indexes[0]].getPositionbands();&#xD;
            if (positionbands != null) {&#xD;
                for (int b : positionbands) {&#xD;
                    Roi r0 = finallanes[indexes[0]].getRoi();&#xD;
                    int r0x = r0.getBounds().x;&#xD;
                    int r0y = r0.getBounds().y;&#xD;
                    int w = r0.getBounds().width;&#xD;
                    Rectangle r = new Rectangle(r0x, r0y + b, w, 2);&#xD;
                    Roi r1 = rectangleintersectionroi(r0, r);&#xD;
                    rm.add(imp, r1, 0);&#xD;
                    rm.showAll(0);&#xD;
                }&#xD;
            }&#xD;
            /////////////////////////////////////////////////////////////////// &#xD;
            GenericDialog gdG2 = new GenericDialog(&quot;List of values&quot;);&#xD;
            ListofValues lp = new ListofValues();&#xD;
            lp.init();&#xD;
            lp.addelements(stdvalues);&#xD;
            gdG2.add(lp);&#xD;
            gdG2.addMessage(&quot;&quot;);&#xD;
            gdG2.showDialog();&#xD;
            // required to ask the user again for values.&#xD;
            while (stdvalues.length != finallanes[indexes[0]].getPositionbands().length) {&#xD;
                if (gdG2.wasCanceled()) {&#xD;
                    gdG2.dispose();&#xD;
                    return;&#xD;
                }&#xD;
                if (gdG2.wasOKed()) {&#xD;
                    stdvalues = lp.getelements();&#xD;
                    if (stdvalues.length != finallanes[indexes[0]].getPositionbands().length) {&#xD;
                        IJ.error(&quot;The standard contains &quot; + stdvalues.length + &quot; elements,&quot; + &quot; but the reference lane contains &quot; + finallanes[indexes[0]].getPositionbands().length + &quot; bands.&quot;);&#xD;
                        gdG2.dispose();&#xD;
                        gdG2 = new GenericDialog(&quot;List of values&quot;);&#xD;
                        lp = new ListofValues();&#xD;
                        lp.init();&#xD;
                        lp.addelements(stdvalues);&#xD;
                        gdG2.add(lp);&#xD;
                        gdG2.addMessage(&quot;&quot;);&#xD;
                        gdG2.showDialog();&#xD;
                    }&#xD;
                }&#xD;
            }&#xD;
            initialoffset = finallanes[indexes[0]].getPositionbands()[0];&#xD;
            double tempoffset = 0;&#xD;
            for (int i = 0; i &lt; indexes.length; i++) {&#xD;
                finallanes[indexes[i]].setStdpositionbands(stdvalues);&#xD;
                tempoffset = initialoffset - finallanes[indexes[i]].getPositionbands()[0];&#xD;
                finallanes[indexes[i]].setOffset(tempoffset);&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    // Finally, we ask the user to select the calibration method. &#xD;
    CurveCalibration cc = new CurveCalibration(intarraytodoublearray(finallanes[indexes[0]].getPositionbands()), finallanes[indexes[0]].getStdpositionbands(), this);&#xD;
    normalisation = true;&#xD;
/*GenericDialog gdG = new GenericDialog(&quot;Checking&quot;);
         for(int i=0;i&lt;finallanes.length;i++){
         gdG.addMessage(finallanes[i].getName() + &quot; has &quot;+ 
         finallanes[i].getPositionbands().length + &quot; bands.&quot;);
         }
         gdG.showDialog();
         */&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0yE7sGsBEei47fqiwvb5mw" name="jButtonDendogramActionPerformed">
                <language>JAVA</language>
                <body>&#xD;
    if (finallanes == null || finallanes.length == 0) {&#xD;
        IJ.error(&quot;In order to create a dendogram, you must (at least) detect the &quot; + &quot;lanes of the image.&quot;);&#xD;
    } else {&#xD;
        ImagePlus imp = IJ.getImage();&#xD;
        Dendogram panelOptions = new Dendogram(imp);&#xD;
        double tolerance_aux = 100;&#xD;
        if (!normalisation) {&#xD;
            IJ.error(&quot;You have not performed the normalisation step; therefore &quot; + &quot;you will only be able to use curve-based methods for the &quot; + &quot;dendrograms.&quot;);&#xD;
        } else {&#xD;
            panelOptions.activatebandbased();&#xD;
            computestdlanes(finallanes, calibrationmethod, initialoffset);&#xD;
            int[] indexes = indexesstandardlanes(finallanes);&#xD;
            double[] stds = finallanes[indexes[0]].getStdpositionbands();&#xD;
            tolerance_aux = stds[0] - stds[stds.length - 1];&#xD;
        }&#xD;
        boolean[] temp = selectlanes(lanesnames(finallanes));&#xD;
        selectedlanesforcomparison = temp;&#xD;
        if (temp == null || temp.length == 0) {&#xD;
            return;&#xD;
        }&#xD;
        selectedlanes = new Lane[trueinbooleanarray(temp)];&#xD;
        int j = 0;&#xD;
        for (int i = 0; i &lt; temp.length; i++) {&#xD;
            if (temp[i]) {&#xD;
                selectedlanes[j] = finallanes[i];&#xD;
                j++;&#xD;
            }&#xD;
        }&#xD;
        GenericDialog gdG = new GenericDialog(&quot;Cluster Analysis&quot;);&#xD;
        gdG.add(panelOptions);&#xD;
        gdG.addMessage(&quot;&quot;);&#xD;
        gdG.showDialog();&#xD;
        if (gdG.wasCanceled()) {&#xD;
            return;&#xD;
        }&#xD;
        similaritymethod = panelOptions.getSimilarity();&#xD;
        int clustering_alg = panelOptions.getClustering();&#xD;
        tol = panelOptions.getTolerance();&#xD;
        double tolerance = tolerance_aux * panelOptions.getTolerance() / 100;&#xD;
        int output = panelOptions.getOutput();&#xD;
        LaneComparison lc;&#xD;
        switch(similaritymethod) {&#xD;
            case 0:&#xD;
                lc = new Dice(tolerance);&#xD;
                simmethod = &quot;Dice&quot;;&#xD;
                break;&#xD;
            case 1:&#xD;
                lc = new Jaccard(tolerance);&#xD;
                simmethod = &quot;Jaccard&quot;;&#xD;
                break;&#xD;
            case 2:&#xD;
                lc = new Jeffrey(tolerance);&#xD;
                simmethod = &quot;Jeffrey's X&quot;;&#xD;
                break;&#xD;
            case 3:&#xD;
                lc = new Ochiai(tolerance);&#xD;
                simmethod = &quot;Ochiai&quot;;&#xD;
                break;&#xD;
            case 4:&#xD;
                lc = new BandDifference(tolerance);&#xD;
                simmethod = &quot;Band difference&quot;;&#xD;
                break;&#xD;
            case 5:&#xD;
                lc = new PearsonCorrelation();&#xD;
                simmethod = &quot;Pearson correlation&quot;;&#xD;
                break;&#xD;
            case 6:&#xD;
                lc = new CosineCorrelation();&#xD;
                simmethod = &quot;Cosine coefficient&quot;;&#xD;
                break;&#xD;
            case 7:&#xD;
                lc = new EuclideanDistance();&#xD;
                simmethod = &quot;Euclidean distance&quot;;&#xD;
                break;&#xD;
            case 8:&#xD;
                lc = new ManhattanDistance();&#xD;
                simmethod = &quot;Manhattan distance&quot;;&#xD;
                break;&#xD;
            default:&#xD;
                lc = new PearsonCorrelation();&#xD;
                simmethod = &quot;Pearson correlation&quot;;&#xD;
                break;&#xD;
        }&#xD;
        switch(clustering_alg) {&#xD;
            case SINGLE:&#xD;
                linkage = &quot;Single linkage&quot;;&#xD;
                break;&#xD;
            case COMPLETE:&#xD;
                linkage = &quot;Complete linkage&quot;;&#xD;
                break;&#xD;
            case UPGMA:&#xD;
                linkage = &quot;UPGMA&quot;;&#xD;
                break;&#xD;
            case MEAN:&#xD;
                linkage = &quot;Mean linkage&quot;;&#xD;
                break;&#xD;
            case UPGMC:&#xD;
                linkage = &quot;UPGMC&quot;;&#xD;
                break;&#xD;
            case WARD:&#xD;
                linkage = &quot;Ward&quot;;&#xD;
                break;&#xD;
            default:&#xD;
                break;&#xD;
        }&#xD;
        similaritytable = lc.CompareLanes(selectedlanes);&#xD;
        PleaseWait pw = new PleaseWait((JDialog) null, false);&#xD;
        pw.setVisible(true);&#xD;
        pw.toFront();&#xD;
        WekaClustering wc = new WekaClustering(clustering_alg, similaritytable, selectedlanes, similaritymethod, invertcolour, output, colour, null);&#xD;
        wc.computeandvisualisecluster(pw);&#xD;
        if (firstcomparison) {&#xD;
            createnewstudy();&#xD;
            firstcomparison = false;&#xD;
        } else {&#xD;
            createnewcomparison();&#xD;
        }&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0yGJ0msBEei47fqiwvb5mw" name="externalcomputestdlanes">
                <language>JAVA</language>
                <body>&#xD;
    computestdlanes(finallanes, calibrationmethod, initialoffset);&#xD;
    return finallanes;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0yH_AGsBEei47fqiwvb5mw" name="jButtonOptionsActionPerformed">
                <language>JAVA</language>
                <body>&#xD;
    ImagePlus imp = IJ.getImage();&#xD;
    if (normalisation) {&#xD;
        computestdlanes(finallanes, calibrationmethod, initialoffset);&#xD;
    }&#xD;
    if (o == null) {&#xD;
        o = new Options(this);&#xD;
    } else {&#xD;
        o.setMenu(this);&#xD;
        o.showWindow();&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0yJNIGsBEei47fqiwvb5mw" name="jButtonHelpActionPerformed">
                <language>JAVA</language>
                <body>&#xD;
    //To change body of generated methods, choose Tools | Templates.&#xD;
    throw new UnsupportedOperationException(&quot;Not supported yet.&quot;);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0yJ0M2sBEei47fqiwvb5mw" name="setLanes">
                <language>JAVA</language>
                <body>&#xD;
    this.lanes = lanes;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0yLCUWsBEei47fqiwvb5mw" name="getLanes">
                <language>JAVA</language>
                <body>&#xD;
    return lanes;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0yLpYmsBEei47fqiwvb5mw" name="setLane">
                <language>JAVA</language>
                <body>&#xD;
    lanes[pos] = lane;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0yM3gGsBEei47fqiwvb5mw" name="setBands">
                <language>JAVA</language>
                <body>&#xD;
    this.bands = bands;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0yNekGsBEei47fqiwvb5mw" name="getBands">
                <language>JAVA</language>
                <body>&#xD;
    return bands;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0yNekmsBEei47fqiwvb5mw" name="makebuttonsavailable">
                <language>JAVA</language>
                <body>&#xD;
    jButton1.setEnabled(true);&#xD;
    jButtonDendogram.setEnabled(true);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0yOFoWsBEei47fqiwvb5mw" name="makebuttonstdavailable">
                <language>JAVA</language>
                <body>&#xD;
    jButtonStandards.setEnabled(true);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0yOssWsBEei47fqiwvb5mw" name="setCalibrationmethod">
                <language>JAVA</language>
                <body>&#xD;
    this.calibrationmethod = calibrationmethod;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0yPTwWsBEei47fqiwvb5mw" name="actionPerformed">
                <language>JAVA</language>
                <body>&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0yP60WsBEei47fqiwvb5mw" name="itemStateChanged">
                <language>JAVA</language>
                <body>&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0yQh4WsBEei47fqiwvb5mw" name="mouseClicked">
                <language>JAVA</language>
                <body>&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0yRI8WsBEei47fqiwvb5mw" name="mousePressed">
                <language>JAVA</language>
                <body>&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0yRwAWsBEei47fqiwvb5mw" name="mouseReleased">
                <language>JAVA</language>
                <body>&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0ySXEGsBEei47fqiwvb5mw" name="mouseEntered">
                <language>JAVA</language>
                <body>&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0yS-IGsBEei47fqiwvb5mw" name="mouseExited">
                <language>JAVA</language>
                <body>&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0yTlMGsBEei47fqiwvb5mw" name="mouseWheelMoved">
                <language>JAVA</language>
                <body>&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0yUMQGsBEei47fqiwvb5mw" name="valueChanged">
                <language>JAVA</language>
                <body>&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0yUMQ2sBEei47fqiwvb5mw" name="setNormalisation">
                <language>JAVA</language>
                <body>&#xD;
    this.normalisation = normalisation;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0yUzUmsBEei47fqiwvb5mw" name="setInitialoffset">
                <language>JAVA</language>
                <body>&#xD;
    this.initialoffset = initialoffset;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0yVaYWsBEei47fqiwvb5mw" name="changeinvertcolour">
                <language>JAVA</language>
                <body>&#xD;
    this.invertcolour = !this.invertcolour;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0yWBcmsBEei47fqiwvb5mw" name="getinvertcolour">
                <language>JAVA</language>
                <body>&#xD;
    return invertcolour;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0yWogWsBEei47fqiwvb5mw" name="setInvertcolour">
                <language>JAVA</language>
                <body>&#xD;
    this.invertcolour = invertcolour;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0yXPkGsBEei47fqiwvb5mw" name="close">
                <language>JAVA</language>
                <body>&#xD;
    if (!saved) {&#xD;
        GenericDialog gd = new GenericDialog(&quot;Save Study&quot;);&#xD;
        gd.enableYesNoCancel();&#xD;
        gd.hideCancelButton();&#xD;
        gd.addMessage(&quot;Do you want to save the study for further use?&quot;);&#xD;
        gd.addMessage(&quot;&quot;);&#xD;
        gd.showDialog();&#xD;
        if (gd.wasOKed()) {&#xD;
            ImagePlus imp = WindowManager.getCurrentImage();&#xD;
            imp.changes = false;&#xD;
            Save s = new Save(imp, finallanes, bands, normalisation, initialoffset, invertcolour, marker);&#xD;
            try {&#xD;
                s.saveinfile();&#xD;
            } catch (IOException ex) {&#xD;
                Logger.getLogger(WekaClustering.class.getName()).log(Level.SEVERE, null, ex);&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    IJ.getInstance().quit();&#xD;
    super.close();&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0yXPk2sBEei47fqiwvb5mw" name="getInitialoffset">
                <language>JAVA</language>
                <body>&#xD;
    return initialoffset;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0yX2omsBEei47fqiwvb5mw" name="getCalibrationmethod">
                <language>JAVA</language>
                <body>&#xD;
    return calibrationmethod;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0yYdsmsBEei47fqiwvb5mw" name="setColour">
                <language>JAVA</language>
                <body>&#xD;
    this.colour = colour;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0yZEwmsBEei47fqiwvb5mw" name="getColour">
                <language>JAVA</language>
                <body>&#xD;
    return colour;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0yZr0GsBEei47fqiwvb5mw" name="sortfinallanes">
                <language>JAVA</language>
                <body>&#xD;
    for (int i = 0; i &lt; finallanes.length - 1; i++) {&#xD;
        int min = i;&#xD;
        for (int j = i + 1; j &lt; finallanes.length; j++) {&#xD;
            if (finallanes[j].getRoi().getBounds().x &lt; finallanes[min].getRoi().getBounds().x) {&#xD;
                min = j;&#xD;
            }&#xD;
        }&#xD;
        Lane temp = finallanes[i];&#xD;
        finallanes[i] = finallanes[min];&#xD;
        finallanes[min] = temp;&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0yaS4WsBEei47fqiwvb5mw" name="setFirst_time">
                <language>JAVA</language>
                <body>&#xD;
    this.first_time = first_time;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0ya58WsBEei47fqiwvb5mw" name="getWindowname">
                <language>JAVA</language>
                <body>&#xD;
    return windowname;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0ybhAWsBEei47fqiwvb5mw" name="setWindowname">
                <language>JAVA</language>
                <body>&#xD;
    this.windowname = windowname;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0ycIEGsBEei47fqiwvb5mw" name="setChanges">
                <language>JAVA</language>
                <body>&#xD;
    this.changes = changes;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0ycIE2sBEei47fqiwvb5mw" name="getStudyid">
                <language>JAVA</language>
                <body>&#xD;
    return studyid;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0ycvIGsBEei47fqiwvb5mw" name="setStudyid">
                <language>JAVA</language>
                <body>&#xD;
    this.studyid = studyid;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0ydWMmsBEei47fqiwvb5mw" name="isNewstudy">
                <language>JAVA</language>
                <body>&#xD;
    return newstudy;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0yd9QWsBEei47fqiwvb5mw" name="setNewstudy">
                <language>JAVA</language>
                <body>&#xD;
    this.newstudy = newstudy;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0yekUGsBEei47fqiwvb5mw" name="getExperimentname">
                <language>JAVA</language>
                <body>&#xD;
    return experimentname;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0yfLYGsBEei47fqiwvb5mw" name="setExperimentname">
                <language>JAVA</language>
                <body>&#xD;
    this.experimentname = experimentname;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0yfLY2sBEei47fqiwvb5mw" name="getExperimentcomments">
                <language>JAVA</language>
                <body>&#xD;
    return experimentcomments;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0ygZgGsBEei47fqiwvb5mw" name="setExperimentcomments">
                <language>JAVA</language>
                <body>&#xD;
    this.experimentcomments = experimentcomments;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0ygZgWsBEei47fqiwvb5mw" name="setUser">
                <language>JAVA</language>
                <body>&#xD;
    this.user = user;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0yhnoGsBEei47fqiwvb5mw" name="setSelectedlanesforcomparison">
                <language>JAVA</language>
                <body>&#xD;
    this.selectedlanesforcomparison = selectedlanesforcomparison;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0yiOsGsBEei47fqiwvb5mw" name="setMarker">
                <language>JAVA</language>
                <body>&#xD;
    this.marker = marker;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0yi1wGsBEei47fqiwvb5mw" name="setSimmethod">
                <language>JAVA</language>
                <body>&#xD;
    this.simmethod = simmethod;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0yjc0GsBEei47fqiwvb5mw" name="setLinkage">
                <language>JAVA</language>
                <body>&#xD;
    this.linkage = linkage;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0yjc02sBEei47fqiwvb5mw" name="setTol">
                <language>JAVA</language>
                <body>&#xD;
    this.tol = tol;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0ykD4WsBEei47fqiwvb5mw" name="changefirstcomparison">
                <language>JAVA</language>
                <body>&#xD;
    firstcomparison = false;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0ykq8GsBEei47fqiwvb5mw" name="createnewstudy">
                <language>JAVA</language>
                <body>&#xD;
    /// Creation of the study&#xD;
    studyid = lastStudyid();&#xD;
    String name = &quot;Study-&quot; + studyid;&#xD;
    String comments = &quot;&quot;;&#xD;
    java.util.Calendar cal = java.util.Calendar.getInstance();&#xD;
    java.util.Date utilDate = cal.getTime();&#xD;
    Date date = new Date(utilDate.getTime());&#xD;
    // Creating folders&#xD;
    File folder0 = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/GelJDBImages/&quot;);&#xD;
    if (!folder0.exists()) {&#xD;
        folder0.mkdir();&#xD;
    }&#xD;
    username = getUser(user).getUsername();&#xD;
    File folderuser = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/GelJDBImages/&quot; + studyid);&#xD;
    if (!folderuser.exists()) {&#xD;
        folderuser.mkdir();&#xD;
    }&#xD;
    File folder = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/GelJDBImages/&quot; + studyid + &quot;/&quot; + username);&#xD;
    folder.mkdir();&#xD;
    File folderexp = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/GelJDBImages/&quot; + studyid + &quot;/&quot; + username + &quot;/experiments/&quot;);&#xD;
    folderexp.mkdir();&#xD;
    File foldercomp = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/GelJDBImages/&quot; + studyid + &quot;/&quot; + username + &quot;/comparisons/&quot;);&#xD;
    foldercomp.mkdir();&#xD;
    String path = System.getProperty(&quot;user.dir&quot;) + &quot;/GelJDBImages/&quot; + studyid + &quot;/&quot; + username;&#xD;
    User u = getUser(user);&#xD;
    Study s = new Study(studyid, name, date, path, comments, u);&#xD;
    insertStudy(s);&#xD;
    //// Creation of the experiment&#xD;
    experimentid = lastExperimentid();&#xD;
    experimentname = &quot;Experiment-&quot; + experimentid;&#xD;
    Marker m = null;&#xD;
    if (marker != null) {&#xD;
        m = getMarker(marker);&#xD;
    } else {&#xD;
        m = getMarker(lastMarkerid() - 1);&#xD;
    }&#xD;
    e = new Experiment(experimentid, experimentname, date, windowname, calibrationmethod, &quot;&quot;, s, m, u);&#xD;
    insertExperiment(e);&#xD;
    // Creation of the folder where the experiment image will be saved.&#xD;
    File folderexp1 = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/GelJDBImages/&quot; + studyid + &quot;/&quot; + username + &quot;/experiments/&quot; + experimentid + &quot;/&quot;);&#xD;
    folderexp1.mkdir();&#xD;
    ImagePlus imp = WindowManager.getImage(windowname);&#xD;
    String pathimage = folderexp1 + &quot;/&quot; + windowname;&#xD;
    IJ.save(imp, pathimage);&#xD;
    //// Creation of the lanes to store them in the database&#xD;
    // Creation of the folder where the lanes will be saved.&#xD;
    File folderexplanes = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/GelJDBImages/&quot; + studyid + &quot;/&quot; + username + &quot;/experiments/&quot; + experimentid + &quot;/lanes/&quot;);&#xD;
    folderexplanes.mkdir();&#xD;
    // For each lane, we create a lanedb instance that is added to the database&#xD;
    laneid = lastLaneid();&#xD;
    updatelanesdb();&#xD;
    //// Creation of the comparison&#xD;
    int compid = lastComparisonid();&#xD;
    String compname = &quot;Comparison-&quot; + compid;&#xD;
    Comparison c = new Comparison(compid, compname, date, simmethod, linkage, tol, &quot;&quot;, s);&#xD;
    insertComparison(c);&#xD;
    /// Adding the selected lanes to the comparison&#xD;
    for (int i = 0; i &lt; selectedlanesforcomparison.length; i++) {&#xD;
        if (selectedlanesforcomparison[i]) {&#xD;
            insertComparisonLane(compid, laneid + i);&#xD;
        }&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0ylSAmsBEei47fqiwvb5mw" name="storeexperiment">
                <language>JAVA</language>
                <body>&#xD;
    username = getUser(user).getUsername();&#xD;
    java.util.Calendar cal = java.util.Calendar.getInstance();&#xD;
    java.util.Date utilDate = cal.getTime();&#xD;
    Date date = new Date(utilDate.getTime());&#xD;
    //// Creation of the experiment&#xD;
    experimentid = lastExperimentid();&#xD;
    experimentname = &quot;Experiment-&quot; + experimentid;&#xD;
    Marker m = null;&#xD;
    if (marker != null) {&#xD;
        m = getMarker(marker);&#xD;
    } else {&#xD;
        m = getMarker(lastMarkerid() - 1);&#xD;
    }&#xD;
    e = new Experiment(experimentid, experimentname, date, windowname, calibrationmethod, &quot;&quot;, getStudy(studyid), m, getUser(user));&#xD;
    insertExperiment(e);&#xD;
    // Creation of the folder where the experiment image will be saved.&#xD;
    File folderexp1 = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/GelJDBImages/&quot; + studyid + &quot;/&quot; + username + &quot;/experiments/&quot; + experimentid + &quot;/&quot;);&#xD;
    folderexp1.mkdir();&#xD;
    ImagePlus imp = WindowManager.getCurrentImage();&#xD;
    imp.deleteRoi();&#xD;
    imp.setOverlay(null);&#xD;
    String pathimage = folderexp1 + &quot;/&quot; + imp.getTitle();&#xD;
    IJ.save(imp, pathimage);&#xD;
    //// Creation of the lanes to store them in the database&#xD;
    // Creation of the folder where the lanes will be saved.&#xD;
    File folderexplanes = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/GelJDBImages/&quot; + studyid + &quot;/&quot; + username + &quot;/experiments/&quot; + experimentid + &quot;/lanes/&quot;);&#xD;
    folderexplanes.mkdir();&#xD;
    // For each lane, we create a lanedb instance that is added to the database&#xD;
    laneid = lastLaneid();&#xD;
    updatelanesdb();&#xD;
    return e;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0yl5EWsBEei47fqiwvb5mw" name="createnewcomparison">
                <language>JAVA</language>
                <body>&#xD;
    Study s = getStudy(studyid);&#xD;
    java.util.Calendar cal = java.util.Calendar.getInstance();&#xD;
    java.util.Date utilDate = cal.getTime();&#xD;
    Date date = new Date(utilDate.getTime());&#xD;
    // We update the lanes information just in case&#xD;
    updatelanesdb();&#xD;
    //// Creation of the comparison&#xD;
    int compid = lastComparisonid();&#xD;
    String compname = &quot;Comparison-&quot; + compid;&#xD;
    Comparison c = new Comparison(compid, compname, date, simmethod, linkage, tol, &quot;&quot;, s);&#xD;
    insertComparison(c);&#xD;
    /// Adding the selected lanes to the comparison&#xD;
    for (int i = 0; i &lt; selectedlanesforcomparison.length; i++) {&#xD;
        if (selectedlanesforcomparison[i]) {&#xD;
            insertComparisonLane(compid, laneid + i);&#xD;
        }&#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0ymgIGsBEei47fqiwvb5mw" name="updatelanesdb">
                <language>JAVA</language>
                <body>&#xD;
    for (int i = 0; i &lt; finallanes.length; i++) {&#xD;
        if (firstcomparison) {&#xD;
            String label = finallanes[i].getName();&#xD;
            LaneInfo l = (LaneInfo) lanesinfo.get(label);&#xD;
            String strainnumber = &quot;&quot; + (i + 1);&#xD;
            if (!l.getStrainNumber().equals(&quot;&quot;)) {&#xD;
                strainnumber = l.getStrainNumber();&#xD;
            }&#xD;
            LaneDB lanedb = new LaneDB(laneid + i, l.getGenus(), l.getSpecies(), &quot;&quot; + strainnumber, l.getCountry(), &quot;&quot;, finallanes[i].isIsstandard(), &quot;&quot;, e);&#xD;
            insertLane(lanedb);&#xD;
        }&#xD;
        /// Create folder&#xD;
        String folderlanepath = System.getProperty(&quot;user.dir&quot;) + &quot;/GelJDBImages/&quot; + studyid + &quot;/&quot; + username + &quot;/experiments/&quot; + experimentid + &quot;/lanes/&quot; + (laneid + i) + &quot;/&quot;;&#xD;
        File folderlane = new File(folderlanepath);&#xD;
        folderlane.mkdir();&#xD;
        /// Add files to folder&#xD;
        // Saving the image&#xD;
        IJ.saveAsTiff(finallanes[i].getImp(), folderlanepath + (laneid + i) + &quot;.tiff&quot;);&#xD;
        // Saving the molecular weights&#xD;
        String lanemws = folderlanepath + (laneid + i) + &quot;.mw&quot;;&#xD;
        PrintWriter writermws = new PrintWriter(lanemws, &quot;UTF-8&quot;);&#xD;
        for (int j = 0; j &lt; finallanes[i].getStdpositionbands().length; j++) {&#xD;
            writermws.println(finallanes[i].getStdpositionbands()[j]);&#xD;
        }&#xD;
        writermws.close();&#xD;
        // Saving the band positions&#xD;
        String lanebands = folderlanepath + (laneid + i) + &quot;.bands&quot;;&#xD;
        PrintWriter writerbands = new PrintWriter(lanebands, &quot;UTF-8&quot;);&#xD;
        for (int j = 0; j &lt; finallanes[i].getPositionbands().length; j++) {&#xD;
            writerbands.println(finallanes[i].getPositionbands()[j]);&#xD;
        }&#xD;
        writerbands.close();&#xD;
        // Saving the curve&#xD;
        String lanecurve = folderlanepath + (laneid + i) + &quot;.curve&quot;;&#xD;
        PrintWriter writercurve = new PrintWriter(lanecurve, &quot;UTF-8&quot;);&#xD;
        for (int j = 0; j &lt; finallanes[i].getProfile().length; j++) {&#xD;
            writercurve.println(finallanes[i].getProfile()[j]);&#xD;
        }&#xD;
        writercurve.close();&#xD;
        writermws.close();&#xD;
        // Saving the band positions&#xD;
        String lanebands2 = folderlanepath + (laneid + i) + &quot;.bands2&quot;;&#xD;
        PrintWriter writerbands2 = new PrintWriter(lanebands2, &quot;UTF-8&quot;);&#xD;
        for (int j = 0; j &lt; finallanes[i].getPositionbands2().length; j++) {&#xD;
            writerbands2.println(finallanes[i].getPositionbands2()[j]);&#xD;
        }&#xD;
        writerbands2.close();&#xD;
        RoiEncoder.save(finallanes[i].getRoi(), folderlanepath + (laneid + i) + &quot;.roi&quot;);&#xD;
    // Saving the roi&#xD;
    //            String laneroi = folderlanepath + (laneid + i) + &quot;.roi&quot;;&#xD;
    //            PrintWriter writerroi = new PrintWriter(laneroi, &quot;UTF-8&quot;);&#xD;
    //            &#xD;
    //            Roi p = finallanes[i].getRoi();          &#xD;
    //            for (int j = 0; j &lt; finallanes[i].getRoi().getPolygon().npoints; j++) {&#xD;
    //                writerroi.println(finallanes[i].getRoi().getPolygon().xpoints[j] + &quot;,&quot; + &#xD;
    //                        finallanes[i].getRoi().getPolygon().ypoints[j]);&#xD;
    //            }&#xD;
    //            writerroi.close();&#xD;
    //            &#xD;
    }&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0yoVUGsBEei47fqiwvb5mw" name="updatelanedb">
                <language>JAVA</language>
                <body>&#xD;
    Lane[] newlanes = new Lane[markers.length + 1];&#xD;
    System.arraycopy(markers, 0, newlanes, 0, markers.length);&#xD;
    newlanes[markers.length] = finallanes[0];&#xD;
    computestdlane(finallanes[0], marker, invertcolour);&#xD;
    /// Create folder&#xD;
    String folderlanepath = System.getProperty(&quot;user.dir&quot;) + &quot;/GelJDBImages/&quot; + studyid + &quot;/&quot; + username + &quot;/experiments/&quot; + experimentid + &quot;/lanes/&quot; + id + &quot;/&quot;;&#xD;
    /// Add files to folder&#xD;
    // Saving the molecular weights&#xD;
    String lanemws = folderlanepath + id + &quot;.mw&quot;;&#xD;
    PrintWriter writermws = new PrintWriter(lanemws, &quot;UTF-8&quot;);&#xD;
    for (int j = 0; j &lt; finallanes[0].getStdpositionbands().length; j++) {&#xD;
        writermws.println(finallanes[0].getStdpositionbands()[j]);&#xD;
    }&#xD;
    writermws.close();&#xD;
    // Saving the band positions&#xD;
    String lanebands = folderlanepath + id + &quot;.bands&quot;;&#xD;
    PrintWriter writerbands = new PrintWriter(lanebands, &quot;UTF-8&quot;);&#xD;
    for (int j = 0; j &lt; finallanes[0].getPositionbands().length; j++) {&#xD;
        writerbands.println(finallanes[0].getPositionbands()[j]);&#xD;
    }&#xD;
    writerbands.close();&#xD;
    // Saving the band positions&#xD;
    String lanebands2 = folderlanepath + id + &quot;.bands2&quot;;&#xD;
    PrintWriter writerbands2 = new PrintWriter(lanebands2, &quot;UTF-8&quot;);&#xD;
    for (int j = 0; j &lt; finallanes[0].getPositionbands2().length; j++) {&#xD;
        writerbands2.println(finallanes[0].getPositionbands2()[j]);&#xD;
    }&#xD;
    writerbands2.close();&#xD;
    // Saving the curve&#xD;
    String lanecurve = folderlanepath + id + &quot;.curve&quot;;&#xD;
    PrintWriter writercurve = new PrintWriter(lanecurve, &quot;UTF-8&quot;);&#xD;
    for (int j = 0; j &lt; finallanes[0].getProfile().length; j++) {&#xD;
        writercurve.println(finallanes[0].getProfile()[j]);&#xD;
    }&#xD;
    writercurve.close();&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0yo8YGsBEei47fqiwvb5mw" name="bandmanagerfunctionality">
                <language>JAVA</language>
                <body>&#xD;
    if (finallanes == null || finallanes.length == 0) {&#xD;
        IJ.error(&quot;As a first step, you must detect the lanes of the image&quot;);&#xD;
    } else {&#xD;
        IJ.setTool(&quot;point&quot;);&#xD;
        bm = new BandManager(this, true);&#xD;
        ImagePlus imp = WindowManager.getCurrentImage();&#xD;
        BandManagerCanvas cc = new BandManagerCanvas(imp);&#xD;
        ImageWindow imageWindow = new ImageWindow(imp, cc);&#xD;
        if (finallanes != null) {&#xD;
            for (int i = 0; i &lt; finallanes.length; i++) {&#xD;
                int[] positionbands = finallanes[i].getPositionbands();&#xD;
                if (positionbands != null) {&#xD;
                    for (int b : positionbands) {&#xD;
                        Roi r0 = finallanes[i].getRoi();&#xD;
                        int r0x = r0.getBounds().x;&#xD;
                        int r0y = r0.getBounds().y;&#xD;
                        int w = r0.getBounds().width;&#xD;
                        Rectangle r = new Rectangle(r0x, r0y + b, w, 2);&#xD;
                        Roi r1 = rectangleintersectionroi(r0, r);&#xD;
                        r1.setFillColor(colour);&#xD;
                        bm.add(imp, r1, 0, i);&#xD;
                        bm.showAll(0);&#xD;
                    }&#xD;
                }&#xD;
            }&#xD;
        }&#xD;
        bm.requestFocus();&#xD;
    /*if (bands!=null){
             for (Band band : bands) {
             bm.add(imp,band.getRoi(),0,band.getLane());
             bm.showAll(0);
             }   
             }*/&#xD;
    }&#xD;
    return bm;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0ypjcWsBEei47fqiwvb5mw" name="setLm">
                <language>JAVA</language>
                <body>&#xD;
    this.lm = lm;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0yqKgGsBEei47fqiwvb5mw" name="getLanesinfo">
                <language>JAVA</language>
                <body>&#xD;
    return lanesinfo;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0yqxkGsBEei47fqiwvb5mw" name="setLanesinfo">
                <language>JAVA</language>
                <body>&#xD;
    this.lanesinfo = lanesinfo;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0yrYoGsBEei47fqiwvb5mw" name="getMarkername">
                <language>JAVA</language>
                <body>&#xD;
    return marker;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0yrYomsBEei47fqiwvb5mw" name="savestandardadditionalinfo">
                <language>JAVA</language>
                <body>&#xD;
    int[] indexes = indexesstandardlanes(finallanes);&#xD;
    double[] info = { 28, 289, 9 };&#xD;
    String workingfile2 = System.getProperty(&quot;user.dir&quot;) + &quot;/standardfiles/info/&quot; + marker + &quot;.info&quot;;&#xD;
    PrintWriter writer2 = new PrintWriter(workingfile2, &quot;UTF-8&quot;);&#xD;
    writer2.println(finallanes[indexes[0]].getImp().getWidth());&#xD;
    writer2.println(finallanes[indexes[0]].getImp().getHeight());&#xD;
    writer2.println(calibrationmethod);&#xD;
    writer2.close();&#xD;
    int[] pos = finallanes[indexes[0]].getPositionbands();&#xD;
    workingfile2 = System.getProperty(&quot;user.dir&quot;) + &quot;/standardfiles/info/&quot; + marker + &quot;.pos&quot;;&#xD;
    writer2 = new PrintWriter(workingfile2, &quot;UTF-8&quot;);&#xD;
    for (int i = 0; i &lt; pos.length; i++) {&#xD;
        writer2.println(pos[i]);&#xD;
    }&#xD;
    writer2.close();&#xD;
</body>
              </ownedBehavior>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_W_GTsGlXEeiklvJUJNd-Aw" name="Menu" visibility="public" method="_0xyAwGsBEei47fqiwvb5mw"/>
            </packagedElement>
          </packagedElement>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_L2Ud4GlWEeiklvJUJNd-Aw" name="db">
        <packagedElement xmi:type="uml:Package" xmi:id="_oEUVQGp1Eei47fqiwvb5mw" name="Classes">
          <packagedElement xmi:type="uml:Class" xmi:id="_h_DKQGrwEei47fqiwvb5mw" name="Experiment" visibility="public">
            <ownedAttribute xmi:type="uml:Property" xmi:id="_h_DxUGrwEei47fqiwvb5mw" name="id" visibility="private" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_h_EYYGrwEei47fqiwvb5mw" name="name" visibility="private" type="_bAF4sGWNEei0cbjpkrd07g" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_h_FmgWrwEei47fqiwvb5mw" name="date" visibility="private" type="_h_EYYmrwEei47fqiwvb5mw" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_h_FmgmrwEei47fqiwvb5mw" name="imagename" visibility="private" type="_bAF4sGWNEei0cbjpkrd07g" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_h_GNkGrwEei47fqiwvb5mw" name="comments" visibility="private" type="_bAF4sGWNEei0cbjpkrd07g" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_h_GNkWrwEei47fqiwvb5mw" name="study" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_h_HbsWrwEei47fqiwvb5mw" name="user" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_h_Ip0WrwEei47fqiwvb5mw" name="marker" visibility="private" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_h_Ip0mrwEei47fqiwvb5mw" name="calibrationMethod" visibility="private" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_h_MUMWrwEei47fqiwvb5mw" name="Experiment" specification="_h_JQ4GrwEei47fqiwvb5mw">
              <language>JAVA</language>
              <body>&#xD;
    this.id = id;&#xD;
    this.name = name;&#xD;
    this.date = date;&#xD;
    this.imagename = imagename;&#xD;
    this.calibrationMethod = calibrationMethod;&#xD;
    this.comments = comments;&#xD;
    this.study = study;&#xD;
    this.user = user;&#xD;
    this.marker = marker;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_h_M7QGrwEei47fqiwvb5mw" name="getId">
              <language>JAVA</language>
              <body>&#xD;
    return id;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_h_M7Q2rwEei47fqiwvb5mw" name="setId">
              <language>JAVA</language>
              <body>&#xD;
    this.id = id;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_h_NiUWrwEei47fqiwvb5mw" name="getName">
              <language>JAVA</language>
              <body>&#xD;
    return name;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_h_NiVGrwEei47fqiwvb5mw" name="setName">
              <language>JAVA</language>
              <body>&#xD;
    this.name = name;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_h_OJYmrwEei47fqiwvb5mw" name="getDate">
              <language>JAVA</language>
              <body>&#xD;
    return date;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_h_OwcGrwEei47fqiwvb5mw" name="setDate">
              <language>JAVA</language>
              <body>&#xD;
    this.date = date;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_h_Owc2rwEei47fqiwvb5mw" name="getImagename">
              <language>JAVA</language>
              <body>&#xD;
    return imagename;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_h_PXgWrwEei47fqiwvb5mw" name="setImagename">
              <language>JAVA</language>
              <body>&#xD;
    this.imagename = imagename;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_h_PXhGrwEei47fqiwvb5mw" name="getComments">
              <language>JAVA</language>
              <body>&#xD;
    return comments;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_h_P-kWrwEei47fqiwvb5mw" name="setComments">
              <language>JAVA</language>
              <body>&#xD;
    this.comments = comments;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_h_P-lGrwEei47fqiwvb5mw" name="getStudy">
              <language>JAVA</language>
              <body>&#xD;
    return study;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_h_QlomrwEei47fqiwvb5mw" name="setStudy">
              <language>JAVA</language>
              <body>&#xD;
    this.study = study;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_h_RMsGrwEei47fqiwvb5mw" name="getUser">
              <language>JAVA</language>
              <body>&#xD;
    return user;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_h_RMs2rwEei47fqiwvb5mw" name="setUser">
              <language>JAVA</language>
              <body>&#xD;
    this.user = user;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_h_RzwWrwEei47fqiwvb5mw" name="getMarker">
              <language>JAVA</language>
              <body>&#xD;
    return marker;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_h_RzxGrwEei47fqiwvb5mw" name="setMarker">
              <language>JAVA</language>
              <body>&#xD;
    this.marker = marker;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_h_Sa0mrwEei47fqiwvb5mw" name="toString">
              <language>JAVA</language>
              <body>&#xD;
    return name;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_h_TB4GrwEei47fqiwvb5mw" name="printInfo">
              <language>JAVA</language>
              <body>&#xD;
    String res = &quot;&lt;html>Experiment &quot; + name + &quot;:&lt;br>&quot;;&#xD;
    res = res + &quot;   author: &quot; + user.getName() + &quot; &quot; + user.getSurname() + &quot;&lt;br>&quot;;&#xD;
    res = res + &quot;   date: &quot; + date + &quot;&lt;br>&quot;;&#xD;
    res = res + &quot;   image: &quot; + imagename + &quot;&lt;br>&quot;;&#xD;
    if (comments != null) {&#xD;
        res = res + &quot;   Comments: &quot; + comments + &quot;&lt;/html>&quot;;&#xD;
    }&#xD;
    return res;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_h_TB42rwEei47fqiwvb5mw" name="getCalibrationMethod">
              <language>JAVA</language>
              <body>&#xD;
    return calibrationMethod;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_h_To8WrwEei47fqiwvb5mw" name="setCalibrationMethod">
              <language>JAVA</language>
              <body>&#xD;
    this.calibrationMethod = calibrationMethod;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_h_UQA2rwEei47fqiwvb5mw" name="allwithsamemarker">
              <language>JAVA</language>
              <body>&#xD;
    for (int i = 0; i &lt; exps.size(); i++) {&#xD;
        if (exps.get(i).getMarker().getId() != exps.get(0).getMarker().getId()) {&#xD;
            return false;&#xD;
        }&#xD;
    }&#xD;
    return true;&#xD;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_h_JQ4GrwEei47fqiwvb5mw" name="Experiment" visibility="public" method="_h_MUMWrwEei47fqiwvb5mw">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_h_KfAGrwEei47fqiwvb5mw" name="id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_h_KfAWrwEei47fqiwvb5mw" name="name" type="_bAF4sGWNEei0cbjpkrd07g"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_h_LGEGrwEei47fqiwvb5mw" name="date" type="_h_EYYmrwEei47fqiwvb5mw"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_h_LGEWrwEei47fqiwvb5mw" name="imagename" type="_bAF4sGWNEei0cbjpkrd07g"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_h_LGEmrwEei47fqiwvb5mw" name="calibrationMethod">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_h_LGE2rwEei47fqiwvb5mw" name="comments" type="_bAF4sGWNEei0cbjpkrd07g"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_h_LtIGrwEei47fqiwvb5mw" name="study"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_h_LtIWrwEei47fqiwvb5mw" name="marker"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_h_MUMGrwEei47fqiwvb5mw" name="user"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_rnZh4HXjEeiR-eKc-5ByRA" name="setName">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_5CLsAHXjEeiR-eKc-5ByRA" name="name" type="_bAF4sGWNEei0cbjpkrd07g"/>
            </ownedOperation>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_DA42oG4qEei47fqiwvb5mw" name="Interface">
          <packagedElement xmi:type="uml:Class" xmi:id="_DBAycG4qEei47fqiwvb5mw" name="Main" visibility="public">
            <generalization xmi:type="uml:Generalization" xmi:id="_DBCnoG4qEei47fqiwvb5mw" general="_a0hh4GWNEei0cbjpkrd07g"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DBGSAW4qEei47fqiwvb5mw" name="studyid" visibility="public" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DBGSAm4qEei47fqiwvb5mw" name="userid" visibility="public" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DBIHMW4qEei47fqiwvb5mw" name="experiments" visibility="private" type="_h_DKQGrwEei47fqiwvb5mw" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_DBIuQG4qEei47fqiwvb5mw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DBIuQW4qEei47fqiwvb5mw" value="*"/>
              <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_DBIuQm4qEei47fqiwvb5mw" name="defaultValue">
                <language>JAVA</language>
                <body>new ArrayList&lt;>()</body>
              </defaultValue>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DBKjcW4qEei47fqiwvb5mw" name="comparisons" visibility="private" type="_MByHAGlWEeiklvJUJNd-Aw" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_DBKjcm4qEei47fqiwvb5mw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DBKjc24qEei47fqiwvb5mw" value="*"/>
              <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_DBKjdG4qEei47fqiwvb5mw" name="defaultValue">
                <language>JAVA</language>
                <body>new ArrayList&lt;>()</body>
              </defaultValue>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DBMYoW4qEei47fqiwvb5mw" name="lanes" visibility="private" type="_L6o9MGlWEeiklvJUJNd-Aw" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_DBM_sG4qEei47fqiwvb5mw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DBM_sW4qEei47fqiwvb5mw" value="*"/>
              <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_DBM_sm4qEei47fqiwvb5mw" name="defaultValue">
                <language>JAVA</language>
                <body>new ArrayList&lt;>()</body>
              </defaultValue>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DBM_s24qEei47fqiwvb5mw" name="templanes" visibility="private" type="_L6o9MGlWEeiklvJUJNd-Aw" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_DBM_tG4qEei47fqiwvb5mw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DBNmwG4qEei47fqiwvb5mw" value="*"/>
              <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_DBNmwW4qEei47fqiwvb5mw" name="defaultValue">
                <language>JAVA</language>
                <body>new ArrayList&lt;>()</body>
              </defaultValue>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DBPb8G4qEei47fqiwvb5mw" name="additionalfields" visibility="private" type="_bAF4sGWNEei0cbjpkrd07g" isUnique="false">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_DBPb8W4qEei47fqiwvb5mw"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DBPb8m4qEei47fqiwvb5mw" value="*"/>
              <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_DBPb824qEei47fqiwvb5mw" name="defaultValue">
                <language>JAVA</language>
                <body>new ArrayList&lt;>()</body>
              </defaultValue>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DBPb9G4qEei47fqiwvb5mw" name="firsttime" visibility="private" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_DBQDAG4qEei47fqiwvb5mw" name="defaultValue">
                <language>JAVA</language>
                <body>true</body>
              </defaultValue>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DBRRIW4qEei47fqiwvb5mw" name="rootNode" visibility="private" type="_MIImoGlWEeiklvJUJNd-Aw" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DBTGUW4qEei47fqiwvb5mw" name="treeModel" visibility="private" type="_MINfIGlWEeiklvJUJNd-Aw" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DBTtYG4qEei47fqiwvb5mw" name="rootNodeComp" visibility="private" type="_MIImoGlWEeiklvJUJNd-Aw" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DBTtYW4qEei47fqiwvb5mw" name="treeModelComp" visibility="private" type="_MINfIGlWEeiklvJUJNd-Aw" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DBVikW4qEei47fqiwvb5mw" name="ij" visibility="private" type="_MIX3MGlWEeiklvJUJNd-Aw" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DBWJoG4qEei47fqiwvb5mw" name="twiceinarow" visibility="private" isUnique="false">
              <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
              <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_DBWJoW4qEei47fqiwvb5mw" name="defaultValue">
                <language>JAVA</language>
                <body>false</body>
              </defaultValue>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DCv30W4qEei47fqiwvb5mw" name="jAnnotateItem" visibility="private" type="_MNr1AGlWEeiklvJUJNd-Aw" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DCxtAW4qEei47fqiwvb5mw" name="jButton1" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DCyUEG4qEei47fqiwvb5mw" name="jButton2" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DCyUEW4qEei47fqiwvb5mw" name="jMItransform" visibility="private" type="_MNr1AGlWEeiklvJUJNd-Aw" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DC0JQG4qEei47fqiwvb5mw" name="jMenu1" visibility="private" type="_MNzJwGlWEeiklvJUJNd-Aw" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DC0JQW4qEei47fqiwvb5mw" name="jMenu2" visibility="private" type="_MNzJwGlWEeiklvJUJNd-Aw" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DC0wUG4qEei47fqiwvb5mw" name="jMenu3" visibility="private" type="_MNzJwGlWEeiklvJUJNd-Aw" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DC0wUW4qEei47fqiwvb5mw" name="jMenu4" visibility="private" type="_MNzJwGlWEeiklvJUJNd-Aw" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DC0wUm4qEei47fqiwvb5mw" name="jMenu5" visibility="private" type="_MNzJwGlWEeiklvJUJNd-Aw" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DC2lgW4qEei47fqiwvb5mw" name="jMenuBar1" visibility="private" type="_MN6egGlWEeiklvJUJNd-Aw" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DC3MkG4qEei47fqiwvb5mw" name="jMenuGenetic" visibility="private" type="_MNzJwGlWEeiklvJUJNd-Aw" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DC3MkW4qEei47fqiwvb5mw" name="jMenuItem1" visibility="private" type="_MNr1AGlWEeiklvJUJNd-Aw" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DC3Mkm4qEei47fqiwvb5mw" name="jMenuItem2" visibility="private" type="_MNr1AGlWEeiklvJUJNd-Aw" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DC3zoG4qEei47fqiwvb5mw" name="jMenuItem5" visibility="private" type="_MNr1AGlWEeiklvJUJNd-Aw" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DC3zoW4qEei47fqiwvb5mw" name="jMenuItem6" visibility="private" type="_MNr1AGlWEeiklvJUJNd-Aw" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DC3zom4qEei47fqiwvb5mw" name="jMenuItem7" visibility="private" type="_MNr1AGlWEeiklvJUJNd-Aw" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DC4asG4qEei47fqiwvb5mw" name="jMenuItem8" visibility="private" type="_MNr1AGlWEeiklvJUJNd-Aw" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DC4asW4qEei47fqiwvb5mw" name="jMenuMemory" visibility="private" type="_MNr1AGlWEeiklvJUJNd-Aw" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DC5o0W4qEei47fqiwvb5mw" name="jPanel1" visibility="private" type="_a8yGAGWNEei0cbjpkrd07g" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DC6P4G4qEei47fqiwvb5mw" name="jPanel2" visibility="private" type="_a8yGAGWNEei0cbjpkrd07g" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DC6P4W4qEei47fqiwvb5mw" name="jPanel3" visibility="private" type="_a8yGAGWNEei0cbjpkrd07g" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DC6P4m4qEei47fqiwvb5mw" name="jPanel5" visibility="private" type="_a8yGAGWNEei0cbjpkrd07g" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DC628G4qEei47fqiwvb5mw" name="jSave" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DC8FEW4qEei47fqiwvb5mw" name="jScrollPane1" visibility="private" type="_a9Dy0GWNEei0cbjpkrd07g" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DC8sIG4qEei47fqiwvb5mw" name="jScrollPane2" visibility="private" type="_a9Dy0GWNEei0cbjpkrd07g" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DC8sIW4qEei47fqiwvb5mw" name="jScrollPane3" visibility="private" type="_a9Dy0GWNEei0cbjpkrd07g" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DC9TMG4qEei47fqiwvb5mw" name="jScrollPane4" visibility="private" type="_a9Dy0GWNEei0cbjpkrd07g" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DC_IYW4qEei47fqiwvb5mw" name="jSeparator1" visibility="private" type="_MAK9cGlWEeiklvJUJNd-Aw" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DC_vcG4qEei47fqiwvb5mw" name="jSeparator2" visibility="private" type="_MAK9cGlWEeiklvJUJNd-Aw" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DC_vcW4qEei47fqiwvb5mw" name="jSeparator3" visibility="private" type="_MAK9cGlWEeiklvJUJNd-Aw" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DDBkoW4qEei47fqiwvb5mw" name="jSeparator4" visibility="private" type="_MOS5AGlWEeiklvJUJNd-Aw" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DDCLsG4qEei47fqiwvb5mw" name="jSeparator5" visibility="private" type="_MOS5AGlWEeiklvJUJNd-Aw" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DDCLsW4qEei47fqiwvb5mw" name="jSeparator6" visibility="private" type="_MAK9cGlWEeiklvJUJNd-Aw" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DDCywG4qEei47fqiwvb5mw" name="jSeparator7" visibility="private" type="_MOS5AGlWEeiklvJUJNd-Aw" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DDEn8W4qEei47fqiwvb5mw" name="jToolBar1" visibility="private" type="_a9M8wGWNEei0cbjpkrd07g" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DDFPAG4qEei47fqiwvb5mw" name="jToolBar2" visibility="private" type="_a9M8wGWNEei0cbjpkrd07g" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DDF2EG4qEei47fqiwvb5mw" name="jToolBar3" visibility="private" type="_a9M8wGWNEei0cbjpkrd07g" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DDF2EW4qEei47fqiwvb5mw" name="jToolBar5" visibility="private" type="_a9M8wGWNEei0cbjpkrd07g" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DDI5YG4qEei47fqiwvb5mw" name="jXImageView2" visibility="private" type="_MOdREGlWEeiklvJUJNd-Aw" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DDI5YW4qEei47fqiwvb5mw" name="jbAddField" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DDJgcG4qEei47fqiwvb5mw" name="jbAdvancedSearchLanes" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DDJgcW4qEei47fqiwvb5mw" name="jbDeleteExp" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DDKHgG4qEei47fqiwvb5mw" name="jbDeleteLane" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DDKHgW4qEei47fqiwvb5mw" name="jbDuplicateComp" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DDKukG4qEei47fqiwvb5mw" name="jbDuplicateExp" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DDLVoG4qEei47fqiwvb5mw" name="jbEditlane" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DDLVoW4qEei47fqiwvb5mw" name="jbExportNewick" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DDL8sG4qEei47fqiwvb5mw" name="jbFindSimilarLanes" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DDL8sW4qEei47fqiwvb5mw" name="jbImport" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DDL8sm4qEei47fqiwvb5mw" name="jbNewComp" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DDMjwG4qEei47fqiwvb5mw" name="jbNewExp" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DDMjwW4qEei47fqiwvb5mw" name="jbSearchComp" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DDNK0G4qEei47fqiwvb5mw" name="jbSearchExp" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DDNK0W4qEei47fqiwvb5mw" name="jbShowMW" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DDNK0m4qEei47fqiwvb5mw" name="jbSimMatrix" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DDNx4G4qEei47fqiwvb5mw" name="jbViewComp" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DDNx4W4qEei47fqiwvb5mw" name="jbdeletecomp" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DDNx4m4qEei47fqiwvb5mw" name="jbdeletefield" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DDOY8G4qEei47fqiwvb5mw" name="jbeditexpcomp" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DDOY8W4qEei47fqiwvb5mw" name="jbexport" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DDOY8m4qEei47fqiwvb5mw" name="jbimportexpfile" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DDPAAG4qEei47fqiwvb5mw" name="jbmodifycomp" visibility="private" type="_a758QGWNEei0cbjpkrd07g" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DDPAAW4qEei47fqiwvb5mw" name="jmMarkers" visibility="private" type="_MNzJwGlWEeiklvJUJNd-Aw" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DDPAAm4qEei47fqiwvb5mw" name="jmOpenStudy" visibility="private" type="_MNr1AGlWEeiklvJUJNd-Aw" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DDPnEG4qEei47fqiwvb5mw" name="jmannotate" visibility="private" type="_MNzJwGlWEeiklvJUJNd-Aw" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DDPnEW4qEei47fqiwvb5mw" name="jmiAddPopulationField" visibility="private" type="_MNr1AGlWEeiklvJUJNd-Aw" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DDQOIG4qEei47fqiwvb5mw" name="jmiCloseStudy" visibility="private" type="_MNr1AGlWEeiklvJUJNd-Aw" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DDQOIW4qEei47fqiwvb5mw" name="jmiDeleteStudy" visibility="private" type="_MNr1AGlWEeiklvJUJNd-Aw" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DDQOIm4qEei47fqiwvb5mw" name="jmiEditStudy" visibility="private" type="_MNr1AGlWEeiklvJUJNd-Aw" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DDQ1MG4qEei47fqiwvb5mw" name="jmiExit" visibility="private" type="_MNr1AGlWEeiklvJUJNd-Aw" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DDQ1MW4qEei47fqiwvb5mw" name="jmiExportGenetics" visibility="private" type="_MNr1AGlWEeiklvJUJNd-Aw" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DDRcQG4qEei47fqiwvb5mw" name="jmiNewStudy" visibility="private" type="_MNr1AGlWEeiklvJUJNd-Aw" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DDRcQW4qEei47fqiwvb5mw" name="jmiUnfinished" visibility="private" type="_MNr1AGlWEeiklvJUJNd-Aw" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DDSDUG4qEei47fqiwvb5mw" name="jmiaddmarker" visibility="private" type="_MNr1AGlWEeiklvJUJNd-Aw" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DDT4gW4qEei47fqiwvb5mw" name="jsMainPane" visibility="private" type="_MPADoGlWEeiklvJUJNd-Aw" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DDUfkG4qEei47fqiwvb5mw" name="jspLeftPane" visibility="private" type="_MPADoGlWEeiklvJUJNd-Aw" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DDUfkW4qEei47fqiwvb5mw" name="jspRightPane" visibility="private" type="_MPADoGlWEeiklvJUJNd-Aw" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DDWUwW4qEei47fqiwvb5mw" name="jtComparisons" visibility="private" type="_MPE8IGlWEeiklvJUJNd-Aw" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DDWUwm4qEei47fqiwvb5mw" name="jtExperiments" visibility="private" type="_MPE8IGlWEeiklvJUJNd-Aw" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DDYJ8W4qEei47fqiwvb5mw" name="jtLanes" visibility="private" type="_L8glcGlWEeiklvJUJNd-Aw" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_DDZ_IW4qEei47fqiwvb5mw" name="jxsearchlane" visibility="private" type="_MPJ0oGlWEeiklvJUJNd-Aw" isUnique="false"/>
            <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_DBEc0G4qEei47fqiwvb5mw" name="Main implements TreeSelectionListener" client="_DBAycG4qEei47fqiwvb5mw" supplier="_MHhioGlWEeiklvJUJNd-Aw" contract="_MHhioGlWEeiklvJUJNd-Aw"/>
            <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_DBGSAG4qEei47fqiwvb5mw" name="Main implements TableModelListener" client="_DBAycG4qEei47fqiwvb5mw" supplier="_L_Q-gGlWEeiklvJUJNd-Aw" contract="_L_Q-gGlWEeiklvJUJNd-Aw"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DBYl4W4qEei47fqiwvb5mw" name="Main">
              <language>JAVA</language>
              <body>&#xD;
    initComponents();&#xD;
    jsMainPane.setDividerLocation(0.3);&#xD;
    jspLeftPane.setDividerLocation(0.7);&#xD;
    jspRightPane.setDividerLocation(1.0);&#xD;
    //        initialiseexperimentstree();&#xD;
    //        initialisecomparisonstree();&#xD;
    //        this.studyid = studyid;       &#xD;
    //        updateexperiments(true);&#xD;
    //        updatecomparisons(true);&#xD;
    //        updatelanes(true);&#xD;
    this.userid = userid;&#xD;
    ArrayList&lt;Study> studies = getStudies(userid);&#xD;
    if (studies.isEmpty()) {&#xD;
        jmOpenStudy.setEnabled(false);&#xD;
    //            jMenu3.setEnabled(false);&#xD;
    }&#xD;
    this.setExtendedState(JFrame.MAXIMIZED_BOTH);&#xD;
    activateemptytoolbar();&#xD;
    loadPopulationGeneticsPlugins();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DBZM8G4qEei47fqiwvb5mw" name="initialiseexperimentstree">
              <language>JAVA</language>
              <body>&#xD;
    rootNode = new DefaultMutableTreeNode(&quot;Experiments&quot;);&#xD;
    treeModel = new DefaultTreeModel(rootNode);&#xD;
    treeModel.addTreeModelListener(new MyTreeModelListener());&#xD;
    jtExperiments.setModel(treeModel);&#xD;
    jtExperiments.setEditable(true);&#xD;
    jtExperiments.getSelectionModel().setSelectionMode(TreeSelectionModel.SINGLE_TREE_SELECTION);&#xD;
    jtExperiments.addTreeSelectionListener(this);&#xD;
    jtExperiments.setShowsRootHandles(true);&#xD;
    jtExperiments.setRootVisible(true);&#xD;
    jtExperiments.setCellRenderer(new ExperimentsRenderer());&#xD;
    ToolTipManager.sharedInstance().registerComponent(jtExperiments);&#xD;
// Mouse moved&#xD;
//        jtExperiments.addMouseMotionListener(new MouseMotionAdapter() {&#xD;
//            public void mouseMoved(MouseEvent e) {&#xD;
//                int x = (int) e.getPoint().getX();&#xD;
//                int y = (int) e.getPoint().getY();&#xD;
//                TreePath path = jtExperiments.getPathForLocation(x, y);&#xD;
//                Rectangle pathBounds = jtExperiments.getUI().getPathBounds(jtExperiments, path);&#xD;
//                if (pathBounds != null &amp;&amp; pathBounds.contains(e.getX(), e.getY())) {&#xD;
//                    JPopupMenu menu = new JPopupMenu();&#xD;
//                    DefaultMutableTreeNode node = (DefaultMutableTreeNode) path.getLastPathComponent();&#xD;
//                    Experiment experiment = (Experiment) node.getUserObject();&#xD;
//                    JTextArea jt = new JTextArea(experiment.printInfo());&#xD;
//                    jt.setEditable(false);&#xD;
//                    menu.add(jt);&#xD;
//                    menu.show(jtExperiments, pathBounds.x, pathBounds.y + pathBounds.height);&#xD;
//                }&#xD;
//            }&#xD;
//&#xD;
//        });&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DBZM8m4qEei47fqiwvb5mw" name="initialisecomparisonstree">
              <language>JAVA</language>
              <body>&#xD;
    rootNodeComp = new DefaultMutableTreeNode(&quot;Comparisons&quot;);&#xD;
    treeModelComp = new DefaultTreeModel(rootNodeComp);&#xD;
    treeModelComp.addTreeModelListener(new MyTreeModelListener());&#xD;
    jtComparisons.setModel(treeModelComp);&#xD;
    jtComparisons.setEditable(true);&#xD;
    jtComparisons.getSelectionModel().setSelectionMode(TreeSelectionModel.SINGLE_TREE_SELECTION);&#xD;
    jtComparisons.addTreeSelectionListener(this);&#xD;
    jtComparisons.setShowsRootHandles(true);&#xD;
    jtComparisons.setRootVisible(true);&#xD;
    jtComparisons.setCellRenderer(new ComparisonRenderer());&#xD;
    ToolTipManager.sharedInstance().registerComponent(jtComparisons);&#xD;
//        jtComparisons.addMouseMotionListener(new MouseMotionAdapter() {&#xD;
//            public void mouseMoved(MouseEvent e) {&#xD;
//                int x = (int) e.getPoint().getX();&#xD;
//                int y = (int) e.getPoint().getY();&#xD;
//                TreePath path = jtComparisons.getPathForLocation(x, y);&#xD;
//                Rectangle pathBounds = jtComparisons.getUI().getPathBounds(jtComparisons, path);&#xD;
//                if (pathBounds != null &amp;&amp; pathBounds.contains(e.getX(), e.getY())) {&#xD;
//                    JPopupMenu menu = new JPopupMenu();&#xD;
//                    DefaultMutableTreeNode node = (DefaultMutableTreeNode) path.getLastPathComponent();&#xD;
//                    Comparison comp = (Comparison) node.getUserObject();&#xD;
//                    JTextArea jt = new JTextArea(comp.printInfo());&#xD;
//                    jt.setEditable(false);&#xD;
//                    menu.add(jt);&#xD;
//                    menu.show(jtComparisons, pathBounds.x, pathBounds.y + pathBounds.height);&#xD;
//                }&#xD;
//            }&#xD;
//&#xD;
//        });&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DBc3UG4qEei47fqiwvb5mw" name="addExperiment">
              <language>JAVA</language>
              <body>&#xD;
    DefaultMutableTreeNode childNode = new DefaultMutableTreeNode(child);&#xD;
    if (parent == null) {&#xD;
        parent = rootNode;&#xD;
    }&#xD;
    //It is key to invoke this on the TreeModel, and NOT DefaultMutableTreeNode&#xD;
    treeModel.insertNodeInto(childNode, parent, parent.getChildCount());&#xD;
    //Make sure the user can see the lovely new node.&#xD;
    if (shouldBeVisible) {&#xD;
        jtExperiments.scrollPathToVisible(new TreePath(childNode.getPath()));&#xD;
    }&#xD;
    return childNode;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DBeFcG4qEei47fqiwvb5mw" name="addComparison">
              <language>JAVA</language>
              <body>&#xD;
    DefaultMutableTreeNode childNode = new DefaultMutableTreeNode(child);&#xD;
    if (parent == null) {&#xD;
        parent = rootNodeComp;&#xD;
    }&#xD;
    //It is key to invoke this on the TreeModel, and NOT DefaultMutableTreeNode&#xD;
    treeModelComp.insertNodeInto(childNode, parent, parent.getChildCount());&#xD;
    //Make sure the user can see the lovely new node.&#xD;
    if (shouldBeVisible) {&#xD;
        jtComparisons.scrollPathToVisible(new TreePath(childNode.getPath()));&#xD;
    }&#xD;
    return childNode;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DBesgW4qEei47fqiwvb5mw" name="updateexperiments">
              <language>JAVA</language>
              <body>&#xD;
    if (all) {&#xD;
        experiments = getExperiments(studyid);&#xD;
        clearExp();&#xD;
    }&#xD;
    if (experiments.isEmpty()) {&#xD;
        jtExperiments.setRootVisible(false);&#xD;
        disablenoexperiment();&#xD;
    } else {&#xD;
        jtExperiments.setRootVisible(true);&#xD;
    }&#xD;
    for (Experiment e : experiments) {&#xD;
        addExperiment(rootNode, e, true);&#xD;
    }&#xD;
    if (clean) {&#xD;
        cleanlanes();&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DBfTkW4qEei47fqiwvb5mw" name="updatecomparisons">
              <language>JAVA</language>
              <body>&#xD;
    if (all) {&#xD;
        comparisons = getComparisons(studyid);&#xD;
        clearComp();&#xD;
    }&#xD;
    if (comparisons.isEmpty()) {&#xD;
        jtComparisons.setRootVisible(false);&#xD;
        if (!experiments.isEmpty()) {&#xD;
            disablenocomparison();&#xD;
        } else {&#xD;
            disablenoexperiment();&#xD;
        }&#xD;
    } else {&#xD;
        jtComparisons.setRootVisible(true);&#xD;
    }&#xD;
    for (Comparison c : comparisons) {&#xD;
        addComparison(rootNodeComp, c, true);&#xD;
    }&#xD;
    if (clean) {&#xD;
        cleanlanes();&#xD;
        activateemptytoolbar();&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DBfTk24qEei47fqiwvb5mw" name="clearComp">
              <language>JAVA</language>
              <body>&#xD;
    rootNodeComp.removeAllChildren();&#xD;
    treeModelComp.reload();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DBf6oG4qEei47fqiwvb5mw" name="clearExp">
              <language>JAVA</language>
              <body>&#xD;
    rootNode.removeAllChildren();&#xD;
    treeModel.reload();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DBf6om4qEei47fqiwvb5mw" name="updateselectedlanes">
              <language>JAVA</language>
              <body>&#xD;
    for (int i = 0; i &lt; lanes.size(); i++) {&#xD;
        lanes.set(i, getLane(lanes.get(i).getId()));&#xD;
    }&#xD;
    String[] names0 = { &quot;Genus&quot;, &quot;Species&quot;, &quot;Strain Number&quot;, &quot;Country&quot;, &quot;MLST&quot;, &quot;isMarker&quot;, &quot;Experiment&quot;, &quot;Comments&quot; };&#xD;
    String[] names = new String[names0.length + additionalfields.size()];&#xD;
    for (int i = 0; i &lt; names0.length; i++) {&#xD;
        names[i] = names0[i];&#xD;
    }&#xD;
    for (int i = 0; i &lt; additionalfields.size(); i++) {&#xD;
        names[i + names0.length] = additionalfields.get(i);&#xD;
    }&#xD;
    Object[][] data = new Object[lanes.size()][names.length];&#xD;
    // We update the table&#xD;
    for (int i = 0; i &lt; lanes.size(); i++) {&#xD;
        data[i][0] = lanes.get(i).getGenus();&#xD;
        data[i][1] = lanes.get(i).getSpecies();&#xD;
        data[i][2] = lanes.get(i).getStrainNumber();&#xD;
        data[i][3] = lanes.get(i).getCountry();&#xD;
        data[i][4] = lanes.get(i).getMSLT();&#xD;
        data[i][5] = lanes.get(i).isIsMarker();&#xD;
        data[i][6] = lanes.get(i).getExperiment().getName();&#xD;
        data[i][7] = lanes.get(i).getComments();&#xD;
        for (int j = 0; j &lt; additionalfields.size(); j++) {&#xD;
            data[i][8 + j] = lanes.get(i).getLaneaddedinfo().get(additionalfields.get(j));&#xD;
        }&#xD;
    }&#xD;
    // Operations to change the model, we disable the edition of the date&#xD;
    DefaultTableModel model = new DefaultTableModel(data, names) {&#xD;
&#xD;
        @Override&#xD;
        public boolean isCellEditable(int rowIndex, int mColIndex) {&#xD;
            if (mColIndex == 6 || mColIndex == 5) {&#xD;
                return false;&#xD;
            } else {&#xD;
                return true;&#xD;
            }&#xD;
        }&#xD;
&#xD;
        @Override&#xD;
        public Class getColumnClass(int columnIndex) {&#xD;
            if (columnIndex == 5) {&#xD;
                return java.lang.Boolean.class;&#xD;
            } else {&#xD;
                return java.lang.Object.class;&#xD;
            }&#xD;
        }&#xD;
    };&#xD;
    model.addTableModelListener(this);&#xD;
    jtLanes.setModel(model);&#xD;
    jtLanes.getSelectionModel().addListSelectionListener(new ListSelectionListener() {&#xD;
&#xD;
        @Override&#xD;
        public void valueChanged(ListSelectionEvent event) {&#xD;
            if (jtLanes.getSelectedRow() > -1) {&#xD;
                if (!twiceinarow) {&#xD;
                    if (jtComparisons.getSelectionPath() == null) {&#xD;
                        viewlane();&#xD;
                    }&#xD;
                }&#xD;
                twiceinarow = !twiceinarow;&#xD;
            }&#xD;
            if (jtLanes.getSelectedRow() > 0) {&#xD;
                jbEditlane.setEnabled(true);&#xD;
                jbDeleteLane.setEnabled(true);&#xD;
                jbShowMW.setEnabled(true);&#xD;
                jbFindSimilarLanes.setEnabled(true);&#xD;
            }&#xD;
        }&#xD;
    });&#xD;
    TableColumn countriescolumn = jtLanes.getColumnModel().getColumn(3);&#xD;
    countriescolumn.setCellEditor(new DefaultCellEditor(generatecountriescombobox()));&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DBghsG4qEei47fqiwvb5mw" name="cleanlanes">
              <language>JAVA</language>
              <body>&#xD;
    String[] names0 = { &quot;Genus&quot;, &quot;Species&quot;, &quot;Strain Number&quot;, &quot;Country&quot;, &quot;MLST&quot;, &quot;isMarker&quot;, &quot;Experiment&quot;, &quot;Comments&quot; };&#xD;
    String[] names = new String[names0.length + additionalfields.size()];&#xD;
    for (int i = 0; i &lt; names0.length; i++) {&#xD;
        names[i] = names0[i];&#xD;
    }&#xD;
    for (int i = 0; i &lt; additionalfields.size(); i++) {&#xD;
        names[i + names0.length] = additionalfields.get(i);&#xD;
    }&#xD;
    Object[][] data = new Object[lanes.size()][names.length];&#xD;
    // Operations to change the model, we disable the edition of the date&#xD;
    DefaultTableModel model = new DefaultTableModel(data, names);&#xD;
    model.addTableModelListener(this);&#xD;
    jtLanes.setModel(model);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DBghsm4qEei47fqiwvb5mw" name="activateemptytoolbar">
              <language>JAVA</language>
              <body>&#xD;
    jbeditexpcomp.setVisible(false);&#xD;
    jbDeleteLane.setVisible(false);&#xD;
    jbEditlane.setVisible(false);&#xD;
    jbShowMW.setVisible(false);&#xD;
    //        jbViewLane.setVisible(false);&#xD;
    jbAddField.setVisible(false);&#xD;
    jbdeletefield.setVisible(false);&#xD;
    jbFindSimilarLanes.setVisible(false);&#xD;
    jxsearchlane.setVisible(false);&#xD;
    jbAdvancedSearchLanes.setVisible(false);&#xD;
    jSeparator1.setVisible(false);&#xD;
    jSeparator2.setVisible(false);&#xD;
    jSeparator3.setVisible(false);&#xD;
    //        jSeparator4.setVisible(false);&#xD;
    jbexport.setVisible(false);&#xD;
    jbexport.setEnabled(false);&#xD;
    jbDeleteExp.setVisible(false);&#xD;
    jbDeleteExp.setEnabled(false);&#xD;
    jbViewComp.setVisible(false);&#xD;
    jbViewComp.setEnabled(false);&#xD;
    jbExportNewick.setVisible(false);&#xD;
    jbExportNewick.setEnabled(false);&#xD;
    jbSimMatrix.setVisible(false);&#xD;
    jbSimMatrix.setEnabled(false);&#xD;
    jbeditexpcomp.setEnabled(false);&#xD;
    jbDeleteLane.setEnabled(false);&#xD;
    jbEditlane.setEnabled(false);&#xD;
    jbShowMW.setEnabled(false);&#xD;
    //        jbViewLane.setEnabled(false);&#xD;
    jbAddField.setEnabled(false);&#xD;
    jbdeletefield.setEnabled(false);&#xD;
    jbFindSimilarLanes.setEnabled(false);&#xD;
    jxsearchlane.setEnabled(false);&#xD;
    jbAdvancedSearchLanes.setEnabled(false);&#xD;
    jToolBar3.setVisible(false);&#xD;
    jtLanes.setVisible(false);&#xD;
    jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(&quot;&quot;));&#xD;
    jtExperiments.clearSelection();&#xD;
    jtComparisons.clearSelection();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DBhIwG4qEei47fqiwvb5mw" name="activateexperimentstoolbar">
              <language>JAVA</language>
              <body>&#xD;
    jbeditexpcomp.setVisible(true);&#xD;
    jbeditexpcomp.setEnabled(true);&#xD;
    jbeditexpcomp.setToolTipText(&quot;Modify properties of the experiment&quot;);&#xD;
    jbDeleteExp.setVisible(true);&#xD;
    jbDeleteExp.setEnabled(true);&#xD;
    jbmodifycomp.setVisible(false);&#xD;
    jbmodifycomp.setEnabled(false);&#xD;
    jbdeletecomp.setVisible(false);&#xD;
    jbdeletecomp.setEnabled(false);&#xD;
    jbDeleteLane.setVisible(false);&#xD;
    jbEditlane.setVisible(true);&#xD;
    jbEditlane.setEnabled(false);&#xD;
    jbShowMW.setVisible(true);&#xD;
    jbShowMW.setEnabled(false);&#xD;
    //        jbViewLane.setVisible(true);&#xD;
    jbAddField.setVisible(true);&#xD;
    jbdeletefield.setVisible(true);&#xD;
    jbFindSimilarLanes.setVisible(true);&#xD;
    jbFindSimilarLanes.setEnabled(false);&#xD;
    jxsearchlane.setVisible(true);&#xD;
    jbAdvancedSearchLanes.setVisible(true);&#xD;
    jSeparator1.setVisible(true);&#xD;
    jSeparator2.setVisible(true);&#xD;
    jSeparator3.setVisible(true);&#xD;
    //        jSeparator4.setVisible(true);&#xD;
    jbexport.setVisible(true);&#xD;
    jbexport.setEnabled(true);&#xD;
    jbViewComp.setVisible(false);&#xD;
    jbViewComp.setEnabled(false);&#xD;
    jbExportNewick.setVisible(false);&#xD;
    jbExportNewick.setEnabled(false);&#xD;
    jbSimMatrix.setVisible(false);&#xD;
    jbSimMatrix.setEnabled(false);&#xD;
    jbeditexpcomp.setEnabled(true);&#xD;
    //        jbDeleteLane.setEnabled(false);&#xD;
    //        jbEditlane.setEnabled(true);&#xD;
    //        jbViewLane.setEnabled(true);&#xD;
    jbAddField.setEnabled(true);&#xD;
    jbdeletefield.setEnabled(true);&#xD;
    //        jbFindSimilarLanes.setEnabled(true);&#xD;
    jxsearchlane.setEnabled(true);&#xD;
    jbAdvancedSearchLanes.setEnabled(true);&#xD;
    DefaultMutableTreeNode node = (DefaultMutableTreeNode) jtExperiments.getLastSelectedPathComponent();&#xD;
    Experiment exp = (Experiment) node.getUserObject();&#xD;
    jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Experiment &quot; + exp.getName()));&#xD;
    jbDeleteExp.setToolTipText(&quot;Delete experiment &quot; + exp.getName());&#xD;
    jbexport.setToolTipText(&quot;Export experiment &quot; + exp.getName());&#xD;
    jToolBar3.setVisible(true);&#xD;
    jtLanes.setVisible(true);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DBhIwm4qEei47fqiwvb5mw" name="activatecomparisontoolbar">
              <language>JAVA</language>
              <body>&#xD;
    jbeditexpcomp.setVisible(false);&#xD;
    jbeditexpcomp.setEnabled(false);&#xD;
    jbDeleteExp.setVisible(false);&#xD;
    jbDeleteExp.setEnabled(false);&#xD;
    jbmodifycomp.setVisible(true);&#xD;
    jbmodifycomp.setEnabled(true);&#xD;
    jbdeletecomp.setVisible(true);&#xD;
    jbdeletecomp.setEnabled(true);&#xD;
    jbDeleteLane.setVisible(true);&#xD;
    jbDeleteLane.setEnabled(false);&#xD;
    jbEditlane.setVisible(false);&#xD;
    jbShowMW.setVisible(false);&#xD;
    //        jbViewLane.setVisible(true);&#xD;
    jbAddField.setVisible(false);&#xD;
    jbdeletefield.setVisible(false);&#xD;
    jbFindSimilarLanes.setVisible(true);&#xD;
    jbFindSimilarLanes.setEnabled(false);&#xD;
    jxsearchlane.setVisible(true);&#xD;
    jbViewComp.setVisible(true);&#xD;
    jbViewComp.setEnabled(true);&#xD;
    jbExportNewick.setVisible(true);&#xD;
    jbExportNewick.setEnabled(true);&#xD;
    jbSimMatrix.setVisible(true);&#xD;
    jbSimMatrix.setEnabled(true);&#xD;
    jbAdvancedSearchLanes.setVisible(true);&#xD;
    jSeparator1.setVisible(true);&#xD;
    jSeparator2.setVisible(true);&#xD;
    jSeparator3.setVisible(false);&#xD;
    //        jSeparator4.setVisible(true);&#xD;
    jbexport.setVisible(false);&#xD;
    jbexport.setEnabled(false);&#xD;
    jbeditexpcomp.setEnabled(true);&#xD;
    //        jbDeleteLane.setEnabled(true);&#xD;
    //        jbEditlane.setEnabled(false);&#xD;
    //        jbViewLane.setEnabled(true);&#xD;
    jbAddField.setEnabled(false);&#xD;
    jbdeletefield.setEnabled(false);&#xD;
    //        jbFindSimilarLanes.setEnabled(true);&#xD;
    jxsearchlane.setEnabled(true);&#xD;
    jbAdvancedSearchLanes.setEnabled(true);&#xD;
    DefaultMutableTreeNode node = (DefaultMutableTreeNode) jtComparisons.getLastSelectedPathComponent();&#xD;
    Comparison comp = (Comparison) node.getUserObject();&#xD;
    jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Comparison &quot; + comp.getName()));&#xD;
    jbDeleteExp.setToolTipText(&quot;Delete comparison &quot; + comp.getName());&#xD;
    jToolBar3.setVisible(true);&#xD;
    jtLanes.setVisible(true);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DBhv0W4qEei47fqiwvb5mw" name="updatelanes">
              <language>JAVA</language>
              <body>&#xD;
    if (all) {&#xD;
        lanes = getLanes(studyid);&#xD;
        templanes = lanes;&#xD;
    }&#xD;
    //        additionalfields = getAdditionalFields(studyid);&#xD;
    String[] names0 = { &quot;Genus&quot;, &quot;Species&quot;, &quot;Strain Number&quot;, &quot;Country&quot;, &quot;MLST&quot;, &quot;isMarker&quot;, &quot;Experiment&quot;, &quot;Comments&quot; };&#xD;
    String[] names = new String[names0.length + additionalfields.size()];&#xD;
    for (int i = 0; i &lt; names0.length; i++) {&#xD;
        names[i] = names0[i];&#xD;
    }&#xD;
    for (int i = 0; i &lt; additionalfields.size(); i++) {&#xD;
        names[i + names0.length] = additionalfields.get(i);&#xD;
    }&#xD;
    Object[][] data = new Object[lanes.size()][names.length];&#xD;
    // We update the table&#xD;
    for (int i = 0; i &lt; lanes.size(); i++) {&#xD;
        data[i][0] = lanes.get(i).getGenus();&#xD;
        data[i][1] = lanes.get(i).getSpecies();&#xD;
        data[i][2] = lanes.get(i).getStrainNumber();&#xD;
        data[i][3] = lanes.get(i).getCountry();&#xD;
        data[i][4] = lanes.get(i).getMSLT();&#xD;
        data[i][5] = lanes.get(i).isIsMarker();&#xD;
        data[i][6] = lanes.get(i).getExperiment().getName();&#xD;
        data[i][7] = lanes.get(i).getComments();&#xD;
        for (int j = 0; j &lt; additionalfields.size(); j++) {&#xD;
            data[i][8 + j] = lanes.get(i).getLaneaddedinfo().get(additionalfields.get(j));&#xD;
        }&#xD;
    }&#xD;
    // Operations to change the model, we disable the edition of the date&#xD;
    DefaultTableModel model = new DefaultTableModel(data, names) {&#xD;
&#xD;
        public boolean isCellEditable(int rowIndex, int mColIndex) {&#xD;
            if (mColIndex == 6 || mColIndex == 5) {&#xD;
                return false;&#xD;
            } else {&#xD;
                return true;&#xD;
            }&#xD;
        }&#xD;
&#xD;
        public Class getColumnClass(int columnIndex) {&#xD;
            if (columnIndex == 5) {&#xD;
                return java.lang.Boolean.class;&#xD;
            } else {&#xD;
                return java.lang.Object.class;&#xD;
            }&#xD;
        }&#xD;
    };&#xD;
    model.addTableModelListener(this);&#xD;
    jtLanes.setModel(model);&#xD;
    jtLanes.getSelectionModel().addListSelectionListener(new ListSelectionListener() {&#xD;
&#xD;
        @Override&#xD;
        public void valueChanged(ListSelectionEvent event) {&#xD;
            if (jtLanes.getSelectedRow() > -1) {&#xD;
                if (!twiceinarow) {&#xD;
                    if (jtComparisons.getSelectionPath() == null) {&#xD;
                        viewlane();&#xD;
                    }&#xD;
                }&#xD;
                twiceinarow = !twiceinarow;&#xD;
            }&#xD;
            if (jtLanes.getSelectedRow() > 0) {&#xD;
                jbEditlane.setEnabled(true);&#xD;
                jbDeleteLane.setEnabled(true);&#xD;
                jbShowMW.setEnabled(true);&#xD;
                jbFindSimilarLanes.setEnabled(true);&#xD;
            }&#xD;
        }&#xD;
    });&#xD;
    TableColumn countriescolumn = jtLanes.getColumnModel().getColumn(3);&#xD;
    countriescolumn.setCellEditor(new DefaultCellEditor(generatecountriescombobox()));&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DBjlAG4qEei47fqiwvb5mw" name="updatelanes">
              <language>JAVA</language>
              <body>&#xD;
    additionalfields = getAdditionalFields(studyid);&#xD;
    String[] names0 = { &quot;Genus&quot;, &quot;Species&quot;, &quot;Strain Number&quot;, &quot;Country&quot;, &quot;MLST&quot;, &quot;isMarker&quot;, &quot;Experiment&quot;, &quot;Comments&quot; };&#xD;
    String[] names = new String[names0.length + additionalfields.size()];&#xD;
    for (int i = 0; i &lt; names0.length; i++) {&#xD;
        names[i] = names0[i];&#xD;
    }&#xD;
    for (int i = 0; i &lt; additionalfields.size(); i++) {&#xD;
        names[i + names0.length] = additionalfields.get(i);&#xD;
    }&#xD;
    Object[][] data = new Object[newlanes.size()][names.length];&#xD;
    // We update the table&#xD;
    for (int i = 0; i &lt; newlanes.size(); i++) {&#xD;
        data[i][0] = newlanes.get(i).getGenus();&#xD;
        data[i][1] = newlanes.get(i).getSpecies();&#xD;
        data[i][2] = newlanes.get(i).getStrainNumber();&#xD;
        data[i][3] = newlanes.get(i).getCountry();&#xD;
        data[i][4] = newlanes.get(i).getMSLT();&#xD;
        data[i][5] = newlanes.get(i).isIsMarker();&#xD;
        data[i][6] = newlanes.get(i).getExperiment().getName();&#xD;
        data[i][7] = newlanes.get(i).getComments();&#xD;
        for (int j = 0; j &lt; additionalfields.size(); j++) {&#xD;
            data[i][8 + j] = newlanes.get(i).getLaneaddedinfo().get(additionalfields.get(j));&#xD;
        }&#xD;
    }&#xD;
    // Operations to change the model, we disable the edition of the date&#xD;
    DefaultTableModel model = new DefaultTableModel(data, names) {&#xD;
&#xD;
        public boolean isCellEditable(int rowIndex, int mColIndex) {&#xD;
            if (mColIndex == 6 || mColIndex == 5) {&#xD;
                return false;&#xD;
            } else {&#xD;
                return true;&#xD;
            }&#xD;
        }&#xD;
&#xD;
        public Class getColumnClass(int columnIndex) {&#xD;
            if (columnIndex == 5) {&#xD;
                return java.lang.Boolean.class;&#xD;
            } else {&#xD;
                return java.lang.Object.class;&#xD;
            }&#xD;
        }&#xD;
    };&#xD;
    model.addTableModelListener(this);&#xD;
    jtLanes.setModel(model);&#xD;
    jtLanes.getSelectionModel().addListSelectionListener(new ListSelectionListener() {&#xD;
&#xD;
        @Override&#xD;
        public void valueChanged(ListSelectionEvent event) {&#xD;
            if (jtLanes.getSelectedRow() > -1) {&#xD;
                if (!twiceinarow) {&#xD;
                    if (jtComparisons.getSelectionPath() == null) {&#xD;
                        viewlane();&#xD;
                    }&#xD;
                }&#xD;
                twiceinarow = !twiceinarow;&#xD;
            }&#xD;
            if (jtLanes.getSelectedRow() > 0) {&#xD;
                jbEditlane.setEnabled(true);&#xD;
                jbDeleteLane.setEnabled(true);&#xD;
                jbShowMW.setEnabled(true);&#xD;
                jbFindSimilarLanes.setEnabled(true);&#xD;
            }&#xD;
        }&#xD;
    });&#xD;
    TableColumn countriescolumn = jtLanes.getColumnModel().getColumn(3);&#xD;
    countriescolumn.setCellEditor(new DefaultCellEditor(generatecountriescombobox()));&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DBlaMG4qEei47fqiwvb5mw" name="generatecountriescombobox">
              <language>JAVA</language>
              <body>&#xD;
    JComboBox comboBox = new JComboBox();&#xD;
    String[] locales = Locale.getISOCountries();&#xD;
    ArrayList&lt;String> countries = new ArrayList&lt;>();&#xD;
    for (String countryCode : locales) {&#xD;
        Locale obj = new Locale(&quot;&quot;, countryCode);&#xD;
        countries.add(obj.getDisplayCountry());&#xD;
    }&#xD;
    Collections.sort(countries);&#xD;
    for (String country : countries) {&#xD;
        comboBox.addItem(country);&#xD;
    }&#xD;
    return comboBox;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DBnPYW4qEei47fqiwvb5mw" name="tableChanged">
              <language>JAVA</language>
              <body>&#xD;
    /// Modification in Lanes table &#xD;
    if (jtLanes.getModel().toString().equals(e.getSource().toString())) {&#xD;
        int row = e.getFirstRow();&#xD;
        int column = e.getColumn();&#xD;
        if (column &lt;= 7) {&#xD;
            Object cellValue = jtLanes.getValueAt(row, column);&#xD;
            updateLane(lanes.get(row).getId(), cellValue, column);&#xD;
        } else {&#xD;
            String cellValue = String.valueOf(jtLanes.getValueAt(row, column));&#xD;
            lanes.get(row).addnewinfo(additionalfields.get(column - 8), cellValue);&#xD;
            if (containadditionalfield(lanes.get(row).getId(), additionalfields.get(column - 8))) {&#xD;
                updateLane(lanes.get(row));&#xD;
            } else {&#xD;
                insertLaneAddedInfo(lanes.get(row).getId(), additionalfields.get(column - 8), cellValue);&#xD;
            }&#xD;
        }&#xD;
        updateselectedlanes();&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DB8mkG4qEei47fqiwvb5mw" name="initComponents">
              <language>JAVA</language>
              <body>&#xD;
    jsMainPane = new javax.swing.JSplitPane();&#xD;
    jspLeftPane = new javax.swing.JSplitPane();&#xD;
    jPanel1 = new javax.swing.JPanel();&#xD;
    jScrollPane2 = new javax.swing.JScrollPane();&#xD;
    jtExperiments = new javax.swing.JTree();&#xD;
    jToolBar1 = new javax.swing.JToolBar();&#xD;
    jbNewExp = new javax.swing.JButton();&#xD;
    jbDuplicateExp = new javax.swing.JButton();&#xD;
    jbimportexpfile = new javax.swing.JButton();&#xD;
    jbImport = new javax.swing.JButton();&#xD;
    jbSearchExp = new javax.swing.JButton();&#xD;
    jPanel2 = new javax.swing.JPanel();&#xD;
    jToolBar2 = new javax.swing.JToolBar();&#xD;
    jbNewComp = new javax.swing.JButton();&#xD;
    jbDuplicateComp = new javax.swing.JButton();&#xD;
    jbSearchComp = new javax.swing.JButton();&#xD;
    jScrollPane3 = new javax.swing.JScrollPane();&#xD;
    jtComparisons = new javax.swing.JTree();&#xD;
    jspRightPane = new javax.swing.JSplitPane();&#xD;
    jPanel3 = new javax.swing.JPanel();&#xD;
    jScrollPane1 = new javax.swing.JScrollPane();&#xD;
    jtLanes = new javax.swing.JTable();&#xD;
    jToolBar3 = new javax.swing.JToolBar();&#xD;
    jbeditexpcomp = new javax.swing.JButton();&#xD;
    jbDeleteExp = new javax.swing.JButton();&#xD;
    jbexport = new javax.swing.JButton();&#xD;
    jbmodifycomp = new javax.swing.JButton();&#xD;
    jbdeletecomp = new javax.swing.JButton();&#xD;
    jbViewComp = new javax.swing.JButton();&#xD;
    jbExportNewick = new javax.swing.JButton();&#xD;
    jbSimMatrix = new javax.swing.JButton();&#xD;
    jSeparator1 = new javax.swing.JToolBar.Separator();&#xD;
    jbEditlane = new javax.swing.JButton();&#xD;
    jbDeleteLane = new javax.swing.JButton();&#xD;
    jbFindSimilarLanes = new javax.swing.JButton();&#xD;
    jbShowMW = new javax.swing.JButton();&#xD;
    jSeparator2 = new javax.swing.JToolBar.Separator();&#xD;
    jbAddField = new javax.swing.JButton();&#xD;
    jbdeletefield = new javax.swing.JButton();&#xD;
    jSeparator3 = new javax.swing.JToolBar.Separator();&#xD;
    jxsearchlane = new org.jdesktop.swingx.JXSearchField();&#xD;
    jbAdvancedSearchLanes = new javax.swing.JButton();&#xD;
    jSeparator6 = new javax.swing.JToolBar.Separator();&#xD;
    jScrollPane4 = new javax.swing.JScrollPane();&#xD;
    jPanel5 = new javax.swing.JPanel();&#xD;
    jToolBar5 = new javax.swing.JToolBar();&#xD;
    jButton1 = new javax.swing.JButton();&#xD;
    jButton2 = new javax.swing.JButton();&#xD;
    jSave = new javax.swing.JButton();&#xD;
    jXImageView2 = new org.jdesktop.swingx.JXImageView();&#xD;
    jMenuBar1 = new javax.swing.JMenuBar();&#xD;
    jMenu1 = new javax.swing.JMenu();&#xD;
    jmiNewStudy = new javax.swing.JMenuItem();&#xD;
    jmOpenStudy = new javax.swing.JMenuItem();&#xD;
    jmiEditStudy = new javax.swing.JMenuItem();&#xD;
    jmiDeleteStudy = new javax.swing.JMenuItem();&#xD;
    jmiCloseStudy = new javax.swing.JMenuItem();&#xD;
    jSeparator5 = new javax.swing.JPopupMenu.Separator();&#xD;
    jmiExit = new javax.swing.JMenuItem();&#xD;
    jMenu2 = new javax.swing.JMenu();&#xD;
    jmannotate = new javax.swing.JMenu();&#xD;
    jmiUnfinished = new javax.swing.JMenuItem();&#xD;
    jAnnotateItem = new javax.swing.JMenuItem();&#xD;
    jMenuGenetic = new javax.swing.JMenu();&#xD;
    jmiAddPopulationField = new javax.swing.JMenuItem();&#xD;
    jSeparator4 = new javax.swing.JPopupMenu.Separator();&#xD;
    jmiExportGenetics = new javax.swing.JMenuItem();&#xD;
    jSeparator7 = new javax.swing.JPopupMenu.Separator();&#xD;
    jMItransform = new javax.swing.JMenuItem();&#xD;
    jMenu3 = new javax.swing.JMenu();&#xD;
    jmMarkers = new javax.swing.JMenu();&#xD;
    jmiaddmarker = new javax.swing.JMenuItem();&#xD;
    jMenuItem5 = new javax.swing.JMenuItem();&#xD;
    jMenu4 = new javax.swing.JMenu();&#xD;
    jMenuItem1 = new javax.swing.JMenuItem();&#xD;
    jMenuItem2 = new javax.swing.JMenuItem();&#xD;
    jMenuMemory = new javax.swing.JMenuItem();&#xD;
    jMenu5 = new javax.swing.JMenu();&#xD;
    jMenuItem7 = new javax.swing.JMenuItem();&#xD;
    jMenuItem8 = new javax.swing.JMenuItem();&#xD;
    jMenuItem6 = new javax.swing.JMenuItem();&#xD;
    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);&#xD;
    setTitle(&quot;GelJ&quot;);&#xD;
    jsMainPane.setDividerLocation(150);&#xD;
    jspLeftPane.setDividerLocation(200);&#xD;
    jspLeftPane.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);&#xD;
    jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Experiments&quot;));&#xD;
    javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode(&quot;root&quot;);&#xD;
    jtExperiments.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));&#xD;
    jtExperiments.setRootVisible(false);&#xD;
    jScrollPane2.setViewportView(jtExperiments);&#xD;
    jToolBar1.setRollover(true);&#xD;
    // NOI18N&#xD;
    jbNewExp.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/GelJImages/experiment-add1b.png&quot;)));&#xD;
    jbNewExp.setToolTipText(&quot;New Experiment&quot;);&#xD;
    jbNewExp.setEnabled(false);&#xD;
    jbNewExp.setFocusable(false);&#xD;
    jbNewExp.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);&#xD;
    jbNewExp.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);&#xD;
    jbNewExp.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbNewExpActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar1.add(jbNewExp);&#xD;
    // NOI18N&#xD;
    jbDuplicateExp.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/GelJImages/experiment-duplicate.png&quot;)));&#xD;
    jbDuplicateExp.setToolTipText(&quot;Duplicate Experiment&quot;);&#xD;
    jbDuplicateExp.setEnabled(false);&#xD;
    jbDuplicateExp.setFocusable(false);&#xD;
    jbDuplicateExp.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);&#xD;
    jbDuplicateExp.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);&#xD;
    jbDuplicateExp.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbDuplicateExpActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar1.add(jbDuplicateExp);&#xD;
    // NOI18N&#xD;
    jbimportexpfile.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/GelJImages/experiment-importb.png&quot;)));&#xD;
    jbimportexpfile.setToolTipText(&quot;Import Experiment from File&quot;);&#xD;
    jbimportexpfile.setEnabled(false);&#xD;
    jbimportexpfile.setFocusable(false);&#xD;
    jbimportexpfile.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);&#xD;
    jbimportexpfile.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);&#xD;
    jbimportexpfile.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbimportexpfileActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar1.add(jbimportexpfile);&#xD;
    // NOI18N&#xD;
    jbImport.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/GelJImages/experiment-import2b.png&quot;)));&#xD;
    jbImport.setToolTipText(&quot;Import Experiment from Study&quot;);&#xD;
    jbImport.setEnabled(false);&#xD;
    jbImport.setFocusable(false);&#xD;
    jbImport.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);&#xD;
    jbImport.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);&#xD;
    jbImport.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbImportActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar1.add(jbImport);&#xD;
    // NOI18N&#xD;
    jbSearchExp.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/images/find.png&quot;)));&#xD;
    jbSearchExp.setToolTipText(&quot;Search Experiments&quot;);&#xD;
    jbSearchExp.setEnabled(false);&#xD;
    jbSearchExp.setFocusable(false);&#xD;
    jbSearchExp.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);&#xD;
    jbSearchExp.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);&#xD;
    jbSearchExp.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbSearchExpActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar1.add(jbSearchExp);&#xD;
    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);&#xD;
    jPanel1.setLayout(jPanel1Layout);&#xD;
    jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane2).addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));&#xD;
    jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup().addGap(0, 0, 0).addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE)));&#xD;
    jspLeftPane.setTopComponent(jPanel1);&#xD;
    jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Comparisons&quot;));&#xD;
    jToolBar2.setRollover(true);&#xD;
    // NOI18N&#xD;
    jbNewComp.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/GelJImages/comparison-addb.png&quot;)));&#xD;
    jbNewComp.setToolTipText(&quot;New Comparison&quot;);&#xD;
    jbNewComp.setEnabled(false);&#xD;
    jbNewComp.setFocusable(false);&#xD;
    jbNewComp.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);&#xD;
    jbNewComp.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);&#xD;
    jbNewComp.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbNewCompActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar2.add(jbNewComp);&#xD;
    // NOI18N&#xD;
    jbDuplicateComp.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/GelJImages/comparison-duplicate.png&quot;)));&#xD;
    jbDuplicateComp.setToolTipText(&quot;Duplicate Comparison&quot;);&#xD;
    jbDuplicateComp.setEnabled(false);&#xD;
    jbDuplicateComp.setFocusable(false);&#xD;
    jbDuplicateComp.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);&#xD;
    jbDuplicateComp.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);&#xD;
    jbDuplicateComp.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbDuplicateCompActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar2.add(jbDuplicateComp);&#xD;
    // NOI18N&#xD;
    jbSearchComp.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/images/find.png&quot;)));&#xD;
    jbSearchComp.setToolTipText(&quot;Search Comparisons&quot;);&#xD;
    jbSearchComp.setEnabled(false);&#xD;
    jbSearchComp.setFocusable(false);&#xD;
    jbSearchComp.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);&#xD;
    jbSearchComp.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);&#xD;
    jbSearchComp.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbSearchCompActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar2.add(jbSearchComp);&#xD;
    treeNode1 = new javax.swing.tree.DefaultMutableTreeNode(&quot;root&quot;);&#xD;
    jtComparisons.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));&#xD;
    jtComparisons.setMaximumSize(new java.awt.Dimension(20, 38));&#xD;
    jtComparisons.setRootVisible(false);&#xD;
    jScrollPane3.setViewportView(jtComparisons);&#xD;
    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);&#xD;
    jPanel2.setLayout(jPanel2Layout);&#xD;
    jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jToolBar2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jScrollPane3));&#xD;
    jPanel2Layout.setVerticalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel2Layout.createSequentialGroup().addComponent(jToolBar2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 483, Short.MAX_VALUE)));&#xD;
    jspLeftPane.setRightComponent(jPanel2);&#xD;
    jsMainPane.setLeftComponent(jspLeftPane);&#xD;
    jspRightPane.setDividerLocation(500);&#xD;
    jspRightPane.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);&#xD;
    jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(&quot;Lanes&quot;));&#xD;
    jtLanes.setModel(new javax.swing.table.DefaultTableModel(new Object[][] { { null, null, null, null, null, null, null, null }, { null, null, null, null, null, null, null, null }, { null, null, null, null, null, null, null, null }, { null, null, null, null, null, null, null, null } }, new String[] { &quot;Genus&quot;, &quot;Species&quot;, &quot;Strain Number&quot;, &quot;Country&quot;, &quot;MLST&quot;, &quot;isMarker&quot;, &quot;Experiment&quot;, &quot;Comments&quot; }));&#xD;
    jScrollPane1.setViewportView(jtLanes);&#xD;
    jToolBar3.setRollover(true);&#xD;
    // NOI18N&#xD;
    jbeditexpcomp.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/GelJImages/experiment-edit.png&quot;)));&#xD;
    jbeditexpcomp.setToolTipText(&quot;Modify Experiment Properties&quot;);&#xD;
    jbeditexpcomp.setEnabled(false);&#xD;
    jbeditexpcomp.setFocusable(false);&#xD;
    jbeditexpcomp.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);&#xD;
    jbeditexpcomp.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);&#xD;
    jbeditexpcomp.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbeditexpcompActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar3.add(jbeditexpcomp);&#xD;
    // NOI18N&#xD;
    jbDeleteExp.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/GelJImages/experiment-delete.png&quot;)));&#xD;
    jbDeleteExp.setToolTipText(&quot;Delete Experiment&quot;);&#xD;
    jbDeleteExp.setEnabled(false);&#xD;
    jbDeleteExp.setFocusable(false);&#xD;
    jbDeleteExp.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);&#xD;
    jbDeleteExp.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);&#xD;
    jbDeleteExp.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbDeleteExpActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar3.add(jbDeleteExp);&#xD;
    // NOI18N&#xD;
    jbexport.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/GelJImages/experiment-export.png&quot;)));&#xD;
    jbexport.setToolTipText(&quot;Export experiment&quot;);&#xD;
    jbexport.setEnabled(false);&#xD;
    jbexport.setFocusable(false);&#xD;
    jbexport.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);&#xD;
    jbexport.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);&#xD;
    jbexport.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbexportActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar3.add(jbexport);&#xD;
    // NOI18N&#xD;
    jbmodifycomp.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/GelJImages/comparison-edit.png&quot;)));&#xD;
    jbmodifycomp.setToolTipText(&quot;Edit comparison&quot;);&#xD;
    jbmodifycomp.setEnabled(false);&#xD;
    jbmodifycomp.setFocusable(false);&#xD;
    jbmodifycomp.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);&#xD;
    jbmodifycomp.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);&#xD;
    jbmodifycomp.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbmodifycompActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar3.add(jbmodifycomp);&#xD;
    // NOI18N&#xD;
    jbdeletecomp.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/GelJImages/comparison-delete.png&quot;)));&#xD;
    jbdeletecomp.setToolTipText(&quot;Delete comparison&quot;);&#xD;
    jbdeletecomp.setEnabled(false);&#xD;
    jbdeletecomp.setFocusable(false);&#xD;
    jbdeletecomp.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);&#xD;
    jbdeletecomp.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);&#xD;
    jbdeletecomp.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbdeletecompActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar3.add(jbdeletecomp);&#xD;
    // NOI18N&#xD;
    jbViewComp.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/GelJImages/comparison-view.png&quot;)));&#xD;
    jbViewComp.setToolTipText(&quot;View Comparison&quot;);&#xD;
    jbViewComp.setEnabled(false);&#xD;
    jbViewComp.setFocusable(false);&#xD;
    jbViewComp.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);&#xD;
    jbViewComp.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);&#xD;
    jbViewComp.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbViewCompActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar3.add(jbViewComp);&#xD;
    // NOI18N&#xD;
    jbExportNewick.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/GelJImages/newick.png&quot;)));&#xD;
    jbExportNewick.setToolTipText(&quot;Export Dendrogram to Newick format&quot;);&#xD;
    jbExportNewick.setEnabled(false);&#xD;
    jbExportNewick.setFocusable(false);&#xD;
    jbExportNewick.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);&#xD;
    jbExportNewick.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);&#xD;
    jbExportNewick.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbExportNewickActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar3.add(jbExportNewick);&#xD;
    // NOI18N&#xD;
    jbSimMatrix.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/GelJImages/simmatrix.png&quot;)));&#xD;
    jbSimMatrix.setToolTipText(&quot;Export Similarity Matrix&quot;);&#xD;
    jbSimMatrix.setEnabled(false);&#xD;
    jbSimMatrix.setFocusable(false);&#xD;
    jbSimMatrix.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);&#xD;
    jbSimMatrix.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);&#xD;
    jbSimMatrix.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbSimMatrixActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar3.add(jbSimMatrix);&#xD;
    jToolBar3.add(jSeparator1);&#xD;
    // NOI18N&#xD;
    jbEditlane.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/GelJImages/lane_edit.png&quot;)));&#xD;
    jbEditlane.setToolTipText(&quot;Edit bands of a lane&quot;);&#xD;
    jbEditlane.setEnabled(false);&#xD;
    jbEditlane.setFocusable(false);&#xD;
    jbEditlane.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);&#xD;
    jbEditlane.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);&#xD;
    jbEditlane.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbEditlaneActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar3.add(jbEditlane);&#xD;
    // NOI18N&#xD;
    jbDeleteLane.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/GelJImages/lane_delete.png&quot;)));&#xD;
    jbDeleteLane.setToolTipText(&quot;Remove Lane from Comparison&quot;);&#xD;
    jbDeleteLane.setEnabled(false);&#xD;
    jbDeleteLane.setFocusable(false);&#xD;
    jbDeleteLane.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);&#xD;
    jbDeleteLane.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);&#xD;
    jbDeleteLane.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbDeleteLaneActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar3.add(jbDeleteLane);&#xD;
    // NOI18N&#xD;
    jbFindSimilarLanes.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/GelJImages/lane-similarity.png&quot;)));&#xD;
    jbFindSimilarLanes.setToolTipText(&quot;Find Similar Lanes&quot;);&#xD;
    jbFindSimilarLanes.setEnabled(false);&#xD;
    jbFindSimilarLanes.setFocusable(false);&#xD;
    jbFindSimilarLanes.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);&#xD;
    jbFindSimilarLanes.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);&#xD;
    jbFindSimilarLanes.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbFindSimilarLanesActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar3.add(jbFindSimilarLanes);&#xD;
    // NOI18N&#xD;
    jbShowMW.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/GelJImages/standards.png&quot;)));&#xD;
    jbShowMW.setToolTipText(&quot;Show Molecular Weights&quot;);&#xD;
    jbShowMW.setEnabled(false);&#xD;
    jbShowMW.setFocusable(false);&#xD;
    jbShowMW.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);&#xD;
    jbShowMW.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);&#xD;
    jbShowMW.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbShowMWActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar3.add(jbShowMW);&#xD;
    jToolBar3.add(jSeparator2);&#xD;
    // NOI18N&#xD;
    jbAddField.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/images/addfieldb.png&quot;)));&#xD;
    jbAddField.setToolTipText(&quot;Add Field&quot;);&#xD;
    jbAddField.setEnabled(false);&#xD;
    jbAddField.setFocusable(false);&#xD;
    jbAddField.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);&#xD;
    jbAddField.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);&#xD;
    jbAddField.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbAddFieldActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar3.add(jbAddField);&#xD;
    // NOI18N&#xD;
    jbdeletefield.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/images/deletefield.png&quot;)));&#xD;
    jbdeletefield.setToolTipText(&quot;Delete Field&quot;);&#xD;
    jbdeletefield.setEnabled(false);&#xD;
    jbdeletefield.setFocusable(false);&#xD;
    jbdeletefield.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);&#xD;
    jbdeletefield.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);&#xD;
    jbdeletefield.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbdeletefieldActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar3.add(jbdeletefield);&#xD;
    jToolBar3.add(jSeparator3);&#xD;
    jxsearchlane.setHorizontalAlignment(javax.swing.JTextField.RIGHT);&#xD;
    jxsearchlane.setEnabled(false);&#xD;
    jxsearchlane.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jxsearchlaneActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jxsearchlane.addKeyListener(new java.awt.event.KeyAdapter() {&#xD;
&#xD;
        public void keyReleased(java.awt.event.KeyEvent evt) {&#xD;
            jxsearchlaneKeyReleased(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar3.add(jxsearchlane);&#xD;
    // NOI18N&#xD;
    jbAdvancedSearchLanes.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/images/find.png&quot;)));&#xD;
    jbAdvancedSearchLanes.setToolTipText(&quot;Advanced Search of Lanes&quot;);&#xD;
    jbAdvancedSearchLanes.setEnabled(false);&#xD;
    jbAdvancedSearchLanes.setFocusable(false);&#xD;
    jbAdvancedSearchLanes.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);&#xD;
    jbAdvancedSearchLanes.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);&#xD;
    jbAdvancedSearchLanes.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jbAdvancedSearchLanesActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar3.add(jbAdvancedSearchLanes);&#xD;
    jToolBar3.add(jSeparator6);&#xD;
    javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);&#xD;
    jPanel3.setLayout(jPanel3Layout);&#xD;
    jPanel3Layout.setHorizontalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 867, Short.MAX_VALUE).addComponent(jToolBar3, javax.swing.GroupLayout.DEFAULT_SIZE, 775, Short.MAX_VALUE));&#xD;
    jPanel3Layout.setVerticalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel3Layout.createSequentialGroup().addComponent(jToolBar3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 414, Short.MAX_VALUE).addContainerGap()));&#xD;
    jspRightPane.setTopComponent(jPanel3);&#xD;
    jToolBar5.setRollover(true);&#xD;
    // NOI18N&#xD;
    jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/images/zoom_in.png&quot;)));&#xD;
    jButton1.setToolTipText(&quot;Zoom in&quot;);&#xD;
    jButton1.setFocusable(false);&#xD;
    jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);&#xD;
    jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);&#xD;
    jButton1.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton1ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar5.add(jButton1);&#xD;
    // NOI18N&#xD;
    jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/images/zoom_out.png&quot;)));&#xD;
    jButton2.setToolTipText(&quot;Zoom out&quot;);&#xD;
    jButton2.setFocusable(false);&#xD;
    jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);&#xD;
    jButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);&#xD;
    jButton2.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jButton2ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar5.add(jButton2);&#xD;
    // NOI18N&#xD;
    jSave.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/GelJImages/save.png&quot;)));&#xD;
    jSave.setEnabled(false);&#xD;
    jSave.setFocusable(false);&#xD;
    jSave.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);&#xD;
    jSave.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);&#xD;
    jSave.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jSaveActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jToolBar5.add(jSave);&#xD;
    javax.swing.GroupLayout jXImageView2Layout = new javax.swing.GroupLayout(jXImageView2);&#xD;
    jXImageView2.setLayout(jXImageView2Layout);&#xD;
    jXImageView2Layout.setHorizontalGroup(jXImageView2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 0, Short.MAX_VALUE));&#xD;
    jXImageView2Layout.setVerticalGroup(jXImageView2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 228, Short.MAX_VALUE));&#xD;
    javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);&#xD;
    jPanel5.setLayout(jPanel5Layout);&#xD;
    jPanel5Layout.setHorizontalGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jToolBar5, javax.swing.GroupLayout.DEFAULT_SIZE, 783, Short.MAX_VALUE).addGroup(jPanel5Layout.createSequentialGroup().addComponent(jXImageView2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addContainerGap()));&#xD;
    jPanel5Layout.setVerticalGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel5Layout.createSequentialGroup().addComponent(jToolBar5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jXImageView2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));&#xD;
    jScrollPane4.setViewportView(jPanel5);&#xD;
    jspRightPane.setRightComponent(jScrollPane4);&#xD;
    jsMainPane.setRightComponent(jspRightPane);&#xD;
    jMenu1.setText(&quot;File&quot;);&#xD;
    jmiNewStudy.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));&#xD;
    jmiNewStudy.setText(&quot;New Study&quot;);&#xD;
    jmiNewStudy.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jmiNewStudyActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jMenu1.add(jmiNewStudy);&#xD;
    jmOpenStudy.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));&#xD;
    jmOpenStudy.setText(&quot;Open Study&quot;);&#xD;
    jmOpenStudy.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jmOpenStudyActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jMenu1.add(jmOpenStudy);&#xD;
    jmiEditStudy.setText(&quot;Edit Study&quot;);&#xD;
    jmiEditStudy.setEnabled(false);&#xD;
    jmiEditStudy.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jmiEditStudyActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jMenu1.add(jmiEditStudy);&#xD;
    jmiDeleteStudy.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_DELETE, java.awt.event.InputEvent.CTRL_MASK));&#xD;
    jmiDeleteStudy.setText(&quot;Delete Study&quot;);&#xD;
    jmiDeleteStudy.setEnabled(false);&#xD;
    jmiDeleteStudy.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jmiDeleteStudyActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jMenu1.add(jmiDeleteStudy);&#xD;
    jmiCloseStudy.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));&#xD;
    jmiCloseStudy.setText(&quot;Close Study&quot;);&#xD;
    jmiCloseStudy.setEnabled(false);&#xD;
    jmiCloseStudy.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jmiCloseStudyActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jMenu1.add(jmiCloseStudy);&#xD;
    jMenu1.add(jSeparator5);&#xD;
    jmiExit.setText(&quot;Exit&quot;);&#xD;
    jmiExit.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jmiExitActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jMenu1.add(jmiExit);&#xD;
    jMenuBar1.add(jMenu1);&#xD;
    jMenu2.setText(&quot;Tools&quot;);&#xD;
    jmannotate.setText(&quot;Experiments&quot;);&#xD;
    jmiUnfinished.setText(&quot;Unfinished Experiments&quot;);&#xD;
    jmiUnfinished.setEnabled(false);&#xD;
    jmiUnfinished.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jmiUnfinishedActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jmannotate.add(jmiUnfinished);&#xD;
    jAnnotateItem.setText(&quot;Annotate Experiment&quot;);&#xD;
    jAnnotateItem.setEnabled(false);&#xD;
    jAnnotateItem.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jAnnotateItemActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jmannotate.add(jAnnotateItem);&#xD;
    jMenu2.add(jmannotate);&#xD;
    jMenuGenetic.setText(&quot;Population Genetics&quot;);&#xD;
    jmiAddPopulationField.setText(&quot;Add population field&quot;);&#xD;
    jmiAddPopulationField.setEnabled(false);&#xD;
    jmiAddPopulationField.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jmiAddPopulationFieldActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jMenuGenetic.add(jmiAddPopulationField);&#xD;
    jMenuGenetic.add(jSeparator4);&#xD;
    jmiExportGenetics.setText(&quot;Export Data (occurrence matrix)&quot;);&#xD;
    jmiExportGenetics.setEnabled(false);&#xD;
    jmiExportGenetics.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jmiExportGeneticsActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jMenuGenetic.add(jmiExportGenetics);&#xD;
    jMenuGenetic.add(jSeparator7);&#xD;
    jMItransform.setText(&quot;Transform GelJXML file&quot;);&#xD;
    jMItransform.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jMItransformActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jMenuGenetic.add(jMItransform);&#xD;
    jMenu3.setText(&quot;Transform file from...&quot;);&#xD;
    jMenuGenetic.add(jMenu3);&#xD;
    jMenu2.add(jMenuGenetic);&#xD;
    jmMarkers.setText(&quot;Markers&quot;);&#xD;
    jmiaddmarker.setText(&quot;Add Marker&quot;);&#xD;
    jmiaddmarker.setEnabled(false);&#xD;
    jmiaddmarker.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jmiaddmarkerActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jmMarkers.add(jmiaddmarker);&#xD;
    jMenuItem5.setText(&quot;View Markers&quot;);&#xD;
    jMenuItem5.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jMenuItem5ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jmMarkers.add(jMenuItem5);&#xD;
    jMenu2.add(jmMarkers);&#xD;
    jMenu4.setText(&quot;Backups&quot;);&#xD;
    jMenuItem1.setText(&quot;Create backup&quot;);&#xD;
    jMenuItem1.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jMenuItem1ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jMenu4.add(jMenuItem1);&#xD;
    jMenuItem2.setText(&quot;Restore backup&quot;);&#xD;
    jMenuItem2.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jMenuItem2ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jMenu4.add(jMenuItem2);&#xD;
    jMenu2.add(jMenu4);&#xD;
    jMenuMemory.setText(&quot;Increase Memory&quot;);&#xD;
    jMenuMemory.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jMenuMemoryActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jMenu2.add(jMenuMemory);&#xD;
    jMenuBar1.add(jMenu2);&#xD;
    jMenu5.setText(&quot;Help&quot;);&#xD;
    jMenuItem7.setText(&quot;GelJ webpage&quot;);&#xD;
    jMenuItem7.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jMenuItem7ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jMenu5.add(jMenuItem7);&#xD;
    jMenuItem8.setText(&quot;GelJ manual&quot;);&#xD;
    jMenuItem8.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jMenuItem8ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jMenu5.add(jMenuItem8);&#xD;
    jMenuItem6.setText(&quot;About&quot;);&#xD;
    jMenuItem6.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
        public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
            jMenuItem6ActionPerformed(evt);&#xD;
        }&#xD;
    });&#xD;
    jMenu5.add(jMenuItem6);&#xD;
    jMenuBar1.add(jMenu5);&#xD;
    setJMenuBar(jMenuBar1);&#xD;
    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());&#xD;
    getContentPane().setLayout(layout);&#xD;
    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jsMainPane));&#xD;
    layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jsMainPane));&#xD;
    pack();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DCAQ8G4qEei47fqiwvb5mw" name="jbDeleteExpActionPerformed">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbDeleteExpActionPerformed&#xD;
    deleteexp();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DCA4AW4qEei47fqiwvb5mw" name="jbDuplicateCompActionPerformed">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbDuplicateCompActionPerformed&#xD;
    duplicatecomparison();&#xD;
    activateemptytoolbar();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DCBfEG4qEei47fqiwvb5mw" name="deletecomp">
              <language>JAVA</language>
              <body>&#xD;
    TreePath currentSelection = jtComparisons.getSelectionPath();&#xD;
    if (currentSelection != null) {&#xD;
        int reply = JOptionPane.showConfirmDialog(this, &quot;Do you want to remove this comparison? &quot;, &quot;Delete comparison&quot;, JOptionPane.YES_NO_OPTION);&#xD;
        if (reply == JOptionPane.YES_OPTION) {&#xD;
            DefaultMutableTreeNode currentNode = (DefaultMutableTreeNode) (currentSelection.getLastPathComponent());&#xD;
            MutableTreeNode parent = (MutableTreeNode) (currentNode.getParent());&#xD;
            if (parent != null) {&#xD;
                Comparison comp = (Comparison) currentNode.getUserObject();&#xD;
                deletecomparison(comp.getId());&#xD;
                lanes = new ArrayList&lt;>();&#xD;
                lanes = getLanesComparison(comp.getId());&#xD;
                updatelanes(false);&#xD;
                //                    treeModelComp.removeNodeFromParent(currentNode);&#xD;
                updatecomparisons(true, true);&#xD;
                cleanlanes();&#xD;
                disablelaneoptions();&#xD;
                double scale = jXImageView2.getScale();&#xD;
                jXImageView2.setImage(new BufferedImage(300, 200, TYPE_INT_ARGB));&#xD;
                jXImageView2.setScale(scale);&#xD;
                jToolBar3.setVisible(false);&#xD;
                jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(&quot;&quot;));&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DCBfEm4qEei47fqiwvb5mw" name="deleteexp">
              <language>JAVA</language>
              <body>&#xD;
    TreePath currentSelection = jtExperiments.getSelectionPath();&#xD;
    if (currentSelection != null) {&#xD;
        DefaultMutableTreeNode currentNode = (DefaultMutableTreeNode) (currentSelection.getLastPathComponent());&#xD;
        MutableTreeNode parent = (MutableTreeNode) (currentNode.getParent());&#xD;
        if (parent != null) {&#xD;
            Experiment exp = (Experiment) currentNode.getUserObject();&#xD;
            boolean ce = existscomparisonsexperiment(exp.getId());&#xD;
            if (ce) {&#xD;
                int reply = JOptionPane.showConfirmDialog(this, &quot;Some comparisons include lanes of this experiment.\n&quot; + &quot; If you remove the experiment, such comparisons will also be removed. \n&quot; + &quot;Do you want to remove this experiment?&quot;, &quot;Delete experiment&quot;, JOptionPane.YES_NO_OPTION);&#xD;
                if (reply == JOptionPane.YES_OPTION) {&#xD;
                    deletecomparisonsexperiment(exp.getId());&#xD;
                    deleteexperiment(exp.getId());&#xD;
                    updateexperiments(true, true);&#xD;
                    updatecomparisons(true, true);&#xD;
                    File folder = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/GelJDBImages/&quot; + studyid + &quot;/&quot; + getUser(userid).getUsername() + &quot;/experiments/&quot; + exp.getId());&#xD;
                    Utilities.deleteDir(folder);&#xD;
                    cleanlanes();&#xD;
                    double scale = jXImageView2.getScale();&#xD;
                    jXImageView2.setImage(new BufferedImage(300, 200, TYPE_INT_ARGB));&#xD;
                    jXImageView2.setScale(scale);&#xD;
                    jToolBar3.setVisible(false);&#xD;
                    jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(&quot;&quot;));&#xD;
                }&#xD;
            } else {&#xD;
                int reply = JOptionPane.showConfirmDialog(this, &quot;Do you want to remove this experiment? &quot; + &quot;This will remove all the lanes of the experiment&quot;, &quot;Delete experiment&quot;, JOptionPane.YES_NO_OPTION);&#xD;
                if (reply == JOptionPane.YES_OPTION) {&#xD;
                    deleteexperiment(exp.getId());&#xD;
                    lanes = new ArrayList&lt;>();&#xD;
                    lanes = getLanesComparison(exp.getId());&#xD;
                    updatelanes(false);&#xD;
                    updateexperiments(true, true);&#xD;
                    File folder = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/GelJDBImages/&quot; + studyid + &quot;/&quot; + getUser(userid).getUsername() + &quot;/experiments/&quot; + exp.getId());&#xD;
                    Utilities.deleteDir(folder);&#xD;
                    cleanlanes();&#xD;
                    double scale = jXImageView2.getScale();&#xD;
                    jXImageView2.setImage(new BufferedImage(300, 200, TYPE_INT_ARGB));&#xD;
                    jXImageView2.setScale(scale);&#xD;
                    jToolBar3.setVisible(false);&#xD;
                    jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(&quot;&quot;));&#xD;
                //                        treeModel.removeNodeFromParent(currentNode);&#xD;
                }&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DCD7Um4qEei47fqiwvb5mw" name="jxsearchlaneKeyReleased">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jxsearchlaneKeyReleased&#xD;
    searchlanes();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DCFJcW4qEei47fqiwvb5mw" name="jbAddFieldActionPerformed">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbAddFieldActionPerformed&#xD;
    String fieldName = JOptionPane.showInputDialog(&quot;Introduce the name of the new field&quot;);&#xD;
    if (additionalfields.contains(fieldName)) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;There is already a field with that name&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
    } else {&#xD;
        additionalfields.add(fieldName);&#xD;
        updatelanes(false);&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DCFwgW4qEei47fqiwvb5mw" name="jbdeletefieldActionPerformed">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbdeletefieldActionPerformed&#xD;
    String[] fields = new String[additionalfields.size()];&#xD;
    if (additionalfields.isEmpty()) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;There is not any additional field to remove&quot;, &quot;Field removal&quot;, JOptionPane.INFORMATION_MESSAGE);&#xD;
    }&#xD;
    for (int i = 0; i &lt; fields.length; i++) {&#xD;
        fields[i] = additionalfields.get(i);&#xD;
    }&#xD;
    String selectedfield = (String) JOptionPane.showInputDialog(this, &quot;Select the field to remove&quot;, &quot;&quot;, INFORMATION_MESSAGE, null, fields, fields[0]);&#xD;
    additionalfields.remove(selectedfield);&#xD;
    updatelanes(false);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DCGXkG4qEei47fqiwvb5mw" name="showall">
              <language>JAVA</language>
              <body>&#xD;
    updatelanes(true);&#xD;
    jtComparisons.setSelectionPath(null);&#xD;
    jtExperiments.setSelectionPath(null);&#xD;
    //        jbAdd.setEnabled(true);&#xD;
    jbDeleteLane.setEnabled(false);&#xD;
    jbDeleteLane.setVisible(false);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DCG-oG4qEei47fqiwvb5mw" name="jbAdvancedSearchLanesActionPerformed">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbAdvancedSearchLanesActionPerformed&#xD;
    SearchLanes sl = new SearchLanes(this);&#xD;
    sl.setVisible(true);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DCG-om4qEei47fqiwvb5mw" name="addlanetocomparison">
              <language>JAVA</language>
              <body>&#xD;
    int[] row = jtLanes.getSelectedRows();&#xD;
    if (row.length == 0) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;Select at least a lane to add&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
        return;&#xD;
    }&#xD;
    ArrayList&lt;LaneDB> selectedlanes = new ArrayList&lt;>();&#xD;
    for (int i = 0; i &lt; row.length; i++) {&#xD;
        selectedlanes.add(templanes.get(row[i]));&#xD;
    }&#xD;
    if (comparisons.isEmpty()) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;First of all, you need to create a comparison.&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
    } else {&#xD;
        Comparison[] comps = new Comparison[comparisons.size()];&#xD;
        for (int i = 0; i &lt; comps.length; i++) {&#xD;
            comps[i] = comparisons.get(i);&#xD;
        }&#xD;
        Comparison selected = (Comparison) JOptionPane.showInputDialog(this, &quot;Select a comparison&quot;, &quot;Select a comparison&quot;, INFORMATION_MESSAGE, null, comps, comps[0]);&#xD;
        ArrayList&lt;LaneDB> temp = selectedlanes;&#xD;
        temp.addAll(selected.getLanes());&#xD;
        if (!allsamemarker(temp)) {&#xD;
            JOptionPane.showMessageDialog(this, &quot;Not all the lanes have been normalised using the same marker&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
            return;&#xD;
        }&#xD;
        insertComparisonLane(selected.getId(), selectedlanes);&#xD;
        updatecomparisons(true, false);&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DCHlsW4qEei47fqiwvb5mw" name="jbDeleteLaneActionPerformed">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbDeleteLaneActionPerformed&#xD;
    int row = jtLanes.getSelectedRow();&#xD;
    DefaultMutableTreeNode node = (DefaultMutableTreeNode) jtComparisons.getLastSelectedPathComponent();&#xD;
    if (//Nothing is selected.     &#xD;
    node == null) {&#xD;
        return;&#xD;
    }&#xD;
    Comparison comp = (Comparison) node.getUserObject();&#xD;
    int compid = comp.getId();&#xD;
    if (row == -1) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;Select a lane first&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
    } else {&#xD;
        int reply = JOptionPane.showConfirmDialog(this, &quot;Do you want to remove this lane? &quot;, &quot;Delete lane&quot;, JOptionPane.YES_NO_OPTION);&#xD;
        if (reply == JOptionPane.YES_OPTION) {&#xD;
            deletelanecomparison(lanes.get(row).getId(), compid);&#xD;
            lanes = getLanesComparison(compid);&#xD;
            updatelanes(false);&#xD;
        }&#xD;
    }&#xD;
    updatecomparisons(true, false);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DCIMwW4qEei47fqiwvb5mw" name="jbSearchCompActionPerformed">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbSearchCompActionPerformed&#xD;
    SearchComparison sc = new SearchComparison(this);&#xD;
    sc.setVisible(true);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DCIz0W4qEei47fqiwvb5mw" name="jbNewCompActionPerformed">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbNewCompActionPerformed&#xD;
    double scale = jXImageView2.getScale();&#xD;
    jXImageView2.setImage(new BufferedImage(300, 200, TYPE_INT_ARGB));&#xD;
    jXImageView2.setScale(scale);&#xD;
    try {&#xD;
        createnewcomparison();&#xD;
    } catch (IOException ex) {&#xD;
        Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);&#xD;
    }&#xD;
    activateemptytoolbar();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DCJa4G4qEei47fqiwvb5mw" name="jxsearchlaneActionPerformed">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jxsearchlaneActionPerformed&#xD;
    searchlanes();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DCJa424qEei47fqiwvb5mw" name="jmiExitActionPerformed">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jmiExitActionPerformed&#xD;
    System.exit(0);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DCKB8m4qEei47fqiwvb5mw" name="jmiNewStudyActionPerformed">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jmiNewStudyActionPerformed&#xD;
    NewStudy ns = new NewStudy(this, true, false, this);&#xD;
    ns.setVisible(true);&#xD;
    if (studyid == -1) {&#xD;
        return;&#xD;
    }&#xD;
    enablefromopenornewstudy();&#xD;
    initialiseexperimentstree();&#xD;
    initialisecomparisonstree();&#xD;
    updateexperiments(true, true);&#xD;
    updatecomparisons(true, true);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DCKpAm4qEei47fqiwvb5mw" name="jmiCloseStudyActionPerformed">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jmiCloseStudyActionPerformed&#xD;
    disablefromclosestudy();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DCL3IG4qEei47fqiwvb5mw" name="jmOpenStudyActionPerformed">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jmOpenStudyActionPerformed&#xD;
    ArrayList&lt;Study> studies = getStudies(userid);&#xD;
    if (studies.isEmpty()) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;You have not created any study previously&quot;, &quot;&quot;, JOptionPane.INFORMATION_MESSAGE, null);&#xD;
        return;&#xD;
    }&#xD;
    Study s = (Study) JOptionPane.showInputDialog(this, &quot;Select a study&quot;, &quot;Open study&quot;, JOptionPane.QUESTION_MESSAGE, null, studies.toArray(), studies.get(0));&#xD;
    if (s == null) {&#xD;
        return;&#xD;
    }&#xD;
    studyid = s.getId();&#xD;
    enablefromopenornewstudy();&#xD;
    initialiseexperimentstree();&#xD;
    initialisecomparisonstree();&#xD;
    updateexperiments(true, true);&#xD;
    updatecomparisons(true, true);&#xD;
    double scale = jXImageView2.getScale();&#xD;
    jXImageView2.setImage(new BufferedImage(300, 200, TYPE_INT_ARGB));&#xD;
    jXImageView2.setScale(scale);&#xD;
    this.setTitle(&quot;GelJ (&quot; + s.getName() + &quot; )&quot;);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DCMeMG4qEei47fqiwvb5mw" name="jmiEditStudyActionPerformed">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jmiEditStudyActionPerformed&#xD;
    NewStudy ns = new NewStudy(this, true, true, this);&#xD;
    ns.setVisible(true);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DCNFQG4qEei47fqiwvb5mw" name="jmiDeleteStudyActionPerformed">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jmiDeleteStudyActionPerformed&#xD;
    int reply = JOptionPane.showConfirmDialog(this, &quot;Do you want to delete this study?&quot;, &quot;Delete study&quot;, JOptionPane.YES_NO_OPTION);&#xD;
    if (reply == JOptionPane.YES_OPTION) {&#xD;
        int id = studyid;&#xD;
        deletestudy(id);&#xD;
        File folder = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/GelJDBImages/&quot; + id);&#xD;
        Utilities.deleteDir(folder);&#xD;
        disablefromclosestudy();&#xD;
        double scale = jXImageView2.getScale();&#xD;
        jXImageView2.setImage(new BufferedImage(300, 200, TYPE_INT_ARGB));&#xD;
        jXImageView2.setScale(scale);&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DCNsUG4qEei47fqiwvb5mw" name="jbEditlaneActionPerformed">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbEditlaneActionPerformed&#xD;
    try {&#xD;
        disableall();&#xD;
        editlane();&#xD;
    } catch (IOException ex) {&#xD;
        Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DCOTYW4qEei47fqiwvb5mw" name="jbViewCompActionPerformed">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbViewCompActionPerformed&#xD;
    viewcomparison();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DCO6cW4qEei47fqiwvb5mw" name="jbFindSimilarLanesActionPerformed">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbFindSimilarLanesActionPerformed&#xD;
    findsimilarlanes();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DCQIkW4qEei47fqiwvb5mw" name="jmiUnfinishedActionPerformed">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jmiUnfinishedActionPerformed&#xD;
    try {&#xD;
        continueunfinished();&#xD;
    } catch (ClassNotFoundException ex) {&#xD;
        Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);&#xD;
    } catch (Exception ex) {&#xD;
        Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DCQvom4qEei47fqiwvb5mw" name="jbeditexpcompActionPerformed">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbeditexpcompActionPerformed&#xD;
    editexperiment();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DCRWsm4qEei47fqiwvb5mw" name="jButton1ActionPerformed">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jButton1ActionPerformed&#xD;
    double scale = jXImageView2.getScale();&#xD;
    jXImageView2.setScale(scale * 1.25);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DCR9wm4qEei47fqiwvb5mw" name="jButton2ActionPerformed">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jButton2ActionPerformed&#xD;
    double scale = jXImageView2.getScale();&#xD;
    jXImageView2.setScale(scale * 0.75);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DCSk0W4qEei47fqiwvb5mw" name="jMenuItem1ActionPerformed">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jMenuItem1ActionPerformed&#xD;
    createbackup();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DCTL4W4qEei47fqiwvb5mw" name="jMenuItem2ActionPerformed">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jMenuItem2ActionPerformed&#xD;
    disablefromclosestudy();&#xD;
    int option = JOptionPane.showConfirmDialog(this, &quot;If you restore a backup, all the new changes introduced in the\n&quot; + &quot;database will be lost. Do you really want to restore a backup?&quot;, &quot;Recover backup&quot;, JOptionPane.YES_NO_OPTION);&#xD;
    if (option == JOptionPane.YES_OPTION) {&#xD;
        try {&#xD;
            restorebackup();&#xD;
        } catch (IOException ex) {&#xD;
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);&#xD;
        }&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DCTy8W4qEei47fqiwvb5mw" name="jbexportActionPerformed">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbexportActionPerformed&#xD;
    TreePath currentSelection = jtExperiments.getSelectionPath();&#xD;
    if (currentSelection != null) {&#xD;
        DefaultMutableTreeNode currentNode = (DefaultMutableTreeNode) (currentSelection.getLastPathComponent());&#xD;
        MutableTreeNode parent = (MutableTreeNode) (currentNode.getParent());&#xD;
        if (parent != null) {&#xD;
            Experiment exp = (Experiment) currentNode.getUserObject();&#xD;
            try {&#xD;
                exportexperiment(exp);&#xD;
            } catch (IOException ex) {&#xD;
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DCUaAG4qEei47fqiwvb5mw" name="jbmodifycompActionPerformed">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbmodifycompActionPerformed&#xD;
    editcomparison();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DCUaA24qEei47fqiwvb5mw" name="jbdeletecompActionPerformed">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbdeletecompActionPerformed&#xD;
    deletecomp();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DCVBEm4qEei47fqiwvb5mw" name="jAnnotateItemActionPerformed">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jAnnotateItemActionPerformed&#xD;
    TreePath currentSelection = jtExperiments.getSelectionPath();&#xD;
    if (currentSelection != null) {&#xD;
        DefaultMutableTreeNode currentNode = (DefaultMutableTreeNode) (currentSelection.getLastPathComponent());&#xD;
        MutableTreeNode parent = (MutableTreeNode) (currentNode.getParent());&#xD;
        if (parent != null) {&#xD;
            Experiment experiment = (Experiment) currentNode.getUserObject();&#xD;
            String image = System.getProperty(&quot;user.dir&quot;) + &quot;/GelJDBImages/&quot; + experiment.getStudy().getId() + &quot;/&quot; + experiment.getUser().getUsername() + &quot;/experiments/&quot; + experiment.getId() + &quot;/&quot; + experiment.getImagename();&#xD;
            if (ij == null) {&#xD;
                ij = new ImageJ(NO_SHOW);&#xD;
            }&#xD;
            ImagePlus imp = WindowManager.getCurrentImage();&#xD;
            if (imp != null) {&#xD;
                imp.close();&#xD;
            }&#xD;
            imp = IJ.openImage(image);&#xD;
            imp.show();&#xD;
            ImageAnnotation ia = new ImageAnnotation(imp, this);&#xD;
        }&#xD;
    } else {&#xD;
        JOptionPane.showMessageDialog(this, &quot;You must select an experiment to annotate.&quot;);&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DCWPMG4qEei47fqiwvb5mw" name="jmiaddmarkerActionPerformed">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jmiaddmarkerActionPerformed&#xD;
    Menu m = new Menu();&#xD;
    if (ij == null) {&#xD;
        ij = new ImageJ(NO_SHOW);&#xD;
    }&#xD;
    disableall();&#xD;
    OpenDialog od = new OpenDialog(&quot;Load an image...&quot;);&#xD;
    Opener o = new Opener();&#xD;
    if (od.getPath() != null) {&#xD;
        ImagePlus imp1 = o.openImage(od.getPath());&#xD;
        if (imp1 == null) {&#xD;
            JOptionPane.showMessageDialog(m, &quot;Select a valid image file&quot;, &quot;Error&quot;, JOptionPane.ERROR_MESSAGE);&#xD;
            enableall();&#xD;
            return;&#xD;
        }&#xD;
        imp1.show();&#xD;
        IJ.run(imp1, &quot;Scale to Fit&quot;, &quot;&quot;);&#xD;
        imp1.getWindow().setLocked(true);&#xD;
        m.setWindowname(imp1.getTitle());&#xD;
        ImageWindow iw = imp1.getWindow();&#xD;
        iw.setLocked(false);&#xD;
        LaneManagerCanvas cc = new LaneManagerCanvas(imp1);&#xD;
        ImageWindow iw2 = new ImageWindow(imp1, cc);&#xD;
        iw2.setLocked(true);&#xD;
        iw.dispose();&#xD;
        MarkerSelection_1 s = new MarkerSelection_1(imp1, null, m, this);&#xD;
        imp1.getWindow().toFront();&#xD;
    } else {&#xD;
        enableall();&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DCW2QG4qEei47fqiwvb5mw" name="jMenuItem5ActionPerformed">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jMenuItem5ActionPerformed&#xD;
    ViewMarkers vm = new ViewMarkers(this, true);&#xD;
    vm.setVisible(true);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DCW2Q24qEei47fqiwvb5mw" name="jMenuItem6ActionPerformed">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jMenuItem6ActionPerformed&#xD;
    About about = new About(this, true);&#xD;
    about.setVisible(true);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DCXdUm4qEei47fqiwvb5mw" name="jMenuItem7ActionPerformed">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jMenuItem7ActionPerformed&#xD;
    try {&#xD;
        //Set your page url in this string. For eg, I m using URL for Google Search engine&#xD;
        String url = &quot;http://sourceforge.net/projects/gelj/&quot;;&#xD;
        java.awt.Desktop.getDesktop().browse(java.net.URI.create(url));&#xD;
    } catch (java.io.IOException e) {&#xD;
        System.out.println(e.getMessage());&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DCYEYm4qEei47fqiwvb5mw" name="jMenuItem8ActionPerformed">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jMenuItem8ActionPerformed&#xD;
    Manual manual = new Manual(this, true);&#xD;
    manual.setVisible(true);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DCYrcW4qEei47fqiwvb5mw" name="jSaveActionPerformed">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jSaveActionPerformed&#xD;
    DefaultMutableTreeNode node = (DefaultMutableTreeNode) jtComparisons.getLastSelectedPathComponent();&#xD;
    if (//Nothing is selected.     &#xD;
    node == null) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;This option is only available to save dendrograms&quot;, &quot;Save&quot;, JOptionPane.INFORMATION_MESSAGE);&#xD;
        return;&#xD;
    }&#xD;
    Comparison comp = (Comparison) node.getUserObject();&#xD;
    // Here&#xD;
    String image = System.getProperty(&quot;user.dir&quot;) + &quot;/GelJDBImages/&quot; + comp.getStudy().getId() + &quot;/&quot; + comp.getStudy().getUser().getUsername() + &quot;/comparisons/&quot; + comp.getId() + &quot;/dendrogram.tif&quot;;&#xD;
    ImagePlus imp = new ImagePlus(image);&#xD;
    IJ.saveAsTiff(imp, &quot;&quot;);&#xD;
    imp.close();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DCZSgW4qEei47fqiwvb5mw" name="jbShowMWActionPerformed">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbShowMWActionPerformed&#xD;
    try {&#xD;
        showMWofLane();&#xD;
    } catch (IOException ex) {&#xD;
        Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DCZ5km4qEei47fqiwvb5mw" name="jMenuMemoryActionPerformed">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jMenuMemoryActionPerformed&#xD;
    Memory m = new Memory();&#xD;
    m.run(&quot;&quot;);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DCagoW4qEei47fqiwvb5mw" name="jbExportNewickActionPerformed">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbExportNewickActionPerformed&#xD;
    try {&#xD;
        DefaultMutableTreeNode node = (DefaultMutableTreeNode) jtComparisons.getLastSelectedPathComponent();&#xD;
        if (//Nothing is selected.&#xD;
        node == null) {&#xD;
            JOptionPane.showMessageDialog(this, &quot;Select a comparison to edit&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
            return;&#xD;
        }&#xD;
        Comparison comp = (Comparison) node.getUserObject();&#xD;
        String newickfile = System.getProperty(&quot;user.dir&quot;) + &quot;/GelJDBImages/&quot; + comp.getStudy().getId() + &quot;/&quot; + comp.getStudy().getUser().getUsername() + &quot;/comparisons/&quot; + comp.getId() + &quot;/newick.txt&quot;;&#xD;
        File f = new File(newickfile);&#xD;
        Path p = Paths.get(f.getPath());&#xD;
        Charset c = Charset.defaultCharset();&#xD;
        List&lt;String> lines = Files.readAllLines(p, c);&#xD;
        if (f.exists()) {&#xD;
            SaveDialog sd = new SaveDialog(&quot;Export comparison to newick and nexus format...&quot;, &quot;tree&quot;, &quot;.txt&quot;);&#xD;
            String dir = sd.getDirectory();&#xD;
            String name = sd.getFileName();&#xD;
            if (dir == null || name == null) {&#xD;
                return;&#xD;
            }&#xD;
            File fout = new File(dir + &quot;newick_&quot; + name);&#xD;
            File nexusfile = new File(dir + &quot;nexus_&quot; + name);&#xD;
            PrintWriter writer = new PrintWriter(dir + &quot;nexus_&quot; + name, &quot;UTF-8&quot;);&#xD;
            writer.println(&quot;#NEXUS&quot;);&#xD;
            writer.println(&quot;BEGIN TREES;&quot;);&#xD;
            writer.println(&quot;  TREE tree1 = &quot; + lines.get(0));&#xD;
            writer.println(&quot;END;&quot;);&#xD;
            writer.close();&#xD;
            try {&#xD;
                Files.copy(f.toPath(), fout.toPath(), REPLACE_EXISTING);&#xD;
            } catch (IOException ex) {&#xD;
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);&#xD;
            }&#xD;
        } else {&#xD;
            JOptionPane.showMessageDialog(null, &quot;This comparison was created with a previous version of GelJ\n&quot; + &quot;and hence the newick file was not generated. To solve this problem\n &quot; + &quot;use the \&quot;Edit Comparison\&quot; button but without modifying any parameter.\n&quot; + &quot;This will create the newick file and you will be able to import it.&quot;, &quot;Export dendrogram to newick&quot;, INFORMATION_MESSAGE, null);&#xD;
            return;&#xD;
        }&#xD;
    } catch (IOException ex) {&#xD;
        Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DCbHsW4qEei47fqiwvb5mw" name="jbSimMatrixActionPerformed">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbSimMatrixActionPerformed&#xD;
    DefaultMutableTreeNode node = (DefaultMutableTreeNode) jtComparisons.getLastSelectedPathComponent();&#xD;
    if (//Nothing is selected.     &#xD;
    node == null) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;Select a comparison to edit&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
        return;&#xD;
    }&#xD;
    Comparison comp = (Comparison) node.getUserObject();&#xD;
    String[] options = { &quot;Similarity matrix&quot;, &quot;Distance matrix&quot; };&#xD;
    int choice = JOptionPane.showOptionDialog(this, &quot;Type of matrix&quot;, &quot;Export Matrix&quot;, JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE, null, options, &quot;Similarity matrix&quot;);&#xD;
    String matrix;&#xD;
    String type;&#xD;
    if (choice == 0) {&#xD;
        matrix = System.getProperty(&quot;user.dir&quot;) + &quot;/GelJDBImages/&quot; + comp.getStudy().getId() + &quot;/&quot; + comp.getStudy().getUser().getUsername() + &quot;/comparisons/&quot; + comp.getId() + &quot;/simmatrix.xls&quot;;&#xD;
        type = &quot;similarityMatrix&quot;;&#xD;
    } else {&#xD;
        matrix = System.getProperty(&quot;user.dir&quot;) + &quot;/GelJDBImages/&quot; + comp.getStudy().getId() + &quot;/&quot; + comp.getStudy().getUser().getUsername() + &quot;/comparisons/&quot; + comp.getId() + &quot;/distancematrix.xls&quot;;&#xD;
        type = &quot;distanceMatrix&quot;;&#xD;
    }&#xD;
    File f = new File(matrix);&#xD;
    if (f.exists()) {&#xD;
        SaveDialog sd = new SaveDialog(&quot;Export matrix&quot;, type, &quot;.xls&quot;);&#xD;
        String dir = sd.getDirectory();&#xD;
        String name = sd.getFileName();&#xD;
        if (dir == null || name == null) {&#xD;
            return;&#xD;
        }&#xD;
        File fout = new File(dir + name);&#xD;
        try {&#xD;
            Files.copy(f.toPath(), fout.toPath(), REPLACE_EXISTING);&#xD;
        } catch (IOException ex) {&#xD;
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);&#xD;
        }&#xD;
    } else {&#xD;
        JOptionPane.showMessageDialog(null, &quot;This comparison was created with a previous version of GelJ\n&quot; + &quot;and hence the similarity matrix was not generated. To solve this problem\n &quot; + &quot;use the \&quot;Edit Comparison\&quot; button but without modifying any parameter.\n&quot; + &quot;This will create the similarity matrix and you will be able to import it.&quot;, &quot;Export similarity matrix&quot;, INFORMATION_MESSAGE, null);&#xD;
        return;&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DCbuwW4qEei47fqiwvb5mw" name="jmiExportGeneticsActionPerformed">
              <language>JAVA</language>
              <body>&#xD;
    if (experiments.isEmpty()) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;Create an experiment first&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
        return;&#xD;
    }&#xD;
    NewComparison nc = new NewComparison(studyid);&#xD;
    nc.setNonSelectedExperiments(experiments);&#xD;
    ArrayList&lt;String> fields = new ArrayList&lt;>();&#xD;
    String[] names0 = { &quot;Genus&quot;, &quot;Species&quot;, &quot;Strain Number&quot;, &quot;Country&quot;, &quot;MLST&quot;, &quot;isMarker&quot;, &quot;Experiment&quot;, &quot;Comments&quot; };&#xD;
    for (String s : names0) {&#xD;
        fields.add(s);&#xD;
    }&#xD;
    for (String s : additionalfields) {&#xD;
        fields.add(s);&#xD;
    }&#xD;
    nc.setNonSelectedFields(fields);&#xD;
    db.PopulationGenetic.Step1 populationgenetics = new db.PopulationGenetic.Step1(nc, true);&#xD;
    populationgenetics.setVisible(true);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DCcV0W4qEei47fqiwvb5mw" name="jmiAddPopulationFieldActionPerformed">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jmiAddPopulationFieldActionPerformed&#xD;
    if (additionalfields.contains(&quot;Population&quot;)) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;You have already added the Population field&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
    } else {&#xD;
        additionalfields.add(&quot;Population&quot;);&#xD;
        updatelanes(false);&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DCc84G4qEei47fqiwvb5mw" name="jbSearchExpActionPerformed">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbSearchExpActionPerformed&#xD;
    SearchExperiments se = new SearchExperiments(this);&#xD;
    se.setVisible(true);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DCdj8G4qEei47fqiwvb5mw" name="jbImportActionPerformed">
              <language>JAVA</language>
              <body>&#xD;
    if (getExperimentsofOtherStudies(studyid).isEmpty()) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;There is not any experiment to import&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
        return;&#xD;
    }&#xD;
    ImportExperiment ie = new ImportExperiment(studyid, this);&#xD;
    ie.setVisible(true);&#xD;
    enableall();&#xD;
    activateemptytoolbar();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DCeLAG4qEei47fqiwvb5mw" name="jbimportexpfileActionPerformed">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbimportexpfileActionPerformed&#xD;
    OpenDialog od = new OpenDialog(&quot;Import an experiment...&quot;);&#xD;
    String path = od.getPath();&#xD;
    if (!path.endsWith(&quot;.zip&quot;)) {&#xD;
        JOptionPane.showMessageDialog(null, &quot;You must select a zip file&quot;, &quot;Import experiment&quot;, JOptionPane.ERROR_MESSAGE);&#xD;
    } else {&#xD;
        try {&#xD;
            unzipFunction(path);&#xD;
            File experiment = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/temp-geljdb/experiment.exp&quot;);&#xD;
            File lanesfile = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/temp-geljdb/experiment.lanes&quot;);&#xD;
            File marker = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/temp-geljdb/experiment.marker&quot;);&#xD;
            File user = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/temp-geljdb/experiment.user&quot;);&#xD;
            File addedinfo = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/temp-geljdb/experiment.adds&quot;);&#xD;
            if (!experiment.exists() || !lanesfile.exists() || !marker.exists() || !user.exists()) {&#xD;
                JOptionPane.showMessageDialog(null, &quot;This is not an experiment zip&quot;, &quot;Import experiment&quot;, JOptionPane.ERROR_MESSAGE);&#xD;
                return;&#xD;
            }&#xD;
            /// Reading user and lab&#xD;
            Path p = Paths.get(user.getPath());&#xD;
            Charset c = Charset.defaultCharset();&#xD;
            List&lt;String> linesuser = Files.readAllLines(p, c);&#xD;
            String lineuser = linesuser.get(0).replace(&quot;\&quot;&quot;, &quot;&quot;);&#xD;
            String[] partsuser = lineuser.split(&quot;,&quot;);&#xD;
            Lab l = new Lab(Integer.parseInt(partsuser[5]), partsuser[6], partsuser[7], partsuser[8]);&#xD;
            User u = new User(Integer.parseInt(partsuser[0]), partsuser[1], partsuser[2], partsuser[3], l);&#xD;
            /// Reading marker&#xD;
            p = Paths.get(marker.getPath());&#xD;
            List&lt;String> linemarker = Files.readAllLines(p, c);&#xD;
            String markerline = linemarker.get(0).replace(&quot;\&quot;&quot;, &quot;&quot;);&#xD;
            String[] partsmarker = markerline.split(&quot;,&quot;);&#xD;
            File temp = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/standardfiles/&quot; + partsmarker[1] + &quot;.marker&quot;);&#xD;
            Marker m1 = new Marker(Integer.parseInt(partsmarker[0]), partsmarker[1], temp.getPath());&#xD;
            /// Reading experiment&#xD;
            p = Paths.get(experiment.getPath());&#xD;
            List&lt;String> lines = Files.readAllLines(p, c);&#xD;
            String expline = lines.get(0).replace(&quot;\&quot;&quot;, &quot;&quot;);&#xD;
            String[] parts = expline.split(&quot;,&quot;);&#xD;
            SimpleDateFormat formatter = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;);&#xD;
            java.util.Date utilDate = formatter.parse(parts[2]);&#xD;
            java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());&#xD;
            Experiment e = new Experiment(Integer.parseInt(parts[0]), parts[1], sqlDate, parts[3], Integer.parseInt(parts[4]), parts[5], getStudy(studyid), m1, u);&#xD;
            /// Reading lanes added info&#xD;
            ArrayList&lt;String[]> lanesaddedinfo = new ArrayList&lt;>();&#xD;
            p = Paths.get(addedinfo.getPath());&#xD;
            List&lt;String> linesaddedinfolanes = Files.readAllLines(p, c);&#xD;
            for (String s : linesaddedinfolanes) {&#xD;
                String[] partslanes = s.replace(&quot;\&quot;&quot;, &quot;&quot;).split(&quot;,&quot;);&#xD;
                lanesaddedinfo.add(partslanes);&#xD;
            }&#xD;
            /// Reading lanes&#xD;
            p = Paths.get(lanesfile.getPath());&#xD;
            List&lt;String> lineslanes = Files.readAllLines(p, c);&#xD;
            ArrayList&lt;LaneDB> lanesDB = new ArrayList&lt;>();&#xD;
            for (String s : lineslanes) {&#xD;
                String[] partslanes = s.replace(&quot;\&quot;&quot;, &quot;&quot;).split(&quot;,&quot;);&#xD;
                LaneDB lane = new LaneDB(Integer.parseInt(partslanes[0]), partslanes[1], partslanes[2], partslanes[3], partslanes[4], partslanes[5], Boolean.parseBoolean(partslanes[6]), partslanes[7], e);&#xD;
                for (int i = 0; i &lt; lanesaddedinfo.size(); i++) {&#xD;
                    if (Integer.parseInt(lanesaddedinfo.get(i)[3]) == lane.getId()) {&#xD;
                        lane.addnewinfo(lanesaddedinfo.get(i)[1], lanesaddedinfo.get(i)[2]);&#xD;
                    }&#xD;
                }&#xD;
                lanesDB.add(lane);&#xD;
            }&#xD;
            /// Folder where all information is originally saved&#xD;
            File folderorigin = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/temp-geljdb/GelJDBImages/&quot; + parts[6] + &quot;/&quot; + u.getUsername() + &quot;/experiments/&quot; + e.getId() + &quot;/&quot;);&#xD;
            /// Adding lab to the database if it does not exists&#xD;
            int labid = existslab_id(l.getName(), l.getCity(), l.getCountry());&#xD;
            if (labid != -1) {&#xD;
                l.setId(labid);&#xD;
            } else {&#xD;
                l.setId(lastLabid());&#xD;
                insertLab(l);&#xD;
            }&#xD;
            /// Adding user to the database if it does not exists&#xD;
            User u2 = existssuser(u.getName(), u.getSurname());&#xD;
            if (u2 != null) {&#xD;
                int option = JOptionPane.showConfirmDialog(null, &quot;The imported experiment was created by &quot; + u.getName() + &quot; &quot; + u.getSurname() + &quot;.\nThe database already contains a user called &quot; + u.getName() + &quot; &quot; + u.getSurname() + &quot; from &quot; + u2.getLab().getName() + &quot; (&quot; + u2.getLab().getCity() + &quot; - &quot; + u2.getLab().getCountry() + &quot;).\n&quot; + &quot;Are they the same person?&quot;, &quot;Same user&quot;, JOptionPane.YES_NO_OPTION);&#xD;
                if (option == JOptionPane.YES_OPTION) {&#xD;
                    u = u2;&#xD;
                } else {&#xD;
                    u.setId(lastUserid());&#xD;
                    insertUser(u);&#xD;
                }&#xD;
            } else {&#xD;
                u.setId(lastUserid());&#xD;
                insertUser(u);&#xD;
            }&#xD;
            /// Adding marker to the database if it does not exists&#xD;
            if (m1.getId() != 0 &amp;&amp; m1.getId() != 1 &amp;&amp; m1.getId() != 2) {&#xD;
                int mid = existsmarker_id(m1.getName());&#xD;
                if (mid != -1) {&#xD;
                    m1.setId(mid);&#xD;
                } else {&#xD;
                    m1.setId(lastMarkerid());&#xD;
                    insertMarker(m1);&#xD;
                    File markerorigin = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/temp-geljdb/standardfiles/&quot; + m1.getName() + &quot;.marker&quot;);&#xD;
                    Files.copy(markerorigin.toPath(), temp.toPath());&#xD;
                    File markerorigininfo = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/temp-geljdb/standardfiles/info/&quot; + m1.getName() + &quot;.info&quot;);&#xD;
                    File temp1 = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/standardfiles/info/&quot; + partsmarker[1] + &quot;.info&quot;);&#xD;
                    Files.copy(markerorigininfo.toPath(), temp1.toPath());&#xD;
                    File markeroriginpos = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/temp-geljdb/standardfiles/info/&quot; + m1.getName() + &quot;.pos&quot;);&#xD;
                    File temp2 = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/standardfiles/info/&quot; + partsmarker[1] + &quot;.pos&quot;);&#xD;
                    Files.copy(markeroriginpos.toPath(), temp2.toPath());&#xD;
                }&#xD;
            }&#xD;
            /// Adding experiment to the database&#xD;
            int expidoriginal = e.getId();&#xD;
            e.setId(lastExperimentid());&#xD;
            e.setName(&quot;Imported-&quot; + e.getName());&#xD;
            insertExperiment(e);&#xD;
            /// Making experiment directory&#xD;
            File folderexp = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/GelJDBImages/&quot; + studyid + &quot;/&quot; + e.getUser().getUsername() + &quot;/experiments/&quot; + e.getId() + &quot;/&quot;);&#xD;
            folderexp.mkdir();&#xD;
            /// Copying image file&#xD;
            File imageorigin = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/temp-geljdb/GelJDBImages/&quot; + parts[6] + &quot;/&quot; + u.getUsername() + &quot;/experiments/&quot; + expidoriginal + &quot;/&quot; + e.getImagename());&#xD;
            //                JOptionPane.showMessageDialog(null, imageorigin.getPath());&#xD;
            File imagedestine = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/GelJDBImages/&quot; + studyid + &quot;/&quot; + e.getUser().getUsername() + &quot;/experiments/&quot; + e.getId() + &quot;/&quot; + e.getImagename());&#xD;
            //                JOptionPane.showMessageDialog(null, imagedestine.getPath());&#xD;
            //// Error here&#xD;
            Files.move(imageorigin.toPath(), imagedestine.toPath(), REPLACE_EXISTING);&#xD;
            //                JOptionPane.showMessageDialog(null, &quot;test&quot;);&#xD;
            /// Lanes folder&#xD;
            File folderlanes = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/GelJDBImages/&quot; + studyid + &quot;/&quot; + e.getUser().getUsername() + &quot;/experiments/&quot; + e.getId() + &quot;/lanes/&quot;);&#xD;
            folderlanes.mkdir();&#xD;
            /// Adding lanes to the database&#xD;
            int laneid = lastLaneid();&#xD;
            for (LaneDB l0 : lanesDB) {&#xD;
                int lid = l0.getId();&#xD;
                LaneDB newlane = l0;&#xD;
                newlane.setId(laneid);&#xD;
                insertLane(newlane);&#xD;
                String folderoriginlane = System.getProperty(&quot;user.dir&quot;) + &quot;/temp-geljdb/GelJDBImages/&quot; + parts[6] + &quot;/&quot; + u.getUsername() + &quot;/experiments/&quot; + expidoriginal + &quot;/lanes/&quot; + lid + &quot;/&quot;;&#xD;
                String folderlanepath = System.getProperty(&quot;user.dir&quot;) + &quot;/GelJDBImages/&quot; + studyid + &quot;/&quot; + e.getUser().getUsername() + &quot;/experiments/&quot; + e.getId() + &quot;/lanes/&quot; + laneid + &quot;/&quot;;&#xD;
                File folderlane = new File(folderlanepath);&#xD;
                folderlane.mkdir();&#xD;
                File curveorigin = new File(folderoriginlane + lid + &quot;.curve&quot;);&#xD;
                File curvedestiny = new File(folderlanepath + laneid + &quot;.curve&quot;);&#xD;
                Files.copy(curveorigin.toPath(), curvedestiny.toPath());&#xD;
                File mworigin = new File(folderoriginlane + lid + &quot;.mw&quot;);&#xD;
                File mwdestiny = new File(folderlanepath + laneid + &quot;.mw&quot;);&#xD;
                Files.copy(mworigin.toPath(), mwdestiny.toPath());&#xD;
                File bandsorigin = new File(folderoriginlane + lid + &quot;.bands&quot;);&#xD;
                File bandsdestiny = new File(folderlanepath + laneid + &quot;.bands&quot;);&#xD;
                Files.copy(bandsorigin.toPath(), bandsdestiny.toPath());&#xD;
                File bandsorigin2 = new File(folderoriginlane + lid + &quot;.bands2&quot;);&#xD;
                File bandsdestiny2 = new File(folderlanepath + laneid + &quot;.bands2&quot;);&#xD;
                Files.copy(bandsorigin2.toPath(), bandsdestiny2.toPath());&#xD;
                File imorigin = new File(folderoriginlane + lid + &quot;.tiff&quot;);&#xD;
                File imdestiny = new File(folderlanepath + laneid + &quot;.tiff&quot;);&#xD;
                Files.copy(imorigin.toPath(), imdestiny.toPath());&#xD;
                File roiorigin = new File(folderoriginlane + lid + &quot;.roi&quot;);&#xD;
                File roidestiny = new File(folderlanepath + laneid + &quot;.roi&quot;);&#xD;
                Files.copy(roiorigin.toPath(), roidestiny.toPath());&#xD;
                laneid++;&#xD;
            }&#xD;
            File tempgeldb = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/temp-geljdb&quot;);&#xD;
            deleteDir(tempgeldb);&#xD;
            updateexperiments(true, true);&#xD;
            enableall();&#xD;
            activateemptytoolbar();&#xD;
        } catch (IOException ex) {&#xD;
            Logger.getLogger(ImportExperiment.class.getName()).log(Level.SEVERE, null, ex);&#xD;
        } catch (ParseException ex) {&#xD;
            Logger.getLogger(ImportExperiment.class.getName()).log(Level.SEVERE, null, ex);&#xD;
        }&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DCfZIG4qEei47fqiwvb5mw" name="jbDuplicateExpActionPerformed">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbDuplicateExpActionPerformed&#xD;
    try {&#xD;
        duplicateexperiment();&#xD;
        double scale = jXImageView2.getScale();&#xD;
        jXImageView2.setImage(new BufferedImage(300, 200, TYPE_INT_ARGB));&#xD;
        jXImageView2.setScale(scale);&#xD;
        activateemptytoolbar();&#xD;
    } catch (IOException ex) {&#xD;
        Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DCgAMW4qEei47fqiwvb5mw" name="jbNewExpActionPerformed" specification="_DCfZIW4qEei47fqiwvb5mw">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jbNewExpActionPerformed&#xD;
    newexperiment();&#xD;
    activateemptytoolbar();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DCgnQW4qEei47fqiwvb5mw" name="jMItransformActionPerformed">
              <language>JAVA</language>
              <body>&#xD;
    //GEN-FIRST:event_jMItransformActionPerformed&#xD;
    OpenDialog od = new OpenDialog(&quot;Select a GelJXML file...&quot;);&#xD;
    String name = od.getFileName();&#xD;
    String path = od.getPath();&#xD;
    if (!path.endsWith(&quot;.xml&quot;)) {&#xD;
        JOptionPane.showMessageDialog(null, &quot;You must select an XML file&quot;, &quot;Load a new standard&quot;, JOptionPane.ERROR_MESSAGE);&#xD;
    } else {&#xD;
        if (name.contains(&quot;.&quot;)) {&#xD;
            name = name.substring(0, name.indexOf(&quot;.&quot;));&#xD;
        }&#xD;
        Transformer t = new Transformer(name, path, true);&#xD;
        t.setVisible(true);&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DCiccG4qEei47fqiwvb5mw" name="duplicateexperiment">
              <language>JAVA</language>
              <body>&#xD;
    TreePath currentSelection = jtExperiments.getSelectionPath();&#xD;
    if (currentSelection != null) {&#xD;
        DefaultMutableTreeNode currentNode = (DefaultMutableTreeNode) (currentSelection.getLastPathComponent());&#xD;
        MutableTreeNode parent = (MutableTreeNode) (currentNode.getParent());&#xD;
        if (parent != null) {&#xD;
            Experiment exp = (Experiment) currentNode.getUserObject();&#xD;
            ImportExperiment.duplicateexperiment(exp, studyid);&#xD;
            updateexperiments(true, true);&#xD;
        }&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DCnU8G4qEei47fqiwvb5mw" name="continueunfinished">
              <language>JAVA</language>
              <body>&#xD;
    ArrayList&lt;UnfinishedExperiment> exps = getUnfinishedExperiments(studyid);&#xD;
    if (!exps.isEmpty()) {&#xD;
        disableall();&#xD;
        if (ij == null) {&#xD;
            ij = new ImageJ(NO_SHOW);&#xD;
        }&#xD;
        UnfinishedExperiment ue = (UnfinishedExperiment) JOptionPane.showInputDialog(this, &quot;Select the unfinished experiment&quot;, &quot;Finish experiment&quot;, JOptionPane.QUESTION_MESSAGE, null, exps.toArray(), exps.get(0));&#xD;
        if (ue != null) {&#xD;
            Menu m = new Menu();&#xD;
            disableall();&#xD;
            m.setUser(userid);&#xD;
            Load ld = new Load(m);&#xD;
            String dir = System.getProperty(&quot;user.dir&quot;) + &quot;/GelJDBImages/&quot; + ue.getStudy().getId() + &quot;/&quot; + ue.getStudy().getUser().getUsername() + &quot;/unfinished/&quot;;&#xD;
            String name = ue.getId() + &quot;.zip&quot;;&#xD;
            ld.loadzipfile(dir + name);&#xD;
            //                 Assistant a = new Assistant(m, this);&#xD;
            Image_Assistant a = new Image_Assistant(m, this);&#xD;
            switch(ue.getStep()) {&#xD;
                case 0:&#xD;
                    //                        a.cropimage();&#xD;
                    a.recoverstep0(IJ.getImage());&#xD;
                    break;&#xD;
                case 1:&#xD;
                    //                        a.invertcolour();&#xD;
                    a.recoverstep1(IJ.getImage());&#xD;
                    break;&#xD;
                case 2:&#xD;
                    //                        a.autoadjustbc();&#xD;
                    a.recoverstep2(IJ.getImage());&#xD;
                    break;&#xD;
                case 3:&#xD;
                    //                        a.preprocessimage();&#xD;
                    a.recoverstep3(IJ.getImage());&#xD;
                    break;&#xD;
                case 4:&#xD;
                    //                        a.lightdarkbackground();&#xD;
                    a.recoverstep4(IJ.getImage());&#xD;
                    break;&#xD;
                case 5:&#xD;
                    //                        a.autolanedetection();&#xD;
                    a.recoverstep4(IJ.getImage());&#xD;
                    break;&#xD;
                case 6:&#xD;
                    //                        a.autobanddetection();&#xD;
                    a.recoverstep6(IJ.getImage());&#xD;
                    break;&#xD;
                case 7:&#xD;
                    //                        a.normalisegel();&#xD;
                    a.recoverstep6(IJ.getImage());&#xD;
                    break;&#xD;
                case 8:&#xD;
                    //                        a.normalisegel();&#xD;
                    a.recoverstep6(IJ.getImage());&#xD;
                    break;&#xD;
                //                        break;&#xD;
                default:&#xD;
                    //                        a.cropimage();&#xD;
                    a.recoverstep0(IJ.getImage());&#xD;
                    break;&#xD;
            }&#xD;
            UnfinishedExperimentsQueries.deleteunfinishedexperiment(ue.getId());&#xD;
            IJ.getImage().getWindow().toFront();&#xD;
        } else {&#xD;
            enableall();&#xD;
        }&#xD;
    } else {&#xD;
        JOptionPane.showMessageDialog(this, &quot;There is not any unfinished experiment&quot;);&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DCnU8m4qEei47fqiwvb5mw" name="findsimilarlanes">
              <language>JAVA</language>
              <body>&#xD;
    if (ij != null) {&#xD;
        ij.quit();&#xD;
        ij = null;&#xD;
    }&#xD;
    if (IJ.getInstance() != null) {&#xD;
        IJ.getInstance().quit();&#xD;
        ij = null;&#xD;
    }&#xD;
    int[] row = jtLanes.getSelectedRows();&#xD;
    if (row.length != 1) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;Select a lane to find lanes that are similar&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
        return;&#xD;
    }&#xD;
    LaneDB lane = templanes.get(row[0]);&#xD;
    FindSimilarities fs = new FindSimilarities(lane);&#xD;
    fs.setVisible(true);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DCn8AW4qEei47fqiwvb5mw" name="viewcomparison">
              <language>JAVA</language>
              <body>&#xD;
    if (ij != null) {&#xD;
        ij.quit();&#xD;
        ij = null;&#xD;
    }&#xD;
    if (IJ.getInstance() != null) {&#xD;
        IJ.getInstance().quit();&#xD;
        ij = null;&#xD;
    }&#xD;
    DefaultMutableTreeNode node = (DefaultMutableTreeNode) jtComparisons.getLastSelectedPathComponent();&#xD;
    if (//Nothing is selected.     &#xD;
    node == null) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;Select a comparison to edit&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
        return;&#xD;
    }&#xD;
    Comparison comp = (Comparison) node.getUserObject();&#xD;
    NewComparison nc = comp.toNewComparison(experiments);&#xD;
    ArrayList&lt;String> fields = new ArrayList&lt;>();&#xD;
    String[] names0 = { &quot;Genus&quot;, &quot;Species&quot;, &quot;Strain Number&quot;, &quot;Country&quot;, &quot;MLST&quot;, &quot;isMarker&quot;, &quot;Experiment&quot;, &quot;Comments&quot; };&#xD;
    for (String s : names0) {&#xD;
        fields.add(s);&#xD;
    }&#xD;
    for (String s : additionalfields) {&#xD;
        fields.add(s);&#xD;
    }&#xD;
    nc.setNonSelectedFields(fields);&#xD;
    ViewComparison vc = new ViewComparison(nc, comp);&#xD;
    vc.setVisible(true);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DCn8A24qEei47fqiwvb5mw" name="editexperiment">
              <language>JAVA</language>
              <body>&#xD;
    DefaultMutableTreeNode node = (DefaultMutableTreeNode) jtExperiments.getLastSelectedPathComponent();&#xD;
    if (//Nothing is selected.     &#xD;
    node == null) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;Select an experiment to edit&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
        return;&#xD;
    }&#xD;
    Experiment exp = (Experiment) node.getUserObject();&#xD;
    NewExperiment ne = new NewExperiment(this, true, exp);&#xD;
    ne.setVisible(true);&#xD;
    lanes = getlanesexperiment(exp.getId(), true);&#xD;
    templanes = lanes;&#xD;
    updatelanes(false);&#xD;
    activateexperimentstoolbar();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DCojEG4qEei47fqiwvb5mw" name="editlane">
              <language>JAVA</language>
              <body>&#xD;
    if (ij == null) {&#xD;
        ij = new ImageJ(NO_SHOW);&#xD;
    }&#xD;
    ImagePlus imp = WindowManager.getCurrentImage();&#xD;
    if (imp != null) {&#xD;
        imp.close();&#xD;
    }&#xD;
    int[] row = jtLanes.getSelectedRows();&#xD;
    if (row.length == 0) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;Select one lane&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
        return;&#xD;
    }&#xD;
    if (row.length > 1) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;Select only one lane&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
        return;&#xD;
    }&#xD;
    LaneDB lane = templanes.get(row[0]);&#xD;
    if (lane.isIsMarker()) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;Standard lanes cannot be edited&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
        return;&#xD;
    }&#xD;
    IJ.open(System.getProperty(&quot;user.dir&quot;) + &quot;/GelJDBImages/&quot; + studyid + &quot;/&quot; + getUser(userid).getUsername() + &quot;/experiments/&quot; + lane.getExperiment().getId() + &quot;/&quot; + lane.getExperiment().getImagename());&#xD;
    try {&#xD;
        EditViewLaneDB eldb = new EditViewLaneDB(lane, true, this);&#xD;
    } catch (IOException ex) {&#xD;
        Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DCojEm4qEei47fqiwvb5mw" name="showMWofLane">
              <language>JAVA</language>
              <body>&#xD;
    int[] row = jtLanes.getSelectedRows();&#xD;
    if (row.length == 0) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;Select one lane&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
        return;&#xD;
    }&#xD;
    if (row.length > 1) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;Select only one lane&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
        return;&#xD;
    }&#xD;
    LaneDB lane = templanes.get(row[0]);&#xD;
    Lane mainlane = LaneDBtoLaneIJ(lane);&#xD;
    double[] mws = mainlane.getStdpositionbands();&#xD;
    ArrayList list = new ArrayList();&#xD;
    String headings = &quot;Lane\t&quot;;&#xD;
    for (int i = 0; i &lt; mws.length; i++) {&#xD;
        String row1 = &quot;&quot; + mws[i];&#xD;
        list.add(row1);&#xD;
    }&#xD;
    TextWindow textWindow = new TextWindow(&quot;Lane MWs&quot;, headings, list, 600, 400);&#xD;
    textWindow.setVisible(true);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DCpKIW4qEei47fqiwvb5mw" name="viewlane">
              <language>JAVA</language>
              <body>&#xD;
    if (ij != null) {&#xD;
        ij.quit();&#xD;
        ij = null;&#xD;
    }&#xD;
    if (IJ.getInstance() != null) {&#xD;
        IJ.getInstance().quit();&#xD;
    }&#xD;
    ImagePlus imp = WindowManager.getCurrentImage();&#xD;
    if (imp != null) {&#xD;
        imp.close();&#xD;
    }&#xD;
    int[] row = jtLanes.getSelectedRows();&#xD;
    if (row.length == 0) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;Select at least one lane&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
        return;&#xD;
    }&#xD;
    Opener o = new Opener();&#xD;
    String imageName = System.getProperty(&quot;user.dir&quot;) + &quot;/GelJDBImages/&quot; + studyid + &quot;/&quot; + getUser(userid).getUsername() + &quot;/experiments/&quot; + templanes.get(row[0]).getExperiment().getId() + &quot;/&quot; + templanes.get(row[0]).getExperiment().getImagename();&#xD;
    if (imageName.endsWith(&quot;.TIFF&quot;)) {&#xD;
        imageName = imageName.replace(&quot;.TIFF&quot;, &quot;.tif&quot;);&#xD;
    }&#xD;
    if (imageName.endsWith(&quot;.TIF&quot;)) {&#xD;
        imageName = imageName.replace(&quot;.TIF&quot;, &quot;.tif&quot;);&#xD;
    }&#xD;
    imp = o.openImage(imageName);&#xD;
    LaneDB[] lanes = new LaneDB[row.length];&#xD;
    for (int i = 0; i &lt; row.length; i++) {&#xD;
        lanes[i] = templanes.get(row[i]);&#xD;
        String path = System.getProperty(&quot;user.dir&quot;) + &quot;/GelJDBImages/&quot; + studyid + &quot;/&quot; + getUser(userid).getUsername() + &quot;/experiments/&quot; + lanes[i].getExperiment().getId() + &quot;/lanes/&quot; + lanes[i].getId() + &quot;/&quot; + lanes[i].getId() + &quot;.roi&quot;;&#xD;
        Roi roi = RoiDecoder.open(path);&#xD;
        roi.setStrokeWidth(3);&#xD;
        imp.setRoi(roi);&#xD;
        IJ.run(imp, &quot;Add Selection...&quot;, &quot;&quot;);&#xD;
        imp.deleteRoi();&#xD;
    }&#xD;
    ImagePlus imp2 = imp.flatten();&#xD;
    imp.close();&#xD;
    //        imp2.show();&#xD;
    double scale = jXImageView2.getScale();&#xD;
    jXImageView2.setImage(imp2.getImage());&#xD;
    jXImageView2.setScale(scale);&#xD;
    imp2.close();&#xD;
//        try {&#xD;
//            for (int i = 0; i &lt; row.length; i++) {&#xD;
//                new EditViewLaneDB(lanes[i], false);&#xD;
//            }&#xD;
//        } catch (IOException ex) {&#xD;
//            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);&#xD;
//        }&#xD;
//        imp2.getWindow().setAlwaysOnTop(true);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DCpKI24qEei47fqiwvb5mw" name="newexperiment" specification="_DCpKIm4qEei47fqiwvb5mw">
              <language>JAVA</language>
              <body>&#xD;
    if (ij == null) {&#xD;
        ij = new ImageJ(NO_SHOW);&#xD;
    }&#xD;
    ImagePlus imp1 = WindowManager.getCurrentImage();&#xD;
    if (imp1 != null) {&#xD;
        imp1.changes = false;&#xD;
        imp1.close();&#xD;
    }&#xD;
    jtComparisons.setSelectionPath(null);&#xD;
    Menu m = new Menu();&#xD;
    disableall();&#xD;
    m.setUser(userid);&#xD;
    /// Change assistants&#xD;
    //        Image_Assistant a = new ij.workspace.GelJ.Assistant3.Image_Assistant(m, this);&#xD;
    Image_Assistant a = new ij.workspace.GelJ.Assistant4.Image_Assistant(m, this);&#xD;
    a.runAssistant();&#xD;
//        ImageAssistant a = new ImageAssistant(m, this);&#xD;
//        a.runAssistant();&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DCpxMW4qEei47fqiwvb5mw" name="searchlanes">
              <language>JAVA</language>
              <body>&#xD;
    String s = jxsearchlane.getText();&#xD;
    ArrayList&lt;LaneDB> newlanes = searchlanesstring(lanes, s);&#xD;
    templanes = newlanes;&#xD;
    updatelanes(newlanes);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DCpxM24qEei47fqiwvb5mw" name="disablenoexperiment">
              <language>JAVA</language>
              <body>&#xD;
    //        jbEditExp.setEnabled(false);&#xD;
    jbDeleteExp.setEnabled(false);&#xD;
    jbSearchExp.setEnabled(false);&#xD;
    jbNewComp.setEnabled(false);&#xD;
    //        jbEditComp.setEnabled(false);&#xD;
    jbViewComp.setEnabled(false);&#xD;
    jbExportNewick.setEnabled(false);&#xD;
    jbSimMatrix.setEnabled(false);&#xD;
    jbDuplicateExp.setEnabled(false);&#xD;
    jbDuplicateComp.setEnabled(false);&#xD;
    //        jbDeleteComp.setEnabled(false);&#xD;
    jbSearchComp.setEnabled(false);&#xD;
    jbAddField.setEnabled(false);&#xD;
    jbdeletefield.setEnabled(false);&#xD;
    jbFindSimilarLanes.setEnabled(false);&#xD;
    jxsearchlane.setEnabled(false);&#xD;
    jbAdvancedSearchLanes.setEnabled(false);&#xD;
    //        jbViewLane.setEnabled(false);&#xD;
    jbEditlane.setEnabled(false);&#xD;
    //        jmiComparison.setEnabled(false);&#xD;
    //        jbAdd.setEnabled(false);&#xD;
    jbDeleteLane.setVisible(false);&#xD;
    jbDeleteLane.setEnabled(false);&#xD;
//        jbAll.setEnabled(false);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DCpxNW4qEei47fqiwvb5mw" name="enablelaneoptionsexperiment">
              <language>JAVA</language>
              <body>&#xD;
    jbAddField.setEnabled(true);&#xD;
    jbdeletefield.setEnabled(true);&#xD;
    jbFindSimilarLanes.setEnabled(true);&#xD;
    jxsearchlane.setEnabled(true);&#xD;
    jbAdvancedSearchLanes.setEnabled(true);&#xD;
    //        jbViewLane.setEnabled(true);&#xD;
    jbEditlane.setEnabled(true);&#xD;
    jbShowMW.setEnabled(true);&#xD;
    //        jmiComparison.setEnabled(true);&#xD;
    //        jbAdd.setEnabled(true);&#xD;
    jbDeleteLane.setEnabled(false);&#xD;
    jbDeleteLane.setVisible(false);&#xD;
    jSave.setEnabled(true);&#xD;
//        jbAll.setEnabled(true);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DCqYQW4qEei47fqiwvb5mw" name="enablelaneoptionscomparison">
              <language>JAVA</language>
              <body>&#xD;
    jbAddField.setEnabled(true);&#xD;
    jbdeletefield.setEnabled(true);&#xD;
    jbFindSimilarLanes.setEnabled(true);&#xD;
    jxsearchlane.setEnabled(true);&#xD;
    jbAdvancedSearchLanes.setEnabled(true);&#xD;
    //        jbViewLane.setEnabled(true);&#xD;
    jbEditlane.setEnabled(true);&#xD;
    jbShowMW.setEnabled(true);&#xD;
    //        jbAdd.setEnabled(false);&#xD;
    jbDeleteLane.setEnabled(true);&#xD;
    jbDeleteLane.setVisible(true);&#xD;
    jSave.setEnabled(true);&#xD;
//        jbAll.setEnabled(true);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DCqYQ24qEei47fqiwvb5mw" name="disablelaneoptions">
              <language>JAVA</language>
              <body>&#xD;
    jbAddField.setEnabled(false);&#xD;
    jbdeletefield.setEnabled(false);&#xD;
    jbFindSimilarLanes.setEnabled(false);&#xD;
    jxsearchlane.setEnabled(false);&#xD;
    jbAdvancedSearchLanes.setEnabled(false);&#xD;
    //        jbViewLane.setEnabled(false);&#xD;
    jbEditlane.setEnabled(false);&#xD;
    jbShowMW.setEnabled(false);&#xD;
    //        jbAdd.setEnabled(false);&#xD;
    jbDeleteLane.setEnabled(false);&#xD;
    jbDeleteLane.setVisible(false);&#xD;
//        jbAll.setEnabled(false);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DCqYRW4qEei47fqiwvb5mw" name="disablenocomparison">
              <language>JAVA</language>
              <body>&#xD;
    //        jbEditComp.setEnabled(false);&#xD;
    jbViewComp.setEnabled(false);&#xD;
    jbExportNewick.setEnabled(false);&#xD;
    jbSimMatrix.setEnabled(false);&#xD;
    jbDuplicateComp.setEnabled(false);&#xD;
    //        jbDeleteComp.setEnabled(false);&#xD;
    jbSearchComp.setEnabled(false);&#xD;
    jSave.setEnabled(false);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DCq_UW4qEei47fqiwvb5mw" name="enablecomparison">
              <language>JAVA</language>
              <body>&#xD;
    //        jbEditComp.setEnabled(true);&#xD;
    jbViewComp.setEnabled(true);&#xD;
    jbExportNewick.setEnabled(true);&#xD;
    jbSimMatrix.setEnabled(true);&#xD;
    jbDuplicateComp.setEnabled(true);&#xD;
    //        jbDeleteComp.setEnabled(true);&#xD;
    jbSearchComp.setEnabled(true);&#xD;
    jSave.setEnabled(true);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DCq_U24qEei47fqiwvb5mw" name="enablefromopenornewstudy">
              <language>JAVA</language>
              <body>&#xD;
    //        jmEdit.setEnabled(true);&#xD;
    //        jMenu3.setEnabled(true);&#xD;
    jmOpenStudy.setEnabled(true);&#xD;
    jmiCloseStudy.setEnabled(true);&#xD;
    jbNewExp.setEnabled(true);&#xD;
    jbImport.setEnabled(true);&#xD;
    jbimportexpfile.setEnabled(true);&#xD;
    //        jbEditExp.setEnabled(true);&#xD;
    jbDeleteExp.setEnabled(true);&#xD;
    jbSearchExp.setEnabled(true);&#xD;
    jbDuplicateExp.setEnabled(true);&#xD;
    jbNewComp.setEnabled(true);&#xD;
    //        jbEditComp.setEnabled(true);&#xD;
    jbViewComp.setEnabled(true);&#xD;
    jbExportNewick.setEnabled(true);&#xD;
    jbSimMatrix.setEnabled(true);&#xD;
    jbDuplicateComp.setEnabled(true);&#xD;
    //        jbDeleteComp.setEnabled(true);&#xD;
    jbSearchComp.setEnabled(true);&#xD;
    jmiUnfinished.setEnabled(true);&#xD;
    jmiExportGenetics.setEnabled(true);&#xD;
    jMItransform.setEnabled(true);&#xD;
    jmiAddPopulationField.setEnabled(true);&#xD;
    jAnnotateItem.setEnabled(true);&#xD;
    jmMarkers.setEnabled(true);&#xD;
    jmannotate.setEnabled(true);&#xD;
    jmiaddmarker.setEnabled(true);&#xD;
    jAnnotateItem.setEnabled(true);&#xD;
    jSave.setEnabled(true);&#xD;
    //        jbAll.setEnabled(true);&#xD;
    //        jbAddField.setEnabled(true);&#xD;
    //        jbdeletefield.setEnabled(true);&#xD;
    //        jbFindSimilarLanes.setEnabled(true);&#xD;
    //        jxsearchlane.setEnabled(true);&#xD;
    //        jbAdvancedSearchLanes.setEnabled(true);&#xD;
    //        jbViewLane.setEnabled(true);&#xD;
    //        jbEditlane.setEnabled(true);&#xD;
    //        jmiNewExperiment.setEnabled(true);&#xD;
    //        jmiComparison.setEnabled(true);&#xD;
    jmiDeleteStudy.setEnabled(true);&#xD;
    jmiEditStudy.setEnabled(true);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DCrmYG4qEei47fqiwvb5mw" name="disablefromclosestudy">
              <language>JAVA</language>
              <body>&#xD;
    //        jmEdit.setEnabled(false);&#xD;
    jmiCloseStudy.setEnabled(false);&#xD;
    jbNewExp.setEnabled(false);&#xD;
    jbImport.setEnabled(false);&#xD;
    jbimportexpfile.setEnabled(false);&#xD;
    //        jbEditExp.setEnabled(false);&#xD;
    jbDeleteExp.setEnabled(false);&#xD;
    jbSearchExp.setEnabled(false);&#xD;
    jbNewComp.setEnabled(false);&#xD;
    jbDuplicateExp.setEnabled(false);&#xD;
    //        jbEditComp.setEnabled(false);&#xD;
    jbViewComp.setEnabled(false);&#xD;
    jbExportNewick.setEnabled(false);&#xD;
    jbSimMatrix.setEnabled(false);&#xD;
    jbDuplicateComp.setEnabled(false);&#xD;
    //        jbDeleteComp.setEnabled(false);&#xD;
    jbSearchComp.setEnabled(false);&#xD;
    jmiUnfinished.setEnabled(false);&#xD;
    jmiExportGenetics.setEnabled(false);&#xD;
    jMItransform.setEnabled(true);&#xD;
    jmiAddPopulationField.setEnabled(false);&#xD;
    jAnnotateItem.setEnabled(false);&#xD;
    jmannotate.setEnabled(false);&#xD;
    jmMarkers.setEnabled(false);&#xD;
    //        jbAll.setEnabled(false);&#xD;
    //        jmiNewExperiment.setEnabled(false);&#xD;
    //        jmiComparison.setEnabled(false);&#xD;
    jtExperiments.setModel(null);&#xD;
    jtComparisons.setModel(null);&#xD;
    jtExperiments.setRootVisible(false);&#xD;
    jtComparisons.setRootVisible(false);&#xD;
    jmiDeleteStudy.setEnabled(false);&#xD;
    jbAddField.setEnabled(false);&#xD;
    jbdeletefield.setEnabled(false);&#xD;
    jbFindSimilarLanes.setEnabled(false);&#xD;
    jxsearchlane.setEnabled(false);&#xD;
    jbAdvancedSearchLanes.setEnabled(false);&#xD;
    //        jbViewLane.setEnabled(false);&#xD;
    jbEditlane.setEnabled(false);&#xD;
    jbShowMW.setEnabled(false);&#xD;
    //        jbAdd.setEnabled(false);&#xD;
    jmiaddmarker.setEnabled(false);&#xD;
    jbDeleteLane.setEnabled(false);&#xD;
    jbDeleteLane.setVisible(false);&#xD;
    jmiEditStudy.setEnabled(false);&#xD;
    jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(&quot;&quot;));&#xD;
    cleanlanes();&#xD;
    double scale = jXImageView2.getScale();&#xD;
    jXImageView2.setImage(new BufferedImage(300, 200, TYPE_INT_ARGB));&#xD;
    jXImageView2.setScale(scale);&#xD;
    jToolBar3.setVisible(false);&#xD;
    this.setTitle(&quot;GelJDB&quot;);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DCsNcG4qEei47fqiwvb5mw" name="disableall">
              <language>JAVA</language>
              <body>&#xD;
    //        jmEdit.setEnabled(false);&#xD;
    jmiCloseStudy.setEnabled(false);&#xD;
    jbNewExp.setEnabled(false);&#xD;
    jbImport.setEnabled(false);&#xD;
    jbimportexpfile.setEnabled(false);&#xD;
    //        jbEditExp.setEnabled(false);&#xD;
    jbDeleteExp.setEnabled(false);&#xD;
    jbSearchExp.setEnabled(false);&#xD;
    jbNewComp.setEnabled(false);&#xD;
    jbDuplicateExp.setEnabled(false);&#xD;
    //        jbEditComp.setEnabled(false);&#xD;
    jbViewComp.setEnabled(false);&#xD;
    jbExportNewick.setEnabled(false);&#xD;
    jbSimMatrix.setEnabled(false);&#xD;
    jbDuplicateComp.setEnabled(false);&#xD;
    //        jbDeleteComp.setEnabled(false);&#xD;
    jbSearchComp.setEnabled(false);&#xD;
    jmiEditStudy.setEnabled(false);&#xD;
    //        jbAll.setEnabled(false);&#xD;
    jbAddField.setEnabled(false);&#xD;
    jbdeletefield.setEnabled(false);&#xD;
    jbFindSimilarLanes.setEnabled(false);&#xD;
    jxsearchlane.setEnabled(false);&#xD;
    jbAdvancedSearchLanes.setEnabled(false);&#xD;
    //        jmiNewExperiment.setEnabled(false);&#xD;
    //        jmiComparison.setEnabled(false);&#xD;
    //        jmNew.setEnabled(false);&#xD;
    jmOpenStudy.setEnabled(false);&#xD;
    jmiExit.setEnabled(false);&#xD;
    jmiDeleteStudy.setEnabled(false);&#xD;
    //        jbViewLane.setEnabled(false);&#xD;
    jbEditlane.setEnabled(false);&#xD;
    jbShowMW.setEnabled(false);&#xD;
    jmiEditStudy.setEnabled(false);&#xD;
    jmiUnfinished.setEnabled(false);&#xD;
    jmiExportGenetics.setEnabled(false);&#xD;
    jMItransform.setEnabled(true);&#xD;
    jmiAddPopulationField.setEnabled(false);&#xD;
    jAnnotateItem.setEnabled(false);&#xD;
    jmMarkers.setEnabled(false);&#xD;
    jmannotate.setEnabled(false);&#xD;
    jAnnotateItem.setEnabled(false);&#xD;
    jSave.setEnabled(false);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DCsNcm4qEei47fqiwvb5mw" name="enableall">
              <language>JAVA</language>
              <body>&#xD;
    //        jmEdit.setEnabled(true);&#xD;
    jmiCloseStudy.setEnabled(true);&#xD;
    jbNewExp.setEnabled(true);&#xD;
    jbImport.setEnabled(true);&#xD;
    jbimportexpfile.setEnabled(true);&#xD;
    //        jbEditExp.setEnabled(true);&#xD;
    jbDeleteExp.setEnabled(true);&#xD;
    jbSearchExp.setEnabled(true);&#xD;
    jbDuplicateExp.setEnabled(true);&#xD;
    jbNewComp.setEnabled(true);&#xD;
    //        jbEditComp.setEnabled(true);&#xD;
    jbViewComp.setEnabled(true);&#xD;
    jbExportNewick.setEnabled(true);&#xD;
    jbSimMatrix.setEnabled(true);&#xD;
    jbDuplicateComp.setEnabled(true);&#xD;
    //        jbDeleteComp.setEnabled(true);&#xD;
    jbSearchComp.setEnabled(true);&#xD;
    jmiUnfinished.setEnabled(true);&#xD;
    jmiExportGenetics.setEnabled(true);&#xD;
    jMItransform.setEnabled(true);&#xD;
    jmiAddPopulationField.setEnabled(true);&#xD;
    jAnnotateItem.setEnabled(true);&#xD;
    jmannotate.setEnabled(true);&#xD;
    jmMarkers.setEnabled(true);&#xD;
    //        jbAll.setEnabled(true);&#xD;
    jbAddField.setEnabled(true);&#xD;
    jbdeletefield.setEnabled(true);&#xD;
    //        jbFindSimilarLanes.setEnabled(true);&#xD;
    jxsearchlane.setEnabled(true);&#xD;
    jbAdvancedSearchLanes.setEnabled(true);&#xD;
    //        jbViewLane.setEnabled(true);&#xD;
    //        jbEditlane.setEnabled(true);&#xD;
    //        jmiNewExperiment.setEnabled(true);&#xD;
    //        jmiComparison.setEnabled(true);&#xD;
    //        jmNew.setEnabled(true);&#xD;
    jmOpenStudy.setEnabled(true);&#xD;
    jmiExit.setEnabled(true);&#xD;
    jmiDeleteStudy.setEnabled(true);&#xD;
    jmiEditStudy.setEnabled(true);&#xD;
    jmiaddmarker.setEnabled(true);&#xD;
    jSave.setEnabled(true);&#xD;
    if (comparisons.isEmpty()) {&#xD;
        if (!experiments.isEmpty()) {&#xD;
            disablenocomparison();&#xD;
        } else {&#xD;
            disablenoexperiment();&#xD;
        }&#xD;
    } else {&#xD;
        enablecomparison();&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DCs0gG4qEei47fqiwvb5mw" name="editcomparison">
              <language>JAVA</language>
              <body>&#xD;
    DefaultMutableTreeNode node = (DefaultMutableTreeNode) jtComparisons.getLastSelectedPathComponent();&#xD;
    if (//Nothing is selected.     &#xD;
    node == null) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;Select a comparison to edit&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
        return;&#xD;
    }&#xD;
    Comparison comp = (Comparison) node.getUserObject();&#xD;
    NewComparison nc = comp.toNewComparison(experiments);&#xD;
    nc.setId(comp.getId());&#xD;
    ArrayList&lt;String> fields = new ArrayList&lt;>();&#xD;
    String[] names0 = { &quot;Genus&quot;, &quot;Species&quot;, &quot;Strain Number&quot;, &quot;Country&quot;, &quot;MLST&quot;, &quot;isMarker&quot;, &quot;Experiment&quot;, &quot;Comments&quot; };&#xD;
    for (String s : names0) {&#xD;
        fields.add(s);&#xD;
    }&#xD;
    for (String s : additionalfields) {&#xD;
        fields.add(s);&#xD;
    }&#xD;
    nc.setNonSelectedFields(fields);&#xD;
    Step1 step1 = new Step1(nc, true);&#xD;
    step1.setVisible(true);&#xD;
    updatecomparisons(true, true);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DCs0gm4qEei47fqiwvb5mw" name="createnewcomparison">
              <language>JAVA</language>
              <body>&#xD;
    if (ij != null) {&#xD;
        ImagePlus imp1 = WindowManager.getCurrentImage();&#xD;
        if (imp1 != null) {&#xD;
            imp1.changes = false;&#xD;
            imp1.close();&#xD;
        }&#xD;
        ij.quit();&#xD;
        ij = null;&#xD;
    }&#xD;
    if (IJ.getInstance() != null) {&#xD;
        IJ.getInstance().quit();&#xD;
        ij = null;&#xD;
    }&#xD;
    if (experiments.isEmpty()) {&#xD;
        JOptionPane.showMessageDialog(this, &quot;Create an experiment first&quot;, &quot;&quot;, INFORMATION_MESSAGE, null);&#xD;
    } else {&#xD;
        jtExperiments.setSelectionPath(null);&#xD;
        NewComparison nc = new NewComparison(studyid);&#xD;
        String[] vals = readcomparisonconfig();&#xD;
        nc.setNonSelectedExperiments(experiments);&#xD;
        ArrayList&lt;String> fields = new ArrayList&lt;>();&#xD;
        String[] names0 = { &quot;Genus&quot;, &quot;Species&quot;, &quot;Strain Number&quot;, &quot;Country&quot;, &quot;MLST&quot;, &quot;isMarker&quot;, &quot;Experiment&quot;, &quot;Comments&quot; };&#xD;
        for (String s : names0) {&#xD;
            fields.add(s);&#xD;
        }&#xD;
        for (String s : additionalfields) {&#xD;
            fields.add(s);&#xD;
        }&#xD;
        if (vals != null) {&#xD;
            nc.setSimilaritymethod(vals[0]);&#xD;
            nc.setLinkage(vals[1]);&#xD;
            nc.setTolerance(Double.parseDouble(vals[2]));&#xD;
            ArrayList&lt;String> selectedfields = new ArrayList&lt;String>();&#xD;
            for (int i = 3; i &lt; vals.length; i++) {&#xD;
                if (fields.contains(vals[i])) {&#xD;
                    fields.remove(vals[i]);&#xD;
                    selectedfields.add(vals[i]);&#xD;
                }&#xD;
            }&#xD;
            nc.setSelectedFields(selectedfields);&#xD;
        }&#xD;
        nc.setNonSelectedFields(fields);&#xD;
        Step1 step1 = new Step1(nc, false);&#xD;
        step1.setVisible(true);&#xD;
        updatecomparisons(true, true);&#xD;
        if (!comparisons.isEmpty()) {&#xD;
            enablecomparison();&#xD;
        }&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DCtbkW4qEei47fqiwvb5mw" name="selectComparison">
              <language>JAVA</language>
              <body>&#xD;
    Enumeration&lt;DefaultMutableTreeNode> e = rootNodeComp.depthFirstEnumeration();&#xD;
    while (e.hasMoreElements()) {&#xD;
        DefaultMutableTreeNode node = e.nextElement();&#xD;
        if (!node.getUserObject().toString().equals(&quot;Comparisons&quot;)) {&#xD;
            if (((Comparison) node.getUserObject()).getId() == id) {&#xD;
                jtComparisons.setSelectionPath(new TreePath(node.getPath()));&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DCuCoW4qEei47fqiwvb5mw" name="selectExperiment">
              <language>JAVA</language>
              <body>&#xD;
    Enumeration&lt;DefaultMutableTreeNode> e = rootNode.depthFirstEnumeration();&#xD;
    while (e.hasMoreElements()) {&#xD;
        DefaultMutableTreeNode node = e.nextElement();&#xD;
        if (!node.getUserObject().toString().equals(&quot;Experiments&quot;)) {&#xD;
            if (((Experiment) node.getUserObject()).getId() == id) {&#xD;
                jtExperiments.setSelectionPath(new TreePath(node.getPath()));&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DCupsG4qEei47fqiwvb5mw" name="duplicatecomparison">
              <language>JAVA</language>
              <body>&#xD;
    TreePath currentSelection = jtComparisons.getSelectionPath();&#xD;
    if (currentSelection != null) {&#xD;
        DefaultMutableTreeNode currentNode = (DefaultMutableTreeNode) (currentSelection.getLastPathComponent());&#xD;
        MutableTreeNode parent = (MutableTreeNode) (currentNode.getParent());&#xD;
        if (parent != null) {&#xD;
            Comparison comp = (Comparison) currentNode.getUserObject();&#xD;
            comp.setId(lastComparisonid());&#xD;
            comp.setName(comp.getName() + &quot;-1&quot;);&#xD;
            insertComparison(comp);&#xD;
            updatecomparisons(true, true);&#xD;
        }&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DDdCcG4qEei47fqiwvb5mw" name="valueChanged">
              <language>JAVA</language>
              <body>&#xD;
    // Selection of a experiments node&#xD;
    if (jtExperiments.getModel() == null) {&#xD;
        activateemptytoolbar();&#xD;
        double scale = jXImageView2.getScale();&#xD;
        jXImageView2.setImage(new BufferedImage(300, 200, TYPE_INT_ARGB));&#xD;
        jXImageView2.setScale(scale);&#xD;
        return;&#xD;
    }&#xD;
    if (jtExperiments.getModel().toString().equals(((JTree) e.getSource()).getModel().toString()) &amp;&amp; jtExperiments.getSelectionPath() != null) {&#xD;
        DefaultMutableTreeNode node = (DefaultMutableTreeNode) jtExperiments.getLastSelectedPathComponent();&#xD;
        if (//Nothing is selected.     &#xD;
        node == null) {&#xD;
            activateemptytoolbar();&#xD;
            double scale = jXImageView2.getScale();&#xD;
            jXImageView2.setImage(new BufferedImage(300, 200, TYPE_INT_ARGB));&#xD;
            jXImageView2.setScale(scale);&#xD;
            return;&#xD;
        }&#xD;
        Experiment experiment = (Experiment) node.getUserObject();&#xD;
        // Here&#xD;
        String image = System.getProperty(&quot;user.dir&quot;) + &quot;/GelJDBImages/&quot; + experiment.getStudy().getId() + &quot;/&quot; + experiment.getUser().getUsername() + &quot;/experiments/&quot; + experiment.getId() + &quot;/&quot; + experiment.getImagename();&#xD;
        if (image.endsWith(&quot;.TIFF&quot;)) {&#xD;
            image = image.replace(&quot;.TIFF&quot;, &quot;.tif&quot;);&#xD;
        }&#xD;
        if (image.endsWith(&quot;.TIF&quot;)) {&#xD;
            image = image.replace(&quot;.TIF&quot;, &quot;.tif&quot;);&#xD;
        }&#xD;
        if (image.endsWith(&quot;.tif&quot;) || image.endsWith(&quot;.tiff&quot;)) {&#xD;
            FileSeekableStream stream = null;&#xD;
            try {&#xD;
                stream = new FileSeekableStream(image);&#xD;
                TIFFDecodeParam decodeParam = new TIFFDecodeParam();&#xD;
                decodeParam.setDecodePaletteAsShorts(true);&#xD;
                ParameterBlock params = new ParameterBlock();&#xD;
                params.add(stream);&#xD;
                RenderedOp image1 = JAI.create(&quot;tiff&quot;, params);&#xD;
                BufferedImage img = image1.getAsBufferedImage();&#xD;
                double scale = jXImageView2.getScale();&#xD;
                jXImageView2.setImage(img);&#xD;
                jXImageView2.setEditable(false);&#xD;
                jXImageView2.setDragEnabled(false);&#xD;
                jXImageView2.setScale(scale);&#xD;
            } catch (IOException ex) {&#xD;
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);&#xD;
            } finally {&#xD;
                try {&#xD;
                    stream.close();&#xD;
                } catch (IOException ex) {&#xD;
                    Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);&#xD;
                }&#xD;
            }&#xD;
        } else {&#xD;
            File f = new File(image);&#xD;
            try {&#xD;
                double scale = jXImageView2.getScale();&#xD;
                jXImageView2.setImage(f);&#xD;
                jXImageView2.setEditable(false);&#xD;
                jXImageView2.setDragEnabled(false);&#xD;
                jXImageView2.setScale(scale);&#xD;
            } catch (IOException ex) {&#xD;
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);&#xD;
            }&#xD;
        }&#xD;
        lanes = getlanesexperiment(experiment.getId(), true);&#xD;
        templanes = lanes;&#xD;
        ArrayList&lt;String> info = getAdditionalFieldsExp(experiment.getId());&#xD;
        for (String i : info) {&#xD;
            if (!additionalfields.contains(i)) {&#xD;
                additionalfields.add(i);&#xD;
            }&#xD;
        }&#xD;
        updatelanes(false);&#xD;
        enablelaneoptionsexperiment();&#xD;
        activateexperimentstoolbar();&#xD;
        jtComparisons.setSelectionPath(null);&#xD;
    }&#xD;
    if (jtComparisons.getModel() == null) {&#xD;
        activateemptytoolbar();&#xD;
        double scale = jXImageView2.getScale();&#xD;
        jXImageView2.setImage(new BufferedImage(300, 200, TYPE_INT_ARGB));&#xD;
        jXImageView2.setScale(scale);&#xD;
        return;&#xD;
    }&#xD;
    // Selection of a comparison node&#xD;
    if (jtComparisons.getModel().toString().equals(((JTree) e.getSource()).getModel().toString()) &amp;&amp; jtComparisons.getSelectionPath() != null) {&#xD;
        DefaultMutableTreeNode node = (DefaultMutableTreeNode) jtComparisons.getLastSelectedPathComponent();&#xD;
        if (//Nothing is selected.     &#xD;
        node == null) {&#xD;
            activateemptytoolbar();&#xD;
            double scale = jXImageView2.getScale();&#xD;
            jXImageView2.setImage(new BufferedImage(300, 200, TYPE_INT_ARGB));&#xD;
            jXImageView2.setScale(scale);&#xD;
            return;&#xD;
        }&#xD;
        Comparison comp = (Comparison) node.getUserObject();&#xD;
        // Here&#xD;
        String image = System.getProperty(&quot;user.dir&quot;) + &quot;/GelJDBImages/&quot; + comp.getStudy().getId() + &quot;/&quot; + comp.getStudy().getUser().getUsername() + &quot;/comparisons/&quot; + comp.getId() + &quot;/dendrogram.tif&quot;;&#xD;
        File f = new File(image);&#xD;
        if (f.exists()) {&#xD;
            if (image.endsWith(&quot;.tif&quot;) || image.endsWith(&quot;.tiff&quot;)) {&#xD;
                FileSeekableStream stream = null;&#xD;
                try {&#xD;
                    stream = new FileSeekableStream(image);&#xD;
                    TIFFDecodeParam decodeParam = new TIFFDecodeParam();&#xD;
                    decodeParam.setDecodePaletteAsShorts(true);&#xD;
                    ParameterBlock params = new ParameterBlock();&#xD;
                    params.add(stream);&#xD;
                    RenderedOp image1 = JAI.create(&quot;tiff&quot;, params);&#xD;
                    BufferedImage img = image1.getAsBufferedImage();&#xD;
                    double scale = jXImageView2.getScale();&#xD;
                    jXImageView2.setImage(img);&#xD;
                    jXImageView2.setEditable(false);&#xD;
                    jXImageView2.setDragEnabled(false);&#xD;
                    jXImageView2.setScale(scale);&#xD;
                } catch (IOException ex) {&#xD;
                    Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);&#xD;
                } finally {&#xD;
                    try {&#xD;
                        stream.close();&#xD;
                    } catch (IOException ex) {&#xD;
                        Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);&#xD;
                    }&#xD;
                }&#xD;
            }&#xD;
        } else {&#xD;
            double scale = jXImageView2.getScale();&#xD;
            jXImageView2.setImage(new BufferedImage(300, 200, TYPE_INT_ARGB));&#xD;
            jXImageView2.setScale(scale);&#xD;
        }&#xD;
        lanes = getLanesComparison(comp.getId());&#xD;
        templanes = lanes;&#xD;
        updatelanes(false);&#xD;
        enablelaneoptionscomparison();&#xD;
        jtExperiments.setSelectionPath(null);&#xD;
        activatecomparisontoolbar();&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DDdpg24qEei47fqiwvb5mw" name="getPlugins">
              <language>JAVA</language>
              <body>&#xD;
    ArrayList&lt;String> plugins = new ArrayList&lt;String>();&#xD;
    String workingdir = System.getProperty(&quot;user.dir&quot;) + &quot;/plugins/java/&quot;;&#xD;
    File directory = new File(workingdir);&#xD;
    String[] files = directory.list();&#xD;
    int nFiles = files.length;&#xD;
    if (nFiles != 0) {&#xD;
        for (int i = 0; i &lt; nFiles; i++) {&#xD;
            if (//encuentra los archivos .xls y almacena su ruta de acceso&#xD;
            files[i].contains(&quot;.java&quot;)) {&#xD;
                String name = files[i].substring(0, files[i].indexOf('.'));&#xD;
                plugins.add(name);&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    return plugins;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DDeQkW4qEei47fqiwvb5mw" name="loadPopulationGeneticsPlugins">
              <language>JAVA</language>
              <body>&#xD;
    ArrayList&lt;String> plugins = getPlugins();&#xD;
    for (int i = 0; i &lt; plugins.size(); i++) {&#xD;
        JMenuItem jrbmi = new JMenuItem();&#xD;
        jrbmi.setText(plugins.get(i));&#xD;
        final String plugin = plugins.get(i);&#xD;
        jrbmi.addActionListener(new java.awt.event.ActionListener() {&#xD;
&#xD;
            public void actionPerformed(java.awt.event.ActionEvent evt) {&#xD;
                try {&#xD;
                    int errorCode = com.sun.tools.javac.Main.compile(new String[] { &quot;-classpath&quot;, System.getProperty(&quot;user.dir&quot;) + &quot;/gelj_v2.jar&quot;, &quot;-d&quot;, System.getProperty(&quot;user.dir&quot;) + &quot;/plugins&quot;, System.getProperty(&quot;user.dir&quot;) + &quot;/plugins/java/&quot; + plugin + &quot;.java&quot; });&#xD;
                    File classesDir = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/plugins/&quot;);&#xD;
                    ClassLoader parentLoader = TransformerPlugin.class.getClassLoader();&#xD;
                    URLClassLoader loader1 = new URLClassLoader(new URL[] { classesDir.toURL() }, parentLoader);&#xD;
                    Class cls1 = loader1.loadClass(&quot;db.PopulationGenetic.&quot; + plugin);&#xD;
                    TransformerPlugin transformer = (TransformerPlugin) cls1.newInstance();&#xD;
                    OpenDialog od = new OpenDialog(&quot;Select a &quot; + plugin + &quot; file...&quot;);&#xD;
                    String name = od.getFileName();&#xD;
                    String path = od.getPath();&#xD;
                    if (name.contains(&quot;.&quot;)) {&#xD;
                        name = name.substring(0, name.indexOf(&quot;.&quot;));&#xD;
                    }&#xD;
                    transformer.transformAndExport(name, path);&#xD;
                } catch (MalformedURLException ex) {&#xD;
                    Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);&#xD;
                } catch (ClassNotFoundException ex) {&#xD;
                    Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);&#xD;
                } catch (InstantiationException ex) {&#xD;
                    Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);&#xD;
                } catch (IllegalAccessException ex) {&#xD;
                    Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);&#xD;
                } catch (TransformerException ex) {&#xD;
                    Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);&#xD;
                }&#xD;
            }&#xD;
        });&#xD;
        jMenu3.add(jrbmi);&#xD;
    }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DDkXMG4qEei47fqiwvb5mw" name="setLanes">
              <language>JAVA</language>
              <body>&#xD;
    this.lanes = lanes;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DDkXM24qEei47fqiwvb5mw" name="getUserid">
              <language>JAVA</language>
              <body>&#xD;
    return userid;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DDkXNm4qEei47fqiwvb5mw" name="setUserid">
              <language>JAVA</language>
              <body>&#xD;
    this.userid = userid;&#xD;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_DCfZIW4qEei47fqiwvb5mw" name="jbNewExpActionPerformed" visibility="private" method="_DCgAMW4qEei47fqiwvb5mw">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_DCgAMG4qEei47fqiwvb5mw" name="evt" type="_a6tpcGWNEei0cbjpkrd07g"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_DCpKIm4qEei47fqiwvb5mw" name="newexperiment" visibility="private" method="_DCpKI24qEei47fqiwvb5mw"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_UXO08HOcEei3ud9vrLTCZg" name="jbDuplicateExpActionPerformed">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_agU6IHOcEei3ud9vrLTCZg" name="evt" type="_a6tpcGWNEei0cbjpkrd07g"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_VjrzgHVpEeiR-eKc-5ByRA" name="jbimportexpfileActionPerformed">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_Y2wGwHVpEeiR-eKc-5ByRA" name="evt" type="_a6tpcGWNEei0cbjpkrd07g"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_yHG00HiXEeiGl6CJxvVzPQ" name="Main">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_7Uz6gHiXEeiGl6CJxvVzPQ" name="userid">
                <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:CallEvent" xmi:id="_4QwkMI5PEeie3Y8fpsu39w" operation="_bKdVoGWNEei0cbjpkrd07g"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_a0gTwGWNEei0cbjpkrd07g" name="importedTypes">
      <packagedElement xmi:type="uml:Package" xmi:id="_a0g60GWNEei0cbjpkrd07g" name="javax">
        <packagedElement xmi:type="uml:Package" xmi:id="_a0g60WWNEei0cbjpkrd07g" name="swing">
          <packagedElement xmi:type="uml:Class" xmi:id="_a0hh4GWNEei0cbjpkrd07g" name="JFrame"/>
          <packagedElement xmi:type="uml:Package" xmi:id="_a7gToGWNEei0cbjpkrd07g" name="event">
            <packagedElement xmi:type="uml:Class" xmi:id="_a7g6sGWNEei0cbjpkrd07g" name="ChangeEvent"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_L_Q-gGlWEeiklvJUJNd-Aw" name="TableModelListener"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_L_20YGlWEeiklvJUJNd-Aw" name="TableModelEvent"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_MCdccGlWEeiklvJUJNd-Aw" name="ListSelectionListener"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_MCgfwGlWEeiklvJUJNd-Aw" name="ListSelectionEvent"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_MHhioGlWEeiklvJUJNd-Aw" name="TreeSelectionListener"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_MPM38GlWEeiklvJUJNd-Aw" name="TreeSelectionEvent"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_MPX3EGlWEeiklvJUJNd-Aw" name="TreeModelListener"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_MPaTUGlWEeiklvJUJNd-Aw" name="TreeModelEvent"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_a70csGWNEei0cbjpkrd07g" name="ButtonGroup"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_a758QGWNEei0cbjpkrd07g" name="JButton"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_a8SWwGWNEei0cbjpkrd07g" name="JCheckBox"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_a8X2UGWNEei0cbjpkrd07g" name="JComboBox"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_a8dV4GWNEei0cbjpkrd07g" name="JLabel"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_a8yGAGWNEei0cbjpkrd07g" name="JPanel"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_a9Dy0GWNEei0cbjpkrd07g" name="JScrollPane"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_a9IrUGWNEei0cbjpkrd07g" name="JTextArea"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_a9M8wGWNEei0cbjpkrd07g" name="JToolBar"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_bBJooGWNEei0cbjpkrd07g" name="JTextField"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_bEi64GWNEei0cbjpkrd07g" name="JRadioButton"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_bGFzA2WNEei0cbjpkrd07g" name="JSlider"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_bUNHgGWNEei0cbjpkrd07g" name="JDialog"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_L7tUMGlWEeiklvJUJNd-Aw" name="JSeparator"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_L8glcGlWEeiklvJUJNd-Aw" name="JTable"/>
          <packagedElement xmi:type="uml:Package" xmi:id="_MAKWYGlWEeiklvJUJNd-Aw" name="JToolBar">
            <packagedElement xmi:type="uml:Class" xmi:id="_MAK9cGlWEeiklvJUJNd-Aw" name="Separator"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_MCYj8GlWEeiklvJUJNd-Aw" name="JList"/>
          <packagedElement xmi:type="uml:Package" xmi:id="_MIH_kGlWEeiklvJUJNd-Aw" name="tree">
            <packagedElement xmi:type="uml:Class" xmi:id="_MIImoGlWEeiklvJUJNd-Aw" name="DefaultMutableTreeNode"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_MINfIGlWEeiklvJUJNd-Aw" name="DefaultTreeModel"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_MPw4oWlWEeiklvJUJNd-Aw" name="DefaultTreeCellRenderer"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_MNr1AGlWEeiklvJUJNd-Aw" name="JMenuItem"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_MNzJwGlWEeiklvJUJNd-Aw" name="JMenu"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_MN6egGlWEeiklvJUJNd-Aw" name="JMenuBar"/>
          <packagedElement xmi:type="uml:Package" xmi:id="_MOSR8GlWEeiklvJUJNd-Aw" name="JPopupMenu">
            <packagedElement xmi:type="uml:Class" xmi:id="_MOS5AGlWEeiklvJUJNd-Aw" name="Separator"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_MPADoGlWEeiklvJUJNd-Aw" name="JSplitPane"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_MPE8IGlWEeiklvJUJNd-Aw" name="JTree"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_MSbLEWlWEeiklvJUJNd-Aw" name="JTabbedPane"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_WfqlsWlXEeiklvJUJNd-Aw" name="DefaultListModel"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_a5YMsGWNEei0cbjpkrd07g" name="ij">
        <packagedElement xmi:type="uml:Class" xmi:id="_a5Za0GWNEei0cbjpkrd07g" name="ImagePlus"/>
        <packagedElement xmi:type="uml:Package" xmi:id="_a5m2MGWNEei0cbjpkrd07g" name="workspace">
          <packagedElement xmi:type="uml:Package" xmi:id="_a5ndQGWNEei0cbjpkrd07g" name="GelJ">
            <packagedElement xmi:type="uml:Class" xmi:id="_a5orYGWNEei0cbjpkrd07g" name="BandManager"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_a9q20GWNEei0cbjpkrd07g" name="LaneManager"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_bANNcGWNEei0cbjpkrd07g" name="NormaliseManager"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_bT17IGWNEei0cbjpkrd07g" name="Menu"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_L41mYGlWEeiklvJUJNd-Aw" name="LaneInfo"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_L62YkWlWEeiklvJUJNd-Aw" name="Lane"/>
            <packagedElement xmi:type="uml:Package" xmi:id="_Wf9goGlXEeiklvJUJNd-Aw" name="Assistant">
              <packagedElement xmi:type="uml:Class" xmi:id="_Wf9goWlXEeiklvJUJNd-Aw" name="Assistant"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_XIZZoGlXEeiklvJUJNd-Aw" name="Assistant2">
              <packagedElement xmi:type="uml:Class" xmi:id="_XIaAsGlXEeiklvJUJNd-Aw" name="PleaseWait"/>
            </packagedElement>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_bFhLQGWNEei0cbjpkrd07g" name="gui">
          <packagedElement xmi:type="uml:Class" xmi:id="_bFhyUGWNEei0cbjpkrd07g" name="Roi"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_bFk1oGWNEei0cbjpkrd07g" name="Line"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_bF0GMGWNEei0cbjpkrd07g" name="Overlay"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_WeRekGlXEeiklvJUJNd-Aw" name="DialogListener"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_WegIEmlXEeiklvJUJNd-Aw" name="GenericDialog"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_MIX3MGlWEeiklvJUJNd-Aw" name="ImageJ"/>
        <packagedElement xmi:type="uml:Package" xmi:id="_WePCUGlXEeiklvJUJNd-Aw" name="plugin">
          <packagedElement xmi:type="uml:Package" xmi:id="_WePCUWlXEeiklvJUJNd-Aw" name="filter">
            <packagedElement xmi:type="uml:Interface" xmi:id="_WePpYGlXEeiklvJUJNd-Aw" name="ExtendedPlugInFilter"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_WeWXEGlXEeiklvJUJNd-Aw" name="RankFilters"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_WeXlMWlXEeiklvJUJNd-Aw" name="PlugInFilterRunner"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_Wpf3IGlXEeiklvJUJNd-Aw" name="PlugInFilter"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_XHASgGlXEeiklvJUJNd-Aw" name="BackgroundSubtracter"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_WfV1kGlXEeiklvJUJNd-Aw" name="frame">
            <packagedElement xmi:type="uml:Class" xmi:id="_WfWcoGlXEeiklvJUJNd-Aw" name="PlugInFrame"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Interface" xmi:id="_XJYREWlXEeiklvJUJNd-Aw" name="PlugIn"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_WeeS4mlXEeiklvJUJNd-Aw" name="process">
          <packagedElement xmi:type="uml:Class" xmi:id="_WeeS42lXEeiklvJUJNd-Aw" name="ImageProcessor"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_Wf52QGlXEeiklvJUJNd-Aw" name="measure">
          <packagedElement xmi:type="uml:Class" xmi:id="_Wf52QWlXEeiklvJUJNd-Aw" name="ResultsTable"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_XDFb0GlXEeiklvJUJNd-Aw" name="CurveFitter"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_ACml4GofEei47fqiwvb5mw" name="Calibration"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_bT7asGWNEei0cbjpkrd07g" name="db">
        <packagedElement xmi:type="uml:Package" xmi:id="_bT7asWWNEei0cbjpkrd07g" name="Interface">
          <packagedElement xmi:type="uml:Class" xmi:id="_bT8BwGWNEei0cbjpkrd07g" name="Main"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_L2byoGlWEeiklvJUJNd-Aw" name="Classes">
          <packagedElement xmi:type="uml:Class" xmi:id="_L2byoWlWEeiklvJUJNd-Aw" name="Experiment"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_L4CVI2lWEeiklvJUJNd-Aw" name="Lab"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_L4UpAGlWEeiklvJUJNd-Aw" name="User"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_L6o9MGlWEeiklvJUJNd-Aw" name="LaneDB"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_L-gwkGlWEeiklvJUJNd-Aw" name="LaneDBwithsimilarity"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_L_nj0GlWEeiklvJUJNd-Aw" name="Study"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_MByHAGlWEeiklvJUJNd-Aw" name="Comparison"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_MBucoGlWEeiklvJUJNd-Aw" name="NewComparisonWizard">
          <packagedElement xmi:type="uml:Class" xmi:id="_MBvDsGlWEeiklvJUJNd-Aw" name="NewComparison"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_MBd98GlWEeiklvJUJNd-Aw" name="org">
        <packagedElement xmi:type="uml:Package" xmi:id="_MBelAGlWEeiklvJUJNd-Aw" name="jdesktop">
          <packagedElement xmi:type="uml:Package" xmi:id="_MBfMEGlWEeiklvJUJNd-Aw" name="swingx">
            <packagedElement xmi:type="uml:Class" xmi:id="_MBfMEWlWEeiklvJUJNd-Aw" name="JXDatePicker"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_MOdREGlWEeiklvJUJNd-Aw" name="JXImageView"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_MPJ0oGlWEeiklvJUJNd-Aw" name="JXSearchField"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_a6iDQGWNEei0cbjpkrd07g" name="java" visibility="private">
      <packagedElement xmi:type="uml:Package" xmi:id="_a6iqUGWNEei0cbjpkrd07g" name="java">
        <packagedElement xmi:type="uml:Package" xmi:id="_a6jRYGWNEei0cbjpkrd07g" name="awt">
          <packagedElement xmi:type="uml:Package" xmi:id="_a6j4cGWNEei0cbjpkrd07g" name="event">
            <packagedElement xmi:type="uml:Class" xmi:id="_a6kfgGWNEei0cbjpkrd07g" name="WindowEvent"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_a6tpcGWNEei0cbjpkrd07g" name="ActionEvent"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_a7oPcGWNEei0cbjpkrd07g" name="ItemEvent"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_L-Gg4GlWEeiklvJUJNd-Aw" name="KeyEvent"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_WfXqwmlXEeiklvJUJNd-Aw" name="WindowListener"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_WfaHAWlXEeiklvJUJNd-Aw" name="ActionListener"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_Wfb8MGlXEeiklvJUJNd-Aw" name="ItemListener"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_WfdxYGlXEeiklvJUJNd-Aw" name="MouseListener"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_Wfe_gmlXEeiklvJUJNd-Aw" name="MouseWheelListener"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_Wicz8GlXEeiklvJUJNd-Aw" name="MouseEvent"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_WiiTgGlXEeiklvJUJNd-Aw" name="MouseWheelEvent"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_W1K7oGlXEeiklvJUJNd-Aw" name="KeyListener"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_bLnzQGWNEei0cbjpkrd07g" name="Color"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_L3sW4GlWEeiklvJUJNd-Aw" name="Frame"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_MCw-cGlWEeiklvJUJNd-Aw" name="Dialog"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_MP3mUGlWEeiklvJUJNd-Aw" name="Component"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_WehWMWlXEeiklvJUJNd-Aw" name="AWTEvent"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_WfniYmlXEeiklvJUJNd-Aw" name="Panel"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_WfveMGlXEeiklvJUJNd-Aw" name="PopupMenu"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_WfxTYGlXEeiklvJUJNd-Aw" name="Button"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_WfzIkGlXEeiklvJUJNd-Aw" name="Checkbox"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_WhP6EGlXEeiklvJUJNd-Aw" name="List"/>
          <packagedElement xmi:type="uml:Package" xmi:id="__mqQwGoeEei47fqiwvb5mw" name="image">
            <packagedElement xmi:type="uml:Class" xmi:id="__mq30GoeEei47fqiwvb5mw" name="ColorModel"/>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_bAFRoGWNEei0cbjpkrd07g" name="lang">
          <packagedElement xmi:type="uml:Class" xmi:id="_bAF4sGWNEei0cbjpkrd07g" name="String"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_MIoV4GlWEeiklvJUJNd-Aw" name="Object"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_MM_RcGlWEeiklvJUJNd-Aw" name="Exception"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="__Iwz0GoeEei47fqiwvb5mw" name="Runnable"/>
          <packagedElement xmi:type="uml:Class" xmi:id="__MxKEGoeEei47fqiwvb5mw" name="Class"/>
          <packagedElement xmi:type="uml:Class" xmi:id="__U_5AGoeEei47fqiwvb5mw" name="Thread"/>
          <packagedElement xmi:type="uml:Class" xmi:id="__fGQMGoeEei47fqiwvb5mw" name="Throwable"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_bFTI0GWNEei0cbjpkrd07g" name="io">
          <packagedElement xmi:type="uml:Class" xmi:id="_bFTv4GWNEei0cbjpkrd07g" name="IOException"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_bUai4GWNEei0cbjpkrd07g" name="FileNotFoundException"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_bUeNQGWNEei0cbjpkrd07g" name="UnsupportedEncodingException"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_XCzH8GlXEeiklvJUJNd-Aw" name="Serializable"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_Wfsa4GlXEeiklvJUJNd-Aw" name="util">
          <packagedElement xmi:type="uml:Class" xmi:id="_Wfsa4WlXEeiklvJUJNd-Aw" name="Hashtable"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_XM2b0GlXEeiklvJUJNd-Aw" name="ArrayList"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_-_KL4WoeEei47fqiwvb5mw" name="Properties"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_--e2cGoeEei47fqiwvb5mw" name="rmi">
          <packagedElement xmi:type="uml:Interface" xmi:id="_--e2cWoeEei47fqiwvb5mw" name="Remote"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_--nZUGoeEei47fqiwvb5mw" name="RemoteException"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_-_WZIWoeEei47fqiwvb5mw" name="applet">
          <packagedElement xmi:type="uml:Class" xmi:id="_-_XAMGoeEei47fqiwvb5mw" name="Applet"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_h_EYYWrwEei47fqiwvb5mw" name="sql">
          <packagedElement xmi:type="uml:Class" xmi:id="_h_EYYmrwEei47fqiwvb5mw" name="Date"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Interaction" xmi:id="_omnEsGmeEeiklvJUJNd-Aw" name="Step1_1-Step1_2">
      <ownedAttribute xmi:type="uml:Property" xmi:id="_uTfvAGmeEeiklvJUJNd-Aw" name="" type="_bGWRsGWNEei0cbjpkrd07g"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_OgXfIGmfEeiklvJUJNd-Aw" name="" type="_bXE1UGWNEei0cbjpkrd07g"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_kYtEYGmfEeiklvJUJNd-Aw" name="" type="_omnEsGmeEeiklvJUJNd-Aw"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_tki6EGppEei47fqiwvb5mw" name="" type="_bGWRsGWNEei0cbjpkrd07g"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_u7GdUGppEei47fqiwvb5mw" name="" type="_bXE1UGWNEei0cbjpkrd07g"/>
      <lifeline xmi:type="uml:Lifeline" xmi:id="_tkiTAGppEei47fqiwvb5mw" name="" represents="_tki6EGppEei47fqiwvb5mw" coveredBy="_aXfPUGppEei47fqiwvb5mw _aXeoQGppEei47fqiwvb5mw _yGR_4WppEei47fqiwvb5mw _zjZeIGppEei47fqiwvb5mw _zjY3EWppEei47fqiwvb5mw _Fd1qcGpqEei47fqiwvb5mw _Fd2RgGpqEei47fqiwvb5mw _KIJdcGpqEei47fqiwvb5mw _K4WyYGpqEei47fqiwvb5mw _K4YAgGpqEei47fqiwvb5mw _K4XZcGpqEei47fqiwvb5mw _Zjct0GpqEei47fqiwvb5mw _ZjdU4WpqEei47fqiwvb5mw _ZjdU4GpqEei47fqiwvb5mw _fRyJoGpqEei47fqiwvb5mw _8pcr4HLpEei3ud9vrLTCZg _8pdS8HLpEei3ud9vrLTCZg _-3hF8HLpEei3ud9vrLTCZg"/>
      <lifeline xmi:type="uml:Lifeline" xmi:id="_u7F2QGppEei47fqiwvb5mw" name="" represents="_u7GdUGppEei47fqiwvb5mw" coveredBy="_fRyJoWpqEei47fqiwvb5mw"/>
      <fragment xmi:type="uml:CombinedFragment" xmi:id="_aXeoQGppEei47fqiwvb5mw" name="CombinedFragment" covered="_tkiTAGppEei47fqiwvb5mw" interactionOperator="opt">
        <operand xmi:type="uml:InteractionOperand" xmi:id="_aXfPUGppEei47fqiwvb5mw" name="InteractionOperand" covered="_tkiTAGppEei47fqiwvb5mw">
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_yGR_4WppEei47fqiwvb5mw" name="step1_1_crop" covered="_tkiTAGppEei47fqiwvb5mw" message="_yGR_4GppEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ActionExecutionSpecification" xmi:id="_zjY3EWppEei47fqiwvb5mw" name="ActionExecSpec" covered="_tkiTAGppEei47fqiwvb5mw" finish="_zjZeIGppEei47fqiwvb5mw" start="_yGR_4WppEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_zjZeIGppEei47fqiwvb5mw" name="ActionExecSpecFinish" covered="_tkiTAGppEei47fqiwvb5mw" execution="_zjY3EWppEei47fqiwvb5mw"/>
          <guard xmi:type="uml:InteractionConstraint" xmi:id="_aXfPUWppEei47fqiwvb5mw">
            <specification xmi:type="uml:LiteralString" xmi:id="_aXfPUmppEei47fqiwvb5mw" value="undefined"/>
            <maxint xmi:type="uml:LiteralInteger" xmi:id="_aXf2YWppEei47fqiwvb5mw" value="1"/>
            <minint xmi:type="uml:LiteralInteger" xmi:id="_aXf2YGppEei47fqiwvb5mw"/>
          </guard>
        </operand>
      </fragment>
      <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_zjY3EGppEei47fqiwvb5mw" name="ActionExecSpecStart" execution="_zjY3EWppEei47fqiwvb5mw"/>
      <fragment xmi:type="uml:CombinedFragment" xmi:id="_Fd1qcGpqEei47fqiwvb5mw" name="CombinedFragment0" covered="_tkiTAGppEei47fqiwvb5mw" interactionOperator="opt">
        <operand xmi:type="uml:InteractionOperand" xmi:id="_Fd2RgGpqEei47fqiwvb5mw" name="InteractionOperand" covered="_tkiTAGppEei47fqiwvb5mw">
          <fragment xmi:type="uml:ActionExecutionSpecification" xmi:id="_K4XZcGpqEei47fqiwvb5mw" name="ActionExecSpec" covered="_tkiTAGppEei47fqiwvb5mw" finish="_K4YAgGpqEei47fqiwvb5mw" start="_KIJdcGpqEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_KIJdcGpqEei47fqiwvb5mw" name="step1_1_undo" covered="_tkiTAGppEei47fqiwvb5mw" message="_KII2YGpqEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_K4WyYGpqEei47fqiwvb5mw" name="ActionExecSpecStart" covered="_tkiTAGppEei47fqiwvb5mw" execution="_K4XZcGpqEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_K4YAgGpqEei47fqiwvb5mw" name="ActionExecSpecFinish" covered="_tkiTAGppEei47fqiwvb5mw" execution="_K4XZcGpqEei47fqiwvb5mw"/>
          <guard xmi:type="uml:InteractionConstraint" xmi:id="_Fd2RgWpqEei47fqiwvb5mw">
            <specification xmi:type="uml:LiteralString" xmi:id="_Fd2RgmpqEei47fqiwvb5mw" value="undefined"/>
            <maxint xmi:type="uml:LiteralInteger" xmi:id="_Fd24kWpqEei47fqiwvb5mw" value="1"/>
            <minint xmi:type="uml:LiteralInteger" xmi:id="_Fd24kGpqEei47fqiwvb5mw"/>
          </guard>
        </operand>
      </fragment>
      <fragment xmi:type="uml:ActionExecutionSpecification" xmi:id="_ZjdU4GpqEei47fqiwvb5mw" name="ActionExecSpec" covered="_tkiTAGppEei47fqiwvb5mw" finish="_ZjdU4WpqEei47fqiwvb5mw" start="_-3hF8HLpEei3ud9vrLTCZg"/>
      <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_-3hF8HLpEei3ud9vrLTCZg" name="jButton2ActionPerformed_MessageRecv" covered="_tkiTAGppEei47fqiwvb5mw" message="_-3ge4HLpEei3ud9vrLTCZg"/>
      <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_fRyJoGpqEei47fqiwvb5mw" name="MessageSend" covered="_tkiTAGppEei47fqiwvb5mw" message="_fRxikGpqEei47fqiwvb5mw"/>
      <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_fRyJoWpqEei47fqiwvb5mw" name="MessageRecv" covered="_u7F2QGppEei47fqiwvb5mw" message="_fRxikGpqEei47fqiwvb5mw"/>
      <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_8pdS8HLpEei3ud9vrLTCZg" name="ActionExecSpecStart" covered="_tkiTAGppEei47fqiwvb5mw" execution="_ZjdU4GpqEei47fqiwvb5mw"/>
      <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_Zjct0GpqEei47fqiwvb5mw" name="ActionExecSpecStart0" covered="_tkiTAGppEei47fqiwvb5mw" execution="_ZjdU4GpqEei47fqiwvb5mw"/>
      <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_ZjdU4WpqEei47fqiwvb5mw" name="ActionExecSpecFinish" covered="_tkiTAGppEei47fqiwvb5mw" execution="_ZjdU4GpqEei47fqiwvb5mw"/>
      <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_8pcr4HLpEei3ud9vrLTCZg" name="ActionExecSpecStart" covered="_tkiTAGppEei47fqiwvb5mw" execution="_ZjdU4GpqEei47fqiwvb5mw"/>
      <message xmi:type="uml:Message" xmi:id="_yGR_4GppEei47fqiwvb5mw" name="jbCropActionPerformed_Message" messageSort="asynchSignal" receiveEvent="_yGR_4WppEei47fqiwvb5mw" signature="_bGteEGWNEei0cbjpkrd07g"/>
      <message xmi:type="uml:Message" xmi:id="_KII2YGpqEei47fqiwvb5mw" name="jBUndoActionPerformed_Message" messageSort="asynchSignal" receiveEvent="_KIJdcGpqEei47fqiwvb5mw" signature="_bGwhYGWNEei0cbjpkrd07g"/>
      <message xmi:type="uml:Message" xmi:id="_fRxikGpqEei47fqiwvb5mw" name="Message" messageSort="createMessage" receiveEvent="_fRyJoWpqEei47fqiwvb5mw" sendEvent="_fRyJoGpqEei47fqiwvb5mw" signature="_bXQbgGWNEei0cbjpkrd07g"/>
      <message xmi:type="uml:Message" xmi:id="_-3ge4HLpEei3ud9vrLTCZg" name="jButton2ActionPerformed_Message" messageSort="asynchSignal" receiveEvent="_-3hF8HLpEei3ud9vrLTCZg" signature="_O9hFsHLVEei3ud9vrLTCZg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Interaction" xmi:id="_np_O8GmfEeiklvJUJNd-Aw" name="Step1_2-Step1_3">
      <ownedAttribute xmi:type="uml:Property" xmi:id="_ruPHgGmfEeiklvJUJNd-Aw" name="" type="_bXE1UGWNEei0cbjpkrd07g"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_sMP5MGmfEeiklvJUJNd-Aw" name="" type="_bJz1YGWNEei0cbjpkrd07g"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_do8OgGmkEeiklvJUJNd-Aw" name="" type="_bGWRsGWNEei0cbjpkrd07g"/>
      <lifeline xmi:type="uml:Lifeline" xmi:id="_ruOgcGmfEeiklvJUJNd-Aw" name="" represents="_ruPHgGmfEeiklvJUJNd-Aw" coveredBy="_EiKUIGmgEeiklvJUJNd-Aw _EiK7MGmgEeiklvJUJNd-Aw _Wx-TgGmgEeiklvJUJNd-Aw _ILLFYGmkEeiklvJUJNd-Aw _ILMTgWmkEeiklvJUJNd-Aw _ILMTgGmkEeiklvJUJNd-Aw _PWI3QGmkEeiklvJUJNd-Aw _TQDvIGmkEeiklvJUJNd-Aw _Y4_tkGmkEeiklvJUJNd-Aw _Y5AUoWmkEeiklvJUJNd-Aw _Y5AUoGmkEeiklvJUJNd-Aw _bFNtgGmkEeiklvJUJNd-Aw _eaBGIGmkEeiklvJUJNd-Aw _M_RwsGpsEei47fqiwvb5mw _M_SXwGpsEei47fqiwvb5mw _FfeXQGpsEei47fqiwvb5mw _FfeXQWpsEei47fqiwvb5mw _FfdwMGpsEei47fqiwvb5mw _FFP5YGpsEei47fqiwvb5mw"/>
      <lifeline xmi:type="uml:Lifeline" xmi:id="_sMPSIGmfEeiklvJUJNd-Aw" name="" represents="_sMP5MGmfEeiklvJUJNd-Aw" coveredBy="_EiKUIGmgEeiklvJUJNd-Aw _EiK7MGmgEeiklvJUJNd-Aw _Wx-TgGmgEeiklvJUJNd-Aw _TQDvIWmkEeiklvJUJNd-Aw"/>
      <lifeline xmi:type="uml:Lifeline" xmi:id="_do7ncGmkEeiklvJUJNd-Aw" name="" represents="_do8OgGmkEeiklvJUJNd-Aw" coveredBy="_EiKUIGmgEeiklvJUJNd-Aw _Wx-TgGmgEeiklvJUJNd-Aw _eaBGIWmkEeiklvJUJNd-Aw"/>
      <fragment xmi:type="uml:CombinedFragment" xmi:id="_M_RwsGpsEei47fqiwvb5mw" name="CombinedFragment0" covered="_ruOgcGmfEeiklvJUJNd-Aw" interactionOperator="opt">
        <operand xmi:type="uml:InteractionOperand" xmi:id="_M_SXwGpsEei47fqiwvb5mw" name="InteractionOperand" covered="_ruOgcGmfEeiklvJUJNd-Aw">
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_FFP5YGpsEei47fqiwvb5mw" name="step1_2_invert" covered="_ruOgcGmfEeiklvJUJNd-Aw" message="_FFPSUGpsEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_FfeXQWpsEei47fqiwvb5mw" name="ActionExecSpecFinish" covered="_ruOgcGmfEeiklvJUJNd-Aw" execution="_FfeXQGpsEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_FfdwMGpsEei47fqiwvb5mw" name="ActionExecSpecStart" covered="_ruOgcGmfEeiklvJUJNd-Aw" execution="_FfeXQGpsEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ActionExecutionSpecification" xmi:id="_FfeXQGpsEei47fqiwvb5mw" name="ActionExecSpec" covered="_ruOgcGmfEeiklvJUJNd-Aw" finish="_FfeXQWpsEei47fqiwvb5mw" start="_FFP5YGpsEei47fqiwvb5mw"/>
          <guard xmi:type="uml:InteractionConstraint" xmi:id="_M_SXwWpsEei47fqiwvb5mw">
            <specification xmi:type="uml:LiteralString" xmi:id="_M_SXwmpsEei47fqiwvb5mw" value="undefined"/>
            <maxint xmi:type="uml:LiteralInteger" xmi:id="_M_S-0WpsEei47fqiwvb5mw" value="1"/>
            <minint xmi:type="uml:LiteralInteger" xmi:id="_M_S-0GpsEei47fqiwvb5mw"/>
          </guard>
        </operand>
      </fragment>
      <fragment xmi:type="uml:CombinedFragment" xmi:id="_EiKUIGmgEeiklvJUJNd-Aw" name="CombinedFragment" covered="_sMPSIGmfEeiklvJUJNd-Aw _ruOgcGmfEeiklvJUJNd-Aw _do7ncGmkEeiklvJUJNd-Aw" interactionOperator="alt">
        <operand xmi:type="uml:InteractionOperand" xmi:id="_EiK7MGmgEeiklvJUJNd-Aw" name="InteractionOperand" covered="_sMPSIGmfEeiklvJUJNd-Aw _ruOgcGmfEeiklvJUJNd-Aw">
          <fragment xmi:type="uml:ActionExecutionSpecification" xmi:id="_ILMTgGmkEeiklvJUJNd-Aw" name="ActionExecSpec" covered="_ruOgcGmfEeiklvJUJNd-Aw" finish="_ILMTgWmkEeiklvJUJNd-Aw" start="_PWI3QGmkEeiklvJUJNd-Aw"/>
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_PWI3QGmkEeiklvJUJNd-Aw" name="step1_2_next" covered="_ruOgcGmfEeiklvJUJNd-Aw _jtWWEGmmEeiklvJUJNd-Aw" message="_PWIQMGmkEeiklvJUJNd-Aw"/>
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_TQDvIGmkEeiklvJUJNd-Aw" name="MessageSend" covered="_ruOgcGmfEeiklvJUJNd-Aw" message="_TQDIEGmkEeiklvJUJNd-Aw"/>
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_ILMTgWmkEeiklvJUJNd-Aw" name="ActionExecSpecFinish" covered="_ruOgcGmfEeiklvJUJNd-Aw" execution="_ILMTgGmkEeiklvJUJNd-Aw"/>
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_TQDvIWmkEeiklvJUJNd-Aw" name="MessageRecv" covered="_sMPSIGmfEeiklvJUJNd-Aw" message="_TQDIEGmkEeiklvJUJNd-Aw"/>
        </operand>
        <operand xmi:type="uml:InteractionOperand" xmi:id="_Wx-TgGmgEeiklvJUJNd-Aw" name="InteractionOperand0" covered="_sMPSIGmfEeiklvJUJNd-Aw _ruOgcGmfEeiklvJUJNd-Aw _do7ncGmkEeiklvJUJNd-Aw">
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_bFNtgGmkEeiklvJUJNd-Aw" name="step1_2_back" covered="_ruOgcGmfEeiklvJUJNd-Aw" message="_bFNGcGmkEeiklvJUJNd-Aw"/>
          <fragment xmi:type="uml:ActionExecutionSpecification" xmi:id="_Y5AUoGmkEeiklvJUJNd-Aw" name="ActionExecSpec" covered="_ruOgcGmfEeiklvJUJNd-Aw" finish="_Y5AUoWmkEeiklvJUJNd-Aw" start="_bFNtgGmkEeiklvJUJNd-Aw"/>
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_eaBGIGmkEeiklvJUJNd-Aw" name="Message0Send" covered="_ruOgcGmfEeiklvJUJNd-Aw" message="_eaAfEGmkEeiklvJUJNd-Aw"/>
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_eaBGIWmkEeiklvJUJNd-Aw" name="Message0Recv" covered="_do7ncGmkEeiklvJUJNd-Aw" message="_eaAfEGmkEeiklvJUJNd-Aw"/>
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_Y5AUoWmkEeiklvJUJNd-Aw" name="ActionExecSpecFinish" covered="_ruOgcGmfEeiklvJUJNd-Aw" execution="_Y5AUoGmkEeiklvJUJNd-Aw"/>
          <guard xmi:type="uml:InteractionConstraint" xmi:id="_Wx-6kGmgEeiklvJUJNd-Aw">
            <specification xmi:type="uml:LiteralString" xmi:id="_Wx-6kWmgEeiklvJUJNd-Aw" value="undefined"/>
            <maxint xmi:type="uml:LiteralInteger" xmi:id="_Wx-6k2mgEeiklvJUJNd-Aw" value="1"/>
            <minint xmi:type="uml:LiteralInteger" xmi:id="_Wx-6kmmgEeiklvJUJNd-Aw"/>
          </guard>
        </operand>
      </fragment>
      <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_ILLFYGmkEeiklvJUJNd-Aw" name="ActionExecSpecStart" covered="_ruOgcGmfEeiklvJUJNd-Aw" execution="_ILMTgGmkEeiklvJUJNd-Aw"/>
      <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_Y4_tkGmkEeiklvJUJNd-Aw" name="ActionExecSpecStart" covered="_ruOgcGmfEeiklvJUJNd-Aw" execution="_Y5AUoGmkEeiklvJUJNd-Aw"/>
      <message xmi:type="uml:Message" xmi:id="_PWIQMGmkEeiklvJUJNd-Aw" name="jButton2ActionPerformed_Message" messageSort="asynchSignal" receiveEvent="_PWI3QGmkEeiklvJUJNd-Aw" signature="_bXed8GWNEei0cbjpkrd07g"/>
      <message xmi:type="uml:Message" xmi:id="_TQDIEGmkEeiklvJUJNd-Aw" name="Message" messageSort="createMessage" receiveEvent="_TQDvIWmkEeiklvJUJNd-Aw" sendEvent="_TQDvIGmkEeiklvJUJNd-Aw" signature="_bKEUEGWNEei0cbjpkrd07g"/>
      <message xmi:type="uml:Message" xmi:id="_bFNGcGmkEeiklvJUJNd-Aw" name="jbBackActionPerformed_Message" messageSort="asynchSignal" receiveEvent="_bFNtgGmkEeiklvJUJNd-Aw" signature="_bXbaoGWNEei0cbjpkrd07g"/>
      <message xmi:type="uml:Message" xmi:id="_eaAfEGmkEeiklvJUJNd-Aw" name="Message0" messageSort="createMessage" receiveEvent="_eaBGIWmkEeiklvJUJNd-Aw" sendEvent="_eaBGIGmkEeiklvJUJNd-Aw" signature="_bGliQGWNEei0cbjpkrd07g"/>
      <message xmi:type="uml:Message" xmi:id="_FFPSUGpsEei47fqiwvb5mw" name="jbInvertActionPerformed_Message" messageSort="asynchSignal" receiveEvent="_FFP5YGpsEei47fqiwvb5mw" signature="_bXXwQGWNEei0cbjpkrd07g"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Interaction" xmi:id="_XFlkUGmmEeiklvJUJNd-Aw" name="Step1_3-Step1_4">
      <ownedAttribute xmi:type="uml:Property" xmi:id="_jtW9IGmmEeiklvJUJNd-Aw" name="" type="_bJz1YGWNEei0cbjpkrd07g"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_kYCR0GmmEeiklvJUJNd-Aw" name="" type="_bYBQgGWNEei0cbjpkrd07g"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_lIxLMGmmEeiklvJUJNd-Aw" name="" type="_bXE1UGWNEei0cbjpkrd07g"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_L54ZcGptEei47fqiwvb5mw" name="" type="_bYBQgGWNEei0cbjpkrd07g"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_M_9QsGptEei47fqiwvb5mw" name="" type="_bXE1UGWNEei0cbjpkrd07g"/>
      <lifeline xmi:type="uml:Lifeline" xmi:id="_jtWWEGmmEeiklvJUJNd-Aw" name="" represents="_jtW9IGmmEeiklvJUJNd-Aw" coveredBy="_PWI3QGmkEeiklvJUJNd-Aw _TNLA4GptEei47fqiwvb5mw _TNKZ0GptEei47fqiwvb5mw _YHRjYGptEei47fqiwvb5mw _YHQ8UGptEei47fqiwvb5mw _Z9jvkGptEei47fqiwvb5mw _eMuesGptEei47fqiwvb5mw _eMvFwWptEei47fqiwvb5mw _eMvFwGptEei47fqiwvb5mw _gRP7MGptEei47fqiwvb5mw _gRQiQGptEei47fqiwvb5mw _gRP7MWptEei47fqiwvb5mw _V0aI4GptEei47fqiwvb5mw _xNtcUGptEei47fqiwvb5mw _xNtcUWptEei47fqiwvb5mw _01EkkGptEei47fqiwvb5mw _4gmbIGptEei47fqiwvb5mw _4gnCMWptEei47fqiwvb5mw _4gnCMGptEei47fqiwvb5mw _5aBWcGptEei47fqiwvb5mw _5aB9gWptEei47fqiwvb5mw _5aB9gGptEei47fqiwvb5mw _7Nh7cGptEei47fqiwvb5mw _DH_QkGpuEei47fqiwvb5mw _ETEjoGpuEei47fqiwvb5mw _sQBLEHMEEei3ud9vrLTCZg _sQByIHMEEei3ud9vrLTCZg _wGJIEXMEEei3ud9vrLTCZg"/>
      <lifeline xmi:type="uml:Lifeline" xmi:id="_L53yYGptEei47fqiwvb5mw" name="" represents="_L54ZcGptEei47fqiwvb5mw" coveredBy="_xNtcUGptEei47fqiwvb5mw _xNtcUWptEei47fqiwvb5mw _01EkkGptEei47fqiwvb5mw _DH_3oGpuEei47fqiwvb5mw"/>
      <lifeline xmi:type="uml:Lifeline" xmi:id="_M_8CkGptEei47fqiwvb5mw" name="" represents="_M_9QsGptEei47fqiwvb5mw" coveredBy="_xNtcUGptEei47fqiwvb5mw _01EkkGptEei47fqiwvb5mw _ETEjoWpuEei47fqiwvb5mw"/>
      <fragment xmi:type="uml:CombinedFragment" xmi:id="_TNKZ0GptEei47fqiwvb5mw" name="CombinedFragment" covered="_jtWWEGmmEeiklvJUJNd-Aw" interactionOperator="opt">
        <operand xmi:type="uml:InteractionOperand" xmi:id="_TNLA4GptEei47fqiwvb5mw" name="InteractionOperand" covered="_jtWWEGmmEeiklvJUJNd-Aw">
          <fragment xmi:type="uml:ActionExecutionSpecification" xmi:id="_eMvFwGptEei47fqiwvb5mw" name="ActionExecSpec" covered="_jtWWEGmmEeiklvJUJNd-Aw" finish="_eMvFwWptEei47fqiwvb5mw" start="_V0aI4GptEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_V0aI4GptEei47fqiwvb5mw" name="step1_3_auto" covered="_jtWWEGmmEeiklvJUJNd-Aw" message="_V0Zh0GptEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_eMvFwWptEei47fqiwvb5mw" name="ActionExecSpecFinish" covered="_jtWWEGmmEeiklvJUJNd-Aw" execution="_eMvFwGptEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_eMuesGptEei47fqiwvb5mw" name="ActionExecSpecStart" covered="_jtWWEGmmEeiklvJUJNd-Aw" execution="_eMvFwGptEei47fqiwvb5mw"/>
          <guard xmi:type="uml:InteractionConstraint" xmi:id="_TNLA4WptEei47fqiwvb5mw">
            <specification xmi:type="uml:LiteralString" xmi:id="_TNLA4mptEei47fqiwvb5mw" value="undefined"/>
            <maxint xmi:type="uml:LiteralInteger" xmi:id="_TNLA5GptEei47fqiwvb5mw" value="1"/>
            <minint xmi:type="uml:LiteralInteger" xmi:id="_TNLA42ptEei47fqiwvb5mw"/>
          </guard>
        </operand>
      </fragment>
      <fragment xmi:type="uml:CombinedFragment" xmi:id="_YHQ8UGptEei47fqiwvb5mw" name="CombinedFragment0" covered="_jtWWEGmmEeiklvJUJNd-Aw" interactionOperator="opt">
        <operand xmi:type="uml:InteractionOperand" xmi:id="_YHRjYGptEei47fqiwvb5mw" name="InteractionOperand" covered="_jtWWEGmmEeiklvJUJNd-Aw">
          <fragment xmi:type="uml:ActionExecutionSpecification" xmi:id="_gRP7MWptEei47fqiwvb5mw" name="ActionExecSpec" covered="_jtWWEGmmEeiklvJUJNd-Aw" finish="_gRQiQGptEei47fqiwvb5mw" start="_Z9jvkGptEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_Z9jvkGptEei47fqiwvb5mw" name="step1_3_manual" covered="_jtWWEGmmEeiklvJUJNd-Aw" message="_Z9jIgGptEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_gRP7MGptEei47fqiwvb5mw" name="ActionExecSpecStart" covered="_jtWWEGmmEeiklvJUJNd-Aw" execution="_gRP7MWptEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_gRQiQGptEei47fqiwvb5mw" name="ActionExecSpecFinish" covered="_jtWWEGmmEeiklvJUJNd-Aw" execution="_gRP7MWptEei47fqiwvb5mw"/>
          <guard xmi:type="uml:InteractionConstraint" xmi:id="_YHRjYWptEei47fqiwvb5mw">
            <specification xmi:type="uml:LiteralString" xmi:id="_YHSKcGptEei47fqiwvb5mw" value="undefined"/>
            <maxint xmi:type="uml:LiteralInteger" xmi:id="_YHSKcmptEei47fqiwvb5mw" value="1"/>
            <minint xmi:type="uml:LiteralInteger" xmi:id="_YHSKcWptEei47fqiwvb5mw"/>
          </guard>
        </operand>
      </fragment>
      <fragment xmi:type="uml:CombinedFragment" xmi:id="_xNtcUGptEei47fqiwvb5mw" name="CombinedFragment1" covered="_L53yYGptEei47fqiwvb5mw _jtWWEGmmEeiklvJUJNd-Aw _M_8CkGptEei47fqiwvb5mw" interactionOperator="alt">
        <operand xmi:type="uml:InteractionOperand" xmi:id="_xNtcUWptEei47fqiwvb5mw" name="InteractionOperand" covered="_L53yYGptEei47fqiwvb5mw _jtWWEGmmEeiklvJUJNd-Aw">
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_wGJIEXMEEei3ud9vrLTCZg" name="jButton2ActionPerformed_MessageRecv" covered="_jtWWEGmmEeiklvJUJNd-Aw" message="_wGJIEHMEEei3ud9vrLTCZg"/>
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_sQByIHMEEei3ud9vrLTCZg" name="ActionExecSpecStart" covered="_jtWWEGmmEeiklvJUJNd-Aw" execution="_4gnCMGptEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ActionExecutionSpecification" xmi:id="_4gnCMGptEei47fqiwvb5mw" name="ActionExecSpec" covered="_jtWWEGmmEeiklvJUJNd-Aw" finish="_4gnCMWptEei47fqiwvb5mw" start="_wGJIEXMEEei3ud9vrLTCZg"/>
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_DH_QkGpuEei47fqiwvb5mw" name="MessageSend" covered="_jtWWEGmmEeiklvJUJNd-Aw" message="_DH-pgGpuEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_4gmbIGptEei47fqiwvb5mw" name="ActionExecSpecStart" covered="_jtWWEGmmEeiklvJUJNd-Aw" execution="_4gnCMGptEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_4gnCMWptEei47fqiwvb5mw" name="ActionExecSpecFinish" covered="_jtWWEGmmEeiklvJUJNd-Aw" execution="_4gnCMGptEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_sQBLEHMEEei3ud9vrLTCZg" name="ActionExecSpecStart" covered="_jtWWEGmmEeiklvJUJNd-Aw" execution="_4gnCMGptEei47fqiwvb5mw"/>
          <guard xmi:type="uml:InteractionConstraint" xmi:id="_xNuDYGptEei47fqiwvb5mw">
            <specification xmi:type="uml:LiteralString" xmi:id="_xNuDYWptEei47fqiwvb5mw" value="undefined"/>
            <maxint xmi:type="uml:LiteralInteger" xmi:id="_xNuDY2ptEei47fqiwvb5mw" value="1"/>
            <minint xmi:type="uml:LiteralInteger" xmi:id="_xNuDYmptEei47fqiwvb5mw"/>
          </guard>
        </operand>
        <operand xmi:type="uml:InteractionOperand" xmi:id="_01EkkGptEei47fqiwvb5mw" name="InteractionOperand0" covered="_L53yYGptEei47fqiwvb5mw _jtWWEGmmEeiklvJUJNd-Aw _M_8CkGptEei47fqiwvb5mw">
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_5aBWcGptEei47fqiwvb5mw" name="ActionExecSpecStart" covered="_jtWWEGmmEeiklvJUJNd-Aw" execution="_5aB9gGptEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_7Nh7cGptEei47fqiwvb5mw" name="step1_3_back" covered="_jtWWEGmmEeiklvJUJNd-Aw" message="_7NhUYGptEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ActionExecutionSpecification" xmi:id="_5aB9gGptEei47fqiwvb5mw" name="ActionExecSpec" covered="_jtWWEGmmEeiklvJUJNd-Aw" finish="_5aB9gWptEei47fqiwvb5mw" start="_7Nh7cGptEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_ETEjoGpuEei47fqiwvb5mw" name="Message0Send" covered="_jtWWEGmmEeiklvJUJNd-Aw" message="_ETD8kGpuEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_5aB9gWptEei47fqiwvb5mw" name="ActionExecSpecFinish" covered="_jtWWEGmmEeiklvJUJNd-Aw" execution="_5aB9gGptEei47fqiwvb5mw"/>
          <guard xmi:type="uml:InteractionConstraint" xmi:id="_01FLoGptEei47fqiwvb5mw">
            <specification xmi:type="uml:LiteralString" xmi:id="_01FLoWptEei47fqiwvb5mw" value="undefined"/>
            <maxint xmi:type="uml:LiteralInteger" xmi:id="_01FLo2ptEei47fqiwvb5mw" value="1"/>
            <minint xmi:type="uml:LiteralInteger" xmi:id="_01FLomptEei47fqiwvb5mw"/>
          </guard>
        </operand>
      </fragment>
      <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_DH_3oGpuEei47fqiwvb5mw" name="MessageRecv" covered="_L53yYGptEei47fqiwvb5mw" message="_DH-pgGpuEei47fqiwvb5mw"/>
      <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_ETEjoWpuEei47fqiwvb5mw" name="Message0Recv" covered="_M_8CkGptEei47fqiwvb5mw" message="_ETD8kGpuEei47fqiwvb5mw"/>
      <message xmi:type="uml:Message" xmi:id="_V0Zh0GptEei47fqiwvb5mw" name="jbInvertActionPerformed_Message" messageSort="asynchSignal" receiveEvent="_V0aI4GptEei47fqiwvb5mw" signature="_bKRvcGWNEei0cbjpkrd07g"/>
      <message xmi:type="uml:Message" xmi:id="_Z9jIgGptEei47fqiwvb5mw" name="jButton1ActionPerformed_Message" messageSort="asynchSignal" receiveEvent="_Z9jvkGptEei47fqiwvb5mw" signature="_bKhnEGWNEei0cbjpkrd07g"/>
      <message xmi:type="uml:Message" xmi:id="_7NhUYGptEei47fqiwvb5mw" name="jbBackActionPerformed_Message" messageSort="asynchSignal" receiveEvent="_7Nh7cGptEei47fqiwvb5mw" signature="_bKZrQGWNEei0cbjpkrd07g"/>
      <message xmi:type="uml:Message" xmi:id="_DH-pgGpuEei47fqiwvb5mw" name="Message" messageSort="createMessage" receiveEvent="_DH_3oGpuEei47fqiwvb5mw" sendEvent="_DH_QkGpuEei47fqiwvb5mw" signature="_bYLBgGWNEei0cbjpkrd07g"/>
      <message xmi:type="uml:Message" xmi:id="_ETD8kGpuEei47fqiwvb5mw" name="Message0" messageSort="createMessage" receiveEvent="_ETEjoWpuEei47fqiwvb5mw" sendEvent="_ETEjoGpuEei47fqiwvb5mw" signature="_bXQbgGWNEei0cbjpkrd07g"/>
      <message xmi:type="uml:Message" xmi:id="_wGJIEHMEEei3ud9vrLTCZg" name="jButton2ActionPerformed_Message" messageSort="asynchSignal" receiveEvent="_wGJIEXMEEei3ud9vrLTCZg" signature="_bKdVoGWNEei0cbjpkrd07g"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Interaction" xmi:id="_6SmIYGoZEei47fqiwvb5mw" name="Step1_4-Step2_1">
      <ownedAttribute xmi:type="uml:Property" xmi:id="_G-i2kGoaEei47fqiwvb5mw" name="" type="_bYBQgGWNEei0cbjpkrd07g"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_Hnz2AGoaEei47fqiwvb5mw" name="" type="_bJz1YGWNEei0cbjpkrd07g"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_ILSWgGoaEei47fqiwvb5mw" name="" type="_bIrM8GWNEei0cbjpkrd07g"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_6XeLQGpvEei47fqiwvb5mw" name="" type="_bIrM8GWNEei0cbjpkrd07g"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_87sbgGpvEei47fqiwvb5mw" name="" type="_bJz1YGWNEei0cbjpkrd07g"/>
      <lifeline xmi:type="uml:Lifeline" xmi:id="_G-hocGoaEei47fqiwvb5mw" name="" represents="_G-i2kGoaEei47fqiwvb5mw" coveredBy="_5RcMwGpuEei47fqiwvb5mw _5Rcz0GpuEei47fqiwvb5mw _7li9YGpuEei47fqiwvb5mw _7ljkcGpuEei47fqiwvb5mw _8MuSIGpuEei47fqiwvb5mw _8Mu5MGpuEei47fqiwvb5mw _9IxqsGpuEei47fqiwvb5mw _9IxDoGpuEei47fqiwvb5mw _95nRwGpuEei47fqiwvb5mw _ClqKIGpvEei47fqiwvb5mw _B6efIGpvEei47fqiwvb5mw _ClqxMGpvEei47fqiwvb5mw _DZieIGpvEei47fqiwvb5mw _DZieIWpvEei47fqiwvb5mw _B6d4EGpvEei47fqiwvb5mw _95nRwWpuEei47fqiwvb5mw _HPHokGpvEei47fqiwvb5mw _HPHokmpvEei47fqiwvb5mw _HPHokWpvEei47fqiwvb5mw _Hme_sGpvEei47fqiwvb5mw _HmfmwGpvEei47fqiwvb5mw _Hme_sWpvEei47fqiwvb5mw _JF1SkGpvEei47fqiwvb5mw _JF1SkmpvEei47fqiwvb5mw _JF1SkWpvEei47fqiwvb5mw _JlLhAGpvEei47fqiwvb5mw _JlMIEWpvEei47fqiwvb5mw _JlMIEGpvEei47fqiwvb5mw _KARhkGpvEei47fqiwvb5mw _KARhkmpvEei47fqiwvb5mw _KARhkWpvEei47fqiwvb5mw _KejZAGpvEei47fqiwvb5mw _KekAEWpvEei47fqiwvb5mw _KekAEGpvEei47fqiwvb5mw _LCJOQGpvEei47fqiwvb5mw _LCJ1UWpvEei47fqiwvb5mw _LCJ1UGpvEei47fqiwvb5mw _L25sAGpvEei47fqiwvb5mw _L26TEWpvEei47fqiwvb5mw _L26TEGpvEei47fqiwvb5mw _PmoGEGpvEei47fqiwvb5mw _PmotIGpvEei47fqiwvb5mw _RjmJEGpvEei47fqiwvb5mw _S9_qgmpvEei47fqiwvb5mw _S9_qgWpvEei47fqiwvb5mw _TRFlompvEei47fqiwvb5mw _TRFloWpvEei47fqiwvb5mw _XgciAGpvEei47fqiwvb5mw _a6GlcGpvEei47fqiwvb5mw _dgMd8GpvEei47fqiwvb5mw _gZBFMGpvEei47fqiwvb5mw _iSAnIWpvEei47fqiwvb5mw _kIr04GpvEei47fqiwvb5mw _lwzpQGpvEei47fqiwvb5mw _nglk0GpvEei47fqiwvb5mw _o9wtcGpvEei47fqiwvb5mw _qjYncWpvEei47fqiwvb5mw _7mXnUGpvEei47fqiwvb5mw _99UQkGpvEei47fqiwvb5mw"/>
      <lifeline xmi:type="uml:Lifeline" xmi:id="_6XdkMGpvEei47fqiwvb5mw" name="" represents="_6XeLQGpvEei47fqiwvb5mw" coveredBy="_PmoGEGpvEei47fqiwvb5mw _RjmJEGpvEei47fqiwvb5mw _PmotIGpvEei47fqiwvb5mw"/>
      <lifeline xmi:type="uml:Lifeline" xmi:id="_87r0cGpvEei47fqiwvb5mw" name="" represents="_87sbgGpvEei47fqiwvb5mw" coveredBy="_PmoGEGpvEei47fqiwvb5mw _RjmJEGpvEei47fqiwvb5mw _99UQkWpvEei47fqiwvb5mw"/>
      <fragment xmi:type="uml:CombinedFragment" xmi:id="_5RcMwGpuEei47fqiwvb5mw" name="CombinedFragment" covered="_G-hocGoaEei47fqiwvb5mw" interactionOperator="opt">
        <operand xmi:type="uml:InteractionOperand" xmi:id="_5Rcz0GpuEei47fqiwvb5mw" name="InteractionOperand" covered="_G-hocGoaEei47fqiwvb5mw">
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_XgciAGpvEei47fqiwvb5mw" name="step1_4_flip_hor" covered="_G-hocGoaEei47fqiwvb5mw" message="_Xgb68GpvEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_HPHokGpvEei47fqiwvb5mw" name="ActionExecSpecStart" covered="_G-hocGoaEei47fqiwvb5mw" execution="_HPHokWpvEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ActionExecutionSpecification" xmi:id="_HPHokWpvEei47fqiwvb5mw" name="ActionExecSpec" covered="_G-hocGoaEei47fqiwvb5mw" finish="_HPHokmpvEei47fqiwvb5mw" start="_XgciAGpvEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_HPHokmpvEei47fqiwvb5mw" name="ActionExecSpecFinish" covered="_G-hocGoaEei47fqiwvb5mw" execution="_HPHokWpvEei47fqiwvb5mw"/>
          <guard xmi:type="uml:InteractionConstraint" xmi:id="_5Rcz0WpuEei47fqiwvb5mw">
            <specification xmi:type="uml:LiteralString" xmi:id="_5Rcz0mpuEei47fqiwvb5mw" value="undefined"/>
            <maxint xmi:type="uml:LiteralInteger" xmi:id="_5Rda4GpuEei47fqiwvb5mw" value="1"/>
            <minint xmi:type="uml:LiteralInteger" xmi:id="_5Rcz02puEei47fqiwvb5mw"/>
          </guard>
        </operand>
      </fragment>
      <fragment xmi:type="uml:CombinedFragment" xmi:id="_7li9YGpuEei47fqiwvb5mw" name="CombinedFragment0" covered="_G-hocGoaEei47fqiwvb5mw" interactionOperator="opt">
        <operand xmi:type="uml:InteractionOperand" xmi:id="_7ljkcGpuEei47fqiwvb5mw" name="InteractionOperand" covered="_G-hocGoaEei47fqiwvb5mw">
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_a6GlcGpvEei47fqiwvb5mw" name="jButton1ActionPerformed_MessageRecv" covered="_G-hocGoaEei47fqiwvb5mw" message="_a6F-YGpvEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_Hme_sGpvEei47fqiwvb5mw" name="ActionExecSpecStart" covered="_G-hocGoaEei47fqiwvb5mw" execution="_Hme_sWpvEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ActionExecutionSpecification" xmi:id="_Hme_sWpvEei47fqiwvb5mw" name="ActionExecSpec" covered="_G-hocGoaEei47fqiwvb5mw" finish="_HmfmwGpvEei47fqiwvb5mw" start="_a6GlcGpvEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_HmfmwGpvEei47fqiwvb5mw" name="ActionExecSpecFinish" covered="_G-hocGoaEei47fqiwvb5mw" execution="_Hme_sWpvEei47fqiwvb5mw"/>
          <guard xmi:type="uml:InteractionConstraint" xmi:id="_7ljkcWpuEei47fqiwvb5mw">
            <specification xmi:type="uml:LiteralString" xmi:id="_7ljkcmpuEei47fqiwvb5mw" value="undefined"/>
            <maxint xmi:type="uml:LiteralInteger" xmi:id="_7lkLgGpuEei47fqiwvb5mw" value="1"/>
            <minint xmi:type="uml:LiteralInteger" xmi:id="_7ljkc2puEei47fqiwvb5mw"/>
          </guard>
        </operand>
      </fragment>
      <fragment xmi:type="uml:CombinedFragment" xmi:id="_8MuSIGpuEei47fqiwvb5mw" name="CombinedFragment1" covered="_G-hocGoaEei47fqiwvb5mw" interactionOperator="opt">
        <operand xmi:type="uml:InteractionOperand" xmi:id="_8Mu5MGpuEei47fqiwvb5mw" name="InteractionOperand" covered="_G-hocGoaEei47fqiwvb5mw">
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_dgMd8GpvEei47fqiwvb5mw" name="jButton3ActionPerformed_MessageRecv" covered="_G-hocGoaEei47fqiwvb5mw" message="_dgL24GpvEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_JF1SkGpvEei47fqiwvb5mw" name="ActionExecSpecStart" covered="_G-hocGoaEei47fqiwvb5mw" execution="_JF1SkWpvEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ActionExecutionSpecification" xmi:id="_JF1SkWpvEei47fqiwvb5mw" name="ActionExecSpec" covered="_G-hocGoaEei47fqiwvb5mw" finish="_JF1SkmpvEei47fqiwvb5mw" start="_dgMd8GpvEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_JF1SkmpvEei47fqiwvb5mw" name="ActionExecSpecFinish" covered="_G-hocGoaEei47fqiwvb5mw" execution="_JF1SkWpvEei47fqiwvb5mw"/>
          <guard xmi:type="uml:InteractionConstraint" xmi:id="_8Mu5MWpuEei47fqiwvb5mw">
            <specification xmi:type="uml:LiteralString" xmi:id="_8Mu5MmpuEei47fqiwvb5mw" value="undefined"/>
            <maxint xmi:type="uml:LiteralInteger" xmi:id="_8MvgQWpuEei47fqiwvb5mw" value="1"/>
            <minint xmi:type="uml:LiteralInteger" xmi:id="_8MvgQGpuEei47fqiwvb5mw"/>
          </guard>
        </operand>
      </fragment>
      <fragment xmi:type="uml:CombinedFragment" xmi:id="_9IxDoGpuEei47fqiwvb5mw" name="CombinedFragment2" covered="_G-hocGoaEei47fqiwvb5mw" interactionOperator="opt">
        <operand xmi:type="uml:InteractionOperand" xmi:id="_9IxqsGpuEei47fqiwvb5mw" name="InteractionOperand" covered="_G-hocGoaEei47fqiwvb5mw">
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_gZBFMGpvEei47fqiwvb5mw" name="jButton4ActionPerformed_MessageRecv" covered="_G-hocGoaEei47fqiwvb5mw" message="_gZAeIGpvEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_JlLhAGpvEei47fqiwvb5mw" name="ActionExecSpecStart" covered="_G-hocGoaEei47fqiwvb5mw" execution="_JlMIEGpvEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ActionExecutionSpecification" xmi:id="_JlMIEGpvEei47fqiwvb5mw" name="ActionExecSpec" covered="_G-hocGoaEei47fqiwvb5mw" finish="_JlMIEWpvEei47fqiwvb5mw" start="_gZBFMGpvEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_JlMIEWpvEei47fqiwvb5mw" name="ActionExecSpecFinish" covered="_G-hocGoaEei47fqiwvb5mw" execution="_JlMIEGpvEei47fqiwvb5mw"/>
          <guard xmi:type="uml:InteractionConstraint" xmi:id="_9IxqsWpuEei47fqiwvb5mw">
            <specification xmi:type="uml:LiteralString" xmi:id="_9IxqsmpuEei47fqiwvb5mw" value="undefined"/>
            <maxint xmi:type="uml:LiteralInteger" xmi:id="_9IxqtGpuEei47fqiwvb5mw" value="1"/>
            <minint xmi:type="uml:LiteralInteger" xmi:id="_9Ixqs2puEei47fqiwvb5mw"/>
          </guard>
        </operand>
      </fragment>
      <fragment xmi:type="uml:CombinedFragment" xmi:id="_95nRwGpuEei47fqiwvb5mw" name="CombinedFragment3" covered="_G-hocGoaEei47fqiwvb5mw" interactionOperator="opt">
        <operand xmi:type="uml:InteractionOperand" xmi:id="_95nRwWpuEei47fqiwvb5mw" name="InteractionOperand" covered="_G-hocGoaEei47fqiwvb5mw">
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_iSAnIWpvEei47fqiwvb5mw" name="jButton5ActionPerformed_MessageRecv" covered="_G-hocGoaEei47fqiwvb5mw" message="_iSAnIGpvEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_KARhkGpvEei47fqiwvb5mw" name="ActionExecSpecStart" covered="_G-hocGoaEei47fqiwvb5mw" execution="_KARhkWpvEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ActionExecutionSpecification" xmi:id="_KARhkWpvEei47fqiwvb5mw" name="ActionExecSpec" covered="_G-hocGoaEei47fqiwvb5mw" finish="_KARhkmpvEei47fqiwvb5mw" start="_iSAnIWpvEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_KARhkmpvEei47fqiwvb5mw" name="ActionExecSpecFinish" covered="_G-hocGoaEei47fqiwvb5mw" execution="_KARhkWpvEei47fqiwvb5mw"/>
          <guard xmi:type="uml:InteractionConstraint" xmi:id="_95n40GpuEei47fqiwvb5mw">
            <specification xmi:type="uml:LiteralString" xmi:id="_95n40WpuEei47fqiwvb5mw" value="undefined"/>
            <maxint xmi:type="uml:LiteralInteger" xmi:id="_95n402puEei47fqiwvb5mw" value="1"/>
            <minint xmi:type="uml:LiteralInteger" xmi:id="_95n40mpuEei47fqiwvb5mw"/>
          </guard>
        </operand>
      </fragment>
      <fragment xmi:type="uml:CombinedFragment" xmi:id="_B6d4EGpvEei47fqiwvb5mw" name="CombinedFragment4" covered="_G-hocGoaEei47fqiwvb5mw" interactionOperator="opt">
        <operand xmi:type="uml:InteractionOperand" xmi:id="_B6efIGpvEei47fqiwvb5mw" name="InteractionOperand" covered="_G-hocGoaEei47fqiwvb5mw">
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_kIr04GpvEei47fqiwvb5mw" name="jButton7ActionPerformed_MessageRecv" covered="_G-hocGoaEei47fqiwvb5mw" message="_kIrN0GpvEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_KejZAGpvEei47fqiwvb5mw" name="ActionExecSpecStart" covered="_G-hocGoaEei47fqiwvb5mw" execution="_KekAEGpvEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ActionExecutionSpecification" xmi:id="_KekAEGpvEei47fqiwvb5mw" name="ActionExecSpec" covered="_G-hocGoaEei47fqiwvb5mw" finish="_KekAEWpvEei47fqiwvb5mw" start="_kIr04GpvEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_KekAEWpvEei47fqiwvb5mw" name="ActionExecSpecFinish" covered="_G-hocGoaEei47fqiwvb5mw" execution="_KekAEGpvEei47fqiwvb5mw"/>
          <guard xmi:type="uml:InteractionConstraint" xmi:id="_B6efIWpvEei47fqiwvb5mw">
            <specification xmi:type="uml:LiteralString" xmi:id="_B6efImpvEei47fqiwvb5mw" value="undefined"/>
            <maxint xmi:type="uml:LiteralInteger" xmi:id="_B6fGMWpvEei47fqiwvb5mw" value="1"/>
            <minint xmi:type="uml:LiteralInteger" xmi:id="_B6fGMGpvEei47fqiwvb5mw"/>
          </guard>
        </operand>
      </fragment>
      <fragment xmi:type="uml:CombinedFragment" xmi:id="_ClqKIGpvEei47fqiwvb5mw" name="CombinedFragment5" covered="_G-hocGoaEei47fqiwvb5mw" interactionOperator="opt">
        <operand xmi:type="uml:InteractionOperand" xmi:id="_ClqxMGpvEei47fqiwvb5mw" name="InteractionOperand" covered="_G-hocGoaEei47fqiwvb5mw">
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_lwzpQGpvEei47fqiwvb5mw" name="jButton8ActionPerformed_MessageRecv" covered="_G-hocGoaEei47fqiwvb5mw" message="_lwzCMGpvEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_LCJOQGpvEei47fqiwvb5mw" name="ActionExecSpecStart" covered="_G-hocGoaEei47fqiwvb5mw" execution="_LCJ1UGpvEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ActionExecutionSpecification" xmi:id="_LCJ1UGpvEei47fqiwvb5mw" name="ActionExecSpec" covered="_G-hocGoaEei47fqiwvb5mw" finish="_LCJ1UWpvEei47fqiwvb5mw" start="_lwzpQGpvEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_LCJ1UWpvEei47fqiwvb5mw" name="ActionExecSpecFinish" covered="_G-hocGoaEei47fqiwvb5mw" execution="_LCJ1UGpvEei47fqiwvb5mw"/>
          <guard xmi:type="uml:InteractionConstraint" xmi:id="_ClqxMWpvEei47fqiwvb5mw">
            <specification xmi:type="uml:LiteralString" xmi:id="_ClqxMmpvEei47fqiwvb5mw" value="undefined"/>
            <maxint xmi:type="uml:LiteralInteger" xmi:id="_ClqxNGpvEei47fqiwvb5mw" value="1"/>
            <minint xmi:type="uml:LiteralInteger" xmi:id="_ClqxM2pvEei47fqiwvb5mw"/>
          </guard>
        </operand>
      </fragment>
      <fragment xmi:type="uml:CombinedFragment" xmi:id="_DZieIGpvEei47fqiwvb5mw" name="CombinedFragment6" covered="_G-hocGoaEei47fqiwvb5mw" interactionOperator="opt">
        <operand xmi:type="uml:InteractionOperand" xmi:id="_DZieIWpvEei47fqiwvb5mw" name="InteractionOperand" covered="_G-hocGoaEei47fqiwvb5mw">
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_nglk0GpvEei47fqiwvb5mw" name="jButton9ActionPerformed_MessageRecv" covered="_G-hocGoaEei47fqiwvb5mw" message="_ngk9wGpvEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_L25sAGpvEei47fqiwvb5mw" name="ActionExecSpecStart" covered="_G-hocGoaEei47fqiwvb5mw" execution="_L26TEGpvEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ActionExecutionSpecification" xmi:id="_L26TEGpvEei47fqiwvb5mw" name="ActionExecSpec" covered="_G-hocGoaEei47fqiwvb5mw" finish="_L26TEWpvEei47fqiwvb5mw" start="_nglk0GpvEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_L26TEWpvEei47fqiwvb5mw" name="ActionExecSpecFinish" covered="_G-hocGoaEei47fqiwvb5mw" execution="_L26TEGpvEei47fqiwvb5mw"/>
          <guard xmi:type="uml:InteractionConstraint" xmi:id="_DZjFMGpvEei47fqiwvb5mw">
            <specification xmi:type="uml:LiteralString" xmi:id="_DZjFMWpvEei47fqiwvb5mw" value="undefined"/>
            <maxint xmi:type="uml:LiteralInteger" xmi:id="_DZjFM2pvEei47fqiwvb5mw" value="1"/>
            <minint xmi:type="uml:LiteralInteger" xmi:id="_DZjFMmpvEei47fqiwvb5mw"/>
          </guard>
        </operand>
      </fragment>
      <fragment xmi:type="uml:CombinedFragment" xmi:id="_PmoGEGpvEei47fqiwvb5mw" name="CombinedFragment7" covered="_G-hocGoaEei47fqiwvb5mw _87r0cGpvEei47fqiwvb5mw _6XdkMGpvEei47fqiwvb5mw" interactionOperator="alt">
        <operand xmi:type="uml:InteractionOperand" xmi:id="_PmotIGpvEei47fqiwvb5mw" name="InteractionOperand" covered="_G-hocGoaEei47fqiwvb5mw _6XdkMGpvEei47fqiwvb5mw">
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_o9wtcGpvEei47fqiwvb5mw" name="jButton2ActionPerformed_MessageRecv" covered="_G-hocGoaEei47fqiwvb5mw" message="_o9wGYGpvEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ActionExecutionSpecification" xmi:id="_S9_qgWpvEei47fqiwvb5mw" name="ActionExecSpec" covered="_G-hocGoaEei47fqiwvb5mw" finish="_S9_qgmpvEei47fqiwvb5mw" start="_o9wtcGpvEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_7mXnUGpvEei47fqiwvb5mw" name="MessageSend" covered="_G-hocGoaEei47fqiwvb5mw" message="_7mXAQGpvEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_S9_qgmpvEei47fqiwvb5mw" name="ActionExecSpecFinish" covered="_G-hocGoaEei47fqiwvb5mw" execution="_S9_qgWpvEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_7mXnUWpvEei47fqiwvb5mw" name="MessageRecv" message="_7mXAQGpvEei47fqiwvb5mw"/>
          <guard xmi:type="uml:InteractionConstraint" xmi:id="_PmotIWpvEei47fqiwvb5mw">
            <specification xmi:type="uml:LiteralString" xmi:id="_PmotImpvEei47fqiwvb5mw" value="undefined"/>
            <maxint xmi:type="uml:LiteralInteger" xmi:id="_PmpUMGpvEei47fqiwvb5mw" value="1"/>
            <minint xmi:type="uml:LiteralInteger" xmi:id="_PmotI2pvEei47fqiwvb5mw"/>
          </guard>
        </operand>
        <operand xmi:type="uml:InteractionOperand" xmi:id="_RjmJEGpvEei47fqiwvb5mw" name="InteractionOperand0" covered="_G-hocGoaEei47fqiwvb5mw _87r0cGpvEei47fqiwvb5mw _6XdkMGpvEei47fqiwvb5mw">
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_99UQkWpvEei47fqiwvb5mw" name="Message0Recv" covered="_87r0cGpvEei47fqiwvb5mw" message="_99TpgGpvEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_qjYncWpvEei47fqiwvb5mw" name="jbBackActionPerformed_MessageRecv" covered="_G-hocGoaEei47fqiwvb5mw" message="_qjYncGpvEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ActionExecutionSpecification" xmi:id="_TRFloWpvEei47fqiwvb5mw" name="ActionExecSpec" covered="_G-hocGoaEei47fqiwvb5mw" finish="_TRFlompvEei47fqiwvb5mw" start="_qjYncWpvEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_99UQkGpvEei47fqiwvb5mw" name="Message0Send" covered="_G-hocGoaEei47fqiwvb5mw" message="_99TpgGpvEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_TRFlompvEei47fqiwvb5mw" name="ActionExecSpecFinish" covered="_G-hocGoaEei47fqiwvb5mw" execution="_TRFloWpvEei47fqiwvb5mw"/>
          <guard xmi:type="uml:InteractionConstraint" xmi:id="_RjmwIGpvEei47fqiwvb5mw">
            <specification xmi:type="uml:LiteralString" xmi:id="_RjmwIWpvEei47fqiwvb5mw" value="undefined"/>
            <maxint xmi:type="uml:LiteralInteger" xmi:id="_RjmwI2pvEei47fqiwvb5mw" value="1"/>
            <minint xmi:type="uml:LiteralInteger" xmi:id="_RjmwImpvEei47fqiwvb5mw"/>
          </guard>
        </operand>
      </fragment>
      <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_S9_qgGpvEei47fqiwvb5mw" name="ActionExecSpecStart" execution="_S9_qgWpvEei47fqiwvb5mw"/>
      <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_TRFloGpvEei47fqiwvb5mw" name="ActionExecSpecStart" execution="_TRFloWpvEei47fqiwvb5mw"/>
      <message xmi:type="uml:Message" xmi:id="_Xgb68GpvEei47fqiwvb5mw" name="jbInvertActionPerformed_Message" messageSort="asynchSignal" receiveEvent="_XgciAGpvEei47fqiwvb5mw" signature="_bYaSEGWNEei0cbjpkrd07g"/>
      <message xmi:type="uml:Message" xmi:id="_a6F-YGpvEei47fqiwvb5mw" name="jButton1ActionPerformed_Message" messageSort="asynchSignal" receiveEvent="_a6GlcGpvEei47fqiwvb5mw" signature="_bYejgGWNEei0cbjpkrd07g"/>
      <message xmi:type="uml:Message" xmi:id="_dgL24GpvEei47fqiwvb5mw" name="jButton3ActionPerformed_Message" messageSort="asynchSignal" receiveEvent="_dgMd8GpvEei47fqiwvb5mw" signature="_bYejg2WNEei0cbjpkrd07g"/>
      <message xmi:type="uml:Message" xmi:id="_gZAeIGpvEei47fqiwvb5mw" name="jButton4ActionPerformed_Message" messageSort="asynchSignal" receiveEvent="_gZBFMGpvEei47fqiwvb5mw" signature="_bYfKkmWNEei0cbjpkrd07g"/>
      <message xmi:type="uml:Message" xmi:id="_iSAnIGpvEei47fqiwvb5mw" name="jButton5ActionPerformed_Message" messageSort="asynchSignal" receiveEvent="_iSAnIWpvEei47fqiwvb5mw" signature="_bYfxomWNEei0cbjpkrd07g"/>
      <message xmi:type="uml:Message" xmi:id="_kIrN0GpvEei47fqiwvb5mw" name="jButton7ActionPerformed_Message" messageSort="asynchSignal" receiveEvent="_kIr04GpvEei47fqiwvb5mw" signature="_bYgYsGWNEei0cbjpkrd07g"/>
      <message xmi:type="uml:Message" xmi:id="_lwzCMGpvEei47fqiwvb5mw" name="jButton8ActionPerformed_Message" messageSort="asynchSignal" receiveEvent="_lwzpQGpvEei47fqiwvb5mw" signature="_bYgYs2WNEei0cbjpkrd07g"/>
      <message xmi:type="uml:Message" xmi:id="_ngk9wGpvEei47fqiwvb5mw" name="jButton9ActionPerformed_Message" messageSort="asynchSignal" receiveEvent="_nglk0GpvEei47fqiwvb5mw" signature="_bYg_wWWNEei0cbjpkrd07g"/>
      <message xmi:type="uml:Message" xmi:id="_o9wGYGpvEei47fqiwvb5mw" name="jButton2ActionPerformed_Message" messageSort="asynchSignal" receiveEvent="_o9wtcGpvEei47fqiwvb5mw" signature="_bYd8cmWNEei0cbjpkrd07g"/>
      <message xmi:type="uml:Message" xmi:id="_qjYncGpvEei47fqiwvb5mw" name="jbBackActionPerformed_Message" messageSort="asynchSignal" receiveEvent="_qjYncWpvEei47fqiwvb5mw" signature="_bYdVYmWNEei0cbjpkrd07g"/>
      <message xmi:type="uml:Message" xmi:id="_7mXAQGpvEei47fqiwvb5mw" name="Message" messageSort="createMessage" receiveEvent="_7mXnUWpvEei47fqiwvb5mw" sendEvent="_7mXnUGpvEei47fqiwvb5mw" signature="_bI6dgGWNEei0cbjpkrd07g"/>
      <message xmi:type="uml:Message" xmi:id="_99TpgGpvEei47fqiwvb5mw" name="Message0" messageSort="createMessage" receiveEvent="_99UQkWpvEei47fqiwvb5mw" sendEvent="_99UQkGpvEei47fqiwvb5mw" signature="_bKEUEGWNEei0cbjpkrd07g"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Interaction" xmi:id="_ZTb7sGpFEei47fqiwvb5mw" name="step2_1-step2_2">
      <ownedAttribute xmi:type="uml:Property" xmi:id="_BQhDUGpHEei47fqiwvb5mw" name="" type="_bIrM8GWNEei0cbjpkrd07g"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_COj_8GpHEei47fqiwvb5mw" name="" type="_a9kJIGWNEei0cbjpkrd07g"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_DWX8kGpHEei47fqiwvb5mw" name="" type="_bYBQgGWNEei0cbjpkrd07g"/>
      <lifeline xmi:type="uml:Lifeline" xmi:id="_BQgcQGpHEei47fqiwvb5mw" name="" represents="_BQhDUGpHEei47fqiwvb5mw" coveredBy="_E4--0GpHEei47fqiwvb5mw _E4_l4GpHEei47fqiwvb5mw _KDWK4GpHEei47fqiwvb5mw _KhffcWpHEei47fqiwvb5mw _KhffcGpHEei47fqiwvb5mw _R7lScGpHEei47fqiwvb5mw _VLN3MGpHEei47fqiwvb5mw _g4cTUGpHEei47fqiwvb5mw _g4c6YGpHEei47fqiwvb5mw _g4cTUWpHEei47fqiwvb5mw _jfktoGpHEei47fqiwvb5mw _q_sQIWpHEei47fqiwvb5mw"/>
      <lifeline xmi:type="uml:Lifeline" xmi:id="_COjY4GpHEei47fqiwvb5mw" name="" represents="_COj_8GpHEei47fqiwvb5mw" coveredBy="_E4--0GpHEei47fqiwvb5mw _E4_l4GpHEei47fqiwvb5mw _R7lScGpHEei47fqiwvb5mw"/>
      <lifeline xmi:type="uml:Lifeline" xmi:id="_DWXVgGpHEei47fqiwvb5mw" name="" represents="_DWX8kGpHEei47fqiwvb5mw" coveredBy="_E4--0GpHEei47fqiwvb5mw _R7lScGpHEei47fqiwvb5mw"/>
      <fragment xmi:type="uml:CombinedFragment" xmi:id="_E4--0GpHEei47fqiwvb5mw" name="CombinedFragment" covered="_BQgcQGpHEei47fqiwvb5mw _COjY4GpHEei47fqiwvb5mw _DWXVgGpHEei47fqiwvb5mw" interactionOperator="alt">
        <operand xmi:type="uml:InteractionOperand" xmi:id="_E4_l4GpHEei47fqiwvb5mw" name="InteractionOperand" covered="_BQgcQGpHEei47fqiwvb5mw _COjY4GpHEei47fqiwvb5mw">
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_KDWK4GpHEei47fqiwvb5mw" name="step2_1_next" covered="_BQgcQGpHEei47fqiwvb5mw" message="_KDVj0GpHEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ActionExecutionSpecification" xmi:id="_KhffcGpHEei47fqiwvb5mw" name="ActionExecSpec" covered="_BQgcQGpHEei47fqiwvb5mw" finish="_KhffcWpHEei47fqiwvb5mw" start="_KDWK4GpHEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_VLN3MGpHEei47fqiwvb5mw" name="MessageSend" covered="_BQgcQGpHEei47fqiwvb5mw" message="_VLNQIGpHEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_KhffcWpHEei47fqiwvb5mw" name="ActionExecSpecFinish" covered="_BQgcQGpHEei47fqiwvb5mw" execution="_KhffcGpHEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_VLN3MWpHEei47fqiwvb5mw" name="MessageRecv" message="_VLNQIGpHEei47fqiwvb5mw"/>
          <guard xmi:type="uml:InteractionConstraint" xmi:id="_E4_l4WpHEei47fqiwvb5mw">
            <specification xmi:type="uml:LiteralString" xmi:id="_E4_l4mpHEei47fqiwvb5mw" value="undefined"/>
            <maxint xmi:type="uml:LiteralInteger" xmi:id="_E5AM8GpHEei47fqiwvb5mw" value="1"/>
            <minint xmi:type="uml:LiteralInteger" xmi:id="_E4_l42pHEei47fqiwvb5mw"/>
          </guard>
        </operand>
        <operand xmi:type="uml:InteractionOperand" xmi:id="_R7lScGpHEei47fqiwvb5mw" name="InteractionOperand0" covered="_BQgcQGpHEei47fqiwvb5mw _COjY4GpHEei47fqiwvb5mw _DWXVgGpHEei47fqiwvb5mw">
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_g4cTUGpHEei47fqiwvb5mw" name="ActionExecSpecStart" covered="_BQgcQGpHEei47fqiwvb5mw" execution="_g4cTUWpHEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ActionExecutionSpecification" xmi:id="_g4cTUWpHEei47fqiwvb5mw" name="ActionExecSpec" covered="_BQgcQGpHEei47fqiwvb5mw" finish="_g4c6YGpHEei47fqiwvb5mw" start="_jfktoGpHEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_jfktoGpHEei47fqiwvb5mw" name="step2_1_back" covered="_BQgcQGpHEei47fqiwvb5mw" message="_jfkGkGpHEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_q_sQIWpHEei47fqiwvb5mw" name="Message0Send" covered="_BQgcQGpHEei47fqiwvb5mw" message="_q_sQIGpHEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_g4c6YGpHEei47fqiwvb5mw" name="ActionExecSpecFinish" covered="_BQgcQGpHEei47fqiwvb5mw" execution="_g4cTUWpHEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_q_s3MGpHEei47fqiwvb5mw" name="Message0Recv" message="_q_sQIGpHEei47fqiwvb5mw"/>
          <guard xmi:type="uml:InteractionConstraint" xmi:id="_R7lScWpHEei47fqiwvb5mw">
            <specification xmi:type="uml:LiteralString" xmi:id="_R7l5gGpHEei47fqiwvb5mw" value="undefined"/>
            <maxint xmi:type="uml:LiteralInteger" xmi:id="_R7l5gmpHEei47fqiwvb5mw" value="1"/>
            <minint xmi:type="uml:LiteralInteger" xmi:id="_R7l5gWpHEei47fqiwvb5mw"/>
          </guard>
        </operand>
      </fragment>
      <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_Khe4YGpHEei47fqiwvb5mw" name="ActionExecSpecStart" execution="_KhffcGpHEei47fqiwvb5mw"/>
      <message xmi:type="uml:Message" xmi:id="_KDVj0GpHEei47fqiwvb5mw" name="jButton2ActionPerformed_Message" messageSort="asynchSignal" receiveEvent="_KDWK4GpHEei47fqiwvb5mw" signature="_bJIf8GWNEei0cbjpkrd07g"/>
      <message xmi:type="uml:Message" xmi:id="_VLNQIGpHEei47fqiwvb5mw" name="Message" messageSort="createMessage" receiveEvent="_VLN3MWpHEei47fqiwvb5mw" sendEvent="_VLN3MGpHEei47fqiwvb5mw" signature="_a95gUGWNEei0cbjpkrd07g"/>
      <message xmi:type="uml:Message" xmi:id="_jfkGkGpHEei47fqiwvb5mw" name="jbBackActionPerformed_Message" messageSort="asynchSignal" receiveEvent="_jfktoGpHEei47fqiwvb5mw" signature="_bJFcoGWNEei0cbjpkrd07g"/>
      <message xmi:type="uml:Message" xmi:id="_q_sQIGpHEei47fqiwvb5mw" name="Message0" messageSort="createMessage" receiveEvent="_q_s3MGpHEei47fqiwvb5mw" sendEvent="_q_sQIWpHEei47fqiwvb5mw" signature="_bYRIIGWNEei0cbjpkrd07g"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Interaction" xmi:id="_RVYYoGpIEei47fqiwvb5mw" name="step2_2-step2_3">
      <ownedAttribute xmi:type="uml:Property" xmi:id="_ZQRLkGpIEei47fqiwvb5mw" name="" type="_a9kJIGWNEei0cbjpkrd07g"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_Z747cGpIEei47fqiwvb5mw" name="" type="_bHcd4GWNEei0cbjpkrd07g"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_aqXLAGpIEei47fqiwvb5mw" name="" type="_bIrM8GWNEei0cbjpkrd07g"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_Re_GoXMGEei3ud9vrLTCZg" name="" type="_bIrM8GWNEei0cbjpkrd07g"/>
      <lifeline xmi:type="uml:Lifeline" xmi:id="_ZQQkgGpIEei47fqiwvb5mw" name="" represents="_ZQRLkGpIEei47fqiwvb5mw" coveredBy="_dDb7MGpIEei47fqiwvb5mw _dDbUIGpIEei47fqiwvb5mw _eGKjgGpIEei47fqiwvb5mw _u16XIGpwEei47fqiwvb5mw _u15wEGpwEei47fqiwvb5mw _vRDbAGpwEei47fqiwvb5mw _vRECEGpwEei47fqiwvb5mw _vhylsGpwEei47fqiwvb5mw _vhzMwWpwEei47fqiwvb5mw _vhzMwGpwEei47fqiwvb5mw _vx43MGpwEei47fqiwvb5mw _vx5eQGpwEei47fqiwvb5mw _vx43MWpwEei47fqiwvb5mw _DIb1IWpxEei47fqiwvb5mw _IJJV8GpxEei47fqiwvb5mw _bKWOIHMFEei3ud9vrLTCZg _bKYqYHMFEei3ud9vrLTCZg _bKXcQHMFEei3ud9vrLTCZg _diIk4XMFEei3ud9vrLTCZg _ew6sMHMFEei3ud9vrLTCZg _SbfIcGpxEei47fqiwvb5mw _fzqnIGpIEei47fqiwvb5mw _fzqAEWpIEei47fqiwvb5mw _S55lcXMGEei3ud9vrLTCZg"/>
      <lifeline xmi:type="uml:Lifeline" xmi:id="_aqWj8GpIEei47fqiwvb5mw" name="" represents="_L7Nc4GpyEei47fqiwvb5mw" coveredBy="_dDbUIGpIEei47fqiwvb5mw _eGKjgGpIEei47fqiwvb5mw _dDb7MGpIEei47fqiwvb5mw _ew6sMXMFEei3ud9vrLTCZg"/>
      <lifeline xmi:type="uml:Lifeline" xmi:id="_Re_GoHMGEei3ud9vrLTCZg" name="" represents="_Re_GoXMGEei3ud9vrLTCZg" coveredBy="_eGKjgGpIEei47fqiwvb5mw _dDbUIGpIEei47fqiwvb5mw _S55lcnMGEei3ud9vrLTCZg"/>
      <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_S55lcnMGEei3ud9vrLTCZg" name="Message2Recv" covered="_Re_GoHMGEei3ud9vrLTCZg" message="_S55lcHMGEei3ud9vrLTCZg"/>
      <fragment xmi:type="uml:CombinedFragment" xmi:id="_u15wEGpwEei47fqiwvb5mw" name="CombinedFragment0" covered="_ZQQkgGpIEei47fqiwvb5mw" interactionOperator="opt">
        <operand xmi:type="uml:InteractionOperand" xmi:id="_u16XIGpwEei47fqiwvb5mw" name="InteractionOperand" covered="_ZQQkgGpIEei47fqiwvb5mw">
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_DIb1IWpxEei47fqiwvb5mw" name="jButton1ActionPerformed_MessageRecv" covered="_ZQQkgGpIEei47fqiwvb5mw" message="_DIb1IGpxEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_vhylsGpwEei47fqiwvb5mw" name="ActionExecSpecStart" covered="_ZQQkgGpIEei47fqiwvb5mw" execution="_vhzMwGpwEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ActionExecutionSpecification" xmi:id="_vhzMwGpwEei47fqiwvb5mw" name="ActionExecSpec" covered="_ZQQkgGpIEei47fqiwvb5mw" finish="_vhzMwWpwEei47fqiwvb5mw" start="_DIb1IWpxEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_vhzMwWpwEei47fqiwvb5mw" name="ActionExecSpecFinish" covered="_ZQQkgGpIEei47fqiwvb5mw" execution="_vhzMwGpwEei47fqiwvb5mw"/>
          <guard xmi:type="uml:InteractionConstraint" xmi:id="_u16XIWpwEei47fqiwvb5mw">
            <specification xmi:type="uml:LiteralString" xmi:id="_u16XImpwEei47fqiwvb5mw" value="undefined"/>
            <maxint xmi:type="uml:LiteralInteger" xmi:id="_u16XJGpwEei47fqiwvb5mw" value="1"/>
            <minint xmi:type="uml:LiteralInteger" xmi:id="_u16XI2pwEei47fqiwvb5mw"/>
          </guard>
        </operand>
      </fragment>
      <fragment xmi:type="uml:CombinedFragment" xmi:id="_vRDbAGpwEei47fqiwvb5mw" name="CombinedFragment1" covered="_ZQQkgGpIEei47fqiwvb5mw" interactionOperator="opt">
        <operand xmi:type="uml:InteractionOperand" xmi:id="_vRECEGpwEei47fqiwvb5mw" name="InteractionOperand" covered="_ZQQkgGpIEei47fqiwvb5mw">
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_IJJV8GpxEei47fqiwvb5mw" name="jButton3ActionPerformed_MessageRecv" covered="_ZQQkgGpIEei47fqiwvb5mw" message="_IJIu4GpxEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_vx43MGpwEei47fqiwvb5mw" name="ActionExecSpecStart" covered="_ZQQkgGpIEei47fqiwvb5mw" execution="_vx43MWpwEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ActionExecutionSpecification" xmi:id="_vx43MWpwEei47fqiwvb5mw" name="ActionExecSpec" covered="_ZQQkgGpIEei47fqiwvb5mw" finish="_vx5eQGpwEei47fqiwvb5mw" start="_IJJV8GpxEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_vx5eQGpwEei47fqiwvb5mw" name="ActionExecSpecFinish" covered="_ZQQkgGpIEei47fqiwvb5mw" execution="_vx43MWpwEei47fqiwvb5mw"/>
          <guard xmi:type="uml:InteractionConstraint" xmi:id="_vRECEWpwEei47fqiwvb5mw">
            <specification xmi:type="uml:LiteralString" xmi:id="_vRECEmpwEei47fqiwvb5mw" value="undefined"/>
            <maxint xmi:type="uml:LiteralInteger" xmi:id="_vRECFGpwEei47fqiwvb5mw" value="1"/>
            <minint xmi:type="uml:LiteralInteger" xmi:id="_vRECE2pwEei47fqiwvb5mw"/>
          </guard>
        </operand>
      </fragment>
      <fragment xmi:type="uml:CombinedFragment" xmi:id="_dDbUIGpIEei47fqiwvb5mw" name="CombinedFragment" covered="_ZQQkgGpIEei47fqiwvb5mw _aqWj8GpIEei47fqiwvb5mw _Re_GoHMGEei3ud9vrLTCZg" interactionOperator="alt">
        <operand xmi:type="uml:InteractionOperand" xmi:id="_dDb7MGpIEei47fqiwvb5mw" name="InteractionOperand" covered="_ZQQkgGpIEei47fqiwvb5mw _aqWj8GpIEei47fqiwvb5mw">
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_bKWOIHMFEei3ud9vrLTCZg" name="ActionExecSpecStart" covered="_ZQQkgGpIEei47fqiwvb5mw" execution="_bKXcQHMFEei3ud9vrLTCZg"/>
          <fragment xmi:type="uml:ActionExecutionSpecification" xmi:id="_bKXcQHMFEei3ud9vrLTCZg" name="ActionExecSpec" covered="_ZQQkgGpIEei47fqiwvb5mw" finish="_bKYqYHMFEei3ud9vrLTCZg" start="_diIk4XMFEei3ud9vrLTCZg"/>
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_diIk4XMFEei3ud9vrLTCZg" name="jButton2ActionPerformed_MessageRecv" covered="_ZQQkgGpIEei47fqiwvb5mw" message="_diIk4HMFEei3ud9vrLTCZg"/>
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_ew6sMHMFEei3ud9vrLTCZg" name="Message1Send" covered="_ZQQkgGpIEei47fqiwvb5mw" message="_ew6FIHMFEei3ud9vrLTCZg"/>
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_ew6sMXMFEei3ud9vrLTCZg" name="Message1Recv" covered="_aqWj8GpIEei47fqiwvb5mw" message="_ew6FIHMFEei3ud9vrLTCZg"/>
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_bKYqYHMFEei3ud9vrLTCZg" name="ActionExecSpecFinish" covered="_ZQQkgGpIEei47fqiwvb5mw" execution="_bKXcQHMFEei3ud9vrLTCZg"/>
          <guard xmi:type="uml:InteractionConstraint" xmi:id="_dDb7MWpIEei47fqiwvb5mw">
            <specification xmi:type="uml:LiteralString" xmi:id="_dDb7MmpIEei47fqiwvb5mw" value="undefined"/>
            <maxint xmi:type="uml:LiteralInteger" xmi:id="_dDb7NGpIEei47fqiwvb5mw" value="1"/>
            <minint xmi:type="uml:LiteralInteger" xmi:id="_dDb7M2pIEei47fqiwvb5mw"/>
          </guard>
        </operand>
        <operand xmi:type="uml:InteractionOperand" xmi:id="_eGKjgGpIEei47fqiwvb5mw" name="InteractionOperand0" covered="_ZQQkgGpIEei47fqiwvb5mw _aqWj8GpIEei47fqiwvb5mw _Re_GoHMGEei3ud9vrLTCZg">
          <fragment xmi:type="uml:ActionExecutionSpecification" xmi:id="_fzqAEWpIEei47fqiwvb5mw" name="ActionExecSpec" covered="_ZQQkgGpIEei47fqiwvb5mw" finish="_fzqnIGpIEei47fqiwvb5mw" start="_SbfIcGpxEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_SbfIcGpxEei47fqiwvb5mw" name="jbBackActionPerformed_MessageRecv" covered="_ZQQkgGpIEei47fqiwvb5mw" message="_SbehYGpxEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_S55lcXMGEei3ud9vrLTCZg" name="Message2Send" covered="_ZQQkgGpIEei47fqiwvb5mw" message="_S55lcHMGEei3ud9vrLTCZg"/>
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_uBNjwGpwEei47fqiwvb5mw" name="ActionExecSpecStart" execution="_fzqAEWpIEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_fzqnIGpIEei47fqiwvb5mw" name="ActionExecSpecFinish" covered="_ZQQkgGpIEei47fqiwvb5mw" execution="_fzqAEWpIEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_uBM8sGpwEei47fqiwvb5mw" name="ActionExecSpecStart" execution="_fzqAEWpIEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_fzqAEGpIEei47fqiwvb5mw" name="ActionExecSpecStart" execution="_fzqAEWpIEei47fqiwvb5mw"/>
          <guard xmi:type="uml:InteractionConstraint" xmi:id="_eGLKkGpIEei47fqiwvb5mw">
            <specification xmi:type="uml:LiteralString" xmi:id="_eGLKkWpIEei47fqiwvb5mw" value="undefined"/>
            <maxint xmi:type="uml:LiteralInteger" xmi:id="_eGLKk2pIEei47fqiwvb5mw" value="1"/>
            <minint xmi:type="uml:LiteralInteger" xmi:id="_eGLKkmpIEei47fqiwvb5mw"/>
          </guard>
        </operand>
      </fragment>
      <message xmi:type="uml:Message" xmi:id="_sGWgwGpIEei47fqiwvb5mw" name="Message" messageSort="createMessage" signature="_bHsVgWWNEei0cbjpkrd07g"/>
      <message xmi:type="uml:Message" xmi:id="_tNXMIGpIEei47fqiwvb5mw" name="Message0" messageSort="createMessage" signature="_bI6dgGWNEei0cbjpkrd07g"/>
      <message xmi:type="uml:Message" xmi:id="_DIb1IGpxEei47fqiwvb5mw" name="jButton1ActionPerformed_Message" messageSort="asynchSignal" receiveEvent="_DIb1IWpxEei47fqiwvb5mw" signature="_a-v04GWNEei0cbjpkrd07g"/>
      <message xmi:type="uml:Message" xmi:id="_IJIu4GpxEei47fqiwvb5mw" name="jButton3ActionPerformed_Message" messageSort="asynchSignal" receiveEvent="_IJJV8GpxEei47fqiwvb5mw" signature="_a-umwGWNEei0cbjpkrd07g"/>
      <message xmi:type="uml:Message" xmi:id="_SbehYGpxEei47fqiwvb5mw" name="jbBackActionPerformed_Message" messageSort="asynchSignal" receiveEvent="_SbfIcGpxEei47fqiwvb5mw" signature="_a-TI8GWNEei0cbjpkrd07g"/>
      <message xmi:type="uml:Message" xmi:id="_diIk4HMFEei3ud9vrLTCZg" name="jButton2ActionPerformed_Message" messageSort="asynchSignal" receiveEvent="_diIk4XMFEei3ud9vrLTCZg" signature="_a-YBcGWNEei0cbjpkrd07g"/>
      <message xmi:type="uml:Message" xmi:id="_ew6FIHMFEei3ud9vrLTCZg" name="Message1" messageSort="createMessage" receiveEvent="_ew6sMXMFEei3ud9vrLTCZg" sendEvent="_ew6sMHMFEei3ud9vrLTCZg" signature="_bHsVgWWNEei0cbjpkrd07g"/>
      <message xmi:type="uml:Message" xmi:id="_S55lcHMGEei3ud9vrLTCZg" name="Message2" messageSort="createMessage" receiveEvent="_S55lcnMGEei3ud9vrLTCZg" sendEvent="_S55lcXMGEei3ud9vrLTCZg" signature="_bI6dgGWNEei0cbjpkrd07g"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Interaction" xmi:id="_PW2Z8GpJEei47fqiwvb5mw" name="step2_3-step3_1">
      <ownedAttribute xmi:type="uml:Property" xmi:id="_VpAUgGpJEei47fqiwvb5mw" name="" type="_bHcd4GWNEei0cbjpkrd07g"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_XJJRkGpJEei47fqiwvb5mw" name="" type="_bLc0IGWNEei0cbjpkrd07g"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_XyaRAGpJEei47fqiwvb5mw" name="" type="_a_5EYGWNEei0cbjpkrd07g"/>
      <lifeline xmi:type="uml:Lifeline" xmi:id="_Vo_tcGpJEei47fqiwvb5mw" name="" represents="_VpAUgGpJEei47fqiwvb5mw" coveredBy="_Yzc3QGpJEei47fqiwvb5mw _YzdeUGpJEei47fqiwvb5mw _aw9s0GpJEei47fqiwvb5mw _b7zvUGpJEei47fqiwvb5mw _b70WYWpJEei47fqiwvb5mw _b70WYGpJEei47fqiwvb5mw _cRMwgGpJEei47fqiwvb5mw _cRNXkGpJEei47fqiwvb5mw _cRMwgWpJEei47fqiwvb5mw _eJr8IGpJEei47fqiwvb5mw _fPcqUGpJEei47fqiwvb5mw _DDmDIGpKEei47fqiwvb5mw _EYzikGpKEei47fqiwvb5mw"/>
      <lifeline xmi:type="uml:Lifeline" xmi:id="_XJIqgGpJEei47fqiwvb5mw" name="" represents="_XJJRkGpJEei47fqiwvb5mw" coveredBy="_Yzc3QGpJEei47fqiwvb5mw _YzdeUGpJEei47fqiwvb5mw _aw9s0GpJEei47fqiwvb5mw _eJr8IWpJEei47fqiwvb5mw"/>
      <lifeline xmi:type="uml:Lifeline" xmi:id="_XyZp8GpJEei47fqiwvb5mw" name="" represents="_XyaRAGpJEei47fqiwvb5mw" coveredBy="_Yzc3QGpJEei47fqiwvb5mw _aw9s0GpJEei47fqiwvb5mw _fPcqUWpJEei47fqiwvb5mw"/>
      <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_fPcqUWpJEei47fqiwvb5mw" name="Message0Recv" covered="_XyZp8GpJEei47fqiwvb5mw" message="_fPcDQGpJEei47fqiwvb5mw"/>
      <fragment xmi:type="uml:CombinedFragment" xmi:id="_Yzc3QGpJEei47fqiwvb5mw" name="CombinedFragment" covered="_XyZp8GpJEei47fqiwvb5mw _Vo_tcGpJEei47fqiwvb5mw _XJIqgGpJEei47fqiwvb5mw" interactionOperator="alt">
        <operand xmi:type="uml:InteractionOperand" xmi:id="_YzdeUGpJEei47fqiwvb5mw" name="InteractionOperand" covered="_Vo_tcGpJEei47fqiwvb5mw _XJIqgGpJEei47fqiwvb5mw">
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_DDmDIGpKEei47fqiwvb5mw" name="step2_3_next" covered="_Vo_tcGpJEei47fqiwvb5mw" message="_DDlcEGpKEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_b7zvUGpJEei47fqiwvb5mw" name="ActionExecSpecStart" covered="_Vo_tcGpJEei47fqiwvb5mw" execution="_b70WYGpJEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ActionExecutionSpecification" xmi:id="_b70WYGpJEei47fqiwvb5mw" name="ActionExecSpec" covered="_Vo_tcGpJEei47fqiwvb5mw" finish="_b70WYWpJEei47fqiwvb5mw" start="_DDmDIGpKEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_eJr8IGpJEei47fqiwvb5mw" name="MessageSend" covered="_Vo_tcGpJEei47fqiwvb5mw" message="_eJrVEGpJEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_b70WYWpJEei47fqiwvb5mw" name="ActionExecSpecFinish" covered="_Vo_tcGpJEei47fqiwvb5mw" execution="_b70WYGpJEei47fqiwvb5mw"/>
          <guard xmi:type="uml:InteractionConstraint" xmi:id="_YzdeUWpJEei47fqiwvb5mw">
            <specification xmi:type="uml:LiteralString" xmi:id="_YzdeUmpJEei47fqiwvb5mw" value="undefined"/>
            <maxint xmi:type="uml:LiteralInteger" xmi:id="_YzdeVGpJEei47fqiwvb5mw" value="1"/>
            <minint xmi:type="uml:LiteralInteger" xmi:id="_YzdeU2pJEei47fqiwvb5mw"/>
          </guard>
        </operand>
        <operand xmi:type="uml:InteractionOperand" xmi:id="_aw9s0GpJEei47fqiwvb5mw" name="InteractionOperand0" covered="_XyZp8GpJEei47fqiwvb5mw _Vo_tcGpJEei47fqiwvb5mw _XJIqgGpJEei47fqiwvb5mw">
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_EYzikGpKEei47fqiwvb5mw" name="step2_3_back" covered="_Vo_tcGpJEei47fqiwvb5mw" message="_EYy7gGpKEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_cRMwgGpJEei47fqiwvb5mw" name="ActionExecSpecStart" covered="_Vo_tcGpJEei47fqiwvb5mw" execution="_cRMwgWpJEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ActionExecutionSpecification" xmi:id="_cRMwgWpJEei47fqiwvb5mw" name="ActionExecSpec" covered="_Vo_tcGpJEei47fqiwvb5mw" finish="_cRNXkGpJEei47fqiwvb5mw" start="_EYzikGpKEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_fPcqUGpJEei47fqiwvb5mw" name="Message0Send" covered="_Vo_tcGpJEei47fqiwvb5mw" message="_fPcDQGpJEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_cRNXkGpJEei47fqiwvb5mw" name="ActionExecSpecFinish" covered="_Vo_tcGpJEei47fqiwvb5mw" execution="_cRMwgWpJEei47fqiwvb5mw"/>
          <guard xmi:type="uml:InteractionConstraint" xmi:id="_aw-T4GpJEei47fqiwvb5mw">
            <specification xmi:type="uml:LiteralString" xmi:id="_aw-T4WpJEei47fqiwvb5mw" value="undefined"/>
            <maxint xmi:type="uml:LiteralInteger" xmi:id="_aw-T42pJEei47fqiwvb5mw" value="1"/>
            <minint xmi:type="uml:LiteralInteger" xmi:id="_aw-T4mpJEei47fqiwvb5mw"/>
          </guard>
        </operand>
      </fragment>
      <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_eJr8IWpJEei47fqiwvb5mw" name="MessageRecv" covered="_XJIqgGpJEei47fqiwvb5mw" message="_eJrVEGpJEei47fqiwvb5mw"/>
      <message xmi:type="uml:Message" xmi:id="_eJrVEGpJEei47fqiwvb5mw" name="Message" messageSort="createMessage" receiveEvent="_eJr8IWpJEei47fqiwvb5mw" sendEvent="_eJr8IGpJEei47fqiwvb5mw" signature="_bL1OoGWNEei0cbjpkrd07g"/>
      <message xmi:type="uml:Message" xmi:id="_fPcDQGpJEei47fqiwvb5mw" name="Message0" messageSort="createMessage" receiveEvent="_fPcqUWpJEei47fqiwvb5mw" sendEvent="_fPcqUGpJEei47fqiwvb5mw" signature="_a95gUGWNEei0cbjpkrd07g"/>
      <message xmi:type="uml:Message" xmi:id="_DDlcEGpKEei47fqiwvb5mw" name="jButton2ActionPerformed_Message" messageSort="asynchSignal" receiveEvent="_DDmDIGpKEei47fqiwvb5mw" signature="_bHzqQGWNEei0cbjpkrd07g"/>
      <message xmi:type="uml:Message" xmi:id="_EYy7gGpKEei47fqiwvb5mw" name="jbBackActionPerformed_Message" messageSort="asynchSignal" receiveEvent="_EYzikGpKEei47fqiwvb5mw" signature="_bHycIWWNEei0cbjpkrd07g"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Interaction" xmi:id="_f4ZZgGpxEei47fqiwvb5mw" name="step3_1-step3_2">
      <ownedAttribute xmi:type="uml:Property" xmi:id="_JvDHUGpyEei47fqiwvb5mw" name="" type="_bLc0IGWNEei0cbjpkrd07g"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_L7Nc4GpyEei47fqiwvb5mw" name="" type="_bHcd4GWNEei0cbjpkrd07g"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_Mg6yAGpyEei47fqiwvb5mw" name="" type="_bVPpUGWNEei0cbjpkrd07g"/>
      <lifeline xmi:type="uml:Lifeline" xmi:id="_JvCgQGpyEei47fqiwvb5mw" name="" represents="_JvDHUGpyEei47fqiwvb5mw" coveredBy="_NcGA0GpyEei47fqiwvb5mw _NcGn4GpyEei47fqiwvb5mw _OWInMGpyEei47fqiwvb5mw _PMFXwGpyEei47fqiwvb5mw _PMF-0WpyEei47fqiwvb5mw _PMF-0GpyEei47fqiwvb5mw _Pfs3UGpyEei47fqiwvb5mw _PfteYGpyEei47fqiwvb5mw _Pfs3UWpyEei47fqiwvb5mw _RhkocGpyEei47fqiwvb5mw _Sb47oGpyEei47fqiwvb5mw _Z5fVoGpyEei47fqiwvb5mw _bhX5cGpyEei47fqiwvb5mw"/>
      <lifeline xmi:type="uml:Lifeline" xmi:id="_L7M10GpyEei47fqiwvb5mw" name="" represents="_L7Nc4GpyEei47fqiwvb5mw" coveredBy="_NcGA0GpyEei47fqiwvb5mw _OWInMGpyEei47fqiwvb5mw _Sb47oWpyEei47fqiwvb5mw"/>
      <lifeline xmi:type="uml:Lifeline" xmi:id="_Mg6K8GpyEei47fqiwvb5mw" name="" represents="_Mg6yAGpyEei47fqiwvb5mw" coveredBy="_NcGA0GpyEei47fqiwvb5mw _NcGn4GpyEei47fqiwvb5mw _OWInMGpyEei47fqiwvb5mw _RhkocWpyEei47fqiwvb5mw"/>
      <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_Sb47oWpyEei47fqiwvb5mw" name="Message0Recv" covered="_L7M10GpyEei47fqiwvb5mw" message="_Sb4UkGpyEei47fqiwvb5mw"/>
      <fragment xmi:type="uml:CombinedFragment" xmi:id="_NcGA0GpyEei47fqiwvb5mw" name="CombinedFragment" covered="_JvCgQGpyEei47fqiwvb5mw _L7M10GpyEei47fqiwvb5mw _Mg6K8GpyEei47fqiwvb5mw" interactionOperator="alt">
        <operand xmi:type="uml:InteractionOperand" xmi:id="_NcGn4GpyEei47fqiwvb5mw" name="InteractionOperand" covered="_JvCgQGpyEei47fqiwvb5mw _Mg6K8GpyEei47fqiwvb5mw">
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_Z5fVoGpyEei47fqiwvb5mw" name="jButton2ActionPerformed_MessageRecv" covered="_JvCgQGpyEei47fqiwvb5mw" message="_Z5eukGpyEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_PMFXwGpyEei47fqiwvb5mw" name="ActionExecSpecStart" covered="_JvCgQGpyEei47fqiwvb5mw" execution="_PMF-0GpyEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ActionExecutionSpecification" xmi:id="_PMF-0GpyEei47fqiwvb5mw" name="ActionExecSpec" covered="_JvCgQGpyEei47fqiwvb5mw" finish="_PMF-0WpyEei47fqiwvb5mw" start="_Z5fVoGpyEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_RhkocGpyEei47fqiwvb5mw" name="MessageSend" covered="_JvCgQGpyEei47fqiwvb5mw" message="_RhkBYGpyEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_PMF-0WpyEei47fqiwvb5mw" name="ActionExecSpecFinish" covered="_JvCgQGpyEei47fqiwvb5mw" execution="_PMF-0GpyEei47fqiwvb5mw"/>
          <guard xmi:type="uml:InteractionConstraint" xmi:id="_NcGn4WpyEei47fqiwvb5mw">
            <specification xmi:type="uml:LiteralString" xmi:id="_NcGn4mpyEei47fqiwvb5mw" value="undefined"/>
            <maxint xmi:type="uml:LiteralInteger" xmi:id="_NcGn5GpyEei47fqiwvb5mw" value="1"/>
            <minint xmi:type="uml:LiteralInteger" xmi:id="_NcGn42pyEei47fqiwvb5mw"/>
          </guard>
        </operand>
        <operand xmi:type="uml:InteractionOperand" xmi:id="_OWInMGpyEei47fqiwvb5mw" name="InteractionOperand0" covered="_JvCgQGpyEei47fqiwvb5mw _L7M10GpyEei47fqiwvb5mw _Mg6K8GpyEei47fqiwvb5mw">
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_bhX5cGpyEei47fqiwvb5mw" name="jbBackActionPerformed_MessageRecv" covered="_JvCgQGpyEei47fqiwvb5mw" message="_bhXSYGpyEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_Pfs3UGpyEei47fqiwvb5mw" name="ActionExecSpecStart" covered="_JvCgQGpyEei47fqiwvb5mw" execution="_Pfs3UWpyEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ActionExecutionSpecification" xmi:id="_Pfs3UWpyEei47fqiwvb5mw" name="ActionExecSpec" covered="_JvCgQGpyEei47fqiwvb5mw" finish="_PfteYGpyEei47fqiwvb5mw" start="_bhX5cGpyEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_Sb47oGpyEei47fqiwvb5mw" name="Message0Send" covered="_JvCgQGpyEei47fqiwvb5mw" message="_Sb4UkGpyEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_PfteYGpyEei47fqiwvb5mw" name="ActionExecSpecFinish" covered="_JvCgQGpyEei47fqiwvb5mw" execution="_Pfs3UWpyEei47fqiwvb5mw"/>
          <guard xmi:type="uml:InteractionConstraint" xmi:id="_OWJOQGpyEei47fqiwvb5mw">
            <specification xmi:type="uml:LiteralString" xmi:id="_OWJOQWpyEei47fqiwvb5mw" value="undefined"/>
            <maxint xmi:type="uml:LiteralInteger" xmi:id="_OWJOQ2pyEei47fqiwvb5mw" value="1"/>
            <minint xmi:type="uml:LiteralInteger" xmi:id="_OWJOQmpyEei47fqiwvb5mw"/>
          </guard>
        </operand>
      </fragment>
      <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_RhkocWpyEei47fqiwvb5mw" name="MessageRecv" covered="_Mg6K8GpyEei47fqiwvb5mw" message="_RhkBYGpyEei47fqiwvb5mw"/>
      <message xmi:type="uml:Message" xmi:id="_RhkBYGpyEei47fqiwvb5mw" name="Message" messageSort="createMessage" receiveEvent="_RhkocWpyEei47fqiwvb5mw" sendEvent="_RhkocGpyEei47fqiwvb5mw" signature="_bVlAgGWNEei0cbjpkrd07g"/>
      <message xmi:type="uml:Message" xmi:id="_Sb4UkGpyEei47fqiwvb5mw" name="Message0" messageSort="createMessage" receiveEvent="_Sb47oWpyEei47fqiwvb5mw" sendEvent="_Sb47oGpyEei47fqiwvb5mw" signature="_bHsVgWWNEei0cbjpkrd07g"/>
      <message xmi:type="uml:Message" xmi:id="_Z5eukGpyEei47fqiwvb5mw" name="jButton2ActionPerformed_Message" messageSort="asynchSignal" receiveEvent="_Z5fVoGpyEei47fqiwvb5mw" signature="_bM9QAGWNEei0cbjpkrd07g"/>
      <message xmi:type="uml:Message" xmi:id="_bhXSYGpyEei47fqiwvb5mw" name="jbBackActionPerformed_Message" messageSort="asynchSignal" receiveEvent="_bhX5cGpyEei47fqiwvb5mw" signature="_bM6MsGWNEei0cbjpkrd07g"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Interaction" xmi:id="_mMmigGpxEei47fqiwvb5mw" name="step3_2-step4_1">
      <ownedAttribute xmi:type="uml:Property" xmi:id="_f_XuwGpyEei47fqiwvb5mw" name="" type="_bVPpUGWNEei0cbjpkrd07g"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_ggs6MGpyEei47fqiwvb5mw" name="" type="_bYBQgGWNEei0cbjpkrd07g"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_g9La0GpyEei47fqiwvb5mw" name="" type="_bLc0IGWNEei0cbjpkrd07g"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_yPWtQGpyEei47fqiwvb5mw" name="" type="_a_5EYGWNEei0cbjpkrd07g"/>
      <lifeline xmi:type="uml:Lifeline" xmi:id="_f_WgoGpyEei47fqiwvb5mw" name="" represents="_f_XuwGpyEei47fqiwvb5mw" coveredBy="_jTYdMGpyEei47fqiwvb5mw _jTZEQGpyEei47fqiwvb5mw _j-eooGpyEei47fqiwvb5mw _lqEAsGpyEei47fqiwvb5mw _lqEnwWpyEei47fqiwvb5mw _lqEnwGpyEei47fqiwvb5mw _mGVtAGpyEei47fqiwvb5mw _mGWUEWpyEei47fqiwvb5mw _mGWUEGpyEei47fqiwvb5mw _pCTu4WpyEei47fqiwvb5mw _q1otsGpyEei47fqiwvb5mw _tT8jMGpyEei47fqiwvb5mw _zcnxoWpyEei47fqiwvb5mw"/>
      <lifeline xmi:type="uml:Lifeline" xmi:id="_g9KMsGpyEei47fqiwvb5mw" name="" represents="_g9La0GpyEei47fqiwvb5mw" coveredBy="_jTYdMGpyEei47fqiwvb5mw _j-eooGpyEei47fqiwvb5mw _tT8jMWpyEei47fqiwvb5mw"/>
      <lifeline xmi:type="uml:Lifeline" xmi:id="_yPWGMGpyEei47fqiwvb5mw" name="" represents="_yPWtQGpyEei47fqiwvb5mw" coveredBy="_jTYdMGpyEei47fqiwvb5mw _j-eooGpyEei47fqiwvb5mw _jTZEQGpyEei47fqiwvb5mw _zcoYsGpyEei47fqiwvb5mw"/>
      <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_zcoYsGpyEei47fqiwvb5mw" name="Message1Recv" covered="_yPWGMGpyEei47fqiwvb5mw" message="_zcnxoGpyEei47fqiwvb5mw"/>
      <fragment xmi:type="uml:CombinedFragment" xmi:id="_jTYdMGpyEei47fqiwvb5mw" name="CombinedFragment" covered="_f_WgoGpyEei47fqiwvb5mw _g9KMsGpyEei47fqiwvb5mw _yPWGMGpyEei47fqiwvb5mw" interactionOperator="alt">
        <operand xmi:type="uml:InteractionOperand" xmi:id="_jTZEQGpyEei47fqiwvb5mw" name="InteractionOperand" covered="_f_WgoGpyEei47fqiwvb5mw _yPWGMGpyEei47fqiwvb5mw">
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_lqEAsGpyEei47fqiwvb5mw" name="ActionExecSpecStart" covered="_f_WgoGpyEei47fqiwvb5mw" execution="_lqEnwGpyEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ActionExecutionSpecification" xmi:id="_lqEnwGpyEei47fqiwvb5mw" name="ActionExecSpec" covered="_f_WgoGpyEei47fqiwvb5mw" finish="_lqEnwWpyEei47fqiwvb5mw" start="_pCTu4WpyEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_pCTu4WpyEei47fqiwvb5mw" name="jButton2ActionPerformed_MessageRecv" covered="_f_WgoGpyEei47fqiwvb5mw" message="_pCTu4GpyEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_zcnxoWpyEei47fqiwvb5mw" name="Message1Send" covered="_f_WgoGpyEei47fqiwvb5mw" message="_zcnxoGpyEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_lqEnwWpyEei47fqiwvb5mw" name="ActionExecSpecFinish" covered="_f_WgoGpyEei47fqiwvb5mw" execution="_lqEnwGpyEei47fqiwvb5mw"/>
          <guard xmi:type="uml:InteractionConstraint" xmi:id="_jTZEQWpyEei47fqiwvb5mw">
            <specification xmi:type="uml:LiteralString" xmi:id="_jTZEQmpyEei47fqiwvb5mw" value="undefined"/>
            <maxint xmi:type="uml:LiteralInteger" xmi:id="_jTZERGpyEei47fqiwvb5mw" value="1"/>
            <minint xmi:type="uml:LiteralInteger" xmi:id="_jTZEQ2pyEei47fqiwvb5mw"/>
          </guard>
        </operand>
        <operand xmi:type="uml:InteractionOperand" xmi:id="_j-eooGpyEei47fqiwvb5mw" name="InteractionOperand0" covered="_f_WgoGpyEei47fqiwvb5mw _g9KMsGpyEei47fqiwvb5mw _yPWGMGpyEei47fqiwvb5mw">
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_tT8jMGpyEei47fqiwvb5mw" name="Message0Send" covered="_f_WgoGpyEei47fqiwvb5mw" message="_tT78IGpyEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_mGVtAGpyEei47fqiwvb5mw" name="ActionExecSpecStart" covered="_f_WgoGpyEei47fqiwvb5mw" execution="_mGWUEGpyEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ActionExecutionSpecification" xmi:id="_mGWUEGpyEei47fqiwvb5mw" name="ActionExecSpec" covered="_f_WgoGpyEei47fqiwvb5mw" finish="_mGWUEWpyEei47fqiwvb5mw" start="_q1otsGpyEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_q1otsGpyEei47fqiwvb5mw" name="jbBackActionPerformed_MessageRecv" covered="_f_WgoGpyEei47fqiwvb5mw" message="_q1oGoGpyEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_mGWUEWpyEei47fqiwvb5mw" name="ActionExecSpecFinish" covered="_f_WgoGpyEei47fqiwvb5mw" execution="_mGWUEGpyEei47fqiwvb5mw"/>
          <guard xmi:type="uml:InteractionConstraint" xmi:id="_j-fPsGpyEei47fqiwvb5mw">
            <specification xmi:type="uml:LiteralString" xmi:id="_j-fPsWpyEei47fqiwvb5mw" value="undefined"/>
            <maxint xmi:type="uml:LiteralInteger" xmi:id="_j-fPs2pyEei47fqiwvb5mw" value="1"/>
            <minint xmi:type="uml:LiteralInteger" xmi:id="_j-fPsmpyEei47fqiwvb5mw"/>
          </guard>
        </operand>
      </fragment>
      <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_tT8jMWpyEei47fqiwvb5mw" name="Message0Recv" covered="_g9KMsGpyEei47fqiwvb5mw" message="_tT78IGpyEei47fqiwvb5mw"/>
      <message xmi:type="uml:Message" xmi:id="_pCTu4GpyEei47fqiwvb5mw" name="jButton2ActionPerformed_Message" messageSort="asynchSignal" receiveEvent="_pCTu4WpyEei47fqiwvb5mw" signature="_bV6XsGWNEei0cbjpkrd07g"/>
      <message xmi:type="uml:Message" xmi:id="_q1oGoGpyEei47fqiwvb5mw" name="jbBackActionPerformed_Message" messageSort="asynchSignal" receiveEvent="_q1otsGpyEei47fqiwvb5mw" signature="_bV3UYGWNEei0cbjpkrd07g"/>
      <message xmi:type="uml:Message" xmi:id="_tT78IGpyEei47fqiwvb5mw" name="Message0" messageSort="createMessage" receiveEvent="_tT8jMWpyEei47fqiwvb5mw" sendEvent="_tT8jMGpyEei47fqiwvb5mw" signature="_bL1OoGWNEei0cbjpkrd07g"/>
      <message xmi:type="uml:Message" xmi:id="_zcnxoGpyEei47fqiwvb5mw" name="Message1" messageSort="createMessage" receiveEvent="_zcoYsGpyEei47fqiwvb5mw" sendEvent="_zcnxoWpyEei47fqiwvb5mw" signature="_bAbP4GWNEei0cbjpkrd07g"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Interaction" xmi:id="_qdE5MGpxEei47fqiwvb5mw" name="step4_1-step4_2">
      <ownedAttribute xmi:type="uml:Property" xmi:id="_VKuD8GpzEei47fqiwvb5mw" name="" type="_bE45IGWNEei0cbjpkrd07g"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_jXLioGpzEei47fqiwvb5mw" name="" type="_bOvYsGWNEei0cbjpkrd07g"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_96ykMGpzEei47fqiwvb5mw" name="" type="_a_5EYGWNEei0cbjpkrd07g"/>
      <lifeline xmi:type="uml:Lifeline" xmi:id="_VKtc4GpzEei47fqiwvb5mw" name="" represents="_VKuD8GpzEei47fqiwvb5mw" coveredBy="_V8A-AGpzEei47fqiwvb5mw _V8BlEGpzEei47fqiwvb5mw _WthTcGpzEei47fqiwvb5mw _Wth6gGpzEei47fqiwvb5mw _WthTcWpzEei47fqiwvb5mw _ijjGQGpzEei47fqiwvb5mw _ijifMGpzEei47fqiwvb5mw _AHfsUGp0Eei47fqiwvb5mw _A1k6UGp0Eei47fqiwvb5mw _A1lhYGp0Eei47fqiwvb5mw _A1k6UWp0Eei47fqiwvb5mw _BJps4Gp0Eei47fqiwvb5mw _BJqT8Gp0Eei47fqiwvb5mw _BJps4Wp0Eei47fqiwvb5mw _EjdhUGp0Eei47fqiwvb5mw _GDw2cGp0Eei47fqiwvb5mw _HbA9QWp0Eei47fqiwvb5mw _Jca0UGp0Eei47fqiwvb5mw _hetIoGp0Eei47fqiwvb5mw"/>
      <lifeline xmi:type="uml:Lifeline" xmi:id="_jXK7kGpzEei47fqiwvb5mw" name="" represents="_jXLioGpzEei47fqiwvb5mw" coveredBy="_ijjGQGpzEei47fqiwvb5mw _ijifMGpzEei47fqiwvb5mw _AHfsUGp0Eei47fqiwvb5mw _HbBkUGp0Eei47fqiwvb5mw"/>
      <lifeline xmi:type="uml:Lifeline" xmi:id="_96x9IGpzEei47fqiwvb5mw" name="" represents="_96ykMGpzEei47fqiwvb5mw" coveredBy="_ijifMGpzEei47fqiwvb5mw _AHfsUGp0Eei47fqiwvb5mw _JcbbYGp0Eei47fqiwvb5mw"/>
      <fragment xmi:type="uml:CombinedFragment" xmi:id="_V8A-AGpzEei47fqiwvb5mw" name="CombinedFragment" covered="_VKtc4GpzEei47fqiwvb5mw" interactionOperator="opt">
        <operand xmi:type="uml:InteractionOperand" xmi:id="_V8BlEGpzEei47fqiwvb5mw" name="InteractionOperand" covered="_VKtc4GpzEei47fqiwvb5mw">
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_hetIoGp0Eei47fqiwvb5mw" name="jSlider1StateChanged_MessageRecv" covered="_VKtc4GpzEei47fqiwvb5mw" message="_heshkGp0Eei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_WthTcGpzEei47fqiwvb5mw" name="ActionExecSpecStart" covered="_VKtc4GpzEei47fqiwvb5mw" execution="_WthTcWpzEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ActionExecutionSpecification" xmi:id="_WthTcWpzEei47fqiwvb5mw" name="ActionExecSpec" covered="_VKtc4GpzEei47fqiwvb5mw" finish="_Wth6gGpzEei47fqiwvb5mw" start="_hetIoGp0Eei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_Wth6gGpzEei47fqiwvb5mw" name="ActionExecSpecFinish" covered="_VKtc4GpzEei47fqiwvb5mw" execution="_WthTcWpzEei47fqiwvb5mw"/>
          <guard xmi:type="uml:InteractionConstraint" xmi:id="_V8BlEWpzEei47fqiwvb5mw">
            <specification xmi:type="uml:LiteralString" xmi:id="_V8BlEmpzEei47fqiwvb5mw" value="undefined"/>
            <maxint xmi:type="uml:LiteralInteger" xmi:id="_V8CMIWpzEei47fqiwvb5mw" value="1"/>
            <minint xmi:type="uml:LiteralInteger" xmi:id="_V8CMIGpzEei47fqiwvb5mw"/>
          </guard>
        </operand>
      </fragment>
      <fragment xmi:type="uml:CombinedFragment" xmi:id="_ijifMGpzEei47fqiwvb5mw" name="CombinedFragment0" covered="_VKtc4GpzEei47fqiwvb5mw _jXK7kGpzEei47fqiwvb5mw _96x9IGpzEei47fqiwvb5mw" interactionOperator="alt">
        <operand xmi:type="uml:InteractionOperand" xmi:id="_ijjGQGpzEei47fqiwvb5mw" name="InteractionOperand" covered="_VKtc4GpzEei47fqiwvb5mw _jXK7kGpzEei47fqiwvb5mw">
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_A1k6UGp0Eei47fqiwvb5mw" name="ActionExecSpecStart" covered="_VKtc4GpzEei47fqiwvb5mw" execution="_A1k6UWp0Eei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ActionExecutionSpecification" xmi:id="_A1k6UWp0Eei47fqiwvb5mw" name="ActionExecSpec" covered="_VKtc4GpzEei47fqiwvb5mw" finish="_A1lhYGp0Eei47fqiwvb5mw" start="_EjdhUGp0Eei47fqiwvb5mw"/>
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_EjdhUGp0Eei47fqiwvb5mw" name="jButton2ActionPerformed_MessageRecv" covered="_VKtc4GpzEei47fqiwvb5mw" message="_Ejc6QGp0Eei47fqiwvb5mw"/>
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_HbA9QWp0Eei47fqiwvb5mw" name="MessageSend" covered="_VKtc4GpzEei47fqiwvb5mw" message="_HbA9QGp0Eei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_A1lhYGp0Eei47fqiwvb5mw" name="ActionExecSpecFinish" covered="_VKtc4GpzEei47fqiwvb5mw" execution="_A1k6UWp0Eei47fqiwvb5mw"/>
          <guard xmi:type="uml:InteractionConstraint" xmi:id="_ijjGQWpzEei47fqiwvb5mw">
            <specification xmi:type="uml:LiteralString" xmi:id="_ijjGQmpzEei47fqiwvb5mw" value="undefined"/>
            <maxint xmi:type="uml:LiteralInteger" xmi:id="_ijjGRGpzEei47fqiwvb5mw" value="1"/>
            <minint xmi:type="uml:LiteralInteger" xmi:id="_ijjGQ2pzEei47fqiwvb5mw"/>
          </guard>
        </operand>
        <operand xmi:type="uml:InteractionOperand" xmi:id="_AHfsUGp0Eei47fqiwvb5mw" name="InteractionOperand0" covered="_VKtc4GpzEei47fqiwvb5mw _jXK7kGpzEei47fqiwvb5mw _96x9IGpzEei47fqiwvb5mw">
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_BJps4Gp0Eei47fqiwvb5mw" name="ActionExecSpecStart" covered="_VKtc4GpzEei47fqiwvb5mw" execution="_BJps4Wp0Eei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ActionExecutionSpecification" xmi:id="_BJps4Wp0Eei47fqiwvb5mw" name="ActionExecSpec" covered="_VKtc4GpzEei47fqiwvb5mw" finish="_BJqT8Gp0Eei47fqiwvb5mw" start="_GDw2cGp0Eei47fqiwvb5mw"/>
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_GDw2cGp0Eei47fqiwvb5mw" name="jbBackActionPerformed_MessageRecv" covered="_VKtc4GpzEei47fqiwvb5mw" message="_GDwPYGp0Eei47fqiwvb5mw"/>
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_Jca0UGp0Eei47fqiwvb5mw" name="Message0Send" covered="_VKtc4GpzEei47fqiwvb5mw" message="_JcaNQGp0Eei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_BJqT8Gp0Eei47fqiwvb5mw" name="ActionExecSpecFinish" covered="_VKtc4GpzEei47fqiwvb5mw" execution="_BJps4Wp0Eei47fqiwvb5mw"/>
          <guard xmi:type="uml:InteractionConstraint" xmi:id="_AHgTYGp0Eei47fqiwvb5mw">
            <specification xmi:type="uml:LiteralString" xmi:id="_AHgTYWp0Eei47fqiwvb5mw" value="undefined"/>
            <maxint xmi:type="uml:LiteralInteger" xmi:id="_AHgTY2p0Eei47fqiwvb5mw" value="1"/>
            <minint xmi:type="uml:LiteralInteger" xmi:id="_AHgTYmp0Eei47fqiwvb5mw"/>
          </guard>
        </operand>
      </fragment>
      <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_HbBkUGp0Eei47fqiwvb5mw" name="MessageRecv" covered="_jXK7kGpzEei47fqiwvb5mw" message="_HbA9QGp0Eei47fqiwvb5mw"/>
      <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_JcbbYGp0Eei47fqiwvb5mw" name="Message0Recv" covered="_96x9IGpzEei47fqiwvb5mw" message="_JcaNQGp0Eei47fqiwvb5mw"/>
      <message xmi:type="uml:Message" xmi:id="_Ejc6QGp0Eei47fqiwvb5mw" name="jButton2ActionPerformed_Message" messageSort="asynchSignal" receiveEvent="_EjdhUGp0Eei47fqiwvb5mw" signature="_bF5lwWWNEei0cbjpkrd07g"/>
      <message xmi:type="uml:Message" xmi:id="_GDwPYGp0Eei47fqiwvb5mw" name="jbBackActionPerformed_Message" messageSort="asynchSignal" receiveEvent="_GDw2cGp0Eei47fqiwvb5mw" signature="_bF4-sGWNEei0cbjpkrd07g"/>
      <message xmi:type="uml:Message" xmi:id="_HbA9QGp0Eei47fqiwvb5mw" name="Message" messageSort="createMessage" receiveEvent="_HbBkUGp0Eei47fqiwvb5mw" sendEvent="_HbA9QWp0Eei47fqiwvb5mw" signature="_bPkfIGWNEei0cbjpkrd07g"/>
      <message xmi:type="uml:Message" xmi:id="_JcaNQGp0Eei47fqiwvb5mw" name="Message0" messageSort="createMessage" receiveEvent="_JcbbYGp0Eei47fqiwvb5mw" sendEvent="_Jca0UGp0Eei47fqiwvb5mw" signature="_bAbP4GWNEei0cbjpkrd07g"/>
      <message xmi:type="uml:Message" xmi:id="_heshkGp0Eei47fqiwvb5mw" name="jSlider1StateChanged_Message" messageSort="asynchSignal" receiveEvent="_hetIoGp0Eei47fqiwvb5mw" signature="_bF6M0WWNEei0cbjpkrd07g"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Interaction" xmi:id="_us6WsGpxEei47fqiwvb5mw" name="step4_2-step4_3">
      <ownedAttribute xmi:type="uml:Property" xmi:id="_12BAAGp0Eei47fqiwvb5mw" name="" type="_bOvYsGWNEei0cbjpkrd07g"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_3hnmMGp0Eei47fqiwvb5mw" name="" type="_a0fssGWNEei0cbjpkrd07g"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_qvGggGp1Eei47fqiwvb5mw" name=""/>
      <lifeline xmi:type="uml:Lifeline" xmi:id="_12AY8Gp0Eei47fqiwvb5mw" name="" represents="_12BAAGp0Eei47fqiwvb5mw" coveredBy="_8XK_4Gp0Eei47fqiwvb5mw _8XKY0Gp0Eei47fqiwvb5mw _9rE3wGp0Eei47fqiwvb5mw _-jJvQWp0Eei47fqiwvb5mw _-jJvQGp0Eei47fqiwvb5mw _-3njYGp0Eei47fqiwvb5mw _-3oKcGp0Eei47fqiwvb5mw _-3njYWp0Eei47fqiwvb5mw _A4dZwWp1Eei47fqiwvb5mw _dWVIkGp1Eei47fqiwvb5mw _vEyuYGp1Eei47fqiwvb5mw"/>
      <lifeline xmi:type="uml:Lifeline" xmi:id="_3hmYEGp0Eei47fqiwvb5mw" name="" represents="_3hnmMGp0Eei47fqiwvb5mw" coveredBy="_8XK_4Gp0Eei47fqiwvb5mw _8XKY0Gp0Eei47fqiwvb5mw _9rE3wGp0Eei47fqiwvb5mw"/>
      <fragment xmi:type="uml:CombinedFragment" xmi:id="_8XKY0Gp0Eei47fqiwvb5mw" name="CombinedFragment" covered="_12AY8Gp0Eei47fqiwvb5mw _3hmYEGp0Eei47fqiwvb5mw" interactionOperator="alt">
        <operand xmi:type="uml:InteractionOperand" xmi:id="_8XK_4Gp0Eei47fqiwvb5mw" name="InteractionOperand" covered="_12AY8Gp0Eei47fqiwvb5mw _3hmYEGp0Eei47fqiwvb5mw">
          <fragment xmi:type="uml:ActionExecutionSpecification" xmi:id="_-jJvQGp0Eei47fqiwvb5mw" name="ActionExecSpec" covered="_12AY8Gp0Eei47fqiwvb5mw" finish="_-jJvQWp0Eei47fqiwvb5mw" start="_A4dZwWp1Eei47fqiwvb5mw"/>
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_A4dZwWp1Eei47fqiwvb5mw" name="jButton2ActionPerformed_MessageRecv" covered="_12AY8Gp0Eei47fqiwvb5mw" message="_A4dZwGp1Eei47fqiwvb5mw"/>
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_dWVIkGp1Eei47fqiwvb5mw" name="MessageSend" covered="_12AY8Gp0Eei47fqiwvb5mw" message="_dWUhgGp1Eei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_-jJvQWp0Eei47fqiwvb5mw" name="ActionExecSpecFinish" covered="_12AY8Gp0Eei47fqiwvb5mw" execution="_-jJvQGp0Eei47fqiwvb5mw"/>
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_dWVIkWp1Eei47fqiwvb5mw" name="MessageRecv" message="_dWUhgGp1Eei47fqiwvb5mw"/>
          <guard xmi:type="uml:InteractionConstraint" xmi:id="_8XK_4Wp0Eei47fqiwvb5mw">
            <specification xmi:type="uml:LiteralString" xmi:id="_8XLm8Gp0Eei47fqiwvb5mw" value="undefined"/>
            <maxint xmi:type="uml:LiteralInteger" xmi:id="_8XLm8mp0Eei47fqiwvb5mw" value="1"/>
            <minint xmi:type="uml:LiteralInteger" xmi:id="_8XLm8Wp0Eei47fqiwvb5mw"/>
          </guard>
        </operand>
        <operand xmi:type="uml:InteractionOperand" xmi:id="_9rE3wGp0Eei47fqiwvb5mw" name="InteractionOperand0" covered="_12AY8Gp0Eei47fqiwvb5mw _3hmYEGp0Eei47fqiwvb5mw">
          <fragment xmi:type="uml:ActionExecutionSpecification" xmi:id="_-3njYWp0Eei47fqiwvb5mw" name="ActionExecSpec" covered="_12AY8Gp0Eei47fqiwvb5mw" finish="_-3oKcGp0Eei47fqiwvb5mw" start="_vEyuYGp1Eei47fqiwvb5mw"/>
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_vEyuYGp1Eei47fqiwvb5mw" name="jbBackActionPerformed_MessageRecv" covered="_12AY8Gp0Eei47fqiwvb5mw" message="_vEyHUGp1Eei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_-3oKcGp0Eei47fqiwvb5mw" name="ActionExecSpecFinish" covered="_12AY8Gp0Eei47fqiwvb5mw" execution="_-3njYWp0Eei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_-3njYGp0Eei47fqiwvb5mw" name="ActionExecSpecStart" covered="_12AY8Gp0Eei47fqiwvb5mw" execution="_-3njYWp0Eei47fqiwvb5mw"/>
          <guard xmi:type="uml:InteractionConstraint" xmi:id="_9rFe0Gp0Eei47fqiwvb5mw">
            <specification xmi:type="uml:LiteralString" xmi:id="_9rGF4Gp0Eei47fqiwvb5mw" value="undefined"/>
            <maxint xmi:type="uml:LiteralInteger" xmi:id="_9rGF4mp0Eei47fqiwvb5mw" value="1"/>
            <minint xmi:type="uml:LiteralInteger" xmi:id="_9rGF4Wp0Eei47fqiwvb5mw"/>
          </guard>
        </operand>
      </fragment>
      <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_-jJIMGp0Eei47fqiwvb5mw" name="ActionExecSpecStart" execution="_-jJvQGp0Eei47fqiwvb5mw"/>
      <message xmi:type="uml:Message" xmi:id="_A4dZwGp1Eei47fqiwvb5mw" name="jButton2ActionPerformed_Message" messageSort="asynchSignal" receiveEvent="_A4dZwWp1Eei47fqiwvb5mw" signature="_bQnoAGWNEei0cbjpkrd07g"/>
      <message xmi:type="uml:Message" xmi:id="_dWUhgGp1Eei47fqiwvb5mw" name="Message" messageSort="createMessage" receiveEvent="_dWVIkWp1Eei47fqiwvb5mw" sendEvent="_dWVIkGp1Eei47fqiwvb5mw" signature="_a6JBsGWNEei0cbjpkrd07g"/>
      <message xmi:type="uml:Message" xmi:id="_vEyHUGp1Eei47fqiwvb5mw" name="jbBackActionPerformed_Message" messageSort="asynchSignal" receiveEvent="_vEyuYGp1Eei47fqiwvb5mw" signature="_bQkksGWNEei0cbjpkrd07g"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Interaction" xmi:id="_3mOO0GpzEei47fqiwvb5mw" name="step3_3-step4_1">
      <ownedAttribute xmi:type="uml:Property" xmi:id="_EG72AGp3Eei47fqiwvb5mw" name="" type="_a_5EYGWNEei0cbjpkrd07g"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_EyMZgGp3Eei47fqiwvb5mw" name="" type="_bVPpUGWNEei0cbjpkrd07g"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_FHhwUGp3Eei47fqiwvb5mw" name="" type="_bYBQgGWNEei0cbjpkrd07g"/>
      <lifeline xmi:type="uml:Lifeline" xmi:id="_EG7O8Gp3Eei47fqiwvb5mw" name="" represents="_EG72AGp3Eei47fqiwvb5mw" coveredBy="_HkWYEGp3Eei47fqiwvb5mw _HkW_IGp3Eei47fqiwvb5mw _IC7xgGp3Eei47fqiwvb5mw _KGSwYGp3Eei47fqiwvb5mw _KGTXcGp3Eei47fqiwvb5mw _KGSwYWp3Eei47fqiwvb5mw _KYq50Gp3Eei47fqiwvb5mw _KYrg4Wp3Eei47fqiwvb5mw _KYrg4Gp3Eei47fqiwvb5mw _MMlHcGp3Eei47fqiwvb5mw _NxGOMWp3Eei47fqiwvb5mw _Pq9S0Gp3Eei47fqiwvb5mw _nHNZ0HLmEei3ud9vrLTCZg"/>
      <lifeline xmi:type="uml:Lifeline" xmi:id="_EyLycGp3Eei47fqiwvb5mw" name="" represents="_EyMZgGp3Eei47fqiwvb5mw" coveredBy="_HkWYEGp3Eei47fqiwvb5mw _IC7xgGp3Eei47fqiwvb5mw _Pq954Gp3Eei47fqiwvb5mw _HkW_IGp3Eei47fqiwvb5mw"/>
      <lifeline xmi:type="uml:Lifeline" xmi:id="_FHgiMGp3Eei47fqiwvb5mw" name="" represents="_VKuD8GpzEei47fqiwvb5mw" coveredBy="_HkWYEGp3Eei47fqiwvb5mw _HkW_IGp3Eei47fqiwvb5mw _IC7xgGp3Eei47fqiwvb5mw _nHOn8HLmEei3ud9vrLTCZg"/>
      <lifeline xmi:type="uml:Lifeline" xmi:id="_eNp_MHLmEei3ud9vrLTCZg" name="Lifeline" represents="_bABAMGWNEei0cbjpkrd07g" coveredBy="_HkW_IGp3Eei47fqiwvb5mw _HkWYEGp3Eei47fqiwvb5mw _IC7xgGp3Eei47fqiwvb5mw _FpieIHlSEeiGl6CJxvVzPQ"/>
      <fragment xmi:type="uml:CombinedFragment" xmi:id="_HkWYEGp3Eei47fqiwvb5mw" name="CombinedFragment" covered="_FHgiMGp3Eei47fqiwvb5mw _EG7O8Gp3Eei47fqiwvb5mw _EyLycGp3Eei47fqiwvb5mw _eNp_MHLmEei3ud9vrLTCZg" interactionOperator="alt">
        <operand xmi:type="uml:InteractionOperand" xmi:id="_HkW_IGp3Eei47fqiwvb5mw" name="InteractionOperand" covered="_FHgiMGp3Eei47fqiwvb5mw _EG7O8Gp3Eei47fqiwvb5mw _eNp_MHLmEei3ud9vrLTCZg _EyLycGp3Eei47fqiwvb5mw">
          <fragment xmi:type="uml:ActionExecutionSpecification" xmi:id="_KGSwYWp3Eei47fqiwvb5mw" name="ActionExecSpec" covered="_EG7O8Gp3Eei47fqiwvb5mw" finish="_KGTXcGp3Eei47fqiwvb5mw" start="_MMlHcGp3Eei47fqiwvb5mw"/>
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_MMlHcGp3Eei47fqiwvb5mw" name="jButton2ActionPerformed_MessageRecv" covered="_EG7O8Gp3Eei47fqiwvb5mw" message="_MMkgYGp3Eei47fqiwvb5mw"/>
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_nHNZ0HLmEei3ud9vrLTCZg" name="Message1Send" covered="_EG7O8Gp3Eei47fqiwvb5mw" message="_nHIhUHLmEei3ud9vrLTCZg"/>
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_KGSwYGp3Eei47fqiwvb5mw" name="ActionExecSpecStart" covered="_EG7O8Gp3Eei47fqiwvb5mw" execution="_KGSwYWp3Eei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_KGTXcGp3Eei47fqiwvb5mw" name="ActionExecSpecFinish" covered="_EG7O8Gp3Eei47fqiwvb5mw" execution="_KGSwYWp3Eei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_FpieIHlSEeiGl6CJxvVzPQ" name="ActionExecSpec0Start" covered="_eNp_MHLmEei3ud9vrLTCZg"/>
          <guard xmi:type="uml:InteractionConstraint" xmi:id="_HkW_IWp3Eei47fqiwvb5mw">
            <specification xmi:type="uml:LiteralString" xmi:id="_HkW_Imp3Eei47fqiwvb5mw" value="undefined"/>
            <maxint xmi:type="uml:LiteralInteger" xmi:id="_HkXmMGp3Eei47fqiwvb5mw" value="1"/>
            <minint xmi:type="uml:LiteralInteger" xmi:id="_HkW_I2p3Eei47fqiwvb5mw"/>
          </guard>
        </operand>
        <operand xmi:type="uml:InteractionOperand" xmi:id="_IC7xgGp3Eei47fqiwvb5mw" name="InteractionOperand0" covered="_FHgiMGp3Eei47fqiwvb5mw _EG7O8Gp3Eei47fqiwvb5mw _EyLycGp3Eei47fqiwvb5mw _eNp_MHLmEei3ud9vrLTCZg">
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_KYq50Gp3Eei47fqiwvb5mw" name="ActionExecSpecStart" covered="_EG7O8Gp3Eei47fqiwvb5mw" execution="_KYrg4Gp3Eei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ActionExecutionSpecification" xmi:id="_KYrg4Gp3Eei47fqiwvb5mw" name="ActionExecSpec" covered="_EG7O8Gp3Eei47fqiwvb5mw" finish="_KYrg4Wp3Eei47fqiwvb5mw" start="_NxGOMWp3Eei47fqiwvb5mw"/>
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_NxGOMWp3Eei47fqiwvb5mw" name="jbBackActionPerformed_MessageRecv" covered="_EG7O8Gp3Eei47fqiwvb5mw" message="_NxGOMGp3Eei47fqiwvb5mw"/>
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_Pq9S0Gp3Eei47fqiwvb5mw" name="Message0Send" covered="_EG7O8Gp3Eei47fqiwvb5mw" message="_Pq8rwGp3Eei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_KYrg4Wp3Eei47fqiwvb5mw" name="ActionExecSpecFinish" covered="_EG7O8Gp3Eei47fqiwvb5mw" execution="_KYrg4Gp3Eei47fqiwvb5mw"/>
          <guard xmi:type="uml:InteractionConstraint" xmi:id="_IC7xgWp3Eei47fqiwvb5mw">
            <specification xmi:type="uml:LiteralString" xmi:id="_IC7xgmp3Eei47fqiwvb5mw" value="undefined"/>
            <maxint xmi:type="uml:LiteralInteger" xmi:id="_IC8YkWp3Eei47fqiwvb5mw" value="1"/>
            <minint xmi:type="uml:LiteralInteger" xmi:id="_IC8YkGp3Eei47fqiwvb5mw"/>
          </guard>
        </operand>
      </fragment>
      <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_nHOn8HLmEei3ud9vrLTCZg" name="Message1Recv" covered="_FHgiMGp3Eei47fqiwvb5mw" message="_nHIhUHLmEei3ud9vrLTCZg"/>
      <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_Pq954Gp3Eei47fqiwvb5mw" name="Message0Recv" covered="_EyLycGp3Eei47fqiwvb5mw" message="_Pq8rwGp3Eei47fqiwvb5mw"/>
      <message xmi:type="uml:Message" xmi:id="_MMkgYGp3Eei47fqiwvb5mw" name="jButton2ActionPerformed_Message" messageSort="asynchSignal" receiveEvent="_MMlHcGp3Eei47fqiwvb5mw" signature="_bA1fkWWNEei0cbjpkrd07g"/>
      <message xmi:type="uml:Message" xmi:id="_NxGOMGp3Eei47fqiwvb5mw" name="jbBackActionPerformed_Message" messageSort="asynchSignal" receiveEvent="_NxGOMWp3Eei47fqiwvb5mw" signature="_bAycQGWNEei0cbjpkrd07g"/>
      <message xmi:type="uml:Message" xmi:id="_Pq8rwGp3Eei47fqiwvb5mw" name="Message0" messageSort="createMessage" receiveEvent="_Pq954Gp3Eei47fqiwvb5mw" sendEvent="_Pq9S0Gp3Eei47fqiwvb5mw" signature="_bVlAgGWNEei0cbjpkrd07g"/>
      <message xmi:type="uml:Message" xmi:id="_nHIhUHLmEei3ud9vrLTCZg" name="Message1" messageSort="createMessage" receiveEvent="_nHOn8HLmEei3ud9vrLTCZg" sendEvent="_nHNZ0HLmEei3ud9vrLTCZg" signature="_bFJX0GWNEei0cbjpkrd07g"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Interaction" xmi:id="_QuKRQGrwEei47fqiwvb5mw" name="step4_3">
      <ownedAttribute xmi:type="uml:Property" xmi:id="_WBCgIGrwEei47fqiwvb5mw" name="" type="_a0fssGWNEei0cbjpkrd07g"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_k8GxQGrwEei47fqiwvb5mw" name="" type="_h_DKQGrwEei47fqiwvb5mw"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_HuFtAGryEei47fqiwvb5mw" name="" type="_bOvYsGWNEei0cbjpkrd07g"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_jS1oIG43Eei47fqiwvb5mw" name="" type="_h_DKQGrwEei47fqiwvb5mw"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_l7qlAXLsEei3ud9vrLTCZg" name=""/>
      <lifeline xmi:type="uml:Lifeline" xmi:id="_WBB5EGrwEei47fqiwvb5mw" name="" represents="_WBCgIGrwEei47fqiwvb5mw" coveredBy="_oOV-EGrwEei47fqiwvb5mw _oOV-EWrwEei47fqiwvb5mw _o-UpgGrwEei47fqiwvb5mw _9HorsGrxEei47fqiwvb5mw _9HpSwWrxEei47fqiwvb5mw _9HpSwGrxEei47fqiwvb5mw _sMjgEWrwEei47fqiwvb5mw _sMjgEGrwEei47fqiwvb5mw _XqYKkGryEei47fqiwvb5mw _sxNaYGryEei47fqiwvb5mw _vBieQGryEei47fqiwvb5mw _1AzSAGryEei47fqiwvb5mw _1Az5EGryEei47fqiwvb5mw _4yQxcGryEei47fqiwvb5mw _4yPjUGryEei47fqiwvb5mw _7rV3YGryEei47fqiwvb5mw _8diJUGryEei47fqiwvb5mw _8diwYWryEei47fqiwvb5mw _8diwYGryEei47fqiwvb5mw _9CmlQGryEei47fqiwvb5mw _9CnMUWryEei47fqiwvb5mw _9CnMUGryEei47fqiwvb5mw _-ozHAWryEei47fqiwvb5mw _XNOrUHOUEei3ud9vrLTCZg"/>
      <lifeline xmi:type="uml:Lifeline" xmi:id="_ZEaKgGrwEei47fqiwvb5mw" name="Lifeline" represents="_a5jy4GWNEei0cbjpkrd07g" coveredBy="_oOV-EGrwEei47fqiwvb5mw _oOV-EWrwEei47fqiwvb5mw _o-UpgGrwEei47fqiwvb5mw _j4P1oGryEei47fqiwvb5mw _TUwk8HOUEei3ud9vrLTCZg"/>
      <lifeline xmi:type="uml:Lifeline" xmi:id="_eiyewGrwEei47fqiwvb5mw" name="Lifeline0" represents="_bT5lgGWNEei0cbjpkrd07g" coveredBy="_oOV-EGrwEei47fqiwvb5mw _oOV-EWrwEei47fqiwvb5mw _o-UpgGrwEei47fqiwvb5mw"/>
      <lifeline xmi:type="uml:Lifeline" xmi:id="_HuFF8GryEei47fqiwvb5mw" name="" represents="_HuFtAGryEei47fqiwvb5mw" coveredBy="_oOV-EGrwEei47fqiwvb5mw _o-UpgGrwEei47fqiwvb5mw"/>
      <lifeline xmi:type="uml:Lifeline" xmi:id="_jS0aAG43Eei47fqiwvb5mw" name="" represents="_jS1oIG43Eei47fqiwvb5mw" coveredBy="_o-UpgGrwEei47fqiwvb5mw _oOV-EWrwEei47fqiwvb5mw _oOV-EGrwEei47fqiwvb5mw _ldTUkG43Eei47fqiwvb5mw _XNOrUXOUEei3ud9vrLTCZg"/>
      <fragment xmi:type="uml:CombinedFragment" xmi:id="_1AzSAGryEei47fqiwvb5mw" name="CombinedFragment0" covered="_WBB5EGrwEei47fqiwvb5mw" interactionOperator="opt">
        <operand xmi:type="uml:InteractionOperand" xmi:id="_1Az5EGryEei47fqiwvb5mw" name="InteractionOperand" covered="_WBB5EGrwEei47fqiwvb5mw">
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_7rV3YGryEei47fqiwvb5mw" name="jButton1ActionPerformed_MessageRecv" covered="_WBB5EGrwEei47fqiwvb5mw" message="_7rVQUGryEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_8diJUGryEei47fqiwvb5mw" name="ActionExecSpecStart" covered="_WBB5EGrwEei47fqiwvb5mw" execution="_8diwYGryEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ActionExecutionSpecification" xmi:id="_8diwYGryEei47fqiwvb5mw" name="ActionExecSpec" covered="_WBB5EGrwEei47fqiwvb5mw" finish="_8diwYWryEei47fqiwvb5mw" start="_7rV3YGryEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_8diwYWryEei47fqiwvb5mw" name="ActionExecSpecFinish" covered="_WBB5EGrwEei47fqiwvb5mw" execution="_8diwYGryEei47fqiwvb5mw"/>
          <guard xmi:type="uml:InteractionConstraint" xmi:id="_1A0gIGryEei47fqiwvb5mw">
            <specification xmi:type="uml:LiteralString" xmi:id="_1A0gIWryEei47fqiwvb5mw" value="undefined"/>
            <maxint xmi:type="uml:LiteralInteger" xmi:id="_1A0gI2ryEei47fqiwvb5mw" value="1"/>
            <minint xmi:type="uml:LiteralInteger" xmi:id="_1A0gImryEei47fqiwvb5mw"/>
          </guard>
        </operand>
      </fragment>
      <fragment xmi:type="uml:CombinedFragment" xmi:id="_4yPjUGryEei47fqiwvb5mw" name="CombinedFragment1" covered="_WBB5EGrwEei47fqiwvb5mw" interactionOperator="opt">
        <operand xmi:type="uml:InteractionOperand" xmi:id="_4yQxcGryEei47fqiwvb5mw" name="InteractionOperand" covered="_WBB5EGrwEei47fqiwvb5mw">
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_-ozHAWryEei47fqiwvb5mw" name="jButton3ActionPerformed_MessageRecv" covered="_WBB5EGrwEei47fqiwvb5mw" message="_-ozHAGryEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_9CmlQGryEei47fqiwvb5mw" name="ActionExecSpecStart" covered="_WBB5EGrwEei47fqiwvb5mw" execution="_9CnMUGryEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ActionExecutionSpecification" xmi:id="_9CnMUGryEei47fqiwvb5mw" name="ActionExecSpec" covered="_WBB5EGrwEei47fqiwvb5mw" finish="_9CnMUWryEei47fqiwvb5mw" start="_-ozHAWryEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_9CnMUWryEei47fqiwvb5mw" name="ActionExecSpecFinish" covered="_WBB5EGrwEei47fqiwvb5mw" execution="_9CnMUGryEei47fqiwvb5mw"/>
          <guard xmi:type="uml:InteractionConstraint" xmi:id="_4yQxcWryEei47fqiwvb5mw">
            <specification xmi:type="uml:LiteralString" xmi:id="_4yQxcmryEei47fqiwvb5mw" value="undefined"/>
            <maxint xmi:type="uml:LiteralInteger" xmi:id="_4yQxdGryEei47fqiwvb5mw" value="1"/>
            <minint xmi:type="uml:LiteralInteger" xmi:id="_4yQxc2ryEei47fqiwvb5mw"/>
          </guard>
        </operand>
      </fragment>
      <fragment xmi:type="uml:CombinedFragment" xmi:id="_oOV-EGrwEei47fqiwvb5mw" name="CombinedFragment" covered="_WBB5EGrwEei47fqiwvb5mw _ZEaKgGrwEei47fqiwvb5mw _eiyewGrwEei47fqiwvb5mw _HuFF8GryEei47fqiwvb5mw _jS0aAG43Eei47fqiwvb5mw" interactionOperator="alt">
        <operand xmi:type="uml:InteractionOperand" xmi:id="_oOV-EWrwEei47fqiwvb5mw" name="InteractionOperand" covered="_WBB5EGrwEei47fqiwvb5mw _ZEaKgGrwEei47fqiwvb5mw _eiyewGrwEei47fqiwvb5mw _jS0aAG43Eei47fqiwvb5mw">
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_XNOrUXOUEei3ud9vrLTCZg" name="Message5Recv" covered="_jS0aAG43Eei47fqiwvb5mw" message="_XNOEQHOUEei3ud9vrLTCZg"/>
          <fragment xmi:type="uml:ActionExecutionSpecification" xmi:id="_sMjgEGrwEei47fqiwvb5mw" name="ActionExecSpec" covered="_WBB5EGrwEei47fqiwvb5mw" finish="_sMjgEWrwEei47fqiwvb5mw" start="_sxNaYGryEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_sxNaYGryEei47fqiwvb5mw" name="jButton2ActionPerformed_MessageRecv" covered="_WBB5EGrwEei47fqiwvb5mw" message="_sxMzUGryEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_TUwk8HOUEei3ud9vrLTCZg" name="ActionExecSpec0Start" covered="_ZEaKgGrwEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_XNOrUHOUEei3ud9vrLTCZg" name="Message5Send" covered="_WBB5EGrwEei47fqiwvb5mw" message="_XNOEQHOUEei3ud9vrLTCZg"/>
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_sMjgEWrwEei47fqiwvb5mw" name="ActionExecSpecFinish" covered="_WBB5EGrwEei47fqiwvb5mw" execution="_sMjgEGrwEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_XqYKkGryEei47fqiwvb5mw" name="ActionExecSpecStart" covered="_WBB5EGrwEei47fqiwvb5mw" execution="_sMjgEGrwEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_j4P1oGryEei47fqiwvb5mw" name="ActionExecSpec0Start" covered="_ZEaKgGrwEei47fqiwvb5mw"/>
          <guard xmi:type="uml:InteractionConstraint" xmi:id="_oOWlIGrwEei47fqiwvb5mw">
            <specification xmi:type="uml:LiteralString" xmi:id="_oOWlIWrwEei47fqiwvb5mw" value="undefined"/>
            <maxint xmi:type="uml:LiteralInteger" xmi:id="_oOWlI2rwEei47fqiwvb5mw" value="1"/>
            <minint xmi:type="uml:LiteralInteger" xmi:id="_oOWlImrwEei47fqiwvb5mw"/>
          </guard>
        </operand>
        <operand xmi:type="uml:InteractionOperand" xmi:id="_o-UpgGrwEei47fqiwvb5mw" name="InteractionOperand0" covered="_WBB5EGrwEei47fqiwvb5mw _ZEaKgGrwEei47fqiwvb5mw _eiyewGrwEei47fqiwvb5mw _HuFF8GryEei47fqiwvb5mw _jS0aAG43Eei47fqiwvb5mw">
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_vBieQGryEei47fqiwvb5mw" name="jbBackActionPerformed_MessageRecv" covered="_WBB5EGrwEei47fqiwvb5mw" message="_vBh3MGryEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_9HorsGrxEei47fqiwvb5mw" name="ActionExecSpecStart" covered="_WBB5EGrwEei47fqiwvb5mw" execution="_9HpSwGrxEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ActionExecutionSpecification" xmi:id="_9HpSwGrxEei47fqiwvb5mw" name="ActionExecSpec" covered="_WBB5EGrwEei47fqiwvb5mw" finish="_9HpSwWrxEei47fqiwvb5mw" start="_vBieQGryEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_9HpSwWrxEei47fqiwvb5mw" name="ActionExecSpecFinish" covered="_WBB5EGrwEei47fqiwvb5mw" execution="_9HpSwGrxEei47fqiwvb5mw"/>
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_JTEt0GryEei47fqiwvb5mw" name="Message4Send" message="_JTEGwGryEei47fqiwvb5mw"/>
          <guard xmi:type="uml:InteractionConstraint" xmi:id="_o-VQkGrwEei47fqiwvb5mw">
            <specification xmi:type="uml:LiteralString" xmi:id="_o-VQkWrwEei47fqiwvb5mw" value="undefined"/>
            <maxint xmi:type="uml:LiteralInteger" xmi:id="_o-VQk2rwEei47fqiwvb5mw" value="1"/>
            <minint xmi:type="uml:LiteralInteger" xmi:id="_o-VQkmrwEei47fqiwvb5mw"/>
          </guard>
        </operand>
      </fragment>
      <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_ldTUkG43Eei47fqiwvb5mw" name="Message5Recv" covered="_jS0aAG43Eei47fqiwvb5mw"/>
      <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_YKoNYGrxEei47fqiwvb5mw" name="ActionExecSpec3Finish"/>
      <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_6C_EYGrwEei47fqiwvb5mw" name="ActionExecSpec0Start"/>
      <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_sMi5AGrwEei47fqiwvb5mw" name="ActionExecSpecStart" execution="_sMjgEGrwEei47fqiwvb5mw"/>
      <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_XqSrAGryEei47fqiwvb5mw" name="ActionExecSpecStart" execution="_sMjgEGrwEei47fqiwvb5mw"/>
      <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_JTEt0WryEei47fqiwvb5mw" name="Message4Recv" message="_JTEGwGryEei47fqiwvb5mw"/>
      <message xmi:type="uml:Message" xmi:id="_ssSTkGrxEei47fqiwvb5mw" name="Message3" messageSort="createMessage" signature="_h_JQ4GrwEei47fqiwvb5mw"/>
      <message xmi:type="uml:Message" xmi:id="_JTEGwGryEei47fqiwvb5mw" name="Message4" messageSort="createMessage" receiveEvent="_JTEt0WryEei47fqiwvb5mw" sendEvent="_JTEt0GryEei47fqiwvb5mw" signature="_bPkfIGWNEei0cbjpkrd07g"/>
      <message xmi:type="uml:Message" xmi:id="_sxMzUGryEei47fqiwvb5mw" name="jButton2ActionPerformed_Message" messageSort="asynchSignal" receiveEvent="_sxNaYGryEei47fqiwvb5mw" signature="_a64BgGWNEei0cbjpkrd07g"/>
      <message xmi:type="uml:Message" xmi:id="_vBh3MGryEei47fqiwvb5mw" name="jbBackActionPerformed_Message" messageSort="asynchSignal" receiveEvent="_vBieQGryEei47fqiwvb5mw" signature="_a6x64GWNEei0cbjpkrd07g"/>
      <message xmi:type="uml:Message" xmi:id="_7rVQUGryEei47fqiwvb5mw" name="jButton1ActionPerformed_Message" messageSort="asynchSignal" receiveEvent="_7rV3YGryEei47fqiwvb5mw" signature="_a6-vMGWNEei0cbjpkrd07g"/>
      <message xmi:type="uml:Message" xmi:id="_-ozHAGryEei47fqiwvb5mw" name="jButton3ActionPerformed_Message" messageSort="asynchSignal" receiveEvent="_-ozHAWryEei47fqiwvb5mw" signature="_a7EOwGWNEei0cbjpkrd07g"/>
      <message xmi:type="uml:Message" xmi:id="_XNOEQHOUEei3ud9vrLTCZg" name="Message5" messageSort="createMessage" receiveEvent="_XNOrUXOUEei3ud9vrLTCZg" sendEvent="_XNOrUHOUEei3ud9vrLTCZg" signature="_h_JQ4GrwEei47fqiwvb5mw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Interaction" xmi:id="_JfEH4HVlEeiR-eKc-5ByRA" name="Interaction1">
      <ownedAttribute xmi:type="uml:Property" xmi:id="_wQhmYHVlEeiR-eKc-5ByRA" name="" type="_DBAycG4qEei47fqiwvb5mw"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_zR9XEHVlEeiR-eKc-5ByRA" name="" type="_Wf8SgmlXEeiklvJUJNd-Aw"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_1Ld2YHVlEeiR-eKc-5ByRA" name="" type="_a5ikwGWNEei0cbjpkrd07g"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_17BrEHVlEeiR-eKc-5ByRA" name="" type="_bGWRsGWNEei0cbjpkrd07g"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_9nITwHVoEeiR-eKc-5ByRA" name="" type="_h_DKQGrwEei47fqiwvb5mw"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_R6fe0HXjEeiR-eKc-5ByRA" name="" type="_h_DKQGrwEei47fqiwvb5mw"/>
      <lifeline xmi:type="uml:Lifeline" xmi:id="_wQg_UHVlEeiR-eKc-5ByRA" name="" represents="_wQhmYHVlEeiR-eKc-5ByRA" coveredBy="_sqeswHVlEeiR-eKc-5ByRA _p2YNcHVlEeiR-eKc-5ByRA _p2XmYHVlEeiR-eKc-5ByRA _3LMScHVlEeiR-eKc-5ByRA _RHCJYHVmEeiR-eKc-5ByRA _3LMScXVlEeiR-eKc-5ByRA _5Mjl4HVoEeiR-eKc-5ByRA _5MkM8HVoEeiR-eKc-5ByRA _5Mjl4XVoEeiR-eKc-5ByRA _75AlEHVoEeiR-eKc-5ByRA _-22PMHVoEeiR-eKc-5ByRA _INxh4HXjEeiR-eKc-5ByRA _JW338HXjEeiR-eKc-5ByRA _JW338nXjEeiR-eKc-5ByRA _JW338XXjEeiR-eKc-5ByRA _Lu2b8HXjEeiR-eKc-5ByRA _UhTwEHXjEeiR-eKc-5ByRA"/>
      <lifeline xmi:type="uml:Lifeline" xmi:id="_zR8wAHVlEeiR-eKc-5ByRA" name="" represents="_zR9XEHVlEeiR-eKc-5ByRA" coveredBy="_sqeswHVlEeiR-eKc-5ByRA _p2YNcHVlEeiR-eKc-5ByRA _p2XmYHVlEeiR-eKc-5ByRA _INxh4HXjEeiR-eKc-5ByRA"/>
      <lifeline xmi:type="uml:Lifeline" xmi:id="_1LdPUHVlEeiR-eKc-5ByRA" name="" represents="_1Ld2YHVlEeiR-eKc-5ByRA" coveredBy="_sqeswHVlEeiR-eKc-5ByRA _p2YNcHVlEeiR-eKc-5ByRA _p2XmYHVlEeiR-eKc-5ByRA _9wTv0HVmEeiR-eKc-5ByRA _dM8gYXVoEeiR-eKc-5ByRA _9wTv0XVmEeiR-eKc-5ByRA _INxh4HXjEeiR-eKc-5ByRA"/>
      <lifeline xmi:type="uml:Lifeline" xmi:id="_17BEAHVlEeiR-eKc-5ByRA" name="" represents="_17BrEHVlEeiR-eKc-5ByRA" coveredBy="_sqeswHVlEeiR-eKc-5ByRA _p2YNcHVlEeiR-eKc-5ByRA _p2XmYHVlEeiR-eKc-5ByRA _DMfEoXVnEeiR-eKc-5ByRA _INxh4HXjEeiR-eKc-5ByRA"/>
      <lifeline xmi:type="uml:Lifeline" xmi:id="_9nHssHVoEeiR-eKc-5ByRA" name="" represents="_9nITwHVoEeiR-eKc-5ByRA" coveredBy="_sqeswHVlEeiR-eKc-5ByRA _p2XmYHVlEeiR-eKc-5ByRA _-222QHVoEeiR-eKc-5ByRA _INxh4HXjEeiR-eKc-5ByRA"/>
      <lifeline xmi:type="uml:Lifeline" xmi:id="_R6e3wHXjEeiR-eKc-5ByRA" name="" represents="_R6fe0HXjEeiR-eKc-5ByRA" coveredBy="_INxh4HXjEeiR-eKc-5ByRA _p2XmYHVlEeiR-eKc-5ByRA"/>
      <fragment xmi:type="uml:CombinedFragment" xmi:id="_p2XmYHVlEeiR-eKc-5ByRA" name="CombinedFragment" covered="_wQg_UHVlEeiR-eKc-5ByRA _zR8wAHVlEeiR-eKc-5ByRA _1LdPUHVlEeiR-eKc-5ByRA _17BEAHVlEeiR-eKc-5ByRA _9nHssHVoEeiR-eKc-5ByRA _R6e3wHXjEeiR-eKc-5ByRA" interactionOperator="alt">
        <operand xmi:type="uml:InteractionOperand" xmi:id="_p2YNcHVlEeiR-eKc-5ByRA" name="InteractionOperand" covered="_wQg_UHVlEeiR-eKc-5ByRA _zR8wAHVlEeiR-eKc-5ByRA _1LdPUHVlEeiR-eKc-5ByRA _17BEAHVlEeiR-eKc-5ByRA">
          <fragment xmi:type="uml:BehaviorExecutionSpecification" xmi:id="_3LMScHVlEeiR-eKc-5ByRA" name="BehaviorExecSpec" covered="_wQg_UHVlEeiR-eKc-5ByRA" finish="_3LMScXVlEeiR-eKc-5ByRA" start="_RHCJYHVmEeiR-eKc-5ByRA"/>
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_RHCJYHVmEeiR-eKc-5ByRA" name="jbNewExpActionPerformed_MessageRecv" covered="_wQg_UHVlEeiR-eKc-5ByRA" message="_RHBiUHVmEeiR-eKc-5ByRA"/>
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_gnltMHVmEeiR-eKc-5ByRA" name="newexperiment_MessageSend" message="_gnlGIHVmEeiR-eKc-5ByRA"/>
          <fragment xmi:type="uml:BehaviorExecutionSpecification" xmi:id="_hLrRsXVmEeiR-eKc-5ByRA" name="BehaviorExecSpec0" finish="_hLr4wHVmEeiR-eKc-5ByRA" start="_gnltMXVmEeiR-eKc-5ByRA"/>
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_gnltMXVmEeiR-eKc-5ByRA" name="newexperiment_MessageRecv" message="_gnlGIHVmEeiR-eKc-5ByRA"/>
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_lti6YHVmEeiR-eKc-5ByRA" name="MessageSend" message="_ltiTUHVmEeiR-eKc-5ByRA"/>
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_lti6YXVmEeiR-eKc-5ByRA" name="MessageRecv" message="_ltiTUHVmEeiR-eKc-5ByRA"/>
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_24m4MXVmEeiR-eKc-5ByRA" name="Message0Send" message="_24m4MHVmEeiR-eKc-5ByRA"/>
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_24nfQHVmEeiR-eKc-5ByRA" name="Message0Recv" message="_24m4MHVmEeiR-eKc-5ByRA"/>
          <fragment xmi:type="uml:BehaviorExecutionSpecification" xmi:id="_9wTv0HVmEeiR-eKc-5ByRA" name="BehaviorExecSpec1" covered="_1LdPUHVlEeiR-eKc-5ByRA" finish="_9wTv0XVmEeiR-eKc-5ByRA" start="_dM8gYXVoEeiR-eKc-5ByRA"/>
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_dM8gYXVoEeiR-eKc-5ByRA" name="runAssistant_MessageRecv" covered="_1LdPUHVlEeiR-eKc-5ByRA" message="_dM8gYHVoEeiR-eKc-5ByRA"/>
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_DMfEoHVnEeiR-eKc-5ByRA" name="Message1Send" message="_DMedkHVnEeiR-eKc-5ByRA"/>
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_9wTv0XVmEeiR-eKc-5ByRA" name="BehaviorExecSpec1Finish" covered="_1LdPUHVlEeiR-eKc-5ByRA" execution="_9wTv0HVmEeiR-eKc-5ByRA"/>
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_hLr4wHVmEeiR-eKc-5ByRA" name="BehaviorExecSpec0Finish" execution="_hLrRsXVmEeiR-eKc-5ByRA"/>
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_3LMScXVlEeiR-eKc-5ByRA" name="BehaviorExecSpecFinish" covered="_wQg_UHVlEeiR-eKc-5ByRA" execution="_3LMScHVlEeiR-eKc-5ByRA"/>
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_DMfEoXVnEeiR-eKc-5ByRA" name="Message1Recv" covered="_17BEAHVlEeiR-eKc-5ByRA" message="_DMedkHVnEeiR-eKc-5ByRA"/>
          <guard xmi:type="uml:InteractionConstraint" xmi:id="_p2YNcXVlEeiR-eKc-5ByRA">
            <specification xmi:type="uml:LiteralString" xmi:id="_p2YNcnVlEeiR-eKc-5ByRA" value="undefined"/>
            <maxint xmi:type="uml:LiteralInteger" xmi:id="_p2YNdHVlEeiR-eKc-5ByRA" value="1"/>
            <minint xmi:type="uml:LiteralInteger" xmi:id="_p2YNc3VlEeiR-eKc-5ByRA"/>
          </guard>
        </operand>
        <operand xmi:type="uml:InteractionOperand" xmi:id="_sqeswHVlEeiR-eKc-5ByRA" name="InteractionOperand0" covered="_wQg_UHVlEeiR-eKc-5ByRA _zR8wAHVlEeiR-eKc-5ByRA _1LdPUHVlEeiR-eKc-5ByRA _17BEAHVlEeiR-eKc-5ByRA _9nHssHVoEeiR-eKc-5ByRA">
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_5Mjl4HVoEeiR-eKc-5ByRA" name="BehaviorExecSpecStart" covered="_wQg_UHVlEeiR-eKc-5ByRA" execution="_5Mjl4XVoEeiR-eKc-5ByRA"/>
          <fragment xmi:type="uml:BehaviorExecutionSpecification" xmi:id="_5Mjl4XVoEeiR-eKc-5ByRA" name="BehaviorExecSpec" covered="_wQg_UHVlEeiR-eKc-5ByRA" finish="_5MkM8HVoEeiR-eKc-5ByRA" start="_75AlEHVoEeiR-eKc-5ByRA"/>
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_75AlEHVoEeiR-eKc-5ByRA" name="jbDuplicateExpActionPerformed_MessageRecv" covered="_wQg_UHVlEeiR-eKc-5ByRA" message="_74_-AHVoEeiR-eKc-5ByRA"/>
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_-22PMHVoEeiR-eKc-5ByRA" name="Message2Send" covered="_wQg_UHVlEeiR-eKc-5ByRA" message="_-21oIHVoEeiR-eKc-5ByRA"/>
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_5MkM8HVoEeiR-eKc-5ByRA" name="BehaviorExecSpecFinish" covered="_wQg_UHVlEeiR-eKc-5ByRA" execution="_5Mjl4XVoEeiR-eKc-5ByRA"/>
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_-222QHVoEeiR-eKc-5ByRA" name="Message2Recv" covered="_9nHssHVoEeiR-eKc-5ByRA" message="_-21oIHVoEeiR-eKc-5ByRA"/>
          <guard xmi:type="uml:InteractionConstraint" xmi:id="_sqfT0HVlEeiR-eKc-5ByRA">
            <specification xmi:type="uml:LiteralString" xmi:id="_sqfT0XVlEeiR-eKc-5ByRA" value="undefined"/>
            <maxint xmi:type="uml:LiteralInteger" xmi:id="_sqfT03VlEeiR-eKc-5ByRA" value="1"/>
            <minint xmi:type="uml:LiteralInteger" xmi:id="_sqfT0nVlEeiR-eKc-5ByRA"/>
          </guard>
        </operand>
        <operand xmi:type="uml:InteractionOperand" xmi:id="_INxh4HXjEeiR-eKc-5ByRA" name="InteractionOperand1" covered="_wQg_UHVlEeiR-eKc-5ByRA _zR8wAHVlEeiR-eKc-5ByRA _1LdPUHVlEeiR-eKc-5ByRA _17BEAHVlEeiR-eKc-5ByRA _9nHssHVoEeiR-eKc-5ByRA _R6e3wHXjEeiR-eKc-5ByRA">
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_JW338HXjEeiR-eKc-5ByRA" name="BehaviorExecSpecStart" covered="_wQg_UHVlEeiR-eKc-5ByRA" execution="_JW338XXjEeiR-eKc-5ByRA"/>
          <fragment xmi:type="uml:BehaviorExecutionSpecification" xmi:id="_JW338XXjEeiR-eKc-5ByRA" name="BehaviorExecSpec" covered="_wQg_UHVlEeiR-eKc-5ByRA" finish="_JW338nXjEeiR-eKc-5ByRA" start="_Lu2b8HXjEeiR-eKc-5ByRA"/>
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_Lu2b8HXjEeiR-eKc-5ByRA" name="jbimportexpfileActionPerformed_MessageRecv" covered="_wQg_UHVlEeiR-eKc-5ByRA" message="_Lu104HXjEeiR-eKc-5ByRA"/>
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_UhTwEHXjEeiR-eKc-5ByRA" name="Message3Send" covered="_wQg_UHVlEeiR-eKc-5ByRA" message="_UhTJAHXjEeiR-eKc-5ByRA"/>
          <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_UhTwEXXjEeiR-eKc-5ByRA" name="Message3Recv" message="_UhTJAHXjEeiR-eKc-5ByRA"/>
          <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_JW338nXjEeiR-eKc-5ByRA" name="BehaviorExecSpecFinish" covered="_wQg_UHVlEeiR-eKc-5ByRA" execution="_JW338XXjEeiR-eKc-5ByRA"/>
          <guard xmi:type="uml:InteractionConstraint" xmi:id="_INyI8HXjEeiR-eKc-5ByRA">
            <specification xmi:type="uml:LiteralString" xmi:id="_INyI8XXjEeiR-eKc-5ByRA" value="undefined"/>
            <maxint xmi:type="uml:LiteralInteger" xmi:id="_INyI83XjEeiR-eKc-5ByRA" value="1"/>
            <minint xmi:type="uml:LiteralInteger" xmi:id="_INyI8nXjEeiR-eKc-5ByRA"/>
          </guard>
        </operand>
      </fragment>
      <fragment xmi:type="uml:ExecutionOccurrenceSpecification" xmi:id="_3LLrYHVlEeiR-eKc-5ByRA" name="BehaviorExecSpecStart" execution="_3LMScHVlEeiR-eKc-5ByRA"/>
      <message xmi:type="uml:Message" xmi:id="_RHBiUHVmEeiR-eKc-5ByRA" name="jbNewExpActionPerformed_Message" messageSort="asynchSignal" receiveEvent="_RHCJYHVmEeiR-eKc-5ByRA" signature="_DCfZIW4qEei47fqiwvb5mw"/>
      <message xmi:type="uml:Message" xmi:id="_gnlGIHVmEeiR-eKc-5ByRA" name="newexperiment_Message" messageSort="asynchCall" receiveEvent="_gnltMXVmEeiR-eKc-5ByRA" sendEvent="_gnltMHVmEeiR-eKc-5ByRA" signature="_DCpKIm4qEei47fqiwvb5mw"/>
      <message xmi:type="uml:Message" xmi:id="_ltiTUHVmEeiR-eKc-5ByRA" name="Message" messageSort="createMessage" receiveEvent="_lti6YXVmEeiR-eKc-5ByRA" sendEvent="_lti6YHVmEeiR-eKc-5ByRA" signature="_W_GTsGlXEeiklvJUJNd-Aw"/>
      <message xmi:type="uml:Message" xmi:id="_24m4MHVmEeiR-eKc-5ByRA" name="Message0" messageSort="createMessage" receiveEvent="_24nfQHVmEeiR-eKc-5ByRA" sendEvent="_24m4MXVmEeiR-eKc-5ByRA" signature="_bUCvcGWNEei0cbjpkrd07g"/>
      <message xmi:type="uml:Message" xmi:id="_DMedkHVnEeiR-eKc-5ByRA" name="Message1" messageSort="createMessage" receiveEvent="_DMfEoXVnEeiR-eKc-5ByRA" sendEvent="_DMfEoHVnEeiR-eKc-5ByRA" signature="_bGliQGWNEei0cbjpkrd07g"/>
      <message xmi:type="uml:Message" xmi:id="_dM8gYHVoEeiR-eKc-5ByRA" name="runAssistant_Message" messageSort="asynchCall" receiveEvent="_dM8gYXVoEeiR-eKc-5ByRA" signature="_bUKrQGWNEei0cbjpkrd07g"/>
      <message xmi:type="uml:Message" xmi:id="_74_-AHVoEeiR-eKc-5ByRA" name="jbDuplicateExpActionPerformed_Message" messageSort="asynchSignal" receiveEvent="_75AlEHVoEeiR-eKc-5ByRA" signature="_UXO08HOcEei3ud9vrLTCZg"/>
      <message xmi:type="uml:Message" xmi:id="_-21oIHVoEeiR-eKc-5ByRA" name="Message2" messageSort="createMessage" receiveEvent="_-222QHVoEeiR-eKc-5ByRA" sendEvent="_-22PMHVoEeiR-eKc-5ByRA" signature="_h_JQ4GrwEei47fqiwvb5mw"/>
      <message xmi:type="uml:Message" xmi:id="_Lu104HXjEeiR-eKc-5ByRA" name="jbimportexpfileActionPerformed_Message" messageSort="asynchSignal" receiveEvent="_Lu2b8HXjEeiR-eKc-5ByRA" signature="_VjrzgHVpEeiR-eKc-5ByRA"/>
      <message xmi:type="uml:Message" xmi:id="_UhTJAHXjEeiR-eKc-5ByRA" name="Message3" messageSort="createMessage" receiveEvent="_UhTwEXXjEeiR-eKc-5ByRA" sendEvent="_UhTwEHXjEeiR-eKc-5ByRA" signature="_h_JQ4GrwEei47fqiwvb5mw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:CallEvent" xmi:id="_8BS2kI5PEeie3Y8fpsu39w" operation="_bKZrQGWNEei0cbjpkrd07g"/>
    <packagedElement xmi:type="uml:CallEvent" xmi:id="__hlGcI5PEeie3Y8fpsu39w" operation="_bKdVoGWNEei0cbjpkrd07g"/>
    <packagedElement xmi:type="uml:CallEvent" xmi:id="_DLE8sI5QEeie3Y8fpsu39w" operation="_bKZrQGWNEei0cbjpkrd07g"/>
    <packagedElement xmi:type="uml:CallEvent" xmi:id="_TUiTkI5QEeie3Y8fpsu39w" operation="_bKRvcGWNEei0cbjpkrd07g"/>
    <packagedElement xmi:type="uml:CallEvent" xmi:id="_YqpcoI5QEeie3Y8fpsu39w" operation="_bKhnEGWNEei0cbjpkrd07g"/>
    <packagedElement xmi:type="uml:CallEvent" xmi:id="_n7kpAI5QEeie3Y8fpsu39w" operation="_bYRIIGWNEei0cbjpkrd07g"/>
    <packagedElement xmi:type="uml:CallEvent" xmi:id="_ITl5MI5REeie3Y8fpsu39w" operation="_bYdVYmWNEei0cbjpkrd07g"/>
    <packagedElement xmi:type="uml:CallEvent" xmi:id="_MIyCEI5REeie3Y8fpsu39w" operation="_bYd8cmWNEei0cbjpkrd07g"/>
    <packagedElement xmi:type="uml:CallEvent" xmi:id="_QOQpsI5REeie3Y8fpsu39w" operation="_bYd8cmWNEei0cbjpkrd07g"/>
    <packagedElement xmi:type="uml:CallEvent" xmi:id="_Tg_lwI5REeie3Y8fpsu39w" operation="_bYdVYmWNEei0cbjpkrd07g"/>
    <packagedElement xmi:type="uml:CallEvent" xmi:id="_d1O1sI5REeie3Y8fpsu39w" operation="_bYaSEGWNEei0cbjpkrd07g"/>
    <packagedElement xmi:type="uml:CallEvent" xmi:id="_wHw8cI5SEeie3Y8fpsu39w" operation="_bYejgGWNEei0cbjpkrd07g"/>
    <packagedElement xmi:type="uml:CallEvent" xmi:id="_z81JgI5SEeie3Y8fpsu39w" operation="_bYejg2WNEei0cbjpkrd07g"/>
    <packagedElement xmi:type="uml:CallEvent" xmi:id="_3OKXYI5SEeie3Y8fpsu39w" operation="_bYfKkmWNEei0cbjpkrd07g"/>
    <packagedElement xmi:type="uml:CallEvent" xmi:id="_56k6UI5SEeie3Y8fpsu39w" operation="_bYfxomWNEei0cbjpkrd07g"/>
    <packagedElement xmi:type="uml:CallEvent" xmi:id="_CrWMYI5TEeie3Y8fpsu39w" operation="_bYgYsGWNEei0cbjpkrd07g"/>
    <packagedElement xmi:type="uml:CallEvent" xmi:id="_FyPr4I5TEeie3Y8fpsu39w" operation="_bYgYs2WNEei0cbjpkrd07g"/>
    <packagedElement xmi:type="uml:CallEvent" xmi:id="_Iea-QI5TEeie3Y8fpsu39w" operation="_bYg_wWWNEei0cbjpkrd07g"/>
    <packagedElement xmi:type="uml:CallEvent" xmi:id="_Z-zEwI5TEeie3Y8fpsu39w" operation="_bI6dgGWNEei0cbjpkrd07g"/>
    <packagedElement xmi:type="uml:CallEvent" xmi:id="_hJ71wI5TEeie3Y8fpsu39w" operation="_bJFcoGWNEei0cbjpkrd07g"/>
    <packagedElement xmi:type="uml:CallEvent" xmi:id="_kQk2kI5TEeie3Y8fpsu39w" operation="_bJIf8GWNEei0cbjpkrd07g"/>
    <packagedElement xmi:type="uml:CallEvent" xmi:id="_67Rs4I5TEeie3Y8fpsu39w" operation="_a95gUGWNEei0cbjpkrd07g"/>
    <packagedElement xmi:type="uml:CallEvent" xmi:id="_-0goQI5TEeie3Y8fpsu39w" operation="_a-YBcGWNEei0cbjpkrd07g"/>
    <packagedElement xmi:type="uml:CallEvent" xmi:id="_BkRaII5UEeie3Y8fpsu39w" operation="_a-TI8GWNEei0cbjpkrd07g"/>
    <packagedElement xmi:type="uml:CallEvent" xmi:id="_Fe-8MI5UEeie3Y8fpsu39w" operation="_a-TI8GWNEei0cbjpkrd07g"/>
    <packagedElement xmi:type="uml:CallEvent" xmi:id="_IAi6AI5UEeie3Y8fpsu39w" operation="_a-YBcGWNEei0cbjpkrd07g"/>
    <packagedElement xmi:type="uml:CallEvent" xmi:id="_NYRMoI5UEeie3Y8fpsu39w" operation="_a-v04GWNEei0cbjpkrd07g"/>
    <packagedElement xmi:type="uml:CallEvent" xmi:id="_QxQhsI5UEeie3Y8fpsu39w" operation="_a7EOwGWNEei0cbjpkrd07g"/>
    <packagedElement xmi:type="uml:CallEvent" xmi:id="_tj7b0I5UEeie3Y8fpsu39w" operation="_bHsVgWWNEei0cbjpkrd07g"/>
    <packagedElement xmi:type="uml:CallEvent" xmi:id="_yuBiII5UEeie3Y8fpsu39w" operation="_bHzqQGWNEei0cbjpkrd07g"/>
    <packagedElement xmi:type="uml:CallEvent" xmi:id="_3pjoAI5UEeie3Y8fpsu39w" operation="_bHycIWWNEei0cbjpkrd07g"/>
    <packagedElement xmi:type="uml:CallEvent" xmi:id="_KAVyEI5VEeie3Y8fpsu39w" operation="_bL1OoGWNEei0cbjpkrd07g"/>
    <packagedElement xmi:type="uml:CallEvent" xmi:id="_Nh5NQI5VEeie3Y8fpsu39w" operation="_bM6MsGWNEei0cbjpkrd07g"/>
    <packagedElement xmi:type="uml:CallEvent" xmi:id="_ROxusI5VEeie3Y8fpsu39w" operation="_bM9QAGWNEei0cbjpkrd07g"/>
    <packagedElement xmi:type="uml:CallEvent" xmi:id="_fCwb8I5VEeie3Y8fpsu39w" operation="_bVlAgGWNEei0cbjpkrd07g"/>
    <packagedElement xmi:type="uml:CallEvent" xmi:id="_mZIzoI5VEeie3Y8fpsu39w" operation="_bV3UYGWNEei0cbjpkrd07g"/>
    <packagedElement xmi:type="uml:CallEvent" xmi:id="_pWwbUI5VEeie3Y8fpsu39w" operation="_bV6XsGWNEei0cbjpkrd07g"/>
    <packagedElement xmi:type="uml:CallEvent" xmi:id="_JTTQcI5WEeie3Y8fpsu39w" operation="_bAbP4GWNEei0cbjpkrd07g"/>
    <packagedElement xmi:type="uml:CallEvent" xmi:id="_M24E4I5WEeie3Y8fpsu39w" operation="_bA1fkWWNEei0cbjpkrd07g"/>
    <packagedElement xmi:type="uml:CallEvent" xmi:id="_RSeGcI5WEeie3Y8fpsu39w" operation="_bAycQGWNEei0cbjpkrd07g"/>
    <packagedElement xmi:type="uml:CallEvent" xmi:id="_KHgF0I5cEeie3Y8fpsu39w" operation="_bFJX0GWNEei0cbjpkrd07g"/>
    <packagedElement xmi:type="uml:CallEvent" xmi:id="_OLL9sI5cEeie3Y8fpsu39w" operation="_bF4-sGWNEei0cbjpkrd07g"/>
    <packagedElement xmi:type="uml:CallEvent" xmi:id="_REaNkI5cEeie3Y8fpsu39w" operation="_bF5lwWWNEei0cbjpkrd07g"/>
    <packagedElement xmi:type="uml:CallEvent" xmi:id="_UY2Z0I5cEeie3Y8fpsu39w" operation="_bF5lwWWNEei0cbjpkrd07g"/>
    <packagedElement xmi:type="uml:CallEvent" xmi:id="_XtXekI5cEeie3Y8fpsu39w" operation="_bF4-sGWNEei0cbjpkrd07g"/>
    <packagedElement xmi:type="uml:CallEvent" xmi:id="_cAC0sI5cEeie3Y8fpsu39w" operation="_bF6M0WWNEei0cbjpkrd07g"/>
    <packagedElement xmi:type="uml:CallEvent" xmi:id="_GVG80I5dEeie3Y8fpsu39w" operation="_bPkfIGWNEei0cbjpkrd07g"/>
    <packagedElement xmi:type="uml:CallEvent" xmi:id="_N3z5QI5dEeie3Y8fpsu39w" operation="_bQnoAGWNEei0cbjpkrd07g"/>
    <packagedElement xmi:type="uml:CallEvent" xmi:id="_RVUh8I5dEeie3Y8fpsu39w" operation="_bQkksGWNEei0cbjpkrd07g"/>
    <packagedElement xmi:type="uml:CallEvent" xmi:id="_olZ9QI5dEeie3Y8fpsu39w" operation="_a6JBsGWNEei0cbjpkrd07g"/>
    <packagedElement xmi:type="uml:CallEvent" xmi:id="_sQrVII5dEeie3Y8fpsu39w" operation="_a64BgGWNEei0cbjpkrd07g"/>
    <packagedElement xmi:type="uml:CallEvent" xmi:id="_vJ5lAI5dEeie3Y8fpsu39w" operation="_a6x64GWNEei0cbjpkrd07g"/>
    <packagedElement xmi:type="uml:CallEvent" xmi:id="_yy5sAI5dEeie3Y8fpsu39w" operation="_a6x64GWNEei0cbjpkrd07g"/>
    <packagedElement xmi:type="uml:CallEvent" xmi:id="_2Fh6YI5dEeie3Y8fpsu39w" operation="_a64BgGWNEei0cbjpkrd07g"/>
    <packagedElement xmi:type="uml:CallEvent" xmi:id="_62GGYI5dEeie3Y8fpsu39w" operation="_a6-vMGWNEei0cbjpkrd07g"/>
    <packagedElement xmi:type="uml:CallEvent" xmi:id="_-zlPoI5dEeie3Y8fpsu39w" operation="_a7EOwGWNEei0cbjpkrd07g"/>
    <profileApplication xmi:type="uml:ProfileApplication" xmi:id="_C_kA8G4qEei47fqiwvb5mw">
      <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_C_koAG4qEei47fqiwvb5mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.eclipse.org/papyrus/PapyrusJava/1#/"/>
      </eAnnotations>
      <appliedProfile xmi:type="uml:Profile" href="pathmap://PapyrusJava_PROFILES/PapyrusJava.profile.uml#_j9REUByGEduN1bTiWJ0lyw"/>
    </profileApplication>
    <profileApplication xmi:type="uml:ProfileApplication" xmi:id="_C_4KAG4qEei47fqiwvb5mw">
      <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_C_4xEG4qEei47fqiwvb5mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.eclipse.org/papyrus/Codegen/1#/"/>
      </eAnnotations>
      <appliedProfile xmi:type="uml:Profile" href="pathmap://Codegen_PROFILES/Codegen.profile.uml#_fPDsIBa-EearhdjjJ6cVzQ"/>
    </profileApplication>
    <profileApplication xmi:type="uml:ProfileApplication" xmi:id="_C_70YG4qEei47fqiwvb5mw">
      <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_C_8bcG4qEei47fqiwvb5mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.eclipse.org/uml2/5.0.0/UML/Profile/Standard#/"/>
      </eAnnotations>
      <appliedProfile xmi:type="uml:Profile" href="pathmap://UML_PROFILES/Standard.profile.uml#_0"/>
    </profileApplication>
    <profileApplication xmi:type="uml:ProfileApplication" xmi:id="_3fyh4HLSEei3ud9vrLTCZg">
      <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_HKlisI9iEeiZxJSH706ZeA" source="PapyrusVersion">
        <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_HKlisY9iEeiZxJSH706ZeA" key="Version" value="0.0.26"/>
        <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_HKliso9iEeiZxJSH706ZeA" key="Comment" value=""/>
        <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_HKlis49iEeiZxJSH706ZeA" key="Copyright" value=""/>
        <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_HKlitI9iEeiZxJSH706ZeA" key="Date" value="2018-07-18"/>
        <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_HKlitY9iEeiZxJSH706ZeA" key="Author" value=""/>
      </eAnnotations>
      <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_3fzwAHLSEei3ud9vrLTCZg" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="../UML2PROV/uml2prov.profile.uml#_AlbbIIpVEeie3Y8fpsu39w"/>
      </eAnnotations>
      <appliedProfile xmi:type="uml:Profile" href="../UML2PROV/uml2prov.profile.uml#_DhG-UKzIEeeHgLSovnmdUQ"/>
    </profileApplication>
    <profileApplication xmi:type="uml:ProfileApplication" xmi:id="_UzvvFYT5EeiRUIzt_TvOmw">
      <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_Uz5gAIT5EeiRUIzt_TvOmw" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="uml2prov.profile.uml#_GDAi4GiPEeiklvJUJNd-Aw"/>
      </eAnnotations>
      <appliedProfile xmi:type="uml:Profile" href="uml2prov.profile.uml#_DhG-UKzIEeeHgLSovnmdUQ"/>
    </profileApplication>
    <profileApplication xmi:type="uml:ProfileApplication" xmi:id="_gdw7AI5NEeie3Y8fpsu39w">
      <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_gdxiEI5NEeie3Y8fpsu39w" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://PAPYRUS_ACTIONLANGUAGE_PROFILE/ActionLanguage-Profile.profile.uml#_Kv8EIKFXEeS_KNX0nfvIVQ"/>
      </eAnnotations>
      <appliedProfile xmi:type="uml:Profile" href="pathmap://PAPYRUS_ACTIONLANGUAGE_PROFILE/ActionLanguage-Profile.profile.uml#ActionLanguage"/>
    </profileApplication>
  </uml:Model>
  <PapyrusJava:External xmi:id="_DBCAkG4qEei47fqiwvb5mw" name="javax.swing.JFrame" base_Classifier="_a0hh4GWNEei0cbjpkrd07g"/>
  <PapyrusJava:External xmi:id="_DBD1wG4qEei47fqiwvb5mw" name="javax.swing.event.TreeSelectionListener" base_Classifier="_MHhioGlWEeiklvJUJNd-Aw"/>
  <PapyrusJava:External xmi:id="_DBFq8G4qEei47fqiwvb5mw" name="javax.swing.event.TableModelListener" base_Classifier="_L_Q-gGlWEeiklvJUJNd-Aw"/>
  <PapyrusJava:External xmi:id="_DBKjcG4qEei47fqiwvb5mw" name="db.Classes.Comparison" base_Classifier="_MByHAGlWEeiklvJUJNd-Aw"/>
  <PapyrusJava:External xmi:id="_DBMYoG4qEei47fqiwvb5mw" name="db.Classes.LaneDB" base_Classifier="_L6o9MGlWEeiklvJUJNd-Aw"/>
  <PapyrusJava:External xmi:id="_DBO04G4qEei47fqiwvb5mw" name="java.lang.String" base_Classifier="_bAF4sGWNEei0cbjpkrd07g"/>
  <PapyrusJava:External xmi:id="_DBRRIG4qEei47fqiwvb5mw" name="javax.swing.tree.DefaultMutableTreeNode" base_Classifier="_MIImoGlWEeiklvJUJNd-Aw"/>
  <PapyrusJava:External xmi:id="_DBTGUG4qEei47fqiwvb5mw" name="javax.swing.tree.DefaultTreeModel" base_Classifier="_MINfIGlWEeiklvJUJNd-Aw"/>
  <PapyrusJava:External xmi:id="_DBVikG4qEei47fqiwvb5mw" name="ij.ImageJ" base_Classifier="_MIX3MGlWEeiklvJUJNd-Aw"/>
  <PapyrusJava:External xmi:id="_DBbCIG4qEei47fqiwvb5mw" name="java.lang.Object" base_Classifier="_MIoV4GlWEeiklvJUJNd-Aw"/>
  <PapyrusJava:External xmi:id="_DBkzIG4qEei47fqiwvb5mw" name="javax.swing.JComboBox" base_Classifier="_a8X2UGWNEei0cbjpkrd07g"/>
  <PapyrusJava:External xmi:id="_DBmoUG4qEei47fqiwvb5mw" name="javax.swing.event.TableModelEvent" base_Classifier="_L_20YGlWEeiklvJUJNd-Aw"/>
  <PapyrusJava:External xmi:id="_DB_C0G4qEei47fqiwvb5mw" name="java.awt.event.ActionEvent" base_Classifier="_a6tpcGWNEei0cbjpkrd07g"/>
  <PapyrusJava:External xmi:id="_DCDUQG4qEei47fqiwvb5mw" name="java.awt.event.KeyEvent" base_Classifier="_L-Gg4GlWEeiklvJUJNd-Aw"/>
  <PapyrusJava:External xmi:id="_DCh1YG4qEei47fqiwvb5mw" name="java.io.IOException" base_Classifier="_bFTv4GWNEei0cbjpkrd07g"/>
  <PapyrusJava:External xmi:id="_DCjqkG4qEei47fqiwvb5mw" name="java.io.FileNotFoundException" base_Classifier="_bUai4GWNEei0cbjpkrd07g"/>
  <PapyrusJava:External xmi:id="_DCmt4G4qEei47fqiwvb5mw" name="java.lang.Exception" base_Classifier="_MM_RcGlWEeiklvJUJNd-Aw"/>
  <PapyrusJava:External xmi:id="_DCv30G4qEei47fqiwvb5mw" name="javax.swing.JMenuItem" base_Classifier="_MNr1AGlWEeiklvJUJNd-Aw"/>
  <PapyrusJava:External xmi:id="_DCxtAG4qEei47fqiwvb5mw" name="javax.swing.JButton" base_Classifier="_a758QGWNEei0cbjpkrd07g"/>
  <PapyrusJava:External xmi:id="_DCziMG4qEei47fqiwvb5mw" name="javax.swing.JMenu" base_Classifier="_MNzJwGlWEeiklvJUJNd-Aw"/>
  <PapyrusJava:External xmi:id="_DC2lgG4qEei47fqiwvb5mw" name="javax.swing.JMenuBar" base_Classifier="_MN6egGlWEeiklvJUJNd-Aw"/>
  <PapyrusJava:External xmi:id="_DC5o0G4qEei47fqiwvb5mw" name="javax.swing.JPanel" base_Classifier="_a8yGAGWNEei0cbjpkrd07g"/>
  <PapyrusJava:External xmi:id="_DC8FEG4qEei47fqiwvb5mw" name="javax.swing.JScrollPane" base_Classifier="_a9Dy0GWNEei0cbjpkrd07g"/>
  <PapyrusJava:External xmi:id="_DC_IYG4qEei47fqiwvb5mw" name="javax.swing.JToolBar.Separator" base_Classifier="_MAK9cGlWEeiklvJUJNd-Aw"/>
  <PapyrusJava:External xmi:id="_DDBkoG4qEei47fqiwvb5mw" name="javax.swing.JPopupMenu.Separator" base_Classifier="_MOS5AGlWEeiklvJUJNd-Aw"/>
  <PapyrusJava:External xmi:id="_DDEn8G4qEei47fqiwvb5mw" name="javax.swing.JToolBar" base_Classifier="_a9M8wGWNEei0cbjpkrd07g"/>
  <PapyrusJava:External xmi:id="_DDISUG4qEei47fqiwvb5mw" name="org.jdesktop.swingx.JXImageView" base_Classifier="_MOdREGlWEeiklvJUJNd-Aw"/>
  <PapyrusJava:External xmi:id="_DDT4gG4qEei47fqiwvb5mw" name="javax.swing.JSplitPane" base_Classifier="_MPADoGlWEeiklvJUJNd-Aw"/>
  <PapyrusJava:External xmi:id="_DDWUwG4qEei47fqiwvb5mw" name="javax.swing.JTree" base_Classifier="_MPE8IGlWEeiklvJUJNd-Aw"/>
  <PapyrusJava:External xmi:id="_DDYJ8G4qEei47fqiwvb5mw" name="javax.swing.JTable" base_Classifier="_L8glcGlWEeiklvJUJNd-Aw"/>
  <PapyrusJava:External xmi:id="_DDZ_IG4qEei47fqiwvb5mw" name="org.jdesktop.swingx.JXSearchField" base_Classifier="_MPJ0oGlWEeiklvJUJNd-Aw"/>
  <PapyrusJava:External xmi:id="_DDb0UG4qEei47fqiwvb5mw" name="javax.swing.event.TreeSelectionEvent" base_Classifier="_MPM38GlWEeiklvJUJNd-Aw"/>
  <PapyrusJava:External xmi:id="_DDgs0G4qEei47fqiwvb5mw" name="javax.swing.event.TreeModelListener" base_Classifier="_MPX3EGlWEeiklvJUJNd-Aw"/>
  <PapyrusJava:External xmi:id="_DDh68G4qEei47fqiwvb5mw" name="javax.swing.event.TreeModelEvent" base_Classifier="_MPaTUGlWEeiklvJUJNd-Aw"/>
  <PapyrusJava:External xmi:id="_DDmMYG4qEei47fqiwvb5mw" name="javax.swing.tree.DefaultTreeCellRenderer" base_Classifier="_MPw4oWlWEeiklvJUJNd-Aw"/>
  <PapyrusJava:External xmi:id="_DDoooG4qEei47fqiwvb5mw" name="java.awt.Component" base_Classifier="_MP3mUGlWEeiklvJUJNd-Aw"/>
  <UML2PROV_profiles:command xmi:id="_mSuRkHLVEei3ud9vrLTCZg" base_Operation="_O9hFsHLVEei3ud9vrLTCZg"/>
  <UML2PROV_profiles:command xmi:id="_n6m1YHLVEei3ud9vrLTCZg" base_Operation="_bXbaoGWNEei0cbjpkrd07g"/>
  <UML2PROV_profiles:command xmi:id="_oiKkoHLVEei3ud9vrLTCZg" base_Operation="_bXed8GWNEei0cbjpkrd07g"/>
  <UML2PROV_profiles:modify xmi:id="_qjNPUHLVEei3ud9vrLTCZg" item="imp" base_Operation="_bXXwQGWNEei0cbjpkrd07g"/>
  <UML2PROV_profiles:modify xmi:id="_tkWFEHLVEei3ud9vrLTCZg" item="imp" base_Operation="_bKRvcGWNEei0cbjpkrd07g"/>
  <UML2PROV_profiles:modify xmi:id="_vhhjcHLVEei3ud9vrLTCZg" item="imp" base_Operation="_bKhnEGWNEei0cbjpkrd07g"/>
  <UML2PROV_profiles:command xmi:id="_xBoEQHLVEei3ud9vrLTCZg" base_Operation="_bKdVoGWNEei0cbjpkrd07g"/>
  <UML2PROV_profiles:command xmi:id="_xn9rgHLVEei3ud9vrLTCZg" base_Operation="_bKZrQGWNEei0cbjpkrd07g"/>
  <UML2PROV_profiles:command xmi:id="_5ayuoHLVEei3ud9vrLTCZg" base_Operation="_bYdVYmWNEei0cbjpkrd07g"/>
  <UML2PROV_profiles:command xmi:id="_6A8vsHLVEei3ud9vrLTCZg" base_Operation="_bYd8cmWNEei0cbjpkrd07g"/>
  <UML2PROV_profiles:command xmi:id="_AwAosHLWEei3ud9vrLTCZg" base_Operation="_bJFcoGWNEei0cbjpkrd07g"/>
  <UML2PROV_profiles:command xmi:id="_BTr9gHLWEei3ud9vrLTCZg" base_Operation="_bJIf8GWNEei0cbjpkrd07g"/>
  <UML2PROV_profiles:command xmi:id="_ClGiEHLWEei3ud9vrLTCZg" base_Operation="_a-TI8GWNEei0cbjpkrd07g"/>
  <UML2PROV_profiles:command xmi:id="_DILZ8HLWEei3ud9vrLTCZg" base_Operation="_a-YBcGWNEei0cbjpkrd07g"/>
  <UML2PROV_profiles:Create xmi:id="_05BvcHLcEei3ud9vrLTCZg" base_Operation="_bI0W4GWNEei0cbjpkrd07g"/>
  <UML2PROV_profiles:Create xmi:id="_1new4HLcEei3ud9vrLTCZg" base_Operation="_bI6dgGWNEei0cbjpkrd07g"/>
  <standard:Create xmi:id="_20aeEHLcEei3ud9vrLTCZg" base_BehavioralFeature="_bGfboGWNEei0cbjpkrd07g"/>
  <UML2PROV_profiles:Create xmi:id="_3mqaYHLcEei3ud9vrLTCZg" base_Operation="_bGliQGWNEei0cbjpkrd07g"/>
  <UML2PROV_profiles:Create xmi:id="_4TPzkHLcEei3ud9vrLTCZg" base_Operation="_bXMKEGWNEei0cbjpkrd07g"/>
  <UML2PROV_profiles:Create xmi:id="_42jU8HLcEei3ud9vrLTCZg" base_Operation="_bXQbgGWNEei0cbjpkrd07g"/>
  <UML2PROV_profiles:Create xmi:id="_5quj4HLcEei3ud9vrLTCZg" base_Operation="_bKBQwGWNEei0cbjpkrd07g"/>
  <UML2PROV_profiles:Create xmi:id="_6VMdMHLcEei3ud9vrLTCZg" base_Operation="_bKEUEGWNEei0cbjpkrd07g"/>
  <UML2PROV_profiles:Create xmi:id="_7hTrAHLcEei3ud9vrLTCZg" base_Operation="_bYLBgGWNEei0cbjpkrd07g"/>
  <UML2PROV_profiles:Create xmi:id="_8LAvUHLcEei3ud9vrLTCZg" base_Operation="_bYRIIGWNEei0cbjpkrd07g"/>
  <UML2PROV_profiles:Create xmi:id="_-d5X8HLcEei3ud9vrLTCZg" base_Operation="_a9yLkGWNEei0cbjpkrd07g"/>
  <UML2PROV_profiles:Create xmi:id="__DexQHLcEei3ud9vrLTCZg" base_Operation="_a95gUGWNEei0cbjpkrd07g"/>
  <UML2PROV_profiles:Create xmi:id="_AMZhIHLdEei3ud9vrLTCZg" base_Operation="_bHpSMGWNEei0cbjpkrd07g"/>
  <UML2PROV_profiles:Create xmi:id="_A6CDMHLdEei3ud9vrLTCZg" base_Operation="_bHsVgWWNEei0cbjpkrd07g"/>
  <UML2PROV_profiles:command xmi:id="_Bf3UIHLdEei3ud9vrLTCZg" base_Operation="_bHycIWWNEei0cbjpkrd07g"/>
  <UML2PROV_profiles:command xmi:id="_CGaWwHLdEei3ud9vrLTCZg" base_Operation="_bHzqQGWNEei0cbjpkrd07g"/>
  <UML2PROV_profiles:Create xmi:id="_Dm__wHLdEei3ud9vrLTCZg" base_Operation="_bLt54GWNEei0cbjpkrd07g"/>
  <UML2PROV_profiles:Create xmi:id="_EPhYUHLdEei3ud9vrLTCZg" base_Operation="_bL1OoGWNEei0cbjpkrd07g"/>
  <UML2PROV_profiles:command xmi:id="_E9RPIHLdEei3ud9vrLTCZg" base_Operation="_bM6MsGWNEei0cbjpkrd07g"/>
  <UML2PROV_profiles:command xmi:id="_Fj38IHLdEei3ud9vrLTCZg" base_Operation="_bM9QAGWNEei0cbjpkrd07g"/>
  <UML2PROV_profiles:Create xmi:id="_Gc2ykHLdEei3ud9vrLTCZg" base_Operation="_bVcdoGWNEei0cbjpkrd07g"/>
  <UML2PROV_profiles:Create xmi:id="_HMs7IHLdEei3ud9vrLTCZg" base_Operation="_bVlAgGWNEei0cbjpkrd07g"/>
  <UML2PROV_profiles:command xmi:id="_H5yqoHLdEei3ud9vrLTCZg" base_Operation="_bV3UYGWNEei0cbjpkrd07g"/>
  <UML2PROV_profiles:command xmi:id="_Ijl1kHLdEei3ud9vrLTCZg" base_Operation="_bV6XsGWNEei0cbjpkrd07g"/>
  <UML2PROV_profiles:Create xmi:id="_JjLDQHLdEei3ud9vrLTCZg" base_Operation="_bAStAGWNEei0cbjpkrd07g"/>
  <UML2PROV_profiles:Create xmi:id="_KO9yQHLdEei3ud9vrLTCZg" base_Operation="_bAbP4GWNEei0cbjpkrd07g"/>
  <UML2PROV_profiles:command xmi:id="_LJF4MHLdEei3ud9vrLTCZg" base_Operation="_bAycQGWNEei0cbjpkrd07g"/>
  <UML2PROV_profiles:command xmi:id="_LrJcYHLdEei3ud9vrLTCZg" base_Operation="_bA1fkWWNEei0cbjpkrd07g"/>
  <UML2PROV_profiles:Create xmi:id="_NFzcgHLdEei3ud9vrLTCZg" base_Operation="_bFCDEGWNEei0cbjpkrd07g"/>
  <UML2PROV_profiles:Create xmi:id="_NyBCQHLdEei3ud9vrLTCZg" base_Operation="_bFJX0GWNEei0cbjpkrd07g"/>
  <UML2PROV_profiles:command xmi:id="_OaVmgHLdEei3ud9vrLTCZg" base_Operation="_bF4-sGWNEei0cbjpkrd07g"/>
  <UML2PROV_profiles:command xmi:id="_PAb9MHLdEei3ud9vrLTCZg" base_Operation="_bF5lwWWNEei0cbjpkrd07g"/>
  <UML2PROV_profiles:Create xmi:id="_SAw6oHLdEei3ud9vrLTCZg" base_Operation="_bO-CMGWNEei0cbjpkrd07g"/>
  <UML2PROV_profiles:Create xmi:id="_Sq5cwHLdEei3ud9vrLTCZg" base_Operation="_bPkfIGWNEei0cbjpkrd07g"/>
  <UML2PROV_profiles:command xmi:id="_ThIhMHLdEei3ud9vrLTCZg" base_Operation="_bQkksGWNEei0cbjpkrd07g"/>
  <UML2PROV_profiles:command xmi:id="_UMSXAHLdEei3ud9vrLTCZg" base_Operation="_bQnoAGWNEei0cbjpkrd07g"/>
  <UML2PROV_profiles:Create xmi:id="_VgnssHLdEei3ud9vrLTCZg" base_Operation="_a504oGWNEei0cbjpkrd07g"/>
  <UML2PROV_profiles:Create xmi:id="_WJkjEHLdEei3ud9vrLTCZg" base_Operation="_a6JBsGWNEei0cbjpkrd07g"/>
  <UML2PROV_profiles:command xmi:id="_Wu42oHLdEei3ud9vrLTCZg" base_Operation="_a6x64GWNEei0cbjpkrd07g"/>
  <UML2PROV_profiles:command xmi:id="_XXiLAHLdEei3ud9vrLTCZg" base_Operation="_a64BgGWNEei0cbjpkrd07g"/>
  <UML2PROV_profiles:command xmi:id="_YS_GoHLdEei3ud9vrLTCZg" base_Operation="_a6-vMGWNEei0cbjpkrd07g"/>
  <UML2PROV_profiles:command xmi:id="_Y1ogsHLdEei3ud9vrLTCZg" base_Operation="_a7EOwGWNEei0cbjpkrd07g"/>
  <UML2PROV_profiles:modify xmi:id="_mXDMYHLfEei3ud9vrLTCZg" item="imp" base_Operation="_bGteEGWNEei0cbjpkrd07g"/>
  <UML2PROV_profiles:modify xmi:id="_owcFoHLfEei3ud9vrLTCZg" item="imp" base_Operation="_bGwhYGWNEei0cbjpkrd07g"/>
  <UML2PROV_profiles:modify xmi:id="_umFDUHLfEei3ud9vrLTCZg" item="imp" base_Operation="_bYejgGWNEei0cbjpkrd07g"/>
  <UML2PROV_profiles:modify xmi:id="_vNAgcHLfEei3ud9vrLTCZg" item="imp" base_Operation="_bYejg2WNEei0cbjpkrd07g"/>
  <UML2PROV_profiles:modify xmi:id="_vvxPQHLfEei3ud9vrLTCZg" item="imp" base_Operation="_bYfKkmWNEei0cbjpkrd07g"/>
  <UML2PROV_profiles:modify xmi:id="_wXc6UHLfEei3ud9vrLTCZg" item="imp" base_Operation="_bYfxomWNEei0cbjpkrd07g"/>
  <UML2PROV_profiles:modify xmi:id="_w2UAkHLfEei3ud9vrLTCZg" item="imp" base_Operation="_bYgYsGWNEei0cbjpkrd07g"/>
  <UML2PROV_profiles:modify xmi:id="_ypJ3MHLfEei3ud9vrLTCZg" item="imp" base_Operation="_bYgYs2WNEei0cbjpkrd07g"/>
  <UML2PROV_profiles:modify xmi:id="_zO3zYHLfEei3ud9vrLTCZg" item="imp" base_Operation="_bYg_wWWNEei0cbjpkrd07g"/>
  <UML2PROV_profiles:modify xmi:id="_0rfiYHLfEei3ud9vrLTCZg" item="imp" base_Operation="_bYaSEGWNEei0cbjpkrd07g"/>
  <UML2PROV_profiles:modify xmi:id="_6mfhMHLfEei3ud9vrLTCZg" item="imp" base_Operation="_a-umwGWNEei0cbjpkrd07g"/>
  <UML2PROV_profiles:modify xmi:id="_7V_EcHLfEei3ud9vrLTCZg" item="imp" base_Operation="_a-v04GWNEei0cbjpkrd07g"/>
  <UML2PROV_profiles:Create xmi:id="_-a0qQHLmEei3ud9vrLTCZg" base_Operation="_bUCvcGWNEei0cbjpkrd07g"/>
  <PapyrusJava:External xmi:id="_LdLUAHLsEei3ud9vrLTCZg" name="javax.swing.JDialog" base_Classifier="_bUNHgGWNEei0cbjpkrd07g"/>
  <PapyrusJava:External xmi:id="_LdOXUHLsEei3ud9vrLTCZg" name="db.Classes.Experiment" base_Classifier="_h_DKQGrwEei47fqiwvb5mw"/>
  <PapyrusJava:External xmi:id="_LdQzkHLsEei3ud9vrLTCZg" name="java.awt.Frame" base_Classifier="_L3sW4GlWEeiklvJUJNd-Aw"/>
  <PapyrusJava:External xmi:id="_LdbLoHLsEei3ud9vrLTCZg" name="javax.swing.JLabel" base_Classifier="_a8dV4GWNEei0cbjpkrd07g"/>
  <PapyrusJava:External xmi:id="_LddA0HLsEei3ud9vrLTCZg" name="javax.swing.JTextArea" base_Classifier="_a9IrUGWNEei0cbjpkrd07g"/>
  <PapyrusJava:External xmi:id="_LdeO8HLsEei3ud9vrLTCZg" name="javax.swing.JTextField" base_Classifier="_bBJooGWNEei0cbjpkrd07g"/>
  <UML2PROV_profiles:Create xmi:id="_eu0NcHOUEei3ud9vrLTCZg" base_Operation="_h_JQ4GrwEei47fqiwvb5mw"/>
  <UML2PROV_profiles:modify xmi:id="_zCHEQHRUEei3ud9vrLTCZg" item="threshold" base_Operation="_bF6M0WWNEei0cbjpkrd07g"/>
  <UML2PROV_profiles:set xmi:id="_7ZUigHXjEeiR-eKc-5ByRA" item="name" base_Operation="_rnZh4HXjEeiR-eKc-5ByRA"/>
  <UML2PROV_profiles:Create xmi:id="_1i9QoHiXEeiGl6CJxvVzPQ" base_Operation="_yHG00HiXEeiGl6CJxvVzPQ"/>
  <UML2PROV_profiles:Create xmi:id="_8-Kd8HiXEeiGl6CJxvVzPQ" base_Operation="_W_GTsGlXEeiklvJUJNd-Aw"/>
</xmi:XMI>
